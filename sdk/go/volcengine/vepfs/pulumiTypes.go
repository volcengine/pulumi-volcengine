// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vepfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type FileSystemTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// FileSystemTagInput is an input type that accepts FileSystemTagArgs and FileSystemTagOutput values.
// You can construct a concrete instance of `FileSystemTagInput` via:
//
//	FileSystemTagArgs{...}
type FileSystemTagInput interface {
	pulumi.Input

	ToFileSystemTagOutput() FileSystemTagOutput
	ToFileSystemTagOutputWithContext(context.Context) FileSystemTagOutput
}

type FileSystemTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FileSystemTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemTag)(nil)).Elem()
}

func (i FileSystemTagArgs) ToFileSystemTagOutput() FileSystemTagOutput {
	return i.ToFileSystemTagOutputWithContext(context.Background())
}

func (i FileSystemTagArgs) ToFileSystemTagOutputWithContext(ctx context.Context) FileSystemTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemTagOutput)
}

// FileSystemTagArrayInput is an input type that accepts FileSystemTagArray and FileSystemTagArrayOutput values.
// You can construct a concrete instance of `FileSystemTagArrayInput` via:
//
//	FileSystemTagArray{ FileSystemTagArgs{...} }
type FileSystemTagArrayInput interface {
	pulumi.Input

	ToFileSystemTagArrayOutput() FileSystemTagArrayOutput
	ToFileSystemTagArrayOutputWithContext(context.Context) FileSystemTagArrayOutput
}

type FileSystemTagArray []FileSystemTagInput

func (FileSystemTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemTag)(nil)).Elem()
}

func (i FileSystemTagArray) ToFileSystemTagArrayOutput() FileSystemTagArrayOutput {
	return i.ToFileSystemTagArrayOutputWithContext(context.Background())
}

func (i FileSystemTagArray) ToFileSystemTagArrayOutputWithContext(ctx context.Context) FileSystemTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemTagArrayOutput)
}

type FileSystemTagOutput struct{ *pulumi.OutputState }

func (FileSystemTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemTag)(nil)).Elem()
}

func (o FileSystemTagOutput) ToFileSystemTagOutput() FileSystemTagOutput {
	return o
}

func (o FileSystemTagOutput) ToFileSystemTagOutputWithContext(ctx context.Context) FileSystemTagOutput {
	return o
}

// The Key of Tags.
func (o FileSystemTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o FileSystemTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemTag) string { return v.Value }).(pulumi.StringOutput)
}

type FileSystemTagArrayOutput struct{ *pulumi.OutputState }

func (FileSystemTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemTag)(nil)).Elem()
}

func (o FileSystemTagArrayOutput) ToFileSystemTagArrayOutput() FileSystemTagArrayOutput {
	return o
}

func (o FileSystemTagArrayOutput) ToFileSystemTagArrayOutputWithContext(ctx context.Context) FileSystemTagArrayOutput {
	return o
}

func (o FileSystemTagArrayOutput) Index(i pulumi.IntInput) FileSystemTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileSystemTag {
		return vs[0].([]FileSystemTag)[vs[1].(int)]
	}).(FileSystemTagOutput)
}

type FileSystemsFileSystem struct {
	// The id of the account.
	AccountId string `pulumi:"accountId"`
	// The bandwidth info of the vepfs file system.
	Bandwidth int `pulumi:"bandwidth"`
	// The capacity info of the vepfs file system.
	CapacityInfo FileSystemsFileSystemCapacityInfo `pulumi:"capacityInfo"`
	// The charge status of the vepfs file system.
	ChargeStatus string `pulumi:"chargeStatus"`
	// The charge type of the vepfs file system.
	ChargeType string `pulumi:"chargeType"`
	// The create time of the vepfs file system.
	CreateTime string `pulumi:"createTime"`
	// The description of the vepfs file system.
	Description string `pulumi:"description"`
	// The expire time of the vepfs file system.
	ExpireTime string `pulumi:"expireTime"`
	// The id of the vepfs file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The Name of Vepfs File System. This field support fuzzy query.
	FileSystemName string `pulumi:"fileSystemName"`
	// The type of the vepfs file system.
	FileSystemType string `pulumi:"fileSystemType"`
	// The free time of the vepfs file system.
	FreeTime string `pulumi:"freeTime"`
	// The id of the vepfs file system.
	Id string `pulumi:"id"`
	// The last modify time of the vepfs file system.
	LastModifyTime string `pulumi:"lastModifyTime"`
	// The project of Vepfs File System.
	Project string `pulumi:"project"`
	// The protocol type of the vepfs file system.
	ProtocolType string `pulumi:"protocolType"`
	// The id of the region.
	RegionId string `pulumi:"regionId"`
	// The query status list of Vepfs File System.
	Status string `pulumi:"status"`
	// The stop service time of the vepfs file system.
	StopServiceTime string `pulumi:"stopServiceTime"`
	// The Store Type of Vepfs File System.
	StoreType string `pulumi:"storeType"`
	// The store type cn name of the vepfs file system.
	StoreTypeCn string `pulumi:"storeTypeCn"`
	// The tags of the vepfs file system.
	Tags []FileSystemsFileSystemTag `pulumi:"tags"`
	// The version info of the vepfs file system.
	Version string `pulumi:"version"`
	// The zone id of File System.
	ZoneId string `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName string `pulumi:"zoneName"`
}

// FileSystemsFileSystemInput is an input type that accepts FileSystemsFileSystemArgs and FileSystemsFileSystemOutput values.
// You can construct a concrete instance of `FileSystemsFileSystemInput` via:
//
//	FileSystemsFileSystemArgs{...}
type FileSystemsFileSystemInput interface {
	pulumi.Input

	ToFileSystemsFileSystemOutput() FileSystemsFileSystemOutput
	ToFileSystemsFileSystemOutputWithContext(context.Context) FileSystemsFileSystemOutput
}

type FileSystemsFileSystemArgs struct {
	// The id of the account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The bandwidth info of the vepfs file system.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The capacity info of the vepfs file system.
	CapacityInfo FileSystemsFileSystemCapacityInfoInput `pulumi:"capacityInfo"`
	// The charge status of the vepfs file system.
	ChargeStatus pulumi.StringInput `pulumi:"chargeStatus"`
	// The charge type of the vepfs file system.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The create time of the vepfs file system.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the vepfs file system.
	Description pulumi.StringInput `pulumi:"description"`
	// The expire time of the vepfs file system.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The id of the vepfs file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The Name of Vepfs File System. This field support fuzzy query.
	FileSystemName pulumi.StringInput `pulumi:"fileSystemName"`
	// The type of the vepfs file system.
	FileSystemType pulumi.StringInput `pulumi:"fileSystemType"`
	// The free time of the vepfs file system.
	FreeTime pulumi.StringInput `pulumi:"freeTime"`
	// The id of the vepfs file system.
	Id pulumi.StringInput `pulumi:"id"`
	// The last modify time of the vepfs file system.
	LastModifyTime pulumi.StringInput `pulumi:"lastModifyTime"`
	// The project of Vepfs File System.
	Project pulumi.StringInput `pulumi:"project"`
	// The protocol type of the vepfs file system.
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// The id of the region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The query status list of Vepfs File System.
	Status pulumi.StringInput `pulumi:"status"`
	// The stop service time of the vepfs file system.
	StopServiceTime pulumi.StringInput `pulumi:"stopServiceTime"`
	// The Store Type of Vepfs File System.
	StoreType pulumi.StringInput `pulumi:"storeType"`
	// The store type cn name of the vepfs file system.
	StoreTypeCn pulumi.StringInput `pulumi:"storeTypeCn"`
	// The tags of the vepfs file system.
	Tags FileSystemsFileSystemTagArrayInput `pulumi:"tags"`
	// The version info of the vepfs file system.
	Version pulumi.StringInput `pulumi:"version"`
	// The zone id of File System.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (FileSystemsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemsFileSystem)(nil)).Elem()
}

func (i FileSystemsFileSystemArgs) ToFileSystemsFileSystemOutput() FileSystemsFileSystemOutput {
	return i.ToFileSystemsFileSystemOutputWithContext(context.Background())
}

func (i FileSystemsFileSystemArgs) ToFileSystemsFileSystemOutputWithContext(ctx context.Context) FileSystemsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemsFileSystemOutput)
}

// FileSystemsFileSystemArrayInput is an input type that accepts FileSystemsFileSystemArray and FileSystemsFileSystemArrayOutput values.
// You can construct a concrete instance of `FileSystemsFileSystemArrayInput` via:
//
//	FileSystemsFileSystemArray{ FileSystemsFileSystemArgs{...} }
type FileSystemsFileSystemArrayInput interface {
	pulumi.Input

	ToFileSystemsFileSystemArrayOutput() FileSystemsFileSystemArrayOutput
	ToFileSystemsFileSystemArrayOutputWithContext(context.Context) FileSystemsFileSystemArrayOutput
}

type FileSystemsFileSystemArray []FileSystemsFileSystemInput

func (FileSystemsFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemsFileSystem)(nil)).Elem()
}

func (i FileSystemsFileSystemArray) ToFileSystemsFileSystemArrayOutput() FileSystemsFileSystemArrayOutput {
	return i.ToFileSystemsFileSystemArrayOutputWithContext(context.Background())
}

func (i FileSystemsFileSystemArray) ToFileSystemsFileSystemArrayOutputWithContext(ctx context.Context) FileSystemsFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemsFileSystemArrayOutput)
}

type FileSystemsFileSystemOutput struct{ *pulumi.OutputState }

func (FileSystemsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemsFileSystem)(nil)).Elem()
}

func (o FileSystemsFileSystemOutput) ToFileSystemsFileSystemOutput() FileSystemsFileSystemOutput {
	return o
}

func (o FileSystemsFileSystemOutput) ToFileSystemsFileSystemOutputWithContext(ctx context.Context) FileSystemsFileSystemOutput {
	return o
}

// The id of the account.
func (o FileSystemsFileSystemOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.AccountId }).(pulumi.StringOutput)
}

// The bandwidth info of the vepfs file system.
func (o FileSystemsFileSystemOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The capacity info of the vepfs file system.
func (o FileSystemsFileSystemOutput) CapacityInfo() FileSystemsFileSystemCapacityInfoOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) FileSystemsFileSystemCapacityInfo { return v.CapacityInfo }).(FileSystemsFileSystemCapacityInfoOutput)
}

// The charge status of the vepfs file system.
func (o FileSystemsFileSystemOutput) ChargeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.ChargeStatus }).(pulumi.StringOutput)
}

// The charge type of the vepfs file system.
func (o FileSystemsFileSystemOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The create time of the vepfs file system.
func (o FileSystemsFileSystemOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the vepfs file system.
func (o FileSystemsFileSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.Description }).(pulumi.StringOutput)
}

// The expire time of the vepfs file system.
func (o FileSystemsFileSystemOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The id of the vepfs file system.
func (o FileSystemsFileSystemOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The Name of Vepfs File System. This field support fuzzy query.
func (o FileSystemsFileSystemOutput) FileSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.FileSystemName }).(pulumi.StringOutput)
}

// The type of the vepfs file system.
func (o FileSystemsFileSystemOutput) FileSystemType() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.FileSystemType }).(pulumi.StringOutput)
}

// The free time of the vepfs file system.
func (o FileSystemsFileSystemOutput) FreeTime() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.FreeTime }).(pulumi.StringOutput)
}

// The id of the vepfs file system.
func (o FileSystemsFileSystemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.Id }).(pulumi.StringOutput)
}

// The last modify time of the vepfs file system.
func (o FileSystemsFileSystemOutput) LastModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.LastModifyTime }).(pulumi.StringOutput)
}

// The project of Vepfs File System.
func (o FileSystemsFileSystemOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.Project }).(pulumi.StringOutput)
}

// The protocol type of the vepfs file system.
func (o FileSystemsFileSystemOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// The id of the region.
func (o FileSystemsFileSystemOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.RegionId }).(pulumi.StringOutput)
}

// The query status list of Vepfs File System.
func (o FileSystemsFileSystemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.Status }).(pulumi.StringOutput)
}

// The stop service time of the vepfs file system.
func (o FileSystemsFileSystemOutput) StopServiceTime() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.StopServiceTime }).(pulumi.StringOutput)
}

// The Store Type of Vepfs File System.
func (o FileSystemsFileSystemOutput) StoreType() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.StoreType }).(pulumi.StringOutput)
}

// The store type cn name of the vepfs file system.
func (o FileSystemsFileSystemOutput) StoreTypeCn() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.StoreTypeCn }).(pulumi.StringOutput)
}

// The tags of the vepfs file system.
func (o FileSystemsFileSystemOutput) Tags() FileSystemsFileSystemTagArrayOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) []FileSystemsFileSystemTag { return v.Tags }).(FileSystemsFileSystemTagArrayOutput)
}

// The version info of the vepfs file system.
func (o FileSystemsFileSystemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.Version }).(pulumi.StringOutput)
}

// The zone id of File System.
func (o FileSystemsFileSystemOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The name of the zone.
func (o FileSystemsFileSystemOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystem) string { return v.ZoneName }).(pulumi.StringOutput)
}

type FileSystemsFileSystemArrayOutput struct{ *pulumi.OutputState }

func (FileSystemsFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemsFileSystem)(nil)).Elem()
}

func (o FileSystemsFileSystemArrayOutput) ToFileSystemsFileSystemArrayOutput() FileSystemsFileSystemArrayOutput {
	return o
}

func (o FileSystemsFileSystemArrayOutput) ToFileSystemsFileSystemArrayOutputWithContext(ctx context.Context) FileSystemsFileSystemArrayOutput {
	return o
}

func (o FileSystemsFileSystemArrayOutput) Index(i pulumi.IntInput) FileSystemsFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileSystemsFileSystem {
		return vs[0].([]FileSystemsFileSystem)[vs[1].(int)]
	}).(FileSystemsFileSystemOutput)
}

type FileSystemsFileSystemCapacityInfo struct {
	// The total size. Unit: TiB.
	TotalTib int `pulumi:"totalTib"`
	// The used size. Unit: GiB.
	UsedGib int `pulumi:"usedGib"`
}

// FileSystemsFileSystemCapacityInfoInput is an input type that accepts FileSystemsFileSystemCapacityInfoArgs and FileSystemsFileSystemCapacityInfoOutput values.
// You can construct a concrete instance of `FileSystemsFileSystemCapacityInfoInput` via:
//
//	FileSystemsFileSystemCapacityInfoArgs{...}
type FileSystemsFileSystemCapacityInfoInput interface {
	pulumi.Input

	ToFileSystemsFileSystemCapacityInfoOutput() FileSystemsFileSystemCapacityInfoOutput
	ToFileSystemsFileSystemCapacityInfoOutputWithContext(context.Context) FileSystemsFileSystemCapacityInfoOutput
}

type FileSystemsFileSystemCapacityInfoArgs struct {
	// The total size. Unit: TiB.
	TotalTib pulumi.IntInput `pulumi:"totalTib"`
	// The used size. Unit: GiB.
	UsedGib pulumi.IntInput `pulumi:"usedGib"`
}

func (FileSystemsFileSystemCapacityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemsFileSystemCapacityInfo)(nil)).Elem()
}

func (i FileSystemsFileSystemCapacityInfoArgs) ToFileSystemsFileSystemCapacityInfoOutput() FileSystemsFileSystemCapacityInfoOutput {
	return i.ToFileSystemsFileSystemCapacityInfoOutputWithContext(context.Background())
}

func (i FileSystemsFileSystemCapacityInfoArgs) ToFileSystemsFileSystemCapacityInfoOutputWithContext(ctx context.Context) FileSystemsFileSystemCapacityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemsFileSystemCapacityInfoOutput)
}

type FileSystemsFileSystemCapacityInfoOutput struct{ *pulumi.OutputState }

func (FileSystemsFileSystemCapacityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemsFileSystemCapacityInfo)(nil)).Elem()
}

func (o FileSystemsFileSystemCapacityInfoOutput) ToFileSystemsFileSystemCapacityInfoOutput() FileSystemsFileSystemCapacityInfoOutput {
	return o
}

func (o FileSystemsFileSystemCapacityInfoOutput) ToFileSystemsFileSystemCapacityInfoOutputWithContext(ctx context.Context) FileSystemsFileSystemCapacityInfoOutput {
	return o
}

// The total size. Unit: TiB.
func (o FileSystemsFileSystemCapacityInfoOutput) TotalTib() pulumi.IntOutput {
	return o.ApplyT(func(v FileSystemsFileSystemCapacityInfo) int { return v.TotalTib }).(pulumi.IntOutput)
}

// The used size. Unit: GiB.
func (o FileSystemsFileSystemCapacityInfoOutput) UsedGib() pulumi.IntOutput {
	return o.ApplyT(func(v FileSystemsFileSystemCapacityInfo) int { return v.UsedGib }).(pulumi.IntOutput)
}

type FileSystemsFileSystemTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Type of Tags.
	Type string `pulumi:"type"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// FileSystemsFileSystemTagInput is an input type that accepts FileSystemsFileSystemTagArgs and FileSystemsFileSystemTagOutput values.
// You can construct a concrete instance of `FileSystemsFileSystemTagInput` via:
//
//	FileSystemsFileSystemTagArgs{...}
type FileSystemsFileSystemTagInput interface {
	pulumi.Input

	ToFileSystemsFileSystemTagOutput() FileSystemsFileSystemTagOutput
	ToFileSystemsFileSystemTagOutputWithContext(context.Context) FileSystemsFileSystemTagOutput
}

type FileSystemsFileSystemTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Type of Tags.
	Type pulumi.StringInput `pulumi:"type"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FileSystemsFileSystemTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemsFileSystemTag)(nil)).Elem()
}

func (i FileSystemsFileSystemTagArgs) ToFileSystemsFileSystemTagOutput() FileSystemsFileSystemTagOutput {
	return i.ToFileSystemsFileSystemTagOutputWithContext(context.Background())
}

func (i FileSystemsFileSystemTagArgs) ToFileSystemsFileSystemTagOutputWithContext(ctx context.Context) FileSystemsFileSystemTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemsFileSystemTagOutput)
}

// FileSystemsFileSystemTagArrayInput is an input type that accepts FileSystemsFileSystemTagArray and FileSystemsFileSystemTagArrayOutput values.
// You can construct a concrete instance of `FileSystemsFileSystemTagArrayInput` via:
//
//	FileSystemsFileSystemTagArray{ FileSystemsFileSystemTagArgs{...} }
type FileSystemsFileSystemTagArrayInput interface {
	pulumi.Input

	ToFileSystemsFileSystemTagArrayOutput() FileSystemsFileSystemTagArrayOutput
	ToFileSystemsFileSystemTagArrayOutputWithContext(context.Context) FileSystemsFileSystemTagArrayOutput
}

type FileSystemsFileSystemTagArray []FileSystemsFileSystemTagInput

func (FileSystemsFileSystemTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemsFileSystemTag)(nil)).Elem()
}

func (i FileSystemsFileSystemTagArray) ToFileSystemsFileSystemTagArrayOutput() FileSystemsFileSystemTagArrayOutput {
	return i.ToFileSystemsFileSystemTagArrayOutputWithContext(context.Background())
}

func (i FileSystemsFileSystemTagArray) ToFileSystemsFileSystemTagArrayOutputWithContext(ctx context.Context) FileSystemsFileSystemTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemsFileSystemTagArrayOutput)
}

type FileSystemsFileSystemTagOutput struct{ *pulumi.OutputState }

func (FileSystemsFileSystemTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemsFileSystemTag)(nil)).Elem()
}

func (o FileSystemsFileSystemTagOutput) ToFileSystemsFileSystemTagOutput() FileSystemsFileSystemTagOutput {
	return o
}

func (o FileSystemsFileSystemTagOutput) ToFileSystemsFileSystemTagOutputWithContext(ctx context.Context) FileSystemsFileSystemTagOutput {
	return o
}

// The Key of Tags.
func (o FileSystemsFileSystemTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Type of Tags.
func (o FileSystemsFileSystemTagOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemTag) string { return v.Type }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o FileSystemsFileSystemTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FileSystemsFileSystemTag) string { return v.Value }).(pulumi.StringOutput)
}

type FileSystemsFileSystemTagArrayOutput struct{ *pulumi.OutputState }

func (FileSystemsFileSystemTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemsFileSystemTag)(nil)).Elem()
}

func (o FileSystemsFileSystemTagArrayOutput) ToFileSystemsFileSystemTagArrayOutput() FileSystemsFileSystemTagArrayOutput {
	return o
}

func (o FileSystemsFileSystemTagArrayOutput) ToFileSystemsFileSystemTagArrayOutputWithContext(ctx context.Context) FileSystemsFileSystemTagArrayOutput {
	return o
}

func (o FileSystemsFileSystemTagArrayOutput) Index(i pulumi.IntInput) FileSystemsFileSystemTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileSystemsFileSystemTag {
		return vs[0].([]FileSystemsFileSystemTag)[vs[1].(int)]
	}).(FileSystemsFileSystemTagOutput)
}

type FilesetsFileset struct {
	// The bandwidth Qos of the vepfs fileset.
	BandwidthQos int `pulumi:"bandwidthQos"`
	// The capacity limit of the vepfs fileset. Unit: GiB.
	CapacityLimit int `pulumi:"capacityLimit"`
	// The used capacity of the vepfs fileset. Unit: GiB.
	CapacityUsed int `pulumi:"capacityUsed"`
	// The create time of the vepfs fileset.
	CreateTime string `pulumi:"createTime"`
	// Quota for the number of files or directories. A return of 0 indicates that there is no quota limit set for the number of directories after the file.
	FileLimit int `pulumi:"fileLimit"`
	// The used file number of the vepfs fileset.
	FileUsed int `pulumi:"fileUsed"`
	// The id of Vepfs Fileset.
	FilesetId string `pulumi:"filesetId"`
	// The name of Vepfs Fileset. This field support fuzzy query.
	FilesetName string `pulumi:"filesetName"`
	// The path of Vepfs Fileset. This field support fuzzy query.
	FilesetPath string `pulumi:"filesetPath"`
	// The id of the vepfs fileset.
	Id string `pulumi:"id"`
	// The IOPS Qos of the vepfs fileset.
	IopsQos int `pulumi:"iopsQos"`
	// The max number of inode in the vepfs fileset.
	MaxInodeNum int `pulumi:"maxInodeNum"`
	// The query status list of Vepfs Fileset.
	Status string `pulumi:"status"`
}

// FilesetsFilesetInput is an input type that accepts FilesetsFilesetArgs and FilesetsFilesetOutput values.
// You can construct a concrete instance of `FilesetsFilesetInput` via:
//
//	FilesetsFilesetArgs{...}
type FilesetsFilesetInput interface {
	pulumi.Input

	ToFilesetsFilesetOutput() FilesetsFilesetOutput
	ToFilesetsFilesetOutputWithContext(context.Context) FilesetsFilesetOutput
}

type FilesetsFilesetArgs struct {
	// The bandwidth Qos of the vepfs fileset.
	BandwidthQos pulumi.IntInput `pulumi:"bandwidthQos"`
	// The capacity limit of the vepfs fileset. Unit: GiB.
	CapacityLimit pulumi.IntInput `pulumi:"capacityLimit"`
	// The used capacity of the vepfs fileset. Unit: GiB.
	CapacityUsed pulumi.IntInput `pulumi:"capacityUsed"`
	// The create time of the vepfs fileset.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Quota for the number of files or directories. A return of 0 indicates that there is no quota limit set for the number of directories after the file.
	FileLimit pulumi.IntInput `pulumi:"fileLimit"`
	// The used file number of the vepfs fileset.
	FileUsed pulumi.IntInput `pulumi:"fileUsed"`
	// The id of Vepfs Fileset.
	FilesetId pulumi.StringInput `pulumi:"filesetId"`
	// The name of Vepfs Fileset. This field support fuzzy query.
	FilesetName pulumi.StringInput `pulumi:"filesetName"`
	// The path of Vepfs Fileset. This field support fuzzy query.
	FilesetPath pulumi.StringInput `pulumi:"filesetPath"`
	// The id of the vepfs fileset.
	Id pulumi.StringInput `pulumi:"id"`
	// The IOPS Qos of the vepfs fileset.
	IopsQos pulumi.IntInput `pulumi:"iopsQos"`
	// The max number of inode in the vepfs fileset.
	MaxInodeNum pulumi.IntInput `pulumi:"maxInodeNum"`
	// The query status list of Vepfs Fileset.
	Status pulumi.StringInput `pulumi:"status"`
}

func (FilesetsFilesetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilesetsFileset)(nil)).Elem()
}

func (i FilesetsFilesetArgs) ToFilesetsFilesetOutput() FilesetsFilesetOutput {
	return i.ToFilesetsFilesetOutputWithContext(context.Background())
}

func (i FilesetsFilesetArgs) ToFilesetsFilesetOutputWithContext(ctx context.Context) FilesetsFilesetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilesetsFilesetOutput)
}

// FilesetsFilesetArrayInput is an input type that accepts FilesetsFilesetArray and FilesetsFilesetArrayOutput values.
// You can construct a concrete instance of `FilesetsFilesetArrayInput` via:
//
//	FilesetsFilesetArray{ FilesetsFilesetArgs{...} }
type FilesetsFilesetArrayInput interface {
	pulumi.Input

	ToFilesetsFilesetArrayOutput() FilesetsFilesetArrayOutput
	ToFilesetsFilesetArrayOutputWithContext(context.Context) FilesetsFilesetArrayOutput
}

type FilesetsFilesetArray []FilesetsFilesetInput

func (FilesetsFilesetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilesetsFileset)(nil)).Elem()
}

func (i FilesetsFilesetArray) ToFilesetsFilesetArrayOutput() FilesetsFilesetArrayOutput {
	return i.ToFilesetsFilesetArrayOutputWithContext(context.Background())
}

func (i FilesetsFilesetArray) ToFilesetsFilesetArrayOutputWithContext(ctx context.Context) FilesetsFilesetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilesetsFilesetArrayOutput)
}

type FilesetsFilesetOutput struct{ *pulumi.OutputState }

func (FilesetsFilesetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilesetsFileset)(nil)).Elem()
}

func (o FilesetsFilesetOutput) ToFilesetsFilesetOutput() FilesetsFilesetOutput {
	return o
}

func (o FilesetsFilesetOutput) ToFilesetsFilesetOutputWithContext(ctx context.Context) FilesetsFilesetOutput {
	return o
}

// The bandwidth Qos of the vepfs fileset.
func (o FilesetsFilesetOutput) BandwidthQos() pulumi.IntOutput {
	return o.ApplyT(func(v FilesetsFileset) int { return v.BandwidthQos }).(pulumi.IntOutput)
}

// The capacity limit of the vepfs fileset. Unit: GiB.
func (o FilesetsFilesetOutput) CapacityLimit() pulumi.IntOutput {
	return o.ApplyT(func(v FilesetsFileset) int { return v.CapacityLimit }).(pulumi.IntOutput)
}

// The used capacity of the vepfs fileset. Unit: GiB.
func (o FilesetsFilesetOutput) CapacityUsed() pulumi.IntOutput {
	return o.ApplyT(func(v FilesetsFileset) int { return v.CapacityUsed }).(pulumi.IntOutput)
}

// The create time of the vepfs fileset.
func (o FilesetsFilesetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FilesetsFileset) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Quota for the number of files or directories. A return of 0 indicates that there is no quota limit set for the number of directories after the file.
func (o FilesetsFilesetOutput) FileLimit() pulumi.IntOutput {
	return o.ApplyT(func(v FilesetsFileset) int { return v.FileLimit }).(pulumi.IntOutput)
}

// The used file number of the vepfs fileset.
func (o FilesetsFilesetOutput) FileUsed() pulumi.IntOutput {
	return o.ApplyT(func(v FilesetsFileset) int { return v.FileUsed }).(pulumi.IntOutput)
}

// The id of Vepfs Fileset.
func (o FilesetsFilesetOutput) FilesetId() pulumi.StringOutput {
	return o.ApplyT(func(v FilesetsFileset) string { return v.FilesetId }).(pulumi.StringOutput)
}

// The name of Vepfs Fileset. This field support fuzzy query.
func (o FilesetsFilesetOutput) FilesetName() pulumi.StringOutput {
	return o.ApplyT(func(v FilesetsFileset) string { return v.FilesetName }).(pulumi.StringOutput)
}

// The path of Vepfs Fileset. This field support fuzzy query.
func (o FilesetsFilesetOutput) FilesetPath() pulumi.StringOutput {
	return o.ApplyT(func(v FilesetsFileset) string { return v.FilesetPath }).(pulumi.StringOutput)
}

// The id of the vepfs fileset.
func (o FilesetsFilesetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FilesetsFileset) string { return v.Id }).(pulumi.StringOutput)
}

// The IOPS Qos of the vepfs fileset.
func (o FilesetsFilesetOutput) IopsQos() pulumi.IntOutput {
	return o.ApplyT(func(v FilesetsFileset) int { return v.IopsQos }).(pulumi.IntOutput)
}

// The max number of inode in the vepfs fileset.
func (o FilesetsFilesetOutput) MaxInodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v FilesetsFileset) int { return v.MaxInodeNum }).(pulumi.IntOutput)
}

// The query status list of Vepfs Fileset.
func (o FilesetsFilesetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v FilesetsFileset) string { return v.Status }).(pulumi.StringOutput)
}

type FilesetsFilesetArrayOutput struct{ *pulumi.OutputState }

func (FilesetsFilesetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilesetsFileset)(nil)).Elem()
}

func (o FilesetsFilesetArrayOutput) ToFilesetsFilesetArrayOutput() FilesetsFilesetArrayOutput {
	return o
}

func (o FilesetsFilesetArrayOutput) ToFilesetsFilesetArrayOutputWithContext(ctx context.Context) FilesetsFilesetArrayOutput {
	return o
}

func (o FilesetsFilesetArrayOutput) Index(i pulumi.IntInput) FilesetsFilesetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilesetsFileset {
		return vs[0].([]FilesetsFileset)[vs[1].(int)]
	}).(FilesetsFilesetOutput)
}

type MountServiceAttachFileSystem struct {
	// The account id of the vepfs file system.
	AccountId *string `pulumi:"accountId"`
	// The id of the vepfs file system.
	CustomerPath *string `pulumi:"customerPath"`
	// The id of the vepfs file system.
	FileSystemId *string `pulumi:"fileSystemId"`
	// The name of the vepfs file system.
	FileSystemName *string `pulumi:"fileSystemName"`
	// The status of the mount service.
	Status *string `pulumi:"status"`
}

// MountServiceAttachFileSystemInput is an input type that accepts MountServiceAttachFileSystemArgs and MountServiceAttachFileSystemOutput values.
// You can construct a concrete instance of `MountServiceAttachFileSystemInput` via:
//
//	MountServiceAttachFileSystemArgs{...}
type MountServiceAttachFileSystemInput interface {
	pulumi.Input

	ToMountServiceAttachFileSystemOutput() MountServiceAttachFileSystemOutput
	ToMountServiceAttachFileSystemOutputWithContext(context.Context) MountServiceAttachFileSystemOutput
}

type MountServiceAttachFileSystemArgs struct {
	// The account id of the vepfs file system.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The id of the vepfs file system.
	CustomerPath pulumi.StringPtrInput `pulumi:"customerPath"`
	// The id of the vepfs file system.
	FileSystemId pulumi.StringPtrInput `pulumi:"fileSystemId"`
	// The name of the vepfs file system.
	FileSystemName pulumi.StringPtrInput `pulumi:"fileSystemName"`
	// The status of the mount service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (MountServiceAttachFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServiceAttachFileSystem)(nil)).Elem()
}

func (i MountServiceAttachFileSystemArgs) ToMountServiceAttachFileSystemOutput() MountServiceAttachFileSystemOutput {
	return i.ToMountServiceAttachFileSystemOutputWithContext(context.Background())
}

func (i MountServiceAttachFileSystemArgs) ToMountServiceAttachFileSystemOutputWithContext(ctx context.Context) MountServiceAttachFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServiceAttachFileSystemOutput)
}

// MountServiceAttachFileSystemArrayInput is an input type that accepts MountServiceAttachFileSystemArray and MountServiceAttachFileSystemArrayOutput values.
// You can construct a concrete instance of `MountServiceAttachFileSystemArrayInput` via:
//
//	MountServiceAttachFileSystemArray{ MountServiceAttachFileSystemArgs{...} }
type MountServiceAttachFileSystemArrayInput interface {
	pulumi.Input

	ToMountServiceAttachFileSystemArrayOutput() MountServiceAttachFileSystemArrayOutput
	ToMountServiceAttachFileSystemArrayOutputWithContext(context.Context) MountServiceAttachFileSystemArrayOutput
}

type MountServiceAttachFileSystemArray []MountServiceAttachFileSystemInput

func (MountServiceAttachFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServiceAttachFileSystem)(nil)).Elem()
}

func (i MountServiceAttachFileSystemArray) ToMountServiceAttachFileSystemArrayOutput() MountServiceAttachFileSystemArrayOutput {
	return i.ToMountServiceAttachFileSystemArrayOutputWithContext(context.Background())
}

func (i MountServiceAttachFileSystemArray) ToMountServiceAttachFileSystemArrayOutputWithContext(ctx context.Context) MountServiceAttachFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServiceAttachFileSystemArrayOutput)
}

type MountServiceAttachFileSystemOutput struct{ *pulumi.OutputState }

func (MountServiceAttachFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServiceAttachFileSystem)(nil)).Elem()
}

func (o MountServiceAttachFileSystemOutput) ToMountServiceAttachFileSystemOutput() MountServiceAttachFileSystemOutput {
	return o
}

func (o MountServiceAttachFileSystemOutput) ToMountServiceAttachFileSystemOutputWithContext(ctx context.Context) MountServiceAttachFileSystemOutput {
	return o
}

// The account id of the vepfs file system.
func (o MountServiceAttachFileSystemOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountServiceAttachFileSystem) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The id of the vepfs file system.
func (o MountServiceAttachFileSystemOutput) CustomerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountServiceAttachFileSystem) *string { return v.CustomerPath }).(pulumi.StringPtrOutput)
}

// The id of the vepfs file system.
func (o MountServiceAttachFileSystemOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountServiceAttachFileSystem) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

// The name of the vepfs file system.
func (o MountServiceAttachFileSystemOutput) FileSystemName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountServiceAttachFileSystem) *string { return v.FileSystemName }).(pulumi.StringPtrOutput)
}

// The status of the mount service.
func (o MountServiceAttachFileSystemOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountServiceAttachFileSystem) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type MountServiceAttachFileSystemArrayOutput struct{ *pulumi.OutputState }

func (MountServiceAttachFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServiceAttachFileSystem)(nil)).Elem()
}

func (o MountServiceAttachFileSystemArrayOutput) ToMountServiceAttachFileSystemArrayOutput() MountServiceAttachFileSystemArrayOutput {
	return o
}

func (o MountServiceAttachFileSystemArrayOutput) ToMountServiceAttachFileSystemArrayOutputWithContext(ctx context.Context) MountServiceAttachFileSystemArrayOutput {
	return o
}

func (o MountServiceAttachFileSystemArrayOutput) Index(i pulumi.IntInput) MountServiceAttachFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountServiceAttachFileSystem {
		return vs[0].([]MountServiceAttachFileSystem)[vs[1].(int)]
	}).(MountServiceAttachFileSystemOutput)
}

type MountServiceNode struct {
	// The default password of ecs instance.
	DefaultPassword *string `pulumi:"defaultPassword"`
	// The id of ecs instance.
	NodeId *string `pulumi:"nodeId"`
}

// MountServiceNodeInput is an input type that accepts MountServiceNodeArgs and MountServiceNodeOutput values.
// You can construct a concrete instance of `MountServiceNodeInput` via:
//
//	MountServiceNodeArgs{...}
type MountServiceNodeInput interface {
	pulumi.Input

	ToMountServiceNodeOutput() MountServiceNodeOutput
	ToMountServiceNodeOutputWithContext(context.Context) MountServiceNodeOutput
}

type MountServiceNodeArgs struct {
	// The default password of ecs instance.
	DefaultPassword pulumi.StringPtrInput `pulumi:"defaultPassword"`
	// The id of ecs instance.
	NodeId pulumi.StringPtrInput `pulumi:"nodeId"`
}

func (MountServiceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServiceNode)(nil)).Elem()
}

func (i MountServiceNodeArgs) ToMountServiceNodeOutput() MountServiceNodeOutput {
	return i.ToMountServiceNodeOutputWithContext(context.Background())
}

func (i MountServiceNodeArgs) ToMountServiceNodeOutputWithContext(ctx context.Context) MountServiceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServiceNodeOutput)
}

// MountServiceNodeArrayInput is an input type that accepts MountServiceNodeArray and MountServiceNodeArrayOutput values.
// You can construct a concrete instance of `MountServiceNodeArrayInput` via:
//
//	MountServiceNodeArray{ MountServiceNodeArgs{...} }
type MountServiceNodeArrayInput interface {
	pulumi.Input

	ToMountServiceNodeArrayOutput() MountServiceNodeArrayOutput
	ToMountServiceNodeArrayOutputWithContext(context.Context) MountServiceNodeArrayOutput
}

type MountServiceNodeArray []MountServiceNodeInput

func (MountServiceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServiceNode)(nil)).Elem()
}

func (i MountServiceNodeArray) ToMountServiceNodeArrayOutput() MountServiceNodeArrayOutput {
	return i.ToMountServiceNodeArrayOutputWithContext(context.Background())
}

func (i MountServiceNodeArray) ToMountServiceNodeArrayOutputWithContext(ctx context.Context) MountServiceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServiceNodeArrayOutput)
}

type MountServiceNodeOutput struct{ *pulumi.OutputState }

func (MountServiceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServiceNode)(nil)).Elem()
}

func (o MountServiceNodeOutput) ToMountServiceNodeOutput() MountServiceNodeOutput {
	return o
}

func (o MountServiceNodeOutput) ToMountServiceNodeOutputWithContext(ctx context.Context) MountServiceNodeOutput {
	return o
}

// The default password of ecs instance.
func (o MountServiceNodeOutput) DefaultPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountServiceNode) *string { return v.DefaultPassword }).(pulumi.StringPtrOutput)
}

// The id of ecs instance.
func (o MountServiceNodeOutput) NodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountServiceNode) *string { return v.NodeId }).(pulumi.StringPtrOutput)
}

type MountServiceNodeArrayOutput struct{ *pulumi.OutputState }

func (MountServiceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServiceNode)(nil)).Elem()
}

func (o MountServiceNodeArrayOutput) ToMountServiceNodeArrayOutput() MountServiceNodeArrayOutput {
	return o
}

func (o MountServiceNodeArrayOutput) ToMountServiceNodeArrayOutputWithContext(ctx context.Context) MountServiceNodeArrayOutput {
	return o
}

func (o MountServiceNodeArrayOutput) Index(i pulumi.IntInput) MountServiceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountServiceNode {
		return vs[0].([]MountServiceNode)[vs[1].(int)]
	}).(MountServiceNodeOutput)
}

type MountServicesMountService struct {
	// The account id of the vepfs file system.
	AccountId string `pulumi:"accountId"`
	// The attached file system info of the mount service.
	AttachFileSystems []MountServicesMountServiceAttachFileSystem `pulumi:"attachFileSystems"`
	// The created time of the mount service.
	CreateTime string `pulumi:"createTime"`
	// The id of the mount service.
	Id string `pulumi:"id"`
	// The id of mount service.
	MountServiceId string `pulumi:"mountServiceId"`
	// The name of mount service. This field support fuzzy query.
	MountServiceName string `pulumi:"mountServiceName"`
	// The nodes info of the mount service.
	Nodes []MountServicesMountServiceNode `pulumi:"nodes"`
	// The project of the mount service.
	Project string `pulumi:"project"`
	// The region id of the mount service.
	RegionId string `pulumi:"regionId"`
	// The query status list of mount service.
	Status string `pulumi:"status"`
	// The subnet id of the mount service.
	SubnetId string `pulumi:"subnetId"`
	// The vpc id of the mount service.
	VpcId string `pulumi:"vpcId"`
	// The zone id of the mount service.
	ZoneId string `pulumi:"zoneId"`
	// The zone name of the mount service.
	ZoneName string `pulumi:"zoneName"`
}

// MountServicesMountServiceInput is an input type that accepts MountServicesMountServiceArgs and MountServicesMountServiceOutput values.
// You can construct a concrete instance of `MountServicesMountServiceInput` via:
//
//	MountServicesMountServiceArgs{...}
type MountServicesMountServiceInput interface {
	pulumi.Input

	ToMountServicesMountServiceOutput() MountServicesMountServiceOutput
	ToMountServicesMountServiceOutputWithContext(context.Context) MountServicesMountServiceOutput
}

type MountServicesMountServiceArgs struct {
	// The account id of the vepfs file system.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The attached file system info of the mount service.
	AttachFileSystems MountServicesMountServiceAttachFileSystemArrayInput `pulumi:"attachFileSystems"`
	// The created time of the mount service.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The id of the mount service.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of mount service.
	MountServiceId pulumi.StringInput `pulumi:"mountServiceId"`
	// The name of mount service. This field support fuzzy query.
	MountServiceName pulumi.StringInput `pulumi:"mountServiceName"`
	// The nodes info of the mount service.
	Nodes MountServicesMountServiceNodeArrayInput `pulumi:"nodes"`
	// The project of the mount service.
	Project pulumi.StringInput `pulumi:"project"`
	// The region id of the mount service.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The query status list of mount service.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet id of the mount service.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The vpc id of the mount service.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The zone id of the mount service.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The zone name of the mount service.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (MountServicesMountServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServicesMountService)(nil)).Elem()
}

func (i MountServicesMountServiceArgs) ToMountServicesMountServiceOutput() MountServicesMountServiceOutput {
	return i.ToMountServicesMountServiceOutputWithContext(context.Background())
}

func (i MountServicesMountServiceArgs) ToMountServicesMountServiceOutputWithContext(ctx context.Context) MountServicesMountServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServicesMountServiceOutput)
}

// MountServicesMountServiceArrayInput is an input type that accepts MountServicesMountServiceArray and MountServicesMountServiceArrayOutput values.
// You can construct a concrete instance of `MountServicesMountServiceArrayInput` via:
//
//	MountServicesMountServiceArray{ MountServicesMountServiceArgs{...} }
type MountServicesMountServiceArrayInput interface {
	pulumi.Input

	ToMountServicesMountServiceArrayOutput() MountServicesMountServiceArrayOutput
	ToMountServicesMountServiceArrayOutputWithContext(context.Context) MountServicesMountServiceArrayOutput
}

type MountServicesMountServiceArray []MountServicesMountServiceInput

func (MountServicesMountServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServicesMountService)(nil)).Elem()
}

func (i MountServicesMountServiceArray) ToMountServicesMountServiceArrayOutput() MountServicesMountServiceArrayOutput {
	return i.ToMountServicesMountServiceArrayOutputWithContext(context.Background())
}

func (i MountServicesMountServiceArray) ToMountServicesMountServiceArrayOutputWithContext(ctx context.Context) MountServicesMountServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServicesMountServiceArrayOutput)
}

type MountServicesMountServiceOutput struct{ *pulumi.OutputState }

func (MountServicesMountServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServicesMountService)(nil)).Elem()
}

func (o MountServicesMountServiceOutput) ToMountServicesMountServiceOutput() MountServicesMountServiceOutput {
	return o
}

func (o MountServicesMountServiceOutput) ToMountServicesMountServiceOutputWithContext(ctx context.Context) MountServicesMountServiceOutput {
	return o
}

// The account id of the vepfs file system.
func (o MountServicesMountServiceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.AccountId }).(pulumi.StringOutput)
}

// The attached file system info of the mount service.
func (o MountServicesMountServiceOutput) AttachFileSystems() MountServicesMountServiceAttachFileSystemArrayOutput {
	return o.ApplyT(func(v MountServicesMountService) []MountServicesMountServiceAttachFileSystem {
		return v.AttachFileSystems
	}).(MountServicesMountServiceAttachFileSystemArrayOutput)
}

// The created time of the mount service.
func (o MountServicesMountServiceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The id of the mount service.
func (o MountServicesMountServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.Id }).(pulumi.StringOutput)
}

// The id of mount service.
func (o MountServicesMountServiceOutput) MountServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.MountServiceId }).(pulumi.StringOutput)
}

// The name of mount service. This field support fuzzy query.
func (o MountServicesMountServiceOutput) MountServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.MountServiceName }).(pulumi.StringOutput)
}

// The nodes info of the mount service.
func (o MountServicesMountServiceOutput) Nodes() MountServicesMountServiceNodeArrayOutput {
	return o.ApplyT(func(v MountServicesMountService) []MountServicesMountServiceNode { return v.Nodes }).(MountServicesMountServiceNodeArrayOutput)
}

// The project of the mount service.
func (o MountServicesMountServiceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.Project }).(pulumi.StringOutput)
}

// The region id of the mount service.
func (o MountServicesMountServiceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.RegionId }).(pulumi.StringOutput)
}

// The query status list of mount service.
func (o MountServicesMountServiceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet id of the mount service.
func (o MountServicesMountServiceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The vpc id of the mount service.
func (o MountServicesMountServiceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.VpcId }).(pulumi.StringOutput)
}

// The zone id of the mount service.
func (o MountServicesMountServiceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The zone name of the mount service.
func (o MountServicesMountServiceOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountService) string { return v.ZoneName }).(pulumi.StringOutput)
}

type MountServicesMountServiceArrayOutput struct{ *pulumi.OutputState }

func (MountServicesMountServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServicesMountService)(nil)).Elem()
}

func (o MountServicesMountServiceArrayOutput) ToMountServicesMountServiceArrayOutput() MountServicesMountServiceArrayOutput {
	return o
}

func (o MountServicesMountServiceArrayOutput) ToMountServicesMountServiceArrayOutputWithContext(ctx context.Context) MountServicesMountServiceArrayOutput {
	return o
}

func (o MountServicesMountServiceArrayOutput) Index(i pulumi.IntInput) MountServicesMountServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountServicesMountService {
		return vs[0].([]MountServicesMountService)[vs[1].(int)]
	}).(MountServicesMountServiceOutput)
}

type MountServicesMountServiceAttachFileSystem struct {
	// The account id of the vepfs file system.
	AccountId string `pulumi:"accountId"`
	// The id of the vepfs file system.
	CustomerPath string `pulumi:"customerPath"`
	// The id of Vepfs File System.
	FileSystemId string `pulumi:"fileSystemId"`
	// The name of the vepfs file system.
	FileSystemName string `pulumi:"fileSystemName"`
	// The query status list of mount service.
	Status string `pulumi:"status"`
}

// MountServicesMountServiceAttachFileSystemInput is an input type that accepts MountServicesMountServiceAttachFileSystemArgs and MountServicesMountServiceAttachFileSystemOutput values.
// You can construct a concrete instance of `MountServicesMountServiceAttachFileSystemInput` via:
//
//	MountServicesMountServiceAttachFileSystemArgs{...}
type MountServicesMountServiceAttachFileSystemInput interface {
	pulumi.Input

	ToMountServicesMountServiceAttachFileSystemOutput() MountServicesMountServiceAttachFileSystemOutput
	ToMountServicesMountServiceAttachFileSystemOutputWithContext(context.Context) MountServicesMountServiceAttachFileSystemOutput
}

type MountServicesMountServiceAttachFileSystemArgs struct {
	// The account id of the vepfs file system.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The id of the vepfs file system.
	CustomerPath pulumi.StringInput `pulumi:"customerPath"`
	// The id of Vepfs File System.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The name of the vepfs file system.
	FileSystemName pulumi.StringInput `pulumi:"fileSystemName"`
	// The query status list of mount service.
	Status pulumi.StringInput `pulumi:"status"`
}

func (MountServicesMountServiceAttachFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServicesMountServiceAttachFileSystem)(nil)).Elem()
}

func (i MountServicesMountServiceAttachFileSystemArgs) ToMountServicesMountServiceAttachFileSystemOutput() MountServicesMountServiceAttachFileSystemOutput {
	return i.ToMountServicesMountServiceAttachFileSystemOutputWithContext(context.Background())
}

func (i MountServicesMountServiceAttachFileSystemArgs) ToMountServicesMountServiceAttachFileSystemOutputWithContext(ctx context.Context) MountServicesMountServiceAttachFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServicesMountServiceAttachFileSystemOutput)
}

// MountServicesMountServiceAttachFileSystemArrayInput is an input type that accepts MountServicesMountServiceAttachFileSystemArray and MountServicesMountServiceAttachFileSystemArrayOutput values.
// You can construct a concrete instance of `MountServicesMountServiceAttachFileSystemArrayInput` via:
//
//	MountServicesMountServiceAttachFileSystemArray{ MountServicesMountServiceAttachFileSystemArgs{...} }
type MountServicesMountServiceAttachFileSystemArrayInput interface {
	pulumi.Input

	ToMountServicesMountServiceAttachFileSystemArrayOutput() MountServicesMountServiceAttachFileSystemArrayOutput
	ToMountServicesMountServiceAttachFileSystemArrayOutputWithContext(context.Context) MountServicesMountServiceAttachFileSystemArrayOutput
}

type MountServicesMountServiceAttachFileSystemArray []MountServicesMountServiceAttachFileSystemInput

func (MountServicesMountServiceAttachFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServicesMountServiceAttachFileSystem)(nil)).Elem()
}

func (i MountServicesMountServiceAttachFileSystemArray) ToMountServicesMountServiceAttachFileSystemArrayOutput() MountServicesMountServiceAttachFileSystemArrayOutput {
	return i.ToMountServicesMountServiceAttachFileSystemArrayOutputWithContext(context.Background())
}

func (i MountServicesMountServiceAttachFileSystemArray) ToMountServicesMountServiceAttachFileSystemArrayOutputWithContext(ctx context.Context) MountServicesMountServiceAttachFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServicesMountServiceAttachFileSystemArrayOutput)
}

type MountServicesMountServiceAttachFileSystemOutput struct{ *pulumi.OutputState }

func (MountServicesMountServiceAttachFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServicesMountServiceAttachFileSystem)(nil)).Elem()
}

func (o MountServicesMountServiceAttachFileSystemOutput) ToMountServicesMountServiceAttachFileSystemOutput() MountServicesMountServiceAttachFileSystemOutput {
	return o
}

func (o MountServicesMountServiceAttachFileSystemOutput) ToMountServicesMountServiceAttachFileSystemOutputWithContext(ctx context.Context) MountServicesMountServiceAttachFileSystemOutput {
	return o
}

// The account id of the vepfs file system.
func (o MountServicesMountServiceAttachFileSystemOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountServiceAttachFileSystem) string { return v.AccountId }).(pulumi.StringOutput)
}

// The id of the vepfs file system.
func (o MountServicesMountServiceAttachFileSystemOutput) CustomerPath() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountServiceAttachFileSystem) string { return v.CustomerPath }).(pulumi.StringOutput)
}

// The id of Vepfs File System.
func (o MountServicesMountServiceAttachFileSystemOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountServiceAttachFileSystem) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The name of the vepfs file system.
func (o MountServicesMountServiceAttachFileSystemOutput) FileSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountServiceAttachFileSystem) string { return v.FileSystemName }).(pulumi.StringOutput)
}

// The query status list of mount service.
func (o MountServicesMountServiceAttachFileSystemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountServiceAttachFileSystem) string { return v.Status }).(pulumi.StringOutput)
}

type MountServicesMountServiceAttachFileSystemArrayOutput struct{ *pulumi.OutputState }

func (MountServicesMountServiceAttachFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServicesMountServiceAttachFileSystem)(nil)).Elem()
}

func (o MountServicesMountServiceAttachFileSystemArrayOutput) ToMountServicesMountServiceAttachFileSystemArrayOutput() MountServicesMountServiceAttachFileSystemArrayOutput {
	return o
}

func (o MountServicesMountServiceAttachFileSystemArrayOutput) ToMountServicesMountServiceAttachFileSystemArrayOutputWithContext(ctx context.Context) MountServicesMountServiceAttachFileSystemArrayOutput {
	return o
}

func (o MountServicesMountServiceAttachFileSystemArrayOutput) Index(i pulumi.IntInput) MountServicesMountServiceAttachFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountServicesMountServiceAttachFileSystem {
		return vs[0].([]MountServicesMountServiceAttachFileSystem)[vs[1].(int)]
	}).(MountServicesMountServiceAttachFileSystemOutput)
}

type MountServicesMountServiceNode struct {
	// The default password of ecs instance.
	DefaultPassword string `pulumi:"defaultPassword"`
	// The id of ecs instance.
	NodeId string `pulumi:"nodeId"`
}

// MountServicesMountServiceNodeInput is an input type that accepts MountServicesMountServiceNodeArgs and MountServicesMountServiceNodeOutput values.
// You can construct a concrete instance of `MountServicesMountServiceNodeInput` via:
//
//	MountServicesMountServiceNodeArgs{...}
type MountServicesMountServiceNodeInput interface {
	pulumi.Input

	ToMountServicesMountServiceNodeOutput() MountServicesMountServiceNodeOutput
	ToMountServicesMountServiceNodeOutputWithContext(context.Context) MountServicesMountServiceNodeOutput
}

type MountServicesMountServiceNodeArgs struct {
	// The default password of ecs instance.
	DefaultPassword pulumi.StringInput `pulumi:"defaultPassword"`
	// The id of ecs instance.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
}

func (MountServicesMountServiceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServicesMountServiceNode)(nil)).Elem()
}

func (i MountServicesMountServiceNodeArgs) ToMountServicesMountServiceNodeOutput() MountServicesMountServiceNodeOutput {
	return i.ToMountServicesMountServiceNodeOutputWithContext(context.Background())
}

func (i MountServicesMountServiceNodeArgs) ToMountServicesMountServiceNodeOutputWithContext(ctx context.Context) MountServicesMountServiceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServicesMountServiceNodeOutput)
}

// MountServicesMountServiceNodeArrayInput is an input type that accepts MountServicesMountServiceNodeArray and MountServicesMountServiceNodeArrayOutput values.
// You can construct a concrete instance of `MountServicesMountServiceNodeArrayInput` via:
//
//	MountServicesMountServiceNodeArray{ MountServicesMountServiceNodeArgs{...} }
type MountServicesMountServiceNodeArrayInput interface {
	pulumi.Input

	ToMountServicesMountServiceNodeArrayOutput() MountServicesMountServiceNodeArrayOutput
	ToMountServicesMountServiceNodeArrayOutputWithContext(context.Context) MountServicesMountServiceNodeArrayOutput
}

type MountServicesMountServiceNodeArray []MountServicesMountServiceNodeInput

func (MountServicesMountServiceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServicesMountServiceNode)(nil)).Elem()
}

func (i MountServicesMountServiceNodeArray) ToMountServicesMountServiceNodeArrayOutput() MountServicesMountServiceNodeArrayOutput {
	return i.ToMountServicesMountServiceNodeArrayOutputWithContext(context.Background())
}

func (i MountServicesMountServiceNodeArray) ToMountServicesMountServiceNodeArrayOutputWithContext(ctx context.Context) MountServicesMountServiceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountServicesMountServiceNodeArrayOutput)
}

type MountServicesMountServiceNodeOutput struct{ *pulumi.OutputState }

func (MountServicesMountServiceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountServicesMountServiceNode)(nil)).Elem()
}

func (o MountServicesMountServiceNodeOutput) ToMountServicesMountServiceNodeOutput() MountServicesMountServiceNodeOutput {
	return o
}

func (o MountServicesMountServiceNodeOutput) ToMountServicesMountServiceNodeOutputWithContext(ctx context.Context) MountServicesMountServiceNodeOutput {
	return o
}

// The default password of ecs instance.
func (o MountServicesMountServiceNodeOutput) DefaultPassword() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountServiceNode) string { return v.DefaultPassword }).(pulumi.StringOutput)
}

// The id of ecs instance.
func (o MountServicesMountServiceNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v MountServicesMountServiceNode) string { return v.NodeId }).(pulumi.StringOutput)
}

type MountServicesMountServiceNodeArrayOutput struct{ *pulumi.OutputState }

func (MountServicesMountServiceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountServicesMountServiceNode)(nil)).Elem()
}

func (o MountServicesMountServiceNodeArrayOutput) ToMountServicesMountServiceNodeArrayOutput() MountServicesMountServiceNodeArrayOutput {
	return o
}

func (o MountServicesMountServiceNodeArrayOutput) ToMountServicesMountServiceNodeArrayOutputWithContext(ctx context.Context) MountServicesMountServiceNodeArrayOutput {
	return o
}

func (o MountServicesMountServiceNodeArrayOutput) Index(i pulumi.IntInput) MountServicesMountServiceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountServicesMountServiceNode {
		return vs[0].([]MountServicesMountServiceNode)[vs[1].(int)]
	}).(MountServicesMountServiceNodeOutput)
}

type GetFileSystemsFileSystem struct {
	// The id of the account.
	AccountId string `pulumi:"accountId"`
	// The bandwidth info of the vepfs file system.
	Bandwidth int `pulumi:"bandwidth"`
	// The capacity info of the vepfs file system.
	CapacityInfo GetFileSystemsFileSystemCapacityInfo `pulumi:"capacityInfo"`
	// The charge status of the vepfs file system.
	ChargeStatus string `pulumi:"chargeStatus"`
	// The charge type of the vepfs file system.
	ChargeType string `pulumi:"chargeType"`
	// The create time of the vepfs file system.
	CreateTime string `pulumi:"createTime"`
	// The description of the vepfs file system.
	Description string `pulumi:"description"`
	// The expire time of the vepfs file system.
	ExpireTime string `pulumi:"expireTime"`
	// The id of the vepfs file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The Name of Vepfs File System. This field support fuzzy query.
	FileSystemName string `pulumi:"fileSystemName"`
	// The type of the vepfs file system.
	FileSystemType string `pulumi:"fileSystemType"`
	// The free time of the vepfs file system.
	FreeTime string `pulumi:"freeTime"`
	// The id of the vepfs file system.
	Id string `pulumi:"id"`
	// The last modify time of the vepfs file system.
	LastModifyTime string `pulumi:"lastModifyTime"`
	// The project of Vepfs File System.
	Project string `pulumi:"project"`
	// The protocol type of the vepfs file system.
	ProtocolType string `pulumi:"protocolType"`
	// The id of the region.
	RegionId string `pulumi:"regionId"`
	// The query status list of Vepfs File System.
	Status string `pulumi:"status"`
	// The stop service time of the vepfs file system.
	StopServiceTime string `pulumi:"stopServiceTime"`
	// The Store Type of Vepfs File System.
	StoreType string `pulumi:"storeType"`
	// The store type cn name of the vepfs file system.
	StoreTypeCn string `pulumi:"storeTypeCn"`
	// The tags of the vepfs file system.
	Tags []GetFileSystemsFileSystemTag `pulumi:"tags"`
	// The version info of the vepfs file system.
	Version string `pulumi:"version"`
	// The zone id of File System.
	ZoneId string `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName string `pulumi:"zoneName"`
}

// GetFileSystemsFileSystemInput is an input type that accepts GetFileSystemsFileSystemArgs and GetFileSystemsFileSystemOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemInput` via:
//
//	GetFileSystemsFileSystemArgs{...}
type GetFileSystemsFileSystemInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemOutput() GetFileSystemsFileSystemOutput
	ToGetFileSystemsFileSystemOutputWithContext(context.Context) GetFileSystemsFileSystemOutput
}

type GetFileSystemsFileSystemArgs struct {
	// The id of the account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The bandwidth info of the vepfs file system.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The capacity info of the vepfs file system.
	CapacityInfo GetFileSystemsFileSystemCapacityInfoInput `pulumi:"capacityInfo"`
	// The charge status of the vepfs file system.
	ChargeStatus pulumi.StringInput `pulumi:"chargeStatus"`
	// The charge type of the vepfs file system.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The create time of the vepfs file system.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the vepfs file system.
	Description pulumi.StringInput `pulumi:"description"`
	// The expire time of the vepfs file system.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The id of the vepfs file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The Name of Vepfs File System. This field support fuzzy query.
	FileSystemName pulumi.StringInput `pulumi:"fileSystemName"`
	// The type of the vepfs file system.
	FileSystemType pulumi.StringInput `pulumi:"fileSystemType"`
	// The free time of the vepfs file system.
	FreeTime pulumi.StringInput `pulumi:"freeTime"`
	// The id of the vepfs file system.
	Id pulumi.StringInput `pulumi:"id"`
	// The last modify time of the vepfs file system.
	LastModifyTime pulumi.StringInput `pulumi:"lastModifyTime"`
	// The project of Vepfs File System.
	Project pulumi.StringInput `pulumi:"project"`
	// The protocol type of the vepfs file system.
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// The id of the region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The query status list of Vepfs File System.
	Status pulumi.StringInput `pulumi:"status"`
	// The stop service time of the vepfs file system.
	StopServiceTime pulumi.StringInput `pulumi:"stopServiceTime"`
	// The Store Type of Vepfs File System.
	StoreType pulumi.StringInput `pulumi:"storeType"`
	// The store type cn name of the vepfs file system.
	StoreTypeCn pulumi.StringInput `pulumi:"storeTypeCn"`
	// The tags of the vepfs file system.
	Tags GetFileSystemsFileSystemTagArrayInput `pulumi:"tags"`
	// The version info of the vepfs file system.
	Version pulumi.StringInput `pulumi:"version"`
	// The zone id of File System.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetFileSystemsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystem)(nil)).Elem()
}

func (i GetFileSystemsFileSystemArgs) ToGetFileSystemsFileSystemOutput() GetFileSystemsFileSystemOutput {
	return i.ToGetFileSystemsFileSystemOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemArgs) ToGetFileSystemsFileSystemOutputWithContext(ctx context.Context) GetFileSystemsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemOutput)
}

// GetFileSystemsFileSystemArrayInput is an input type that accepts GetFileSystemsFileSystemArray and GetFileSystemsFileSystemArrayOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemArrayInput` via:
//
//	GetFileSystemsFileSystemArray{ GetFileSystemsFileSystemArgs{...} }
type GetFileSystemsFileSystemArrayInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemArrayOutput() GetFileSystemsFileSystemArrayOutput
	ToGetFileSystemsFileSystemArrayOutputWithContext(context.Context) GetFileSystemsFileSystemArrayOutput
}

type GetFileSystemsFileSystemArray []GetFileSystemsFileSystemInput

func (GetFileSystemsFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsFileSystem)(nil)).Elem()
}

func (i GetFileSystemsFileSystemArray) ToGetFileSystemsFileSystemArrayOutput() GetFileSystemsFileSystemArrayOutput {
	return i.ToGetFileSystemsFileSystemArrayOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemArray) ToGetFileSystemsFileSystemArrayOutputWithContext(ctx context.Context) GetFileSystemsFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemArrayOutput)
}

type GetFileSystemsFileSystemOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystem)(nil)).Elem()
}

func (o GetFileSystemsFileSystemOutput) ToGetFileSystemsFileSystemOutput() GetFileSystemsFileSystemOutput {
	return o
}

func (o GetFileSystemsFileSystemOutput) ToGetFileSystemsFileSystemOutputWithContext(ctx context.Context) GetFileSystemsFileSystemOutput {
	return o
}

// The id of the account.
func (o GetFileSystemsFileSystemOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.AccountId }).(pulumi.StringOutput)
}

// The bandwidth info of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The capacity info of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) CapacityInfo() GetFileSystemsFileSystemCapacityInfoOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) GetFileSystemsFileSystemCapacityInfo { return v.CapacityInfo }).(GetFileSystemsFileSystemCapacityInfoOutput)
}

// The charge status of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) ChargeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.ChargeStatus }).(pulumi.StringOutput)
}

// The charge type of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The create time of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.Description }).(pulumi.StringOutput)
}

// The expire time of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The id of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The Name of Vepfs File System. This field support fuzzy query.
func (o GetFileSystemsFileSystemOutput) FileSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.FileSystemName }).(pulumi.StringOutput)
}

// The type of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) FileSystemType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.FileSystemType }).(pulumi.StringOutput)
}

// The free time of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) FreeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.FreeTime }).(pulumi.StringOutput)
}

// The id of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.Id }).(pulumi.StringOutput)
}

// The last modify time of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) LastModifyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.LastModifyTime }).(pulumi.StringOutput)
}

// The project of Vepfs File System.
func (o GetFileSystemsFileSystemOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.Project }).(pulumi.StringOutput)
}

// The protocol type of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// The id of the region.
func (o GetFileSystemsFileSystemOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.RegionId }).(pulumi.StringOutput)
}

// The query status list of Vepfs File System.
func (o GetFileSystemsFileSystemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.Status }).(pulumi.StringOutput)
}

// The stop service time of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) StopServiceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.StopServiceTime }).(pulumi.StringOutput)
}

// The Store Type of Vepfs File System.
func (o GetFileSystemsFileSystemOutput) StoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.StoreType }).(pulumi.StringOutput)
}

// The store type cn name of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) StoreTypeCn() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.StoreTypeCn }).(pulumi.StringOutput)
}

// The tags of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) Tags() GetFileSystemsFileSystemTagArrayOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) []GetFileSystemsFileSystemTag { return v.Tags }).(GetFileSystemsFileSystemTagArrayOutput)
}

// The version info of the vepfs file system.
func (o GetFileSystemsFileSystemOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.Version }).(pulumi.StringOutput)
}

// The zone id of File System.
func (o GetFileSystemsFileSystemOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The name of the zone.
func (o GetFileSystemsFileSystemOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystem) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetFileSystemsFileSystemArrayOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsFileSystem)(nil)).Elem()
}

func (o GetFileSystemsFileSystemArrayOutput) ToGetFileSystemsFileSystemArrayOutput() GetFileSystemsFileSystemArrayOutput {
	return o
}

func (o GetFileSystemsFileSystemArrayOutput) ToGetFileSystemsFileSystemArrayOutputWithContext(ctx context.Context) GetFileSystemsFileSystemArrayOutput {
	return o
}

func (o GetFileSystemsFileSystemArrayOutput) Index(i pulumi.IntInput) GetFileSystemsFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileSystemsFileSystem {
		return vs[0].([]GetFileSystemsFileSystem)[vs[1].(int)]
	}).(GetFileSystemsFileSystemOutput)
}

type GetFileSystemsFileSystemCapacityInfo struct {
	// The total size. Unit: TiB.
	TotalTib int `pulumi:"totalTib"`
	// The used size. Unit: GiB.
	UsedGib int `pulumi:"usedGib"`
}

// GetFileSystemsFileSystemCapacityInfoInput is an input type that accepts GetFileSystemsFileSystemCapacityInfoArgs and GetFileSystemsFileSystemCapacityInfoOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemCapacityInfoInput` via:
//
//	GetFileSystemsFileSystemCapacityInfoArgs{...}
type GetFileSystemsFileSystemCapacityInfoInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemCapacityInfoOutput() GetFileSystemsFileSystemCapacityInfoOutput
	ToGetFileSystemsFileSystemCapacityInfoOutputWithContext(context.Context) GetFileSystemsFileSystemCapacityInfoOutput
}

type GetFileSystemsFileSystemCapacityInfoArgs struct {
	// The total size. Unit: TiB.
	TotalTib pulumi.IntInput `pulumi:"totalTib"`
	// The used size. Unit: GiB.
	UsedGib pulumi.IntInput `pulumi:"usedGib"`
}

func (GetFileSystemsFileSystemCapacityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystemCapacityInfo)(nil)).Elem()
}

func (i GetFileSystemsFileSystemCapacityInfoArgs) ToGetFileSystemsFileSystemCapacityInfoOutput() GetFileSystemsFileSystemCapacityInfoOutput {
	return i.ToGetFileSystemsFileSystemCapacityInfoOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemCapacityInfoArgs) ToGetFileSystemsFileSystemCapacityInfoOutputWithContext(ctx context.Context) GetFileSystemsFileSystemCapacityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemCapacityInfoOutput)
}

type GetFileSystemsFileSystemCapacityInfoOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemCapacityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystemCapacityInfo)(nil)).Elem()
}

func (o GetFileSystemsFileSystemCapacityInfoOutput) ToGetFileSystemsFileSystemCapacityInfoOutput() GetFileSystemsFileSystemCapacityInfoOutput {
	return o
}

func (o GetFileSystemsFileSystemCapacityInfoOutput) ToGetFileSystemsFileSystemCapacityInfoOutputWithContext(ctx context.Context) GetFileSystemsFileSystemCapacityInfoOutput {
	return o
}

// The total size. Unit: TiB.
func (o GetFileSystemsFileSystemCapacityInfoOutput) TotalTib() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemCapacityInfo) int { return v.TotalTib }).(pulumi.IntOutput)
}

// The used size. Unit: GiB.
func (o GetFileSystemsFileSystemCapacityInfoOutput) UsedGib() pulumi.IntOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemCapacityInfo) int { return v.UsedGib }).(pulumi.IntOutput)
}

type GetFileSystemsFileSystemTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Type of Tags.
	Type string `pulumi:"type"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetFileSystemsFileSystemTagInput is an input type that accepts GetFileSystemsFileSystemTagArgs and GetFileSystemsFileSystemTagOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemTagInput` via:
//
//	GetFileSystemsFileSystemTagArgs{...}
type GetFileSystemsFileSystemTagInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemTagOutput() GetFileSystemsFileSystemTagOutput
	ToGetFileSystemsFileSystemTagOutputWithContext(context.Context) GetFileSystemsFileSystemTagOutput
}

type GetFileSystemsFileSystemTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Type of Tags.
	Type pulumi.StringInput `pulumi:"type"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFileSystemsFileSystemTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystemTag)(nil)).Elem()
}

func (i GetFileSystemsFileSystemTagArgs) ToGetFileSystemsFileSystemTagOutput() GetFileSystemsFileSystemTagOutput {
	return i.ToGetFileSystemsFileSystemTagOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemTagArgs) ToGetFileSystemsFileSystemTagOutputWithContext(ctx context.Context) GetFileSystemsFileSystemTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemTagOutput)
}

// GetFileSystemsFileSystemTagArrayInput is an input type that accepts GetFileSystemsFileSystemTagArray and GetFileSystemsFileSystemTagArrayOutput values.
// You can construct a concrete instance of `GetFileSystemsFileSystemTagArrayInput` via:
//
//	GetFileSystemsFileSystemTagArray{ GetFileSystemsFileSystemTagArgs{...} }
type GetFileSystemsFileSystemTagArrayInput interface {
	pulumi.Input

	ToGetFileSystemsFileSystemTagArrayOutput() GetFileSystemsFileSystemTagArrayOutput
	ToGetFileSystemsFileSystemTagArrayOutputWithContext(context.Context) GetFileSystemsFileSystemTagArrayOutput
}

type GetFileSystemsFileSystemTagArray []GetFileSystemsFileSystemTagInput

func (GetFileSystemsFileSystemTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsFileSystemTag)(nil)).Elem()
}

func (i GetFileSystemsFileSystemTagArray) ToGetFileSystemsFileSystemTagArrayOutput() GetFileSystemsFileSystemTagArrayOutput {
	return i.ToGetFileSystemsFileSystemTagArrayOutputWithContext(context.Background())
}

func (i GetFileSystemsFileSystemTagArray) ToGetFileSystemsFileSystemTagArrayOutputWithContext(ctx context.Context) GetFileSystemsFileSystemTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemsFileSystemTagArrayOutput)
}

type GetFileSystemsFileSystemTagOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemsFileSystemTag)(nil)).Elem()
}

func (o GetFileSystemsFileSystemTagOutput) ToGetFileSystemsFileSystemTagOutput() GetFileSystemsFileSystemTagOutput {
	return o
}

func (o GetFileSystemsFileSystemTagOutput) ToGetFileSystemsFileSystemTagOutputWithContext(ctx context.Context) GetFileSystemsFileSystemTagOutput {
	return o
}

// The Key of Tags.
func (o GetFileSystemsFileSystemTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Type of Tags.
func (o GetFileSystemsFileSystemTagOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemTag) string { return v.Type }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetFileSystemsFileSystemTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemsFileSystemTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetFileSystemsFileSystemTagArrayOutput struct{ *pulumi.OutputState }

func (GetFileSystemsFileSystemTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFileSystemsFileSystemTag)(nil)).Elem()
}

func (o GetFileSystemsFileSystemTagArrayOutput) ToGetFileSystemsFileSystemTagArrayOutput() GetFileSystemsFileSystemTagArrayOutput {
	return o
}

func (o GetFileSystemsFileSystemTagArrayOutput) ToGetFileSystemsFileSystemTagArrayOutputWithContext(ctx context.Context) GetFileSystemsFileSystemTagArrayOutput {
	return o
}

func (o GetFileSystemsFileSystemTagArrayOutput) Index(i pulumi.IntInput) GetFileSystemsFileSystemTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFileSystemsFileSystemTag {
		return vs[0].([]GetFileSystemsFileSystemTag)[vs[1].(int)]
	}).(GetFileSystemsFileSystemTagOutput)
}

type GetFilesetsFileset struct {
	// The bandwidth Qos of the vepfs fileset.
	BandwidthQos int `pulumi:"bandwidthQos"`
	// The capacity limit of the vepfs fileset. Unit: GiB.
	CapacityLimit int `pulumi:"capacityLimit"`
	// The used capacity of the vepfs fileset. Unit: GiB.
	CapacityUsed int `pulumi:"capacityUsed"`
	// The create time of the vepfs fileset.
	CreateTime string `pulumi:"createTime"`
	// Quota for the number of files or directories. A return of 0 indicates that there is no quota limit set for the number of directories after the file.
	FileLimit int `pulumi:"fileLimit"`
	// The used file number of the vepfs fileset.
	FileUsed int `pulumi:"fileUsed"`
	// The id of Vepfs Fileset.
	FilesetId string `pulumi:"filesetId"`
	// The name of Vepfs Fileset. This field support fuzzy query.
	FilesetName string `pulumi:"filesetName"`
	// The path of Vepfs Fileset. This field support fuzzy query.
	FilesetPath string `pulumi:"filesetPath"`
	// The id of the vepfs fileset.
	Id string `pulumi:"id"`
	// The IOPS Qos of the vepfs fileset.
	IopsQos int `pulumi:"iopsQos"`
	// The max number of inode in the vepfs fileset.
	MaxInodeNum int `pulumi:"maxInodeNum"`
	// The query status list of Vepfs Fileset.
	Status string `pulumi:"status"`
}

// GetFilesetsFilesetInput is an input type that accepts GetFilesetsFilesetArgs and GetFilesetsFilesetOutput values.
// You can construct a concrete instance of `GetFilesetsFilesetInput` via:
//
//	GetFilesetsFilesetArgs{...}
type GetFilesetsFilesetInput interface {
	pulumi.Input

	ToGetFilesetsFilesetOutput() GetFilesetsFilesetOutput
	ToGetFilesetsFilesetOutputWithContext(context.Context) GetFilesetsFilesetOutput
}

type GetFilesetsFilesetArgs struct {
	// The bandwidth Qos of the vepfs fileset.
	BandwidthQos pulumi.IntInput `pulumi:"bandwidthQos"`
	// The capacity limit of the vepfs fileset. Unit: GiB.
	CapacityLimit pulumi.IntInput `pulumi:"capacityLimit"`
	// The used capacity of the vepfs fileset. Unit: GiB.
	CapacityUsed pulumi.IntInput `pulumi:"capacityUsed"`
	// The create time of the vepfs fileset.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Quota for the number of files or directories. A return of 0 indicates that there is no quota limit set for the number of directories after the file.
	FileLimit pulumi.IntInput `pulumi:"fileLimit"`
	// The used file number of the vepfs fileset.
	FileUsed pulumi.IntInput `pulumi:"fileUsed"`
	// The id of Vepfs Fileset.
	FilesetId pulumi.StringInput `pulumi:"filesetId"`
	// The name of Vepfs Fileset. This field support fuzzy query.
	FilesetName pulumi.StringInput `pulumi:"filesetName"`
	// The path of Vepfs Fileset. This field support fuzzy query.
	FilesetPath pulumi.StringInput `pulumi:"filesetPath"`
	// The id of the vepfs fileset.
	Id pulumi.StringInput `pulumi:"id"`
	// The IOPS Qos of the vepfs fileset.
	IopsQos pulumi.IntInput `pulumi:"iopsQos"`
	// The max number of inode in the vepfs fileset.
	MaxInodeNum pulumi.IntInput `pulumi:"maxInodeNum"`
	// The query status list of Vepfs Fileset.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetFilesetsFilesetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFilesetsFileset)(nil)).Elem()
}

func (i GetFilesetsFilesetArgs) ToGetFilesetsFilesetOutput() GetFilesetsFilesetOutput {
	return i.ToGetFilesetsFilesetOutputWithContext(context.Background())
}

func (i GetFilesetsFilesetArgs) ToGetFilesetsFilesetOutputWithContext(ctx context.Context) GetFilesetsFilesetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFilesetsFilesetOutput)
}

// GetFilesetsFilesetArrayInput is an input type that accepts GetFilesetsFilesetArray and GetFilesetsFilesetArrayOutput values.
// You can construct a concrete instance of `GetFilesetsFilesetArrayInput` via:
//
//	GetFilesetsFilesetArray{ GetFilesetsFilesetArgs{...} }
type GetFilesetsFilesetArrayInput interface {
	pulumi.Input

	ToGetFilesetsFilesetArrayOutput() GetFilesetsFilesetArrayOutput
	ToGetFilesetsFilesetArrayOutputWithContext(context.Context) GetFilesetsFilesetArrayOutput
}

type GetFilesetsFilesetArray []GetFilesetsFilesetInput

func (GetFilesetsFilesetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFilesetsFileset)(nil)).Elem()
}

func (i GetFilesetsFilesetArray) ToGetFilesetsFilesetArrayOutput() GetFilesetsFilesetArrayOutput {
	return i.ToGetFilesetsFilesetArrayOutputWithContext(context.Background())
}

func (i GetFilesetsFilesetArray) ToGetFilesetsFilesetArrayOutputWithContext(ctx context.Context) GetFilesetsFilesetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFilesetsFilesetArrayOutput)
}

type GetFilesetsFilesetOutput struct{ *pulumi.OutputState }

func (GetFilesetsFilesetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFilesetsFileset)(nil)).Elem()
}

func (o GetFilesetsFilesetOutput) ToGetFilesetsFilesetOutput() GetFilesetsFilesetOutput {
	return o
}

func (o GetFilesetsFilesetOutput) ToGetFilesetsFilesetOutputWithContext(ctx context.Context) GetFilesetsFilesetOutput {
	return o
}

// The bandwidth Qos of the vepfs fileset.
func (o GetFilesetsFilesetOutput) BandwidthQos() pulumi.IntOutput {
	return o.ApplyT(func(v GetFilesetsFileset) int { return v.BandwidthQos }).(pulumi.IntOutput)
}

// The capacity limit of the vepfs fileset. Unit: GiB.
func (o GetFilesetsFilesetOutput) CapacityLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFilesetsFileset) int { return v.CapacityLimit }).(pulumi.IntOutput)
}

// The used capacity of the vepfs fileset. Unit: GiB.
func (o GetFilesetsFilesetOutput) CapacityUsed() pulumi.IntOutput {
	return o.ApplyT(func(v GetFilesetsFileset) int { return v.CapacityUsed }).(pulumi.IntOutput)
}

// The create time of the vepfs fileset.
func (o GetFilesetsFilesetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Quota for the number of files or directories. A return of 0 indicates that there is no quota limit set for the number of directories after the file.
func (o GetFilesetsFilesetOutput) FileLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFilesetsFileset) int { return v.FileLimit }).(pulumi.IntOutput)
}

// The used file number of the vepfs fileset.
func (o GetFilesetsFilesetOutput) FileUsed() pulumi.IntOutput {
	return o.ApplyT(func(v GetFilesetsFileset) int { return v.FileUsed }).(pulumi.IntOutput)
}

// The id of Vepfs Fileset.
func (o GetFilesetsFilesetOutput) FilesetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.FilesetId }).(pulumi.StringOutput)
}

// The name of Vepfs Fileset. This field support fuzzy query.
func (o GetFilesetsFilesetOutput) FilesetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.FilesetName }).(pulumi.StringOutput)
}

// The path of Vepfs Fileset. This field support fuzzy query.
func (o GetFilesetsFilesetOutput) FilesetPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.FilesetPath }).(pulumi.StringOutput)
}

// The id of the vepfs fileset.
func (o GetFilesetsFilesetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.Id }).(pulumi.StringOutput)
}

// The IOPS Qos of the vepfs fileset.
func (o GetFilesetsFilesetOutput) IopsQos() pulumi.IntOutput {
	return o.ApplyT(func(v GetFilesetsFileset) int { return v.IopsQos }).(pulumi.IntOutput)
}

// The max number of inode in the vepfs fileset.
func (o GetFilesetsFilesetOutput) MaxInodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetFilesetsFileset) int { return v.MaxInodeNum }).(pulumi.IntOutput)
}

// The query status list of Vepfs Fileset.
func (o GetFilesetsFilesetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFilesetsFileset) string { return v.Status }).(pulumi.StringOutput)
}

type GetFilesetsFilesetArrayOutput struct{ *pulumi.OutputState }

func (GetFilesetsFilesetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFilesetsFileset)(nil)).Elem()
}

func (o GetFilesetsFilesetArrayOutput) ToGetFilesetsFilesetArrayOutput() GetFilesetsFilesetArrayOutput {
	return o
}

func (o GetFilesetsFilesetArrayOutput) ToGetFilesetsFilesetArrayOutputWithContext(ctx context.Context) GetFilesetsFilesetArrayOutput {
	return o
}

func (o GetFilesetsFilesetArrayOutput) Index(i pulumi.IntInput) GetFilesetsFilesetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFilesetsFileset {
		return vs[0].([]GetFilesetsFileset)[vs[1].(int)]
	}).(GetFilesetsFilesetOutput)
}

type GetMountServicesMountService struct {
	// The account id of the vepfs file system.
	AccountId string `pulumi:"accountId"`
	// The attached file system info of the mount service.
	AttachFileSystems []GetMountServicesMountServiceAttachFileSystem `pulumi:"attachFileSystems"`
	// The created time of the mount service.
	CreateTime string `pulumi:"createTime"`
	// The id of the mount service.
	Id string `pulumi:"id"`
	// The id of mount service.
	MountServiceId string `pulumi:"mountServiceId"`
	// The name of mount service. This field support fuzzy query.
	MountServiceName string `pulumi:"mountServiceName"`
	// The nodes info of the mount service.
	Nodes []GetMountServicesMountServiceNode `pulumi:"nodes"`
	// The project of the mount service.
	Project string `pulumi:"project"`
	// The region id of the mount service.
	RegionId string `pulumi:"regionId"`
	// The query status list of mount service.
	Status string `pulumi:"status"`
	// The subnet id of the mount service.
	SubnetId string `pulumi:"subnetId"`
	// The vpc id of the mount service.
	VpcId string `pulumi:"vpcId"`
	// The zone id of the mount service.
	ZoneId string `pulumi:"zoneId"`
	// The zone name of the mount service.
	ZoneName string `pulumi:"zoneName"`
}

// GetMountServicesMountServiceInput is an input type that accepts GetMountServicesMountServiceArgs and GetMountServicesMountServiceOutput values.
// You can construct a concrete instance of `GetMountServicesMountServiceInput` via:
//
//	GetMountServicesMountServiceArgs{...}
type GetMountServicesMountServiceInput interface {
	pulumi.Input

	ToGetMountServicesMountServiceOutput() GetMountServicesMountServiceOutput
	ToGetMountServicesMountServiceOutputWithContext(context.Context) GetMountServicesMountServiceOutput
}

type GetMountServicesMountServiceArgs struct {
	// The account id of the vepfs file system.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The attached file system info of the mount service.
	AttachFileSystems GetMountServicesMountServiceAttachFileSystemArrayInput `pulumi:"attachFileSystems"`
	// The created time of the mount service.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The id of the mount service.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of mount service.
	MountServiceId pulumi.StringInput `pulumi:"mountServiceId"`
	// The name of mount service. This field support fuzzy query.
	MountServiceName pulumi.StringInput `pulumi:"mountServiceName"`
	// The nodes info of the mount service.
	Nodes GetMountServicesMountServiceNodeArrayInput `pulumi:"nodes"`
	// The project of the mount service.
	Project pulumi.StringInput `pulumi:"project"`
	// The region id of the mount service.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The query status list of mount service.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet id of the mount service.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The vpc id of the mount service.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The zone id of the mount service.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The zone name of the mount service.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetMountServicesMountServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountServicesMountService)(nil)).Elem()
}

func (i GetMountServicesMountServiceArgs) ToGetMountServicesMountServiceOutput() GetMountServicesMountServiceOutput {
	return i.ToGetMountServicesMountServiceOutputWithContext(context.Background())
}

func (i GetMountServicesMountServiceArgs) ToGetMountServicesMountServiceOutputWithContext(ctx context.Context) GetMountServicesMountServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountServicesMountServiceOutput)
}

// GetMountServicesMountServiceArrayInput is an input type that accepts GetMountServicesMountServiceArray and GetMountServicesMountServiceArrayOutput values.
// You can construct a concrete instance of `GetMountServicesMountServiceArrayInput` via:
//
//	GetMountServicesMountServiceArray{ GetMountServicesMountServiceArgs{...} }
type GetMountServicesMountServiceArrayInput interface {
	pulumi.Input

	ToGetMountServicesMountServiceArrayOutput() GetMountServicesMountServiceArrayOutput
	ToGetMountServicesMountServiceArrayOutputWithContext(context.Context) GetMountServicesMountServiceArrayOutput
}

type GetMountServicesMountServiceArray []GetMountServicesMountServiceInput

func (GetMountServicesMountServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountServicesMountService)(nil)).Elem()
}

func (i GetMountServicesMountServiceArray) ToGetMountServicesMountServiceArrayOutput() GetMountServicesMountServiceArrayOutput {
	return i.ToGetMountServicesMountServiceArrayOutputWithContext(context.Background())
}

func (i GetMountServicesMountServiceArray) ToGetMountServicesMountServiceArrayOutputWithContext(ctx context.Context) GetMountServicesMountServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountServicesMountServiceArrayOutput)
}

type GetMountServicesMountServiceOutput struct{ *pulumi.OutputState }

func (GetMountServicesMountServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountServicesMountService)(nil)).Elem()
}

func (o GetMountServicesMountServiceOutput) ToGetMountServicesMountServiceOutput() GetMountServicesMountServiceOutput {
	return o
}

func (o GetMountServicesMountServiceOutput) ToGetMountServicesMountServiceOutputWithContext(ctx context.Context) GetMountServicesMountServiceOutput {
	return o
}

// The account id of the vepfs file system.
func (o GetMountServicesMountServiceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.AccountId }).(pulumi.StringOutput)
}

// The attached file system info of the mount service.
func (o GetMountServicesMountServiceOutput) AttachFileSystems() GetMountServicesMountServiceAttachFileSystemArrayOutput {
	return o.ApplyT(func(v GetMountServicesMountService) []GetMountServicesMountServiceAttachFileSystem {
		return v.AttachFileSystems
	}).(GetMountServicesMountServiceAttachFileSystemArrayOutput)
}

// The created time of the mount service.
func (o GetMountServicesMountServiceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The id of the mount service.
func (o GetMountServicesMountServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.Id }).(pulumi.StringOutput)
}

// The id of mount service.
func (o GetMountServicesMountServiceOutput) MountServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.MountServiceId }).(pulumi.StringOutput)
}

// The name of mount service. This field support fuzzy query.
func (o GetMountServicesMountServiceOutput) MountServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.MountServiceName }).(pulumi.StringOutput)
}

// The nodes info of the mount service.
func (o GetMountServicesMountServiceOutput) Nodes() GetMountServicesMountServiceNodeArrayOutput {
	return o.ApplyT(func(v GetMountServicesMountService) []GetMountServicesMountServiceNode { return v.Nodes }).(GetMountServicesMountServiceNodeArrayOutput)
}

// The project of the mount service.
func (o GetMountServicesMountServiceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.Project }).(pulumi.StringOutput)
}

// The region id of the mount service.
func (o GetMountServicesMountServiceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.RegionId }).(pulumi.StringOutput)
}

// The query status list of mount service.
func (o GetMountServicesMountServiceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet id of the mount service.
func (o GetMountServicesMountServiceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The vpc id of the mount service.
func (o GetMountServicesMountServiceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.VpcId }).(pulumi.StringOutput)
}

// The zone id of the mount service.
func (o GetMountServicesMountServiceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The zone name of the mount service.
func (o GetMountServicesMountServiceOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountService) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetMountServicesMountServiceArrayOutput struct{ *pulumi.OutputState }

func (GetMountServicesMountServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountServicesMountService)(nil)).Elem()
}

func (o GetMountServicesMountServiceArrayOutput) ToGetMountServicesMountServiceArrayOutput() GetMountServicesMountServiceArrayOutput {
	return o
}

func (o GetMountServicesMountServiceArrayOutput) ToGetMountServicesMountServiceArrayOutputWithContext(ctx context.Context) GetMountServicesMountServiceArrayOutput {
	return o
}

func (o GetMountServicesMountServiceArrayOutput) Index(i pulumi.IntInput) GetMountServicesMountServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMountServicesMountService {
		return vs[0].([]GetMountServicesMountService)[vs[1].(int)]
	}).(GetMountServicesMountServiceOutput)
}

type GetMountServicesMountServiceAttachFileSystem struct {
	// The account id of the vepfs file system.
	AccountId string `pulumi:"accountId"`
	// The id of the vepfs file system.
	CustomerPath string `pulumi:"customerPath"`
	// The id of Vepfs File System.
	FileSystemId string `pulumi:"fileSystemId"`
	// The name of the vepfs file system.
	FileSystemName string `pulumi:"fileSystemName"`
	// The query status list of mount service.
	Status string `pulumi:"status"`
}

// GetMountServicesMountServiceAttachFileSystemInput is an input type that accepts GetMountServicesMountServiceAttachFileSystemArgs and GetMountServicesMountServiceAttachFileSystemOutput values.
// You can construct a concrete instance of `GetMountServicesMountServiceAttachFileSystemInput` via:
//
//	GetMountServicesMountServiceAttachFileSystemArgs{...}
type GetMountServicesMountServiceAttachFileSystemInput interface {
	pulumi.Input

	ToGetMountServicesMountServiceAttachFileSystemOutput() GetMountServicesMountServiceAttachFileSystemOutput
	ToGetMountServicesMountServiceAttachFileSystemOutputWithContext(context.Context) GetMountServicesMountServiceAttachFileSystemOutput
}

type GetMountServicesMountServiceAttachFileSystemArgs struct {
	// The account id of the vepfs file system.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The id of the vepfs file system.
	CustomerPath pulumi.StringInput `pulumi:"customerPath"`
	// The id of Vepfs File System.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The name of the vepfs file system.
	FileSystemName pulumi.StringInput `pulumi:"fileSystemName"`
	// The query status list of mount service.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetMountServicesMountServiceAttachFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountServicesMountServiceAttachFileSystem)(nil)).Elem()
}

func (i GetMountServicesMountServiceAttachFileSystemArgs) ToGetMountServicesMountServiceAttachFileSystemOutput() GetMountServicesMountServiceAttachFileSystemOutput {
	return i.ToGetMountServicesMountServiceAttachFileSystemOutputWithContext(context.Background())
}

func (i GetMountServicesMountServiceAttachFileSystemArgs) ToGetMountServicesMountServiceAttachFileSystemOutputWithContext(ctx context.Context) GetMountServicesMountServiceAttachFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountServicesMountServiceAttachFileSystemOutput)
}

// GetMountServicesMountServiceAttachFileSystemArrayInput is an input type that accepts GetMountServicesMountServiceAttachFileSystemArray and GetMountServicesMountServiceAttachFileSystemArrayOutput values.
// You can construct a concrete instance of `GetMountServicesMountServiceAttachFileSystemArrayInput` via:
//
//	GetMountServicesMountServiceAttachFileSystemArray{ GetMountServicesMountServiceAttachFileSystemArgs{...} }
type GetMountServicesMountServiceAttachFileSystemArrayInput interface {
	pulumi.Input

	ToGetMountServicesMountServiceAttachFileSystemArrayOutput() GetMountServicesMountServiceAttachFileSystemArrayOutput
	ToGetMountServicesMountServiceAttachFileSystemArrayOutputWithContext(context.Context) GetMountServicesMountServiceAttachFileSystemArrayOutput
}

type GetMountServicesMountServiceAttachFileSystemArray []GetMountServicesMountServiceAttachFileSystemInput

func (GetMountServicesMountServiceAttachFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountServicesMountServiceAttachFileSystem)(nil)).Elem()
}

func (i GetMountServicesMountServiceAttachFileSystemArray) ToGetMountServicesMountServiceAttachFileSystemArrayOutput() GetMountServicesMountServiceAttachFileSystemArrayOutput {
	return i.ToGetMountServicesMountServiceAttachFileSystemArrayOutputWithContext(context.Background())
}

func (i GetMountServicesMountServiceAttachFileSystemArray) ToGetMountServicesMountServiceAttachFileSystemArrayOutputWithContext(ctx context.Context) GetMountServicesMountServiceAttachFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountServicesMountServiceAttachFileSystemArrayOutput)
}

type GetMountServicesMountServiceAttachFileSystemOutput struct{ *pulumi.OutputState }

func (GetMountServicesMountServiceAttachFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountServicesMountServiceAttachFileSystem)(nil)).Elem()
}

func (o GetMountServicesMountServiceAttachFileSystemOutput) ToGetMountServicesMountServiceAttachFileSystemOutput() GetMountServicesMountServiceAttachFileSystemOutput {
	return o
}

func (o GetMountServicesMountServiceAttachFileSystemOutput) ToGetMountServicesMountServiceAttachFileSystemOutputWithContext(ctx context.Context) GetMountServicesMountServiceAttachFileSystemOutput {
	return o
}

// The account id of the vepfs file system.
func (o GetMountServicesMountServiceAttachFileSystemOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountServiceAttachFileSystem) string { return v.AccountId }).(pulumi.StringOutput)
}

// The id of the vepfs file system.
func (o GetMountServicesMountServiceAttachFileSystemOutput) CustomerPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountServiceAttachFileSystem) string { return v.CustomerPath }).(pulumi.StringOutput)
}

// The id of Vepfs File System.
func (o GetMountServicesMountServiceAttachFileSystemOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountServiceAttachFileSystem) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The name of the vepfs file system.
func (o GetMountServicesMountServiceAttachFileSystemOutput) FileSystemName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountServiceAttachFileSystem) string { return v.FileSystemName }).(pulumi.StringOutput)
}

// The query status list of mount service.
func (o GetMountServicesMountServiceAttachFileSystemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountServiceAttachFileSystem) string { return v.Status }).(pulumi.StringOutput)
}

type GetMountServicesMountServiceAttachFileSystemArrayOutput struct{ *pulumi.OutputState }

func (GetMountServicesMountServiceAttachFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountServicesMountServiceAttachFileSystem)(nil)).Elem()
}

func (o GetMountServicesMountServiceAttachFileSystemArrayOutput) ToGetMountServicesMountServiceAttachFileSystemArrayOutput() GetMountServicesMountServiceAttachFileSystemArrayOutput {
	return o
}

func (o GetMountServicesMountServiceAttachFileSystemArrayOutput) ToGetMountServicesMountServiceAttachFileSystemArrayOutputWithContext(ctx context.Context) GetMountServicesMountServiceAttachFileSystemArrayOutput {
	return o
}

func (o GetMountServicesMountServiceAttachFileSystemArrayOutput) Index(i pulumi.IntInput) GetMountServicesMountServiceAttachFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMountServicesMountServiceAttachFileSystem {
		return vs[0].([]GetMountServicesMountServiceAttachFileSystem)[vs[1].(int)]
	}).(GetMountServicesMountServiceAttachFileSystemOutput)
}

type GetMountServicesMountServiceNode struct {
	// The default password of ecs instance.
	DefaultPassword string `pulumi:"defaultPassword"`
	// The id of ecs instance.
	NodeId string `pulumi:"nodeId"`
}

// GetMountServicesMountServiceNodeInput is an input type that accepts GetMountServicesMountServiceNodeArgs and GetMountServicesMountServiceNodeOutput values.
// You can construct a concrete instance of `GetMountServicesMountServiceNodeInput` via:
//
//	GetMountServicesMountServiceNodeArgs{...}
type GetMountServicesMountServiceNodeInput interface {
	pulumi.Input

	ToGetMountServicesMountServiceNodeOutput() GetMountServicesMountServiceNodeOutput
	ToGetMountServicesMountServiceNodeOutputWithContext(context.Context) GetMountServicesMountServiceNodeOutput
}

type GetMountServicesMountServiceNodeArgs struct {
	// The default password of ecs instance.
	DefaultPassword pulumi.StringInput `pulumi:"defaultPassword"`
	// The id of ecs instance.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
}

func (GetMountServicesMountServiceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountServicesMountServiceNode)(nil)).Elem()
}

func (i GetMountServicesMountServiceNodeArgs) ToGetMountServicesMountServiceNodeOutput() GetMountServicesMountServiceNodeOutput {
	return i.ToGetMountServicesMountServiceNodeOutputWithContext(context.Background())
}

func (i GetMountServicesMountServiceNodeArgs) ToGetMountServicesMountServiceNodeOutputWithContext(ctx context.Context) GetMountServicesMountServiceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountServicesMountServiceNodeOutput)
}

// GetMountServicesMountServiceNodeArrayInput is an input type that accepts GetMountServicesMountServiceNodeArray and GetMountServicesMountServiceNodeArrayOutput values.
// You can construct a concrete instance of `GetMountServicesMountServiceNodeArrayInput` via:
//
//	GetMountServicesMountServiceNodeArray{ GetMountServicesMountServiceNodeArgs{...} }
type GetMountServicesMountServiceNodeArrayInput interface {
	pulumi.Input

	ToGetMountServicesMountServiceNodeArrayOutput() GetMountServicesMountServiceNodeArrayOutput
	ToGetMountServicesMountServiceNodeArrayOutputWithContext(context.Context) GetMountServicesMountServiceNodeArrayOutput
}

type GetMountServicesMountServiceNodeArray []GetMountServicesMountServiceNodeInput

func (GetMountServicesMountServiceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountServicesMountServiceNode)(nil)).Elem()
}

func (i GetMountServicesMountServiceNodeArray) ToGetMountServicesMountServiceNodeArrayOutput() GetMountServicesMountServiceNodeArrayOutput {
	return i.ToGetMountServicesMountServiceNodeArrayOutputWithContext(context.Background())
}

func (i GetMountServicesMountServiceNodeArray) ToGetMountServicesMountServiceNodeArrayOutputWithContext(ctx context.Context) GetMountServicesMountServiceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMountServicesMountServiceNodeArrayOutput)
}

type GetMountServicesMountServiceNodeOutput struct{ *pulumi.OutputState }

func (GetMountServicesMountServiceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMountServicesMountServiceNode)(nil)).Elem()
}

func (o GetMountServicesMountServiceNodeOutput) ToGetMountServicesMountServiceNodeOutput() GetMountServicesMountServiceNodeOutput {
	return o
}

func (o GetMountServicesMountServiceNodeOutput) ToGetMountServicesMountServiceNodeOutputWithContext(ctx context.Context) GetMountServicesMountServiceNodeOutput {
	return o
}

// The default password of ecs instance.
func (o GetMountServicesMountServiceNodeOutput) DefaultPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountServiceNode) string { return v.DefaultPassword }).(pulumi.StringOutput)
}

// The id of ecs instance.
func (o GetMountServicesMountServiceNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMountServicesMountServiceNode) string { return v.NodeId }).(pulumi.StringOutput)
}

type GetMountServicesMountServiceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetMountServicesMountServiceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMountServicesMountServiceNode)(nil)).Elem()
}

func (o GetMountServicesMountServiceNodeArrayOutput) ToGetMountServicesMountServiceNodeArrayOutput() GetMountServicesMountServiceNodeArrayOutput {
	return o
}

func (o GetMountServicesMountServiceNodeArrayOutput) ToGetMountServicesMountServiceNodeArrayOutputWithContext(ctx context.Context) GetMountServicesMountServiceNodeArrayOutput {
	return o
}

func (o GetMountServicesMountServiceNodeArrayOutput) Index(i pulumi.IntInput) GetMountServicesMountServiceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMountServicesMountServiceNode {
		return vs[0].([]GetMountServicesMountServiceNode)[vs[1].(int)]
	}).(GetMountServicesMountServiceNodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemTagInput)(nil)).Elem(), FileSystemTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemTagArrayInput)(nil)).Elem(), FileSystemTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemsFileSystemInput)(nil)).Elem(), FileSystemsFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemsFileSystemArrayInput)(nil)).Elem(), FileSystemsFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemsFileSystemCapacityInfoInput)(nil)).Elem(), FileSystemsFileSystemCapacityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemsFileSystemTagInput)(nil)).Elem(), FileSystemsFileSystemTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemsFileSystemTagArrayInput)(nil)).Elem(), FileSystemsFileSystemTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilesetsFilesetInput)(nil)).Elem(), FilesetsFilesetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilesetsFilesetArrayInput)(nil)).Elem(), FilesetsFilesetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServiceAttachFileSystemInput)(nil)).Elem(), MountServiceAttachFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServiceAttachFileSystemArrayInput)(nil)).Elem(), MountServiceAttachFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServiceNodeInput)(nil)).Elem(), MountServiceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServiceNodeArrayInput)(nil)).Elem(), MountServiceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServicesMountServiceInput)(nil)).Elem(), MountServicesMountServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServicesMountServiceArrayInput)(nil)).Elem(), MountServicesMountServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServicesMountServiceAttachFileSystemInput)(nil)).Elem(), MountServicesMountServiceAttachFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServicesMountServiceAttachFileSystemArrayInput)(nil)).Elem(), MountServicesMountServiceAttachFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServicesMountServiceNodeInput)(nil)).Elem(), MountServicesMountServiceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MountServicesMountServiceNodeArrayInput)(nil)).Elem(), MountServicesMountServiceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemInput)(nil)).Elem(), GetFileSystemsFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemArrayInput)(nil)).Elem(), GetFileSystemsFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemCapacityInfoInput)(nil)).Elem(), GetFileSystemsFileSystemCapacityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemTagInput)(nil)).Elem(), GetFileSystemsFileSystemTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemsFileSystemTagArrayInput)(nil)).Elem(), GetFileSystemsFileSystemTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFilesetsFilesetInput)(nil)).Elem(), GetFilesetsFilesetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFilesetsFilesetArrayInput)(nil)).Elem(), GetFilesetsFilesetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountServicesMountServiceInput)(nil)).Elem(), GetMountServicesMountServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountServicesMountServiceArrayInput)(nil)).Elem(), GetMountServicesMountServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountServicesMountServiceAttachFileSystemInput)(nil)).Elem(), GetMountServicesMountServiceAttachFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountServicesMountServiceAttachFileSystemArrayInput)(nil)).Elem(), GetMountServicesMountServiceAttachFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountServicesMountServiceNodeInput)(nil)).Elem(), GetMountServicesMountServiceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMountServicesMountServiceNodeArrayInput)(nil)).Elem(), GetMountServicesMountServiceNodeArray{})
	pulumi.RegisterOutputType(FileSystemTagOutput{})
	pulumi.RegisterOutputType(FileSystemTagArrayOutput{})
	pulumi.RegisterOutputType(FileSystemsFileSystemOutput{})
	pulumi.RegisterOutputType(FileSystemsFileSystemArrayOutput{})
	pulumi.RegisterOutputType(FileSystemsFileSystemCapacityInfoOutput{})
	pulumi.RegisterOutputType(FileSystemsFileSystemTagOutput{})
	pulumi.RegisterOutputType(FileSystemsFileSystemTagArrayOutput{})
	pulumi.RegisterOutputType(FilesetsFilesetOutput{})
	pulumi.RegisterOutputType(FilesetsFilesetArrayOutput{})
	pulumi.RegisterOutputType(MountServiceAttachFileSystemOutput{})
	pulumi.RegisterOutputType(MountServiceAttachFileSystemArrayOutput{})
	pulumi.RegisterOutputType(MountServiceNodeOutput{})
	pulumi.RegisterOutputType(MountServiceNodeArrayOutput{})
	pulumi.RegisterOutputType(MountServicesMountServiceOutput{})
	pulumi.RegisterOutputType(MountServicesMountServiceArrayOutput{})
	pulumi.RegisterOutputType(MountServicesMountServiceAttachFileSystemOutput{})
	pulumi.RegisterOutputType(MountServicesMountServiceAttachFileSystemArrayOutput{})
	pulumi.RegisterOutputType(MountServicesMountServiceNodeOutput{})
	pulumi.RegisterOutputType(MountServicesMountServiceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemArrayOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemCapacityInfoOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemTagOutput{})
	pulumi.RegisterOutputType(GetFileSystemsFileSystemTagArrayOutput{})
	pulumi.RegisterOutputType(GetFilesetsFilesetOutput{})
	pulumi.RegisterOutputType(GetFilesetsFilesetArrayOutput{})
	pulumi.RegisterOutputType(GetMountServicesMountServiceOutput{})
	pulumi.RegisterOutputType(GetMountServicesMountServiceArrayOutput{})
	pulumi.RegisterOutputType(GetMountServicesMountServiceAttachFileSystemOutput{})
	pulumi.RegisterOutputType(GetMountServicesMountServiceAttachFileSystemArrayOutput{})
	pulumi.RegisterOutputType(GetMountServicesMountServiceNodeOutput{})
	pulumi.RegisterOutputType(GetMountServicesMountServiceNodeArrayOutput{})
}
