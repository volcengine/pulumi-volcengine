// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of rds mysql allowlists
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds_mysql.Allowlists(ctx, &rds_mysql.AllowlistsArgs{
//				RegionId: "cn-guilin-boe",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func Allowlists(ctx *pulumi.Context, args *AllowlistsArgs, opts ...pulumi.InvokeOption) (*AllowlistsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv AllowlistsResult
	err := ctx.Invoke("volcengine:rds_mysql/allowlists:Allowlists", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Allowlists.
type AllowlistsArgs struct {
	// Instance ID. When an InstanceId is specified, the DescribeAllowLists interface will return the whitelist bound to the specified instance.
	InstanceId *string `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The region of the allow lists.
	RegionId string `pulumi:"regionId"`
}

// A collection of values returned by Allowlists.
type AllowlistsResult struct {
	// The list of allowed list.
	AllowLists []AllowlistsAllowList `pulumi:"allowLists"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The id of the instance.
	InstanceId *string `pulumi:"instanceId"`
	OutputFile *string `pulumi:"outputFile"`
	RegionId   string  `pulumi:"regionId"`
	// The total count of Scaling Activity query.
	TotalCount int `pulumi:"totalCount"`
}

func AllowlistsOutput(ctx *pulumi.Context, args AllowlistsOutputArgs, opts ...pulumi.InvokeOption) AllowlistsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AllowlistsResult, error) {
			args := v.(AllowlistsArgs)
			r, err := Allowlists(ctx, &args, opts...)
			var s AllowlistsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AllowlistsResultOutput)
}

// A collection of arguments for invoking Allowlists.
type AllowlistsOutputArgs struct {
	// Instance ID. When an InstanceId is specified, the DescribeAllowLists interface will return the whitelist bound to the specified instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The region of the allow lists.
	RegionId pulumi.StringInput `pulumi:"regionId"`
}

func (AllowlistsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowlistsArgs)(nil)).Elem()
}

// A collection of values returned by Allowlists.
type AllowlistsResultOutput struct{ *pulumi.OutputState }

func (AllowlistsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowlistsResult)(nil)).Elem()
}

func (o AllowlistsResultOutput) ToAllowlistsResultOutput() AllowlistsResultOutput {
	return o
}

func (o AllowlistsResultOutput) ToAllowlistsResultOutputWithContext(ctx context.Context) AllowlistsResultOutput {
	return o
}

// The list of allowed list.
func (o AllowlistsResultOutput) AllowLists() AllowlistsAllowListArrayOutput {
	return o.ApplyT(func(v AllowlistsResult) []AllowlistsAllowList { return v.AllowLists }).(AllowlistsAllowListArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o AllowlistsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the instance.
func (o AllowlistsResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowlistsResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o AllowlistsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowlistsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o AllowlistsResultOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsResult) string { return v.RegionId }).(pulumi.StringOutput)
}

// The total count of Scaling Activity query.
func (o AllowlistsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AllowlistsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(AllowlistsResultOutput{})
}
