// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage rds mysql endpoint
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds_mysql.NewEndpoint(ctx, "foo", &rds_mysql.EndpointArgs{
//				AutoAddNewNodes: pulumi.Bool(true),
//				Description:     pulumi.String("tf-test-1"),
//				DnsVisibility:   pulumi.Bool(false),
//				EndpointName:    pulumi.String("tf-test-1"),
//				InstanceId:      pulumi.String("mysql-b51d37110dd1"),
//				Nodes: pulumi.StringArray{
//					pulumi.String("Primary"),
//				},
//				ReadOnlyNodeDistributionType: pulumi.String("RoundRobinAuto"),
//				ReadOnlyNodeMaxDelayTime:     pulumi.Int(30),
//				ReadOnlyNodeWeights: rds_mysql.EndpointReadOnlyNodeWeightArray{
//					&rds_mysql.EndpointReadOnlyNodeWeightArgs{
//						NodeType: pulumi.String("Primary"),
//						Weight:   pulumi.Int(100),
//					},
//				},
//				ReadWriteMode:     pulumi.String("ReadWrite"),
//				ReadWriteSpliting: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RdsMysqlEndpoint can be imported using the instance id and endpoint id, e.g.
//
// ```sh
// $ pulumi import volcengine:rds_mysql/endpoint:Endpoint default mysql-3c25f219***:mysql-3c25f219****-custom-eeb5
// ```
type Endpoint struct {
	pulumi.CustomResourceState

	// When the terminal type is a read-write terminal or a read-only terminal, support is provided for setting whether new nodes are automatically added. The values are:
	// true: Automatically add.
	// false: Do not automatically add (default).
	AutoAddNewNodes pulumi.BoolPtrOutput `pulumi:"autoAddNewNodes"`
	// The description of the endpoint.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Values:
	// false: Volcano Engine private network resolution (default).
	// true: Volcano Engine private and public network resolution.
	DnsVisibility pulumi.BoolOutput `pulumi:"dnsVisibility"`
	// Connection address, Please note that the connection address can only modify the prefix. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The id of the endpoint. Import an exist endpoint, usually for import a default endpoint generated with instance creating.
	EndpointId pulumi.StringOutput `pulumi:"endpointId"`
	// The name of the endpoint.
	EndpointName pulumi.StringOutput `pulumi:"endpointName"`
	// The id of the mysql instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// List of node IDs configured for the endpoint. Required when EndpointType is Custom. To add a master node to the terminal, there is no need to fill in the master node ID, just fill in `Primary`.
	Nodes pulumi.StringArrayOutput `pulumi:"nodes"`
	// The port. Cannot modify public network port. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Port pulumi.IntOutput `pulumi:"port"`
	// Read weight distribution mode. This parameter needs to be passed in when the read-write separation setting is true. When used as a request parameter in the CreateDBEndpoint and ModifyDBEndpoint interfaces, the value range is as follows: LoadSchedule: Load scheduling. RoundRobinCustom: Polling scheduling with custom weights. RoundRobinAuto: Polling scheduling with automatically allocated weights.
	ReadOnlyNodeDistributionType pulumi.StringOutput `pulumi:"readOnlyNodeDistributionType"`
	// The maximum delay threshold for read-only nodes, when the delay time of a read-only node exceeds this value, the read traffic will not be sent to that node, unit: seconds. Value range: 0~3600. Default value: 30.
	ReadOnlyNodeMaxDelayTime pulumi.IntOutput `pulumi:"readOnlyNodeMaxDelayTime"`
	// Customize read weight distribution, that is, pass in the read request weight of the master node and read-only nodes. It increases by 100 and the maximum value is 10000. When the ReadOnlyNodeDistributionType value is Custom, this parameter needs to be passed in.
	ReadOnlyNodeWeights EndpointReadOnlyNodeWeightArrayOutput `pulumi:"readOnlyNodeWeights"`
	// Reading and writing mode: ReadWrite, ReadOnly(Default).
	ReadWriteMode pulumi.StringPtrOutput `pulumi:"readWriteMode"`
	// Whether to enable read-write splitting. Values: true: Yes. Default value. false: No.
	ReadWriteSpliting pulumi.BoolOutput `pulumi:"readWriteSpliting"`
}

// NewEndpoint registers a new resource with the given unique name, arguments, and options.
func NewEndpoint(ctx *pulumi.Context,
	name string, args *EndpointArgs, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Nodes == nil {
		return nil, errors.New("invalid value for required argument 'Nodes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Endpoint
	err := ctx.RegisterResource("volcengine:rds_mysql/endpoint:Endpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpoint gets an existing Endpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointState, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	var resource Endpoint
	err := ctx.ReadResource("volcengine:rds_mysql/endpoint:Endpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Endpoint resources.
type endpointState struct {
	// When the terminal type is a read-write terminal or a read-only terminal, support is provided for setting whether new nodes are automatically added. The values are:
	// true: Automatically add.
	// false: Do not automatically add (default).
	AutoAddNewNodes *bool `pulumi:"autoAddNewNodes"`
	// The description of the endpoint.
	Description *string `pulumi:"description"`
	// Values:
	// false: Volcano Engine private network resolution (default).
	// true: Volcano Engine private and public network resolution.
	DnsVisibility *bool `pulumi:"dnsVisibility"`
	// Connection address, Please note that the connection address can only modify the prefix. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Domain *string `pulumi:"domain"`
	// The id of the endpoint. Import an exist endpoint, usually for import a default endpoint generated with instance creating.
	EndpointId *string `pulumi:"endpointId"`
	// The name of the endpoint.
	EndpointName *string `pulumi:"endpointName"`
	// The id of the mysql instance.
	InstanceId *string `pulumi:"instanceId"`
	// List of node IDs configured for the endpoint. Required when EndpointType is Custom. To add a master node to the terminal, there is no need to fill in the master node ID, just fill in `Primary`.
	Nodes []string `pulumi:"nodes"`
	// The port. Cannot modify public network port. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Port *int `pulumi:"port"`
	// Read weight distribution mode. This parameter needs to be passed in when the read-write separation setting is true. When used as a request parameter in the CreateDBEndpoint and ModifyDBEndpoint interfaces, the value range is as follows: LoadSchedule: Load scheduling. RoundRobinCustom: Polling scheduling with custom weights. RoundRobinAuto: Polling scheduling with automatically allocated weights.
	ReadOnlyNodeDistributionType *string `pulumi:"readOnlyNodeDistributionType"`
	// The maximum delay threshold for read-only nodes, when the delay time of a read-only node exceeds this value, the read traffic will not be sent to that node, unit: seconds. Value range: 0~3600. Default value: 30.
	ReadOnlyNodeMaxDelayTime *int `pulumi:"readOnlyNodeMaxDelayTime"`
	// Customize read weight distribution, that is, pass in the read request weight of the master node and read-only nodes. It increases by 100 and the maximum value is 10000. When the ReadOnlyNodeDistributionType value is Custom, this parameter needs to be passed in.
	ReadOnlyNodeWeights []EndpointReadOnlyNodeWeight `pulumi:"readOnlyNodeWeights"`
	// Reading and writing mode: ReadWrite, ReadOnly(Default).
	ReadWriteMode *string `pulumi:"readWriteMode"`
	// Whether to enable read-write splitting. Values: true: Yes. Default value. false: No.
	ReadWriteSpliting *bool `pulumi:"readWriteSpliting"`
}

type EndpointState struct {
	// When the terminal type is a read-write terminal or a read-only terminal, support is provided for setting whether new nodes are automatically added. The values are:
	// true: Automatically add.
	// false: Do not automatically add (default).
	AutoAddNewNodes pulumi.BoolPtrInput
	// The description of the endpoint.
	Description pulumi.StringPtrInput
	// Values:
	// false: Volcano Engine private network resolution (default).
	// true: Volcano Engine private and public network resolution.
	DnsVisibility pulumi.BoolPtrInput
	// Connection address, Please note that the connection address can only modify the prefix. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Domain pulumi.StringPtrInput
	// The id of the endpoint. Import an exist endpoint, usually for import a default endpoint generated with instance creating.
	EndpointId pulumi.StringPtrInput
	// The name of the endpoint.
	EndpointName pulumi.StringPtrInput
	// The id of the mysql instance.
	InstanceId pulumi.StringPtrInput
	// List of node IDs configured for the endpoint. Required when EndpointType is Custom. To add a master node to the terminal, there is no need to fill in the master node ID, just fill in `Primary`.
	Nodes pulumi.StringArrayInput
	// The port. Cannot modify public network port. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Port pulumi.IntPtrInput
	// Read weight distribution mode. This parameter needs to be passed in when the read-write separation setting is true. When used as a request parameter in the CreateDBEndpoint and ModifyDBEndpoint interfaces, the value range is as follows: LoadSchedule: Load scheduling. RoundRobinCustom: Polling scheduling with custom weights. RoundRobinAuto: Polling scheduling with automatically allocated weights.
	ReadOnlyNodeDistributionType pulumi.StringPtrInput
	// The maximum delay threshold for read-only nodes, when the delay time of a read-only node exceeds this value, the read traffic will not be sent to that node, unit: seconds. Value range: 0~3600. Default value: 30.
	ReadOnlyNodeMaxDelayTime pulumi.IntPtrInput
	// Customize read weight distribution, that is, pass in the read request weight of the master node and read-only nodes. It increases by 100 and the maximum value is 10000. When the ReadOnlyNodeDistributionType value is Custom, this parameter needs to be passed in.
	ReadOnlyNodeWeights EndpointReadOnlyNodeWeightArrayInput
	// Reading and writing mode: ReadWrite, ReadOnly(Default).
	ReadWriteMode pulumi.StringPtrInput
	// Whether to enable read-write splitting. Values: true: Yes. Default value. false: No.
	ReadWriteSpliting pulumi.BoolPtrInput
}

func (EndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointState)(nil)).Elem()
}

type endpointArgs struct {
	// When the terminal type is a read-write terminal or a read-only terminal, support is provided for setting whether new nodes are automatically added. The values are:
	// true: Automatically add.
	// false: Do not automatically add (default).
	AutoAddNewNodes *bool `pulumi:"autoAddNewNodes"`
	// The description of the endpoint.
	Description *string `pulumi:"description"`
	// Values:
	// false: Volcano Engine private network resolution (default).
	// true: Volcano Engine private and public network resolution.
	DnsVisibility *bool `pulumi:"dnsVisibility"`
	// Connection address, Please note that the connection address can only modify the prefix. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Domain *string `pulumi:"domain"`
	// The id of the endpoint. Import an exist endpoint, usually for import a default endpoint generated with instance creating.
	EndpointId *string `pulumi:"endpointId"`
	// The name of the endpoint.
	EndpointName *string `pulumi:"endpointName"`
	// The id of the mysql instance.
	InstanceId string `pulumi:"instanceId"`
	// List of node IDs configured for the endpoint. Required when EndpointType is Custom. To add a master node to the terminal, there is no need to fill in the master node ID, just fill in `Primary`.
	Nodes []string `pulumi:"nodes"`
	// The port. Cannot modify public network port. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Port *int `pulumi:"port"`
	// Read weight distribution mode. This parameter needs to be passed in when the read-write separation setting is true. When used as a request parameter in the CreateDBEndpoint and ModifyDBEndpoint interfaces, the value range is as follows: LoadSchedule: Load scheduling. RoundRobinCustom: Polling scheduling with custom weights. RoundRobinAuto: Polling scheduling with automatically allocated weights.
	ReadOnlyNodeDistributionType *string `pulumi:"readOnlyNodeDistributionType"`
	// The maximum delay threshold for read-only nodes, when the delay time of a read-only node exceeds this value, the read traffic will not be sent to that node, unit: seconds. Value range: 0~3600. Default value: 30.
	ReadOnlyNodeMaxDelayTime *int `pulumi:"readOnlyNodeMaxDelayTime"`
	// Customize read weight distribution, that is, pass in the read request weight of the master node and read-only nodes. It increases by 100 and the maximum value is 10000. When the ReadOnlyNodeDistributionType value is Custom, this parameter needs to be passed in.
	ReadOnlyNodeWeights []EndpointReadOnlyNodeWeight `pulumi:"readOnlyNodeWeights"`
	// Reading and writing mode: ReadWrite, ReadOnly(Default).
	ReadWriteMode *string `pulumi:"readWriteMode"`
	// Whether to enable read-write splitting. Values: true: Yes. Default value. false: No.
	ReadWriteSpliting *bool `pulumi:"readWriteSpliting"`
}

// The set of arguments for constructing a Endpoint resource.
type EndpointArgs struct {
	// When the terminal type is a read-write terminal or a read-only terminal, support is provided for setting whether new nodes are automatically added. The values are:
	// true: Automatically add.
	// false: Do not automatically add (default).
	AutoAddNewNodes pulumi.BoolPtrInput
	// The description of the endpoint.
	Description pulumi.StringPtrInput
	// Values:
	// false: Volcano Engine private network resolution (default).
	// true: Volcano Engine private and public network resolution.
	DnsVisibility pulumi.BoolPtrInput
	// Connection address, Please note that the connection address can only modify the prefix. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Domain pulumi.StringPtrInput
	// The id of the endpoint. Import an exist endpoint, usually for import a default endpoint generated with instance creating.
	EndpointId pulumi.StringPtrInput
	// The name of the endpoint.
	EndpointName pulumi.StringPtrInput
	// The id of the mysql instance.
	InstanceId pulumi.StringInput
	// List of node IDs configured for the endpoint. Required when EndpointType is Custom. To add a master node to the terminal, there is no need to fill in the master node ID, just fill in `Primary`.
	Nodes pulumi.StringArrayInput
	// The port. Cannot modify public network port. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
	Port pulumi.IntPtrInput
	// Read weight distribution mode. This parameter needs to be passed in when the read-write separation setting is true. When used as a request parameter in the CreateDBEndpoint and ModifyDBEndpoint interfaces, the value range is as follows: LoadSchedule: Load scheduling. RoundRobinCustom: Polling scheduling with custom weights. RoundRobinAuto: Polling scheduling with automatically allocated weights.
	ReadOnlyNodeDistributionType pulumi.StringPtrInput
	// The maximum delay threshold for read-only nodes, when the delay time of a read-only node exceeds this value, the read traffic will not be sent to that node, unit: seconds. Value range: 0~3600. Default value: 30.
	ReadOnlyNodeMaxDelayTime pulumi.IntPtrInput
	// Customize read weight distribution, that is, pass in the read request weight of the master node and read-only nodes. It increases by 100 and the maximum value is 10000. When the ReadOnlyNodeDistributionType value is Custom, this parameter needs to be passed in.
	ReadOnlyNodeWeights EndpointReadOnlyNodeWeightArrayInput
	// Reading and writing mode: ReadWrite, ReadOnly(Default).
	ReadWriteMode pulumi.StringPtrInput
	// Whether to enable read-write splitting. Values: true: Yes. Default value. false: No.
	ReadWriteSpliting pulumi.BoolPtrInput
}

func (EndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointArgs)(nil)).Elem()
}

type EndpointInput interface {
	pulumi.Input

	ToEndpointOutput() EndpointOutput
	ToEndpointOutputWithContext(ctx context.Context) EndpointOutput
}

func (*Endpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**Endpoint)(nil)).Elem()
}

func (i *Endpoint) ToEndpointOutput() EndpointOutput {
	return i.ToEndpointOutputWithContext(context.Background())
}

func (i *Endpoint) ToEndpointOutputWithContext(ctx context.Context) EndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointOutput)
}

// EndpointArrayInput is an input type that accepts EndpointArray and EndpointArrayOutput values.
// You can construct a concrete instance of `EndpointArrayInput` via:
//
//	EndpointArray{ EndpointArgs{...} }
type EndpointArrayInput interface {
	pulumi.Input

	ToEndpointArrayOutput() EndpointArrayOutput
	ToEndpointArrayOutputWithContext(context.Context) EndpointArrayOutput
}

type EndpointArray []EndpointInput

func (EndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Endpoint)(nil)).Elem()
}

func (i EndpointArray) ToEndpointArrayOutput() EndpointArrayOutput {
	return i.ToEndpointArrayOutputWithContext(context.Background())
}

func (i EndpointArray) ToEndpointArrayOutputWithContext(ctx context.Context) EndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointArrayOutput)
}

// EndpointMapInput is an input type that accepts EndpointMap and EndpointMapOutput values.
// You can construct a concrete instance of `EndpointMapInput` via:
//
//	EndpointMap{ "key": EndpointArgs{...} }
type EndpointMapInput interface {
	pulumi.Input

	ToEndpointMapOutput() EndpointMapOutput
	ToEndpointMapOutputWithContext(context.Context) EndpointMapOutput
}

type EndpointMap map[string]EndpointInput

func (EndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Endpoint)(nil)).Elem()
}

func (i EndpointMap) ToEndpointMapOutput() EndpointMapOutput {
	return i.ToEndpointMapOutputWithContext(context.Background())
}

func (i EndpointMap) ToEndpointMapOutputWithContext(ctx context.Context) EndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointMapOutput)
}

type EndpointOutput struct{ *pulumi.OutputState }

func (EndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Endpoint)(nil)).Elem()
}

func (o EndpointOutput) ToEndpointOutput() EndpointOutput {
	return o
}

func (o EndpointOutput) ToEndpointOutputWithContext(ctx context.Context) EndpointOutput {
	return o
}

// When the terminal type is a read-write terminal or a read-only terminal, support is provided for setting whether new nodes are automatically added. The values are:
// true: Automatically add.
// false: Do not automatically add (default).
func (o EndpointOutput) AutoAddNewNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.BoolPtrOutput { return v.AutoAddNewNodes }).(pulumi.BoolPtrOutput)
}

// The description of the endpoint.
func (o EndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Values:
// false: Volcano Engine private network resolution (default).
// true: Volcano Engine private and public network resolution.
func (o EndpointOutput) DnsVisibility() pulumi.BoolOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.BoolOutput { return v.DnsVisibility }).(pulumi.BoolOutput)
}

// Connection address, Please note that the connection address can only modify the prefix. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
func (o EndpointOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// The id of the endpoint. Import an exist endpoint, usually for import a default endpoint generated with instance creating.
func (o EndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.EndpointId }).(pulumi.StringOutput)
}

// The name of the endpoint.
func (o EndpointOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.EndpointName }).(pulumi.StringOutput)
}

// The id of the mysql instance.
func (o EndpointOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// List of node IDs configured for the endpoint. Required when EndpointType is Custom. To add a master node to the terminal, there is no need to fill in the master node ID, just fill in `Primary`.
func (o EndpointOutput) Nodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringArrayOutput { return v.Nodes }).(pulumi.StringArrayOutput)
}

// The port. Cannot modify public network port. In one call, it is not possible to modify both the connection address prefix and the port at the same time.
func (o EndpointOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Read weight distribution mode. This parameter needs to be passed in when the read-write separation setting is true. When used as a request parameter in the CreateDBEndpoint and ModifyDBEndpoint interfaces, the value range is as follows: LoadSchedule: Load scheduling. RoundRobinCustom: Polling scheduling with custom weights. RoundRobinAuto: Polling scheduling with automatically allocated weights.
func (o EndpointOutput) ReadOnlyNodeDistributionType() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.ReadOnlyNodeDistributionType }).(pulumi.StringOutput)
}

// The maximum delay threshold for read-only nodes, when the delay time of a read-only node exceeds this value, the read traffic will not be sent to that node, unit: seconds. Value range: 0~3600. Default value: 30.
func (o EndpointOutput) ReadOnlyNodeMaxDelayTime() pulumi.IntOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.IntOutput { return v.ReadOnlyNodeMaxDelayTime }).(pulumi.IntOutput)
}

// Customize read weight distribution, that is, pass in the read request weight of the master node and read-only nodes. It increases by 100 and the maximum value is 10000. When the ReadOnlyNodeDistributionType value is Custom, this parameter needs to be passed in.
func (o EndpointOutput) ReadOnlyNodeWeights() EndpointReadOnlyNodeWeightArrayOutput {
	return o.ApplyT(func(v *Endpoint) EndpointReadOnlyNodeWeightArrayOutput { return v.ReadOnlyNodeWeights }).(EndpointReadOnlyNodeWeightArrayOutput)
}

// Reading and writing mode: ReadWrite, ReadOnly(Default).
func (o EndpointOutput) ReadWriteMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringPtrOutput { return v.ReadWriteMode }).(pulumi.StringPtrOutput)
}

// Whether to enable read-write splitting. Values: true: Yes. Default value. false: No.
func (o EndpointOutput) ReadWriteSpliting() pulumi.BoolOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.BoolOutput { return v.ReadWriteSpliting }).(pulumi.BoolOutput)
}

type EndpointArrayOutput struct{ *pulumi.OutputState }

func (EndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Endpoint)(nil)).Elem()
}

func (o EndpointArrayOutput) ToEndpointArrayOutput() EndpointArrayOutput {
	return o
}

func (o EndpointArrayOutput) ToEndpointArrayOutputWithContext(ctx context.Context) EndpointArrayOutput {
	return o
}

func (o EndpointArrayOutput) Index(i pulumi.IntInput) EndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Endpoint {
		return vs[0].([]*Endpoint)[vs[1].(int)]
	}).(EndpointOutput)
}

type EndpointMapOutput struct{ *pulumi.OutputState }

func (EndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Endpoint)(nil)).Elem()
}

func (o EndpointMapOutput) ToEndpointMapOutput() EndpointMapOutput {
	return o
}

func (o EndpointMapOutput) ToEndpointMapOutputWithContext(ctx context.Context) EndpointMapOutput {
	return o
}

func (o EndpointMapOutput) MapIndex(k pulumi.StringInput) EndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Endpoint {
		return vs[0].(map[string]*Endpoint)[vs[1].(string)]
	}).(EndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointInput)(nil)).Elem(), &Endpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointArrayInput)(nil)).Elem(), EndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointMapInput)(nil)).Elem(), EndpointMap{})
	pulumi.RegisterOutputType(EndpointOutput{})
	pulumi.RegisterOutputType(EndpointArrayOutput{})
	pulumi.RegisterOutputType(EndpointMapOutput{})
}
