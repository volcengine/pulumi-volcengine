// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage rds mysql instance
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_mysql"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			// create vpc
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//				DnsServers: pulumi.StringArray{
//					pulumi.String("8.8.8.8"),
//					pulumi.String("114.114.114.114"),
//				},
//				ProjectName: pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			// create subnet
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			// create mysql instance
//			fooInstance, err := rds_mysql.NewInstance(ctx, "fooInstance", &rds_mysql.InstanceArgs{
//				DbEngineVersion:     pulumi.String("MySQL_5_7"),
//				NodeSpec:            pulumi.String("rds.mysql.2c4g"),
//				PrimaryZoneId:       pulumi.String(fooZones.Zones[0].Id),
//				SecondaryZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				StorageSpace:        pulumi.Int(80),
//				SubnetId:            fooSubnet.ID(),
//				InstanceName:        pulumi.String("acc-test-mysql-instance"),
//				LowerCaseTableNames: pulumi.String("1"),
//				ProjectName:         pulumi.String("default"),
//				Tags: rds_mysql.InstanceTagArray{
//					&rds_mysql.InstanceTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//				ChargeInfo: &rds_mysql.InstanceChargeInfoArgs{
//					ChargeType: pulumi.String("PostPaid"),
//				},
//				Parameters: rds_mysql.InstanceParameterArray{
//					&rds_mysql.InstanceParameterArgs{
//						ParameterName:  pulumi.String("auto_increment_increment"),
//						ParameterValue: pulumi.String("2"),
//					},
//					&rds_mysql.InstanceParameterArgs{
//						ParameterName:  pulumi.String("auto_increment_offset"),
//						ParameterValue: pulumi.String("5"),
//					},
//				},
//				DeletionProtection: pulumi.String("Disabled"),
//				DataSyncMode:       pulumi.String("SemiSync"),
//				AutoStorageScalingConfig: &rds_mysql.InstanceAutoStorageScalingConfigArgs{
//					EnableStorageAutoScale: pulumi.Bool(true),
//					StorageThreshold:       pulumi.Int(40),
//					StorageUpperBound:      pulumi.Int(110),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// create mysql instance readonly node
//			_, err = rds_mysql.NewInstanceReadonlyNode(ctx, "fooInstanceReadonlyNode", &rds_mysql.InstanceReadonlyNodeArgs{
//				InstanceId: fooInstance.ID(),
//				NodeSpec:   pulumi.String("rds.mysql.2c4g"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//			})
//			if err != nil {
//				return err
//			}
//			// create mysql allow list
//			fooAllowlist, err := rds_mysql.NewAllowlist(ctx, "fooAllowlist", &rds_mysql.AllowlistArgs{
//				AllowListName: pulumi.String("acc-test-allowlist"),
//				AllowListDesc: pulumi.String("acc-test"),
//				AllowListType: pulumi.String("IPv4"),
//				AllowLists: pulumi.StringArray{
//					pulumi.String("192.168.0.0/24"),
//					pulumi.String("192.168.1.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// associate mysql allow list to mysql instance
//			_, err = rds_mysql.NewAllowlistAssociate(ctx, "fooAllowlistAssociate", &rds_mysql.AllowlistAssociateArgs{
//				AllowListId: fooAllowlist.ID(),
//				InstanceId:  fooInstance.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			// create mysql database
//			_, err = rds_mysql.NewDatabase(ctx, "fooDatabase", &rds_mysql.DatabaseArgs{
//				DbName:     pulumi.String("acc-test-database"),
//				InstanceId: fooInstance.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Rds Mysql Instance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:rds_mysql/instance:Instance default mysql-72da4258c2c7
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Allow list Ids of the RDS instance.
	AllowListIds pulumi.StringArrayOutput `pulumi:"allowListIds"`
	// The version of allow list.
	AllowListVersion pulumi.StringOutput `pulumi:"allowListVersion"`
	// Auto - storage scaling configuration.
	AutoStorageScalingConfig InstanceAutoStorageScalingConfigOutput `pulumi:"autoStorageScalingConfig"`
	// The upgrade strategy for the minor version of the instance kernel. Values:
	// Auto: Auto upgrade.
	// Manual: Manual upgrade.
	AutoUpgradeMinorVersion pulumi.StringOutput `pulumi:"autoUpgradeMinorVersion"`
	// The instance has used backup space. Unit: GB.
	BackupUse pulumi.IntOutput `pulumi:"backupUse"`
	// Does it support the binlog capability? This parameter is returned only when the database proxy is enabled. Values:
	// true: Yes.
	// false: No.
	BinlogDump pulumi.BoolOutput `pulumi:"binlogDump"`
	// Payment methods.
	ChargeDetails InstanceChargeDetailArrayOutput `pulumi:"chargeDetails"`
	// Payment methods.
	ChargeInfo InstanceChargeInfoOutput `pulumi:"chargeInfo"`
	// Connection pool type. Value range:
	// Direct: Direct connection mode.
	// Transaction: Transaction-level connection pool (default).
	ConnectionPoolType pulumi.StringOutput `pulumi:"connectionPoolType"`
	// Node creation local time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Data synchronization methods:
	// SemiSync: Semi - synchronous(Default).
	// Async: Asynchronous.
	DataSyncMode pulumi.StringPtrOutput `pulumi:"dataSyncMode"`
	// Instance type. Value:
	// MySQL_5_7
	// MySQL_8_0.
	DbEngineVersion pulumi.StringOutput `pulumi:"dbEngineVersion"`
	// The running status of the proxy instance. This parameter is returned only when the database proxy is enabled. Values:
	// Creating: The proxy is being started.
	// Running: The proxy is running.
	// Shutdown: The proxy is closed.
	// Deleting: The proxy is being closed.
	DbProxyStatus pulumi.StringOutput `pulumi:"dbProxyStatus"`
	// Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	DbTimeZone pulumi.StringOutput `pulumi:"dbTimeZone"`
	// Whether to enable the deletion protection function. Values:
	// Enabled: Yes.
	// Disabled: No.
	DeletionProtection pulumi.StringOutput `pulumi:"deletionProtection"`
	// The ID of the data synchronization task in DTS for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskId pulumi.StringOutput `pulumi:"drDtsTaskId"`
	// The name of the DTS data synchronization task for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskName pulumi.StringOutput `pulumi:"drDtsTaskName"`
	// The status of the DTS data synchronization task for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskStatus pulumi.StringOutput `pulumi:"drDtsTaskStatus"`
	// The number of seconds that the disaster recovery instance is behind the primary instance.
	DrSecondsBehindMaster pulumi.IntOutput `pulumi:"drSecondsBehindMaster"`
	// The endpoint info of the RDS instance.
	Endpoints InstanceEndpointArrayOutput `pulumi:"endpoints"`
	// Feature status.
	FeatureStates InstanceFeatureStateArrayOutput `pulumi:"featureStates"`
	// Whether to enable global read-only for the instance.
	GlobalReadOnly pulumi.BoolPtrOutput `pulumi:"globalReadOnly"`
	// Instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Instance name. Cannot start with a number or a dash
	// Can only contain Chinese characters, letters, numbers, underscores and dashes
	// The length is limited between 1 ~ 128.
	InstanceName pulumi.StringPtrOutput `pulumi:"instanceName"`
	// The status of the RDS instance.
	InstanceStatus pulumi.StringOutput `pulumi:"instanceStatus"`
	// The current kernel version of the RDS instance.
	KernelVersion pulumi.StringOutput `pulumi:"kernelVersion"`
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames pulumi.StringOutput `pulumi:"lowerCaseTableNames"`
	// Specify the maintainable time period of the instance when creating the instance. This field is optional. If not set, it defaults to 18:00Z - 21:59Z of every day within a week (that is, 02:00 - 05:59 Beijing time).
	MaintenanceWindow InstanceMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// The ID of the primary instance of the disaster recovery instance.
	MasterInstanceId pulumi.StringOutput `pulumi:"masterInstanceId"`
	// The name of the primary instance of the disaster recovery instance.
	MasterInstanceName pulumi.StringOutput `pulumi:"masterInstanceName"`
	// The region where the primary instance of the disaster recovery instance is located.
	MasterRegion pulumi.StringOutput `pulumi:"masterRegion"`
	// Memory size in GB.
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Average CPU usage of the instance master node in nearly one minute.
	NodeCpuUsedPercentage pulumi.Float64Output `pulumi:"nodeCpuUsedPercentage"`
	// Average memory usage of the instance master node in nearly one minute.
	NodeMemoryUsedPercentage pulumi.Float64Output `pulumi:"nodeMemoryUsedPercentage"`
	// The number of nodes.
	NodeNumber pulumi.IntOutput `pulumi:"nodeNumber"`
	// Average disk usage of the instance master node in nearly one minute.
	NodeSpaceUsedPercentage pulumi.Float64Output `pulumi:"nodeSpaceUsedPercentage"`
	// The specification of primary node and secondary node.
	NodeSpec pulumi.StringOutput `pulumi:"nodeSpec"`
	// Instance node information.
	Nodes InstanceNodeArrayOutput `pulumi:"nodes"`
	// Parameter of the RDS instance. This field can only be added or modified. Deleting this field is invalid.
	Parameters InstanceParameterArrayOutput `pulumi:"parameters"`
	// The available zone of primary node.
	PrimaryZoneId pulumi.StringOutput `pulumi:"primaryZoneId"`
	// The project name of the RDS instance.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// The region of the RDS instance.
	RegionId pulumi.StringOutput `pulumi:"regionId"`
	// The available zone of secondary node.
	SecondaryZoneId pulumi.StringOutput `pulumi:"secondaryZoneId"`
	// The upper limit of the storage space that can be set for automatic expansion. The value is the upper limit of the storage space value range corresponding to the instance master node specification, with the unit being GB. For detailed information on the selectable storage space value ranges of different specifications, please refer to Product Specifications.
	StorageMaxCapacity pulumi.IntOutput `pulumi:"storageMaxCapacity"`
	// The upper limit of the proportion of available storage space that triggers automatic expansion. When supported, the value is 50%.
	StorageMaxTriggerThreshold pulumi.IntOutput `pulumi:"storageMaxTriggerThreshold"`
	// The lower limit of the storage space that can be set for automatic expansion. The value is the lower limit of the storage space value range corresponding to the instance master node specification, with the unit being GB. For detailed information on the selectable storage space value ranges of different specifications, please refer to Product Specifications.
	StorageMinCapacity pulumi.IntOutput `pulumi:"storageMinCapacity"`
	// The lower limit of the proportion of available storage space that triggers automatic expansion. When supported, the value is 10%.
	StorageMinTriggerThreshold pulumi.IntOutput `pulumi:"storageMinTriggerThreshold"`
	// Instance storage space. Value range: [20, 3000], unit: GB, increments every 100GB. Default value: 100.
	StorageSpace pulumi.IntPtrOutput `pulumi:"storageSpace"`
	// Instance storage type.
	StorageType pulumi.StringOutput `pulumi:"storageType"`
	// The instance has used storage space. Unit: GB.
	StorageUse pulumi.IntOutput `pulumi:"storageUse"`
	// Subnet ID of the RDS instance.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Tags.
	Tags InstanceTagArrayOutput `pulumi:"tags"`
	// Time zone.
	TimeZone pulumi.StringOutput `pulumi:"timeZone"`
	// The update time of the RDS instance.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// CPU size.
	VCpu pulumi.IntOutput `pulumi:"vCpu"`
	// The vpc ID of the RDS instance.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The available zone of the RDS instance.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
	// List of availability zones where each node of the instance is located.
	ZoneIds pulumi.StringArrayOutput `pulumi:"zoneIds"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ChargeInfo == nil {
		return nil, errors.New("invalid value for required argument 'ChargeInfo'")
	}
	if args.DbEngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'DbEngineVersion'")
	}
	if args.NodeSpec == nil {
		return nil, errors.New("invalid value for required argument 'NodeSpec'")
	}
	if args.PrimaryZoneId == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryZoneId'")
	}
	if args.SecondaryZoneId == nil {
		return nil, errors.New("invalid value for required argument 'SecondaryZoneId'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("volcengine:rds_mysql/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("volcengine:rds_mysql/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Allow list Ids of the RDS instance.
	AllowListIds []string `pulumi:"allowListIds"`
	// The version of allow list.
	AllowListVersion *string `pulumi:"allowListVersion"`
	// Auto - storage scaling configuration.
	AutoStorageScalingConfig *InstanceAutoStorageScalingConfig `pulumi:"autoStorageScalingConfig"`
	// The upgrade strategy for the minor version of the instance kernel. Values:
	// Auto: Auto upgrade.
	// Manual: Manual upgrade.
	AutoUpgradeMinorVersion *string `pulumi:"autoUpgradeMinorVersion"`
	// The instance has used backup space. Unit: GB.
	BackupUse *int `pulumi:"backupUse"`
	// Does it support the binlog capability? This parameter is returned only when the database proxy is enabled. Values:
	// true: Yes.
	// false: No.
	BinlogDump *bool `pulumi:"binlogDump"`
	// Payment methods.
	ChargeDetails []InstanceChargeDetail `pulumi:"chargeDetails"`
	// Payment methods.
	ChargeInfo *InstanceChargeInfo `pulumi:"chargeInfo"`
	// Connection pool type. Value range:
	// Direct: Direct connection mode.
	// Transaction: Transaction-level connection pool (default).
	ConnectionPoolType *string `pulumi:"connectionPoolType"`
	// Node creation local time.
	CreateTime *string `pulumi:"createTime"`
	// Data synchronization methods:
	// SemiSync: Semi - synchronous(Default).
	// Async: Asynchronous.
	DataSyncMode *string `pulumi:"dataSyncMode"`
	// Instance type. Value:
	// MySQL_5_7
	// MySQL_8_0.
	DbEngineVersion *string `pulumi:"dbEngineVersion"`
	// The running status of the proxy instance. This parameter is returned only when the database proxy is enabled. Values:
	// Creating: The proxy is being started.
	// Running: The proxy is running.
	// Shutdown: The proxy is closed.
	// Deleting: The proxy is being closed.
	DbProxyStatus *string `pulumi:"dbProxyStatus"`
	// Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	DbTimeZone *string `pulumi:"dbTimeZone"`
	// Whether to enable the deletion protection function. Values:
	// Enabled: Yes.
	// Disabled: No.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// The ID of the data synchronization task in DTS for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskId *string `pulumi:"drDtsTaskId"`
	// The name of the DTS data synchronization task for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskName *string `pulumi:"drDtsTaskName"`
	// The status of the DTS data synchronization task for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskStatus *string `pulumi:"drDtsTaskStatus"`
	// The number of seconds that the disaster recovery instance is behind the primary instance.
	DrSecondsBehindMaster *int `pulumi:"drSecondsBehindMaster"`
	// The endpoint info of the RDS instance.
	Endpoints []InstanceEndpoint `pulumi:"endpoints"`
	// Feature status.
	FeatureStates []InstanceFeatureState `pulumi:"featureStates"`
	// Whether to enable global read-only for the instance.
	GlobalReadOnly *bool `pulumi:"globalReadOnly"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Instance name. Cannot start with a number or a dash
	// Can only contain Chinese characters, letters, numbers, underscores and dashes
	// The length is limited between 1 ~ 128.
	InstanceName *string `pulumi:"instanceName"`
	// The status of the RDS instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// The current kernel version of the RDS instance.
	KernelVersion *string `pulumi:"kernelVersion"`
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames *string `pulumi:"lowerCaseTableNames"`
	// Specify the maintainable time period of the instance when creating the instance. This field is optional. If not set, it defaults to 18:00Z - 21:59Z of every day within a week (that is, 02:00 - 05:59 Beijing time).
	MaintenanceWindow *InstanceMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The ID of the primary instance of the disaster recovery instance.
	MasterInstanceId *string `pulumi:"masterInstanceId"`
	// The name of the primary instance of the disaster recovery instance.
	MasterInstanceName *string `pulumi:"masterInstanceName"`
	// The region where the primary instance of the disaster recovery instance is located.
	MasterRegion *string `pulumi:"masterRegion"`
	// Memory size in GB.
	Memory *int `pulumi:"memory"`
	// Average CPU usage of the instance master node in nearly one minute.
	NodeCpuUsedPercentage *float64 `pulumi:"nodeCpuUsedPercentage"`
	// Average memory usage of the instance master node in nearly one minute.
	NodeMemoryUsedPercentage *float64 `pulumi:"nodeMemoryUsedPercentage"`
	// The number of nodes.
	NodeNumber *int `pulumi:"nodeNumber"`
	// Average disk usage of the instance master node in nearly one minute.
	NodeSpaceUsedPercentage *float64 `pulumi:"nodeSpaceUsedPercentage"`
	// The specification of primary node and secondary node.
	NodeSpec *string `pulumi:"nodeSpec"`
	// Instance node information.
	Nodes []InstanceNode `pulumi:"nodes"`
	// Parameter of the RDS instance. This field can only be added or modified. Deleting this field is invalid.
	Parameters []InstanceParameter `pulumi:"parameters"`
	// The available zone of primary node.
	PrimaryZoneId *string `pulumi:"primaryZoneId"`
	// The project name of the RDS instance.
	ProjectName *string `pulumi:"projectName"`
	// The region of the RDS instance.
	RegionId *string `pulumi:"regionId"`
	// The available zone of secondary node.
	SecondaryZoneId *string `pulumi:"secondaryZoneId"`
	// The upper limit of the storage space that can be set for automatic expansion. The value is the upper limit of the storage space value range corresponding to the instance master node specification, with the unit being GB. For detailed information on the selectable storage space value ranges of different specifications, please refer to Product Specifications.
	StorageMaxCapacity *int `pulumi:"storageMaxCapacity"`
	// The upper limit of the proportion of available storage space that triggers automatic expansion. When supported, the value is 50%.
	StorageMaxTriggerThreshold *int `pulumi:"storageMaxTriggerThreshold"`
	// The lower limit of the storage space that can be set for automatic expansion. The value is the lower limit of the storage space value range corresponding to the instance master node specification, with the unit being GB. For detailed information on the selectable storage space value ranges of different specifications, please refer to Product Specifications.
	StorageMinCapacity *int `pulumi:"storageMinCapacity"`
	// The lower limit of the proportion of available storage space that triggers automatic expansion. When supported, the value is 10%.
	StorageMinTriggerThreshold *int `pulumi:"storageMinTriggerThreshold"`
	// Instance storage space. Value range: [20, 3000], unit: GB, increments every 100GB. Default value: 100.
	StorageSpace *int `pulumi:"storageSpace"`
	// Instance storage type.
	StorageType *string `pulumi:"storageType"`
	// The instance has used storage space. Unit: GB.
	StorageUse *int `pulumi:"storageUse"`
	// Subnet ID of the RDS instance.
	SubnetId *string `pulumi:"subnetId"`
	// Tags.
	Tags []InstanceTag `pulumi:"tags"`
	// Time zone.
	TimeZone *string `pulumi:"timeZone"`
	// The update time of the RDS instance.
	UpdateTime *string `pulumi:"updateTime"`
	// CPU size.
	VCpu *int `pulumi:"vCpu"`
	// The vpc ID of the RDS instance.
	VpcId *string `pulumi:"vpcId"`
	// The available zone of the RDS instance.
	ZoneId *string `pulumi:"zoneId"`
	// List of availability zones where each node of the instance is located.
	ZoneIds []string `pulumi:"zoneIds"`
}

type InstanceState struct {
	// Allow list Ids of the RDS instance.
	AllowListIds pulumi.StringArrayInput
	// The version of allow list.
	AllowListVersion pulumi.StringPtrInput
	// Auto - storage scaling configuration.
	AutoStorageScalingConfig InstanceAutoStorageScalingConfigPtrInput
	// The upgrade strategy for the minor version of the instance kernel. Values:
	// Auto: Auto upgrade.
	// Manual: Manual upgrade.
	AutoUpgradeMinorVersion pulumi.StringPtrInput
	// The instance has used backup space. Unit: GB.
	BackupUse pulumi.IntPtrInput
	// Does it support the binlog capability? This parameter is returned only when the database proxy is enabled. Values:
	// true: Yes.
	// false: No.
	BinlogDump pulumi.BoolPtrInput
	// Payment methods.
	ChargeDetails InstanceChargeDetailArrayInput
	// Payment methods.
	ChargeInfo InstanceChargeInfoPtrInput
	// Connection pool type. Value range:
	// Direct: Direct connection mode.
	// Transaction: Transaction-level connection pool (default).
	ConnectionPoolType pulumi.StringPtrInput
	// Node creation local time.
	CreateTime pulumi.StringPtrInput
	// Data synchronization methods:
	// SemiSync: Semi - synchronous(Default).
	// Async: Asynchronous.
	DataSyncMode pulumi.StringPtrInput
	// Instance type. Value:
	// MySQL_5_7
	// MySQL_8_0.
	DbEngineVersion pulumi.StringPtrInput
	// The running status of the proxy instance. This parameter is returned only when the database proxy is enabled. Values:
	// Creating: The proxy is being started.
	// Running: The proxy is running.
	// Shutdown: The proxy is closed.
	// Deleting: The proxy is being closed.
	DbProxyStatus pulumi.StringPtrInput
	// Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	DbTimeZone pulumi.StringPtrInput
	// Whether to enable the deletion protection function. Values:
	// Enabled: Yes.
	// Disabled: No.
	DeletionProtection pulumi.StringPtrInput
	// The ID of the data synchronization task in DTS for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskId pulumi.StringPtrInput
	// The name of the DTS data synchronization task for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskName pulumi.StringPtrInput
	// The status of the DTS data synchronization task for the data synchronization link between the primary instance and the disaster recovery instance.
	DrDtsTaskStatus pulumi.StringPtrInput
	// The number of seconds that the disaster recovery instance is behind the primary instance.
	DrSecondsBehindMaster pulumi.IntPtrInput
	// The endpoint info of the RDS instance.
	Endpoints InstanceEndpointArrayInput
	// Feature status.
	FeatureStates InstanceFeatureStateArrayInput
	// Whether to enable global read-only for the instance.
	GlobalReadOnly pulumi.BoolPtrInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// Instance name. Cannot start with a number or a dash
	// Can only contain Chinese characters, letters, numbers, underscores and dashes
	// The length is limited between 1 ~ 128.
	InstanceName pulumi.StringPtrInput
	// The status of the RDS instance.
	InstanceStatus pulumi.StringPtrInput
	// The current kernel version of the RDS instance.
	KernelVersion pulumi.StringPtrInput
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames pulumi.StringPtrInput
	// Specify the maintainable time period of the instance when creating the instance. This field is optional. If not set, it defaults to 18:00Z - 21:59Z of every day within a week (that is, 02:00 - 05:59 Beijing time).
	MaintenanceWindow InstanceMaintenanceWindowPtrInput
	// The ID of the primary instance of the disaster recovery instance.
	MasterInstanceId pulumi.StringPtrInput
	// The name of the primary instance of the disaster recovery instance.
	MasterInstanceName pulumi.StringPtrInput
	// The region where the primary instance of the disaster recovery instance is located.
	MasterRegion pulumi.StringPtrInput
	// Memory size in GB.
	Memory pulumi.IntPtrInput
	// Average CPU usage of the instance master node in nearly one minute.
	NodeCpuUsedPercentage pulumi.Float64PtrInput
	// Average memory usage of the instance master node in nearly one minute.
	NodeMemoryUsedPercentage pulumi.Float64PtrInput
	// The number of nodes.
	NodeNumber pulumi.IntPtrInput
	// Average disk usage of the instance master node in nearly one minute.
	NodeSpaceUsedPercentage pulumi.Float64PtrInput
	// The specification of primary node and secondary node.
	NodeSpec pulumi.StringPtrInput
	// Instance node information.
	Nodes InstanceNodeArrayInput
	// Parameter of the RDS instance. This field can only be added or modified. Deleting this field is invalid.
	Parameters InstanceParameterArrayInput
	// The available zone of primary node.
	PrimaryZoneId pulumi.StringPtrInput
	// The project name of the RDS instance.
	ProjectName pulumi.StringPtrInput
	// The region of the RDS instance.
	RegionId pulumi.StringPtrInput
	// The available zone of secondary node.
	SecondaryZoneId pulumi.StringPtrInput
	// The upper limit of the storage space that can be set for automatic expansion. The value is the upper limit of the storage space value range corresponding to the instance master node specification, with the unit being GB. For detailed information on the selectable storage space value ranges of different specifications, please refer to Product Specifications.
	StorageMaxCapacity pulumi.IntPtrInput
	// The upper limit of the proportion of available storage space that triggers automatic expansion. When supported, the value is 50%.
	StorageMaxTriggerThreshold pulumi.IntPtrInput
	// The lower limit of the storage space that can be set for automatic expansion. The value is the lower limit of the storage space value range corresponding to the instance master node specification, with the unit being GB. For detailed information on the selectable storage space value ranges of different specifications, please refer to Product Specifications.
	StorageMinCapacity pulumi.IntPtrInput
	// The lower limit of the proportion of available storage space that triggers automatic expansion. When supported, the value is 10%.
	StorageMinTriggerThreshold pulumi.IntPtrInput
	// Instance storage space. Value range: [20, 3000], unit: GB, increments every 100GB. Default value: 100.
	StorageSpace pulumi.IntPtrInput
	// Instance storage type.
	StorageType pulumi.StringPtrInput
	// The instance has used storage space. Unit: GB.
	StorageUse pulumi.IntPtrInput
	// Subnet ID of the RDS instance.
	SubnetId pulumi.StringPtrInput
	// Tags.
	Tags InstanceTagArrayInput
	// Time zone.
	TimeZone pulumi.StringPtrInput
	// The update time of the RDS instance.
	UpdateTime pulumi.StringPtrInput
	// CPU size.
	VCpu pulumi.IntPtrInput
	// The vpc ID of the RDS instance.
	VpcId pulumi.StringPtrInput
	// The available zone of the RDS instance.
	ZoneId pulumi.StringPtrInput
	// List of availability zones where each node of the instance is located.
	ZoneIds pulumi.StringArrayInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Allow list Ids of the RDS instance.
	AllowListIds []string `pulumi:"allowListIds"`
	// Auto - storage scaling configuration.
	AutoStorageScalingConfig *InstanceAutoStorageScalingConfig `pulumi:"autoStorageScalingConfig"`
	// Payment methods.
	ChargeInfo InstanceChargeInfo `pulumi:"chargeInfo"`
	// Connection pool type. Value range:
	// Direct: Direct connection mode.
	// Transaction: Transaction-level connection pool (default).
	ConnectionPoolType *string `pulumi:"connectionPoolType"`
	// Data synchronization methods:
	// SemiSync: Semi - synchronous(Default).
	// Async: Asynchronous.
	DataSyncMode *string `pulumi:"dataSyncMode"`
	// Instance type. Value:
	// MySQL_5_7
	// MySQL_8_0.
	DbEngineVersion string `pulumi:"dbEngineVersion"`
	// Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	DbTimeZone *string `pulumi:"dbTimeZone"`
	// Whether to enable the deletion protection function. Values:
	// Enabled: Yes.
	// Disabled: No.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// Whether to enable global read-only for the instance.
	GlobalReadOnly *bool `pulumi:"globalReadOnly"`
	// Instance name. Cannot start with a number or a dash
	// Can only contain Chinese characters, letters, numbers, underscores and dashes
	// The length is limited between 1 ~ 128.
	InstanceName *string `pulumi:"instanceName"`
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames *string `pulumi:"lowerCaseTableNames"`
	// Specify the maintainable time period of the instance when creating the instance. This field is optional. If not set, it defaults to 18:00Z - 21:59Z of every day within a week (that is, 02:00 - 05:59 Beijing time).
	MaintenanceWindow *InstanceMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The specification of primary node and secondary node.
	NodeSpec string `pulumi:"nodeSpec"`
	// Parameter of the RDS instance. This field can only be added or modified. Deleting this field is invalid.
	Parameters []InstanceParameter `pulumi:"parameters"`
	// The available zone of primary node.
	PrimaryZoneId string `pulumi:"primaryZoneId"`
	// The project name of the RDS instance.
	ProjectName *string `pulumi:"projectName"`
	// The available zone of secondary node.
	SecondaryZoneId string `pulumi:"secondaryZoneId"`
	// Instance storage space. Value range: [20, 3000], unit: GB, increments every 100GB. Default value: 100.
	StorageSpace *int `pulumi:"storageSpace"`
	// Subnet ID of the RDS instance.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []InstanceTag `pulumi:"tags"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Allow list Ids of the RDS instance.
	AllowListIds pulumi.StringArrayInput
	// Auto - storage scaling configuration.
	AutoStorageScalingConfig InstanceAutoStorageScalingConfigPtrInput
	// Payment methods.
	ChargeInfo InstanceChargeInfoInput
	// Connection pool type. Value range:
	// Direct: Direct connection mode.
	// Transaction: Transaction-level connection pool (default).
	ConnectionPoolType pulumi.StringPtrInput
	// Data synchronization methods:
	// SemiSync: Semi - synchronous(Default).
	// Async: Asynchronous.
	DataSyncMode pulumi.StringPtrInput
	// Instance type. Value:
	// MySQL_5_7
	// MySQL_8_0.
	DbEngineVersion pulumi.StringInput
	// Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	DbTimeZone pulumi.StringPtrInput
	// Whether to enable the deletion protection function. Values:
	// Enabled: Yes.
	// Disabled: No.
	DeletionProtection pulumi.StringPtrInput
	// Whether to enable global read-only for the instance.
	GlobalReadOnly pulumi.BoolPtrInput
	// Instance name. Cannot start with a number or a dash
	// Can only contain Chinese characters, letters, numbers, underscores and dashes
	// The length is limited between 1 ~ 128.
	InstanceName pulumi.StringPtrInput
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames pulumi.StringPtrInput
	// Specify the maintainable time period of the instance when creating the instance. This field is optional. If not set, it defaults to 18:00Z - 21:59Z of every day within a week (that is, 02:00 - 05:59 Beijing time).
	MaintenanceWindow InstanceMaintenanceWindowPtrInput
	// The specification of primary node and secondary node.
	NodeSpec pulumi.StringInput
	// Parameter of the RDS instance. This field can only be added or modified. Deleting this field is invalid.
	Parameters InstanceParameterArrayInput
	// The available zone of primary node.
	PrimaryZoneId pulumi.StringInput
	// The project name of the RDS instance.
	ProjectName pulumi.StringPtrInput
	// The available zone of secondary node.
	SecondaryZoneId pulumi.StringInput
	// Instance storage space. Value range: [20, 3000], unit: GB, increments every 100GB. Default value: 100.
	StorageSpace pulumi.IntPtrInput
	// Subnet ID of the RDS instance.
	SubnetId pulumi.StringInput
	// Tags.
	Tags InstanceTagArrayInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Allow list Ids of the RDS instance.
func (o InstanceOutput) AllowListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.AllowListIds }).(pulumi.StringArrayOutput)
}

// The version of allow list.
func (o InstanceOutput) AllowListVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AllowListVersion }).(pulumi.StringOutput)
}

// Auto - storage scaling configuration.
func (o InstanceOutput) AutoStorageScalingConfig() InstanceAutoStorageScalingConfigOutput {
	return o.ApplyT(func(v *Instance) InstanceAutoStorageScalingConfigOutput { return v.AutoStorageScalingConfig }).(InstanceAutoStorageScalingConfigOutput)
}

// The upgrade strategy for the minor version of the instance kernel. Values:
// Auto: Auto upgrade.
// Manual: Manual upgrade.
func (o InstanceOutput) AutoUpgradeMinorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AutoUpgradeMinorVersion }).(pulumi.StringOutput)
}

// The instance has used backup space. Unit: GB.
func (o InstanceOutput) BackupUse() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.BackupUse }).(pulumi.IntOutput)
}

// Does it support the binlog capability? This parameter is returned only when the database proxy is enabled. Values:
// true: Yes.
// false: No.
func (o InstanceOutput) BinlogDump() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.BinlogDump }).(pulumi.BoolOutput)
}

// Payment methods.
func (o InstanceOutput) ChargeDetails() InstanceChargeDetailArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceChargeDetailArrayOutput { return v.ChargeDetails }).(InstanceChargeDetailArrayOutput)
}

// Payment methods.
func (o InstanceOutput) ChargeInfo() InstanceChargeInfoOutput {
	return o.ApplyT(func(v *Instance) InstanceChargeInfoOutput { return v.ChargeInfo }).(InstanceChargeInfoOutput)
}

// Connection pool type. Value range:
// Direct: Direct connection mode.
// Transaction: Transaction-level connection pool (default).
func (o InstanceOutput) ConnectionPoolType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ConnectionPoolType }).(pulumi.StringOutput)
}

// Node creation local time.
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Data synchronization methods:
// SemiSync: Semi - synchronous(Default).
// Async: Asynchronous.
func (o InstanceOutput) DataSyncMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.DataSyncMode }).(pulumi.StringPtrOutput)
}

// Instance type. Value:
// MySQL_5_7
// MySQL_8_0.
func (o InstanceOutput) DbEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DbEngineVersion }).(pulumi.StringOutput)
}

// The running status of the proxy instance. This parameter is returned only when the database proxy is enabled. Values:
// Creating: The proxy is being started.
// Running: The proxy is running.
// Shutdown: The proxy is closed.
// Deleting: The proxy is being closed.
func (o InstanceOutput) DbProxyStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DbProxyStatus }).(pulumi.StringOutput)
}

// Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) DbTimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DbTimeZone }).(pulumi.StringOutput)
}

// Whether to enable the deletion protection function. Values:
// Enabled: Yes.
// Disabled: No.
func (o InstanceOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DeletionProtection }).(pulumi.StringOutput)
}

// The ID of the data synchronization task in DTS for the data synchronization link between the primary instance and the disaster recovery instance.
func (o InstanceOutput) DrDtsTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DrDtsTaskId }).(pulumi.StringOutput)
}

// The name of the DTS data synchronization task for the data synchronization link between the primary instance and the disaster recovery instance.
func (o InstanceOutput) DrDtsTaskName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DrDtsTaskName }).(pulumi.StringOutput)
}

// The status of the DTS data synchronization task for the data synchronization link between the primary instance and the disaster recovery instance.
func (o InstanceOutput) DrDtsTaskStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DrDtsTaskStatus }).(pulumi.StringOutput)
}

// The number of seconds that the disaster recovery instance is behind the primary instance.
func (o InstanceOutput) DrSecondsBehindMaster() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.DrSecondsBehindMaster }).(pulumi.IntOutput)
}

// The endpoint info of the RDS instance.
func (o InstanceOutput) Endpoints() InstanceEndpointArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceEndpointArrayOutput { return v.Endpoints }).(InstanceEndpointArrayOutput)
}

// Feature status.
func (o InstanceOutput) FeatureStates() InstanceFeatureStateArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceFeatureStateArrayOutput { return v.FeatureStates }).(InstanceFeatureStateArrayOutput)
}

// Whether to enable global read-only for the instance.
func (o InstanceOutput) GlobalReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.GlobalReadOnly }).(pulumi.BoolPtrOutput)
}

// Instance ID.
func (o InstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance name. Cannot start with a number or a dash
// Can only contain Chinese characters, letters, numbers, underscores and dashes
// The length is limited between 1 ~ 128.
func (o InstanceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The status of the RDS instance.
func (o InstanceOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceStatus }).(pulumi.StringOutput)
}

// The current kernel version of the RDS instance.
func (o InstanceOutput) KernelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.KernelVersion }).(pulumi.StringOutput)
}

// Whether the table name is case sensitive, the default value is 1.
// Ranges:
// 0: Table names are stored as fixed and table names are case-sensitive.
// 1: Table names will be stored in lowercase and table names are not case sensitive.
func (o InstanceOutput) LowerCaseTableNames() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.LowerCaseTableNames }).(pulumi.StringOutput)
}

// Specify the maintainable time period of the instance when creating the instance. This field is optional. If not set, it defaults to 18:00Z - 21:59Z of every day within a week (that is, 02:00 - 05:59 Beijing time).
func (o InstanceOutput) MaintenanceWindow() InstanceMaintenanceWindowOutput {
	return o.ApplyT(func(v *Instance) InstanceMaintenanceWindowOutput { return v.MaintenanceWindow }).(InstanceMaintenanceWindowOutput)
}

// The ID of the primary instance of the disaster recovery instance.
func (o InstanceOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// The name of the primary instance of the disaster recovery instance.
func (o InstanceOutput) MasterInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MasterInstanceName }).(pulumi.StringOutput)
}

// The region where the primary instance of the disaster recovery instance is located.
func (o InstanceOutput) MasterRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MasterRegion }).(pulumi.StringOutput)
}

// Memory size in GB.
func (o InstanceOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// Average CPU usage of the instance master node in nearly one minute.
func (o InstanceOutput) NodeCpuUsedPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *Instance) pulumi.Float64Output { return v.NodeCpuUsedPercentage }).(pulumi.Float64Output)
}

// Average memory usage of the instance master node in nearly one minute.
func (o InstanceOutput) NodeMemoryUsedPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *Instance) pulumi.Float64Output { return v.NodeMemoryUsedPercentage }).(pulumi.Float64Output)
}

// The number of nodes.
func (o InstanceOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.NodeNumber }).(pulumi.IntOutput)
}

// Average disk usage of the instance master node in nearly one minute.
func (o InstanceOutput) NodeSpaceUsedPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *Instance) pulumi.Float64Output { return v.NodeSpaceUsedPercentage }).(pulumi.Float64Output)
}

// The specification of primary node and secondary node.
func (o InstanceOutput) NodeSpec() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.NodeSpec }).(pulumi.StringOutput)
}

// Instance node information.
func (o InstanceOutput) Nodes() InstanceNodeArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNodeArrayOutput { return v.Nodes }).(InstanceNodeArrayOutput)
}

// Parameter of the RDS instance. This field can only be added or modified. Deleting this field is invalid.
func (o InstanceOutput) Parameters() InstanceParameterArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceParameterArrayOutput { return v.Parameters }).(InstanceParameterArrayOutput)
}

// The available zone of primary node.
func (o InstanceOutput) PrimaryZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PrimaryZoneId }).(pulumi.StringOutput)
}

// The project name of the RDS instance.
func (o InstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// The region of the RDS instance.
func (o InstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.RegionId }).(pulumi.StringOutput)
}

// The available zone of secondary node.
func (o InstanceOutput) SecondaryZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SecondaryZoneId }).(pulumi.StringOutput)
}

// The upper limit of the storage space that can be set for automatic expansion. The value is the upper limit of the storage space value range corresponding to the instance master node specification, with the unit being GB. For detailed information on the selectable storage space value ranges of different specifications, please refer to Product Specifications.
func (o InstanceOutput) StorageMaxCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.StorageMaxCapacity }).(pulumi.IntOutput)
}

// The upper limit of the proportion of available storage space that triggers automatic expansion. When supported, the value is 50%.
func (o InstanceOutput) StorageMaxTriggerThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.StorageMaxTriggerThreshold }).(pulumi.IntOutput)
}

// The lower limit of the storage space that can be set for automatic expansion. The value is the lower limit of the storage space value range corresponding to the instance master node specification, with the unit being GB. For detailed information on the selectable storage space value ranges of different specifications, please refer to Product Specifications.
func (o InstanceOutput) StorageMinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.StorageMinCapacity }).(pulumi.IntOutput)
}

// The lower limit of the proportion of available storage space that triggers automatic expansion. When supported, the value is 10%.
func (o InstanceOutput) StorageMinTriggerThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.StorageMinTriggerThreshold }).(pulumi.IntOutput)
}

// Instance storage space. Value range: [20, 3000], unit: GB, increments every 100GB. Default value: 100.
func (o InstanceOutput) StorageSpace() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.StorageSpace }).(pulumi.IntPtrOutput)
}

// Instance storage type.
func (o InstanceOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.StorageType }).(pulumi.StringOutput)
}

// The instance has used storage space. Unit: GB.
func (o InstanceOutput) StorageUse() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.StorageUse }).(pulumi.IntOutput)
}

// Subnet ID of the RDS instance.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o InstanceOutput) Tags() InstanceTagArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceTagArrayOutput { return v.Tags }).(InstanceTagArrayOutput)
}

// Time zone.
func (o InstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.TimeZone }).(pulumi.StringOutput)
}

// The update time of the RDS instance.
func (o InstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// CPU size.
func (o InstanceOutput) VCpu() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.VCpu }).(pulumi.IntOutput)
}

// The vpc ID of the RDS instance.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The available zone of the RDS instance.
func (o InstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

// List of availability zones where each node of the instance is located.
func (o InstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
