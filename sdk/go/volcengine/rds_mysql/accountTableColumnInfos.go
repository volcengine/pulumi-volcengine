// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of rds mysql account table column infos
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds_mysql.GetAccountTableColumnInfos(ctx, &rds_mysql.GetAccountTableColumnInfosArgs{
//				DbName:     "ddd",
//				InstanceId: "mysql-b51d37110dd1",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.rds_mysql.AccountTableColumnInfos has been deprecated in favor of volcengine.rds_mysql.getAccountTableColumnInfos
func AccountTableColumnInfos(ctx *pulumi.Context, args *AccountTableColumnInfosArgs, opts ...pulumi.InvokeOption) (*AccountTableColumnInfosResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv AccountTableColumnInfosResult
	err := ctx.Invoke("volcengine:rds_mysql/accountTableColumnInfos:AccountTableColumnInfos", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking AccountTableColumnInfos.
type AccountTableColumnInfosArgs struct {
	// The name of the account.
	AccountName *string `pulumi:"accountName"`
	// The name of the column.
	ColumnName *string `pulumi:"columnName"`
	// The name of the database.
	DbName string `pulumi:"dbName"`
	// Specify the IP address for the account to access the database. The default value is %.
	Host *string `pulumi:"host"`
	// The id of the mysql instance.
	InstanceId string `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Specify the number of tables in the table column permission information to be returned. If it exceeds the setting, it will be truncated.
	TableLimit *int `pulumi:"tableLimit"`
	// The name of the table.
	TableName *string `pulumi:"tableName"`
}

// A collection of values returned by AccountTableColumnInfos.
type AccountTableColumnInfosResult struct {
	AccountName *string `pulumi:"accountName"`
	// The name of the column.
	ColumnName *string `pulumi:"columnName"`
	DbName     string  `pulumi:"dbName"`
	Host       *string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	InstanceId string  `pulumi:"instanceId"`
	OutputFile *string `pulumi:"outputFile"`
	// The collection of query.
	TableInfos []AccountTableColumnInfosTableInfo `pulumi:"tableInfos"`
	TableLimit *int                               `pulumi:"tableLimit"`
	// The name of the table.
	TableName *string `pulumi:"tableName"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func AccountTableColumnInfosOutput(ctx *pulumi.Context, args AccountTableColumnInfosOutputArgs, opts ...pulumi.InvokeOption) AccountTableColumnInfosResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AccountTableColumnInfosResult, error) {
			args := v.(AccountTableColumnInfosArgs)
			r, err := AccountTableColumnInfos(ctx, &args, opts...)
			var s AccountTableColumnInfosResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AccountTableColumnInfosResultOutput)
}

// A collection of arguments for invoking AccountTableColumnInfos.
type AccountTableColumnInfosOutputArgs struct {
	// The name of the account.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// The name of the column.
	ColumnName pulumi.StringPtrInput `pulumi:"columnName"`
	// The name of the database.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// Specify the IP address for the account to access the database. The default value is %.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The id of the mysql instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Specify the number of tables in the table column permission information to be returned. If it exceeds the setting, it will be truncated.
	TableLimit pulumi.IntPtrInput `pulumi:"tableLimit"`
	// The name of the table.
	TableName pulumi.StringPtrInput `pulumi:"tableName"`
}

func (AccountTableColumnInfosOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountTableColumnInfosArgs)(nil)).Elem()
}

// A collection of values returned by AccountTableColumnInfos.
type AccountTableColumnInfosResultOutput struct{ *pulumi.OutputState }

func (AccountTableColumnInfosResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountTableColumnInfosResult)(nil)).Elem()
}

func (o AccountTableColumnInfosResultOutput) ToAccountTableColumnInfosResultOutput() AccountTableColumnInfosResultOutput {
	return o
}

func (o AccountTableColumnInfosResultOutput) ToAccountTableColumnInfosResultOutputWithContext(ctx context.Context) AccountTableColumnInfosResultOutput {
	return o
}

func (o AccountTableColumnInfosResultOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// The name of the column.
func (o AccountTableColumnInfosResultOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

func (o AccountTableColumnInfosResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) string { return v.DbName }).(pulumi.StringOutput)
}

func (o AccountTableColumnInfosResultOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o AccountTableColumnInfosResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o AccountTableColumnInfosResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o AccountTableColumnInfosResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o AccountTableColumnInfosResultOutput) TableInfos() AccountTableColumnInfosTableInfoArrayOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) []AccountTableColumnInfosTableInfo { return v.TableInfos }).(AccountTableColumnInfosTableInfoArrayOutput)
}

func (o AccountTableColumnInfosResultOutput) TableLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) *int { return v.TableLimit }).(pulumi.IntPtrOutput)
}

// The name of the table.
func (o AccountTableColumnInfosResultOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) *string { return v.TableName }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o AccountTableColumnInfosResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AccountTableColumnInfosResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountTableColumnInfosResultOutput{})
}
