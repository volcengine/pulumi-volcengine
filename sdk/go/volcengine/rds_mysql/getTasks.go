// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of rds mysql tasks
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds_mysql.GetTasks(ctx, &rds_mysql.GetTasksArgs{
//				CreationEndTime:   pulumi.StringRef("2025-06-23T00:00:00Z"),
//				CreationStartTime: pulumi.StringRef("2025-06-21T00:00:00Z"),
//				InstanceId:        pulumi.StringRef("mysql-b51d37110dd1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTasks(ctx *pulumi.Context, args *GetTasksArgs, opts ...pulumi.InvokeOption) (*GetTasksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTasksResult
	err := ctx.Invoke("volcengine:rds_mysql/getTasks:getTasks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTasks.
type GetTasksArgs struct {
	// The end time of the task. The time format is yyyy-MM-ddTHH:mm:ssZ (UTC time). Instructions: For the two groups of parameters, task time (CreationStartTime and CreationEndTime) and TaskId, one of them must be selected. The maximum time interval between the task start time (CreationStartTime) and the task end time (CreationEndTime) shall not exceed 7 days.
	CreationEndTime *string `pulumi:"creationEndTime"`
	// The start time of the task. The time format is yyyy-MM-ddTHH:mm:ssZ (UTC time). Instructions: For the two groups of parameters, task time (CreationStartTime and CreationEndTime) and TaskId, one of them must be selected. The maximum time interval between the task start time (CreationStartTime) and the task end time (CreationEndTime) cannot exceed 7 days.
	CreationStartTime *string `pulumi:"creationStartTime"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name.
	ProjectName *string `pulumi:"projectName"`
	// Task name.
	TaskAction *string `pulumi:"taskAction"`
	// Task Category. The values are as shown in the following list, and multiple values can be selected: BackupRecoveryManagement: Backup and Recovery Management. DatabaseAdminManagement: Database Administration Management. DatabaseProxy: Database Proxy. HighAvailability: High Availability. InstanceAttribute: Instance Attribute. InstanceManagement: Instance Management. NetworkManagement: Network Management. SecurityManagement: Security Management. SystemMaintainManagement: System Operation and Maintenance Management. VersionUpgrade: Version Upgrade.
	TaskCategories []string `pulumi:"taskCategories"`
	// Task ID. Description: For the two groups of parameters, TaskId and task time (CreationStartTime and CreationEndTime), one of them must be selected.
	TaskId *string `pulumi:"taskId"`
	// Task source. Values: User: Tenant. System: System. SystemUser: Internal operation and maintenance. UserMaintain: Maintenance operations initiated by system/operation and maintenance administrators and visible to tenants.
	TaskSource *string `pulumi:"taskSource"`
	// Task status. The values are as shown in the following list, and multiple values can be selected: WaitSwitch: Waiting for switching. WaitStart: Waiting for execution. Canceled: Canceled. Stopped: Terminated. Running_BeforeSwitch: Running (before switching). Timeout: Execution Timeout. Success: Execution Success. Failed: Execution Failed. Running: In Execution. Stopping: In Termination.
	TaskStatuses []string `pulumi:"taskStatuses"`
	// Task type. Values: Web: Console request. OpenAPI: OpenAPI request. AssumeRole: Role - playing request. Other: Other requests.
	TaskType *string `pulumi:"taskType"`
}

// A collection of values returned by getTasks.
type GetTasksResult struct {
	CreationEndTime   *string `pulumi:"creationEndTime"`
	CreationStartTime *string `pulumi:"creationStartTime"`
	// The collection of query.
	Datas []GetTasksData `pulumi:"datas"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Instance ID.
	InstanceId  *string `pulumi:"instanceId"`
	OutputFile  *string `pulumi:"outputFile"`
	ProjectName *string `pulumi:"projectName"`
	// Task name.
	TaskAction *string `pulumi:"taskAction"`
	// Task category.
	TaskCategories []string `pulumi:"taskCategories"`
	// Task ID.
	TaskId     *string `pulumi:"taskId"`
	TaskSource *string `pulumi:"taskSource"`
	// Task status. The values are as shown in the following list, and multiple values can be selected: WaitSwitch: Waiting for switching. WaitStart: Waiting for execution. Canceled: Canceled. Stopped: Terminated. Running_BeforeSwitch: Running (before switching). Timeout: Execution Timeout. Success: Execution Success. Failed: Execution Failed. Running: In Execution. Stopping: In Termination.
	TaskStatuses []string `pulumi:"taskStatuses"`
	TaskType     *string  `pulumi:"taskType"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetTasksOutput(ctx *pulumi.Context, args GetTasksOutputArgs, opts ...pulumi.InvokeOption) GetTasksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTasksResult, error) {
			args := v.(GetTasksArgs)
			r, err := GetTasks(ctx, &args, opts...)
			var s GetTasksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTasksResultOutput)
}

// A collection of arguments for invoking getTasks.
type GetTasksOutputArgs struct {
	// The end time of the task. The time format is yyyy-MM-ddTHH:mm:ssZ (UTC time). Instructions: For the two groups of parameters, task time (CreationStartTime and CreationEndTime) and TaskId, one of them must be selected. The maximum time interval between the task start time (CreationStartTime) and the task end time (CreationEndTime) shall not exceed 7 days.
	CreationEndTime pulumi.StringPtrInput `pulumi:"creationEndTime"`
	// The start time of the task. The time format is yyyy-MM-ddTHH:mm:ssZ (UTC time). Instructions: For the two groups of parameters, task time (CreationStartTime and CreationEndTime) and TaskId, one of them must be selected. The maximum time interval between the task start time (CreationStartTime) and the task end time (CreationEndTime) cannot exceed 7 days.
	CreationStartTime pulumi.StringPtrInput `pulumi:"creationStartTime"`
	// Instance ID.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Task name.
	TaskAction pulumi.StringPtrInput `pulumi:"taskAction"`
	// Task Category. The values are as shown in the following list, and multiple values can be selected: BackupRecoveryManagement: Backup and Recovery Management. DatabaseAdminManagement: Database Administration Management. DatabaseProxy: Database Proxy. HighAvailability: High Availability. InstanceAttribute: Instance Attribute. InstanceManagement: Instance Management. NetworkManagement: Network Management. SecurityManagement: Security Management. SystemMaintainManagement: System Operation and Maintenance Management. VersionUpgrade: Version Upgrade.
	TaskCategories pulumi.StringArrayInput `pulumi:"taskCategories"`
	// Task ID. Description: For the two groups of parameters, TaskId and task time (CreationStartTime and CreationEndTime), one of them must be selected.
	TaskId pulumi.StringPtrInput `pulumi:"taskId"`
	// Task source. Values: User: Tenant. System: System. SystemUser: Internal operation and maintenance. UserMaintain: Maintenance operations initiated by system/operation and maintenance administrators and visible to tenants.
	TaskSource pulumi.StringPtrInput `pulumi:"taskSource"`
	// Task status. The values are as shown in the following list, and multiple values can be selected: WaitSwitch: Waiting for switching. WaitStart: Waiting for execution. Canceled: Canceled. Stopped: Terminated. Running_BeforeSwitch: Running (before switching). Timeout: Execution Timeout. Success: Execution Success. Failed: Execution Failed. Running: In Execution. Stopping: In Termination.
	TaskStatuses pulumi.StringArrayInput `pulumi:"taskStatuses"`
	// Task type. Values: Web: Console request. OpenAPI: OpenAPI request. AssumeRole: Role - playing request. Other: Other requests.
	TaskType pulumi.StringPtrInput `pulumi:"taskType"`
}

func (GetTasksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksArgs)(nil)).Elem()
}

// A collection of values returned by getTasks.
type GetTasksResultOutput struct{ *pulumi.OutputState }

func (GetTasksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksResult)(nil)).Elem()
}

func (o GetTasksResultOutput) ToGetTasksResultOutput() GetTasksResultOutput {
	return o
}

func (o GetTasksResultOutput) ToGetTasksResultOutputWithContext(ctx context.Context) GetTasksResultOutput {
	return o
}

func (o GetTasksResultOutput) CreationEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.CreationEndTime }).(pulumi.StringPtrOutput)
}

func (o GetTasksResultOutput) CreationStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.CreationStartTime }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetTasksResultOutput) Datas() GetTasksDataArrayOutput {
	return o.ApplyT(func(v GetTasksResult) []GetTasksData { return v.Datas }).(GetTasksDataArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTasksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksResult) string { return v.Id }).(pulumi.StringOutput)
}

// Instance ID.
func (o GetTasksResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o GetTasksResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetTasksResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Task name.
func (o GetTasksResultOutput) TaskAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.TaskAction }).(pulumi.StringPtrOutput)
}

// Task category.
func (o GetTasksResultOutput) TaskCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTasksResult) []string { return v.TaskCategories }).(pulumi.StringArrayOutput)
}

// Task ID.
func (o GetTasksResultOutput) TaskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.TaskId }).(pulumi.StringPtrOutput)
}

func (o GetTasksResultOutput) TaskSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.TaskSource }).(pulumi.StringPtrOutput)
}

// Task status. The values are as shown in the following list, and multiple values can be selected: WaitSwitch: Waiting for switching. WaitStart: Waiting for execution. Canceled: Canceled. Stopped: Terminated. Running_BeforeSwitch: Running (before switching). Timeout: Execution Timeout. Success: Execution Success. Failed: Execution Failed. Running: In Execution. Stopping: In Termination.
func (o GetTasksResultOutput) TaskStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTasksResult) []string { return v.TaskStatuses }).(pulumi.StringArrayOutput)
}

func (o GetTasksResultOutput) TaskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.TaskType }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetTasksResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTasksResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTasksResultOutput{})
}
