// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage rds mysql endpoint public address
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_mysql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds_mysql.NewEndpointPublicAddress(ctx, "foo", &rds_mysql.EndpointPublicAddressArgs{
//				Domain:     pulumi.String("mysql-38c3d4f05f6e-test-01b0-public.rds.volces.com"),
//				EipId:      pulumi.String("eip-rrq618fo9c00v0x58s4r6ky"),
//				EndpointId: pulumi.String("mysql-38c3d4f05f6e-custom-01b0"),
//				InstanceId: pulumi.String("mysql-38c3d4f05f6e"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RdsMysqlEndpointPublicAddress can be imported using the instance id, endpoint id and eip id, e.g.
//
// ```sh
// $ pulumi import volcengine:rds_mysql/endpointPublicAddress:EndpointPublicAddress default instanceId:endpointId:eipId
// ```
type EndpointPublicAddress struct {
	pulumi.CustomResourceState

	// The domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The id of the eip.
	EipId pulumi.StringOutput `pulumi:"eipId"`
	// The id of the endpoint.
	EndpointId pulumi.StringOutput `pulumi:"endpointId"`
	// The id of mysql instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewEndpointPublicAddress registers a new resource with the given unique name, arguments, and options.
func NewEndpointPublicAddress(ctx *pulumi.Context,
	name string, args *EndpointPublicAddressArgs, opts ...pulumi.ResourceOption) (*EndpointPublicAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EipId == nil {
		return nil, errors.New("invalid value for required argument 'EipId'")
	}
	if args.EndpointId == nil {
		return nil, errors.New("invalid value for required argument 'EndpointId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EndpointPublicAddress
	err := ctx.RegisterResource("volcengine:rds_mysql/endpointPublicAddress:EndpointPublicAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointPublicAddress gets an existing EndpointPublicAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointPublicAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointPublicAddressState, opts ...pulumi.ResourceOption) (*EndpointPublicAddress, error) {
	var resource EndpointPublicAddress
	err := ctx.ReadResource("volcengine:rds_mysql/endpointPublicAddress:EndpointPublicAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointPublicAddress resources.
type endpointPublicAddressState struct {
	// The domain.
	Domain *string `pulumi:"domain"`
	// The id of the eip.
	EipId *string `pulumi:"eipId"`
	// The id of the endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// The id of mysql instance.
	InstanceId *string `pulumi:"instanceId"`
}

type EndpointPublicAddressState struct {
	// The domain.
	Domain pulumi.StringPtrInput
	// The id of the eip.
	EipId pulumi.StringPtrInput
	// The id of the endpoint.
	EndpointId pulumi.StringPtrInput
	// The id of mysql instance.
	InstanceId pulumi.StringPtrInput
}

func (EndpointPublicAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointPublicAddressState)(nil)).Elem()
}

type endpointPublicAddressArgs struct {
	// The domain.
	Domain *string `pulumi:"domain"`
	// The id of the eip.
	EipId string `pulumi:"eipId"`
	// The id of the endpoint.
	EndpointId string `pulumi:"endpointId"`
	// The id of mysql instance.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a EndpointPublicAddress resource.
type EndpointPublicAddressArgs struct {
	// The domain.
	Domain pulumi.StringPtrInput
	// The id of the eip.
	EipId pulumi.StringInput
	// The id of the endpoint.
	EndpointId pulumi.StringInput
	// The id of mysql instance.
	InstanceId pulumi.StringInput
}

func (EndpointPublicAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointPublicAddressArgs)(nil)).Elem()
}

type EndpointPublicAddressInput interface {
	pulumi.Input

	ToEndpointPublicAddressOutput() EndpointPublicAddressOutput
	ToEndpointPublicAddressOutputWithContext(ctx context.Context) EndpointPublicAddressOutput
}

func (*EndpointPublicAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPublicAddress)(nil)).Elem()
}

func (i *EndpointPublicAddress) ToEndpointPublicAddressOutput() EndpointPublicAddressOutput {
	return i.ToEndpointPublicAddressOutputWithContext(context.Background())
}

func (i *EndpointPublicAddress) ToEndpointPublicAddressOutputWithContext(ctx context.Context) EndpointPublicAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPublicAddressOutput)
}

// EndpointPublicAddressArrayInput is an input type that accepts EndpointPublicAddressArray and EndpointPublicAddressArrayOutput values.
// You can construct a concrete instance of `EndpointPublicAddressArrayInput` via:
//
//	EndpointPublicAddressArray{ EndpointPublicAddressArgs{...} }
type EndpointPublicAddressArrayInput interface {
	pulumi.Input

	ToEndpointPublicAddressArrayOutput() EndpointPublicAddressArrayOutput
	ToEndpointPublicAddressArrayOutputWithContext(context.Context) EndpointPublicAddressArrayOutput
}

type EndpointPublicAddressArray []EndpointPublicAddressInput

func (EndpointPublicAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointPublicAddress)(nil)).Elem()
}

func (i EndpointPublicAddressArray) ToEndpointPublicAddressArrayOutput() EndpointPublicAddressArrayOutput {
	return i.ToEndpointPublicAddressArrayOutputWithContext(context.Background())
}

func (i EndpointPublicAddressArray) ToEndpointPublicAddressArrayOutputWithContext(ctx context.Context) EndpointPublicAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPublicAddressArrayOutput)
}

// EndpointPublicAddressMapInput is an input type that accepts EndpointPublicAddressMap and EndpointPublicAddressMapOutput values.
// You can construct a concrete instance of `EndpointPublicAddressMapInput` via:
//
//	EndpointPublicAddressMap{ "key": EndpointPublicAddressArgs{...} }
type EndpointPublicAddressMapInput interface {
	pulumi.Input

	ToEndpointPublicAddressMapOutput() EndpointPublicAddressMapOutput
	ToEndpointPublicAddressMapOutputWithContext(context.Context) EndpointPublicAddressMapOutput
}

type EndpointPublicAddressMap map[string]EndpointPublicAddressInput

func (EndpointPublicAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointPublicAddress)(nil)).Elem()
}

func (i EndpointPublicAddressMap) ToEndpointPublicAddressMapOutput() EndpointPublicAddressMapOutput {
	return i.ToEndpointPublicAddressMapOutputWithContext(context.Background())
}

func (i EndpointPublicAddressMap) ToEndpointPublicAddressMapOutputWithContext(ctx context.Context) EndpointPublicAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPublicAddressMapOutput)
}

type EndpointPublicAddressOutput struct{ *pulumi.OutputState }

func (EndpointPublicAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPublicAddress)(nil)).Elem()
}

func (o EndpointPublicAddressOutput) ToEndpointPublicAddressOutput() EndpointPublicAddressOutput {
	return o
}

func (o EndpointPublicAddressOutput) ToEndpointPublicAddressOutputWithContext(ctx context.Context) EndpointPublicAddressOutput {
	return o
}

// The domain.
func (o EndpointPublicAddressOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointPublicAddress) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// The id of the eip.
func (o EndpointPublicAddressOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointPublicAddress) pulumi.StringOutput { return v.EipId }).(pulumi.StringOutput)
}

// The id of the endpoint.
func (o EndpointPublicAddressOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointPublicAddress) pulumi.StringOutput { return v.EndpointId }).(pulumi.StringOutput)
}

// The id of mysql instance.
func (o EndpointPublicAddressOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointPublicAddress) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type EndpointPublicAddressArrayOutput struct{ *pulumi.OutputState }

func (EndpointPublicAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointPublicAddress)(nil)).Elem()
}

func (o EndpointPublicAddressArrayOutput) ToEndpointPublicAddressArrayOutput() EndpointPublicAddressArrayOutput {
	return o
}

func (o EndpointPublicAddressArrayOutput) ToEndpointPublicAddressArrayOutputWithContext(ctx context.Context) EndpointPublicAddressArrayOutput {
	return o
}

func (o EndpointPublicAddressArrayOutput) Index(i pulumi.IntInput) EndpointPublicAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointPublicAddress {
		return vs[0].([]*EndpointPublicAddress)[vs[1].(int)]
	}).(EndpointPublicAddressOutput)
}

type EndpointPublicAddressMapOutput struct{ *pulumi.OutputState }

func (EndpointPublicAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointPublicAddress)(nil)).Elem()
}

func (o EndpointPublicAddressMapOutput) ToEndpointPublicAddressMapOutput() EndpointPublicAddressMapOutput {
	return o
}

func (o EndpointPublicAddressMapOutput) ToEndpointPublicAddressMapOutputWithContext(ctx context.Context) EndpointPublicAddressMapOutput {
	return o
}

func (o EndpointPublicAddressMapOutput) MapIndex(k pulumi.StringInput) EndpointPublicAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointPublicAddress {
		return vs[0].(map[string]*EndpointPublicAddress)[vs[1].(string)]
	}).(EndpointPublicAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPublicAddressInput)(nil)).Elem(), &EndpointPublicAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPublicAddressArrayInput)(nil)).Elem(), EndpointPublicAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPublicAddressMapInput)(nil)).Elem(), EndpointPublicAddressMap{})
	pulumi.RegisterOutputType(EndpointPublicAddressOutput{})
	pulumi.RegisterOutputType(EndpointPublicAddressArrayOutput{})
	pulumi.RegisterOutputType(EndpointPublicAddressMapOutput{})
}
