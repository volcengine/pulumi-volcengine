// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type BucketAccountAcl struct {
	// The accountId to control.
	AccountId string `pulumi:"accountId"`
	// The acl type to control.Valid value is CanonicalUser.
	AclType *string `pulumi:"aclType"`
	// The permission to control.Valid value is FULL_CONTROL|READ|READ_ACP|WRITE|WRITE_ACP.
	Permission string `pulumi:"permission"`
}

// BucketAccountAclInput is an input type that accepts BucketAccountAclArgs and BucketAccountAclOutput values.
// You can construct a concrete instance of `BucketAccountAclInput` via:
//
//	BucketAccountAclArgs{...}
type BucketAccountAclInput interface {
	pulumi.Input

	ToBucketAccountAclOutput() BucketAccountAclOutput
	ToBucketAccountAclOutputWithContext(context.Context) BucketAccountAclOutput
}

type BucketAccountAclArgs struct {
	// The accountId to control.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The acl type to control.Valid value is CanonicalUser.
	AclType pulumi.StringPtrInput `pulumi:"aclType"`
	// The permission to control.Valid value is FULL_CONTROL|READ|READ_ACP|WRITE|WRITE_ACP.
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (BucketAccountAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccountAcl)(nil)).Elem()
}

func (i BucketAccountAclArgs) ToBucketAccountAclOutput() BucketAccountAclOutput {
	return i.ToBucketAccountAclOutputWithContext(context.Background())
}

func (i BucketAccountAclArgs) ToBucketAccountAclOutputWithContext(ctx context.Context) BucketAccountAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccountAclOutput)
}

// BucketAccountAclArrayInput is an input type that accepts BucketAccountAclArray and BucketAccountAclArrayOutput values.
// You can construct a concrete instance of `BucketAccountAclArrayInput` via:
//
//	BucketAccountAclArray{ BucketAccountAclArgs{...} }
type BucketAccountAclArrayInput interface {
	pulumi.Input

	ToBucketAccountAclArrayOutput() BucketAccountAclArrayOutput
	ToBucketAccountAclArrayOutputWithContext(context.Context) BucketAccountAclArrayOutput
}

type BucketAccountAclArray []BucketAccountAclInput

func (BucketAccountAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAccountAcl)(nil)).Elem()
}

func (i BucketAccountAclArray) ToBucketAccountAclArrayOutput() BucketAccountAclArrayOutput {
	return i.ToBucketAccountAclArrayOutputWithContext(context.Background())
}

func (i BucketAccountAclArray) ToBucketAccountAclArrayOutputWithContext(ctx context.Context) BucketAccountAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccountAclArrayOutput)
}

type BucketAccountAclOutput struct{ *pulumi.OutputState }

func (BucketAccountAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccountAcl)(nil)).Elem()
}

func (o BucketAccountAclOutput) ToBucketAccountAclOutput() BucketAccountAclOutput {
	return o
}

func (o BucketAccountAclOutput) ToBucketAccountAclOutputWithContext(ctx context.Context) BucketAccountAclOutput {
	return o
}

// The accountId to control.
func (o BucketAccountAclOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccountAcl) string { return v.AccountId }).(pulumi.StringOutput)
}

// The acl type to control.Valid value is CanonicalUser.
func (o BucketAccountAclOutput) AclType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccountAcl) *string { return v.AclType }).(pulumi.StringPtrOutput)
}

// The permission to control.Valid value is FULL_CONTROL|READ|READ_ACP|WRITE|WRITE_ACP.
func (o BucketAccountAclOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v BucketAccountAcl) string { return v.Permission }).(pulumi.StringOutput)
}

type BucketAccountAclArrayOutput struct{ *pulumi.OutputState }

func (BucketAccountAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAccountAcl)(nil)).Elem()
}

func (o BucketAccountAclArrayOutput) ToBucketAccountAclArrayOutput() BucketAccountAclArrayOutput {
	return o
}

func (o BucketAccountAclArrayOutput) ToBucketAccountAclArrayOutputWithContext(ctx context.Context) BucketAccountAclArrayOutput {
	return o
}

func (o BucketAccountAclArrayOutput) Index(i pulumi.IntInput) BucketAccountAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketAccountAcl {
		return vs[0].([]BucketAccountAcl)[vs[1].(int)]
	}).(BucketAccountAclOutput)
}

type BucketObjectAccountAcl struct {
	// The accountId to control.
	AccountId string `pulumi:"accountId"`
	// The acl type to control.Valid value is CanonicalUser.
	AclType *string `pulumi:"aclType"`
	// The permission to control.Valid value is FULL_CONTROL|READ|READ_ACP|WRITE|WRITE_ACP.
	Permission string `pulumi:"permission"`
}

// BucketObjectAccountAclInput is an input type that accepts BucketObjectAccountAclArgs and BucketObjectAccountAclOutput values.
// You can construct a concrete instance of `BucketObjectAccountAclInput` via:
//
//	BucketObjectAccountAclArgs{...}
type BucketObjectAccountAclInput interface {
	pulumi.Input

	ToBucketObjectAccountAclOutput() BucketObjectAccountAclOutput
	ToBucketObjectAccountAclOutputWithContext(context.Context) BucketObjectAccountAclOutput
}

type BucketObjectAccountAclArgs struct {
	// The accountId to control.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The acl type to control.Valid value is CanonicalUser.
	AclType pulumi.StringPtrInput `pulumi:"aclType"`
	// The permission to control.Valid value is FULL_CONTROL|READ|READ_ACP|WRITE|WRITE_ACP.
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (BucketObjectAccountAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectAccountAcl)(nil)).Elem()
}

func (i BucketObjectAccountAclArgs) ToBucketObjectAccountAclOutput() BucketObjectAccountAclOutput {
	return i.ToBucketObjectAccountAclOutputWithContext(context.Background())
}

func (i BucketObjectAccountAclArgs) ToBucketObjectAccountAclOutputWithContext(ctx context.Context) BucketObjectAccountAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectAccountAclOutput)
}

// BucketObjectAccountAclArrayInput is an input type that accepts BucketObjectAccountAclArray and BucketObjectAccountAclArrayOutput values.
// You can construct a concrete instance of `BucketObjectAccountAclArrayInput` via:
//
//	BucketObjectAccountAclArray{ BucketObjectAccountAclArgs{...} }
type BucketObjectAccountAclArrayInput interface {
	pulumi.Input

	ToBucketObjectAccountAclArrayOutput() BucketObjectAccountAclArrayOutput
	ToBucketObjectAccountAclArrayOutputWithContext(context.Context) BucketObjectAccountAclArrayOutput
}

type BucketObjectAccountAclArray []BucketObjectAccountAclInput

func (BucketObjectAccountAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketObjectAccountAcl)(nil)).Elem()
}

func (i BucketObjectAccountAclArray) ToBucketObjectAccountAclArrayOutput() BucketObjectAccountAclArrayOutput {
	return i.ToBucketObjectAccountAclArrayOutputWithContext(context.Background())
}

func (i BucketObjectAccountAclArray) ToBucketObjectAccountAclArrayOutputWithContext(ctx context.Context) BucketObjectAccountAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectAccountAclArrayOutput)
}

type BucketObjectAccountAclOutput struct{ *pulumi.OutputState }

func (BucketObjectAccountAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectAccountAcl)(nil)).Elem()
}

func (o BucketObjectAccountAclOutput) ToBucketObjectAccountAclOutput() BucketObjectAccountAclOutput {
	return o
}

func (o BucketObjectAccountAclOutput) ToBucketObjectAccountAclOutputWithContext(ctx context.Context) BucketObjectAccountAclOutput {
	return o
}

// The accountId to control.
func (o BucketObjectAccountAclOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectAccountAcl) string { return v.AccountId }).(pulumi.StringOutput)
}

// The acl type to control.Valid value is CanonicalUser.
func (o BucketObjectAccountAclOutput) AclType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketObjectAccountAcl) *string { return v.AclType }).(pulumi.StringPtrOutput)
}

// The permission to control.Valid value is FULL_CONTROL|READ|READ_ACP|WRITE|WRITE_ACP.
func (o BucketObjectAccountAclOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectAccountAcl) string { return v.Permission }).(pulumi.StringOutput)
}

type BucketObjectAccountAclArrayOutput struct{ *pulumi.OutputState }

func (BucketObjectAccountAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketObjectAccountAcl)(nil)).Elem()
}

func (o BucketObjectAccountAclArrayOutput) ToBucketObjectAccountAclArrayOutput() BucketObjectAccountAclArrayOutput {
	return o
}

func (o BucketObjectAccountAclArrayOutput) ToBucketObjectAccountAclArrayOutputWithContext(ctx context.Context) BucketObjectAccountAclArrayOutput {
	return o
}

func (o BucketObjectAccountAclArrayOutput) Index(i pulumi.IntInput) BucketObjectAccountAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketObjectAccountAcl {
		return vs[0].([]BucketObjectAccountAcl)[vs[1].(int)]
	}).(BucketObjectAccountAclOutput)
}

type BucketObjectTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// BucketObjectTagInput is an input type that accepts BucketObjectTagArgs and BucketObjectTagOutput values.
// You can construct a concrete instance of `BucketObjectTagInput` via:
//
//	BucketObjectTagArgs{...}
type BucketObjectTagInput interface {
	pulumi.Input

	ToBucketObjectTagOutput() BucketObjectTagOutput
	ToBucketObjectTagOutputWithContext(context.Context) BucketObjectTagOutput
}

type BucketObjectTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BucketObjectTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectTag)(nil)).Elem()
}

func (i BucketObjectTagArgs) ToBucketObjectTagOutput() BucketObjectTagOutput {
	return i.ToBucketObjectTagOutputWithContext(context.Background())
}

func (i BucketObjectTagArgs) ToBucketObjectTagOutputWithContext(ctx context.Context) BucketObjectTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectTagOutput)
}

// BucketObjectTagArrayInput is an input type that accepts BucketObjectTagArray and BucketObjectTagArrayOutput values.
// You can construct a concrete instance of `BucketObjectTagArrayInput` via:
//
//	BucketObjectTagArray{ BucketObjectTagArgs{...} }
type BucketObjectTagArrayInput interface {
	pulumi.Input

	ToBucketObjectTagArrayOutput() BucketObjectTagArrayOutput
	ToBucketObjectTagArrayOutputWithContext(context.Context) BucketObjectTagArrayOutput
}

type BucketObjectTagArray []BucketObjectTagInput

func (BucketObjectTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketObjectTag)(nil)).Elem()
}

func (i BucketObjectTagArray) ToBucketObjectTagArrayOutput() BucketObjectTagArrayOutput {
	return i.ToBucketObjectTagArrayOutputWithContext(context.Background())
}

func (i BucketObjectTagArray) ToBucketObjectTagArrayOutputWithContext(ctx context.Context) BucketObjectTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectTagArrayOutput)
}

type BucketObjectTagOutput struct{ *pulumi.OutputState }

func (BucketObjectTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectTag)(nil)).Elem()
}

func (o BucketObjectTagOutput) ToBucketObjectTagOutput() BucketObjectTagOutput {
	return o
}

func (o BucketObjectTagOutput) ToBucketObjectTagOutputWithContext(ctx context.Context) BucketObjectTagOutput {
	return o
}

// The Key of Tags.
func (o BucketObjectTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o BucketObjectTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectTag) string { return v.Value }).(pulumi.StringOutput)
}

type BucketObjectTagArrayOutput struct{ *pulumi.OutputState }

func (BucketObjectTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketObjectTag)(nil)).Elem()
}

func (o BucketObjectTagArrayOutput) ToBucketObjectTagArrayOutput() BucketObjectTagArrayOutput {
	return o
}

func (o BucketObjectTagArrayOutput) ToBucketObjectTagArrayOutputWithContext(ctx context.Context) BucketObjectTagArrayOutput {
	return o
}

func (o BucketObjectTagArrayOutput) Index(i pulumi.IntInput) BucketObjectTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketObjectTag {
		return vs[0].([]BucketObjectTag)[vs[1].(int)]
	}).(BucketObjectTagOutput)
}

type BucketObjectsObject struct {
	// The content the TOS Object when content type is json or text and xml.
	Content string `pulumi:"content"`
	// The name the TOS Object.
	Name string `pulumi:"name"`
	// The name the TOS Object size.
	Size int `pulumi:"size"`
	// The name the TOS Object storage class.
	StorageClass string `pulumi:"storageClass"`
}

// BucketObjectsObjectInput is an input type that accepts BucketObjectsObjectArgs and BucketObjectsObjectOutput values.
// You can construct a concrete instance of `BucketObjectsObjectInput` via:
//
//	BucketObjectsObjectArgs{...}
type BucketObjectsObjectInput interface {
	pulumi.Input

	ToBucketObjectsObjectOutput() BucketObjectsObjectOutput
	ToBucketObjectsObjectOutputWithContext(context.Context) BucketObjectsObjectOutput
}

type BucketObjectsObjectArgs struct {
	// The content the TOS Object when content type is json or text and xml.
	Content pulumi.StringInput `pulumi:"content"`
	// The name the TOS Object.
	Name pulumi.StringInput `pulumi:"name"`
	// The name the TOS Object size.
	Size pulumi.IntInput `pulumi:"size"`
	// The name the TOS Object storage class.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BucketObjectsObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectsObject)(nil)).Elem()
}

func (i BucketObjectsObjectArgs) ToBucketObjectsObjectOutput() BucketObjectsObjectOutput {
	return i.ToBucketObjectsObjectOutputWithContext(context.Background())
}

func (i BucketObjectsObjectArgs) ToBucketObjectsObjectOutputWithContext(ctx context.Context) BucketObjectsObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectsObjectOutput)
}

// BucketObjectsObjectArrayInput is an input type that accepts BucketObjectsObjectArray and BucketObjectsObjectArrayOutput values.
// You can construct a concrete instance of `BucketObjectsObjectArrayInput` via:
//
//	BucketObjectsObjectArray{ BucketObjectsObjectArgs{...} }
type BucketObjectsObjectArrayInput interface {
	pulumi.Input

	ToBucketObjectsObjectArrayOutput() BucketObjectsObjectArrayOutput
	ToBucketObjectsObjectArrayOutputWithContext(context.Context) BucketObjectsObjectArrayOutput
}

type BucketObjectsObjectArray []BucketObjectsObjectInput

func (BucketObjectsObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketObjectsObject)(nil)).Elem()
}

func (i BucketObjectsObjectArray) ToBucketObjectsObjectArrayOutput() BucketObjectsObjectArrayOutput {
	return i.ToBucketObjectsObjectArrayOutputWithContext(context.Background())
}

func (i BucketObjectsObjectArray) ToBucketObjectsObjectArrayOutputWithContext(ctx context.Context) BucketObjectsObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectsObjectArrayOutput)
}

type BucketObjectsObjectOutput struct{ *pulumi.OutputState }

func (BucketObjectsObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectsObject)(nil)).Elem()
}

func (o BucketObjectsObjectOutput) ToBucketObjectsObjectOutput() BucketObjectsObjectOutput {
	return o
}

func (o BucketObjectsObjectOutput) ToBucketObjectsObjectOutputWithContext(ctx context.Context) BucketObjectsObjectOutput {
	return o
}

// The content the TOS Object when content type is json or text and xml.
func (o BucketObjectsObjectOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectsObject) string { return v.Content }).(pulumi.StringOutput)
}

// The name the TOS Object.
func (o BucketObjectsObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectsObject) string { return v.Name }).(pulumi.StringOutput)
}

// The name the TOS Object size.
func (o BucketObjectsObjectOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v BucketObjectsObject) int { return v.Size }).(pulumi.IntOutput)
}

// The name the TOS Object storage class.
func (o BucketObjectsObjectOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v BucketObjectsObject) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BucketObjectsObjectArrayOutput struct{ *pulumi.OutputState }

func (BucketObjectsObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketObjectsObject)(nil)).Elem()
}

func (o BucketObjectsObjectArrayOutput) ToBucketObjectsObjectArrayOutput() BucketObjectsObjectArrayOutput {
	return o
}

func (o BucketObjectsObjectArrayOutput) ToBucketObjectsObjectArrayOutputWithContext(ctx context.Context) BucketObjectsObjectArrayOutput {
	return o
}

func (o BucketObjectsObjectArrayOutput) Index(i pulumi.IntInput) BucketObjectsObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketObjectsObject {
		return vs[0].([]BucketObjectsObject)[vs[1].(int)]
	}).(BucketObjectsObjectOutput)
}

type BucketTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// BucketTagInput is an input type that accepts BucketTagArgs and BucketTagOutput values.
// You can construct a concrete instance of `BucketTagInput` via:
//
//	BucketTagArgs{...}
type BucketTagInput interface {
	pulumi.Input

	ToBucketTagOutput() BucketTagOutput
	ToBucketTagOutputWithContext(context.Context) BucketTagOutput
}

type BucketTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BucketTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTag)(nil)).Elem()
}

func (i BucketTagArgs) ToBucketTagOutput() BucketTagOutput {
	return i.ToBucketTagOutputWithContext(context.Background())
}

func (i BucketTagArgs) ToBucketTagOutputWithContext(ctx context.Context) BucketTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagOutput)
}

// BucketTagArrayInput is an input type that accepts BucketTagArray and BucketTagArrayOutput values.
// You can construct a concrete instance of `BucketTagArrayInput` via:
//
//	BucketTagArray{ BucketTagArgs{...} }
type BucketTagArrayInput interface {
	pulumi.Input

	ToBucketTagArrayOutput() BucketTagArrayOutput
	ToBucketTagArrayOutputWithContext(context.Context) BucketTagArrayOutput
}

type BucketTagArray []BucketTagInput

func (BucketTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTag)(nil)).Elem()
}

func (i BucketTagArray) ToBucketTagArrayOutput() BucketTagArrayOutput {
	return i.ToBucketTagArrayOutputWithContext(context.Background())
}

func (i BucketTagArray) ToBucketTagArrayOutputWithContext(ctx context.Context) BucketTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagArrayOutput)
}

type BucketTagOutput struct{ *pulumi.OutputState }

func (BucketTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTag)(nil)).Elem()
}

func (o BucketTagOutput) ToBucketTagOutput() BucketTagOutput {
	return o
}

func (o BucketTagOutput) ToBucketTagOutputWithContext(ctx context.Context) BucketTagOutput {
	return o
}

// The Key of Tags.
func (o BucketTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BucketTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o BucketTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BucketTag) string { return v.Value }).(pulumi.StringOutput)
}

type BucketTagArrayOutput struct{ *pulumi.OutputState }

func (BucketTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTag)(nil)).Elem()
}

func (o BucketTagArrayOutput) ToBucketTagArrayOutput() BucketTagArrayOutput {
	return o
}

func (o BucketTagArrayOutput) ToBucketTagArrayOutputWithContext(ctx context.Context) BucketTagArrayOutput {
	return o
}

func (o BucketTagArrayOutput) Index(i pulumi.IntInput) BucketTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketTag {
		return vs[0].([]BucketTag)[vs[1].(int)]
	}).(BucketTagOutput)
}

type BucketsBucket struct {
	// The create date of the TOS bucket.
	CreationDate string `pulumi:"creationDate"`
	// The extranet endpoint of the TOS bucket.
	ExtranetEndpoint string `pulumi:"extranetEndpoint"`
	// The intranet endpoint the TOS bucket.
	IntranetEndpoint string `pulumi:"intranetEndpoint"`
	// (**Deprecated**) The Field is Deprecated. The truncated the TOS bucket.
	//
	// Deprecated: The Field is Deprecated.
	IsTruncated bool `pulumi:"isTruncated"`
	// The location of the TOS bucket.
	Location string `pulumi:"location"`
	// (**Deprecated**) The Field is Deprecated. The marker the TOS bucket.
	//
	// Deprecated: The Field is Deprecated.
	Marker string `pulumi:"marker"`
	// (**Deprecated**) The Field is Deprecated. The max keys the TOS bucket.
	//
	// Deprecated: The Field is Deprecated.
	MaxKeys int `pulumi:"maxKeys"`
	// The name the TOS bucket.
	Name string `pulumi:"name"`
	// (**Deprecated**) The Field is Deprecated. The prefix the TOS bucket.
	//
	// Deprecated: The Field is Deprecated.
	Prefix string `pulumi:"prefix"`
}

// BucketsBucketInput is an input type that accepts BucketsBucketArgs and BucketsBucketOutput values.
// You can construct a concrete instance of `BucketsBucketInput` via:
//
//	BucketsBucketArgs{...}
type BucketsBucketInput interface {
	pulumi.Input

	ToBucketsBucketOutput() BucketsBucketOutput
	ToBucketsBucketOutputWithContext(context.Context) BucketsBucketOutput
}

type BucketsBucketArgs struct {
	// The create date of the TOS bucket.
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The extranet endpoint of the TOS bucket.
	ExtranetEndpoint pulumi.StringInput `pulumi:"extranetEndpoint"`
	// The intranet endpoint the TOS bucket.
	IntranetEndpoint pulumi.StringInput `pulumi:"intranetEndpoint"`
	// (**Deprecated**) The Field is Deprecated. The truncated the TOS bucket.
	//
	// Deprecated: The Field is Deprecated.
	IsTruncated pulumi.BoolInput `pulumi:"isTruncated"`
	// The location of the TOS bucket.
	Location pulumi.StringInput `pulumi:"location"`
	// (**Deprecated**) The Field is Deprecated. The marker the TOS bucket.
	//
	// Deprecated: The Field is Deprecated.
	Marker pulumi.StringInput `pulumi:"marker"`
	// (**Deprecated**) The Field is Deprecated. The max keys the TOS bucket.
	//
	// Deprecated: The Field is Deprecated.
	MaxKeys pulumi.IntInput `pulumi:"maxKeys"`
	// The name the TOS bucket.
	Name pulumi.StringInput `pulumi:"name"`
	// (**Deprecated**) The Field is Deprecated. The prefix the TOS bucket.
	//
	// Deprecated: The Field is Deprecated.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (BucketsBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucket)(nil)).Elem()
}

func (i BucketsBucketArgs) ToBucketsBucketOutput() BucketsBucketOutput {
	return i.ToBucketsBucketOutputWithContext(context.Background())
}

func (i BucketsBucketArgs) ToBucketsBucketOutputWithContext(ctx context.Context) BucketsBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketOutput)
}

// BucketsBucketArrayInput is an input type that accepts BucketsBucketArray and BucketsBucketArrayOutput values.
// You can construct a concrete instance of `BucketsBucketArrayInput` via:
//
//	BucketsBucketArray{ BucketsBucketArgs{...} }
type BucketsBucketArrayInput interface {
	pulumi.Input

	ToBucketsBucketArrayOutput() BucketsBucketArrayOutput
	ToBucketsBucketArrayOutputWithContext(context.Context) BucketsBucketArrayOutput
}

type BucketsBucketArray []BucketsBucketInput

func (BucketsBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucket)(nil)).Elem()
}

func (i BucketsBucketArray) ToBucketsBucketArrayOutput() BucketsBucketArrayOutput {
	return i.ToBucketsBucketArrayOutputWithContext(context.Background())
}

func (i BucketsBucketArray) ToBucketsBucketArrayOutputWithContext(ctx context.Context) BucketsBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketsBucketArrayOutput)
}

type BucketsBucketOutput struct{ *pulumi.OutputState }

func (BucketsBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketsBucket)(nil)).Elem()
}

func (o BucketsBucketOutput) ToBucketsBucketOutput() BucketsBucketOutput {
	return o
}

func (o BucketsBucketOutput) ToBucketsBucketOutputWithContext(ctx context.Context) BucketsBucketOutput {
	return o
}

// The create date of the TOS bucket.
func (o BucketsBucketOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucket) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The extranet endpoint of the TOS bucket.
func (o BucketsBucketOutput) ExtranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucket) string { return v.ExtranetEndpoint }).(pulumi.StringOutput)
}

// The intranet endpoint the TOS bucket.
func (o BucketsBucketOutput) IntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucket) string { return v.IntranetEndpoint }).(pulumi.StringOutput)
}

// (**Deprecated**) The Field is Deprecated. The truncated the TOS bucket.
//
// Deprecated: The Field is Deprecated.
func (o BucketsBucketOutput) IsTruncated() pulumi.BoolOutput {
	return o.ApplyT(func(v BucketsBucket) bool { return v.IsTruncated }).(pulumi.BoolOutput)
}

// The location of the TOS bucket.
func (o BucketsBucketOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucket) string { return v.Location }).(pulumi.StringOutput)
}

// (**Deprecated**) The Field is Deprecated. The marker the TOS bucket.
//
// Deprecated: The Field is Deprecated.
func (o BucketsBucketOutput) Marker() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucket) string { return v.Marker }).(pulumi.StringOutput)
}

// (**Deprecated**) The Field is Deprecated. The max keys the TOS bucket.
//
// Deprecated: The Field is Deprecated.
func (o BucketsBucketOutput) MaxKeys() pulumi.IntOutput {
	return o.ApplyT(func(v BucketsBucket) int { return v.MaxKeys }).(pulumi.IntOutput)
}

// The name the TOS bucket.
func (o BucketsBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucket) string { return v.Name }).(pulumi.StringOutput)
}

// (**Deprecated**) The Field is Deprecated. The prefix the TOS bucket.
//
// Deprecated: The Field is Deprecated.
func (o BucketsBucketOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v BucketsBucket) string { return v.Prefix }).(pulumi.StringOutput)
}

type BucketsBucketArrayOutput struct{ *pulumi.OutputState }

func (BucketsBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketsBucket)(nil)).Elem()
}

func (o BucketsBucketArrayOutput) ToBucketsBucketArrayOutput() BucketsBucketArrayOutput {
	return o
}

func (o BucketsBucketArrayOutput) ToBucketsBucketArrayOutputWithContext(ctx context.Context) BucketsBucketArrayOutput {
	return o
}

func (o BucketsBucketArrayOutput) Index(i pulumi.IntInput) BucketsBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketsBucket {
		return vs[0].([]BucketsBucket)[vs[1].(int)]
	}).(BucketsBucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAccountAclInput)(nil)).Elem(), BucketAccountAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAccountAclArrayInput)(nil)).Elem(), BucketAccountAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectAccountAclInput)(nil)).Elem(), BucketObjectAccountAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectAccountAclArrayInput)(nil)).Elem(), BucketObjectAccountAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectTagInput)(nil)).Elem(), BucketObjectTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectTagArrayInput)(nil)).Elem(), BucketObjectTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectsObjectInput)(nil)).Elem(), BucketObjectsObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketObjectsObjectArrayInput)(nil)).Elem(), BucketObjectsObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagInput)(nil)).Elem(), BucketTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagArrayInput)(nil)).Elem(), BucketTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketInput)(nil)).Elem(), BucketsBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketsBucketArrayInput)(nil)).Elem(), BucketsBucketArray{})
	pulumi.RegisterOutputType(BucketAccountAclOutput{})
	pulumi.RegisterOutputType(BucketAccountAclArrayOutput{})
	pulumi.RegisterOutputType(BucketObjectAccountAclOutput{})
	pulumi.RegisterOutputType(BucketObjectAccountAclArrayOutput{})
	pulumi.RegisterOutputType(BucketObjectTagOutput{})
	pulumi.RegisterOutputType(BucketObjectTagArrayOutput{})
	pulumi.RegisterOutputType(BucketObjectsObjectOutput{})
	pulumi.RegisterOutputType(BucketObjectsObjectArrayOutput{})
	pulumi.RegisterOutputType(BucketTagOutput{})
	pulumi.RegisterOutputType(BucketTagArrayOutput{})
	pulumi.RegisterOutputType(BucketsBucketOutput{})
	pulumi.RegisterOutputType(BucketsBucketArrayOutput{})
}
