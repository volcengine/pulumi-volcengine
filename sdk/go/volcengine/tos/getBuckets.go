// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of tos buckets
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/tos"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tos.GetBuckets(ctx, &tos.GetBucketsArgs{
//				NameRegex: pulumi.StringRef("test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBuckets(ctx *pulumi.Context, args *GetBucketsArgs, opts ...pulumi.InvokeOption) (*GetBucketsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBucketsResult
	err := ctx.Invoke("volcengine:tos/getBuckets:getBuckets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBuckets.
type GetBucketsArgs struct {
	// The name the TOS bucket.
	BucketName *string `pulumi:"bucketName"`
	// A Name Regex of TOS bucket.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getBuckets.
type GetBucketsResult struct {
	BucketName *string `pulumi:"bucketName"`
	// The collection of TOS bucket query.
	Buckets []GetBucketsBucket `pulumi:"buckets"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of TOS bucket query.
	TotalCount int `pulumi:"totalCount"`
}

func GetBucketsOutput(ctx *pulumi.Context, args GetBucketsOutputArgs, opts ...pulumi.InvokeOption) GetBucketsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBucketsResult, error) {
			args := v.(GetBucketsArgs)
			r, err := GetBuckets(ctx, &args, opts...)
			var s GetBucketsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBucketsResultOutput)
}

// A collection of arguments for invoking getBuckets.
type GetBucketsOutputArgs struct {
	// The name the TOS bucket.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// A Name Regex of TOS bucket.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetBucketsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsArgs)(nil)).Elem()
}

// A collection of values returned by getBuckets.
type GetBucketsResultOutput struct{ *pulumi.OutputState }

func (GetBucketsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketsResult)(nil)).Elem()
}

func (o GetBucketsResultOutput) ToGetBucketsResultOutput() GetBucketsResultOutput {
	return o
}

func (o GetBucketsResultOutput) ToGetBucketsResultOutputWithContext(ctx context.Context) GetBucketsResultOutput {
	return o
}

func (o GetBucketsResultOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketsResult) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// The collection of TOS bucket query.
func (o GetBucketsResultOutput) Buckets() GetBucketsBucketArrayOutput {
	return o.ApplyT(func(v GetBucketsResult) []GetBucketsBucket { return v.Buckets }).(GetBucketsBucketArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBucketsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBucketsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetBucketsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of TOS bucket query.
func (o GetBucketsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBucketsResultOutput{})
}
