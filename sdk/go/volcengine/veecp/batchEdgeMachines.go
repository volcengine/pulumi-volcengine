// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package veecp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of veecp batch edge machines
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/veecp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooBatchEdgeMachine, err := veecp.NewBatchEdgeMachine(ctx, "fooBatchEdgeMachine", &veecp.BatchEdgeMachineArgs{
//				ClusterId:  pulumi.String("ccvd7mte6t101fno98u60"),
//				NodePoolId: pulumi.String("pcvd90uacnsr73g6bjic0"),
//				TtlHours:   pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			_ = veecp.GetBatchEdgeMachinesOutput(ctx, veecp.GetBatchEdgeMachinesOutputArgs{
//				ClusterIds: pulumi.StringArray{
//					fooBatchEdgeMachine.ClusterId,
//				},
//				Ids: pulumi.StringArray{
//					fooBatchEdgeMachine.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.veecp.BatchEdgeMachines has been deprecated in favor of volcengine.veecp.getBatchEdgeMachines
func BatchEdgeMachines(ctx *pulumi.Context, args *BatchEdgeMachinesArgs, opts ...pulumi.InvokeOption) (*BatchEdgeMachinesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv BatchEdgeMachinesResult
	err := ctx.Invoke("volcengine:veecp/batchEdgeMachines:BatchEdgeMachines", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking BatchEdgeMachines.
type BatchEdgeMachinesArgs struct {
	// The ClusterIds of NodePool IDs.
	ClusterIds []string `pulumi:"clusterIds"`
	// The ClientToken when successfully created.
	CreateClientToken *string `pulumi:"createClientToken"`
	// A list of IDs.
	Ids []string `pulumi:"ids"`
	// The IPs.
	Ips []string `pulumi:"ips"`
	// The Name of NodePool.
	Name *string `pulumi:"name"`
	// Whether it is necessary to query the node management script.
	NeedBootstrapScript *string `pulumi:"needBootstrapScript"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The Status of NodePool.
	Statuses []BatchEdgeMachinesStatus `pulumi:"statuses"`
	// The Zone Ids.
	ZoneIds []string `pulumi:"zoneIds"`
}

// A collection of values returned by BatchEdgeMachines.
type BatchEdgeMachinesResult struct {
	ClusterIds []string `pulumi:"clusterIds"`
	// The ClientToken when successfully created.
	CreateClientToken *string `pulumi:"createClientToken"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	Ips []string `pulumi:"ips"`
	// The collection of query.
	Machines []BatchEdgeMachinesMachine `pulumi:"machines"`
	// The Name of NodePool.
	Name                *string                   `pulumi:"name"`
	NeedBootstrapScript *string                   `pulumi:"needBootstrapScript"`
	OutputFile          *string                   `pulumi:"outputFile"`
	Statuses            []BatchEdgeMachinesStatus `pulumi:"statuses"`
	// The total count of query.
	TotalCount int      `pulumi:"totalCount"`
	ZoneIds    []string `pulumi:"zoneIds"`
}

func BatchEdgeMachinesOutput(ctx *pulumi.Context, args BatchEdgeMachinesOutputArgs, opts ...pulumi.InvokeOption) BatchEdgeMachinesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (BatchEdgeMachinesResult, error) {
			args := v.(BatchEdgeMachinesArgs)
			r, err := BatchEdgeMachines(ctx, &args, opts...)
			var s BatchEdgeMachinesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(BatchEdgeMachinesResultOutput)
}

// A collection of arguments for invoking BatchEdgeMachines.
type BatchEdgeMachinesOutputArgs struct {
	// The ClusterIds of NodePool IDs.
	ClusterIds pulumi.StringArrayInput `pulumi:"clusterIds"`
	// The ClientToken when successfully created.
	CreateClientToken pulumi.StringPtrInput `pulumi:"createClientToken"`
	// A list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The IPs.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The Name of NodePool.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether it is necessary to query the node management script.
	NeedBootstrapScript pulumi.StringPtrInput `pulumi:"needBootstrapScript"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The Status of NodePool.
	Statuses BatchEdgeMachinesStatusArrayInput `pulumi:"statuses"`
	// The Zone Ids.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (BatchEdgeMachinesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEdgeMachinesArgs)(nil)).Elem()
}

// A collection of values returned by BatchEdgeMachines.
type BatchEdgeMachinesResultOutput struct{ *pulumi.OutputState }

func (BatchEdgeMachinesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BatchEdgeMachinesResult)(nil)).Elem()
}

func (o BatchEdgeMachinesResultOutput) ToBatchEdgeMachinesResultOutput() BatchEdgeMachinesResultOutput {
	return o
}

func (o BatchEdgeMachinesResultOutput) ToBatchEdgeMachinesResultOutputWithContext(ctx context.Context) BatchEdgeMachinesResultOutput {
	return o
}

func (o BatchEdgeMachinesResultOutput) ClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) []string { return v.ClusterIds }).(pulumi.StringArrayOutput)
}

// The ClientToken when successfully created.
func (o BatchEdgeMachinesResultOutput) CreateClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) *string { return v.CreateClientToken }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o BatchEdgeMachinesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o BatchEdgeMachinesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o BatchEdgeMachinesResultOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o BatchEdgeMachinesResultOutput) Machines() BatchEdgeMachinesMachineArrayOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) []BatchEdgeMachinesMachine { return v.Machines }).(BatchEdgeMachinesMachineArrayOutput)
}

// The Name of NodePool.
func (o BatchEdgeMachinesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o BatchEdgeMachinesResultOutput) NeedBootstrapScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) *string { return v.NeedBootstrapScript }).(pulumi.StringPtrOutput)
}

func (o BatchEdgeMachinesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o BatchEdgeMachinesResultOutput) Statuses() BatchEdgeMachinesStatusArrayOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) []BatchEdgeMachinesStatus { return v.Statuses }).(BatchEdgeMachinesStatusArrayOutput)
}

// The total count of query.
func (o BatchEdgeMachinesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o BatchEdgeMachinesResultOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BatchEdgeMachinesResult) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(BatchEdgeMachinesResultOutput{})
}
