// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package veecp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of veecp edge node pools
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/veecp"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-project1"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-subnet-test-2"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
//				VpcId:             fooVpc.ID(),
//				SecurityGroupName: pulumi.String("acc-test-security-group2"),
//			})
//			if err != nil {
//				return err
//			}
//			fooCluster, err := veecp.NewCluster(ctx, "fooCluster", &veecp.ClusterArgs{
//				Description:             pulumi.String("created by terraform"),
//				DeleteProtectionEnabled: pulumi.Bool(false),
//				Profile:                 pulumi.String("Edge"),
//				ClusterConfig: &veecp.ClusterClusterConfigArgs{
//					SubnetIds: pulumi.StringArray{
//						fooSubnet.ID(),
//					},
//					ApiServerPublicAccessEnabled: pulumi.Bool(true),
//					ApiServerPublicAccessConfig: &veecp.ClusterClusterConfigApiServerPublicAccessConfigArgs{
//						PublicAccessNetworkConfig: &veecp.ClusterClusterConfigApiServerPublicAccessConfigPublicAccessNetworkConfigArgs{
//							BillingType: pulumi.String("PostPaidByBandwidth"),
//							Bandwidth:   pulumi.Int(1),
//						},
//					},
//					ResourcePublicAccessDefaultEnabled: pulumi.Bool(true),
//				},
//				PodsConfig: &veecp.ClusterPodsConfigArgs{
//					PodNetworkMode: pulumi.String("Flannel"),
//					FlannelConfig: &veecp.ClusterPodsConfigFlannelConfigArgs{
//						PodCidrs: pulumi.StringArray{
//							pulumi.String("172.22.224.0/20"),
//						},
//						MaxPodsPerNode: pulumi.Int(64),
//					},
//				},
//				ServicesConfig: &veecp.ClusterServicesConfigArgs{
//					ServiceCidrsv4s: pulumi.StringArray{
//						pulumi.String("172.30.0.0/18"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooEdgeNodePool, err := veecp.NewEdgeNodePool(ctx, "fooEdgeNodePool", &veecp.EdgeNodePoolArgs{
//				ClusterId: fooCluster.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_ = veecp.GetEdgeNodePoolsOutput(ctx, veecp.GetEdgeNodePoolsOutputArgs{
//				ClusterIds: pulumi.StringArray{
//					fooCluster.ID(),
//				},
//				Ids: pulumi.StringArray{
//					fooEdgeNodePool.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetEdgeNodePools(ctx *pulumi.Context, args *GetEdgeNodePoolsArgs, opts ...pulumi.InvokeOption) (*GetEdgeNodePoolsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEdgeNodePoolsResult
	err := ctx.Invoke("volcengine:veecp/getEdgeNodePools:getEdgeNodePools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEdgeNodePools.
type GetEdgeNodePoolsArgs struct {
	// Managed by auto.
	AddByAuto *bool `pulumi:"addByAuto"`
	// Managed by list.
	AddByList *bool `pulumi:"addByList"`
	// Managed by script.
	AddByScript *bool `pulumi:"addByScript"`
	// Is enabled of AutoScaling.
	AutoScalingEnabled *bool `pulumi:"autoScalingEnabled"`
	// The ClusterIds of NodePool IDs.
	ClusterIds []string `pulumi:"clusterIds"`
	// The ClientToken when successfully created.
	CreateClientToken *string `pulumi:"createClientToken"`
	// A list of IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// The NodePoolTypes of NodePool.
	NodePoolTypes []string `pulumi:"nodePoolTypes"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The Status of NodePool.
	Statuses []GetEdgeNodePoolsStatus `pulumi:"statuses"`
	// The ClientToken when last update was successful.
	UpdateClientToken *string `pulumi:"updateClientToken"`
}

// A collection of values returned by getEdgeNodePools.
type GetEdgeNodePoolsResult struct {
	AddByAuto          *bool    `pulumi:"addByAuto"`
	AddByList          *bool    `pulumi:"addByList"`
	AddByScript        *bool    `pulumi:"addByScript"`
	AutoScalingEnabled *bool    `pulumi:"autoScalingEnabled"`
	ClusterIds         []string `pulumi:"clusterIds"`
	// The ClientToken when successfully created.
	CreateClientToken *string `pulumi:"createClientToken"`
	// The provider-assigned unique ID for this managed resource.
	Id            string   `pulumi:"id"`
	Ids           []string `pulumi:"ids"`
	NameRegex     *string  `pulumi:"nameRegex"`
	NodePoolTypes []string `pulumi:"nodePoolTypes"`
	// The collection of query.
	NodePools  []GetEdgeNodePoolsNodePool `pulumi:"nodePools"`
	OutputFile *string                    `pulumi:"outputFile"`
	Statuses   []GetEdgeNodePoolsStatus   `pulumi:"statuses"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The ClientToken when last update was successful.
	UpdateClientToken *string `pulumi:"updateClientToken"`
}

func GetEdgeNodePoolsOutput(ctx *pulumi.Context, args GetEdgeNodePoolsOutputArgs, opts ...pulumi.InvokeOption) GetEdgeNodePoolsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEdgeNodePoolsResult, error) {
			args := v.(GetEdgeNodePoolsArgs)
			r, err := GetEdgeNodePools(ctx, &args, opts...)
			var s GetEdgeNodePoolsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEdgeNodePoolsResultOutput)
}

// A collection of arguments for invoking getEdgeNodePools.
type GetEdgeNodePoolsOutputArgs struct {
	// Managed by auto.
	AddByAuto pulumi.BoolPtrInput `pulumi:"addByAuto"`
	// Managed by list.
	AddByList pulumi.BoolPtrInput `pulumi:"addByList"`
	// Managed by script.
	AddByScript pulumi.BoolPtrInput `pulumi:"addByScript"`
	// Is enabled of AutoScaling.
	AutoScalingEnabled pulumi.BoolPtrInput `pulumi:"autoScalingEnabled"`
	// The ClusterIds of NodePool IDs.
	ClusterIds pulumi.StringArrayInput `pulumi:"clusterIds"`
	// The ClientToken when successfully created.
	CreateClientToken pulumi.StringPtrInput `pulumi:"createClientToken"`
	// A list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// The NodePoolTypes of NodePool.
	NodePoolTypes pulumi.StringArrayInput `pulumi:"nodePoolTypes"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The Status of NodePool.
	Statuses GetEdgeNodePoolsStatusArrayInput `pulumi:"statuses"`
	// The ClientToken when last update was successful.
	UpdateClientToken pulumi.StringPtrInput `pulumi:"updateClientToken"`
}

func (GetEdgeNodePoolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgeNodePoolsArgs)(nil)).Elem()
}

// A collection of values returned by getEdgeNodePools.
type GetEdgeNodePoolsResultOutput struct{ *pulumi.OutputState }

func (GetEdgeNodePoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEdgeNodePoolsResult)(nil)).Elem()
}

func (o GetEdgeNodePoolsResultOutput) ToGetEdgeNodePoolsResultOutput() GetEdgeNodePoolsResultOutput {
	return o
}

func (o GetEdgeNodePoolsResultOutput) ToGetEdgeNodePoolsResultOutputWithContext(ctx context.Context) GetEdgeNodePoolsResultOutput {
	return o
}

func (o GetEdgeNodePoolsResultOutput) AddByAuto() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) *bool { return v.AddByAuto }).(pulumi.BoolPtrOutput)
}

func (o GetEdgeNodePoolsResultOutput) AddByList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) *bool { return v.AddByList }).(pulumi.BoolPtrOutput)
}

func (o GetEdgeNodePoolsResultOutput) AddByScript() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) *bool { return v.AddByScript }).(pulumi.BoolPtrOutput)
}

func (o GetEdgeNodePoolsResultOutput) AutoScalingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) *bool { return v.AutoScalingEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetEdgeNodePoolsResultOutput) ClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) []string { return v.ClusterIds }).(pulumi.StringArrayOutput)
}

// The ClientToken when successfully created.
func (o GetEdgeNodePoolsResultOutput) CreateClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) *string { return v.CreateClientToken }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEdgeNodePoolsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEdgeNodePoolsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetEdgeNodePoolsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetEdgeNodePoolsResultOutput) NodePoolTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) []string { return v.NodePoolTypes }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o GetEdgeNodePoolsResultOutput) NodePools() GetEdgeNodePoolsNodePoolArrayOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) []GetEdgeNodePoolsNodePool { return v.NodePools }).(GetEdgeNodePoolsNodePoolArrayOutput)
}

func (o GetEdgeNodePoolsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetEdgeNodePoolsResultOutput) Statuses() GetEdgeNodePoolsStatusArrayOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) []GetEdgeNodePoolsStatus { return v.Statuses }).(GetEdgeNodePoolsStatusArrayOutput)
}

// The total count of query.
func (o GetEdgeNodePoolsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The ClientToken when last update was successful.
func (o GetEdgeNodePoolsResultOutput) UpdateClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEdgeNodePoolsResult) *string { return v.UpdateClientToken }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEdgeNodePoolsResultOutput{})
}
