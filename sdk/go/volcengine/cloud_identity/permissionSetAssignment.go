// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage cloud identity permission set assignment
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_identity"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooPermissionSet, err := cloud_identity.NewPermissionSet(ctx, "fooPermissionSet", &cloud_identity.PermissionSetArgs{
//				Description:     pulumi.String("tf"),
//				SessionDuration: pulumi.Int(5000),
//				PermissionPolicies: cloud_identity.PermissionSetPermissionPolicyArray{
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("System"),
//						PermissionPolicyName: pulumi.String("AdministratorAccess"),
//						InlinePolicyDocument: pulumi.String(""),
//					},
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("System"),
//						PermissionPolicyName: pulumi.String("ReadOnlyAccess"),
//						InlinePolicyDocument: pulumi.String(""),
//					},
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("Inline"),
//						InlinePolicyDocument: pulumi.String("{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooUser, err := cloud_identity.NewUser(ctx, "fooUser", &cloud_identity.UserArgs{
//				UserName:    pulumi.String("acc-test-user"),
//				DisplayName: pulumi.String("tf-test-user"),
//				Description: pulumi.String("tf"),
//				Email:       pulumi.String("88@qq.com"),
//				Phone:       pulumi.String("181"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloud_identity.NewPermissionSetAssignment(ctx, "fooPermissionSetAssignment", &cloud_identity.PermissionSetAssignmentArgs{
//				PermissionSetId: fooPermissionSet.ID(),
//				TargetId:        pulumi.String("210026****"),
//				PrincipalType:   pulumi.String("User"),
//				PrincipalId:     fooUser.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CloudIdentityPermissionSetAssignment can be imported using the permission_set_id:target_id:principal_type:principal_id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:cloud_identity/permissionSetAssignment:PermissionSetAssignment default resource_id
//
// ```
type PermissionSetAssignment struct {
	pulumi.CustomResourceState

	// The id of the cloud identity permission set.
	PermissionSetId pulumi.StringOutput `pulumi:"permissionSetId"`
	// The principal id of the cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
	PrincipalId pulumi.StringOutput `pulumi:"principalId"`
	// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
	PrincipalType pulumi.StringOutput `pulumi:"principalType"`
	// The target account id of the cloud identity permission set assignment.
	TargetId pulumi.StringOutput `pulumi:"targetId"`
}

// NewPermissionSetAssignment registers a new resource with the given unique name, arguments, and options.
func NewPermissionSetAssignment(ctx *pulumi.Context,
	name string, args *PermissionSetAssignmentArgs, opts ...pulumi.ResourceOption) (*PermissionSetAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PermissionSetId == nil {
		return nil, errors.New("invalid value for required argument 'PermissionSetId'")
	}
	if args.PrincipalId == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalId'")
	}
	if args.PrincipalType == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalType'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PermissionSetAssignment
	err := ctx.RegisterResource("volcengine:cloud_identity/permissionSetAssignment:PermissionSetAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPermissionSetAssignment gets an existing PermissionSetAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPermissionSetAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PermissionSetAssignmentState, opts ...pulumi.ResourceOption) (*PermissionSetAssignment, error) {
	var resource PermissionSetAssignment
	err := ctx.ReadResource("volcengine:cloud_identity/permissionSetAssignment:PermissionSetAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PermissionSetAssignment resources.
type permissionSetAssignmentState struct {
	// The id of the cloud identity permission set.
	PermissionSetId *string `pulumi:"permissionSetId"`
	// The principal id of the cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
	PrincipalId *string `pulumi:"principalId"`
	// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
	PrincipalType *string `pulumi:"principalType"`
	// The target account id of the cloud identity permission set assignment.
	TargetId *string `pulumi:"targetId"`
}

type PermissionSetAssignmentState struct {
	// The id of the cloud identity permission set.
	PermissionSetId pulumi.StringPtrInput
	// The principal id of the cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
	PrincipalId pulumi.StringPtrInput
	// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
	PrincipalType pulumi.StringPtrInput
	// The target account id of the cloud identity permission set assignment.
	TargetId pulumi.StringPtrInput
}

func (PermissionSetAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetAssignmentState)(nil)).Elem()
}

type permissionSetAssignmentArgs struct {
	// The id of the cloud identity permission set.
	PermissionSetId string `pulumi:"permissionSetId"`
	// The principal id of the cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
	PrincipalId string `pulumi:"principalId"`
	// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
	PrincipalType string `pulumi:"principalType"`
	// The target account id of the cloud identity permission set assignment.
	TargetId string `pulumi:"targetId"`
}

// The set of arguments for constructing a PermissionSetAssignment resource.
type PermissionSetAssignmentArgs struct {
	// The id of the cloud identity permission set.
	PermissionSetId pulumi.StringInput
	// The principal id of the cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
	PrincipalId pulumi.StringInput
	// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
	PrincipalType pulumi.StringInput
	// The target account id of the cloud identity permission set assignment.
	TargetId pulumi.StringInput
}

func (PermissionSetAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetAssignmentArgs)(nil)).Elem()
}

type PermissionSetAssignmentInput interface {
	pulumi.Input

	ToPermissionSetAssignmentOutput() PermissionSetAssignmentOutput
	ToPermissionSetAssignmentOutputWithContext(ctx context.Context) PermissionSetAssignmentOutput
}

func (*PermissionSetAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionSetAssignment)(nil)).Elem()
}

func (i *PermissionSetAssignment) ToPermissionSetAssignmentOutput() PermissionSetAssignmentOutput {
	return i.ToPermissionSetAssignmentOutputWithContext(context.Background())
}

func (i *PermissionSetAssignment) ToPermissionSetAssignmentOutputWithContext(ctx context.Context) PermissionSetAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetAssignmentOutput)
}

// PermissionSetAssignmentArrayInput is an input type that accepts PermissionSetAssignmentArray and PermissionSetAssignmentArrayOutput values.
// You can construct a concrete instance of `PermissionSetAssignmentArrayInput` via:
//
//	PermissionSetAssignmentArray{ PermissionSetAssignmentArgs{...} }
type PermissionSetAssignmentArrayInput interface {
	pulumi.Input

	ToPermissionSetAssignmentArrayOutput() PermissionSetAssignmentArrayOutput
	ToPermissionSetAssignmentArrayOutputWithContext(context.Context) PermissionSetAssignmentArrayOutput
}

type PermissionSetAssignmentArray []PermissionSetAssignmentInput

func (PermissionSetAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PermissionSetAssignment)(nil)).Elem()
}

func (i PermissionSetAssignmentArray) ToPermissionSetAssignmentArrayOutput() PermissionSetAssignmentArrayOutput {
	return i.ToPermissionSetAssignmentArrayOutputWithContext(context.Background())
}

func (i PermissionSetAssignmentArray) ToPermissionSetAssignmentArrayOutputWithContext(ctx context.Context) PermissionSetAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetAssignmentArrayOutput)
}

// PermissionSetAssignmentMapInput is an input type that accepts PermissionSetAssignmentMap and PermissionSetAssignmentMapOutput values.
// You can construct a concrete instance of `PermissionSetAssignmentMapInput` via:
//
//	PermissionSetAssignmentMap{ "key": PermissionSetAssignmentArgs{...} }
type PermissionSetAssignmentMapInput interface {
	pulumi.Input

	ToPermissionSetAssignmentMapOutput() PermissionSetAssignmentMapOutput
	ToPermissionSetAssignmentMapOutputWithContext(context.Context) PermissionSetAssignmentMapOutput
}

type PermissionSetAssignmentMap map[string]PermissionSetAssignmentInput

func (PermissionSetAssignmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PermissionSetAssignment)(nil)).Elem()
}

func (i PermissionSetAssignmentMap) ToPermissionSetAssignmentMapOutput() PermissionSetAssignmentMapOutput {
	return i.ToPermissionSetAssignmentMapOutputWithContext(context.Background())
}

func (i PermissionSetAssignmentMap) ToPermissionSetAssignmentMapOutputWithContext(ctx context.Context) PermissionSetAssignmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetAssignmentMapOutput)
}

type PermissionSetAssignmentOutput struct{ *pulumi.OutputState }

func (PermissionSetAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionSetAssignment)(nil)).Elem()
}

func (o PermissionSetAssignmentOutput) ToPermissionSetAssignmentOutput() PermissionSetAssignmentOutput {
	return o
}

func (o PermissionSetAssignmentOutput) ToPermissionSetAssignmentOutputWithContext(ctx context.Context) PermissionSetAssignmentOutput {
	return o
}

// The id of the cloud identity permission set.
func (o PermissionSetAssignmentOutput) PermissionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PermissionSetAssignment) pulumi.StringOutput { return v.PermissionSetId }).(pulumi.StringOutput)
}

// The principal id of the cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
func (o PermissionSetAssignmentOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v *PermissionSetAssignment) pulumi.StringOutput { return v.PrincipalId }).(pulumi.StringOutput)
}

// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
func (o PermissionSetAssignmentOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v *PermissionSetAssignment) pulumi.StringOutput { return v.PrincipalType }).(pulumi.StringOutput)
}

// The target account id of the cloud identity permission set assignment.
func (o PermissionSetAssignmentOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PermissionSetAssignment) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

type PermissionSetAssignmentArrayOutput struct{ *pulumi.OutputState }

func (PermissionSetAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PermissionSetAssignment)(nil)).Elem()
}

func (o PermissionSetAssignmentArrayOutput) ToPermissionSetAssignmentArrayOutput() PermissionSetAssignmentArrayOutput {
	return o
}

func (o PermissionSetAssignmentArrayOutput) ToPermissionSetAssignmentArrayOutputWithContext(ctx context.Context) PermissionSetAssignmentArrayOutput {
	return o
}

func (o PermissionSetAssignmentArrayOutput) Index(i pulumi.IntInput) PermissionSetAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PermissionSetAssignment {
		return vs[0].([]*PermissionSetAssignment)[vs[1].(int)]
	}).(PermissionSetAssignmentOutput)
}

type PermissionSetAssignmentMapOutput struct{ *pulumi.OutputState }

func (PermissionSetAssignmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PermissionSetAssignment)(nil)).Elem()
}

func (o PermissionSetAssignmentMapOutput) ToPermissionSetAssignmentMapOutput() PermissionSetAssignmentMapOutput {
	return o
}

func (o PermissionSetAssignmentMapOutput) ToPermissionSetAssignmentMapOutputWithContext(ctx context.Context) PermissionSetAssignmentMapOutput {
	return o
}

func (o PermissionSetAssignmentMapOutput) MapIndex(k pulumi.StringInput) PermissionSetAssignmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PermissionSetAssignment {
		return vs[0].(map[string]*PermissionSetAssignment)[vs[1].(string)]
	}).(PermissionSetAssignmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetAssignmentInput)(nil)).Elem(), &PermissionSetAssignment{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetAssignmentArrayInput)(nil)).Elem(), PermissionSetAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetAssignmentMapInput)(nil)).Elem(), PermissionSetAssignmentMap{})
	pulumi.RegisterOutputType(PermissionSetAssignmentOutput{})
	pulumi.RegisterOutputType(PermissionSetAssignmentArrayOutput{})
	pulumi.RegisterOutputType(PermissionSetAssignmentMapOutput{})
}
