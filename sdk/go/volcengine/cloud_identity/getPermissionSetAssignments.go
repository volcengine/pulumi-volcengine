// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cloud identity permission set assignments
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_identity"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooPermissionSet, err := cloud_identity.NewPermissionSet(ctx, "fooPermissionSet", &cloud_identity.PermissionSetArgs{
//				Description:     pulumi.String("tf"),
//				SessionDuration: pulumi.Int(5000),
//				PermissionPolicies: cloud_identity.PermissionSetPermissionPolicyArray{
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("System"),
//						PermissionPolicyName: pulumi.String("AdministratorAccess"),
//						InlinePolicyDocument: pulumi.String(""),
//					},
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("System"),
//						PermissionPolicyName: pulumi.String("ReadOnlyAccess"),
//						InlinePolicyDocument: pulumi.String(""),
//					},
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("Inline"),
//						InlinePolicyDocument: pulumi.String("{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooUser, err := cloud_identity.NewUser(ctx, "fooUser", &cloud_identity.UserArgs{
//				UserName:    pulumi.String("acc-test-user"),
//				DisplayName: pulumi.String("tf-test-user"),
//				Description: pulumi.String("tf"),
//				Email:       pulumi.String("88@qq.com"),
//				Phone:       pulumi.String("181"),
//			})
//			if err != nil {
//				return err
//			}
//			fooPermissionSetAssignment, err := cloud_identity.NewPermissionSetAssignment(ctx, "fooPermissionSetAssignment", &cloud_identity.PermissionSetAssignmentArgs{
//				PermissionSetId: fooPermissionSet.ID(),
//				TargetId:        pulumi.String("210026****"),
//				PrincipalType:   pulumi.String("User"),
//				PrincipalId:     fooUser.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_ = cloud_identity.GetPermissionSetAssignmentsOutput(ctx, cloud_identity.GetPermissionSetAssignmentsOutputArgs{
//				PermissionSetId: fooPermissionSetAssignment.PermissionSetId,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetPermissionSetAssignments(ctx *pulumi.Context, args *GetPermissionSetAssignmentsArgs, opts ...pulumi.InvokeOption) (*GetPermissionSetAssignmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPermissionSetAssignmentsResult
	err := ctx.Invoke("volcengine:cloud_identity/getPermissionSetAssignments:getPermissionSetAssignments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermissionSetAssignments.
type GetPermissionSetAssignmentsArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The id of cloud identity permission set.
	PermissionSetId *string `pulumi:"permissionSetId"`
	// The principal id of cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
	PrincipalId *string `pulumi:"principalId"`
	// The principal type of cloud identity permission set. Valid values: `User`, `Group`.
	PrincipalType *string `pulumi:"principalType"`
	// The target account id of cloud identity permission set assignment.
	TargetId *string `pulumi:"targetId"`
}

// A collection of values returned by getPermissionSetAssignments.
type GetPermissionSetAssignmentsResult struct {
	// The collection of query.
	Assignments []GetPermissionSetAssignmentsAssignment `pulumi:"assignments"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The id of the cloud identity permission set.
	PermissionSetId *string `pulumi:"permissionSetId"`
	// The principal id of the cloud identity permission set assignment.
	PrincipalId *string `pulumi:"principalId"`
	// The principal type of the cloud identity permission set assignment.
	PrincipalType *string `pulumi:"principalType"`
	// The target account id of the cloud identity permission set assignment.
	TargetId *string `pulumi:"targetId"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetPermissionSetAssignmentsOutput(ctx *pulumi.Context, args GetPermissionSetAssignmentsOutputArgs, opts ...pulumi.InvokeOption) GetPermissionSetAssignmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPermissionSetAssignmentsResult, error) {
			args := v.(GetPermissionSetAssignmentsArgs)
			r, err := GetPermissionSetAssignments(ctx, &args, opts...)
			var s GetPermissionSetAssignmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPermissionSetAssignmentsResultOutput)
}

// A collection of arguments for invoking getPermissionSetAssignments.
type GetPermissionSetAssignmentsOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The id of cloud identity permission set.
	PermissionSetId pulumi.StringPtrInput `pulumi:"permissionSetId"`
	// The principal id of cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The principal type of cloud identity permission set. Valid values: `User`, `Group`.
	PrincipalType pulumi.StringPtrInput `pulumi:"principalType"`
	// The target account id of cloud identity permission set assignment.
	TargetId pulumi.StringPtrInput `pulumi:"targetId"`
}

func (GetPermissionSetAssignmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionSetAssignmentsArgs)(nil)).Elem()
}

// A collection of values returned by getPermissionSetAssignments.
type GetPermissionSetAssignmentsResultOutput struct{ *pulumi.OutputState }

func (GetPermissionSetAssignmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionSetAssignmentsResult)(nil)).Elem()
}

func (o GetPermissionSetAssignmentsResultOutput) ToGetPermissionSetAssignmentsResultOutput() GetPermissionSetAssignmentsResultOutput {
	return o
}

func (o GetPermissionSetAssignmentsResultOutput) ToGetPermissionSetAssignmentsResultOutputWithContext(ctx context.Context) GetPermissionSetAssignmentsResultOutput {
	return o
}

// The collection of query.
func (o GetPermissionSetAssignmentsResultOutput) Assignments() GetPermissionSetAssignmentsAssignmentArrayOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) []GetPermissionSetAssignmentsAssignment {
		return v.Assignments
	}).(GetPermissionSetAssignmentsAssignmentArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPermissionSetAssignmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPermissionSetAssignmentsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetPermissionSetAssignmentsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The id of the cloud identity permission set.
func (o GetPermissionSetAssignmentsResultOutput) PermissionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) *string { return v.PermissionSetId }).(pulumi.StringPtrOutput)
}

// The principal id of the cloud identity permission set assignment.
func (o GetPermissionSetAssignmentsResultOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The principal type of the cloud identity permission set assignment.
func (o GetPermissionSetAssignmentsResultOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// The target account id of the cloud identity permission set assignment.
func (o GetPermissionSetAssignmentsResultOutput) TargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) *string { return v.TargetId }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetPermissionSetAssignmentsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPermissionSetAssignmentsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPermissionSetAssignmentsResultOutput{})
}
