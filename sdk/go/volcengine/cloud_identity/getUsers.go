// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cloud identity users
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_identity"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			var fooUser []*cloud_identity.User
//			for index := 0; index < 2; index++ {
//				key0 := index
//				val0 := index
//				__res, err := cloud_identity.NewUser(ctx, fmt.Sprintf("fooUser-%v", key0), &cloud_identity.UserArgs{
//					Description: pulumi.String("tf"),
//					DisplayName: pulumi.String(fmt.Sprintf("tf-test-user-%v", val0)),
//					Email:       pulumi.String("88@qq.com"),
//					Phone:       pulumi.String("181"),
//					UserName:    pulumi.String(fmt.Sprintf("acc-test-user-%v", val0)),
//				})
//				if err != nil {
//					return err
//				}
//				fooUser = append(fooUser, __res)
//			}
//			_, err = cloud_identity.GetUsers(ctx, &cloud_identity.GetUsersArgs{
//				Source:   pulumi.StringRef("Manual"),
//				UserName: pulumi.StringRef("acc-test-user"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUsers(ctx *pulumi.Context, args *GetUsersArgs, opts ...pulumi.InvokeOption) (*GetUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUsersResult
	err := ctx.Invoke("volcengine:cloud_identity/getUsers:getUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsers.
type GetUsersArgs struct {
	// The department id.
	DepartmentId *string `pulumi:"departmentId"`
	// The display name of cloud identity user.
	DisplayName *string `pulumi:"displayName"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The source of cloud identity user. Valid values: `Sync`, `Manual`.
	Source *string `pulumi:"source"`
	// The name of cloud identity user.
	UserName *string `pulumi:"userName"`
}

// A collection of values returned by getUsers.
type GetUsersResult struct {
	DepartmentId *string `pulumi:"departmentId"`
	// The display name of the cloud identity user.
	DisplayName *string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The source of the cloud identity user.
	Source *string `pulumi:"source"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The name of the cloud identity user.
	UserName *string `pulumi:"userName"`
	// The collection of query.
	Users []GetUsersUser `pulumi:"users"`
}

func GetUsersOutput(ctx *pulumi.Context, args GetUsersOutputArgs, opts ...pulumi.InvokeOption) GetUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUsersResult, error) {
			args := v.(GetUsersArgs)
			r, err := GetUsers(ctx, &args, opts...)
			var s GetUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUsersResultOutput)
}

// A collection of arguments for invoking getUsers.
type GetUsersOutputArgs struct {
	// The department id.
	DepartmentId pulumi.StringPtrInput `pulumi:"departmentId"`
	// The display name of cloud identity user.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The source of cloud identity user. Valid values: `Sync`, `Manual`.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The name of cloud identity user.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (GetUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersArgs)(nil)).Elem()
}

// A collection of values returned by getUsers.
type GetUsersResultOutput struct{ *pulumi.OutputState }

func (GetUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersResult)(nil)).Elem()
}

func (o GetUsersResultOutput) ToGetUsersResultOutput() GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) ToGetUsersResultOutputWithContext(ctx context.Context) GetUsersResultOutput {
	return o
}

func (o GetUsersResultOutput) DepartmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.DepartmentId }).(pulumi.StringPtrOutput)
}

// The display name of the cloud identity user.
func (o GetUsersResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetUsersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The source of the cloud identity user.
func (o GetUsersResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetUsersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetUsersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The name of the cloud identity user.
func (o GetUsersResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsersResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetUsersResultOutput) Users() GetUsersUserArrayOutput {
	return o.ApplyT(func(v GetUsersResult) []GetUsersUser { return v.Users }).(GetUsersUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsersResultOutput{})
}
