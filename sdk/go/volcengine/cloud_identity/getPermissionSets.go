// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_identity

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cloud identity permission sets
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_identity"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// var fooPermissionSet []*cloud_identity.PermissionSet
//
//	for index := 0; index < 2; index++ {
//	    key0 := index
//	    _ := index
//
// __res, err := cloud_identity.NewPermissionSet(ctx, fmt.Sprintf("fooPermissionSet-%v", key0), &cloud_identity.PermissionSetArgs{
// Description: pulumi.String("tf"),
// SessionDuration: pulumi.Int(5000),
// PermissionPolicies: cloud_identity.PermissionSetPermissionPolicyArray{
// &cloud_identity.PermissionSetPermissionPolicyArgs{
// PermissionPolicyType: pulumi.String("System"),
// PermissionPolicyName: pulumi.String("AdministratorAccess"),
// InlinePolicyDocument: pulumi.String(""),
// },
// &cloud_identity.PermissionSetPermissionPolicyArgs{
// PermissionPolicyType: pulumi.String("System"),
// PermissionPolicyName: pulumi.String("ReadOnlyAccess"),
// InlinePolicyDocument: pulumi.String(""),
// },
// &cloud_identity.PermissionSetPermissionPolicyArgs{
// PermissionPolicyType: pulumi.String("Inline"),
// InlinePolicyDocument: pulumi.String("{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}"),
// },
// },
// })
// if err != nil {
// return err
// }
// fooPermissionSet = append(fooPermissionSet, __res)
// }
// _ = cloud_identity.GetPermissionSetsOutput(ctx, cloud_identity.GetPermissionSetsOutputArgs{
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:cloud_identity-getPermissionSets:getPermissionSets.pp:23,9-31),
// }, nil);
// return nil
// })
// }
// ```
func GetPermissionSets(ctx *pulumi.Context, args *GetPermissionSetsArgs, opts ...pulumi.InvokeOption) (*GetPermissionSetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPermissionSetsResult
	err := ctx.Invoke("volcengine:cloud_identity/getPermissionSets:getPermissionSets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermissionSets.
type GetPermissionSetsArgs struct {
	// A list of cloud identity permission set IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of cloud identity permission set.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getPermissionSets.
type GetPermissionSetsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The collection of query.
	PermissionSets []GetPermissionSetsPermissionSet `pulumi:"permissionSets"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetPermissionSetsOutput(ctx *pulumi.Context, args GetPermissionSetsOutputArgs, opts ...pulumi.InvokeOption) GetPermissionSetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPermissionSetsResult, error) {
			args := v.(GetPermissionSetsArgs)
			r, err := GetPermissionSets(ctx, &args, opts...)
			var s GetPermissionSetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPermissionSetsResultOutput)
}

// A collection of arguments for invoking getPermissionSets.
type GetPermissionSetsOutputArgs struct {
	// A list of cloud identity permission set IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of cloud identity permission set.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetPermissionSetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionSetsArgs)(nil)).Elem()
}

// A collection of values returned by getPermissionSets.
type GetPermissionSetsResultOutput struct{ *pulumi.OutputState }

func (GetPermissionSetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionSetsResult)(nil)).Elem()
}

func (o GetPermissionSetsResultOutput) ToGetPermissionSetsResultOutput() GetPermissionSetsResultOutput {
	return o
}

func (o GetPermissionSetsResultOutput) ToGetPermissionSetsResultOutputWithContext(ctx context.Context) GetPermissionSetsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPermissionSetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPermissionSetsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetPermissionSetsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetPermissionSetsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetPermissionSetsResultOutput) PermissionSets() GetPermissionSetsPermissionSetArrayOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) []GetPermissionSetsPermissionSet { return v.PermissionSets }).(GetPermissionSetsPermissionSetArrayOutput)
}

// The total count of query.
func (o GetPermissionSetsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPermissionSetsResultOutput{})
}
