// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_identity

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage cloud identity permission set provisioning
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_identity"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooPermissionSet, err := cloud_identity.NewPermissionSet(ctx, "fooPermissionSet", &cloud_identity.PermissionSetArgs{
//				Description:     pulumi.String("tf"),
//				SessionDuration: pulumi.Int(5000),
//				PermissionPolicies: cloud_identity.PermissionSetPermissionPolicyArray{
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("System"),
//						PermissionPolicyName: pulumi.String("AdministratorAccess"),
//						InlinePolicyDocument: pulumi.String(""),
//					},
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("System"),
//						PermissionPolicyName: pulumi.String("ReadOnlyAccess"),
//						InlinePolicyDocument: pulumi.String(""),
//					},
//					&cloud_identity.PermissionSetPermissionPolicyArgs{
//						PermissionPolicyType: pulumi.String("Inline"),
//						InlinePolicyDocument: pulumi.String("{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooUser, err := cloud_identity.NewUser(ctx, "fooUser", &cloud_identity.UserArgs{
//				UserName:    pulumi.String("acc-test-user"),
//				DisplayName: pulumi.String("tf-test-user"),
//				Description: pulumi.String("tf"),
//				Email:       pulumi.String("88@qq.com"),
//				Phone:       pulumi.String("181"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloud_identity.NewPermissionSetAssignment(ctx, "fooPermissionSetAssignment", &cloud_identity.PermissionSetAssignmentArgs{
//				PermissionSetId: fooPermissionSet.ID(),
//				TargetId:        pulumi.String("210026****"),
//				PrincipalType:   pulumi.String("User"),
//				PrincipalId:     fooUser.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloud_identity.NewPermissionSetProvisioning(ctx, "fooPermissionSetProvisioning", &cloud_identity.PermissionSetProvisioningArgs{
//				PermissionSetId:    fooPermissionSet.ID(),
//				TargetId:           pulumi.String("210026****"),
//				ProvisioningStatus: pulumi.String("Provisioned"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CloudIdentityPermissionSetProvisioning can be imported using the permission_set_id:target_id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:cloud_identity/permissionSetProvisioning:PermissionSetProvisioning default resource_id
//
// ```
type PermissionSetProvisioning struct {
	pulumi.CustomResourceState

	// The id of the cloud identity permission set.
	PermissionSetId pulumi.StringOutput `pulumi:"permissionSetId"`
	// The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set.
	// When deleting this resource, resource `cloud_identity.PermissionSetAssignment` must be deleted first.
	ProvisioningStatus pulumi.StringOutput `pulumi:"provisioningStatus"`
	// The target account id of the cloud identity permission set provisioning.
	TargetId pulumi.StringOutput `pulumi:"targetId"`
}

// NewPermissionSetProvisioning registers a new resource with the given unique name, arguments, and options.
func NewPermissionSetProvisioning(ctx *pulumi.Context,
	name string, args *PermissionSetProvisioningArgs, opts ...pulumi.ResourceOption) (*PermissionSetProvisioning, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PermissionSetId == nil {
		return nil, errors.New("invalid value for required argument 'PermissionSetId'")
	}
	if args.ProvisioningStatus == nil {
		return nil, errors.New("invalid value for required argument 'ProvisioningStatus'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PermissionSetProvisioning
	err := ctx.RegisterResource("volcengine:cloud_identity/permissionSetProvisioning:PermissionSetProvisioning", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPermissionSetProvisioning gets an existing PermissionSetProvisioning resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPermissionSetProvisioning(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PermissionSetProvisioningState, opts ...pulumi.ResourceOption) (*PermissionSetProvisioning, error) {
	var resource PermissionSetProvisioning
	err := ctx.ReadResource("volcengine:cloud_identity/permissionSetProvisioning:PermissionSetProvisioning", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PermissionSetProvisioning resources.
type permissionSetProvisioningState struct {
	// The id of the cloud identity permission set.
	PermissionSetId *string `pulumi:"permissionSetId"`
	// The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set.
	// When deleting this resource, resource `cloud_identity.PermissionSetAssignment` must be deleted first.
	ProvisioningStatus *string `pulumi:"provisioningStatus"`
	// The target account id of the cloud identity permission set provisioning.
	TargetId *string `pulumi:"targetId"`
}

type PermissionSetProvisioningState struct {
	// The id of the cloud identity permission set.
	PermissionSetId pulumi.StringPtrInput
	// The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set.
	// When deleting this resource, resource `cloud_identity.PermissionSetAssignment` must be deleted first.
	ProvisioningStatus pulumi.StringPtrInput
	// The target account id of the cloud identity permission set provisioning.
	TargetId pulumi.StringPtrInput
}

func (PermissionSetProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetProvisioningState)(nil)).Elem()
}

type permissionSetProvisioningArgs struct {
	// The id of the cloud identity permission set.
	PermissionSetId string `pulumi:"permissionSetId"`
	// The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set.
	// When deleting this resource, resource `cloud_identity.PermissionSetAssignment` must be deleted first.
	ProvisioningStatus string `pulumi:"provisioningStatus"`
	// The target account id of the cloud identity permission set provisioning.
	TargetId string `pulumi:"targetId"`
}

// The set of arguments for constructing a PermissionSetProvisioning resource.
type PermissionSetProvisioningArgs struct {
	// The id of the cloud identity permission set.
	PermissionSetId pulumi.StringInput
	// The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set.
	// When deleting this resource, resource `cloud_identity.PermissionSetAssignment` must be deleted first.
	ProvisioningStatus pulumi.StringInput
	// The target account id of the cloud identity permission set provisioning.
	TargetId pulumi.StringInput
}

func (PermissionSetProvisioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*permissionSetProvisioningArgs)(nil)).Elem()
}

type PermissionSetProvisioningInput interface {
	pulumi.Input

	ToPermissionSetProvisioningOutput() PermissionSetProvisioningOutput
	ToPermissionSetProvisioningOutputWithContext(ctx context.Context) PermissionSetProvisioningOutput
}

func (*PermissionSetProvisioning) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionSetProvisioning)(nil)).Elem()
}

func (i *PermissionSetProvisioning) ToPermissionSetProvisioningOutput() PermissionSetProvisioningOutput {
	return i.ToPermissionSetProvisioningOutputWithContext(context.Background())
}

func (i *PermissionSetProvisioning) ToPermissionSetProvisioningOutputWithContext(ctx context.Context) PermissionSetProvisioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetProvisioningOutput)
}

// PermissionSetProvisioningArrayInput is an input type that accepts PermissionSetProvisioningArray and PermissionSetProvisioningArrayOutput values.
// You can construct a concrete instance of `PermissionSetProvisioningArrayInput` via:
//
//	PermissionSetProvisioningArray{ PermissionSetProvisioningArgs{...} }
type PermissionSetProvisioningArrayInput interface {
	pulumi.Input

	ToPermissionSetProvisioningArrayOutput() PermissionSetProvisioningArrayOutput
	ToPermissionSetProvisioningArrayOutputWithContext(context.Context) PermissionSetProvisioningArrayOutput
}

type PermissionSetProvisioningArray []PermissionSetProvisioningInput

func (PermissionSetProvisioningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PermissionSetProvisioning)(nil)).Elem()
}

func (i PermissionSetProvisioningArray) ToPermissionSetProvisioningArrayOutput() PermissionSetProvisioningArrayOutput {
	return i.ToPermissionSetProvisioningArrayOutputWithContext(context.Background())
}

func (i PermissionSetProvisioningArray) ToPermissionSetProvisioningArrayOutputWithContext(ctx context.Context) PermissionSetProvisioningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetProvisioningArrayOutput)
}

// PermissionSetProvisioningMapInput is an input type that accepts PermissionSetProvisioningMap and PermissionSetProvisioningMapOutput values.
// You can construct a concrete instance of `PermissionSetProvisioningMapInput` via:
//
//	PermissionSetProvisioningMap{ "key": PermissionSetProvisioningArgs{...} }
type PermissionSetProvisioningMapInput interface {
	pulumi.Input

	ToPermissionSetProvisioningMapOutput() PermissionSetProvisioningMapOutput
	ToPermissionSetProvisioningMapOutputWithContext(context.Context) PermissionSetProvisioningMapOutput
}

type PermissionSetProvisioningMap map[string]PermissionSetProvisioningInput

func (PermissionSetProvisioningMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PermissionSetProvisioning)(nil)).Elem()
}

func (i PermissionSetProvisioningMap) ToPermissionSetProvisioningMapOutput() PermissionSetProvisioningMapOutput {
	return i.ToPermissionSetProvisioningMapOutputWithContext(context.Background())
}

func (i PermissionSetProvisioningMap) ToPermissionSetProvisioningMapOutputWithContext(ctx context.Context) PermissionSetProvisioningMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionSetProvisioningMapOutput)
}

type PermissionSetProvisioningOutput struct{ *pulumi.OutputState }

func (PermissionSetProvisioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionSetProvisioning)(nil)).Elem()
}

func (o PermissionSetProvisioningOutput) ToPermissionSetProvisioningOutput() PermissionSetProvisioningOutput {
	return o
}

func (o PermissionSetProvisioningOutput) ToPermissionSetProvisioningOutputWithContext(ctx context.Context) PermissionSetProvisioningOutput {
	return o
}

// The id of the cloud identity permission set.
func (o PermissionSetProvisioningOutput) PermissionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PermissionSetProvisioning) pulumi.StringOutput { return v.PermissionSetId }).(pulumi.StringOutput)
}

// The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set.
// When deleting this resource, resource `cloud_identity.PermissionSetAssignment` must be deleted first.
func (o PermissionSetProvisioningOutput) ProvisioningStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *PermissionSetProvisioning) pulumi.StringOutput { return v.ProvisioningStatus }).(pulumi.StringOutput)
}

// The target account id of the cloud identity permission set provisioning.
func (o PermissionSetProvisioningOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *PermissionSetProvisioning) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

type PermissionSetProvisioningArrayOutput struct{ *pulumi.OutputState }

func (PermissionSetProvisioningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PermissionSetProvisioning)(nil)).Elem()
}

func (o PermissionSetProvisioningArrayOutput) ToPermissionSetProvisioningArrayOutput() PermissionSetProvisioningArrayOutput {
	return o
}

func (o PermissionSetProvisioningArrayOutput) ToPermissionSetProvisioningArrayOutputWithContext(ctx context.Context) PermissionSetProvisioningArrayOutput {
	return o
}

func (o PermissionSetProvisioningArrayOutput) Index(i pulumi.IntInput) PermissionSetProvisioningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PermissionSetProvisioning {
		return vs[0].([]*PermissionSetProvisioning)[vs[1].(int)]
	}).(PermissionSetProvisioningOutput)
}

type PermissionSetProvisioningMapOutput struct{ *pulumi.OutputState }

func (PermissionSetProvisioningMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PermissionSetProvisioning)(nil)).Elem()
}

func (o PermissionSetProvisioningMapOutput) ToPermissionSetProvisioningMapOutput() PermissionSetProvisioningMapOutput {
	return o
}

func (o PermissionSetProvisioningMapOutput) ToPermissionSetProvisioningMapOutputWithContext(ctx context.Context) PermissionSetProvisioningMapOutput {
	return o
}

func (o PermissionSetProvisioningMapOutput) MapIndex(k pulumi.StringInput) PermissionSetProvisioningOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PermissionSetProvisioning {
		return vs[0].(map[string]*PermissionSetProvisioning)[vs[1].(string)]
	}).(PermissionSetProvisioningOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetProvisioningInput)(nil)).Elem(), &PermissionSetProvisioning{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetProvisioningArrayInput)(nil)).Elem(), PermissionSetProvisioningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionSetProvisioningMapInput)(nil)).Elem(), PermissionSetProvisioningMap{})
	pulumi.RegisterOutputType(PermissionSetProvisioningOutput{})
	pulumi.RegisterOutputType(PermissionSetProvisioningArrayOutput{})
	pulumi.RegisterOutputType(PermissionSetProvisioningMapOutput{})
}
