// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of kms keys
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/kms"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kms.GetKeys(ctx, &kms.GetKeysArgs{
//				CreationDateRanges: []string{
//					"2025-06-01 19:48:06",
//					"2025-06-04 19:48:06",
//				},
//				Descriptions: []string{
//					"tf-test",
//				},
//				KeyNames: []string{
//					"mrk-tf-key-mod",
//					"mrk-tf-key",
//				},
//				KeySpecs: []string{
//					"SYMMETRIC_256",
//				},
//				KeyStates: []string{
//					"Enable",
//				},
//				KeyUsages: []string{
//					"ENCRYPT_DECRYPT",
//				},
//				KeyringId: pulumi.StringRef("7a358829-bd5a-4763-ba77-7500ecxxxxxx"),
//				Origins: []string{
//					"CloudKMS",
//				},
//				ProtectionLevels: []string{
//					"SOFTWARE",
//				},
//				RotateStates: []string{
//					"Enable",
//				},
//				Tags: []kms.GetKeysTag{
//					{
//						Key: "tf-k1",
//						Values: []string{
//							"tf-v1",
//						},
//					},
//				},
//				UpdateDateRanges: []string{
//					"2025-06-01 19:48:06",
//					"2025-06-04 19:48:06",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetKeys(ctx *pulumi.Context, args *GetKeysArgs, opts ...pulumi.InvokeOption) (*GetKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKeysResult
	err := ctx.Invoke("volcengine:kms/getKeys:getKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeys.
type GetKeysArgs struct {
	// The creation date of the keyring.
	CreationDateRanges []string `pulumi:"creationDateRanges"`
	// The description of the key.
	Descriptions []string `pulumi:"descriptions"`
	// The name of the key.
	KeyNames []string `pulumi:"keyNames"`
	// The algorithm used in the key.
	KeySpecs []string `pulumi:"keySpecs"`
	// The state of the key.
	KeyStates []string `pulumi:"keyStates"`
	// The usage of the key.
	KeyUsages []string `pulumi:"keyUsages"`
	// Query the Key ring that meets the specified conditions, which is composed of key-value pairs.
	KeyringId *string `pulumi:"keyringId"`
	// Query the Key ring that meets the specified conditions, which is composed of key-value pairs.
	KeyringName *string `pulumi:"keyringName"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// The origin of the key.
	Origins []string `pulumi:"origins"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The protection level of the key.
	ProtectionLevels []string `pulumi:"protectionLevels"`
	// The state of the rotate.
	RotateStates []string `pulumi:"rotateStates"`
	// A list of tags.
	Tags []GetKeysTag `pulumi:"tags"`
	// The update date of the keyring.
	UpdateDateRanges []string `pulumi:"updateDateRanges"`
}

// A collection of values returned by getKeys.
type GetKeysResult struct {
	CreationDateRanges []string `pulumi:"creationDateRanges"`
	// The description of the key.
	Descriptions []string `pulumi:"descriptions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the key.
	KeyNames []string `pulumi:"keyNames"`
	// The algorithm used in the key.
	KeySpecs []string `pulumi:"keySpecs"`
	// The state of the key.
	KeyStates []string `pulumi:"keyStates"`
	// The usage of the key.
	KeyUsages   []string `pulumi:"keyUsages"`
	KeyringId   *string  `pulumi:"keyringId"`
	KeyringName *string  `pulumi:"keyringName"`
	// Master key list information.
	Keys      []GetKeysKey `pulumi:"keys"`
	NameRegex *string      `pulumi:"nameRegex"`
	// The origin of the key.
	Origins    []string `pulumi:"origins"`
	OutputFile *string  `pulumi:"outputFile"`
	// The protection level of the key.
	ProtectionLevels []string `pulumi:"protectionLevels"`
	RotateStates     []string `pulumi:"rotateStates"`
	// Tags.
	Tags []GetKeysTag `pulumi:"tags"`
	// The total count of query.
	TotalCount       int      `pulumi:"totalCount"`
	UpdateDateRanges []string `pulumi:"updateDateRanges"`
}

func GetKeysOutput(ctx *pulumi.Context, args GetKeysOutputArgs, opts ...pulumi.InvokeOption) GetKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeysResult, error) {
			args := v.(GetKeysArgs)
			r, err := GetKeys(ctx, &args, opts...)
			var s GetKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeysResultOutput)
}

// A collection of arguments for invoking getKeys.
type GetKeysOutputArgs struct {
	// The creation date of the keyring.
	CreationDateRanges pulumi.StringArrayInput `pulumi:"creationDateRanges"`
	// The description of the key.
	Descriptions pulumi.StringArrayInput `pulumi:"descriptions"`
	// The name of the key.
	KeyNames pulumi.StringArrayInput `pulumi:"keyNames"`
	// The algorithm used in the key.
	KeySpecs pulumi.StringArrayInput `pulumi:"keySpecs"`
	// The state of the key.
	KeyStates pulumi.StringArrayInput `pulumi:"keyStates"`
	// The usage of the key.
	KeyUsages pulumi.StringArrayInput `pulumi:"keyUsages"`
	// Query the Key ring that meets the specified conditions, which is composed of key-value pairs.
	KeyringId pulumi.StringPtrInput `pulumi:"keyringId"`
	// Query the Key ring that meets the specified conditions, which is composed of key-value pairs.
	KeyringName pulumi.StringPtrInput `pulumi:"keyringName"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// The origin of the key.
	Origins pulumi.StringArrayInput `pulumi:"origins"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The protection level of the key.
	ProtectionLevels pulumi.StringArrayInput `pulumi:"protectionLevels"`
	// The state of the rotate.
	RotateStates pulumi.StringArrayInput `pulumi:"rotateStates"`
	// A list of tags.
	Tags GetKeysTagArrayInput `pulumi:"tags"`
	// The update date of the keyring.
	UpdateDateRanges pulumi.StringArrayInput `pulumi:"updateDateRanges"`
}

func (GetKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysArgs)(nil)).Elem()
}

// A collection of values returned by getKeys.
type GetKeysResultOutput struct{ *pulumi.OutputState }

func (GetKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysResult)(nil)).Elem()
}

func (o GetKeysResultOutput) ToGetKeysResultOutput() GetKeysResultOutput {
	return o
}

func (o GetKeysResultOutput) ToGetKeysResultOutputWithContext(ctx context.Context) GetKeysResultOutput {
	return o
}

func (o GetKeysResultOutput) CreationDateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.CreationDateRanges }).(pulumi.StringArrayOutput)
}

// The description of the key.
func (o GetKeysResultOutput) Descriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.Descriptions }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the key.
func (o GetKeysResultOutput) KeyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.KeyNames }).(pulumi.StringArrayOutput)
}

// The algorithm used in the key.
func (o GetKeysResultOutput) KeySpecs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.KeySpecs }).(pulumi.StringArrayOutput)
}

// The state of the key.
func (o GetKeysResultOutput) KeyStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.KeyStates }).(pulumi.StringArrayOutput)
}

// The usage of the key.
func (o GetKeysResultOutput) KeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.KeyUsages }).(pulumi.StringArrayOutput)
}

func (o GetKeysResultOutput) KeyringId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.KeyringId }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) KeyringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.KeyringName }).(pulumi.StringPtrOutput)
}

// Master key list information.
func (o GetKeysResultOutput) Keys() GetKeysKeyArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []GetKeysKey { return v.Keys }).(GetKeysKeyArrayOutput)
}

func (o GetKeysResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// The origin of the key.
func (o GetKeysResultOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.Origins }).(pulumi.StringArrayOutput)
}

func (o GetKeysResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The protection level of the key.
func (o GetKeysResultOutput) ProtectionLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.ProtectionLevels }).(pulumi.StringArrayOutput)
}

func (o GetKeysResultOutput) RotateStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.RotateStates }).(pulumi.StringArrayOutput)
}

// Tags.
func (o GetKeysResultOutput) Tags() GetKeysTagArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []GetKeysTag { return v.Tags }).(GetKeysTagArrayOutput)
}

// The total count of query.
func (o GetKeysResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKeysResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o GetKeysResultOutput) UpdateDateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []string { return v.UpdateDateRanges }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeysResultOutput{})
}
