// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of kms secrets
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/kms"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kms.GetSecrets(ctx, &kms.GetSecretsArgs{
//				Descriptions: []string{
//					"tf-1",
//					"tf-2",
//				},
//				SecretNames: []string{
//					"5r3",
//					"5r",
//					"tf",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.kms.Secrets has been deprecated in favor of volcengine.kms.getSecrets
func Secrets(ctx *pulumi.Context, args *SecretsArgs, opts ...pulumi.InvokeOption) (*SecretsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv SecretsResult
	err := ctx.Invoke("volcengine:kms/secrets:Secrets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Secrets.
type SecretsArgs struct {
	// The creation date of the secret.
	CreationDateRanges []string `pulumi:"creationDateRanges"`
	// The description of the secret.
	Descriptions []string `pulumi:"descriptions"`
	// The state of the managed.
	ManagedStates []string `pulumi:"managedStates"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The name of the project to which the secret belongs.
	ProjectName *string `pulumi:"projectName"`
	// The state of the rotation.
	RotationStates []string `pulumi:"rotationStates"`
	// The name of the secret.
	SecretNames []string `pulumi:"secretNames"`
	// The state of the secret.
	SecretStates []string `pulumi:"secretStates"`
	// The type of the secret.
	SecretTypes []string `pulumi:"secretTypes"`
	// The trn of the secret.
	Trns []string `pulumi:"trns"`
	// The update date of the secret.
	UpdateDateRanges []string `pulumi:"updateDateRanges"`
}

// A collection of values returned by Secrets.
type SecretsResult struct {
	CreationDateRanges []string `pulumi:"creationDateRanges"`
	// The description of the secret.
	Descriptions []string `pulumi:"descriptions"`
	// The provider-assigned unique ID for this managed resource.
	Id            string   `pulumi:"id"`
	ManagedStates []string `pulumi:"managedStates"`
	NameRegex     *string  `pulumi:"nameRegex"`
	OutputFile    *string  `pulumi:"outputFile"`
	// The project name of the secret.
	ProjectName *string `pulumi:"projectName"`
	// The rotation state of the secret.
	RotationStates []string `pulumi:"rotationStates"`
	// The name of the secret.
	SecretNames []string `pulumi:"secretNames"`
	// The state of secret.
	SecretStates []string `pulumi:"secretStates"`
	// The type of the secret.
	SecretTypes []string `pulumi:"secretTypes"`
	// The information about the secret.
	Secrets []SecretsSecret `pulumi:"secrets"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The information about the tenant resource name (TRN).
	Trns             []string `pulumi:"trns"`
	UpdateDateRanges []string `pulumi:"updateDateRanges"`
}

func SecretsOutput(ctx *pulumi.Context, args SecretsOutputArgs, opts ...pulumi.InvokeOption) SecretsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (SecretsResult, error) {
			args := v.(SecretsArgs)
			r, err := Secrets(ctx, &args, opts...)
			var s SecretsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(SecretsResultOutput)
}

// A collection of arguments for invoking Secrets.
type SecretsOutputArgs struct {
	// The creation date of the secret.
	CreationDateRanges pulumi.StringArrayInput `pulumi:"creationDateRanges"`
	// The description of the secret.
	Descriptions pulumi.StringArrayInput `pulumi:"descriptions"`
	// The state of the managed.
	ManagedStates pulumi.StringArrayInput `pulumi:"managedStates"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of the project to which the secret belongs.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// The state of the rotation.
	RotationStates pulumi.StringArrayInput `pulumi:"rotationStates"`
	// The name of the secret.
	SecretNames pulumi.StringArrayInput `pulumi:"secretNames"`
	// The state of the secret.
	SecretStates pulumi.StringArrayInput `pulumi:"secretStates"`
	// The type of the secret.
	SecretTypes pulumi.StringArrayInput `pulumi:"secretTypes"`
	// The trn of the secret.
	Trns pulumi.StringArrayInput `pulumi:"trns"`
	// The update date of the secret.
	UpdateDateRanges pulumi.StringArrayInput `pulumi:"updateDateRanges"`
}

func (SecretsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsArgs)(nil)).Elem()
}

// A collection of values returned by Secrets.
type SecretsResultOutput struct{ *pulumi.OutputState }

func (SecretsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretsResult)(nil)).Elem()
}

func (o SecretsResultOutput) ToSecretsResultOutput() SecretsResultOutput {
	return o
}

func (o SecretsResultOutput) ToSecretsResultOutputWithContext(ctx context.Context) SecretsResultOutput {
	return o
}

func (o SecretsResultOutput) CreationDateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.CreationDateRanges }).(pulumi.StringArrayOutput)
}

// The description of the secret.
func (o SecretsResultOutput) Descriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.Descriptions }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o SecretsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SecretsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o SecretsResultOutput) ManagedStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.ManagedStates }).(pulumi.StringArrayOutput)
}

func (o SecretsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o SecretsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of the secret.
func (o SecretsResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretsResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// The rotation state of the secret.
func (o SecretsResultOutput) RotationStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.RotationStates }).(pulumi.StringArrayOutput)
}

// The name of the secret.
func (o SecretsResultOutput) SecretNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.SecretNames }).(pulumi.StringArrayOutput)
}

// The state of secret.
func (o SecretsResultOutput) SecretStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.SecretStates }).(pulumi.StringArrayOutput)
}

// The type of the secret.
func (o SecretsResultOutput) SecretTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.SecretTypes }).(pulumi.StringArrayOutput)
}

// The information about the secret.
func (o SecretsResultOutput) Secrets() SecretsSecretArrayOutput {
	return o.ApplyT(func(v SecretsResult) []SecretsSecret { return v.Secrets }).(SecretsSecretArrayOutput)
}

// The total count of query.
func (o SecretsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v SecretsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The information about the tenant resource name (TRN).
func (o SecretsResultOutput) Trns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.Trns }).(pulumi.StringArrayOutput)
}

func (o SecretsResultOutput) UpdateDateRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretsResult) []string { return v.UpdateDateRanges }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(SecretsResultOutput{})
}
