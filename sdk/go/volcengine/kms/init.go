// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "volcengine:kms/key:Key":
		r = &Key{}
	case "volcengine:kms/keyArchive:KeyArchive":
		r = &KeyArchive{}
	case "volcengine:kms/keyEnable:KeyEnable":
		r = &KeyEnable{}
	case "volcengine:kms/keyRotation:KeyRotation":
		r = &KeyRotation{}
	case "volcengine:kms/keyring:Keyring":
		r = &Keyring{}
	case "volcengine:kms/secret:Secret":
		r = &Secret{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"volcengine",
		"kms/key",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"kms/keyArchive",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"kms/keyEnable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"kms/keyRotation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"kms/keyring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"kms/secret",
		&module{version},
	)
}
