// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of ebs auto snapshot policies
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ebs"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// var fooAutoSnapshotPolicy []*ebs.AutoSnapshotPolicy
//
//	for index := 0; index < 2; index++ {
//	    key0 := index
//	    _ := index
//
// __res, err := ebs.NewAutoSnapshotPolicy(ctx, fmt.Sprintf("fooAutoSnapshotPolicy-%v", key0), &ebs.AutoSnapshotPolicyArgs{
// AutoSnapshotPolicyName: pulumi.String("acc-test-auto-snapshot-policy"),
// TimePoints: pulumi.StringArray{
// pulumi.String("1"),
// pulumi.String("5"),
// pulumi.String("9"),
// },
// RetentionDays: -1,
// RepeatWeekdays: pulumi.StringArray{
// pulumi.String("2"),
// pulumi.String("6"),
// },
// ProjectName: pulumi.String("default"),
// Tags: ebs.AutoSnapshotPolicyTagArray{
// &ebs.AutoSnapshotPolicyTagArgs{
// Key: pulumi.String("k1"),
// Value: pulumi.String("v1"),
// },
// },
// })
// if err != nil {
// return err
// }
// fooAutoSnapshotPolicy = append(fooAutoSnapshotPolicy, __res)
// }
// _ = ebs.AutoSnapshotPoliciesOutput(ctx, ebs.AutoSnapshotPoliciesOutputArgs{
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:ebs-autoSnapshotPolicies:AutoSnapshotPolicies.pp:16,9-36),
// }, nil);
// return nil
// })
// }
// ```
func AutoSnapshotPolicies(ctx *pulumi.Context, args *AutoSnapshotPoliciesArgs, opts ...pulumi.InvokeOption) (*AutoSnapshotPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv AutoSnapshotPoliciesResult
	err := ctx.Invoke("volcengine:ebs/autoSnapshotPolicies:AutoSnapshotPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking AutoSnapshotPolicies.
type AutoSnapshotPoliciesArgs struct {
	// A list of auto snapshot policy IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of auto snapshot policy.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []AutoSnapshotPoliciesTag `pulumi:"tags"`
}

// A collection of values returned by AutoSnapshotPolicies.
type AutoSnapshotPoliciesResult struct {
	// The collection of query.
	AutoSnapshotPolicies []AutoSnapshotPoliciesAutoSnapshotPolicy `pulumi:"autoSnapshotPolicies"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The project name of the auto snapshot policy.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []AutoSnapshotPoliciesTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func AutoSnapshotPoliciesOutput(ctx *pulumi.Context, args AutoSnapshotPoliciesOutputArgs, opts ...pulumi.InvokeOption) AutoSnapshotPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AutoSnapshotPoliciesResult, error) {
			args := v.(AutoSnapshotPoliciesArgs)
			r, err := AutoSnapshotPolicies(ctx, &args, opts...)
			var s AutoSnapshotPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AutoSnapshotPoliciesResultOutput)
}

// A collection of arguments for invoking AutoSnapshotPolicies.
type AutoSnapshotPoliciesOutputArgs struct {
	// A list of auto snapshot policy IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of auto snapshot policy.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags AutoSnapshotPoliciesTagArrayInput `pulumi:"tags"`
}

func (AutoSnapshotPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoSnapshotPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by AutoSnapshotPolicies.
type AutoSnapshotPoliciesResultOutput struct{ *pulumi.OutputState }

func (AutoSnapshotPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoSnapshotPoliciesResult)(nil)).Elem()
}

func (o AutoSnapshotPoliciesResultOutput) ToAutoSnapshotPoliciesResultOutput() AutoSnapshotPoliciesResultOutput {
	return o
}

func (o AutoSnapshotPoliciesResultOutput) ToAutoSnapshotPoliciesResultOutputWithContext(ctx context.Context) AutoSnapshotPoliciesResultOutput {
	return o
}

// The collection of query.
func (o AutoSnapshotPoliciesResultOutput) AutoSnapshotPolicies() AutoSnapshotPoliciesAutoSnapshotPolicyArrayOutput {
	return o.ApplyT(func(v AutoSnapshotPoliciesResult) []AutoSnapshotPoliciesAutoSnapshotPolicy {
		return v.AutoSnapshotPolicies
	}).(AutoSnapshotPoliciesAutoSnapshotPolicyArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o AutoSnapshotPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AutoSnapshotPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o AutoSnapshotPoliciesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutoSnapshotPoliciesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o AutoSnapshotPoliciesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoSnapshotPoliciesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o AutoSnapshotPoliciesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoSnapshotPoliciesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of the auto snapshot policy.
func (o AutoSnapshotPoliciesResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoSnapshotPoliciesResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o AutoSnapshotPoliciesResultOutput) Tags() AutoSnapshotPoliciesTagArrayOutput {
	return o.ApplyT(func(v AutoSnapshotPoliciesResult) []AutoSnapshotPoliciesTag { return v.Tags }).(AutoSnapshotPoliciesTagArrayOutput)
}

// The total count of query.
func (o AutoSnapshotPoliciesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AutoSnapshotPoliciesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoSnapshotPoliciesResultOutput{})
}
