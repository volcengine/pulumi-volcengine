// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of ebs auto snapshot policies
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ebs"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// var fooAutoSnapshotPolicy []*ebs.AutoSnapshotPolicy
//
//	for index := 0; index < 2; index++ {
//	    key0 := index
//	    _ := index
//
// __res, err := ebs.NewAutoSnapshotPolicy(ctx, fmt.Sprintf("fooAutoSnapshotPolicy-%v", key0), &ebs.AutoSnapshotPolicyArgs{
// AutoSnapshotPolicyName: pulumi.String("acc-test-auto-snapshot-policy"),
// TimePoints: pulumi.StringArray{
// pulumi.String("1"),
// pulumi.String("5"),
// pulumi.String("9"),
// },
// RetentionDays: -1,
// RepeatWeekdays: pulumi.StringArray{
// pulumi.String("2"),
// pulumi.String("6"),
// },
// ProjectName: pulumi.String("default"),
// Tags: ebs.AutoSnapshotPolicyTagArray{
// &ebs.AutoSnapshotPolicyTagArgs{
// Key: pulumi.String("k1"),
// Value: pulumi.String("v1"),
// },
// },
// })
// if err != nil {
// return err
// }
// fooAutoSnapshotPolicy = append(fooAutoSnapshotPolicy, __res)
// }
// _ = ebs.GetAutoSnapshotPoliciesOutput(ctx, ebs.GetAutoSnapshotPoliciesOutputArgs{
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:ebs-getAutoSnapshotPolicies:getAutoSnapshotPolicies.pp:16,9-36),
// }, nil);
// return nil
// })
// }
// ```
func GetAutoSnapshotPolicies(ctx *pulumi.Context, args *GetAutoSnapshotPoliciesArgs, opts ...pulumi.InvokeOption) (*GetAutoSnapshotPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAutoSnapshotPoliciesResult
	err := ctx.Invoke("volcengine:ebs/getAutoSnapshotPolicies:getAutoSnapshotPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAutoSnapshotPolicies.
type GetAutoSnapshotPoliciesArgs struct {
	// A list of auto snapshot policy IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of auto snapshot policy.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetAutoSnapshotPoliciesTag `pulumi:"tags"`
}

// A collection of values returned by getAutoSnapshotPolicies.
type GetAutoSnapshotPoliciesResult struct {
	// The collection of query.
	AutoSnapshotPolicies []GetAutoSnapshotPoliciesAutoSnapshotPolicy `pulumi:"autoSnapshotPolicies"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The project name of the auto snapshot policy.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetAutoSnapshotPoliciesTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetAutoSnapshotPoliciesOutput(ctx *pulumi.Context, args GetAutoSnapshotPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetAutoSnapshotPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAutoSnapshotPoliciesResult, error) {
			args := v.(GetAutoSnapshotPoliciesArgs)
			r, err := GetAutoSnapshotPolicies(ctx, &args, opts...)
			var s GetAutoSnapshotPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAutoSnapshotPoliciesResultOutput)
}

// A collection of arguments for invoking getAutoSnapshotPolicies.
type GetAutoSnapshotPoliciesOutputArgs struct {
	// A list of auto snapshot policy IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of auto snapshot policy.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags GetAutoSnapshotPoliciesTagArrayInput `pulumi:"tags"`
}

func (GetAutoSnapshotPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoSnapshotPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getAutoSnapshotPolicies.
type GetAutoSnapshotPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetAutoSnapshotPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAutoSnapshotPoliciesResult)(nil)).Elem()
}

func (o GetAutoSnapshotPoliciesResultOutput) ToGetAutoSnapshotPoliciesResultOutput() GetAutoSnapshotPoliciesResultOutput {
	return o
}

func (o GetAutoSnapshotPoliciesResultOutput) ToGetAutoSnapshotPoliciesResultOutputWithContext(ctx context.Context) GetAutoSnapshotPoliciesResultOutput {
	return o
}

// The collection of query.
func (o GetAutoSnapshotPoliciesResultOutput) AutoSnapshotPolicies() GetAutoSnapshotPoliciesAutoSnapshotPolicyArrayOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesResult) []GetAutoSnapshotPoliciesAutoSnapshotPolicy {
		return v.AutoSnapshotPolicies
	}).(GetAutoSnapshotPoliciesAutoSnapshotPolicyArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAutoSnapshotPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAutoSnapshotPoliciesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetAutoSnapshotPoliciesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetAutoSnapshotPoliciesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of the auto snapshot policy.
func (o GetAutoSnapshotPoliciesResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetAutoSnapshotPoliciesResultOutput) Tags() GetAutoSnapshotPoliciesTagArrayOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesResult) []GetAutoSnapshotPoliciesTag { return v.Tags }).(GetAutoSnapshotPoliciesTagArrayOutput)
}

// The total count of query.
func (o GetAutoSnapshotPoliciesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAutoSnapshotPoliciesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAutoSnapshotPoliciesResultOutput{})
}
