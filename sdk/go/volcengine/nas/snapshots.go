// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of nas snapshots
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/nas"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nas.GetSnapshots(ctx, &nas.GetSnapshotsArgs{
//				FileSystemId: pulumi.StringRef("enas-cnbj5c18f02afe0e"),
//				Ids: []string{
//					"snap-022c648fed8b",
//					"snap-e53591b05fbd",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.nas.Snapshots has been deprecated in favor of volcengine.nas.getSnapshots
func Snapshots(ctx *pulumi.Context, args *SnapshotsArgs, opts ...pulumi.InvokeOption) (*SnapshotsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv SnapshotsResult
	err := ctx.Invoke("volcengine:nas/snapshots:Snapshots", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Snapshots.
type SnapshotsArgs struct {
	// The ID of file system.
	FileSystemId *string `pulumi:"fileSystemId"`
	// A list of Snapshot IDs.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The name of snapshot.
	SnapshotName *string `pulumi:"snapshotName"`
	// The type of snapshot.
	SnapshotType *string `pulumi:"snapshotType"`
	// The status of snapshot.
	Status *string `pulumi:"status"`
}

// A collection of values returned by Snapshots.
type SnapshotsResult struct {
	// The id of file system.
	FileSystemId *string `pulumi:"fileSystemId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The name of snapshot.
	SnapshotName *string `pulumi:"snapshotName"`
	// The type of snapshot.
	SnapshotType *string `pulumi:"snapshotType"`
	// The collection of query.
	Snapshots []SnapshotsSnapshot `pulumi:"snapshots"`
	// The status of snapshot.
	Status *string `pulumi:"status"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func SnapshotsOutput(ctx *pulumi.Context, args SnapshotsOutputArgs, opts ...pulumi.InvokeOption) SnapshotsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (SnapshotsResult, error) {
			args := v.(SnapshotsArgs)
			r, err := Snapshots(ctx, &args, opts...)
			var s SnapshotsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(SnapshotsResultOutput)
}

// A collection of arguments for invoking Snapshots.
type SnapshotsOutputArgs struct {
	// The ID of file system.
	FileSystemId pulumi.StringPtrInput `pulumi:"fileSystemId"`
	// A list of Snapshot IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of snapshot.
	SnapshotName pulumi.StringPtrInput `pulumi:"snapshotName"`
	// The type of snapshot.
	SnapshotType pulumi.StringPtrInput `pulumi:"snapshotType"`
	// The status of snapshot.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SnapshotsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotsArgs)(nil)).Elem()
}

// A collection of values returned by Snapshots.
type SnapshotsResultOutput struct{ *pulumi.OutputState }

func (SnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotsResult)(nil)).Elem()
}

func (o SnapshotsResultOutput) ToSnapshotsResultOutput() SnapshotsResultOutput {
	return o
}

func (o SnapshotsResultOutput) ToSnapshotsResultOutputWithContext(ctx context.Context) SnapshotsResultOutput {
	return o
}

// The id of file system.
func (o SnapshotsResultOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotsResult) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o SnapshotsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o SnapshotsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SnapshotsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o SnapshotsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The name of snapshot.
func (o SnapshotsResultOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotsResult) *string { return v.SnapshotName }).(pulumi.StringPtrOutput)
}

// The type of snapshot.
func (o SnapshotsResultOutput) SnapshotType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotsResult) *string { return v.SnapshotType }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o SnapshotsResultOutput) Snapshots() SnapshotsSnapshotArrayOutput {
	return o.ApplyT(func(v SnapshotsResult) []SnapshotsSnapshot { return v.Snapshots }).(SnapshotsSnapshotArrayOutput)
}

// The status of snapshot.
func (o SnapshotsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o SnapshotsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v SnapshotsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(SnapshotsResultOutput{})
}
