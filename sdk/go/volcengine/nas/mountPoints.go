// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of nas mount points
func MountPoints(ctx *pulumi.Context, args *MountPointsArgs, opts ...pulumi.InvokeOption) (*MountPointsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv MountPointsResult
	err := ctx.Invoke("volcengine:nas/mountPoints:MountPoints", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking MountPoints.
type MountPointsArgs struct {
	// The id of the file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The id of the mount point.
	MountPointId *string `pulumi:"mountPointId"`
	// The name of the mount point.
	MountPointName *string `pulumi:"mountPointName"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The id of the vpc.
	VpcsId *string `pulumi:"vpcsId"`
}

// A collection of values returned by MountPoints.
type MountPointsResult struct {
	// The id of the file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The id of the mount point.
	MountPointId *string `pulumi:"mountPointId"`
	// The name of the mount point.
	MountPointName *string `pulumi:"mountPointName"`
	// The list of the mount point.
	MountPoints []MountPointsMountPoint `pulumi:"mountPoints"`
	OutputFile  *string                 `pulumi:"outputFile"`
	// The total count of nas mount points query.
	TotalCount int     `pulumi:"totalCount"`
	VpcsId     *string `pulumi:"vpcsId"`
}

func MountPointsOutput(ctx *pulumi.Context, args MountPointsOutputArgs, opts ...pulumi.InvokeOption) MountPointsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (MountPointsResult, error) {
			args := v.(MountPointsArgs)
			r, err := MountPoints(ctx, &args, opts...)
			var s MountPointsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(MountPointsResultOutput)
}

// A collection of arguments for invoking MountPoints.
type MountPointsOutputArgs struct {
	// The id of the file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The id of the mount point.
	MountPointId pulumi.StringPtrInput `pulumi:"mountPointId"`
	// The name of the mount point.
	MountPointName pulumi.StringPtrInput `pulumi:"mountPointName"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The id of the vpc.
	VpcsId pulumi.StringPtrInput `pulumi:"vpcsId"`
}

func (MountPointsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointsArgs)(nil)).Elem()
}

// A collection of values returned by MountPoints.
type MountPointsResultOutput struct{ *pulumi.OutputState }

func (MountPointsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountPointsResult)(nil)).Elem()
}

func (o MountPointsResultOutput) ToMountPointsResultOutput() MountPointsResultOutput {
	return o
}

func (o MountPointsResultOutput) ToMountPointsResultOutputWithContext(ctx context.Context) MountPointsResultOutput {
	return o
}

// The id of the file system.
func (o MountPointsResultOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointsResult) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o MountPointsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MountPointsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the mount point.
func (o MountPointsResultOutput) MountPointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountPointsResult) *string { return v.MountPointId }).(pulumi.StringPtrOutput)
}

// The name of the mount point.
func (o MountPointsResultOutput) MountPointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountPointsResult) *string { return v.MountPointName }).(pulumi.StringPtrOutput)
}

// The list of the mount point.
func (o MountPointsResultOutput) MountPoints() MountPointsMountPointArrayOutput {
	return o.ApplyT(func(v MountPointsResult) []MountPointsMountPoint { return v.MountPoints }).(MountPointsMountPointArrayOutput)
}

func (o MountPointsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountPointsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of nas mount points query.
func (o MountPointsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v MountPointsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o MountPointsResultOutput) VpcsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountPointsResult) *string { return v.VpcsId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(MountPointsResultOutput{})
}
