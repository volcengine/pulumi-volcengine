// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package escloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/escloud"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.Zones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName:  pulumi.String("acc-test-subnet"),
//				Description: pulumi.String("tfdesc"),
//				CidrBlock:   pulumi.String("172.16.0.0/24"),
//				ZoneId:      pulumi.String(fooZones.Zones[0].Id),
//				VpcId:       fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = escloud.NewInstanceV2(ctx, "fooInstanceV2", &escloud.InstanceV2Args{
//				InstanceName: pulumi.String("acc-test-escloud-instance"),
//				Version:      pulumi.String("V7_10"),
//				ZoneIds: pulumi.StringArray{
//					pulumi.String(fooZones.Zones[0].Id),
//					pulumi.String(fooZones.Zones[1].Id),
//					pulumi.String(fooZones.Zones[2].Id),
//				},
//				SubnetId:           fooSubnet.ID(),
//				EnableHttps:        pulumi.Bool(false),
//				AdminPassword:      pulumi.String("Password@@123"),
//				ChargeType:         pulumi.String("PostPaid"),
//				AutoRenew:          pulumi.Bool(false),
//				Period:             pulumi.Int(1),
//				ConfigurationCode:  pulumi.String("es.standard"),
//				EnablePureMaster:   pulumi.Bool(true),
//				DeletionProtection: pulumi.Bool(false),
//				ProjectName:        pulumi.String("default"),
//				NodeSpecsAssigns: escloud.InstanceV2NodeSpecsAssignArray{
//					&escloud.InstanceV2NodeSpecsAssignArgs{
//						Type:             pulumi.String("Master"),
//						Number:           pulumi.Int(3),
//						ResourceSpecName: pulumi.String("es.x2.medium"),
//						StorageSpecName:  pulumi.String("es.volume.essd.pl0"),
//						StorageSize:      pulumi.Int(20),
//					},
//					&escloud.InstanceV2NodeSpecsAssignArgs{
//						Type:             pulumi.String("Hot"),
//						Number:           pulumi.Int(6),
//						ResourceSpecName: pulumi.String("es.x2.medium"),
//						StorageSpecName:  pulumi.String("es.volume.essd.flexpl-standard"),
//						StorageSize:      pulumi.Int(500),
//						ExtraPerformance: &escloud.InstanceV2NodeSpecsAssignExtraPerformanceArgs{
//							Throughput: pulumi.Int(65),
//						},
//					},
//					&escloud.InstanceV2NodeSpecsAssignArgs{
//						Type:             pulumi.String("Kibana"),
//						Number:           pulumi.Int(1),
//						ResourceSpecName: pulumi.String("kibana.x2.small"),
//						StorageSpecName:  pulumi.String(""),
//						StorageSize:      pulumi.Int(0),
//					},
//				},
//				NetworkSpecs: escloud.InstanceV2NetworkSpecArray{
//					&escloud.InstanceV2NetworkSpecArgs{
//						Type:      pulumi.String("Elasticsearch"),
//						Bandwidth: pulumi.Int(1),
//						IsOpen:    pulumi.Bool(true),
//						SpecName:  pulumi.String("es.eip.bgp_fixed_bandwidth"),
//					},
//					&escloud.InstanceV2NetworkSpecArgs{
//						Type:      pulumi.String("Kibana"),
//						Bandwidth: pulumi.Int(1),
//						IsOpen:    pulumi.Bool(true),
//						SpecName:  pulumi.String("es.eip.bgp_fixed_bandwidth"),
//					},
//				},
//				Tags: escloud.InstanceV2TagArray{
//					&escloud.InstanceV2TagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// EscloudInstanceV2 can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:escloud/instanceV2:InstanceV2 default resource_id
// ```
type InstanceV2 struct {
	pulumi.CustomResourceState

	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword pulumi.StringOutput `pulumi:"adminPassword"`
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// The cerebro private domain of instance.
	CerebroPrivateDomain pulumi.StringOutput `pulumi:"cerebroPrivateDomain"`
	// The cerebro public domain of instance.
	CerebroPublicDomain pulumi.StringOutput `pulumi:"cerebroPublicDomain"`
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringOutput `pulumi:"chargeType"`
	// Configuration code used for billing.
	ConfigurationCode pulumi.StringOutput `pulumi:"configurationCode"`
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// Whether Https access is enabled.
	EnableHttps pulumi.BoolOutput `pulumi:"enableHttps"`
	// Whether the Master node is independent.
	EnablePureMaster pulumi.BoolOutput `pulumi:"enablePureMaster"`
	// The eip address of instance.
	EsEip pulumi.StringOutput `pulumi:"esEip"`
	// The eip id associated with the instance.
	EsEipId pulumi.StringOutput `pulumi:"esEipId"`
	// The es private domain of instance.
	EsPrivateDomain pulumi.StringOutput `pulumi:"esPrivateDomain"`
	// The es private endpoint of instance.
	EsPrivateEndpoint pulumi.StringOutput `pulumi:"esPrivateEndpoint"`
	// The whitelist of es private ip.
	EsPrivateIpWhitelist pulumi.StringOutput `pulumi:"esPrivateIpWhitelist"`
	// The es public domain of instance.
	EsPublicDomain pulumi.StringOutput `pulumi:"esPublicDomain"`
	// The es public endpoint of instance.
	EsPublicEndpoint pulumi.StringOutput `pulumi:"esPublicEndpoint"`
	// The whitelist of es public ip.
	EsPublicIpWhitelist pulumi.StringOutput `pulumi:"esPublicIpWhitelist"`
	// The name of ESCloud instance.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The eip address of kibana.
	KibanaEip pulumi.StringOutput `pulumi:"kibanaEip"`
	// The eip id associated with kibana.
	KibanaEipId pulumi.StringOutput `pulumi:"kibanaEipId"`
	// The kibana private domain of instance.
	KibanaPrivateDomain pulumi.StringOutput `pulumi:"kibanaPrivateDomain"`
	// The whitelist of kibana private ip.
	KibanaPrivateIpWhitelist pulumi.StringOutput `pulumi:"kibanaPrivateIpWhitelist"`
	// The kibana public domain of instance.
	KibanaPublicDomain pulumi.StringOutput `pulumi:"kibanaPublicDomain"`
	// The whitelist of kibana public ip.
	KibanaPublicIpWhitelist pulumi.StringOutput `pulumi:"kibanaPublicIpWhitelist"`
	// The main zone id of instance.
	MainZoneId pulumi.StringOutput `pulumi:"mainZoneId"`
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays pulumi.StringArrayOutput `pulumi:"maintenanceDays"`
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime pulumi.StringOutput `pulumi:"maintenanceTime"`
	// The public network config of the ESCloud instance.
	NetworkSpecs InstanceV2NetworkSpecArrayOutput `pulumi:"networkSpecs"`
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns InstanceV2NodeSpecsAssignArrayOutput `pulumi:"nodeSpecsAssigns"`
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The project name to which the ESCloud instance belongs.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// The status of instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Tags.
	Tags InstanceV2TagArrayOutput `pulumi:"tags"`
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version pulumi.StringOutput `pulumi:"version"`
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds pulumi.StringArrayOutput `pulumi:"zoneIds"`
}

// NewInstanceV2 registers a new resource with the given unique name, arguments, and options.
func NewInstanceV2(ctx *pulumi.Context,
	name string, args *InstanceV2Args, opts ...pulumi.ResourceOption) (*InstanceV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'AdminPassword'")
	}
	if args.ChargeType == nil {
		return nil, errors.New("invalid value for required argument 'ChargeType'")
	}
	if args.ConfigurationCode == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationCode'")
	}
	if args.EnableHttps == nil {
		return nil, errors.New("invalid value for required argument 'EnableHttps'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.NodeSpecsAssigns == nil {
		return nil, errors.New("invalid value for required argument 'NodeSpecsAssigns'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	if args.ZoneIds == nil {
		return nil, errors.New("invalid value for required argument 'ZoneIds'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2"),
		},
	})
	opts = append(opts, aliases)
	if args.AdminPassword != nil {
		args.AdminPassword = pulumi.ToSecret(args.AdminPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"adminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceV2
	err := ctx.RegisterResource("volcengine:escloud/instanceV2:InstanceV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceV2 gets an existing InstanceV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceV2State, opts ...pulumi.ResourceOption) (*InstanceV2, error) {
	var resource InstanceV2
	err := ctx.ReadResource("volcengine:escloud/instanceV2:InstanceV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceV2 resources.
type instanceV2State struct {
	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword *string `pulumi:"adminPassword"`
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The cerebro private domain of instance.
	CerebroPrivateDomain *string `pulumi:"cerebroPrivateDomain"`
	// The cerebro public domain of instance.
	CerebroPublicDomain *string `pulumi:"cerebroPublicDomain"`
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType *string `pulumi:"chargeType"`
	// Configuration code used for billing.
	ConfigurationCode *string `pulumi:"configurationCode"`
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Whether Https access is enabled.
	EnableHttps *bool `pulumi:"enableHttps"`
	// Whether the Master node is independent.
	EnablePureMaster *bool `pulumi:"enablePureMaster"`
	// The eip address of instance.
	EsEip *string `pulumi:"esEip"`
	// The eip id associated with the instance.
	EsEipId *string `pulumi:"esEipId"`
	// The es private domain of instance.
	EsPrivateDomain *string `pulumi:"esPrivateDomain"`
	// The es private endpoint of instance.
	EsPrivateEndpoint *string `pulumi:"esPrivateEndpoint"`
	// The whitelist of es private ip.
	EsPrivateIpWhitelist *string `pulumi:"esPrivateIpWhitelist"`
	// The es public domain of instance.
	EsPublicDomain *string `pulumi:"esPublicDomain"`
	// The es public endpoint of instance.
	EsPublicEndpoint *string `pulumi:"esPublicEndpoint"`
	// The whitelist of es public ip.
	EsPublicIpWhitelist *string `pulumi:"esPublicIpWhitelist"`
	// The name of ESCloud instance.
	InstanceName *string `pulumi:"instanceName"`
	// The eip address of kibana.
	KibanaEip *string `pulumi:"kibanaEip"`
	// The eip id associated with kibana.
	KibanaEipId *string `pulumi:"kibanaEipId"`
	// The kibana private domain of instance.
	KibanaPrivateDomain *string `pulumi:"kibanaPrivateDomain"`
	// The whitelist of kibana private ip.
	KibanaPrivateIpWhitelist *string `pulumi:"kibanaPrivateIpWhitelist"`
	// The kibana public domain of instance.
	KibanaPublicDomain *string `pulumi:"kibanaPublicDomain"`
	// The whitelist of kibana public ip.
	KibanaPublicIpWhitelist *string `pulumi:"kibanaPublicIpWhitelist"`
	// The main zone id of instance.
	MainZoneId *string `pulumi:"mainZoneId"`
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays []string `pulumi:"maintenanceDays"`
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime *string `pulumi:"maintenanceTime"`
	// The public network config of the ESCloud instance.
	NetworkSpecs []InstanceV2NetworkSpec `pulumi:"networkSpecs"`
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns []InstanceV2NodeSpecsAssign `pulumi:"nodeSpecsAssigns"`
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period *int `pulumi:"period"`
	// The project name to which the ESCloud instance belongs.
	ProjectName *string `pulumi:"projectName"`
	// The status of instance.
	Status *string `pulumi:"status"`
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId *string `pulumi:"subnetId"`
	// Tags.
	Tags []InstanceV2Tag `pulumi:"tags"`
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version *string `pulumi:"version"`
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds []string `pulumi:"zoneIds"`
}

type InstanceV2State struct {
	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword pulumi.StringPtrInput
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew pulumi.BoolPtrInput
	// The cerebro private domain of instance.
	CerebroPrivateDomain pulumi.StringPtrInput
	// The cerebro public domain of instance.
	CerebroPublicDomain pulumi.StringPtrInput
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringPtrInput
	// Configuration code used for billing.
	ConfigurationCode pulumi.StringPtrInput
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection pulumi.BoolPtrInput
	// Whether Https access is enabled.
	EnableHttps pulumi.BoolPtrInput
	// Whether the Master node is independent.
	EnablePureMaster pulumi.BoolPtrInput
	// The eip address of instance.
	EsEip pulumi.StringPtrInput
	// The eip id associated with the instance.
	EsEipId pulumi.StringPtrInput
	// The es private domain of instance.
	EsPrivateDomain pulumi.StringPtrInput
	// The es private endpoint of instance.
	EsPrivateEndpoint pulumi.StringPtrInput
	// The whitelist of es private ip.
	EsPrivateIpWhitelist pulumi.StringPtrInput
	// The es public domain of instance.
	EsPublicDomain pulumi.StringPtrInput
	// The es public endpoint of instance.
	EsPublicEndpoint pulumi.StringPtrInput
	// The whitelist of es public ip.
	EsPublicIpWhitelist pulumi.StringPtrInput
	// The name of ESCloud instance.
	InstanceName pulumi.StringPtrInput
	// The eip address of kibana.
	KibanaEip pulumi.StringPtrInput
	// The eip id associated with kibana.
	KibanaEipId pulumi.StringPtrInput
	// The kibana private domain of instance.
	KibanaPrivateDomain pulumi.StringPtrInput
	// The whitelist of kibana private ip.
	KibanaPrivateIpWhitelist pulumi.StringPtrInput
	// The kibana public domain of instance.
	KibanaPublicDomain pulumi.StringPtrInput
	// The whitelist of kibana public ip.
	KibanaPublicIpWhitelist pulumi.StringPtrInput
	// The main zone id of instance.
	MainZoneId pulumi.StringPtrInput
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays pulumi.StringArrayInput
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime pulumi.StringPtrInput
	// The public network config of the ESCloud instance.
	NetworkSpecs InstanceV2NetworkSpecArrayInput
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns InstanceV2NodeSpecsAssignArrayInput
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period pulumi.IntPtrInput
	// The project name to which the ESCloud instance belongs.
	ProjectName pulumi.StringPtrInput
	// The status of instance.
	Status pulumi.StringPtrInput
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId pulumi.StringPtrInput
	// Tags.
	Tags InstanceV2TagArrayInput
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version pulumi.StringPtrInput
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds pulumi.StringArrayInput
}

func (InstanceV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceV2State)(nil)).Elem()
}

type instanceV2Args struct {
	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword string `pulumi:"adminPassword"`
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType string `pulumi:"chargeType"`
	// Configuration code used for billing.
	ConfigurationCode string `pulumi:"configurationCode"`
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Whether Https access is enabled.
	EnableHttps bool `pulumi:"enableHttps"`
	// Whether the Master node is independent.
	EnablePureMaster *bool `pulumi:"enablePureMaster"`
	// The name of ESCloud instance.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays []string `pulumi:"maintenanceDays"`
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime *string `pulumi:"maintenanceTime"`
	// The public network config of the ESCloud instance.
	NetworkSpecs []InstanceV2NetworkSpec `pulumi:"networkSpecs"`
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns []InstanceV2NodeSpecsAssign `pulumi:"nodeSpecsAssigns"`
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period *int `pulumi:"period"`
	// The project name to which the ESCloud instance belongs.
	ProjectName *string `pulumi:"projectName"`
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []InstanceV2Tag `pulumi:"tags"`
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version string `pulumi:"version"`
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds []string `pulumi:"zoneIds"`
}

// The set of arguments for constructing a InstanceV2 resource.
type InstanceV2Args struct {
	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword pulumi.StringInput
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew pulumi.BoolPtrInput
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringInput
	// Configuration code used for billing.
	ConfigurationCode pulumi.StringInput
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection pulumi.BoolPtrInput
	// Whether Https access is enabled.
	EnableHttps pulumi.BoolInput
	// Whether the Master node is independent.
	EnablePureMaster pulumi.BoolPtrInput
	// The name of ESCloud instance.
	InstanceName pulumi.StringInput
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays pulumi.StringArrayInput
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime pulumi.StringPtrInput
	// The public network config of the ESCloud instance.
	NetworkSpecs InstanceV2NetworkSpecArrayInput
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns InstanceV2NodeSpecsAssignArrayInput
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period pulumi.IntPtrInput
	// The project name to which the ESCloud instance belongs.
	ProjectName pulumi.StringPtrInput
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId pulumi.StringInput
	// Tags.
	Tags InstanceV2TagArrayInput
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version pulumi.StringInput
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds pulumi.StringArrayInput
}

func (InstanceV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceV2Args)(nil)).Elem()
}

type InstanceV2Input interface {
	pulumi.Input

	ToInstanceV2Output() InstanceV2Output
	ToInstanceV2OutputWithContext(ctx context.Context) InstanceV2Output
}

func (*InstanceV2) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceV2)(nil)).Elem()
}

func (i *InstanceV2) ToInstanceV2Output() InstanceV2Output {
	return i.ToInstanceV2OutputWithContext(context.Background())
}

func (i *InstanceV2) ToInstanceV2OutputWithContext(ctx context.Context) InstanceV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2Output)
}

// InstanceV2ArrayInput is an input type that accepts InstanceV2Array and InstanceV2ArrayOutput values.
// You can construct a concrete instance of `InstanceV2ArrayInput` via:
//
//	InstanceV2Array{ InstanceV2Args{...} }
type InstanceV2ArrayInput interface {
	pulumi.Input

	ToInstanceV2ArrayOutput() InstanceV2ArrayOutput
	ToInstanceV2ArrayOutputWithContext(context.Context) InstanceV2ArrayOutput
}

type InstanceV2Array []InstanceV2Input

func (InstanceV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceV2)(nil)).Elem()
}

func (i InstanceV2Array) ToInstanceV2ArrayOutput() InstanceV2ArrayOutput {
	return i.ToInstanceV2ArrayOutputWithContext(context.Background())
}

func (i InstanceV2Array) ToInstanceV2ArrayOutputWithContext(ctx context.Context) InstanceV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2ArrayOutput)
}

// InstanceV2MapInput is an input type that accepts InstanceV2Map and InstanceV2MapOutput values.
// You can construct a concrete instance of `InstanceV2MapInput` via:
//
//	InstanceV2Map{ "key": InstanceV2Args{...} }
type InstanceV2MapInput interface {
	pulumi.Input

	ToInstanceV2MapOutput() InstanceV2MapOutput
	ToInstanceV2MapOutputWithContext(context.Context) InstanceV2MapOutput
}

type InstanceV2Map map[string]InstanceV2Input

func (InstanceV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceV2)(nil)).Elem()
}

func (i InstanceV2Map) ToInstanceV2MapOutput() InstanceV2MapOutput {
	return i.ToInstanceV2MapOutputWithContext(context.Background())
}

func (i InstanceV2Map) ToInstanceV2MapOutputWithContext(ctx context.Context) InstanceV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceV2MapOutput)
}

type InstanceV2Output struct{ *pulumi.OutputState }

func (InstanceV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceV2)(nil)).Elem()
}

func (o InstanceV2Output) ToInstanceV2Output() InstanceV2Output {
	return o
}

func (o InstanceV2Output) ToInstanceV2OutputWithContext(ctx context.Context) InstanceV2Output {
	return o
}

// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceV2Output) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.AdminPassword }).(pulumi.StringOutput)
}

// Whether to automatically renew in prepaid scenarios. Default is false.
func (o InstanceV2Output) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// The cerebro private domain of instance.
func (o InstanceV2Output) CerebroPrivateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.CerebroPrivateDomain }).(pulumi.StringOutput)
}

// The cerebro public domain of instance.
func (o InstanceV2Output) CerebroPublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.CerebroPublicDomain }).(pulumi.StringOutput)
}

// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
func (o InstanceV2Output) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.ChargeType }).(pulumi.StringOutput)
}

// Configuration code used for billing.
func (o InstanceV2Output) ConfigurationCode() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.ConfigurationCode }).(pulumi.StringOutput)
}

// Whether enable deletion protection for ESCloud instance. Default is false.
func (o InstanceV2Output) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// Whether Https access is enabled.
func (o InstanceV2Output) EnableHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.BoolOutput { return v.EnableHttps }).(pulumi.BoolOutput)
}

// Whether the Master node is independent.
func (o InstanceV2Output) EnablePureMaster() pulumi.BoolOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.BoolOutput { return v.EnablePureMaster }).(pulumi.BoolOutput)
}

// The eip address of instance.
func (o InstanceV2Output) EsEip() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.EsEip }).(pulumi.StringOutput)
}

// The eip id associated with the instance.
func (o InstanceV2Output) EsEipId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.EsEipId }).(pulumi.StringOutput)
}

// The es private domain of instance.
func (o InstanceV2Output) EsPrivateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.EsPrivateDomain }).(pulumi.StringOutput)
}

// The es private endpoint of instance.
func (o InstanceV2Output) EsPrivateEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.EsPrivateEndpoint }).(pulumi.StringOutput)
}

// The whitelist of es private ip.
func (o InstanceV2Output) EsPrivateIpWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.EsPrivateIpWhitelist }).(pulumi.StringOutput)
}

// The es public domain of instance.
func (o InstanceV2Output) EsPublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.EsPublicDomain }).(pulumi.StringOutput)
}

// The es public endpoint of instance.
func (o InstanceV2Output) EsPublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.EsPublicEndpoint }).(pulumi.StringOutput)
}

// The whitelist of es public ip.
func (o InstanceV2Output) EsPublicIpWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.EsPublicIpWhitelist }).(pulumi.StringOutput)
}

// The name of ESCloud instance.
func (o InstanceV2Output) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// The eip address of kibana.
func (o InstanceV2Output) KibanaEip() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.KibanaEip }).(pulumi.StringOutput)
}

// The eip id associated with kibana.
func (o InstanceV2Output) KibanaEipId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.KibanaEipId }).(pulumi.StringOutput)
}

// The kibana private domain of instance.
func (o InstanceV2Output) KibanaPrivateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.KibanaPrivateDomain }).(pulumi.StringOutput)
}

// The whitelist of kibana private ip.
func (o InstanceV2Output) KibanaPrivateIpWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.KibanaPrivateIpWhitelist }).(pulumi.StringOutput)
}

// The kibana public domain of instance.
func (o InstanceV2Output) KibanaPublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.KibanaPublicDomain }).(pulumi.StringOutput)
}

// The whitelist of kibana public ip.
func (o InstanceV2Output) KibanaPublicIpWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.KibanaPublicIpWhitelist }).(pulumi.StringOutput)
}

// The main zone id of instance.
func (o InstanceV2Output) MainZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.MainZoneId }).(pulumi.StringOutput)
}

// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
func (o InstanceV2Output) MaintenanceDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringArrayOutput { return v.MaintenanceDays }).(pulumi.StringArrayOutput)
}

// The maintainable time period for the instance. Works only on modified scenes.
func (o InstanceV2Output) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// The public network config of the ESCloud instance.
func (o InstanceV2Output) NetworkSpecs() InstanceV2NetworkSpecArrayOutput {
	return o.ApplyT(func(v *InstanceV2) InstanceV2NetworkSpecArrayOutput { return v.NetworkSpecs }).(InstanceV2NetworkSpecArrayOutput)
}

// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
func (o InstanceV2Output) NodeSpecsAssigns() InstanceV2NodeSpecsAssignArrayOutput {
	return o.ApplyT(func(v *InstanceV2) InstanceV2NodeSpecsAssignArrayOutput { return v.NodeSpecsAssigns }).(InstanceV2NodeSpecsAssignArrayOutput)
}

// Purchase duration in prepaid scenarios. Unit: Monthly.
func (o InstanceV2Output) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The project name to which the ESCloud instance belongs.
func (o InstanceV2Output) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of instance.
func (o InstanceV2Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The id of subnet, the subnet must belong to the AZ selected.
func (o InstanceV2Output) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o InstanceV2Output) Tags() InstanceV2TagArrayOutput {
	return o.ApplyT(func(v *InstanceV2) InstanceV2TagArrayOutput { return v.Tags }).(InstanceV2TagArrayOutput)
}

// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
func (o InstanceV2Output) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// The zone id of the ESCloud instance. Support specifying multiple availability zones.
// The first zone id is the primary availability zone, while the rest are backup availability zones.
func (o InstanceV2Output) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceV2) pulumi.StringArrayOutput { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type InstanceV2ArrayOutput struct{ *pulumi.OutputState }

func (InstanceV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceV2)(nil)).Elem()
}

func (o InstanceV2ArrayOutput) ToInstanceV2ArrayOutput() InstanceV2ArrayOutput {
	return o
}

func (o InstanceV2ArrayOutput) ToInstanceV2ArrayOutputWithContext(ctx context.Context) InstanceV2ArrayOutput {
	return o
}

func (o InstanceV2ArrayOutput) Index(i pulumi.IntInput) InstanceV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceV2 {
		return vs[0].([]*InstanceV2)[vs[1].(int)]
	}).(InstanceV2Output)
}

type InstanceV2MapOutput struct{ *pulumi.OutputState }

func (InstanceV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceV2)(nil)).Elem()
}

func (o InstanceV2MapOutput) ToInstanceV2MapOutput() InstanceV2MapOutput {
	return o
}

func (o InstanceV2MapOutput) ToInstanceV2MapOutputWithContext(ctx context.Context) InstanceV2MapOutput {
	return o
}

func (o InstanceV2MapOutput) MapIndex(k pulumi.StringInput) InstanceV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceV2 {
		return vs[0].(map[string]*InstanceV2)[vs[1].(string)]
	}).(InstanceV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2Input)(nil)).Elem(), &InstanceV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2ArrayInput)(nil)).Elem(), InstanceV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceV2MapInput)(nil)).Elem(), InstanceV2Map{})
	pulumi.RegisterOutputType(InstanceV2Output{})
	pulumi.RegisterOutputType(InstanceV2ArrayOutput{})
	pulumi.RegisterOutputType(InstanceV2MapOutput{})
}
