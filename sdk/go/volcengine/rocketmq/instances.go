// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of rocketmq instances
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rocketmq"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rocketmq.GetInstances(ctx, &rocketmq.GetInstancesArgs{
//				InstanceId: pulumi.StringRef("rocketmq-cnoeea6b32118fc2"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.rocketmq.Instances has been deprecated in favor of volcengine.rocketmq.getInstances
func Instances(ctx *pulumi.Context, args *InstancesArgs, opts ...pulumi.InvokeOption) (*InstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv InstancesResult
	err := ctx.Invoke("volcengine:rocketmq/instances:Instances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Instances.
type InstancesArgs struct {
	// The charge type of rocketmq instance. Valid values: `PostPaid`, `PrePaid`.
	ChargeType *string `pulumi:"chargeType"`
	// The id of rocketmq instance.
	InstanceId *string `pulumi:"instanceId"`
	// The name of rocketmq instance. This field support fuzzy query.
	InstanceName *string `pulumi:"instanceName"`
	// The status of rocketmq instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of rocketmq instance.
	ProjectName *string `pulumi:"projectName"`
	// The spec of rocketmq instance.
	Spec *string `pulumi:"spec"`
	// Tags.
	Tags []InstancesTag `pulumi:"tags"`
	// The version of rocketmq instance. Valid values: `4.8`.
	Version *string `pulumi:"version"`
	// The vpc id of rocketmq instance.
	VpcId *string `pulumi:"vpcId"`
	// The zone id of rocketmq instance.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by Instances.
type InstancesResult struct {
	// The charge type of the rocketmq instance.
	ChargeType *string `pulumi:"chargeType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The id of the rocketmq instance.
	InstanceId *string `pulumi:"instanceId"`
	// The name of the rocketmq instance.
	InstanceName *string `pulumi:"instanceName"`
	// The status of the rocketmq instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	NameRegex      *string `pulumi:"nameRegex"`
	OutputFile     *string `pulumi:"outputFile"`
	// The project name of the rocketmq instance.
	ProjectName *string `pulumi:"projectName"`
	// The collection of query.
	RocketmqInstances []InstancesRocketmqInstance `pulumi:"rocketmqInstances"`
	Spec              *string                     `pulumi:"spec"`
	// Tags.
	Tags []InstancesTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The version of the rocketmq instance.
	Version *string `pulumi:"version"`
	// The vpc id of the rocketmq instance.
	VpcId *string `pulumi:"vpcId"`
	// The zone id of the rocketmq instance.
	ZoneId *string `pulumi:"zoneId"`
}

func InstancesOutput(ctx *pulumi.Context, args InstancesOutputArgs, opts ...pulumi.InvokeOption) InstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (InstancesResult, error) {
			args := v.(InstancesArgs)
			r, err := Instances(ctx, &args, opts...)
			var s InstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(InstancesResultOutput)
}

// A collection of arguments for invoking Instances.
type InstancesOutputArgs struct {
	// The charge type of rocketmq instance. Valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	// The id of rocketmq instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The name of rocketmq instance. This field support fuzzy query.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// The status of rocketmq instance.
	InstanceStatus pulumi.StringPtrInput `pulumi:"instanceStatus"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of rocketmq instance.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// The spec of rocketmq instance.
	Spec pulumi.StringPtrInput `pulumi:"spec"`
	// Tags.
	Tags InstancesTagArrayInput `pulumi:"tags"`
	// The version of rocketmq instance. Valid values: `4.8`.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// The vpc id of rocketmq instance.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// The zone id of rocketmq instance.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (InstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesArgs)(nil)).Elem()
}

// A collection of values returned by Instances.
type InstancesResultOutput struct{ *pulumi.OutputState }

func (InstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesResult)(nil)).Elem()
}

func (o InstancesResultOutput) ToInstancesResultOutput() InstancesResultOutput {
	return o
}

func (o InstancesResultOutput) ToInstancesResultOutputWithContext(ctx context.Context) InstancesResultOutput {
	return o
}

// The charge type of the rocketmq instance.
func (o InstancesResultOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o InstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the rocketmq instance.
func (o InstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The name of the rocketmq instance.
func (o InstancesResultOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The status of the rocketmq instance.
func (o InstancesResultOutput) InstanceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.InstanceStatus }).(pulumi.StringPtrOutput)
}

func (o InstancesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o InstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of the rocketmq instance.
func (o InstancesResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o InstancesResultOutput) RocketmqInstances() InstancesRocketmqInstanceArrayOutput {
	return o.ApplyT(func(v InstancesResult) []InstancesRocketmqInstance { return v.RocketmqInstances }).(InstancesRocketmqInstanceArrayOutput)
}

func (o InstancesResultOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

// Tags.
func (o InstancesResultOutput) Tags() InstancesTagArrayOutput {
	return o.ApplyT(func(v InstancesResult) []InstancesTag { return v.Tags }).(InstancesTagArrayOutput)
}

// The total count of query.
func (o InstancesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The version of the rocketmq instance.
func (o InstancesResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The vpc id of the rocketmq instance.
func (o InstancesResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// The zone id of the rocketmq instance.
func (o InstancesResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(InstancesResultOutput{})
}
