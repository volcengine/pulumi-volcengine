// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage rocketmq allow list associate
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rocketmq"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooRocketMQInstance, err := rocketmq.NewRocketMQInstance(ctx, "fooRocketMQInstance", &rocketmq.RocketMQInstanceArgs{
//				ZoneIds: pulumi.StringArray{
//					pulumi.String(fooZones.Zones[0].Id),
//				},
//				SubnetId:            fooSubnet.ID(),
//				Version:             pulumi.String("4.8"),
//				ComputeSpec:         pulumi.String("rocketmq.n1.x2.micro"),
//				StorageSpace:        pulumi.Int(300),
//				AutoScaleQueue:      pulumi.Bool(true),
//				FileReservedTime:    pulumi.Int(10),
//				InstanceName:        pulumi.String("acc-test-rocketmq"),
//				InstanceDescription: pulumi.String("acc-test"),
//				ProjectName:         pulumi.String("default"),
//				ChargeInfo: &rocketmq.RocketMQInstanceChargeInfoArgs{
//					ChargeType: pulumi.String("PostPaid"),
//				},
//				Tags: rocketmq.RocketMQInstanceTagArray{
//					&rocketmq.RocketMQInstanceTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooRocketMQAllowList, err := rocketmq.NewRocketMQAllowList(ctx, "fooRocketMQAllowList", &rocketmq.RocketMQAllowListArgs{
//				AllowListName: pulumi.String("acc-test-allow-list"),
//				AllowListDesc: pulumi.String("acc-test"),
//				AllowLists: pulumi.StringArray{
//					pulumi.String("192.168.0.0/24"),
//					pulumi.String("192.168.2.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = rocketmq.NewRocketMQAllowListAssociate(ctx, "fooRocketMQAllowListAssociate", &rocketmq.RocketMQAllowListAssociateArgs{
//				InstanceId:  fooRocketMQInstance.ID(),
//				AllowListId: fooRocketMQAllowList.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RocketmqAllowListAssociate can be imported using the instance_id:allow_list_id, e.g.
//
// ```sh
// $ pulumi import volcengine:rocketmq/rocketMQAllowListAssociate:RocketMQAllowListAssociate default resource_id
// ```
type RocketMQAllowListAssociate struct {
	pulumi.CustomResourceState

	// The id of the rocketmq allow list.
	AllowListId pulumi.StringOutput `pulumi:"allowListId"`
	// The id of the rocketmq instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewRocketMQAllowListAssociate registers a new resource with the given unique name, arguments, and options.
func NewRocketMQAllowListAssociate(ctx *pulumi.Context,
	name string, args *RocketMQAllowListAssociateArgs, opts ...pulumi.ResourceOption) (*RocketMQAllowListAssociate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllowListId == nil {
		return nil, errors.New("invalid value for required argument 'AllowListId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RocketMQAllowListAssociate
	err := ctx.RegisterResource("volcengine:rocketmq/rocketMQAllowListAssociate:RocketMQAllowListAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRocketMQAllowListAssociate gets an existing RocketMQAllowListAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRocketMQAllowListAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RocketMQAllowListAssociateState, opts ...pulumi.ResourceOption) (*RocketMQAllowListAssociate, error) {
	var resource RocketMQAllowListAssociate
	err := ctx.ReadResource("volcengine:rocketmq/rocketMQAllowListAssociate:RocketMQAllowListAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RocketMQAllowListAssociate resources.
type rocketMQAllowListAssociateState struct {
	// The id of the rocketmq allow list.
	AllowListId *string `pulumi:"allowListId"`
	// The id of the rocketmq instance.
	InstanceId *string `pulumi:"instanceId"`
}

type RocketMQAllowListAssociateState struct {
	// The id of the rocketmq allow list.
	AllowListId pulumi.StringPtrInput
	// The id of the rocketmq instance.
	InstanceId pulumi.StringPtrInput
}

func (RocketMQAllowListAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*rocketMQAllowListAssociateState)(nil)).Elem()
}

type rocketMQAllowListAssociateArgs struct {
	// The id of the rocketmq allow list.
	AllowListId string `pulumi:"allowListId"`
	// The id of the rocketmq instance.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a RocketMQAllowListAssociate resource.
type RocketMQAllowListAssociateArgs struct {
	// The id of the rocketmq allow list.
	AllowListId pulumi.StringInput
	// The id of the rocketmq instance.
	InstanceId pulumi.StringInput
}

func (RocketMQAllowListAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rocketMQAllowListAssociateArgs)(nil)).Elem()
}

type RocketMQAllowListAssociateInput interface {
	pulumi.Input

	ToRocketMQAllowListAssociateOutput() RocketMQAllowListAssociateOutput
	ToRocketMQAllowListAssociateOutputWithContext(ctx context.Context) RocketMQAllowListAssociateOutput
}

func (*RocketMQAllowListAssociate) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQAllowListAssociate)(nil)).Elem()
}

func (i *RocketMQAllowListAssociate) ToRocketMQAllowListAssociateOutput() RocketMQAllowListAssociateOutput {
	return i.ToRocketMQAllowListAssociateOutputWithContext(context.Background())
}

func (i *RocketMQAllowListAssociate) ToRocketMQAllowListAssociateOutputWithContext(ctx context.Context) RocketMQAllowListAssociateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQAllowListAssociateOutput)
}

// RocketMQAllowListAssociateArrayInput is an input type that accepts RocketMQAllowListAssociateArray and RocketMQAllowListAssociateArrayOutput values.
// You can construct a concrete instance of `RocketMQAllowListAssociateArrayInput` via:
//
//	RocketMQAllowListAssociateArray{ RocketMQAllowListAssociateArgs{...} }
type RocketMQAllowListAssociateArrayInput interface {
	pulumi.Input

	ToRocketMQAllowListAssociateArrayOutput() RocketMQAllowListAssociateArrayOutput
	ToRocketMQAllowListAssociateArrayOutputWithContext(context.Context) RocketMQAllowListAssociateArrayOutput
}

type RocketMQAllowListAssociateArray []RocketMQAllowListAssociateInput

func (RocketMQAllowListAssociateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RocketMQAllowListAssociate)(nil)).Elem()
}

func (i RocketMQAllowListAssociateArray) ToRocketMQAllowListAssociateArrayOutput() RocketMQAllowListAssociateArrayOutput {
	return i.ToRocketMQAllowListAssociateArrayOutputWithContext(context.Background())
}

func (i RocketMQAllowListAssociateArray) ToRocketMQAllowListAssociateArrayOutputWithContext(ctx context.Context) RocketMQAllowListAssociateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQAllowListAssociateArrayOutput)
}

// RocketMQAllowListAssociateMapInput is an input type that accepts RocketMQAllowListAssociateMap and RocketMQAllowListAssociateMapOutput values.
// You can construct a concrete instance of `RocketMQAllowListAssociateMapInput` via:
//
//	RocketMQAllowListAssociateMap{ "key": RocketMQAllowListAssociateArgs{...} }
type RocketMQAllowListAssociateMapInput interface {
	pulumi.Input

	ToRocketMQAllowListAssociateMapOutput() RocketMQAllowListAssociateMapOutput
	ToRocketMQAllowListAssociateMapOutputWithContext(context.Context) RocketMQAllowListAssociateMapOutput
}

type RocketMQAllowListAssociateMap map[string]RocketMQAllowListAssociateInput

func (RocketMQAllowListAssociateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RocketMQAllowListAssociate)(nil)).Elem()
}

func (i RocketMQAllowListAssociateMap) ToRocketMQAllowListAssociateMapOutput() RocketMQAllowListAssociateMapOutput {
	return i.ToRocketMQAllowListAssociateMapOutputWithContext(context.Background())
}

func (i RocketMQAllowListAssociateMap) ToRocketMQAllowListAssociateMapOutputWithContext(ctx context.Context) RocketMQAllowListAssociateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQAllowListAssociateMapOutput)
}

type RocketMQAllowListAssociateOutput struct{ *pulumi.OutputState }

func (RocketMQAllowListAssociateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQAllowListAssociate)(nil)).Elem()
}

func (o RocketMQAllowListAssociateOutput) ToRocketMQAllowListAssociateOutput() RocketMQAllowListAssociateOutput {
	return o
}

func (o RocketMQAllowListAssociateOutput) ToRocketMQAllowListAssociateOutputWithContext(ctx context.Context) RocketMQAllowListAssociateOutput {
	return o
}

// The id of the rocketmq allow list.
func (o RocketMQAllowListAssociateOutput) AllowListId() pulumi.StringOutput {
	return o.ApplyT(func(v *RocketMQAllowListAssociate) pulumi.StringOutput { return v.AllowListId }).(pulumi.StringOutput)
}

// The id of the rocketmq instance.
func (o RocketMQAllowListAssociateOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RocketMQAllowListAssociate) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type RocketMQAllowListAssociateArrayOutput struct{ *pulumi.OutputState }

func (RocketMQAllowListAssociateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RocketMQAllowListAssociate)(nil)).Elem()
}

func (o RocketMQAllowListAssociateArrayOutput) ToRocketMQAllowListAssociateArrayOutput() RocketMQAllowListAssociateArrayOutput {
	return o
}

func (o RocketMQAllowListAssociateArrayOutput) ToRocketMQAllowListAssociateArrayOutputWithContext(ctx context.Context) RocketMQAllowListAssociateArrayOutput {
	return o
}

func (o RocketMQAllowListAssociateArrayOutput) Index(i pulumi.IntInput) RocketMQAllowListAssociateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RocketMQAllowListAssociate {
		return vs[0].([]*RocketMQAllowListAssociate)[vs[1].(int)]
	}).(RocketMQAllowListAssociateOutput)
}

type RocketMQAllowListAssociateMapOutput struct{ *pulumi.OutputState }

func (RocketMQAllowListAssociateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RocketMQAllowListAssociate)(nil)).Elem()
}

func (o RocketMQAllowListAssociateMapOutput) ToRocketMQAllowListAssociateMapOutput() RocketMQAllowListAssociateMapOutput {
	return o
}

func (o RocketMQAllowListAssociateMapOutput) ToRocketMQAllowListAssociateMapOutputWithContext(ctx context.Context) RocketMQAllowListAssociateMapOutput {
	return o
}

func (o RocketMQAllowListAssociateMapOutput) MapIndex(k pulumi.StringInput) RocketMQAllowListAssociateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RocketMQAllowListAssociate {
		return vs[0].(map[string]*RocketMQAllowListAssociate)[vs[1].(string)]
	}).(RocketMQAllowListAssociateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQAllowListAssociateInput)(nil)).Elem(), &RocketMQAllowListAssociate{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQAllowListAssociateArrayInput)(nil)).Elem(), RocketMQAllowListAssociateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQAllowListAssociateMapInput)(nil)).Elem(), RocketMQAllowListAssociateMap{})
	pulumi.RegisterOutputType(RocketMQAllowListAssociateOutput{})
	pulumi.RegisterOutputType(RocketMQAllowListAssociateArrayOutput{})
	pulumi.RegisterOutputType(RocketMQAllowListAssociateMapOutput{})
}
