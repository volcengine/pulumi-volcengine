// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of rocketmq allow lists
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rocketmq"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rocketmq.GetAllowLists(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAllowLists(ctx *pulumi.Context, args *GetAllowListsArgs, opts ...pulumi.InvokeOption) (*GetAllowListsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAllowListsResult
	err := ctx.Invoke("volcengine:rocketmq/getAllowLists:getAllowLists", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAllowLists.
type GetAllowListsArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getAllowLists.
type GetAllowListsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The collection of query.
	RocketmqAllowLists []GetAllowListsRocketmqAllowList `pulumi:"rocketmqAllowLists"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetAllowListsOutput(ctx *pulumi.Context, args GetAllowListsOutputArgs, opts ...pulumi.InvokeOption) GetAllowListsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAllowListsResult, error) {
			args := v.(GetAllowListsArgs)
			r, err := GetAllowLists(ctx, &args, opts...)
			var s GetAllowListsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAllowListsResultOutput)
}

// A collection of arguments for invoking getAllowLists.
type GetAllowListsOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetAllowListsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsArgs)(nil)).Elem()
}

// A collection of values returned by getAllowLists.
type GetAllowListsResultOutput struct{ *pulumi.OutputState }

func (GetAllowListsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsResult)(nil)).Elem()
}

func (o GetAllowListsResultOutput) ToGetAllowListsResultOutput() GetAllowListsResultOutput {
	return o
}

func (o GetAllowListsResultOutput) ToGetAllowListsResultOutputWithContext(ctx context.Context) GetAllowListsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetAllowListsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAllowListsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAllowListsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetAllowListsResultOutput) RocketmqAllowLists() GetAllowListsRocketmqAllowListArrayOutput {
	return o.ApplyT(func(v GetAllowListsResult) []GetAllowListsRocketmqAllowList { return v.RocketmqAllowLists }).(GetAllowListsRocketmqAllowListArrayOutput)
}

// The total count of query.
func (o GetAllowListsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAllowListsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAllowListsResultOutput{})
}
