// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage rocketmq allow list
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rocketmq"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rocketmq.NewRocketMQAllowList(ctx, "foo", &rocketmq.RocketMQAllowListArgs{
//				AllowLists: pulumi.StringArray{
//					pulumi.String("192.168.0.0/24"),
//					pulumi.String("192.168.2.0/24"),
//				},
//				AllowListDesc: pulumi.String("acc-test"),
//				AllowListName: pulumi.String("acc-test-allow-list"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RocketmqAllowList can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:rocketmq/rocketMQAllowList:RocketMQAllowList default resource_id
// ```
type RocketMQAllowList struct {
	pulumi.CustomResourceState

	// The description of the allow list.
	AllowListDesc pulumi.StringPtrOutput `pulumi:"allowListDesc"`
	// The number of ip address in the rocketmq allow list.
	AllowListIpNum pulumi.IntOutput `pulumi:"allowListIpNum"`
	// The name of the allow list.
	AllowListName pulumi.StringOutput `pulumi:"allowListName"`
	// The type of the rocketmq allow list.
	AllowListType pulumi.StringOutput `pulumi:"allowListType"`
	// The list of ip addresses. Enter an IP address or a range of IP addresses in CIDR format.
	AllowLists pulumi.StringArrayOutput `pulumi:"allowLists"`
	// The number of the rocketmq instances associated with the allow list.
	AssociatedInstanceNum pulumi.IntOutput `pulumi:"associatedInstanceNum"`
	// The associated instance information of the allow list.
	AssociatedInstances RocketMQAllowListAssociatedInstanceArrayOutput `pulumi:"associatedInstances"`
}

// NewRocketMQAllowList registers a new resource with the given unique name, arguments, and options.
func NewRocketMQAllowList(ctx *pulumi.Context,
	name string, args *RocketMQAllowListArgs, opts ...pulumi.ResourceOption) (*RocketMQAllowList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllowListName == nil {
		return nil, errors.New("invalid value for required argument 'AllowListName'")
	}
	if args.AllowLists == nil {
		return nil, errors.New("invalid value for required argument 'AllowLists'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RocketMQAllowList
	err := ctx.RegisterResource("volcengine:rocketmq/rocketMQAllowList:RocketMQAllowList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRocketMQAllowList gets an existing RocketMQAllowList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRocketMQAllowList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RocketMQAllowListState, opts ...pulumi.ResourceOption) (*RocketMQAllowList, error) {
	var resource RocketMQAllowList
	err := ctx.ReadResource("volcengine:rocketmq/rocketMQAllowList:RocketMQAllowList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RocketMQAllowList resources.
type rocketMQAllowListState struct {
	// The description of the allow list.
	AllowListDesc *string `pulumi:"allowListDesc"`
	// The number of ip address in the rocketmq allow list.
	AllowListIpNum *int `pulumi:"allowListIpNum"`
	// The name of the allow list.
	AllowListName *string `pulumi:"allowListName"`
	// The type of the rocketmq allow list.
	AllowListType *string `pulumi:"allowListType"`
	// The list of ip addresses. Enter an IP address or a range of IP addresses in CIDR format.
	AllowLists []string `pulumi:"allowLists"`
	// The number of the rocketmq instances associated with the allow list.
	AssociatedInstanceNum *int `pulumi:"associatedInstanceNum"`
	// The associated instance information of the allow list.
	AssociatedInstances []RocketMQAllowListAssociatedInstance `pulumi:"associatedInstances"`
}

type RocketMQAllowListState struct {
	// The description of the allow list.
	AllowListDesc pulumi.StringPtrInput
	// The number of ip address in the rocketmq allow list.
	AllowListIpNum pulumi.IntPtrInput
	// The name of the allow list.
	AllowListName pulumi.StringPtrInput
	// The type of the rocketmq allow list.
	AllowListType pulumi.StringPtrInput
	// The list of ip addresses. Enter an IP address or a range of IP addresses in CIDR format.
	AllowLists pulumi.StringArrayInput
	// The number of the rocketmq instances associated with the allow list.
	AssociatedInstanceNum pulumi.IntPtrInput
	// The associated instance information of the allow list.
	AssociatedInstances RocketMQAllowListAssociatedInstanceArrayInput
}

func (RocketMQAllowListState) ElementType() reflect.Type {
	return reflect.TypeOf((*rocketMQAllowListState)(nil)).Elem()
}

type rocketMQAllowListArgs struct {
	// The description of the allow list.
	AllowListDesc *string `pulumi:"allowListDesc"`
	// The name of the allow list.
	AllowListName string `pulumi:"allowListName"`
	// The list of ip addresses. Enter an IP address or a range of IP addresses in CIDR format.
	AllowLists []string `pulumi:"allowLists"`
}

// The set of arguments for constructing a RocketMQAllowList resource.
type RocketMQAllowListArgs struct {
	// The description of the allow list.
	AllowListDesc pulumi.StringPtrInput
	// The name of the allow list.
	AllowListName pulumi.StringInput
	// The list of ip addresses. Enter an IP address or a range of IP addresses in CIDR format.
	AllowLists pulumi.StringArrayInput
}

func (RocketMQAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rocketMQAllowListArgs)(nil)).Elem()
}

type RocketMQAllowListInput interface {
	pulumi.Input

	ToRocketMQAllowListOutput() RocketMQAllowListOutput
	ToRocketMQAllowListOutputWithContext(ctx context.Context) RocketMQAllowListOutput
}

func (*RocketMQAllowList) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQAllowList)(nil)).Elem()
}

func (i *RocketMQAllowList) ToRocketMQAllowListOutput() RocketMQAllowListOutput {
	return i.ToRocketMQAllowListOutputWithContext(context.Background())
}

func (i *RocketMQAllowList) ToRocketMQAllowListOutputWithContext(ctx context.Context) RocketMQAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQAllowListOutput)
}

// RocketMQAllowListArrayInput is an input type that accepts RocketMQAllowListArray and RocketMQAllowListArrayOutput values.
// You can construct a concrete instance of `RocketMQAllowListArrayInput` via:
//
//	RocketMQAllowListArray{ RocketMQAllowListArgs{...} }
type RocketMQAllowListArrayInput interface {
	pulumi.Input

	ToRocketMQAllowListArrayOutput() RocketMQAllowListArrayOutput
	ToRocketMQAllowListArrayOutputWithContext(context.Context) RocketMQAllowListArrayOutput
}

type RocketMQAllowListArray []RocketMQAllowListInput

func (RocketMQAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RocketMQAllowList)(nil)).Elem()
}

func (i RocketMQAllowListArray) ToRocketMQAllowListArrayOutput() RocketMQAllowListArrayOutput {
	return i.ToRocketMQAllowListArrayOutputWithContext(context.Background())
}

func (i RocketMQAllowListArray) ToRocketMQAllowListArrayOutputWithContext(ctx context.Context) RocketMQAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQAllowListArrayOutput)
}

// RocketMQAllowListMapInput is an input type that accepts RocketMQAllowListMap and RocketMQAllowListMapOutput values.
// You can construct a concrete instance of `RocketMQAllowListMapInput` via:
//
//	RocketMQAllowListMap{ "key": RocketMQAllowListArgs{...} }
type RocketMQAllowListMapInput interface {
	pulumi.Input

	ToRocketMQAllowListMapOutput() RocketMQAllowListMapOutput
	ToRocketMQAllowListMapOutputWithContext(context.Context) RocketMQAllowListMapOutput
}

type RocketMQAllowListMap map[string]RocketMQAllowListInput

func (RocketMQAllowListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RocketMQAllowList)(nil)).Elem()
}

func (i RocketMQAllowListMap) ToRocketMQAllowListMapOutput() RocketMQAllowListMapOutput {
	return i.ToRocketMQAllowListMapOutputWithContext(context.Background())
}

func (i RocketMQAllowListMap) ToRocketMQAllowListMapOutputWithContext(ctx context.Context) RocketMQAllowListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RocketMQAllowListMapOutput)
}

type RocketMQAllowListOutput struct{ *pulumi.OutputState }

func (RocketMQAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RocketMQAllowList)(nil)).Elem()
}

func (o RocketMQAllowListOutput) ToRocketMQAllowListOutput() RocketMQAllowListOutput {
	return o
}

func (o RocketMQAllowListOutput) ToRocketMQAllowListOutputWithContext(ctx context.Context) RocketMQAllowListOutput {
	return o
}

// The description of the allow list.
func (o RocketMQAllowListOutput) AllowListDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RocketMQAllowList) pulumi.StringPtrOutput { return v.AllowListDesc }).(pulumi.StringPtrOutput)
}

// The number of ip address in the rocketmq allow list.
func (o RocketMQAllowListOutput) AllowListIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v *RocketMQAllowList) pulumi.IntOutput { return v.AllowListIpNum }).(pulumi.IntOutput)
}

// The name of the allow list.
func (o RocketMQAllowListOutput) AllowListName() pulumi.StringOutput {
	return o.ApplyT(func(v *RocketMQAllowList) pulumi.StringOutput { return v.AllowListName }).(pulumi.StringOutput)
}

// The type of the rocketmq allow list.
func (o RocketMQAllowListOutput) AllowListType() pulumi.StringOutput {
	return o.ApplyT(func(v *RocketMQAllowList) pulumi.StringOutput { return v.AllowListType }).(pulumi.StringOutput)
}

// The list of ip addresses. Enter an IP address or a range of IP addresses in CIDR format.
func (o RocketMQAllowListOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RocketMQAllowList) pulumi.StringArrayOutput { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The number of the rocketmq instances associated with the allow list.
func (o RocketMQAllowListOutput) AssociatedInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v *RocketMQAllowList) pulumi.IntOutput { return v.AssociatedInstanceNum }).(pulumi.IntOutput)
}

// The associated instance information of the allow list.
func (o RocketMQAllowListOutput) AssociatedInstances() RocketMQAllowListAssociatedInstanceArrayOutput {
	return o.ApplyT(func(v *RocketMQAllowList) RocketMQAllowListAssociatedInstanceArrayOutput {
		return v.AssociatedInstances
	}).(RocketMQAllowListAssociatedInstanceArrayOutput)
}

type RocketMQAllowListArrayOutput struct{ *pulumi.OutputState }

func (RocketMQAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RocketMQAllowList)(nil)).Elem()
}

func (o RocketMQAllowListArrayOutput) ToRocketMQAllowListArrayOutput() RocketMQAllowListArrayOutput {
	return o
}

func (o RocketMQAllowListArrayOutput) ToRocketMQAllowListArrayOutputWithContext(ctx context.Context) RocketMQAllowListArrayOutput {
	return o
}

func (o RocketMQAllowListArrayOutput) Index(i pulumi.IntInput) RocketMQAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RocketMQAllowList {
		return vs[0].([]*RocketMQAllowList)[vs[1].(int)]
	}).(RocketMQAllowListOutput)
}

type RocketMQAllowListMapOutput struct{ *pulumi.OutputState }

func (RocketMQAllowListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RocketMQAllowList)(nil)).Elem()
}

func (o RocketMQAllowListMapOutput) ToRocketMQAllowListMapOutput() RocketMQAllowListMapOutput {
	return o
}

func (o RocketMQAllowListMapOutput) ToRocketMQAllowListMapOutputWithContext(ctx context.Context) RocketMQAllowListMapOutput {
	return o
}

func (o RocketMQAllowListMapOutput) MapIndex(k pulumi.StringInput) RocketMQAllowListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RocketMQAllowList {
		return vs[0].(map[string]*RocketMQAllowList)[vs[1].(string)]
	}).(RocketMQAllowListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQAllowListInput)(nil)).Elem(), &RocketMQAllowList{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQAllowListArrayInput)(nil)).Elem(), RocketMQAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RocketMQAllowListMapInput)(nil)).Elem(), RocketMQAllowListMap{})
	pulumi.RegisterOutputType(RocketMQAllowListOutput{})
	pulumi.RegisterOutputType(RocketMQAllowListArrayOutput{})
	pulumi.RegisterOutputType(RocketMQAllowListMapOutput{})
}
