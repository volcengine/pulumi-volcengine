// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of rocketmq groups
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rocketmq"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rocketmq.GetGroups(ctx, &rocketmq.GetGroupsArgs{
//				InstanceId: "rocketmq-cnoeea6b32118fc2",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroups(ctx *pulumi.Context, args *GetGroupsArgs, opts ...pulumi.InvokeOption) (*GetGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupsResult
	err := ctx.Invoke("volcengine:rocketmq/getGroups:getGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroups.
type GetGroupsArgs struct {
	// The id of rocketmq group. This field support fuzzy query.
	GroupId *string `pulumi:"groupId"`
	// The type of rocketmq group. Valid values: `TCP`.
	GroupType *string `pulumi:"groupType"`
	// The id of rocketmq instance.
	InstanceId string `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getGroups.
type GetGroupsResult struct {
	// The id of the rocketmq group.
	GroupId *string `pulumi:"groupId"`
	// The type of the rocketmq group.
	GroupType *string `pulumi:"groupType"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	InstanceId string  `pulumi:"instanceId"`
	OutputFile *string `pulumi:"outputFile"`
	// The collection of query.
	RocketmqGroups []GetGroupsRocketmqGroup `pulumi:"rocketmqGroups"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetGroupsOutput(ctx *pulumi.Context, args GetGroupsOutputArgs, opts ...pulumi.InvokeOption) GetGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupsResult, error) {
			args := v.(GetGroupsArgs)
			r, err := GetGroups(ctx, &args, opts...)
			var s GetGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGroupsResultOutput)
}

// A collection of arguments for invoking getGroups.
type GetGroupsOutputArgs struct {
	// The id of rocketmq group. This field support fuzzy query.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The type of rocketmq group. Valid values: `TCP`.
	GroupType pulumi.StringPtrInput `pulumi:"groupType"`
	// The id of rocketmq instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getGroups.
type GetGroupsResultOutput struct{ *pulumi.OutputState }

func (GetGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsResult)(nil)).Elem()
}

func (o GetGroupsResultOutput) ToGetGroupsResultOutput() GetGroupsResultOutput {
	return o
}

func (o GetGroupsResultOutput) ToGetGroupsResultOutputWithContext(ctx context.Context) GetGroupsResultOutput {
	return o
}

// The id of the rocketmq group.
func (o GetGroupsResultOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupsResult) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The type of the rocketmq group.
func (o GetGroupsResultOutput) GroupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupsResult) *string { return v.GroupType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGroupsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetGroupsResultOutput) RocketmqGroups() GetGroupsRocketmqGroupArrayOutput {
	return o.ApplyT(func(v GetGroupsResult) []GetGroupsRocketmqGroup { return v.RocketmqGroups }).(GetGroupsRocketmqGroupArrayOutput)
}

// The total count of query.
func (o GetGroupsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupsResultOutput{})
}
