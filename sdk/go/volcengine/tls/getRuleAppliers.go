// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tls

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of tls rule appliers
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/tls"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := tls.GetRuleAppliers(ctx, &tls.GetRuleAppliersArgs{
//				HostGroupId: "fbea6619-7b0c-40f3-ac7e-45c63e3f676e",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRuleAppliers(ctx *pulumi.Context, args *GetRuleAppliersArgs, opts ...pulumi.InvokeOption) (*GetRuleAppliersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRuleAppliersResult
	err := ctx.Invoke("volcengine:tls/getRuleAppliers:getRuleAppliers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuleAppliers.
type GetRuleAppliersArgs struct {
	// The host group id.
	HostGroupId string `pulumi:"hostGroupId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getRuleAppliers.
type GetRuleAppliersResult struct {
	HostGroupId string `pulumi:"hostGroupId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The rules list.
	Rules []GetRuleAppliersRule `pulumi:"rules"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetRuleAppliersOutput(ctx *pulumi.Context, args GetRuleAppliersOutputArgs, opts ...pulumi.InvokeOption) GetRuleAppliersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRuleAppliersResult, error) {
			args := v.(GetRuleAppliersArgs)
			r, err := GetRuleAppliers(ctx, &args, opts...)
			var s GetRuleAppliersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRuleAppliersResultOutput)
}

// A collection of arguments for invoking getRuleAppliers.
type GetRuleAppliersOutputArgs struct {
	// The host group id.
	HostGroupId pulumi.StringInput `pulumi:"hostGroupId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetRuleAppliersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleAppliersArgs)(nil)).Elem()
}

// A collection of values returned by getRuleAppliers.
type GetRuleAppliersResultOutput struct{ *pulumi.OutputState }

func (GetRuleAppliersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleAppliersResult)(nil)).Elem()
}

func (o GetRuleAppliersResultOutput) ToGetRuleAppliersResultOutput() GetRuleAppliersResultOutput {
	return o
}

func (o GetRuleAppliersResultOutput) ToGetRuleAppliersResultOutputWithContext(ctx context.Context) GetRuleAppliersResultOutput {
	return o
}

func (o GetRuleAppliersResultOutput) HostGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleAppliersResult) string { return v.HostGroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRuleAppliersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleAppliersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRuleAppliersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRuleAppliersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The rules list.
func (o GetRuleAppliersResultOutput) Rules() GetRuleAppliersRuleArrayOutput {
	return o.ApplyT(func(v GetRuleAppliersResult) []GetRuleAppliersRule { return v.Rules }).(GetRuleAppliersRuleArrayOutput)
}

// The total count of query.
func (o GetRuleAppliersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleAppliersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRuleAppliersResultOutput{})
}
