// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tls

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "volcengine:tls/alarm:Alarm":
		r = &Alarm{}
	case "volcengine:tls/alarmNotifyGroup:AlarmNotifyGroup":
		r = &AlarmNotifyGroup{}
	case "volcengine:tls/host:Host":
		r = &Host{}
	case "volcengine:tls/hostGroup:HostGroup":
		r = &HostGroup{}
	case "volcengine:tls/index:Index":
		r = &Index{}
	case "volcengine:tls/kafkaConsumer:KafkaConsumer":
		r = &KafkaConsumer{}
	case "volcengine:tls/project:Project":
		r = &Project{}
	case "volcengine:tls/rule:Rule":
		r = &Rule{}
	case "volcengine:tls/ruleApplier:RuleApplier":
		r = &RuleApplier{}
	case "volcengine:tls/topic:Topic":
		r = &Topic{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/alarm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/alarmNotifyGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/host",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/hostGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/index",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/kafkaConsumer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/project",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/rule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/ruleApplier",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"tls/topic",
		&module{version},
	)
}
