// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage cr endpoint acl policy
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cr"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooRegistry, err := cr.NewRegistry(ctx, "fooRegistry", &cr.RegistryArgs{
//				Project: pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			fooEndpoint, err := cr.NewEndpoint(ctx, "fooEndpoint", &cr.EndpointArgs{
//				Registry: fooRegistry.ID(),
//				Enabled:  pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			var fooEndpointAclPolicy []*cr.EndpointAclPolicy
//			for index := 0; index < 3; index++ {
//				key0 := index
//				val0 := index
//				__res, err := cr.NewEndpointAclPolicy(ctx, fmt.Sprintf("fooEndpointAclPolicy-%v", key0), &cr.EndpointAclPolicyArgs{
//					Registry:    fooEndpoint.Registry,
//					Type:        pulumi.String("Public"),
//					Entry:       pulumi.String(fmt.Sprintf("192.168.0.%v", val0)),
//					Description: pulumi.String(fmt.Sprintf("test-%v", val0)),
//				})
//				if err != nil {
//					return err
//				}
//				fooEndpointAclPolicy = append(fooEndpointAclPolicy, __res)
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CrEndpointAclPolicy can be imported using the registry:entry, e.g.
//
// ```sh
// $ pulumi import volcengine:cr/endpointAclPolicy:EndpointAclPolicy default resource_id
// ```
type EndpointAclPolicy struct {
	pulumi.CustomResourceState

	// The description of the acl policy.
	Description pulumi.StringOutput `pulumi:"description"`
	// The ip list of the acl policy.
	Entry pulumi.StringOutput `pulumi:"entry"`
	// The registry name.
	Registry pulumi.StringOutput `pulumi:"registry"`
	// The type of the acl policy. Valid values: `Public`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewEndpointAclPolicy registers a new resource with the given unique name, arguments, and options.
func NewEndpointAclPolicy(ctx *pulumi.Context,
	name string, args *EndpointAclPolicyArgs, opts ...pulumi.ResourceOption) (*EndpointAclPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Entry == nil {
		return nil, errors.New("invalid value for required argument 'Entry'")
	}
	if args.Registry == nil {
		return nil, errors.New("invalid value for required argument 'Registry'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EndpointAclPolicy
	err := ctx.RegisterResource("volcengine:cr/endpointAclPolicy:EndpointAclPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointAclPolicy gets an existing EndpointAclPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointAclPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointAclPolicyState, opts ...pulumi.ResourceOption) (*EndpointAclPolicy, error) {
	var resource EndpointAclPolicy
	err := ctx.ReadResource("volcengine:cr/endpointAclPolicy:EndpointAclPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointAclPolicy resources.
type endpointAclPolicyState struct {
	// The description of the acl policy.
	Description *string `pulumi:"description"`
	// The ip list of the acl policy.
	Entry *string `pulumi:"entry"`
	// The registry name.
	Registry *string `pulumi:"registry"`
	// The type of the acl policy. Valid values: `Public`.
	Type *string `pulumi:"type"`
}

type EndpointAclPolicyState struct {
	// The description of the acl policy.
	Description pulumi.StringPtrInput
	// The ip list of the acl policy.
	Entry pulumi.StringPtrInput
	// The registry name.
	Registry pulumi.StringPtrInput
	// The type of the acl policy. Valid values: `Public`.
	Type pulumi.StringPtrInput
}

func (EndpointAclPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointAclPolicyState)(nil)).Elem()
}

type endpointAclPolicyArgs struct {
	// The description of the acl policy.
	Description string `pulumi:"description"`
	// The ip list of the acl policy.
	Entry string `pulumi:"entry"`
	// The registry name.
	Registry string `pulumi:"registry"`
	// The type of the acl policy. Valid values: `Public`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a EndpointAclPolicy resource.
type EndpointAclPolicyArgs struct {
	// The description of the acl policy.
	Description pulumi.StringInput
	// The ip list of the acl policy.
	Entry pulumi.StringInput
	// The registry name.
	Registry pulumi.StringInput
	// The type of the acl policy. Valid values: `Public`.
	Type pulumi.StringInput
}

func (EndpointAclPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointAclPolicyArgs)(nil)).Elem()
}

type EndpointAclPolicyInput interface {
	pulumi.Input

	ToEndpointAclPolicyOutput() EndpointAclPolicyOutput
	ToEndpointAclPolicyOutputWithContext(ctx context.Context) EndpointAclPolicyOutput
}

func (*EndpointAclPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAclPolicy)(nil)).Elem()
}

func (i *EndpointAclPolicy) ToEndpointAclPolicyOutput() EndpointAclPolicyOutput {
	return i.ToEndpointAclPolicyOutputWithContext(context.Background())
}

func (i *EndpointAclPolicy) ToEndpointAclPolicyOutputWithContext(ctx context.Context) EndpointAclPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAclPolicyOutput)
}

// EndpointAclPolicyArrayInput is an input type that accepts EndpointAclPolicyArray and EndpointAclPolicyArrayOutput values.
// You can construct a concrete instance of `EndpointAclPolicyArrayInput` via:
//
//	EndpointAclPolicyArray{ EndpointAclPolicyArgs{...} }
type EndpointAclPolicyArrayInput interface {
	pulumi.Input

	ToEndpointAclPolicyArrayOutput() EndpointAclPolicyArrayOutput
	ToEndpointAclPolicyArrayOutputWithContext(context.Context) EndpointAclPolicyArrayOutput
}

type EndpointAclPolicyArray []EndpointAclPolicyInput

func (EndpointAclPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointAclPolicy)(nil)).Elem()
}

func (i EndpointAclPolicyArray) ToEndpointAclPolicyArrayOutput() EndpointAclPolicyArrayOutput {
	return i.ToEndpointAclPolicyArrayOutputWithContext(context.Background())
}

func (i EndpointAclPolicyArray) ToEndpointAclPolicyArrayOutputWithContext(ctx context.Context) EndpointAclPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAclPolicyArrayOutput)
}

// EndpointAclPolicyMapInput is an input type that accepts EndpointAclPolicyMap and EndpointAclPolicyMapOutput values.
// You can construct a concrete instance of `EndpointAclPolicyMapInput` via:
//
//	EndpointAclPolicyMap{ "key": EndpointAclPolicyArgs{...} }
type EndpointAclPolicyMapInput interface {
	pulumi.Input

	ToEndpointAclPolicyMapOutput() EndpointAclPolicyMapOutput
	ToEndpointAclPolicyMapOutputWithContext(context.Context) EndpointAclPolicyMapOutput
}

type EndpointAclPolicyMap map[string]EndpointAclPolicyInput

func (EndpointAclPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointAclPolicy)(nil)).Elem()
}

func (i EndpointAclPolicyMap) ToEndpointAclPolicyMapOutput() EndpointAclPolicyMapOutput {
	return i.ToEndpointAclPolicyMapOutputWithContext(context.Background())
}

func (i EndpointAclPolicyMap) ToEndpointAclPolicyMapOutputWithContext(ctx context.Context) EndpointAclPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAclPolicyMapOutput)
}

type EndpointAclPolicyOutput struct{ *pulumi.OutputState }

func (EndpointAclPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAclPolicy)(nil)).Elem()
}

func (o EndpointAclPolicyOutput) ToEndpointAclPolicyOutput() EndpointAclPolicyOutput {
	return o
}

func (o EndpointAclPolicyOutput) ToEndpointAclPolicyOutputWithContext(ctx context.Context) EndpointAclPolicyOutput {
	return o
}

// The description of the acl policy.
func (o EndpointAclPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointAclPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The ip list of the acl policy.
func (o EndpointAclPolicyOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointAclPolicy) pulumi.StringOutput { return v.Entry }).(pulumi.StringOutput)
}

// The registry name.
func (o EndpointAclPolicyOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointAclPolicy) pulumi.StringOutput { return v.Registry }).(pulumi.StringOutput)
}

// The type of the acl policy. Valid values: `Public`.
func (o EndpointAclPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointAclPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type EndpointAclPolicyArrayOutput struct{ *pulumi.OutputState }

func (EndpointAclPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointAclPolicy)(nil)).Elem()
}

func (o EndpointAclPolicyArrayOutput) ToEndpointAclPolicyArrayOutput() EndpointAclPolicyArrayOutput {
	return o
}

func (o EndpointAclPolicyArrayOutput) ToEndpointAclPolicyArrayOutputWithContext(ctx context.Context) EndpointAclPolicyArrayOutput {
	return o
}

func (o EndpointAclPolicyArrayOutput) Index(i pulumi.IntInput) EndpointAclPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointAclPolicy {
		return vs[0].([]*EndpointAclPolicy)[vs[1].(int)]
	}).(EndpointAclPolicyOutput)
}

type EndpointAclPolicyMapOutput struct{ *pulumi.OutputState }

func (EndpointAclPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointAclPolicy)(nil)).Elem()
}

func (o EndpointAclPolicyMapOutput) ToEndpointAclPolicyMapOutput() EndpointAclPolicyMapOutput {
	return o
}

func (o EndpointAclPolicyMapOutput) ToEndpointAclPolicyMapOutputWithContext(ctx context.Context) EndpointAclPolicyMapOutput {
	return o
}

func (o EndpointAclPolicyMapOutput) MapIndex(k pulumi.StringInput) EndpointAclPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointAclPolicy {
		return vs[0].(map[string]*EndpointAclPolicy)[vs[1].(string)]
	}).(EndpointAclPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAclPolicyInput)(nil)).Elem(), &EndpointAclPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAclPolicyArrayInput)(nil)).Elem(), EndpointAclPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAclPolicyMapInput)(nil)).Elem(), EndpointAclPolicyMap{})
	pulumi.RegisterOutputType(EndpointAclPolicyOutput{})
	pulumi.RegisterOutputType(EndpointAclPolicyArrayOutput{})
	pulumi.RegisterOutputType(EndpointAclPolicyMapOutput{})
}
