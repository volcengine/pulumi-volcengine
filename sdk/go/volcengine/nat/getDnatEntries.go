// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of dnat entries
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/eip"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/nat"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooGateway, err := nat.NewGateway(ctx, "fooGateway", &nat.GatewayArgs{
//				VpcId:          fooVpc.ID(),
//				SubnetId:       fooSubnet.ID(),
//				Spec:           pulumi.String("Small"),
//				NatGatewayName: pulumi.String("acc-test-ng"),
//				Description:    pulumi.String("acc-test"),
//				BillingType:    pulumi.String("PostPaid"),
//				ProjectName:    pulumi.String("default"),
//				Tags: nat.GatewayTagArray{
//					&nat.GatewayTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooAddress, err := eip.NewAddress(ctx, "fooAddress", &eip.AddressArgs{
//				Description: pulumi.String("acc-test"),
//				Bandwidth:   pulumi.Int(1),
//				BillingType: pulumi.String("PostPaidByBandwidth"),
//				Isp:         pulumi.String("BGP"),
//			})
//			if err != nil {
//				return err
//			}
//			fooAssociate, err := eip.NewAssociate(ctx, "fooAssociate", &eip.AssociateArgs{
//				AllocationId: fooAddress.ID(),
//				InstanceId:   fooGateway.ID(),
//				InstanceType: pulumi.String("Nat"),
//			})
//			if err != nil {
//				return err
//			}
//			fooDnatEntry, err := nat.NewDnatEntry(ctx, "fooDnatEntry", &nat.DnatEntryArgs{
//				DnatEntryName: pulumi.String("acc-test-dnat-entry"),
//				ExternalIp:    fooAddress.EipAddress,
//				ExternalPort:  pulumi.String("80"),
//				InternalIp:    pulumi.String("172.16.0.10"),
//				InternalPort:  pulumi.String("80"),
//				NatGatewayId:  fooGateway.ID(),
//				Protocol:      pulumi.String("tcp"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				fooAssociate,
//			}))
//			if err != nil {
//				return err
//			}
//			_ = nat.GetDnatEntriesOutput(ctx, nat.GetDnatEntriesOutputArgs{
//				Ids: pulumi.StringArray{
//					fooDnatEntry.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetDnatEntries(ctx *pulumi.Context, args *GetDnatEntriesArgs, opts ...pulumi.InvokeOption) (*GetDnatEntriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDnatEntriesResult
	err := ctx.Invoke("volcengine:nat/getDnatEntries:getDnatEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDnatEntries.
type GetDnatEntriesArgs struct {
	// The name of the DNAT entry.
	DnatEntryName *string `pulumi:"dnatEntryName"`
	// Provides the public IP address for public network access.
	ExternalIp *string `pulumi:"externalIp"`
	// The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
	ExternalPort *string `pulumi:"externalPort"`
	// A list of DNAT entry ids.
	Ids []string `pulumi:"ids"`
	// Provides the internal IP address.
	InternalIp *string `pulumi:"internalIp"`
	// The port or port segment on which the cloud server instance provides services to the public network.
	InternalPort *string `pulumi:"internalPort"`
	// The id of the NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The network protocol.
	Protocol *string `pulumi:"protocol"`
}

// A collection of values returned by getDnatEntries.
type GetDnatEntriesResult struct {
	// List of DNAT entries.
	DnatEntries []GetDnatEntriesDnatEntry `pulumi:"dnatEntries"`
	// The name of the DNAT entry.
	DnatEntryName *string `pulumi:"dnatEntryName"`
	// Provides the public IP address for public network access.
	ExternalIp *string `pulumi:"externalIp"`
	// The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
	ExternalPort *string `pulumi:"externalPort"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// Provides the internal IP address.
	InternalIp *string `pulumi:"internalIp"`
	// The port or port segment on which the cloud server instance provides services to the public network.
	InternalPort *string `pulumi:"internalPort"`
	// The ID of the NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	OutputFile   *string `pulumi:"outputFile"`
	// The network protocol.
	Protocol *string `pulumi:"protocol"`
	// The total count of snat entries query.
	TotalCount int `pulumi:"totalCount"`
}

func GetDnatEntriesOutput(ctx *pulumi.Context, args GetDnatEntriesOutputArgs, opts ...pulumi.InvokeOption) GetDnatEntriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDnatEntriesResult, error) {
			args := v.(GetDnatEntriesArgs)
			r, err := GetDnatEntries(ctx, &args, opts...)
			var s GetDnatEntriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDnatEntriesResultOutput)
}

// A collection of arguments for invoking getDnatEntries.
type GetDnatEntriesOutputArgs struct {
	// The name of the DNAT entry.
	DnatEntryName pulumi.StringPtrInput `pulumi:"dnatEntryName"`
	// Provides the public IP address for public network access.
	ExternalIp pulumi.StringPtrInput `pulumi:"externalIp"`
	// The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
	ExternalPort pulumi.StringPtrInput `pulumi:"externalPort"`
	// A list of DNAT entry ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Provides the internal IP address.
	InternalIp pulumi.StringPtrInput `pulumi:"internalIp"`
	// The port or port segment on which the cloud server instance provides services to the public network.
	InternalPort pulumi.StringPtrInput `pulumi:"internalPort"`
	// The id of the NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The network protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (GetDnatEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnatEntriesArgs)(nil)).Elem()
}

// A collection of values returned by getDnatEntries.
type GetDnatEntriesResultOutput struct{ *pulumi.OutputState }

func (GetDnatEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnatEntriesResult)(nil)).Elem()
}

func (o GetDnatEntriesResultOutput) ToGetDnatEntriesResultOutput() GetDnatEntriesResultOutput {
	return o
}

func (o GetDnatEntriesResultOutput) ToGetDnatEntriesResultOutputWithContext(ctx context.Context) GetDnatEntriesResultOutput {
	return o
}

// List of DNAT entries.
func (o GetDnatEntriesResultOutput) DnatEntries() GetDnatEntriesDnatEntryArrayOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) []GetDnatEntriesDnatEntry { return v.DnatEntries }).(GetDnatEntriesDnatEntryArrayOutput)
}

// The name of the DNAT entry.
func (o GetDnatEntriesResultOutput) DnatEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) *string { return v.DnatEntryName }).(pulumi.StringPtrOutput)
}

// Provides the public IP address for public network access.
func (o GetDnatEntriesResultOutput) ExternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) *string { return v.ExternalIp }).(pulumi.StringPtrOutput)
}

// The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
func (o GetDnatEntriesResultOutput) ExternalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) *string { return v.ExternalPort }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDnatEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDnatEntriesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// Provides the internal IP address.
func (o GetDnatEntriesResultOutput) InternalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) *string { return v.InternalIp }).(pulumi.StringPtrOutput)
}

// The port or port segment on which the cloud server instance provides services to the public network.
func (o GetDnatEntriesResultOutput) InternalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) *string { return v.InternalPort }).(pulumi.StringPtrOutput)
}

// The ID of the NAT gateway.
func (o GetDnatEntriesResultOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

func (o GetDnatEntriesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The network protocol.
func (o GetDnatEntriesResultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The total count of snat entries query.
func (o GetDnatEntriesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDnatEntriesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDnatEntriesResultOutput{})
}
