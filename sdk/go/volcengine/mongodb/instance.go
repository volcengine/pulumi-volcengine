// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/mongodb"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			// create vpc
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//				DnsServers: pulumi.StringArray{
//					pulumi.String("8.8.8.8"),
//					pulumi.String("114.114.114.114"),
//				},
//				ProjectName: pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			// create subnet
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			// create mongodb ReplicaSet instance
//			_, err = mongodb.NewInstance(ctx, "foo-replica", &mongodb.InstanceArgs{
//				ZoneIds: pulumi.StringArray{
//					pulumi.String(fooZones.Zones[0].Id),
//				},
//				DbEngineVersion:      pulumi.String("MongoDB_4_0"),
//				InstanceType:         pulumi.String("ReplicaSet"),
//				NodeSpec:             pulumi.String("mongo.2c4g"),
//				StorageSpaceGb:       pulumi.Int(100),
//				SubnetId:             fooSubnet.ID(),
//				InstanceName:         pulumi.String("acc-test-mongodb-replica"),
//				ChargeType:           pulumi.String("PostPaid"),
//				SuperAccountPassword: pulumi.String("93f0cb0614Aab12"),
//				ProjectName:          pulumi.String("default"),
//				Tags: mongodb.InstanceTagArray{
//					&mongodb.InstanceTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//				NodeAvailabilityZones: mongodb.InstanceNodeAvailabilityZoneArray{
//					&mongodb.InstanceNodeAvailabilityZoneArgs{
//						ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//						NodeNumber: pulumi.Int(2),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// create mongodb ShardedCluster instance
//			_, err = mongodb.NewInstance(ctx, "foo-sharded", &mongodb.InstanceArgs{
//				ZoneIds: pulumi.StringArray{
//					pulumi.String(fooZones.Zones[0].Id),
//				},
//				DbEngineVersion:            pulumi.String("MongoDB_4_0"),
//				InstanceType:               pulumi.String("ShardedCluster"),
//				NodeSpec:                   pulumi.String("mongo.shard.2c4g"),
//				MongosNodeSpec:             pulumi.String("mongo.mongos.2c4g"),
//				MongosNodeNumber:           pulumi.Int(3),
//				ShardNumber:                pulumi.Int(3),
//				ConfigServerNodeSpec:       pulumi.String("mongo.config.2c4g"),
//				ConfigServerStorageSpaceGb: pulumi.Int(30),
//				StorageSpaceGb:             pulumi.Int(100),
//				SubnetId:                   fooSubnet.ID(),
//				InstanceName:               pulumi.String("acc-test-mongodb-sharded"),
//				ChargeType:                 pulumi.String("PostPaid"),
//				SuperAccountPassword:       pulumi.String("93f0cb0614Aab12"),
//				ProjectName:                pulumi.String("default"),
//				Tags: mongodb.InstanceTagArray{
//					&mongodb.InstanceTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//				NodeAvailabilityZones: mongodb.InstanceNodeAvailabilityZoneArray{
//					&mongodb.InstanceNodeAvailabilityZoneArgs{
//						ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//						NodeNumber: pulumi.Int(2),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// mongodb instance can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:mongodb/instance:Instance default mongo-replica-e405f8e2****
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Whether to enable automatic renewal. This parameter is required when the `ChargeType` is `Prepaid`.
	AutoRenew pulumi.BoolOutput `pulumi:"autoRenew"`
	// The charge type of instance, valid value contains `Prepaid` or `PostPaid`. Default is `PostPaid`.
	ChargeType pulumi.StringOutput `pulumi:"chargeType"`
	// The config server node spec of shard cluster. Default is `mongo.config.1c2g`. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerNodeSpec pulumi.StringOutput `pulumi:"configServerNodeSpec"`
	// The config server storage space of shard cluster, Unit: GiB. Default is 20. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerStorageSpaceGb pulumi.IntOutput `pulumi:"configServerStorageSpaceGb"`
	// The config servers id of the ShardedCluster instance.
	ConfigServersId pulumi.StringOutput `pulumi:"configServersId"`
	// The version of db engine, valid value contains `MongoDB_4_0`, `MongoDB_4_2`, `MongoDB_4_4`, `MongoDB_5_0`, `MongoDB_6_0`.
	DbEngineVersion pulumi.StringOutput `pulumi:"dbEngineVersion"`
	// The instance name.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The type of instance, the valid value contains `ReplicaSet` or `ShardedCluster`. Default is `ReplicaSet`.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The mongos information of the ShardedCluster instance.
	Mongos InstanceMongoArrayOutput `pulumi:"mongos"`
	// The mongos id of the ShardedCluster instance.
	MongosId pulumi.StringOutput `pulumi:"mongosId"`
	// The mongos node number of shard cluster, value range is `2~23`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeNumber pulumi.IntPtrOutput `pulumi:"mongosNodeNumber"`
	// The mongos node spec of shard cluster, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeSpec pulumi.StringPtrOutput `pulumi:"mongosNodeSpec"`
	// The readonly node of the instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	NodeAvailabilityZones InstanceNodeAvailabilityZoneArrayOutput `pulumi:"nodeAvailabilityZones"`
	// The spec of node. When the instanceType is ReplicaSet, this parameter represents the computing node specification of the replica set instance. When the instanceType is ShardedCluster, this parameter represents the specification of the Shard node.
	NodeSpec pulumi.StringOutput `pulumi:"nodeSpec"`
	// The instance purchase duration, the value range is `1~3` when `PeriodUtil` is `Year`, the value range is `1~9` when `PeriodUtil` is `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	Period pulumi.IntOutput `pulumi:"period"`
	// The period unit, valid value contains `Year` or `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	PeriodUnit pulumi.StringOutput `pulumi:"periodUnit"`
	// The private endpoint address of instance.
	PrivateEndpoint pulumi.StringOutput `pulumi:"privateEndpoint"`
	// The project name to which the instance belongs.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// The number of readonly node in instance.
	ReadOnlyNodeNumber pulumi.IntOutput `pulumi:"readOnlyNodeNumber"`
	// The number of shards in shard cluster, value range is `2~32`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	ShardNumber pulumi.IntPtrOutput `pulumi:"shardNumber"`
	// The shards information of the ShardedCluster instance.
	Shards InstanceShardArrayOutput `pulumi:"shards"`
	// The total storage space of a replica set instance, or the storage space of a single shard in a sharded cluster. Unit: GiB.
	StorageSpaceGb pulumi.IntOutput `pulumi:"storageSpaceGb"`
	// The subnet id of instance.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The password of database account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SuperAccountPassword pulumi.StringPtrOutput `pulumi:"superAccountPassword"`
	// Tags.
	Tags InstanceTagArrayOutput `pulumi:"tags"`
	// The vpc ID.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones. The zone ID of instance.
	//
	// Deprecated: This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
	// The list of zone ids. If you need to deploy multiple availability zones for a newly created instance, you can specify three availability zone IDs at the same time. By default, the first available zone passed in is the primary available zone, and the two available zones passed in afterwards are the backup available zones.
	ZoneIds pulumi.StringArrayOutput `pulumi:"zoneIds"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NodeSpec == nil {
		return nil, errors.New("invalid value for required argument 'NodeSpec'")
	}
	if args.StorageSpaceGb == nil {
		return nil, errors.New("invalid value for required argument 'StorageSpaceGb'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.SuperAccountPassword != nil {
		args.SuperAccountPassword = pulumi.ToSecret(args.SuperAccountPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"superAccountPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("volcengine:mongodb/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("volcengine:mongodb/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Whether to enable automatic renewal. This parameter is required when the `ChargeType` is `Prepaid`.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The charge type of instance, valid value contains `Prepaid` or `PostPaid`. Default is `PostPaid`.
	ChargeType *string `pulumi:"chargeType"`
	// The config server node spec of shard cluster. Default is `mongo.config.1c2g`. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerNodeSpec *string `pulumi:"configServerNodeSpec"`
	// The config server storage space of shard cluster, Unit: GiB. Default is 20. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerStorageSpaceGb *int `pulumi:"configServerStorageSpaceGb"`
	// The config servers id of the ShardedCluster instance.
	ConfigServersId *string `pulumi:"configServersId"`
	// The version of db engine, valid value contains `MongoDB_4_0`, `MongoDB_4_2`, `MongoDB_4_4`, `MongoDB_5_0`, `MongoDB_6_0`.
	DbEngineVersion *string `pulumi:"dbEngineVersion"`
	// The instance name.
	InstanceName *string `pulumi:"instanceName"`
	// The type of instance, the valid value contains `ReplicaSet` or `ShardedCluster`. Default is `ReplicaSet`.
	InstanceType *string `pulumi:"instanceType"`
	// The mongos information of the ShardedCluster instance.
	Mongos []InstanceMongo `pulumi:"mongos"`
	// The mongos id of the ShardedCluster instance.
	MongosId *string `pulumi:"mongosId"`
	// The mongos node number of shard cluster, value range is `2~23`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeNumber *int `pulumi:"mongosNodeNumber"`
	// The mongos node spec of shard cluster, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeSpec *string `pulumi:"mongosNodeSpec"`
	// The readonly node of the instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	NodeAvailabilityZones []InstanceNodeAvailabilityZone `pulumi:"nodeAvailabilityZones"`
	// The spec of node. When the instanceType is ReplicaSet, this parameter represents the computing node specification of the replica set instance. When the instanceType is ShardedCluster, this parameter represents the specification of the Shard node.
	NodeSpec *string `pulumi:"nodeSpec"`
	// The instance purchase duration, the value range is `1~3` when `PeriodUtil` is `Year`, the value range is `1~9` when `PeriodUtil` is `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	Period *int `pulumi:"period"`
	// The period unit, valid value contains `Year` or `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The private endpoint address of instance.
	PrivateEndpoint *string `pulumi:"privateEndpoint"`
	// The project name to which the instance belongs.
	ProjectName *string `pulumi:"projectName"`
	// The number of readonly node in instance.
	ReadOnlyNodeNumber *int `pulumi:"readOnlyNodeNumber"`
	// The number of shards in shard cluster, value range is `2~32`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	ShardNumber *int `pulumi:"shardNumber"`
	// The shards information of the ShardedCluster instance.
	Shards []InstanceShard `pulumi:"shards"`
	// The total storage space of a replica set instance, or the storage space of a single shard in a sharded cluster. Unit: GiB.
	StorageSpaceGb *int `pulumi:"storageSpaceGb"`
	// The subnet id of instance.
	SubnetId *string `pulumi:"subnetId"`
	// The password of database account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SuperAccountPassword *string `pulumi:"superAccountPassword"`
	// Tags.
	Tags []InstanceTag `pulumi:"tags"`
	// The vpc ID.
	VpcId *string `pulumi:"vpcId"`
	// This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones. The zone ID of instance.
	//
	// Deprecated: This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones.
	ZoneId *string `pulumi:"zoneId"`
	// The list of zone ids. If you need to deploy multiple availability zones for a newly created instance, you can specify three availability zone IDs at the same time. By default, the first available zone passed in is the primary available zone, and the two available zones passed in afterwards are the backup available zones.
	ZoneIds []string `pulumi:"zoneIds"`
}

type InstanceState struct {
	// Whether to enable automatic renewal. This parameter is required when the `ChargeType` is `Prepaid`.
	AutoRenew pulumi.BoolPtrInput
	// The charge type of instance, valid value contains `Prepaid` or `PostPaid`. Default is `PostPaid`.
	ChargeType pulumi.StringPtrInput
	// The config server node spec of shard cluster. Default is `mongo.config.1c2g`. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerNodeSpec pulumi.StringPtrInput
	// The config server storage space of shard cluster, Unit: GiB. Default is 20. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerStorageSpaceGb pulumi.IntPtrInput
	// The config servers id of the ShardedCluster instance.
	ConfigServersId pulumi.StringPtrInput
	// The version of db engine, valid value contains `MongoDB_4_0`, `MongoDB_4_2`, `MongoDB_4_4`, `MongoDB_5_0`, `MongoDB_6_0`.
	DbEngineVersion pulumi.StringPtrInput
	// The instance name.
	InstanceName pulumi.StringPtrInput
	// The type of instance, the valid value contains `ReplicaSet` or `ShardedCluster`. Default is `ReplicaSet`.
	InstanceType pulumi.StringPtrInput
	// The mongos information of the ShardedCluster instance.
	Mongos InstanceMongoArrayInput
	// The mongos id of the ShardedCluster instance.
	MongosId pulumi.StringPtrInput
	// The mongos node number of shard cluster, value range is `2~23`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeNumber pulumi.IntPtrInput
	// The mongos node spec of shard cluster, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeSpec pulumi.StringPtrInput
	// The readonly node of the instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	NodeAvailabilityZones InstanceNodeAvailabilityZoneArrayInput
	// The spec of node. When the instanceType is ReplicaSet, this parameter represents the computing node specification of the replica set instance. When the instanceType is ShardedCluster, this parameter represents the specification of the Shard node.
	NodeSpec pulumi.StringPtrInput
	// The instance purchase duration, the value range is `1~3` when `PeriodUtil` is `Year`, the value range is `1~9` when `PeriodUtil` is `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	Period pulumi.IntPtrInput
	// The period unit, valid value contains `Year` or `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	PeriodUnit pulumi.StringPtrInput
	// The private endpoint address of instance.
	PrivateEndpoint pulumi.StringPtrInput
	// The project name to which the instance belongs.
	ProjectName pulumi.StringPtrInput
	// The number of readonly node in instance.
	ReadOnlyNodeNumber pulumi.IntPtrInput
	// The number of shards in shard cluster, value range is `2~32`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	ShardNumber pulumi.IntPtrInput
	// The shards information of the ShardedCluster instance.
	Shards InstanceShardArrayInput
	// The total storage space of a replica set instance, or the storage space of a single shard in a sharded cluster. Unit: GiB.
	StorageSpaceGb pulumi.IntPtrInput
	// The subnet id of instance.
	SubnetId pulumi.StringPtrInput
	// The password of database account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SuperAccountPassword pulumi.StringPtrInput
	// Tags.
	Tags InstanceTagArrayInput
	// The vpc ID.
	VpcId pulumi.StringPtrInput
	// This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones. The zone ID of instance.
	//
	// Deprecated: This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones.
	ZoneId pulumi.StringPtrInput
	// The list of zone ids. If you need to deploy multiple availability zones for a newly created instance, you can specify three availability zone IDs at the same time. By default, the first available zone passed in is the primary available zone, and the two available zones passed in afterwards are the backup available zones.
	ZoneIds pulumi.StringArrayInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Whether to enable automatic renewal. This parameter is required when the `ChargeType` is `Prepaid`.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The charge type of instance, valid value contains `Prepaid` or `PostPaid`. Default is `PostPaid`.
	ChargeType *string `pulumi:"chargeType"`
	// The config server node spec of shard cluster. Default is `mongo.config.1c2g`. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerNodeSpec *string `pulumi:"configServerNodeSpec"`
	// The config server storage space of shard cluster, Unit: GiB. Default is 20. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerStorageSpaceGb *int `pulumi:"configServerStorageSpaceGb"`
	// The version of db engine, valid value contains `MongoDB_4_0`, `MongoDB_4_2`, `MongoDB_4_4`, `MongoDB_5_0`, `MongoDB_6_0`.
	DbEngineVersion *string `pulumi:"dbEngineVersion"`
	// The instance name.
	InstanceName *string `pulumi:"instanceName"`
	// The type of instance, the valid value contains `ReplicaSet` or `ShardedCluster`. Default is `ReplicaSet`.
	InstanceType *string `pulumi:"instanceType"`
	// The mongos node number of shard cluster, value range is `2~23`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeNumber *int `pulumi:"mongosNodeNumber"`
	// The mongos node spec of shard cluster, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeSpec *string `pulumi:"mongosNodeSpec"`
	// The readonly node of the instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	NodeAvailabilityZones []InstanceNodeAvailabilityZone `pulumi:"nodeAvailabilityZones"`
	// The spec of node. When the instanceType is ReplicaSet, this parameter represents the computing node specification of the replica set instance. When the instanceType is ShardedCluster, this parameter represents the specification of the Shard node.
	NodeSpec string `pulumi:"nodeSpec"`
	// The instance purchase duration, the value range is `1~3` when `PeriodUtil` is `Year`, the value range is `1~9` when `PeriodUtil` is `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	Period *int `pulumi:"period"`
	// The period unit, valid value contains `Year` or `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	PeriodUnit *string `pulumi:"periodUnit"`
	// The project name to which the instance belongs.
	ProjectName *string `pulumi:"projectName"`
	// The number of shards in shard cluster, value range is `2~32`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	ShardNumber *int `pulumi:"shardNumber"`
	// The total storage space of a replica set instance, or the storage space of a single shard in a sharded cluster. Unit: GiB.
	StorageSpaceGb int `pulumi:"storageSpaceGb"`
	// The subnet id of instance.
	SubnetId string `pulumi:"subnetId"`
	// The password of database account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SuperAccountPassword *string `pulumi:"superAccountPassword"`
	// Tags.
	Tags []InstanceTag `pulumi:"tags"`
	// The vpc ID.
	VpcId *string `pulumi:"vpcId"`
	// This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones. The zone ID of instance.
	//
	// Deprecated: This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones.
	ZoneId *string `pulumi:"zoneId"`
	// The list of zone ids. If you need to deploy multiple availability zones for a newly created instance, you can specify three availability zone IDs at the same time. By default, the first available zone passed in is the primary available zone, and the two available zones passed in afterwards are the backup available zones.
	ZoneIds []string `pulumi:"zoneIds"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Whether to enable automatic renewal. This parameter is required when the `ChargeType` is `Prepaid`.
	AutoRenew pulumi.BoolPtrInput
	// The charge type of instance, valid value contains `Prepaid` or `PostPaid`. Default is `PostPaid`.
	ChargeType pulumi.StringPtrInput
	// The config server node spec of shard cluster. Default is `mongo.config.1c2g`. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerNodeSpec pulumi.StringPtrInput
	// The config server storage space of shard cluster, Unit: GiB. Default is 20. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ConfigServerStorageSpaceGb pulumi.IntPtrInput
	// The version of db engine, valid value contains `MongoDB_4_0`, `MongoDB_4_2`, `MongoDB_4_4`, `MongoDB_5_0`, `MongoDB_6_0`.
	DbEngineVersion pulumi.StringPtrInput
	// The instance name.
	InstanceName pulumi.StringPtrInput
	// The type of instance, the valid value contains `ReplicaSet` or `ShardedCluster`. Default is `ReplicaSet`.
	InstanceType pulumi.StringPtrInput
	// The mongos node number of shard cluster, value range is `2~23`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeNumber pulumi.IntPtrInput
	// The mongos node spec of shard cluster, this parameter is required when the `InstanceType` is `ShardedCluster`.
	MongosNodeSpec pulumi.StringPtrInput
	// The readonly node of the instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	NodeAvailabilityZones InstanceNodeAvailabilityZoneArrayInput
	// The spec of node. When the instanceType is ReplicaSet, this parameter represents the computing node specification of the replica set instance. When the instanceType is ShardedCluster, this parameter represents the specification of the Shard node.
	NodeSpec pulumi.StringInput
	// The instance purchase duration, the value range is `1~3` when `PeriodUtil` is `Year`, the value range is `1~9` when `PeriodUtil` is `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	Period pulumi.IntPtrInput
	// The period unit, valid value contains `Year` or `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
	PeriodUnit pulumi.StringPtrInput
	// The project name to which the instance belongs.
	ProjectName pulumi.StringPtrInput
	// The number of shards in shard cluster, value range is `2~32`, this parameter is required when the `InstanceType` is `ShardedCluster`.
	ShardNumber pulumi.IntPtrInput
	// The total storage space of a replica set instance, or the storage space of a single shard in a sharded cluster. Unit: GiB.
	StorageSpaceGb pulumi.IntInput
	// The subnet id of instance.
	SubnetId pulumi.StringInput
	// The password of database account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SuperAccountPassword pulumi.StringPtrInput
	// Tags.
	Tags InstanceTagArrayInput
	// The vpc ID.
	VpcId pulumi.StringPtrInput
	// This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones. The zone ID of instance.
	//
	// Deprecated: This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones.
	ZoneId pulumi.StringPtrInput
	// The list of zone ids. If you need to deploy multiple availability zones for a newly created instance, you can specify three availability zone IDs at the same time. By default, the first available zone passed in is the primary available zone, and the two available zones passed in afterwards are the backup available zones.
	ZoneIds pulumi.StringArrayInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Whether to enable automatic renewal. This parameter is required when the `ChargeType` is `Prepaid`.
func (o InstanceOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.AutoRenew }).(pulumi.BoolOutput)
}

// The charge type of instance, valid value contains `Prepaid` or `PostPaid`. Default is `PostPaid`.
func (o InstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ChargeType }).(pulumi.StringOutput)
}

// The config server node spec of shard cluster. Default is `mongo.config.1c2g`. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) ConfigServerNodeSpec() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ConfigServerNodeSpec }).(pulumi.StringOutput)
}

// The config server storage space of shard cluster, Unit: GiB. Default is 20. This parameter is only effective when the `InstanceType` is `ShardedCluster`.
// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) ConfigServerStorageSpaceGb() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.ConfigServerStorageSpaceGb }).(pulumi.IntOutput)
}

// The config servers id of the ShardedCluster instance.
func (o InstanceOutput) ConfigServersId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ConfigServersId }).(pulumi.StringOutput)
}

// The version of db engine, valid value contains `MongoDB_4_0`, `MongoDB_4_2`, `MongoDB_4_4`, `MongoDB_5_0`, `MongoDB_6_0`.
func (o InstanceOutput) DbEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DbEngineVersion }).(pulumi.StringOutput)
}

// The instance name.
func (o InstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// The type of instance, the valid value contains `ReplicaSet` or `ShardedCluster`. Default is `ReplicaSet`.
func (o InstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The mongos information of the ShardedCluster instance.
func (o InstanceOutput) Mongos() InstanceMongoArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceMongoArrayOutput { return v.Mongos }).(InstanceMongoArrayOutput)
}

// The mongos id of the ShardedCluster instance.
func (o InstanceOutput) MongosId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MongosId }).(pulumi.StringOutput)
}

// The mongos node number of shard cluster, value range is `2~23`, this parameter is required when the `InstanceType` is `ShardedCluster`.
func (o InstanceOutput) MongosNodeNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.MongosNodeNumber }).(pulumi.IntPtrOutput)
}

// The mongos node spec of shard cluster, this parameter is required when the `InstanceType` is `ShardedCluster`.
func (o InstanceOutput) MongosNodeSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.MongosNodeSpec }).(pulumi.StringPtrOutput)
}

// The readonly node of the instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) NodeAvailabilityZones() InstanceNodeAvailabilityZoneArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceNodeAvailabilityZoneArrayOutput { return v.NodeAvailabilityZones }).(InstanceNodeAvailabilityZoneArrayOutput)
}

// The spec of node. When the instanceType is ReplicaSet, this parameter represents the computing node specification of the replica set instance. When the instanceType is ShardedCluster, this parameter represents the specification of the Shard node.
func (o InstanceOutput) NodeSpec() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.NodeSpec }).(pulumi.StringOutput)
}

// The instance purchase duration, the value range is `1~3` when `PeriodUtil` is `Year`, the value range is `1~9` when `PeriodUtil` is `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
func (o InstanceOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.Period }).(pulumi.IntOutput)
}

// The period unit, valid value contains `Year` or `Month`. This parameter is required when the `ChargeType` is `Prepaid`.
func (o InstanceOutput) PeriodUnit() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PeriodUnit }).(pulumi.StringOutput)
}

// The private endpoint address of instance.
func (o InstanceOutput) PrivateEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PrivateEndpoint }).(pulumi.StringOutput)
}

// The project name to which the instance belongs.
func (o InstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// The number of readonly node in instance.
func (o InstanceOutput) ReadOnlyNodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.ReadOnlyNodeNumber }).(pulumi.IntOutput)
}

// The number of shards in shard cluster, value range is `2~32`, this parameter is required when the `InstanceType` is `ShardedCluster`.
func (o InstanceOutput) ShardNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.ShardNumber }).(pulumi.IntPtrOutput)
}

// The shards information of the ShardedCluster instance.
func (o InstanceOutput) Shards() InstanceShardArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceShardArrayOutput { return v.Shards }).(InstanceShardArrayOutput)
}

// The total storage space of a replica set instance, or the storage space of a single shard in a sharded cluster. Unit: GiB.
func (o InstanceOutput) StorageSpaceGb() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.StorageSpaceGb }).(pulumi.IntOutput)
}

// The subnet id of instance.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// The password of database account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) SuperAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SuperAccountPassword }).(pulumi.StringPtrOutput)
}

// Tags.
func (o InstanceOutput) Tags() InstanceTagArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceTagArrayOutput { return v.Tags }).(InstanceTagArrayOutput)
}

// The vpc ID.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones. The zone ID of instance.
//
// Deprecated: This field has been deprecated after version-0.0.156. Please use `zoneIds` to deploy multiple availability zones.
func (o InstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

// The list of zone ids. If you need to deploy multiple availability zones for a newly created instance, you can specify three availability zone IDs at the same time. By default, the first available zone passed in is the primary available zone, and the two available zones passed in afterwards are the backup available zones.
func (o InstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
