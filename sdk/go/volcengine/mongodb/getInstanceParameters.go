// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of mongodb instance parameters
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/mongodb"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooInstance, err := mongodb.NewInstance(ctx, "fooInstance", &mongodb.InstanceArgs{
//				DbEngineVersion:      pulumi.String("MongoDB_4_0"),
//				InstanceType:         pulumi.String("ReplicaSet"),
//				SuperAccountPassword: pulumi.String("@acc-test-123"),
//				NodeSpec:             pulumi.String("mongo.2c4g"),
//				MongosNodeSpec:       pulumi.String("mongo.mongos.2c4g"),
//				InstanceName:         pulumi.String("acc-test-mongo-replica"),
//				ChargeType:           pulumi.String("PostPaid"),
//				ProjectName:          pulumi.String("default"),
//				MongosNodeNumber:     pulumi.Int(32),
//				ShardNumber:          pulumi.Int(3),
//				StorageSpaceGb:       pulumi.Int(20),
//				SubnetId:             fooSubnet.ID(),
//				ZoneId:               pulumi.String(fooZones.Zones[0].Id),
//				Tags: mongodb.InstanceTagArray{
//					&mongodb.InstanceTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mongodb.NewInstanceParameter(ctx, "fooInstanceParameter", &mongodb.InstanceParameterArgs{
//				InstanceId:     fooInstance.ID(),
//				ParameterName:  pulumi.String("cursorTimeoutMillis"),
//				ParameterRole:  pulumi.String("Node"),
//				ParameterValue: pulumi.String("600111"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = mongodb.GetInstanceParametersOutput(ctx, mongodb.GetInstanceParametersOutputArgs{
//				InstanceId:     fooInstance.ID(),
//				ParameterNames: pulumi.String("cursorTimeoutMillis"),
//				ParameterRole:  pulumi.String("Node"),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetInstanceParameters(ctx *pulumi.Context, args *GetInstanceParametersArgs, opts ...pulumi.InvokeOption) (*GetInstanceParametersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstanceParametersResult
	err := ctx.Invoke("volcengine:mongodb/getInstanceParameters:getInstanceParameters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceParameters.
type GetInstanceParametersArgs struct {
	// The instance ID to query.
	InstanceId string `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The parameter names, support fuzzy query, case insensitive.
	ParameterNames *string `pulumi:"parameterNames"`
	// The node type of instance parameter, valid value contains `Node`, `Shard`, `ConfigServer`, `Mongos`.
	ParameterRole *string `pulumi:"parameterRole"`
}

// A collection of values returned by getInstanceParameters.
type GetInstanceParametersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The list of parameters.
	InstanceParameters []GetInstanceParametersInstanceParameter `pulumi:"instanceParameters"`
	OutputFile         *string                                  `pulumi:"outputFile"`
	ParameterNames     *string                                  `pulumi:"parameterNames"`
	// The node type to which the parameter belongs.
	ParameterRole *string `pulumi:"parameterRole"`
	// (**Deprecated**) This field has been deprecated and it is recommended to use instance_parameters. The collection of parameter query.
	//
	// Deprecated: This field has been deprecated and it is recommended to use instance_parameters.
	Parameters []GetInstanceParametersParameter `pulumi:"parameters"`
	// The total count of mongodb instance parameter query.
	TotalCount int `pulumi:"totalCount"`
}

func GetInstanceParametersOutput(ctx *pulumi.Context, args GetInstanceParametersOutputArgs, opts ...pulumi.InvokeOption) GetInstanceParametersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceParametersResult, error) {
			args := v.(GetInstanceParametersArgs)
			r, err := GetInstanceParameters(ctx, &args, opts...)
			var s GetInstanceParametersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceParametersResultOutput)
}

// A collection of arguments for invoking getInstanceParameters.
type GetInstanceParametersOutputArgs struct {
	// The instance ID to query.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The parameter names, support fuzzy query, case insensitive.
	ParameterNames pulumi.StringPtrInput `pulumi:"parameterNames"`
	// The node type of instance parameter, valid value contains `Node`, `Shard`, `ConfigServer`, `Mongos`.
	ParameterRole pulumi.StringPtrInput `pulumi:"parameterRole"`
}

func (GetInstanceParametersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParametersArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceParameters.
type GetInstanceParametersResultOutput struct{ *pulumi.OutputState }

func (GetInstanceParametersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceParametersResult)(nil)).Elem()
}

func (o GetInstanceParametersResultOutput) ToGetInstanceParametersResultOutput() GetInstanceParametersResultOutput {
	return o
}

func (o GetInstanceParametersResultOutput) ToGetInstanceParametersResultOutputWithContext(ctx context.Context) GetInstanceParametersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceParametersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParametersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The instance ID.
func (o GetInstanceParametersResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceParametersResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The list of parameters.
func (o GetInstanceParametersResultOutput) InstanceParameters() GetInstanceParametersInstanceParameterArrayOutput {
	return o.ApplyT(func(v GetInstanceParametersResult) []GetInstanceParametersInstanceParameter {
		return v.InstanceParameters
	}).(GetInstanceParametersInstanceParameterArrayOutput)
}

func (o GetInstanceParametersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceParametersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetInstanceParametersResultOutput) ParameterNames() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceParametersResult) *string { return v.ParameterNames }).(pulumi.StringPtrOutput)
}

// The node type to which the parameter belongs.
func (o GetInstanceParametersResultOutput) ParameterRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceParametersResult) *string { return v.ParameterRole }).(pulumi.StringPtrOutput)
}

// (**Deprecated**) This field has been deprecated and it is recommended to use instance_parameters. The collection of parameter query.
//
// Deprecated: This field has been deprecated and it is recommended to use instance_parameters.
func (o GetInstanceParametersResultOutput) Parameters() GetInstanceParametersParameterArrayOutput {
	return o.ApplyT(func(v GetInstanceParametersResult) []GetInstanceParametersParameter { return v.Parameters }).(GetInstanceParametersParameterArrayOutput)
}

// The total count of mongodb instance parameter query.
func (o GetInstanceParametersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceParametersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceParametersResultOutput{})
}
