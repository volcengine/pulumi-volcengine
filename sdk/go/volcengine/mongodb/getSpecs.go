// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of mongodb specs
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/mongodb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := mongodb.GetSpecs(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSpecs(ctx *pulumi.Context, args *GetSpecsArgs, opts ...pulumi.InvokeOption) (*GetSpecsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSpecsResult
	err := ctx.Invoke("volcengine:mongodb/getSpecs:getSpecs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSpecs.
type GetSpecsArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The region ID to query.
	RegionId *string `pulumi:"regionId"`
}

// A collection of values returned by getSpecs.
type GetSpecsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	RegionId   *string `pulumi:"regionId"`
	// A list of supported node specification information for MongoDB instances.
	Specs GetSpecsSpecs `pulumi:"specs"`
	// The total count of region query.
	TotalCount int `pulumi:"totalCount"`
}

func GetSpecsOutput(ctx *pulumi.Context, args GetSpecsOutputArgs, opts ...pulumi.InvokeOption) GetSpecsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSpecsResult, error) {
			args := v.(GetSpecsArgs)
			r, err := GetSpecs(ctx, &args, opts...)
			var s GetSpecsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSpecsResultOutput)
}

// A collection of arguments for invoking getSpecs.
type GetSpecsOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The region ID to query.
	RegionId pulumi.StringPtrInput `pulumi:"regionId"`
}

func (GetSpecsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpecsArgs)(nil)).Elem()
}

// A collection of values returned by getSpecs.
type GetSpecsResultOutput struct{ *pulumi.OutputState }

func (GetSpecsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpecsResult)(nil)).Elem()
}

func (o GetSpecsResultOutput) ToGetSpecsResultOutput() GetSpecsResultOutput {
	return o
}

func (o GetSpecsResultOutput) ToGetSpecsResultOutputWithContext(ctx context.Context) GetSpecsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSpecsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpecsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSpecsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSpecsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSpecsResultOutput) RegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSpecsResult) *string { return v.RegionId }).(pulumi.StringPtrOutput)
}

// A list of supported node specification information for MongoDB instances.
func (o GetSpecsResultOutput) Specs() GetSpecsSpecsOutput {
	return o.ApplyT(func(v GetSpecsResult) GetSpecsSpecs { return v.Specs }).(GetSpecsSpecsOutput)
}

// The total count of region query.
func (o GetSpecsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSpecsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSpecsResultOutput{})
}
