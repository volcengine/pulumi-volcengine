// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage waf custom bot
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := waf.NewCustomBot(ctx, "foo", &waf.CustomBotArgs{
//				Accurate: &waf.CustomBotAccurateArgs{
//					AccurateRules: waf.CustomBotAccurateAccurateRuleArray{
//						&waf.CustomBotAccurateAccurateRuleArgs{
//							HttpObj:     pulumi.String("request.uri"),
//							ObjType:     pulumi.Int(1),
//							Opretar:     pulumi.Int(2),
//							Property:    pulumi.Int(0),
//							ValueString: pulumi.String("tf"),
//						},
//						&waf.CustomBotAccurateAccurateRuleArgs{
//							HttpObj:     pulumi.String("request.schema"),
//							ObjType:     pulumi.Int(0),
//							Opretar:     pulumi.Int(2),
//							Property:    pulumi.Int(0),
//							ValueString: pulumi.String("tf-2"),
//						},
//					},
//					Logic: pulumi.Int(2),
//				},
//				Action:      pulumi.String("observe"),
//				BotType:     pulumi.String("tf-test"),
//				Description: pulumi.String("tf-test"),
//				Enable:      pulumi.Int(1),
//				Host:        pulumi.String("www.tf-test.com"),
//				ProjectName: pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WafCustomBot can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:waf/customBot:CustomBot default resource_id
// ```
type CustomBot struct {
	pulumi.CustomResourceState

	// Advanced conditions.
	Accurate CustomBotAccurateOutput `pulumi:"accurate"`
	// The execution action of the Bot.
	Action pulumi.StringOutput `pulumi:"action"`
	// Whether to set advanced conditions.
	Advanced pulumi.IntOutput `pulumi:"advanced"`
	// bot name.
	BotType pulumi.StringOutput `pulumi:"botType"`
	// The description of bot.
	Description pulumi.StringOutput `pulumi:"description"`
	// Whether to enable bot.
	Enable pulumi.IntOutput `pulumi:"enable"`
	// Domain name information.
	Host pulumi.StringOutput `pulumi:"host"`
	// The Name of the affiliated project resource.
	ProjectName pulumi.StringPtrOutput `pulumi:"projectName"`
	// Rule unique identifier.
	RuleTag pulumi.StringOutput `pulumi:"ruleTag"`
	// The update time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCustomBot registers a new resource with the given unique name, arguments, and options.
func NewCustomBot(ctx *pulumi.Context,
	name string, args *CustomBotArgs, opts ...pulumi.ResourceOption) (*CustomBot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Accurate == nil {
		return nil, errors.New("invalid value for required argument 'Accurate'")
	}
	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.BotType == nil {
		return nil, errors.New("invalid value for required argument 'BotType'")
	}
	if args.Enable == nil {
		return nil, errors.New("invalid value for required argument 'Enable'")
	}
	if args.Host == nil {
		return nil, errors.New("invalid value for required argument 'Host'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomBot
	err := ctx.RegisterResource("volcengine:waf/customBot:CustomBot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomBot gets an existing CustomBot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomBot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomBotState, opts ...pulumi.ResourceOption) (*CustomBot, error) {
	var resource CustomBot
	err := ctx.ReadResource("volcengine:waf/customBot:CustomBot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomBot resources.
type customBotState struct {
	// Advanced conditions.
	Accurate *CustomBotAccurate `pulumi:"accurate"`
	// The execution action of the Bot.
	Action *string `pulumi:"action"`
	// Whether to set advanced conditions.
	Advanced *int `pulumi:"advanced"`
	// bot name.
	BotType *string `pulumi:"botType"`
	// The description of bot.
	Description *string `pulumi:"description"`
	// Whether to enable bot.
	Enable *int `pulumi:"enable"`
	// Domain name information.
	Host *string `pulumi:"host"`
	// The Name of the affiliated project resource.
	ProjectName *string `pulumi:"projectName"`
	// Rule unique identifier.
	RuleTag *string `pulumi:"ruleTag"`
	// The update time.
	UpdateTime *string `pulumi:"updateTime"`
}

type CustomBotState struct {
	// Advanced conditions.
	Accurate CustomBotAccuratePtrInput
	// The execution action of the Bot.
	Action pulumi.StringPtrInput
	// Whether to set advanced conditions.
	Advanced pulumi.IntPtrInput
	// bot name.
	BotType pulumi.StringPtrInput
	// The description of bot.
	Description pulumi.StringPtrInput
	// Whether to enable bot.
	Enable pulumi.IntPtrInput
	// Domain name information.
	Host pulumi.StringPtrInput
	// The Name of the affiliated project resource.
	ProjectName pulumi.StringPtrInput
	// Rule unique identifier.
	RuleTag pulumi.StringPtrInput
	// The update time.
	UpdateTime pulumi.StringPtrInput
}

func (CustomBotState) ElementType() reflect.Type {
	return reflect.TypeOf((*customBotState)(nil)).Elem()
}

type customBotArgs struct {
	// Advanced conditions.
	Accurate CustomBotAccurate `pulumi:"accurate"`
	// The execution action of the Bot.
	Action string `pulumi:"action"`
	// bot name.
	BotType string `pulumi:"botType"`
	// The description of bot.
	Description *string `pulumi:"description"`
	// Whether to enable bot.
	Enable int `pulumi:"enable"`
	// Domain name information.
	Host string `pulumi:"host"`
	// The Name of the affiliated project resource.
	ProjectName *string `pulumi:"projectName"`
}

// The set of arguments for constructing a CustomBot resource.
type CustomBotArgs struct {
	// Advanced conditions.
	Accurate CustomBotAccurateInput
	// The execution action of the Bot.
	Action pulumi.StringInput
	// bot name.
	BotType pulumi.StringInput
	// The description of bot.
	Description pulumi.StringPtrInput
	// Whether to enable bot.
	Enable pulumi.IntInput
	// Domain name information.
	Host pulumi.StringInput
	// The Name of the affiliated project resource.
	ProjectName pulumi.StringPtrInput
}

func (CustomBotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customBotArgs)(nil)).Elem()
}

type CustomBotInput interface {
	pulumi.Input

	ToCustomBotOutput() CustomBotOutput
	ToCustomBotOutputWithContext(ctx context.Context) CustomBotOutput
}

func (*CustomBot) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomBot)(nil)).Elem()
}

func (i *CustomBot) ToCustomBotOutput() CustomBotOutput {
	return i.ToCustomBotOutputWithContext(context.Background())
}

func (i *CustomBot) ToCustomBotOutputWithContext(ctx context.Context) CustomBotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomBotOutput)
}

// CustomBotArrayInput is an input type that accepts CustomBotArray and CustomBotArrayOutput values.
// You can construct a concrete instance of `CustomBotArrayInput` via:
//
//	CustomBotArray{ CustomBotArgs{...} }
type CustomBotArrayInput interface {
	pulumi.Input

	ToCustomBotArrayOutput() CustomBotArrayOutput
	ToCustomBotArrayOutputWithContext(context.Context) CustomBotArrayOutput
}

type CustomBotArray []CustomBotInput

func (CustomBotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomBot)(nil)).Elem()
}

func (i CustomBotArray) ToCustomBotArrayOutput() CustomBotArrayOutput {
	return i.ToCustomBotArrayOutputWithContext(context.Background())
}

func (i CustomBotArray) ToCustomBotArrayOutputWithContext(ctx context.Context) CustomBotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomBotArrayOutput)
}

// CustomBotMapInput is an input type that accepts CustomBotMap and CustomBotMapOutput values.
// You can construct a concrete instance of `CustomBotMapInput` via:
//
//	CustomBotMap{ "key": CustomBotArgs{...} }
type CustomBotMapInput interface {
	pulumi.Input

	ToCustomBotMapOutput() CustomBotMapOutput
	ToCustomBotMapOutputWithContext(context.Context) CustomBotMapOutput
}

type CustomBotMap map[string]CustomBotInput

func (CustomBotMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomBot)(nil)).Elem()
}

func (i CustomBotMap) ToCustomBotMapOutput() CustomBotMapOutput {
	return i.ToCustomBotMapOutputWithContext(context.Background())
}

func (i CustomBotMap) ToCustomBotMapOutputWithContext(ctx context.Context) CustomBotMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomBotMapOutput)
}

type CustomBotOutput struct{ *pulumi.OutputState }

func (CustomBotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomBot)(nil)).Elem()
}

func (o CustomBotOutput) ToCustomBotOutput() CustomBotOutput {
	return o
}

func (o CustomBotOutput) ToCustomBotOutputWithContext(ctx context.Context) CustomBotOutput {
	return o
}

// Advanced conditions.
func (o CustomBotOutput) Accurate() CustomBotAccurateOutput {
	return o.ApplyT(func(v *CustomBot) CustomBotAccurateOutput { return v.Accurate }).(CustomBotAccurateOutput)
}

// The execution action of the Bot.
func (o CustomBotOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Whether to set advanced conditions.
func (o CustomBotOutput) Advanced() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.IntOutput { return v.Advanced }).(pulumi.IntOutput)
}

// bot name.
func (o CustomBotOutput) BotType() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.StringOutput { return v.BotType }).(pulumi.StringOutput)
}

// The description of bot.
func (o CustomBotOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Whether to enable bot.
func (o CustomBotOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.IntOutput { return v.Enable }).(pulumi.IntOutput)
}

// Domain name information.
func (o CustomBotOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// The Name of the affiliated project resource.
func (o CustomBotOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.StringPtrOutput { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Rule unique identifier.
func (o CustomBotOutput) RuleTag() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.StringOutput { return v.RuleTag }).(pulumi.StringOutput)
}

// The update time.
func (o CustomBotOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomBot) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type CustomBotArrayOutput struct{ *pulumi.OutputState }

func (CustomBotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomBot)(nil)).Elem()
}

func (o CustomBotArrayOutput) ToCustomBotArrayOutput() CustomBotArrayOutput {
	return o
}

func (o CustomBotArrayOutput) ToCustomBotArrayOutputWithContext(ctx context.Context) CustomBotArrayOutput {
	return o
}

func (o CustomBotArrayOutput) Index(i pulumi.IntInput) CustomBotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomBot {
		return vs[0].([]*CustomBot)[vs[1].(int)]
	}).(CustomBotOutput)
}

type CustomBotMapOutput struct{ *pulumi.OutputState }

func (CustomBotMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomBot)(nil)).Elem()
}

func (o CustomBotMapOutput) ToCustomBotMapOutput() CustomBotMapOutput {
	return o
}

func (o CustomBotMapOutput) ToCustomBotMapOutputWithContext(ctx context.Context) CustomBotMapOutput {
	return o
}

func (o CustomBotMapOutput) MapIndex(k pulumi.StringInput) CustomBotOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomBot {
		return vs[0].(map[string]*CustomBot)[vs[1].(string)]
	}).(CustomBotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomBotInput)(nil)).Elem(), &CustomBot{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomBotArrayInput)(nil)).Elem(), CustomBotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomBotMapInput)(nil)).Elem(), CustomBotMap{})
	pulumi.RegisterOutputType(CustomBotOutput{})
	pulumi.RegisterOutputType(CustomBotArrayOutput{})
	pulumi.RegisterOutputType(CustomBotMapOutput{})
}
