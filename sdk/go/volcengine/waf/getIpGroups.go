// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of waf ip groups
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := waf.GetIpGroups(ctx, &waf.GetIpGroupsArgs{
//				TimeOrderBy: "DESC",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIpGroups(ctx *pulumi.Context, args *GetIpGroupsArgs, opts ...pulumi.InvokeOption) (*GetIpGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpGroupsResult
	err := ctx.Invoke("volcengine:waf/getIpGroups:getIpGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpGroups.
type GetIpGroupsArgs struct {
	// The address or address segment of the query.
	Ip *string `pulumi:"ip"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Query the association rule ID.
	RuleTag *string `pulumi:"ruleTag"`
	// The arrangement order of the address group.
	TimeOrderBy string `pulumi:"timeOrderBy"`
}

// A collection of values returned by getIpGroups.
type GetIpGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string  `pulumi:"id"`
	Ip *string `pulumi:"ip"`
	// Address group list information.
	IpGroupLists []GetIpGroupsIpGroupList `pulumi:"ipGroupLists"`
	NameRegex    *string                  `pulumi:"nameRegex"`
	OutputFile   *string                  `pulumi:"outputFile"`
	// The ID of the rule.
	RuleTag     *string `pulumi:"ruleTag"`
	TimeOrderBy string  `pulumi:"timeOrderBy"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetIpGroupsOutput(ctx *pulumi.Context, args GetIpGroupsOutputArgs, opts ...pulumi.InvokeOption) GetIpGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpGroupsResult, error) {
			args := v.(GetIpGroupsArgs)
			r, err := GetIpGroups(ctx, &args, opts...)
			var s GetIpGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpGroupsResultOutput)
}

// A collection of arguments for invoking getIpGroups.
type GetIpGroupsOutputArgs struct {
	// The address or address segment of the query.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Query the association rule ID.
	RuleTag pulumi.StringPtrInput `pulumi:"ruleTag"`
	// The arrangement order of the address group.
	TimeOrderBy pulumi.StringInput `pulumi:"timeOrderBy"`
}

func (GetIpGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getIpGroups.
type GetIpGroupsResultOutput struct{ *pulumi.OutputState }

func (GetIpGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpGroupsResult)(nil)).Elem()
}

func (o GetIpGroupsResultOutput) ToGetIpGroupsResultOutput() GetIpGroupsResultOutput {
	return o
}

func (o GetIpGroupsResultOutput) ToGetIpGroupsResultOutputWithContext(ctx context.Context) GetIpGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIpGroupsResultOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpGroupsResult) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// Address group list information.
func (o GetIpGroupsResultOutput) IpGroupLists() GetIpGroupsIpGroupListArrayOutput {
	return o.ApplyT(func(v GetIpGroupsResult) []GetIpGroupsIpGroupList { return v.IpGroupLists }).(GetIpGroupsIpGroupListArrayOutput)
}

func (o GetIpGroupsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpGroupsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetIpGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The ID of the rule.
func (o GetIpGroupsResultOutput) RuleTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpGroupsResult) *string { return v.RuleTag }).(pulumi.StringPtrOutput)
}

func (o GetIpGroupsResultOutput) TimeOrderBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpGroupsResult) string { return v.TimeOrderBy }).(pulumi.StringOutput)
}

// The total count of query.
func (o GetIpGroupsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpGroupsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpGroupsResultOutput{})
}
