// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage waf domain
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := waf.NewWafDomain(ctx, "foo", &waf.WafDomainArgs{
//				AccessMode: pulumi.Int(10),
//				BackendGroups: waf.WafDomainBackendGroupArray{
//					&waf.WafDomainBackendGroupArgs{
//						AccessPorts: pulumi.IntArray{
//							pulumi.Int(80),
//						},
//						Backends: waf.WafDomainBackendGroupBackendArray{
//							&waf.WafDomainBackendGroupBackendArgs{
//								Ip:       pulumi.String("192.168.0.0"),
//								Port:     pulumi.Int(80),
//								Protocol: pulumi.String("HTTP"),
//								Weight:   pulumi.Int(40),
//							},
//							&waf.WafDomainBackendGroupBackendArgs{
//								Ip:       pulumi.String("192.168.1.0"),
//								Port:     pulumi.Int(80),
//								Protocol: pulumi.String("HTTP"),
//								Weight:   pulumi.Int(60),
//							},
//						},
//						Name: pulumi.String("default"),
//					},
//				},
//				ClientIpLocation:  pulumi.Int(0),
//				ClientMaxBodySize: pulumi.Int(1024),
//				CustomHeaders: pulumi.StringArray{
//					pulumi.String("x-top-1"),
//					pulumi.String("x-top-2"),
//				},
//				Domain:           pulumi.String("www.tf-test.com"),
//				EnableIpv6:       pulumi.Int(0),
//				KeepAliveRequest: pulumi.Int(200),
//				KeepAliveTimeOut: pulumi.Int(100),
//				LbAlgorithm:      pulumi.String("wlc"),
//				ProtocolPorts: &waf.WafDomainProtocolPortsArgs{
//					Https: pulumi.IntArray{
//						pulumi.Int(80),
//					},
//				},
//				Protocols: pulumi.StringArray{
//					pulumi.String("HTTP"),
//				},
//				ProxyConfig:           pulumi.Int(1),
//				ProxyConnectTimeOut:   pulumi.Int(10),
//				ProxyKeepAlive:        pulumi.Int(101),
//				ProxyKeepAliveTimeOut: pulumi.Int(20),
//				ProxyReadTimeOut:      pulumi.Int(200),
//				ProxyRetry:            pulumi.Int(10),
//				ProxyWriteTimeOut:     pulumi.Int(120),
//				PublicRealServer:      pulumi.Int(0),
//				VpcId:                 pulumi.String("vpc-2d6485y7p95og58ozfcvxxxxx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WafDomain can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:waf/wafDomain:WafDomain default resource_id
// ```
type WafDomain struct {
	pulumi.CustomResourceState

	// Access mode.
	AccessMode pulumi.IntOutput `pulumi:"accessMode"`
	// High-defense instance IP.
	AdvancedDefenseIp pulumi.StringOutput `pulumi:"advancedDefenseIp"`
	// High-defense instance IPv6.
	AdvancedDefenseIpv6 pulumi.StringOutput `pulumi:"advancedDefenseIpv6"`
	// Whether to enable the API protection policy. Works only on modified scenes.
	ApiEnable pulumi.IntOutput `pulumi:"apiEnable"`
	// The status of the attack.
	AttackStatus pulumi.IntOutput `pulumi:"attackStatus"`
	// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
	AutoCcEnable pulumi.IntOutput `pulumi:"autoCcEnable"`
	// The configuration of source station.
	BackendGroups WafDomainBackendGroupArrayOutput `pulumi:"backendGroups"`
	// Whether to enable the access ban list policy. Works only on modified scenes.
	BlackIpEnable pulumi.IntOutput `pulumi:"blackIpEnable"`
	// Whether to enable the geographical location access control policy. Works only on modified scenes.
	BlackLctEnable pulumi.IntOutput `pulumi:"blackLctEnable"`
	// Whether to enable the bot dynamic token. Works only on modified scenes.
	BotDytokenEnable pulumi.IntPtrOutput `pulumi:"botDytokenEnable"`
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotFrequencyEnable pulumi.IntPtrOutput `pulumi:"botFrequencyEnable"`
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotRepeatEnable pulumi.IntPtrOutput `pulumi:"botRepeatEnable"`
	// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
	BotSequenceDefaultAction pulumi.IntPtrOutput `pulumi:"botSequenceDefaultAction"`
	// Whether to enable the bot behavior map. Works only on modified scenes.
	BotSequenceEnable pulumi.IntPtrOutput `pulumi:"botSequenceEnable"`
	// Whether to enable the CC protection policy. Works only on modified scenes.
	CcEnable pulumi.IntOutput `pulumi:"ccEnable"`
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	CertificateId pulumi.IntOutput `pulumi:"certificateId"`
	// The name of the certificate.
	CertificateName pulumi.StringOutput `pulumi:"certificateName"`
	// Certificate custody platform.
	CertificatePlatform pulumi.StringOutput `pulumi:"certificatePlatform"`
	// The method of obtaining the client IP.
	ClientIpLocation pulumi.IntOutput `pulumi:"clientIpLocation"`
	// The client requests the maximum value of body.
	ClientMaxBodySize pulumi.IntOutput `pulumi:"clientMaxBodySize"`
	// Access port information.If AccessMode is Alb/CLB, this field is required.
	CloudAccessConfigs WafDomainCloudAccessConfigArrayOutput `pulumi:"cloudAccessConfigs"`
	// The CNAME value generated by the WAF instance.
	Cname pulumi.StringOutput `pulumi:"cname"`
	// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
	CustomBotEnable pulumi.IntOutput `pulumi:"customBotEnable"`
	// Custom Header.
	CustomHeaders pulumi.StringArrayOutput `pulumi:"customHeaders"`
	// Whether to enable the custom response interception policy. Works only on modified scenes.
	CustomRspEnable pulumi.IntOutput `pulumi:"customRspEnable"`
	// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
	CustomSni pulumi.StringPtrOutput `pulumi:"customSni"`
	// The protection mode of the instance. Works only on modified scenes.
	DefenceMode pulumi.IntPtrOutput `pulumi:"defenceMode"`
	// The protection mode of the instance.
	DefenceModeComputed pulumi.IntOutput `pulumi:"defenceModeComputed"`
	// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
	DlpEnable pulumi.IntOutput `pulumi:"dlpEnable"`
	// List of domain names that need to be protected by WAF.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Whether to enable user-defined redirection. Works only on modified scenes.
	EnableCustomRedirect pulumi.IntPtrOutput `pulumi:"enableCustomRedirect"`
	// Whether to enable HTTP 2.0.
	EnableHttp2 pulumi.IntOutput `pulumi:"enableHttp2"`
	// Whether it supports protecting IPv6 requests.
	EnableIpv6 pulumi.IntOutput `pulumi:"enableIpv6"`
	// Whether to enable the SNI configuration. Works only on modified scenes.
	EnableSni pulumi.IntPtrOutput `pulumi:"enableSni"`
	// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
	ExtraDefenceModeLbInstances WafDomainExtraDefenceModeLbInstanceArrayOutput `pulumi:"extraDefenceModeLbInstances"`
	// The number of long connection multiplexes.
	KeepAliveRequest pulumi.IntOutput `pulumi:"keepAliveRequest"`
	// Long connection retention time.
	KeepAliveTimeOut pulumi.IntOutput `pulumi:"keepAliveTimeOut"`
	// The types of load balancing algorithms.
	LbAlgorithm pulumi.StringOutput `pulumi:"lbAlgorithm"`
	// Is LLM available. Works only on modified scenes.
	LlmAvailable pulumi.BoolPtrOutput `pulumi:"llmAvailable"`
	// The name of project. Works only on modified scenes.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// Whether to enable protocol following.
	ProtocolFollow pulumi.IntOutput `pulumi:"protocolFollow"`
	// Access port information.
	ProtocolPorts WafDomainProtocolPortsOutput `pulumi:"protocolPorts"`
	// Access protocol types.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// Whether to enable proxy configuration.
	ProxyConfig pulumi.IntOutput `pulumi:"proxyConfig"`
	// The timeout period for establishing a connection between the WAF and the backend server.
	ProxyConnectTimeOut pulumi.IntOutput `pulumi:"proxyConnectTimeOut"`
	// The number of reusable WAF origin long connections.
	ProxyKeepAlive pulumi.IntOutput `pulumi:"proxyKeepAlive"`
	// Idle long connection timeout period.
	ProxyKeepAliveTimeOut pulumi.IntOutput `pulumi:"proxyKeepAliveTimeOut"`
	// The timeout period during which WAF reads the response from the backend server.
	ProxyReadTimeOut pulumi.IntOutput `pulumi:"proxyReadTimeOut"`
	// The number of retries for WAF back to source.
	ProxyRetry pulumi.IntOutput `pulumi:"proxyRetry"`
	// The timeout period during which the WAF transmits the request to the backend server.
	ProxyWriteTimeOut pulumi.IntOutput `pulumi:"proxyWriteTimeOut"`
	// Connect to the source return mode.
	PublicRealServer pulumi.IntOutput `pulumi:"publicRealServer"`
	// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
	RedirectHttps pulumi.BoolPtrOutput `pulumi:"redirectHttps"`
	// The IP of the WAF protection instance.
	ServerIps pulumi.StringOutput `pulumi:"serverIps"`
	// WAF source IP.
	SrcIps pulumi.StringOutput `pulumi:"srcIps"`
	// Encryption kit.
	SslCiphers pulumi.StringArrayOutput `pulumi:"sslCiphers"`
	// TLS protocol version.
	SslProtocols pulumi.StringArrayOutput `pulumi:"sslProtocols"`
	// The status of access.
	Status pulumi.IntOutput `pulumi:"status"`
	// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
	SystemBotEnable pulumi.IntOutput `pulumi:"systemBotEnable"`
	// Whether to enable the page tamper-proof policy. Works only on modified scenes.
	TamperProofEnable pulumi.IntOutput `pulumi:"tamperProofEnable"`
	// Whether to enable the log service.
	TlsEnable pulumi.IntOutput `pulumi:"tlsEnable"`
	// Details of log field configuration. Works only on modified scenes.
	TlsFieldsConfig WafDomainTlsFieldsConfigPtrOutput `pulumi:"tlsFieldsConfig"`
	// The update time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	VolcCertificateId pulumi.StringOutput `pulumi:"volcCertificateId"`
	// The ID of vpc.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
	WafEnable pulumi.IntOutput `pulumi:"wafEnable"`
	// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
	WafWhiteReqEnable pulumi.IntOutput `pulumi:"wafWhiteReqEnable"`
	// Whether to enable the access list policy. Works only on modified scenes.
	WhiteEnable pulumi.IntOutput `pulumi:"whiteEnable"`
	// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
	WhiteFieldEnable pulumi.IntOutput `pulumi:"whiteFieldEnable"`
}

// NewWafDomain registers a new resource with the given unique name, arguments, and options.
func NewWafDomain(ctx *pulumi.Context,
	name string, args *WafDomainArgs, opts ...pulumi.ResourceOption) (*WafDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessMode == nil {
		return nil, errors.New("invalid value for required argument 'AccessMode'")
	}
	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WafDomain
	err := ctx.RegisterResource("volcengine:waf/wafDomain:WafDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWafDomain gets an existing WafDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWafDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WafDomainState, opts ...pulumi.ResourceOption) (*WafDomain, error) {
	var resource WafDomain
	err := ctx.ReadResource("volcengine:waf/wafDomain:WafDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WafDomain resources.
type wafDomainState struct {
	// Access mode.
	AccessMode *int `pulumi:"accessMode"`
	// High-defense instance IP.
	AdvancedDefenseIp *string `pulumi:"advancedDefenseIp"`
	// High-defense instance IPv6.
	AdvancedDefenseIpv6 *string `pulumi:"advancedDefenseIpv6"`
	// Whether to enable the API protection policy. Works only on modified scenes.
	ApiEnable *int `pulumi:"apiEnable"`
	// The status of the attack.
	AttackStatus *int `pulumi:"attackStatus"`
	// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
	AutoCcEnable *int `pulumi:"autoCcEnable"`
	// The configuration of source station.
	BackendGroups []WafDomainBackendGroup `pulumi:"backendGroups"`
	// Whether to enable the access ban list policy. Works only on modified scenes.
	BlackIpEnable *int `pulumi:"blackIpEnable"`
	// Whether to enable the geographical location access control policy. Works only on modified scenes.
	BlackLctEnable *int `pulumi:"blackLctEnable"`
	// Whether to enable the bot dynamic token. Works only on modified scenes.
	BotDytokenEnable *int `pulumi:"botDytokenEnable"`
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotFrequencyEnable *int `pulumi:"botFrequencyEnable"`
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotRepeatEnable *int `pulumi:"botRepeatEnable"`
	// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
	BotSequenceDefaultAction *int `pulumi:"botSequenceDefaultAction"`
	// Whether to enable the bot behavior map. Works only on modified scenes.
	BotSequenceEnable *int `pulumi:"botSequenceEnable"`
	// Whether to enable the CC protection policy. Works only on modified scenes.
	CcEnable *int `pulumi:"ccEnable"`
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	CertificateId *int `pulumi:"certificateId"`
	// The name of the certificate.
	CertificateName *string `pulumi:"certificateName"`
	// Certificate custody platform.
	CertificatePlatform *string `pulumi:"certificatePlatform"`
	// The method of obtaining the client IP.
	ClientIpLocation *int `pulumi:"clientIpLocation"`
	// The client requests the maximum value of body.
	ClientMaxBodySize *int `pulumi:"clientMaxBodySize"`
	// Access port information.If AccessMode is Alb/CLB, this field is required.
	CloudAccessConfigs []WafDomainCloudAccessConfig `pulumi:"cloudAccessConfigs"`
	// The CNAME value generated by the WAF instance.
	Cname *string `pulumi:"cname"`
	// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
	CustomBotEnable *int `pulumi:"customBotEnable"`
	// Custom Header.
	CustomHeaders []string `pulumi:"customHeaders"`
	// Whether to enable the custom response interception policy. Works only on modified scenes.
	CustomRspEnable *int `pulumi:"customRspEnable"`
	// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
	CustomSni *string `pulumi:"customSni"`
	// The protection mode of the instance. Works only on modified scenes.
	DefenceMode *int `pulumi:"defenceMode"`
	// The protection mode of the instance.
	DefenceModeComputed *int `pulumi:"defenceModeComputed"`
	// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
	DlpEnable *int `pulumi:"dlpEnable"`
	// List of domain names that need to be protected by WAF.
	Domain *string `pulumi:"domain"`
	// Whether to enable user-defined redirection. Works only on modified scenes.
	EnableCustomRedirect *int `pulumi:"enableCustomRedirect"`
	// Whether to enable HTTP 2.0.
	EnableHttp2 *int `pulumi:"enableHttp2"`
	// Whether it supports protecting IPv6 requests.
	EnableIpv6 *int `pulumi:"enableIpv6"`
	// Whether to enable the SNI configuration. Works only on modified scenes.
	EnableSni *int `pulumi:"enableSni"`
	// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
	ExtraDefenceModeLbInstances []WafDomainExtraDefenceModeLbInstance `pulumi:"extraDefenceModeLbInstances"`
	// The number of long connection multiplexes.
	KeepAliveRequest *int `pulumi:"keepAliveRequest"`
	// Long connection retention time.
	KeepAliveTimeOut *int `pulumi:"keepAliveTimeOut"`
	// The types of load balancing algorithms.
	LbAlgorithm *string `pulumi:"lbAlgorithm"`
	// Is LLM available. Works only on modified scenes.
	LlmAvailable *bool `pulumi:"llmAvailable"`
	// The name of project. Works only on modified scenes.
	ProjectName *string `pulumi:"projectName"`
	// Whether to enable protocol following.
	ProtocolFollow *int `pulumi:"protocolFollow"`
	// Access port information.
	ProtocolPorts *WafDomainProtocolPorts `pulumi:"protocolPorts"`
	// Access protocol types.
	Protocols []string `pulumi:"protocols"`
	// Whether to enable proxy configuration.
	ProxyConfig *int `pulumi:"proxyConfig"`
	// The timeout period for establishing a connection between the WAF and the backend server.
	ProxyConnectTimeOut *int `pulumi:"proxyConnectTimeOut"`
	// The number of reusable WAF origin long connections.
	ProxyKeepAlive *int `pulumi:"proxyKeepAlive"`
	// Idle long connection timeout period.
	ProxyKeepAliveTimeOut *int `pulumi:"proxyKeepAliveTimeOut"`
	// The timeout period during which WAF reads the response from the backend server.
	ProxyReadTimeOut *int `pulumi:"proxyReadTimeOut"`
	// The number of retries for WAF back to source.
	ProxyRetry *int `pulumi:"proxyRetry"`
	// The timeout period during which the WAF transmits the request to the backend server.
	ProxyWriteTimeOut *int `pulumi:"proxyWriteTimeOut"`
	// Connect to the source return mode.
	PublicRealServer *int `pulumi:"publicRealServer"`
	// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
	RedirectHttps *bool `pulumi:"redirectHttps"`
	// The IP of the WAF protection instance.
	ServerIps *string `pulumi:"serverIps"`
	// WAF source IP.
	SrcIps *string `pulumi:"srcIps"`
	// Encryption kit.
	SslCiphers []string `pulumi:"sslCiphers"`
	// TLS protocol version.
	SslProtocols []string `pulumi:"sslProtocols"`
	// The status of access.
	Status *int `pulumi:"status"`
	// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
	SystemBotEnable *int `pulumi:"systemBotEnable"`
	// Whether to enable the page tamper-proof policy. Works only on modified scenes.
	TamperProofEnable *int `pulumi:"tamperProofEnable"`
	// Whether to enable the log service.
	TlsEnable *int `pulumi:"tlsEnable"`
	// Details of log field configuration. Works only on modified scenes.
	TlsFieldsConfig *WafDomainTlsFieldsConfig `pulumi:"tlsFieldsConfig"`
	// The update time.
	UpdateTime *string `pulumi:"updateTime"`
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	VolcCertificateId *string `pulumi:"volcCertificateId"`
	// The ID of vpc.
	VpcId *string `pulumi:"vpcId"`
	// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
	WafEnable *int `pulumi:"wafEnable"`
	// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
	WafWhiteReqEnable *int `pulumi:"wafWhiteReqEnable"`
	// Whether to enable the access list policy. Works only on modified scenes.
	WhiteEnable *int `pulumi:"whiteEnable"`
	// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
	WhiteFieldEnable *int `pulumi:"whiteFieldEnable"`
}

type WafDomainState struct {
	// Access mode.
	AccessMode pulumi.IntPtrInput
	// High-defense instance IP.
	AdvancedDefenseIp pulumi.StringPtrInput
	// High-defense instance IPv6.
	AdvancedDefenseIpv6 pulumi.StringPtrInput
	// Whether to enable the API protection policy. Works only on modified scenes.
	ApiEnable pulumi.IntPtrInput
	// The status of the attack.
	AttackStatus pulumi.IntPtrInput
	// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
	AutoCcEnable pulumi.IntPtrInput
	// The configuration of source station.
	BackendGroups WafDomainBackendGroupArrayInput
	// Whether to enable the access ban list policy. Works only on modified scenes.
	BlackIpEnable pulumi.IntPtrInput
	// Whether to enable the geographical location access control policy. Works only on modified scenes.
	BlackLctEnable pulumi.IntPtrInput
	// Whether to enable the bot dynamic token. Works only on modified scenes.
	BotDytokenEnable pulumi.IntPtrInput
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotFrequencyEnable pulumi.IntPtrInput
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotRepeatEnable pulumi.IntPtrInput
	// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
	BotSequenceDefaultAction pulumi.IntPtrInput
	// Whether to enable the bot behavior map. Works only on modified scenes.
	BotSequenceEnable pulumi.IntPtrInput
	// Whether to enable the CC protection policy. Works only on modified scenes.
	CcEnable pulumi.IntPtrInput
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	CertificateId pulumi.IntPtrInput
	// The name of the certificate.
	CertificateName pulumi.StringPtrInput
	// Certificate custody platform.
	CertificatePlatform pulumi.StringPtrInput
	// The method of obtaining the client IP.
	ClientIpLocation pulumi.IntPtrInput
	// The client requests the maximum value of body.
	ClientMaxBodySize pulumi.IntPtrInput
	// Access port information.If AccessMode is Alb/CLB, this field is required.
	CloudAccessConfigs WafDomainCloudAccessConfigArrayInput
	// The CNAME value generated by the WAF instance.
	Cname pulumi.StringPtrInput
	// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
	CustomBotEnable pulumi.IntPtrInput
	// Custom Header.
	CustomHeaders pulumi.StringArrayInput
	// Whether to enable the custom response interception policy. Works only on modified scenes.
	CustomRspEnable pulumi.IntPtrInput
	// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
	CustomSni pulumi.StringPtrInput
	// The protection mode of the instance. Works only on modified scenes.
	DefenceMode pulumi.IntPtrInput
	// The protection mode of the instance.
	DefenceModeComputed pulumi.IntPtrInput
	// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
	DlpEnable pulumi.IntPtrInput
	// List of domain names that need to be protected by WAF.
	Domain pulumi.StringPtrInput
	// Whether to enable user-defined redirection. Works only on modified scenes.
	EnableCustomRedirect pulumi.IntPtrInput
	// Whether to enable HTTP 2.0.
	EnableHttp2 pulumi.IntPtrInput
	// Whether it supports protecting IPv6 requests.
	EnableIpv6 pulumi.IntPtrInput
	// Whether to enable the SNI configuration. Works only on modified scenes.
	EnableSni pulumi.IntPtrInput
	// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
	ExtraDefenceModeLbInstances WafDomainExtraDefenceModeLbInstanceArrayInput
	// The number of long connection multiplexes.
	KeepAliveRequest pulumi.IntPtrInput
	// Long connection retention time.
	KeepAliveTimeOut pulumi.IntPtrInput
	// The types of load balancing algorithms.
	LbAlgorithm pulumi.StringPtrInput
	// Is LLM available. Works only on modified scenes.
	LlmAvailable pulumi.BoolPtrInput
	// The name of project. Works only on modified scenes.
	ProjectName pulumi.StringPtrInput
	// Whether to enable protocol following.
	ProtocolFollow pulumi.IntPtrInput
	// Access port information.
	ProtocolPorts WafDomainProtocolPortsPtrInput
	// Access protocol types.
	Protocols pulumi.StringArrayInput
	// Whether to enable proxy configuration.
	ProxyConfig pulumi.IntPtrInput
	// The timeout period for establishing a connection between the WAF and the backend server.
	ProxyConnectTimeOut pulumi.IntPtrInput
	// The number of reusable WAF origin long connections.
	ProxyKeepAlive pulumi.IntPtrInput
	// Idle long connection timeout period.
	ProxyKeepAliveTimeOut pulumi.IntPtrInput
	// The timeout period during which WAF reads the response from the backend server.
	ProxyReadTimeOut pulumi.IntPtrInput
	// The number of retries for WAF back to source.
	ProxyRetry pulumi.IntPtrInput
	// The timeout period during which the WAF transmits the request to the backend server.
	ProxyWriteTimeOut pulumi.IntPtrInput
	// Connect to the source return mode.
	PublicRealServer pulumi.IntPtrInput
	// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
	RedirectHttps pulumi.BoolPtrInput
	// The IP of the WAF protection instance.
	ServerIps pulumi.StringPtrInput
	// WAF source IP.
	SrcIps pulumi.StringPtrInput
	// Encryption kit.
	SslCiphers pulumi.StringArrayInput
	// TLS protocol version.
	SslProtocols pulumi.StringArrayInput
	// The status of access.
	Status pulumi.IntPtrInput
	// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
	SystemBotEnable pulumi.IntPtrInput
	// Whether to enable the page tamper-proof policy. Works only on modified scenes.
	TamperProofEnable pulumi.IntPtrInput
	// Whether to enable the log service.
	TlsEnable pulumi.IntPtrInput
	// Details of log field configuration. Works only on modified scenes.
	TlsFieldsConfig WafDomainTlsFieldsConfigPtrInput
	// The update time.
	UpdateTime pulumi.StringPtrInput
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	VolcCertificateId pulumi.StringPtrInput
	// The ID of vpc.
	VpcId pulumi.StringPtrInput
	// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
	WafEnable pulumi.IntPtrInput
	// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
	WafWhiteReqEnable pulumi.IntPtrInput
	// Whether to enable the access list policy. Works only on modified scenes.
	WhiteEnable pulumi.IntPtrInput
	// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
	WhiteFieldEnable pulumi.IntPtrInput
}

func (WafDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*wafDomainState)(nil)).Elem()
}

type wafDomainArgs struct {
	// Access mode.
	AccessMode int `pulumi:"accessMode"`
	// Whether to enable the API protection policy. Works only on modified scenes.
	ApiEnable *int `pulumi:"apiEnable"`
	// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
	AutoCcEnable *int `pulumi:"autoCcEnable"`
	// The configuration of source station.
	BackendGroups []WafDomainBackendGroup `pulumi:"backendGroups"`
	// Whether to enable the access ban list policy. Works only on modified scenes.
	BlackIpEnable *int `pulumi:"blackIpEnable"`
	// Whether to enable the geographical location access control policy. Works only on modified scenes.
	BlackLctEnable *int `pulumi:"blackLctEnable"`
	// Whether to enable the bot dynamic token. Works only on modified scenes.
	BotDytokenEnable *int `pulumi:"botDytokenEnable"`
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotFrequencyEnable *int `pulumi:"botFrequencyEnable"`
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotRepeatEnable *int `pulumi:"botRepeatEnable"`
	// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
	BotSequenceDefaultAction *int `pulumi:"botSequenceDefaultAction"`
	// Whether to enable the bot behavior map. Works only on modified scenes.
	BotSequenceEnable *int `pulumi:"botSequenceEnable"`
	// Whether to enable the CC protection policy. Works only on modified scenes.
	CcEnable *int `pulumi:"ccEnable"`
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	CertificateId *int `pulumi:"certificateId"`
	// Certificate custody platform.
	CertificatePlatform *string `pulumi:"certificatePlatform"`
	// The method of obtaining the client IP.
	ClientIpLocation *int `pulumi:"clientIpLocation"`
	// The client requests the maximum value of body.
	ClientMaxBodySize *int `pulumi:"clientMaxBodySize"`
	// Access port information.If AccessMode is Alb/CLB, this field is required.
	CloudAccessConfigs []WafDomainCloudAccessConfig `pulumi:"cloudAccessConfigs"`
	// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
	CustomBotEnable *int `pulumi:"customBotEnable"`
	// Custom Header.
	CustomHeaders []string `pulumi:"customHeaders"`
	// Whether to enable the custom response interception policy. Works only on modified scenes.
	CustomRspEnable *int `pulumi:"customRspEnable"`
	// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
	CustomSni *string `pulumi:"customSni"`
	// The protection mode of the instance. Works only on modified scenes.
	DefenceMode *int `pulumi:"defenceMode"`
	// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
	DlpEnable *int `pulumi:"dlpEnable"`
	// List of domain names that need to be protected by WAF.
	Domain string `pulumi:"domain"`
	// Whether to enable user-defined redirection. Works only on modified scenes.
	EnableCustomRedirect *int `pulumi:"enableCustomRedirect"`
	// Whether to enable HTTP 2.0.
	EnableHttp2 *int `pulumi:"enableHttp2"`
	// Whether it supports protecting IPv6 requests.
	EnableIpv6 *int `pulumi:"enableIpv6"`
	// Whether to enable the SNI configuration. Works only on modified scenes.
	EnableSni *int `pulumi:"enableSni"`
	// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
	ExtraDefenceModeLbInstances []WafDomainExtraDefenceModeLbInstance `pulumi:"extraDefenceModeLbInstances"`
	// The number of long connection multiplexes.
	KeepAliveRequest *int `pulumi:"keepAliveRequest"`
	// Long connection retention time.
	KeepAliveTimeOut *int `pulumi:"keepAliveTimeOut"`
	// The types of load balancing algorithms.
	LbAlgorithm *string `pulumi:"lbAlgorithm"`
	// Is LLM available. Works only on modified scenes.
	LlmAvailable *bool `pulumi:"llmAvailable"`
	// The name of project. Works only on modified scenes.
	ProjectName *string `pulumi:"projectName"`
	// Whether to enable protocol following.
	ProtocolFollow *int `pulumi:"protocolFollow"`
	// Access port information.
	ProtocolPorts *WafDomainProtocolPorts `pulumi:"protocolPorts"`
	// Access protocol types.
	Protocols []string `pulumi:"protocols"`
	// Whether to enable proxy configuration.
	ProxyConfig *int `pulumi:"proxyConfig"`
	// The timeout period for establishing a connection between the WAF and the backend server.
	ProxyConnectTimeOut *int `pulumi:"proxyConnectTimeOut"`
	// The number of reusable WAF origin long connections.
	ProxyKeepAlive *int `pulumi:"proxyKeepAlive"`
	// Idle long connection timeout period.
	ProxyKeepAliveTimeOut *int `pulumi:"proxyKeepAliveTimeOut"`
	// The timeout period during which WAF reads the response from the backend server.
	ProxyReadTimeOut *int `pulumi:"proxyReadTimeOut"`
	// The number of retries for WAF back to source.
	ProxyRetry *int `pulumi:"proxyRetry"`
	// The timeout period during which the WAF transmits the request to the backend server.
	ProxyWriteTimeOut *int `pulumi:"proxyWriteTimeOut"`
	// Connect to the source return mode.
	PublicRealServer *int `pulumi:"publicRealServer"`
	// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
	RedirectHttps *bool `pulumi:"redirectHttps"`
	// Encryption kit.
	SslCiphers []string `pulumi:"sslCiphers"`
	// TLS protocol version.
	SslProtocols []string `pulumi:"sslProtocols"`
	// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
	SystemBotEnable *int `pulumi:"systemBotEnable"`
	// Whether to enable the page tamper-proof policy. Works only on modified scenes.
	TamperProofEnable *int `pulumi:"tamperProofEnable"`
	// Whether to enable the log service.
	TlsEnable *int `pulumi:"tlsEnable"`
	// Details of log field configuration. Works only on modified scenes.
	TlsFieldsConfig *WafDomainTlsFieldsConfig `pulumi:"tlsFieldsConfig"`
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	VolcCertificateId *string `pulumi:"volcCertificateId"`
	// The ID of vpc.
	VpcId *string `pulumi:"vpcId"`
	// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
	WafEnable *int `pulumi:"wafEnable"`
	// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
	WafWhiteReqEnable *int `pulumi:"wafWhiteReqEnable"`
	// Whether to enable the access list policy. Works only on modified scenes.
	WhiteEnable *int `pulumi:"whiteEnable"`
	// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
	WhiteFieldEnable *int `pulumi:"whiteFieldEnable"`
}

// The set of arguments for constructing a WafDomain resource.
type WafDomainArgs struct {
	// Access mode.
	AccessMode pulumi.IntInput
	// Whether to enable the API protection policy. Works only on modified scenes.
	ApiEnable pulumi.IntPtrInput
	// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
	AutoCcEnable pulumi.IntPtrInput
	// The configuration of source station.
	BackendGroups WafDomainBackendGroupArrayInput
	// Whether to enable the access ban list policy. Works only on modified scenes.
	BlackIpEnable pulumi.IntPtrInput
	// Whether to enable the geographical location access control policy. Works only on modified scenes.
	BlackLctEnable pulumi.IntPtrInput
	// Whether to enable the bot dynamic token. Works only on modified scenes.
	BotDytokenEnable pulumi.IntPtrInput
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotFrequencyEnable pulumi.IntPtrInput
	// Whether to enable the bot frequency limit policy. Works only on modified scenes.
	BotRepeatEnable pulumi.IntPtrInput
	// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
	BotSequenceDefaultAction pulumi.IntPtrInput
	// Whether to enable the bot behavior map. Works only on modified scenes.
	BotSequenceEnable pulumi.IntPtrInput
	// Whether to enable the CC protection policy. Works only on modified scenes.
	CcEnable pulumi.IntPtrInput
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	CertificateId pulumi.IntPtrInput
	// Certificate custody platform.
	CertificatePlatform pulumi.StringPtrInput
	// The method of obtaining the client IP.
	ClientIpLocation pulumi.IntPtrInput
	// The client requests the maximum value of body.
	ClientMaxBodySize pulumi.IntPtrInput
	// Access port information.If AccessMode is Alb/CLB, this field is required.
	CloudAccessConfigs WafDomainCloudAccessConfigArrayInput
	// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
	CustomBotEnable pulumi.IntPtrInput
	// Custom Header.
	CustomHeaders pulumi.StringArrayInput
	// Whether to enable the custom response interception policy. Works only on modified scenes.
	CustomRspEnable pulumi.IntPtrInput
	// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
	CustomSni pulumi.StringPtrInput
	// The protection mode of the instance. Works only on modified scenes.
	DefenceMode pulumi.IntPtrInput
	// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
	DlpEnable pulumi.IntPtrInput
	// List of domain names that need to be protected by WAF.
	Domain pulumi.StringInput
	// Whether to enable user-defined redirection. Works only on modified scenes.
	EnableCustomRedirect pulumi.IntPtrInput
	// Whether to enable HTTP 2.0.
	EnableHttp2 pulumi.IntPtrInput
	// Whether it supports protecting IPv6 requests.
	EnableIpv6 pulumi.IntPtrInput
	// Whether to enable the SNI configuration. Works only on modified scenes.
	EnableSni pulumi.IntPtrInput
	// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
	ExtraDefenceModeLbInstances WafDomainExtraDefenceModeLbInstanceArrayInput
	// The number of long connection multiplexes.
	KeepAliveRequest pulumi.IntPtrInput
	// Long connection retention time.
	KeepAliveTimeOut pulumi.IntPtrInput
	// The types of load balancing algorithms.
	LbAlgorithm pulumi.StringPtrInput
	// Is LLM available. Works only on modified scenes.
	LlmAvailable pulumi.BoolPtrInput
	// The name of project. Works only on modified scenes.
	ProjectName pulumi.StringPtrInput
	// Whether to enable protocol following.
	ProtocolFollow pulumi.IntPtrInput
	// Access port information.
	ProtocolPorts WafDomainProtocolPortsPtrInput
	// Access protocol types.
	Protocols pulumi.StringArrayInput
	// Whether to enable proxy configuration.
	ProxyConfig pulumi.IntPtrInput
	// The timeout period for establishing a connection between the WAF and the backend server.
	ProxyConnectTimeOut pulumi.IntPtrInput
	// The number of reusable WAF origin long connections.
	ProxyKeepAlive pulumi.IntPtrInput
	// Idle long connection timeout period.
	ProxyKeepAliveTimeOut pulumi.IntPtrInput
	// The timeout period during which WAF reads the response from the backend server.
	ProxyReadTimeOut pulumi.IntPtrInput
	// The number of retries for WAF back to source.
	ProxyRetry pulumi.IntPtrInput
	// The timeout period during which the WAF transmits the request to the backend server.
	ProxyWriteTimeOut pulumi.IntPtrInput
	// Connect to the source return mode.
	PublicRealServer pulumi.IntPtrInput
	// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
	RedirectHttps pulumi.BoolPtrInput
	// Encryption kit.
	SslCiphers pulumi.StringArrayInput
	// TLS protocol version.
	SslProtocols pulumi.StringArrayInput
	// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
	SystemBotEnable pulumi.IntPtrInput
	// Whether to enable the page tamper-proof policy. Works only on modified scenes.
	TamperProofEnable pulumi.IntPtrInput
	// Whether to enable the log service.
	TlsEnable pulumi.IntPtrInput
	// Details of log field configuration. Works only on modified scenes.
	TlsFieldsConfig WafDomainTlsFieldsConfigPtrInput
	// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
	VolcCertificateId pulumi.StringPtrInput
	// The ID of vpc.
	VpcId pulumi.StringPtrInput
	// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
	WafEnable pulumi.IntPtrInput
	// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
	WafWhiteReqEnable pulumi.IntPtrInput
	// Whether to enable the access list policy. Works only on modified scenes.
	WhiteEnable pulumi.IntPtrInput
	// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
	WhiteFieldEnable pulumi.IntPtrInput
}

func (WafDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wafDomainArgs)(nil)).Elem()
}

type WafDomainInput interface {
	pulumi.Input

	ToWafDomainOutput() WafDomainOutput
	ToWafDomainOutputWithContext(ctx context.Context) WafDomainOutput
}

func (*WafDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**WafDomain)(nil)).Elem()
}

func (i *WafDomain) ToWafDomainOutput() WafDomainOutput {
	return i.ToWafDomainOutputWithContext(context.Background())
}

func (i *WafDomain) ToWafDomainOutputWithContext(ctx context.Context) WafDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafDomainOutput)
}

// WafDomainArrayInput is an input type that accepts WafDomainArray and WafDomainArrayOutput values.
// You can construct a concrete instance of `WafDomainArrayInput` via:
//
//	WafDomainArray{ WafDomainArgs{...} }
type WafDomainArrayInput interface {
	pulumi.Input

	ToWafDomainArrayOutput() WafDomainArrayOutput
	ToWafDomainArrayOutputWithContext(context.Context) WafDomainArrayOutput
}

type WafDomainArray []WafDomainInput

func (WafDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafDomain)(nil)).Elem()
}

func (i WafDomainArray) ToWafDomainArrayOutput() WafDomainArrayOutput {
	return i.ToWafDomainArrayOutputWithContext(context.Background())
}

func (i WafDomainArray) ToWafDomainArrayOutputWithContext(ctx context.Context) WafDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafDomainArrayOutput)
}

// WafDomainMapInput is an input type that accepts WafDomainMap and WafDomainMapOutput values.
// You can construct a concrete instance of `WafDomainMapInput` via:
//
//	WafDomainMap{ "key": WafDomainArgs{...} }
type WafDomainMapInput interface {
	pulumi.Input

	ToWafDomainMapOutput() WafDomainMapOutput
	ToWafDomainMapOutputWithContext(context.Context) WafDomainMapOutput
}

type WafDomainMap map[string]WafDomainInput

func (WafDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafDomain)(nil)).Elem()
}

func (i WafDomainMap) ToWafDomainMapOutput() WafDomainMapOutput {
	return i.ToWafDomainMapOutputWithContext(context.Background())
}

func (i WafDomainMap) ToWafDomainMapOutputWithContext(ctx context.Context) WafDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafDomainMapOutput)
}

type WafDomainOutput struct{ *pulumi.OutputState }

func (WafDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WafDomain)(nil)).Elem()
}

func (o WafDomainOutput) ToWafDomainOutput() WafDomainOutput {
	return o
}

func (o WafDomainOutput) ToWafDomainOutputWithContext(ctx context.Context) WafDomainOutput {
	return o
}

// Access mode.
func (o WafDomainOutput) AccessMode() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.AccessMode }).(pulumi.IntOutput)
}

// High-defense instance IP.
func (o WafDomainOutput) AdvancedDefenseIp() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.AdvancedDefenseIp }).(pulumi.StringOutput)
}

// High-defense instance IPv6.
func (o WafDomainOutput) AdvancedDefenseIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.AdvancedDefenseIpv6 }).(pulumi.StringOutput)
}

// Whether to enable the API protection policy. Works only on modified scenes.
func (o WafDomainOutput) ApiEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ApiEnable }).(pulumi.IntOutput)
}

// The status of the attack.
func (o WafDomainOutput) AttackStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.AttackStatus }).(pulumi.IntOutput)
}

// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
func (o WafDomainOutput) AutoCcEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.AutoCcEnable }).(pulumi.IntOutput)
}

// The configuration of source station.
func (o WafDomainOutput) BackendGroups() WafDomainBackendGroupArrayOutput {
	return o.ApplyT(func(v *WafDomain) WafDomainBackendGroupArrayOutput { return v.BackendGroups }).(WafDomainBackendGroupArrayOutput)
}

// Whether to enable the access ban list policy. Works only on modified scenes.
func (o WafDomainOutput) BlackIpEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.BlackIpEnable }).(pulumi.IntOutput)
}

// Whether to enable the geographical location access control policy. Works only on modified scenes.
func (o WafDomainOutput) BlackLctEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.BlackLctEnable }).(pulumi.IntOutput)
}

// Whether to enable the bot dynamic token. Works only on modified scenes.
func (o WafDomainOutput) BotDytokenEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntPtrOutput { return v.BotDytokenEnable }).(pulumi.IntPtrOutput)
}

// Whether to enable the bot frequency limit policy. Works only on modified scenes.
func (o WafDomainOutput) BotFrequencyEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntPtrOutput { return v.BotFrequencyEnable }).(pulumi.IntPtrOutput)
}

// Whether to enable the bot frequency limit policy. Works only on modified scenes.
func (o WafDomainOutput) BotRepeatEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntPtrOutput { return v.BotRepeatEnable }).(pulumi.IntPtrOutput)
}

// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
func (o WafDomainOutput) BotSequenceDefaultAction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntPtrOutput { return v.BotSequenceDefaultAction }).(pulumi.IntPtrOutput)
}

// Whether to enable the bot behavior map. Works only on modified scenes.
func (o WafDomainOutput) BotSequenceEnable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntPtrOutput { return v.BotSequenceEnable }).(pulumi.IntPtrOutput)
}

// Whether to enable the CC protection policy. Works only on modified scenes.
func (o WafDomainOutput) CcEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.CcEnable }).(pulumi.IntOutput)
}

// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
func (o WafDomainOutput) CertificateId() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.CertificateId }).(pulumi.IntOutput)
}

// The name of the certificate.
func (o WafDomainOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.CertificateName }).(pulumi.StringOutput)
}

// Certificate custody platform.
func (o WafDomainOutput) CertificatePlatform() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.CertificatePlatform }).(pulumi.StringOutput)
}

// The method of obtaining the client IP.
func (o WafDomainOutput) ClientIpLocation() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ClientIpLocation }).(pulumi.IntOutput)
}

// The client requests the maximum value of body.
func (o WafDomainOutput) ClientMaxBodySize() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ClientMaxBodySize }).(pulumi.IntOutput)
}

// Access port information.If AccessMode is Alb/CLB, this field is required.
func (o WafDomainOutput) CloudAccessConfigs() WafDomainCloudAccessConfigArrayOutput {
	return o.ApplyT(func(v *WafDomain) WafDomainCloudAccessConfigArrayOutput { return v.CloudAccessConfigs }).(WafDomainCloudAccessConfigArrayOutput)
}

// The CNAME value generated by the WAF instance.
func (o WafDomainOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.Cname }).(pulumi.StringOutput)
}

// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
func (o WafDomainOutput) CustomBotEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.CustomBotEnable }).(pulumi.IntOutput)
}

// Custom Header.
func (o WafDomainOutput) CustomHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringArrayOutput { return v.CustomHeaders }).(pulumi.StringArrayOutput)
}

// Whether to enable the custom response interception policy. Works only on modified scenes.
func (o WafDomainOutput) CustomRspEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.CustomRspEnable }).(pulumi.IntOutput)
}

// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
func (o WafDomainOutput) CustomSni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringPtrOutput { return v.CustomSni }).(pulumi.StringPtrOutput)
}

// The protection mode of the instance. Works only on modified scenes.
func (o WafDomainOutput) DefenceMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntPtrOutput { return v.DefenceMode }).(pulumi.IntPtrOutput)
}

// The protection mode of the instance.
func (o WafDomainOutput) DefenceModeComputed() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.DefenceModeComputed }).(pulumi.IntOutput)
}

// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
func (o WafDomainOutput) DlpEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.DlpEnable }).(pulumi.IntOutput)
}

// List of domain names that need to be protected by WAF.
func (o WafDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Whether to enable user-defined redirection. Works only on modified scenes.
func (o WafDomainOutput) EnableCustomRedirect() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntPtrOutput { return v.EnableCustomRedirect }).(pulumi.IntPtrOutput)
}

// Whether to enable HTTP 2.0.
func (o WafDomainOutput) EnableHttp2() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.EnableHttp2 }).(pulumi.IntOutput)
}

// Whether it supports protecting IPv6 requests.
func (o WafDomainOutput) EnableIpv6() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.EnableIpv6 }).(pulumi.IntOutput)
}

// Whether to enable the SNI configuration. Works only on modified scenes.
func (o WafDomainOutput) EnableSni() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntPtrOutput { return v.EnableSni }).(pulumi.IntPtrOutput)
}

// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
func (o WafDomainOutput) ExtraDefenceModeLbInstances() WafDomainExtraDefenceModeLbInstanceArrayOutput {
	return o.ApplyT(func(v *WafDomain) WafDomainExtraDefenceModeLbInstanceArrayOutput {
		return v.ExtraDefenceModeLbInstances
	}).(WafDomainExtraDefenceModeLbInstanceArrayOutput)
}

// The number of long connection multiplexes.
func (o WafDomainOutput) KeepAliveRequest() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.KeepAliveRequest }).(pulumi.IntOutput)
}

// Long connection retention time.
func (o WafDomainOutput) KeepAliveTimeOut() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.KeepAliveTimeOut }).(pulumi.IntOutput)
}

// The types of load balancing algorithms.
func (o WafDomainOutput) LbAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.LbAlgorithm }).(pulumi.StringOutput)
}

// Is LLM available. Works only on modified scenes.
func (o WafDomainOutput) LlmAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.BoolPtrOutput { return v.LlmAvailable }).(pulumi.BoolPtrOutput)
}

// The name of project. Works only on modified scenes.
func (o WafDomainOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// Whether to enable protocol following.
func (o WafDomainOutput) ProtocolFollow() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ProtocolFollow }).(pulumi.IntOutput)
}

// Access port information.
func (o WafDomainOutput) ProtocolPorts() WafDomainProtocolPortsOutput {
	return o.ApplyT(func(v *WafDomain) WafDomainProtocolPortsOutput { return v.ProtocolPorts }).(WafDomainProtocolPortsOutput)
}

// Access protocol types.
func (o WafDomainOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Whether to enable proxy configuration.
func (o WafDomainOutput) ProxyConfig() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ProxyConfig }).(pulumi.IntOutput)
}

// The timeout period for establishing a connection between the WAF and the backend server.
func (o WafDomainOutput) ProxyConnectTimeOut() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ProxyConnectTimeOut }).(pulumi.IntOutput)
}

// The number of reusable WAF origin long connections.
func (o WafDomainOutput) ProxyKeepAlive() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ProxyKeepAlive }).(pulumi.IntOutput)
}

// Idle long connection timeout period.
func (o WafDomainOutput) ProxyKeepAliveTimeOut() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ProxyKeepAliveTimeOut }).(pulumi.IntOutput)
}

// The timeout period during which WAF reads the response from the backend server.
func (o WafDomainOutput) ProxyReadTimeOut() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ProxyReadTimeOut }).(pulumi.IntOutput)
}

// The number of retries for WAF back to source.
func (o WafDomainOutput) ProxyRetry() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ProxyRetry }).(pulumi.IntOutput)
}

// The timeout period during which the WAF transmits the request to the backend server.
func (o WafDomainOutput) ProxyWriteTimeOut() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.ProxyWriteTimeOut }).(pulumi.IntOutput)
}

// Connect to the source return mode.
func (o WafDomainOutput) PublicRealServer() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.PublicRealServer }).(pulumi.IntOutput)
}

// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
func (o WafDomainOutput) RedirectHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.BoolPtrOutput { return v.RedirectHttps }).(pulumi.BoolPtrOutput)
}

// The IP of the WAF protection instance.
func (o WafDomainOutput) ServerIps() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.ServerIps }).(pulumi.StringOutput)
}

// WAF source IP.
func (o WafDomainOutput) SrcIps() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.SrcIps }).(pulumi.StringOutput)
}

// Encryption kit.
func (o WafDomainOutput) SslCiphers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringArrayOutput { return v.SslCiphers }).(pulumi.StringArrayOutput)
}

// TLS protocol version.
func (o WafDomainOutput) SslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringArrayOutput { return v.SslProtocols }).(pulumi.StringArrayOutput)
}

// The status of access.
func (o WafDomainOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
func (o WafDomainOutput) SystemBotEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.SystemBotEnable }).(pulumi.IntOutput)
}

// Whether to enable the page tamper-proof policy. Works only on modified scenes.
func (o WafDomainOutput) TamperProofEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.TamperProofEnable }).(pulumi.IntOutput)
}

// Whether to enable the log service.
func (o WafDomainOutput) TlsEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.TlsEnable }).(pulumi.IntOutput)
}

// Details of log field configuration. Works only on modified scenes.
func (o WafDomainOutput) TlsFieldsConfig() WafDomainTlsFieldsConfigPtrOutput {
	return o.ApplyT(func(v *WafDomain) WafDomainTlsFieldsConfigPtrOutput { return v.TlsFieldsConfig }).(WafDomainTlsFieldsConfigPtrOutput)
}

// The update time.
func (o WafDomainOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
func (o WafDomainOutput) VolcCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.VolcCertificateId }).(pulumi.StringOutput)
}

// The ID of vpc.
func (o WafDomainOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
func (o WafDomainOutput) WafEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.WafEnable }).(pulumi.IntOutput)
}

// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
func (o WafDomainOutput) WafWhiteReqEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.WafWhiteReqEnable }).(pulumi.IntOutput)
}

// Whether to enable the access list policy. Works only on modified scenes.
func (o WafDomainOutput) WhiteEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.WhiteEnable }).(pulumi.IntOutput)
}

// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
func (o WafDomainOutput) WhiteFieldEnable() pulumi.IntOutput {
	return o.ApplyT(func(v *WafDomain) pulumi.IntOutput { return v.WhiteFieldEnable }).(pulumi.IntOutput)
}

type WafDomainArrayOutput struct{ *pulumi.OutputState }

func (WafDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WafDomain)(nil)).Elem()
}

func (o WafDomainArrayOutput) ToWafDomainArrayOutput() WafDomainArrayOutput {
	return o
}

func (o WafDomainArrayOutput) ToWafDomainArrayOutputWithContext(ctx context.Context) WafDomainArrayOutput {
	return o
}

func (o WafDomainArrayOutput) Index(i pulumi.IntInput) WafDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WafDomain {
		return vs[0].([]*WafDomain)[vs[1].(int)]
	}).(WafDomainOutput)
}

type WafDomainMapOutput struct{ *pulumi.OutputState }

func (WafDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WafDomain)(nil)).Elem()
}

func (o WafDomainMapOutput) ToWafDomainMapOutput() WafDomainMapOutput {
	return o
}

func (o WafDomainMapOutput) ToWafDomainMapOutputWithContext(ctx context.Context) WafDomainMapOutput {
	return o
}

func (o WafDomainMapOutput) MapIndex(k pulumi.StringInput) WafDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WafDomain {
		return vs[0].(map[string]*WafDomain)[vs[1].(string)]
	}).(WafDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WafDomainInput)(nil)).Elem(), &WafDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafDomainArrayInput)(nil)).Elem(), WafDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafDomainMapInput)(nil)).Elem(), WafDomainMap{})
	pulumi.RegisterOutputType(WafDomainOutput{})
	pulumi.RegisterOutputType(WafDomainArrayOutput{})
	pulumi.RegisterOutputType(WafDomainMapOutput{})
}
