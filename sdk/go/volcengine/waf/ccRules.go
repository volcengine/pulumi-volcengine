// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of waf cc rules
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/waf"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := waf.GetCcRules(ctx, &waf.GetCcRulesArgs{
// CcTypes: interface{}{
// 1,
// },
// Host: "www.tf-test.com",
// PathOrderBy: "ASC",
// RuleName: pulumi.StringRef("tf"),
// }, nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// Deprecated: volcengine.waf.CcRules has been deprecated in favor of volcengine.waf.getCcRules
func CcRules(ctx *pulumi.Context, args *CcRulesArgs, opts ...pulumi.InvokeOption) (*CcRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv CcRulesResult
	err := ctx.Invoke("volcengine:waf/ccRules:CcRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking CcRules.
type CcRulesArgs struct {
	// The actions performed on subsequent requests after meeting the statistical conditions.
	CcTypes []int `pulumi:"ccTypes"`
	// Website domain names that require the setting of protection rules.
	Host string `pulumi:"host"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The list shows the order.
	PathOrderBy string `pulumi:"pathOrderBy"`
	// Search by rule name in a fuzzy manner.
	RuleName *string `pulumi:"ruleName"`
	// Search precisely according to the rule ID.
	RuleTag *string `pulumi:"ruleTag"`
	// Fuzzy search by the requested path.
	Url *string `pulumi:"url"`
}

// A collection of values returned by CcRules.
type CcRulesResult struct {
	// The actions performed on subsequent requests after meeting the statistical conditions.
	CcTypes []int `pulumi:"ccTypes"`
	// The collection of query.
	Datas []CcRulesData `pulumi:"datas"`
	// Protected website domain names.
	Host string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	NameRegex   *string `pulumi:"nameRegex"`
	OutputFile  *string `pulumi:"outputFile"`
	PathOrderBy string  `pulumi:"pathOrderBy"`
	RuleName    *string `pulumi:"ruleName"`
	// Rule label, that is, the complete rule ID.
	RuleTag *string `pulumi:"ruleTag"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The requested path.
	Url *string `pulumi:"url"`
}

func CcRulesOutput(ctx *pulumi.Context, args CcRulesOutputArgs, opts ...pulumi.InvokeOption) CcRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (CcRulesResult, error) {
			args := v.(CcRulesArgs)
			r, err := CcRules(ctx, &args, opts...)
			var s CcRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(CcRulesResultOutput)
}

// A collection of arguments for invoking CcRules.
type CcRulesOutputArgs struct {
	// The actions performed on subsequent requests after meeting the statistical conditions.
	CcTypes pulumi.IntArrayInput `pulumi:"ccTypes"`
	// Website domain names that require the setting of protection rules.
	Host pulumi.StringInput `pulumi:"host"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The list shows the order.
	PathOrderBy pulumi.StringInput `pulumi:"pathOrderBy"`
	// Search by rule name in a fuzzy manner.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	// Search precisely according to the rule ID.
	RuleTag pulumi.StringPtrInput `pulumi:"ruleTag"`
	// Fuzzy search by the requested path.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (CcRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CcRulesArgs)(nil)).Elem()
}

// A collection of values returned by CcRules.
type CcRulesResultOutput struct{ *pulumi.OutputState }

func (CcRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CcRulesResult)(nil)).Elem()
}

func (o CcRulesResultOutput) ToCcRulesResultOutput() CcRulesResultOutput {
	return o
}

func (o CcRulesResultOutput) ToCcRulesResultOutputWithContext(ctx context.Context) CcRulesResultOutput {
	return o
}

// The actions performed on subsequent requests after meeting the statistical conditions.
func (o CcRulesResultOutput) CcTypes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v CcRulesResult) []int { return v.CcTypes }).(pulumi.IntArrayOutput)
}

// The collection of query.
func (o CcRulesResultOutput) Datas() CcRulesDataArrayOutput {
	return o.ApplyT(func(v CcRulesResult) []CcRulesData { return v.Datas }).(CcRulesDataArrayOutput)
}

// Protected website domain names.
func (o CcRulesResultOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v CcRulesResult) string { return v.Host }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o CcRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CcRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o CcRulesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcRulesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o CcRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o CcRulesResultOutput) PathOrderBy() pulumi.StringOutput {
	return o.ApplyT(func(v CcRulesResult) string { return v.PathOrderBy }).(pulumi.StringOutput)
}

func (o CcRulesResultOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcRulesResult) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Rule label, that is, the complete rule ID.
func (o CcRulesResultOutput) RuleTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcRulesResult) *string { return v.RuleTag }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o CcRulesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v CcRulesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The requested path.
func (o CcRulesResultOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CcRulesResult) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CcRulesResultOutput{})
}
