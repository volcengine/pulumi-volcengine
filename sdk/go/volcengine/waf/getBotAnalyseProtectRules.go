// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of waf bot analyse protect rules
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := waf.GetBotAnalyseProtectRules(ctx, &waf.GetBotAnalyseProtectRulesArgs{
//				BotSpace: "BotRepeat",
//				Host:     "www.tf-test.com",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetBotAnalyseProtectRules(ctx *pulumi.Context, args *GetBotAnalyseProtectRulesArgs, opts ...pulumi.InvokeOption) (*GetBotAnalyseProtectRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBotAnalyseProtectRulesResult
	err := ctx.Invoke("volcengine:waf/getBotAnalyseProtectRules:getBotAnalyseProtectRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBotAnalyseProtectRules.
type GetBotAnalyseProtectRulesArgs struct {
	// Bot protection rule type.
	BotSpace string `pulumi:"botSpace"`
	// Website domain names that require the setting of protection rules.
	Host string `pulumi:"host"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Protective path.
	Path *string `pulumi:"path"`
	// The name of the project to which your domain names belong.
	ProjectName *string `pulumi:"projectName"`
	// Unique identification of rules.
	RuleTag *string `pulumi:"ruleTag"`
}

// A collection of values returned by getBotAnalyseProtectRules.
type GetBotAnalyseProtectRulesResult struct {
	BotSpace string `pulumi:"botSpace"`
	// The details of the Bot rules.
	Datas []GetBotAnalyseProtectRulesData `pulumi:"datas"`
	// The domain name where the protection rule is located.
	Host string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of rule.
	Name       *string `pulumi:"name"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// Request path.
	Path        *string `pulumi:"path"`
	ProjectName *string `pulumi:"projectName"`
	// Rule label, that is, the complete rule ID.
	RuleTag *string `pulumi:"ruleTag"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetBotAnalyseProtectRulesOutput(ctx *pulumi.Context, args GetBotAnalyseProtectRulesOutputArgs, opts ...pulumi.InvokeOption) GetBotAnalyseProtectRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBotAnalyseProtectRulesResult, error) {
			args := v.(GetBotAnalyseProtectRulesArgs)
			r, err := GetBotAnalyseProtectRules(ctx, &args, opts...)
			var s GetBotAnalyseProtectRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBotAnalyseProtectRulesResultOutput)
}

// A collection of arguments for invoking getBotAnalyseProtectRules.
type GetBotAnalyseProtectRulesOutputArgs struct {
	// Bot protection rule type.
	BotSpace pulumi.StringInput `pulumi:"botSpace"`
	// Website domain names that require the setting of protection rules.
	Host pulumi.StringInput `pulumi:"host"`
	// The name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Protective path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The name of the project to which your domain names belong.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Unique identification of rules.
	RuleTag pulumi.StringPtrInput `pulumi:"ruleTag"`
}

func (GetBotAnalyseProtectRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotAnalyseProtectRulesArgs)(nil)).Elem()
}

// A collection of values returned by getBotAnalyseProtectRules.
type GetBotAnalyseProtectRulesResultOutput struct{ *pulumi.OutputState }

func (GetBotAnalyseProtectRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBotAnalyseProtectRulesResult)(nil)).Elem()
}

func (o GetBotAnalyseProtectRulesResultOutput) ToGetBotAnalyseProtectRulesResultOutput() GetBotAnalyseProtectRulesResultOutput {
	return o
}

func (o GetBotAnalyseProtectRulesResultOutput) ToGetBotAnalyseProtectRulesResultOutputWithContext(ctx context.Context) GetBotAnalyseProtectRulesResultOutput {
	return o
}

func (o GetBotAnalyseProtectRulesResultOutput) BotSpace() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) string { return v.BotSpace }).(pulumi.StringOutput)
}

// The details of the Bot rules.
func (o GetBotAnalyseProtectRulesResultOutput) Datas() GetBotAnalyseProtectRulesDataArrayOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) []GetBotAnalyseProtectRulesData { return v.Datas }).(GetBotAnalyseProtectRulesDataArrayOutput)
}

// The domain name where the protection rule is located.
func (o GetBotAnalyseProtectRulesResultOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) string { return v.Host }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBotAnalyseProtectRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of rule.
func (o GetBotAnalyseProtectRulesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetBotAnalyseProtectRulesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetBotAnalyseProtectRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// Request path.
func (o GetBotAnalyseProtectRulesResultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o GetBotAnalyseProtectRulesResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Rule label, that is, the complete rule ID.
func (o GetBotAnalyseProtectRulesResultOutput) RuleTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) *string { return v.RuleTag }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetBotAnalyseProtectRulesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBotAnalyseProtectRulesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBotAnalyseProtectRulesResultOutput{})
}
