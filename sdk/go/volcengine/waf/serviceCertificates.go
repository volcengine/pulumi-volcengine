// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of waf service certificates
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := waf.GetServiceCertificates(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.waf.ServiceCertificates has been deprecated in favor of volcengine.waf.getServiceCertificates
func ServiceCertificates(ctx *pulumi.Context, args *ServiceCertificatesArgs, opts ...pulumi.InvokeOption) (*ServiceCertificatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ServiceCertificatesResult
	err := ctx.Invoke("volcengine:waf/serviceCertificates:ServiceCertificates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ServiceCertificates.
type ServiceCertificatesArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by ServiceCertificates.
type ServiceCertificatesResult struct {
	// The Information of the certificate.
	Datas []ServiceCertificatesData `pulumi:"datas"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func ServiceCertificatesOutput(ctx *pulumi.Context, args ServiceCertificatesOutputArgs, opts ...pulumi.InvokeOption) ServiceCertificatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ServiceCertificatesResult, error) {
			args := v.(ServiceCertificatesArgs)
			r, err := ServiceCertificates(ctx, &args, opts...)
			var s ServiceCertificatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ServiceCertificatesResultOutput)
}

// A collection of arguments for invoking ServiceCertificates.
type ServiceCertificatesOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (ServiceCertificatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCertificatesArgs)(nil)).Elem()
}

// A collection of values returned by ServiceCertificates.
type ServiceCertificatesResultOutput struct{ *pulumi.OutputState }

func (ServiceCertificatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCertificatesResult)(nil)).Elem()
}

func (o ServiceCertificatesResultOutput) ToServiceCertificatesResultOutput() ServiceCertificatesResultOutput {
	return o
}

func (o ServiceCertificatesResultOutput) ToServiceCertificatesResultOutputWithContext(ctx context.Context) ServiceCertificatesResultOutput {
	return o
}

// The Information of the certificate.
func (o ServiceCertificatesResultOutput) Datas() ServiceCertificatesDataArrayOutput {
	return o.ApplyT(func(v ServiceCertificatesResult) []ServiceCertificatesData { return v.Datas }).(ServiceCertificatesDataArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ServiceCertificatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCertificatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ServiceCertificatesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCertificatesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o ServiceCertificatesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCertificatesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o ServiceCertificatesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceCertificatesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceCertificatesResultOutput{})
}
