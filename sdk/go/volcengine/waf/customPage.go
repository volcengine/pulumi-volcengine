// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage waf custom page
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/waf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := waf.NewCustomPage(ctx, "foo", &waf.CustomPageArgs{
//				Accurate: &waf.CustomPageAccurateArgs{
//					AccurateRules: waf.CustomPageAccurateAccurateRuleArray{
//						&waf.CustomPageAccurateAccurateRuleArgs{
//							HttpObj:     pulumi.String("request.uri"),
//							ObjType:     pulumi.Int(1),
//							Opretar:     pulumi.Int(2),
//							Property:    pulumi.Int(0),
//							ValueString: pulumi.String("tf"),
//						},
//						&waf.CustomPageAccurateAccurateRuleArgs{
//							HttpObj:     pulumi.String("request.schema"),
//							ObjType:     pulumi.Int(0),
//							Opretar:     pulumi.Int(2),
//							Property:    pulumi.Int(0),
//							ValueString: pulumi.String("tf-2"),
//						},
//					},
//					Logic: pulumi.Int(2),
//				},
//				Advanced:    pulumi.Int(1),
//				Body:        pulumi.String("tf-test-body"),
//				ClientIp:    pulumi.String("ALL"),
//				Code:        pulumi.Int(403),
//				ContentType: pulumi.String("text/html"),
//				Description: pulumi.String("tf-test"),
//				Enable:      pulumi.Int(1),
//				Host:        pulumi.String("www.123.com"),
//				PageMode:    pulumi.Int(1),
//				Policy:      pulumi.Int(1),
//				ProjectName: pulumi.String("default"),
//				RedirectUrl: pulumi.String("/test/tf/path"),
//				Url:         pulumi.String("/tf-test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// WafCustomPage can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:waf/customPage:CustomPage default resource_id:Host
// ```
type CustomPage struct {
	pulumi.CustomResourceState

	// Advanced conditions.
	Accurate CustomPageAccurateOutput `pulumi:"accurate"`
	// Whether to configure advanced conditions.
	Advanced pulumi.IntOutput `pulumi:"advanced"`
	// The layout content of the response page.
	Body pulumi.StringOutput `pulumi:"body"`
	// Fill in ALL, which means this rule will take effect on all IP addresses.
	ClientIp pulumi.StringOutput `pulumi:"clientIp"`
	// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
	Code pulumi.IntOutput `pulumi:"code"`
	// The layout template of the response page. Required if PageMode=0 or 1.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// Rule description.
	Description pulumi.StringOutput `pulumi:"description"`
	// Whether to enable the rule.
	Enable pulumi.IntOutput `pulumi:"enable"`
	// The ID of the advanced conditional rule group.
	GroupId pulumi.IntOutput `pulumi:"groupId"`
	// Request header information.
	Header pulumi.StringOutput `pulumi:"header"`
	// Domain name to be protected.
	Host pulumi.StringOutput `pulumi:"host"`
	// The ID of Region.
	IsolationId pulumi.StringOutput `pulumi:"isolationId"`
	// Rule name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The layout template of the response page.
	PageMode pulumi.IntOutput `pulumi:"pageMode"`
	// Action to be taken on requests that match the rule.
	Policy pulumi.IntOutput `pulumi:"policy"`
	// The name of the project to which your domain names belong.
	ProjectName pulumi.StringPtrOutput `pulumi:"projectName"`
	// The path where users should be redirected.
	RedirectUrl pulumi.StringOutput `pulumi:"redirectUrl"`
	// Unique identification of the rules.
	RuleTag pulumi.StringOutput `pulumi:"ruleTag"`
	// Rule update time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Match the path.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewCustomPage registers a new resource with the given unique name, arguments, and options.
func NewCustomPage(ctx *pulumi.Context,
	name string, args *CustomPageArgs, opts ...pulumi.ResourceOption) (*CustomPage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientIp == nil {
		return nil, errors.New("invalid value for required argument 'ClientIp'")
	}
	if args.Code == nil {
		return nil, errors.New("invalid value for required argument 'Code'")
	}
	if args.Enable == nil {
		return nil, errors.New("invalid value for required argument 'Enable'")
	}
	if args.Host == nil {
		return nil, errors.New("invalid value for required argument 'Host'")
	}
	if args.PageMode == nil {
		return nil, errors.New("invalid value for required argument 'PageMode'")
	}
	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomPage
	err := ctx.RegisterResource("volcengine:waf/customPage:CustomPage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomPage gets an existing CustomPage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomPage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomPageState, opts ...pulumi.ResourceOption) (*CustomPage, error) {
	var resource CustomPage
	err := ctx.ReadResource("volcengine:waf/customPage:CustomPage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomPage resources.
type customPageState struct {
	// Advanced conditions.
	Accurate *CustomPageAccurate `pulumi:"accurate"`
	// Whether to configure advanced conditions.
	Advanced *int `pulumi:"advanced"`
	// The layout content of the response page.
	Body *string `pulumi:"body"`
	// Fill in ALL, which means this rule will take effect on all IP addresses.
	ClientIp *string `pulumi:"clientIp"`
	// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
	Code *int `pulumi:"code"`
	// The layout template of the response page. Required if PageMode=0 or 1.
	ContentType *string `pulumi:"contentType"`
	// Rule description.
	Description *string `pulumi:"description"`
	// Whether to enable the rule.
	Enable *int `pulumi:"enable"`
	// The ID of the advanced conditional rule group.
	GroupId *int `pulumi:"groupId"`
	// Request header information.
	Header *string `pulumi:"header"`
	// Domain name to be protected.
	Host *string `pulumi:"host"`
	// The ID of Region.
	IsolationId *string `pulumi:"isolationId"`
	// Rule name.
	Name *string `pulumi:"name"`
	// The layout template of the response page.
	PageMode *int `pulumi:"pageMode"`
	// Action to be taken on requests that match the rule.
	Policy *int `pulumi:"policy"`
	// The name of the project to which your domain names belong.
	ProjectName *string `pulumi:"projectName"`
	// The path where users should be redirected.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// Unique identification of the rules.
	RuleTag *string `pulumi:"ruleTag"`
	// Rule update time.
	UpdateTime *string `pulumi:"updateTime"`
	// Match the path.
	Url *string `pulumi:"url"`
}

type CustomPageState struct {
	// Advanced conditions.
	Accurate CustomPageAccuratePtrInput
	// Whether to configure advanced conditions.
	Advanced pulumi.IntPtrInput
	// The layout content of the response page.
	Body pulumi.StringPtrInput
	// Fill in ALL, which means this rule will take effect on all IP addresses.
	ClientIp pulumi.StringPtrInput
	// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
	Code pulumi.IntPtrInput
	// The layout template of the response page. Required if PageMode=0 or 1.
	ContentType pulumi.StringPtrInput
	// Rule description.
	Description pulumi.StringPtrInput
	// Whether to enable the rule.
	Enable pulumi.IntPtrInput
	// The ID of the advanced conditional rule group.
	GroupId pulumi.IntPtrInput
	// Request header information.
	Header pulumi.StringPtrInput
	// Domain name to be protected.
	Host pulumi.StringPtrInput
	// The ID of Region.
	IsolationId pulumi.StringPtrInput
	// Rule name.
	Name pulumi.StringPtrInput
	// The layout template of the response page.
	PageMode pulumi.IntPtrInput
	// Action to be taken on requests that match the rule.
	Policy pulumi.IntPtrInput
	// The name of the project to which your domain names belong.
	ProjectName pulumi.StringPtrInput
	// The path where users should be redirected.
	RedirectUrl pulumi.StringPtrInput
	// Unique identification of the rules.
	RuleTag pulumi.StringPtrInput
	// Rule update time.
	UpdateTime pulumi.StringPtrInput
	// Match the path.
	Url pulumi.StringPtrInput
}

func (CustomPageState) ElementType() reflect.Type {
	return reflect.TypeOf((*customPageState)(nil)).Elem()
}

type customPageArgs struct {
	// Advanced conditions.
	Accurate *CustomPageAccurate `pulumi:"accurate"`
	// Whether to configure advanced conditions.
	Advanced *int `pulumi:"advanced"`
	// The layout content of the response page.
	Body *string `pulumi:"body"`
	// Fill in ALL, which means this rule will take effect on all IP addresses.
	ClientIp string `pulumi:"clientIp"`
	// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
	Code int `pulumi:"code"`
	// The layout template of the response page. Required if PageMode=0 or 1.
	ContentType *string `pulumi:"contentType"`
	// Rule description.
	Description *string `pulumi:"description"`
	// Whether to enable the rule.
	Enable int `pulumi:"enable"`
	// Domain name to be protected.
	Host string `pulumi:"host"`
	// Rule name.
	Name *string `pulumi:"name"`
	// The layout template of the response page.
	PageMode int `pulumi:"pageMode"`
	// Action to be taken on requests that match the rule.
	Policy int `pulumi:"policy"`
	// The name of the project to which your domain names belong.
	ProjectName *string `pulumi:"projectName"`
	// The path where users should be redirected.
	RedirectUrl *string `pulumi:"redirectUrl"`
	// Match the path.
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a CustomPage resource.
type CustomPageArgs struct {
	// Advanced conditions.
	Accurate CustomPageAccuratePtrInput
	// Whether to configure advanced conditions.
	Advanced pulumi.IntPtrInput
	// The layout content of the response page.
	Body pulumi.StringPtrInput
	// Fill in ALL, which means this rule will take effect on all IP addresses.
	ClientIp pulumi.StringInput
	// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
	Code pulumi.IntInput
	// The layout template of the response page. Required if PageMode=0 or 1.
	ContentType pulumi.StringPtrInput
	// Rule description.
	Description pulumi.StringPtrInput
	// Whether to enable the rule.
	Enable pulumi.IntInput
	// Domain name to be protected.
	Host pulumi.StringInput
	// Rule name.
	Name pulumi.StringPtrInput
	// The layout template of the response page.
	PageMode pulumi.IntInput
	// Action to be taken on requests that match the rule.
	Policy pulumi.IntInput
	// The name of the project to which your domain names belong.
	ProjectName pulumi.StringPtrInput
	// The path where users should be redirected.
	RedirectUrl pulumi.StringPtrInput
	// Match the path.
	Url pulumi.StringInput
}

func (CustomPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customPageArgs)(nil)).Elem()
}

type CustomPageInput interface {
	pulumi.Input

	ToCustomPageOutput() CustomPageOutput
	ToCustomPageOutputWithContext(ctx context.Context) CustomPageOutput
}

func (*CustomPage) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPage)(nil)).Elem()
}

func (i *CustomPage) ToCustomPageOutput() CustomPageOutput {
	return i.ToCustomPageOutputWithContext(context.Background())
}

func (i *CustomPage) ToCustomPageOutputWithContext(ctx context.Context) CustomPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPageOutput)
}

// CustomPageArrayInput is an input type that accepts CustomPageArray and CustomPageArrayOutput values.
// You can construct a concrete instance of `CustomPageArrayInput` via:
//
//	CustomPageArray{ CustomPageArgs{...} }
type CustomPageArrayInput interface {
	pulumi.Input

	ToCustomPageArrayOutput() CustomPageArrayOutput
	ToCustomPageArrayOutputWithContext(context.Context) CustomPageArrayOutput
}

type CustomPageArray []CustomPageInput

func (CustomPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomPage)(nil)).Elem()
}

func (i CustomPageArray) ToCustomPageArrayOutput() CustomPageArrayOutput {
	return i.ToCustomPageArrayOutputWithContext(context.Background())
}

func (i CustomPageArray) ToCustomPageArrayOutputWithContext(ctx context.Context) CustomPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPageArrayOutput)
}

// CustomPageMapInput is an input type that accepts CustomPageMap and CustomPageMapOutput values.
// You can construct a concrete instance of `CustomPageMapInput` via:
//
//	CustomPageMap{ "key": CustomPageArgs{...} }
type CustomPageMapInput interface {
	pulumi.Input

	ToCustomPageMapOutput() CustomPageMapOutput
	ToCustomPageMapOutputWithContext(context.Context) CustomPageMapOutput
}

type CustomPageMap map[string]CustomPageInput

func (CustomPageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomPage)(nil)).Elem()
}

func (i CustomPageMap) ToCustomPageMapOutput() CustomPageMapOutput {
	return i.ToCustomPageMapOutputWithContext(context.Background())
}

func (i CustomPageMap) ToCustomPageMapOutputWithContext(ctx context.Context) CustomPageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPageMapOutput)
}

type CustomPageOutput struct{ *pulumi.OutputState }

func (CustomPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPage)(nil)).Elem()
}

func (o CustomPageOutput) ToCustomPageOutput() CustomPageOutput {
	return o
}

func (o CustomPageOutput) ToCustomPageOutputWithContext(ctx context.Context) CustomPageOutput {
	return o
}

// Advanced conditions.
func (o CustomPageOutput) Accurate() CustomPageAccurateOutput {
	return o.ApplyT(func(v *CustomPage) CustomPageAccurateOutput { return v.Accurate }).(CustomPageAccurateOutput)
}

// Whether to configure advanced conditions.
func (o CustomPageOutput) Advanced() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.IntOutput { return v.Advanced }).(pulumi.IntOutput)
}

// The layout content of the response page.
func (o CustomPageOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.Body }).(pulumi.StringOutput)
}

// Fill in ALL, which means this rule will take effect on all IP addresses.
func (o CustomPageOutput) ClientIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.ClientIp }).(pulumi.StringOutput)
}

// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
func (o CustomPageOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.IntOutput { return v.Code }).(pulumi.IntOutput)
}

// The layout template of the response page. Required if PageMode=0 or 1.
func (o CustomPageOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

// Rule description.
func (o CustomPageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Whether to enable the rule.
func (o CustomPageOutput) Enable() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.IntOutput { return v.Enable }).(pulumi.IntOutput)
}

// The ID of the advanced conditional rule group.
func (o CustomPageOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.IntOutput { return v.GroupId }).(pulumi.IntOutput)
}

// Request header information.
func (o CustomPageOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Domain name to be protected.
func (o CustomPageOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// The ID of Region.
func (o CustomPageOutput) IsolationId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.IsolationId }).(pulumi.StringOutput)
}

// Rule name.
func (o CustomPageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The layout template of the response page.
func (o CustomPageOutput) PageMode() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.IntOutput { return v.PageMode }).(pulumi.IntOutput)
}

// Action to be taken on requests that match the rule.
func (o CustomPageOutput) Policy() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.IntOutput { return v.Policy }).(pulumi.IntOutput)
}

// The name of the project to which your domain names belong.
func (o CustomPageOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringPtrOutput { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// The path where users should be redirected.
func (o CustomPageOutput) RedirectUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.RedirectUrl }).(pulumi.StringOutput)
}

// Unique identification of the rules.
func (o CustomPageOutput) RuleTag() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.RuleTag }).(pulumi.StringOutput)
}

// Rule update time.
func (o CustomPageOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Match the path.
func (o CustomPageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPage) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type CustomPageArrayOutput struct{ *pulumi.OutputState }

func (CustomPageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomPage)(nil)).Elem()
}

func (o CustomPageArrayOutput) ToCustomPageArrayOutput() CustomPageArrayOutput {
	return o
}

func (o CustomPageArrayOutput) ToCustomPageArrayOutputWithContext(ctx context.Context) CustomPageArrayOutput {
	return o
}

func (o CustomPageArrayOutput) Index(i pulumi.IntInput) CustomPageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomPage {
		return vs[0].([]*CustomPage)[vs[1].(int)]
	}).(CustomPageOutput)
}

type CustomPageMapOutput struct{ *pulumi.OutputState }

func (CustomPageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomPage)(nil)).Elem()
}

func (o CustomPageMapOutput) ToCustomPageMapOutput() CustomPageMapOutput {
	return o
}

func (o CustomPageMapOutput) ToCustomPageMapOutputWithContext(ctx context.Context) CustomPageMapOutput {
	return o
}

func (o CustomPageMapOutput) MapIndex(k pulumi.StringInput) CustomPageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomPage {
		return vs[0].(map[string]*CustomPage)[vs[1].(string)]
	}).(CustomPageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPageInput)(nil)).Elem(), &CustomPage{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPageArrayInput)(nil)).Elem(), CustomPageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPageMapInput)(nil)).Elem(), CustomPageMap{})
	pulumi.RegisterOutputType(CustomPageOutput{})
	pulumi.RegisterOutputType(CustomPageArrayOutput{})
	pulumi.RegisterOutputType(CustomPageMapOutput{})
}
