// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage apig upstream
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/apig"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			foo1, err := vpc.NewSubnet(ctx, "foo1", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			foo2, err := vpc.NewSubnet(ctx, "foo2", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.1.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[1].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooApigGateway, err := apig.NewApigGateway(ctx, "fooApigGateway", &apig.ApigGatewayArgs{
//				Type:        pulumi.String("standard"),
//				Comments:    pulumi.String("acc-test"),
//				ProjectName: pulumi.String("default"),
//				Tags: apig.ApigGatewayTagArray{
//					&apig.ApigGatewayTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//				NetworkSpec: &apig.ApigGatewayNetworkSpecArgs{
//					VpcId: fooVpc.ID(),
//					SubnetIds: pulumi.StringArray{
//						foo1.ID(),
//						foo2.ID(),
//					},
//				},
//				ResourceSpec: &apig.ApigGatewayResourceSpecArgs{
//					Replicas:                 pulumi.Int(2),
//					InstanceSpecCode:         pulumi.String("1c2g"),
//					ClbSpecCode:              pulumi.String("small_1"),
//					PublicNetworkBillingType: pulumi.String("bandwidth"),
//					PublicNetworkBandwidth:   pulumi.Int(1),
//					NetworkType: &apig.ApigGatewayResourceSpecNetworkTypeArgs{
//						EnablePublicNetwork:  pulumi.Bool(true),
//						EnablePrivateNetwork: pulumi.Bool(true),
//					},
//				},
//				LogSpec: &apig.ApigGatewayLogSpecArgs{
//					Enable:    pulumi.Bool(true),
//					ProjectId: pulumi.String("d3cb87c0-faeb-4074-b1ee-9bd747865a76"),
//					TopicId:   pulumi.String("d339482e-d86d-4bd8-a9bb-f270417f00a1"),
//				},
//				MonitorSpec: &apig.ApigGatewayMonitorSpecArgs{
//					Enable:      pulumi.Bool(true),
//					WorkspaceId: pulumi.String("4ed1caf3-279d-4c5f-8301-87ea38e92ffc"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apig.NewApigGatewayService(ctx, "fooApigGatewayService", &apig.ApigGatewayServiceArgs{
//				GatewayId:   fooApigGateway.ID(),
//				ServiceName: pulumi.String("acc-test-apig-service"),
//				Comments:    pulumi.String("acc-test"),
//				Protocols: pulumi.StringArray{
//					pulumi.String("HTTP"),
//					pulumi.String("HTTPS"),
//				},
//				AuthSpec: &apig.ApigGatewayServiceAuthSpecArgs{
//					Enable: pulumi.Bool(false),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apig.NewApigUpstream(ctx, "foo-fixed-ip", &apig.ApigUpstreamArgs{
//				GatewayId:    fooApigGateway.ID(),
//				Comments:     pulumi.String("acc-test"),
//				ResourceType: pulumi.String("Console"),
//				Protocol:     pulumi.String("HTTP"),
//				LoadBalancerSettings: &apig.ApigUpstreamLoadBalancerSettingsArgs{
//					LbPolicy: pulumi.String("ConsistentHashLB"),
//					ConsistentHashLb: &apig.ApigUpstreamLoadBalancerSettingsConsistentHashLbArgs{
//						HashKey: pulumi.String("HTTPCookie"),
//						HttpCookie: &apig.ApigUpstreamLoadBalancerSettingsConsistentHashLbHttpCookieArgs{
//							Name: pulumi.String("test"),
//							Path: pulumi.String("/"),
//							Ttl:  pulumi.Int(300),
//						},
//					},
//				},
//				TlsSettings: &apig.ApigUpstreamTlsSettingsArgs{
//					TlsMode: pulumi.String("SIMPLE"),
//					Sni:     pulumi.String("test"),
//				},
//				CircuitBreakingSettings: &apig.ApigUpstreamCircuitBreakingSettingsArgs{
//					Enable:             pulumi.Bool(false),
//					ConsecutiveErrors:  pulumi.Int(5),
//					Interval:           pulumi.Int(10000),
//					BaseEjectionTime:   pulumi.Int(30000),
//					MaxEjectionPercent: pulumi.Int(20),
//					MinHealthPercent:   pulumi.Int(60),
//				},
//				SourceType: pulumi.String("FixedIP"),
//				UpstreamSpec: &apig.ApigUpstreamUpstreamSpecArgs{
//					FixedIpLists: apig.ApigUpstreamUpstreamSpecFixedIpListArray{
//						&apig.ApigUpstreamUpstreamSpecFixedIpListArgs{
//							Ip:   pulumi.String("172.16.0.10"),
//							Port: pulumi.Int(8080),
//						},
//						&apig.ApigUpstreamUpstreamSpecFixedIpListArgs{
//							Ip:   pulumi.String("172.16.0.20"),
//							Port: pulumi.Int(8090),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apig.NewApigUpstream(ctx, "foo-vefaas", &apig.ApigUpstreamArgs{
//				GatewayId:    fooApigGateway.ID(),
//				Comments:     pulumi.String("acc-test"),
//				ResourceType: pulumi.String("Console"),
//				Protocol:     pulumi.String("HTTP"),
//				SourceType:   pulumi.String("VeFaas"),
//				UpstreamSpec: &apig.ApigUpstreamUpstreamSpecArgs{
//					VeFaas: &apig.ApigUpstreamUpstreamSpecVeFaasArgs{
//						FunctionId: pulumi.String("crnrfajj"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apig.NewApigUpstreamSource(ctx, "foo-k8sApigUpstreamSource", &apig.ApigUpstreamSourceArgs{
//				GatewayId:  fooApigGateway.ID(),
//				Comments:   pulumi.String("acc-test-k8s"),
//				SourceType: pulumi.String("K8S"),
//				SourceSpec: &apig.ApigUpstreamSourceSourceSpecArgs{
//					K8sSource: &apig.ApigUpstreamSourceSourceSpecK8sSourceArgs{
//						ClusterId: pulumi.String("cd197sac4mpmnruh7um80"),
//					},
//				},
//				IngressSettings: apig.ApigUpstreamSourceIngressSettingArray{
//					&apig.ApigUpstreamSourceIngressSettingArgs{
//						EnableIngress: pulumi.Bool(true),
//						UpdateStatus:  pulumi.Bool(true),
//						IngressClasses: pulumi.StringArray{
//							pulumi.String("test"),
//						},
//						WatchNamespaces: pulumi.StringArray{
//							pulumi.String("default"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apig.NewApigUpstream(ctx, "foo-k8sApigUpstream", &apig.ApigUpstreamArgs{
//				GatewayId:    fooApigGateway.ID(),
//				Comments:     pulumi.String("acc-test"),
//				ResourceType: pulumi.String("Console"),
//				Protocol:     pulumi.String("HTTP"),
//				LoadBalancerSettings: &apig.ApigUpstreamLoadBalancerSettingsArgs{
//					LbPolicy: pulumi.String("ConsistentHashLB"),
//					ConsistentHashLb: &apig.ApigUpstreamLoadBalancerSettingsConsistentHashLbArgs{
//						HashKey: pulumi.String("HTTPCookie"),
//						HttpCookie: &apig.ApigUpstreamLoadBalancerSettingsConsistentHashLbHttpCookieArgs{
//							Name: pulumi.String("test"),
//							Path: pulumi.String("/"),
//							Ttl:  pulumi.Int(300),
//						},
//					},
//				},
//				TlsSettings: &apig.ApigUpstreamTlsSettingsArgs{
//					TlsMode: pulumi.String("SIMPLE"),
//					Sni:     pulumi.String("test"),
//				},
//				CircuitBreakingSettings: &apig.ApigUpstreamCircuitBreakingSettingsArgs{
//					Enable:             pulumi.Bool(false),
//					ConsecutiveErrors:  pulumi.Int(5),
//					Interval:           pulumi.Int(10000),
//					BaseEjectionTime:   pulumi.Int(30000),
//					MaxEjectionPercent: pulumi.Int(20),
//					MinHealthPercent:   pulumi.Int(60),
//				},
//				SourceType: pulumi.String("K8S"),
//				UpstreamSpec: &apig.ApigUpstreamUpstreamSpecArgs{
//					K8sService: &apig.ApigUpstreamUpstreamSpecK8sServiceArgs{
//						Namespace: pulumi.String("default"),
//						Name:      pulumi.String("kubernetes"),
//						Port:      pulumi.Int(443),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				foo_k8sApigUpstreamSource,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ApigUpstream can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:apig/apigUpstream:ApigUpstream default resource_id
// ```
type ApigUpstream struct {
	pulumi.CustomResourceState

	// The circuit breaking settings of apig upstream.
	CircuitBreakingSettings ApigUpstreamCircuitBreakingSettingsOutput `pulumi:"circuitBreakingSettings"`
	// The comments of the apig upstream.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// The create time of apig upstream.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The gateway id of the apig upstream.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// The load balancer settings of apig upstream.
	LoadBalancerSettings ApigUpstreamLoadBalancerSettingsOutput `pulumi:"loadBalancerSettings"`
	// The name of the apig upstream.
	Name pulumi.StringOutput `pulumi:"name"`
	// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
	ResourceType pulumi.StringPtrOutput `pulumi:"resourceType"`
	// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// The tls settings of apig upstream.
	TlsSettings ApigUpstreamTlsSettingsOutput `pulumi:"tlsSettings"`
	// The update time of apig upstream version.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The upstream spec of apig upstream.
	UpstreamSpec ApigUpstreamUpstreamSpecOutput `pulumi:"upstreamSpec"`
	// The version details of apig upstream.
	VersionDetails ApigUpstreamVersionDetailArrayOutput `pulumi:"versionDetails"`
}

// NewApigUpstream registers a new resource with the given unique name, arguments, and options.
func NewApigUpstream(ctx *pulumi.Context,
	name string, args *ApigUpstreamArgs, opts ...pulumi.ResourceOption) (*ApigUpstream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.SourceType == nil {
		return nil, errors.New("invalid value for required argument 'SourceType'")
	}
	if args.UpstreamSpec == nil {
		return nil, errors.New("invalid value for required argument 'UpstreamSpec'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigUpstream
	err := ctx.RegisterResource("volcengine:apig/apigUpstream:ApigUpstream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigUpstream gets an existing ApigUpstream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigUpstream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigUpstreamState, opts ...pulumi.ResourceOption) (*ApigUpstream, error) {
	var resource ApigUpstream
	err := ctx.ReadResource("volcengine:apig/apigUpstream:ApigUpstream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigUpstream resources.
type apigUpstreamState struct {
	// The circuit breaking settings of apig upstream.
	CircuitBreakingSettings *ApigUpstreamCircuitBreakingSettings `pulumi:"circuitBreakingSettings"`
	// The comments of the apig upstream.
	Comments *string `pulumi:"comments"`
	// The create time of apig upstream.
	CreateTime *string `pulumi:"createTime"`
	// The gateway id of the apig upstream.
	GatewayId *string `pulumi:"gatewayId"`
	// The load balancer settings of apig upstream.
	LoadBalancerSettings *ApigUpstreamLoadBalancerSettings `pulumi:"loadBalancerSettings"`
	// The name of the apig upstream.
	Name *string `pulumi:"name"`
	// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
	Protocol *string `pulumi:"protocol"`
	// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
	ResourceType *string `pulumi:"resourceType"`
	// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
	SourceType *string `pulumi:"sourceType"`
	// The tls settings of apig upstream.
	TlsSettings *ApigUpstreamTlsSettings `pulumi:"tlsSettings"`
	// The update time of apig upstream version.
	UpdateTime *string `pulumi:"updateTime"`
	// The upstream spec of apig upstream.
	UpstreamSpec *ApigUpstreamUpstreamSpec `pulumi:"upstreamSpec"`
	// The version details of apig upstream.
	VersionDetails []ApigUpstreamVersionDetail `pulumi:"versionDetails"`
}

type ApigUpstreamState struct {
	// The circuit breaking settings of apig upstream.
	CircuitBreakingSettings ApigUpstreamCircuitBreakingSettingsPtrInput
	// The comments of the apig upstream.
	Comments pulumi.StringPtrInput
	// The create time of apig upstream.
	CreateTime pulumi.StringPtrInput
	// The gateway id of the apig upstream.
	GatewayId pulumi.StringPtrInput
	// The load balancer settings of apig upstream.
	LoadBalancerSettings ApigUpstreamLoadBalancerSettingsPtrInput
	// The name of the apig upstream.
	Name pulumi.StringPtrInput
	// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
	Protocol pulumi.StringPtrInput
	// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
	ResourceType pulumi.StringPtrInput
	// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
	SourceType pulumi.StringPtrInput
	// The tls settings of apig upstream.
	TlsSettings ApigUpstreamTlsSettingsPtrInput
	// The update time of apig upstream version.
	UpdateTime pulumi.StringPtrInput
	// The upstream spec of apig upstream.
	UpstreamSpec ApigUpstreamUpstreamSpecPtrInput
	// The version details of apig upstream.
	VersionDetails ApigUpstreamVersionDetailArrayInput
}

func (ApigUpstreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigUpstreamState)(nil)).Elem()
}

type apigUpstreamArgs struct {
	// The circuit breaking settings of apig upstream.
	CircuitBreakingSettings *ApigUpstreamCircuitBreakingSettings `pulumi:"circuitBreakingSettings"`
	// The comments of the apig upstream.
	Comments *string `pulumi:"comments"`
	// The gateway id of the apig upstream.
	GatewayId string `pulumi:"gatewayId"`
	// The load balancer settings of apig upstream.
	LoadBalancerSettings *ApigUpstreamLoadBalancerSettings `pulumi:"loadBalancerSettings"`
	// The name of the apig upstream.
	Name *string `pulumi:"name"`
	// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
	Protocol string `pulumi:"protocol"`
	// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
	ResourceType *string `pulumi:"resourceType"`
	// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
	SourceType string `pulumi:"sourceType"`
	// The tls settings of apig upstream.
	TlsSettings *ApigUpstreamTlsSettings `pulumi:"tlsSettings"`
	// The upstream spec of apig upstream.
	UpstreamSpec ApigUpstreamUpstreamSpec `pulumi:"upstreamSpec"`
}

// The set of arguments for constructing a ApigUpstream resource.
type ApigUpstreamArgs struct {
	// The circuit breaking settings of apig upstream.
	CircuitBreakingSettings ApigUpstreamCircuitBreakingSettingsPtrInput
	// The comments of the apig upstream.
	Comments pulumi.StringPtrInput
	// The gateway id of the apig upstream.
	GatewayId pulumi.StringInput
	// The load balancer settings of apig upstream.
	LoadBalancerSettings ApigUpstreamLoadBalancerSettingsPtrInput
	// The name of the apig upstream.
	Name pulumi.StringPtrInput
	// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
	Protocol pulumi.StringInput
	// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
	ResourceType pulumi.StringPtrInput
	// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
	SourceType pulumi.StringInput
	// The tls settings of apig upstream.
	TlsSettings ApigUpstreamTlsSettingsPtrInput
	// The upstream spec of apig upstream.
	UpstreamSpec ApigUpstreamUpstreamSpecInput
}

func (ApigUpstreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigUpstreamArgs)(nil)).Elem()
}

type ApigUpstreamInput interface {
	pulumi.Input

	ToApigUpstreamOutput() ApigUpstreamOutput
	ToApigUpstreamOutputWithContext(ctx context.Context) ApigUpstreamOutput
}

func (*ApigUpstream) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigUpstream)(nil)).Elem()
}

func (i *ApigUpstream) ToApigUpstreamOutput() ApigUpstreamOutput {
	return i.ToApigUpstreamOutputWithContext(context.Background())
}

func (i *ApigUpstream) ToApigUpstreamOutputWithContext(ctx context.Context) ApigUpstreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigUpstreamOutput)
}

// ApigUpstreamArrayInput is an input type that accepts ApigUpstreamArray and ApigUpstreamArrayOutput values.
// You can construct a concrete instance of `ApigUpstreamArrayInput` via:
//
//	ApigUpstreamArray{ ApigUpstreamArgs{...} }
type ApigUpstreamArrayInput interface {
	pulumi.Input

	ToApigUpstreamArrayOutput() ApigUpstreamArrayOutput
	ToApigUpstreamArrayOutputWithContext(context.Context) ApigUpstreamArrayOutput
}

type ApigUpstreamArray []ApigUpstreamInput

func (ApigUpstreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigUpstream)(nil)).Elem()
}

func (i ApigUpstreamArray) ToApigUpstreamArrayOutput() ApigUpstreamArrayOutput {
	return i.ToApigUpstreamArrayOutputWithContext(context.Background())
}

func (i ApigUpstreamArray) ToApigUpstreamArrayOutputWithContext(ctx context.Context) ApigUpstreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigUpstreamArrayOutput)
}

// ApigUpstreamMapInput is an input type that accepts ApigUpstreamMap and ApigUpstreamMapOutput values.
// You can construct a concrete instance of `ApigUpstreamMapInput` via:
//
//	ApigUpstreamMap{ "key": ApigUpstreamArgs{...} }
type ApigUpstreamMapInput interface {
	pulumi.Input

	ToApigUpstreamMapOutput() ApigUpstreamMapOutput
	ToApigUpstreamMapOutputWithContext(context.Context) ApigUpstreamMapOutput
}

type ApigUpstreamMap map[string]ApigUpstreamInput

func (ApigUpstreamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigUpstream)(nil)).Elem()
}

func (i ApigUpstreamMap) ToApigUpstreamMapOutput() ApigUpstreamMapOutput {
	return i.ToApigUpstreamMapOutputWithContext(context.Background())
}

func (i ApigUpstreamMap) ToApigUpstreamMapOutputWithContext(ctx context.Context) ApigUpstreamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigUpstreamMapOutput)
}

type ApigUpstreamOutput struct{ *pulumi.OutputState }

func (ApigUpstreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigUpstream)(nil)).Elem()
}

func (o ApigUpstreamOutput) ToApigUpstreamOutput() ApigUpstreamOutput {
	return o
}

func (o ApigUpstreamOutput) ToApigUpstreamOutputWithContext(ctx context.Context) ApigUpstreamOutput {
	return o
}

// The circuit breaking settings of apig upstream.
func (o ApigUpstreamOutput) CircuitBreakingSettings() ApigUpstreamCircuitBreakingSettingsOutput {
	return o.ApplyT(func(v *ApigUpstream) ApigUpstreamCircuitBreakingSettingsOutput { return v.CircuitBreakingSettings }).(ApigUpstreamCircuitBreakingSettingsOutput)
}

// The comments of the apig upstream.
func (o ApigUpstreamOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigUpstream) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// The create time of apig upstream.
func (o ApigUpstreamOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigUpstream) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The gateway id of the apig upstream.
func (o ApigUpstreamOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigUpstream) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// The load balancer settings of apig upstream.
func (o ApigUpstreamOutput) LoadBalancerSettings() ApigUpstreamLoadBalancerSettingsOutput {
	return o.ApplyT(func(v *ApigUpstream) ApigUpstreamLoadBalancerSettingsOutput { return v.LoadBalancerSettings }).(ApigUpstreamLoadBalancerSettingsOutput)
}

// The name of the apig upstream.
func (o ApigUpstreamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigUpstream) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
func (o ApigUpstreamOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigUpstream) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
func (o ApigUpstreamOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigUpstream) pulumi.StringPtrOutput { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
func (o ApigUpstreamOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigUpstream) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// The tls settings of apig upstream.
func (o ApigUpstreamOutput) TlsSettings() ApigUpstreamTlsSettingsOutput {
	return o.ApplyT(func(v *ApigUpstream) ApigUpstreamTlsSettingsOutput { return v.TlsSettings }).(ApigUpstreamTlsSettingsOutput)
}

// The update time of apig upstream version.
func (o ApigUpstreamOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigUpstream) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The upstream spec of apig upstream.
func (o ApigUpstreamOutput) UpstreamSpec() ApigUpstreamUpstreamSpecOutput {
	return o.ApplyT(func(v *ApigUpstream) ApigUpstreamUpstreamSpecOutput { return v.UpstreamSpec }).(ApigUpstreamUpstreamSpecOutput)
}

// The version details of apig upstream.
func (o ApigUpstreamOutput) VersionDetails() ApigUpstreamVersionDetailArrayOutput {
	return o.ApplyT(func(v *ApigUpstream) ApigUpstreamVersionDetailArrayOutput { return v.VersionDetails }).(ApigUpstreamVersionDetailArrayOutput)
}

type ApigUpstreamArrayOutput struct{ *pulumi.OutputState }

func (ApigUpstreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigUpstream)(nil)).Elem()
}

func (o ApigUpstreamArrayOutput) ToApigUpstreamArrayOutput() ApigUpstreamArrayOutput {
	return o
}

func (o ApigUpstreamArrayOutput) ToApigUpstreamArrayOutputWithContext(ctx context.Context) ApigUpstreamArrayOutput {
	return o
}

func (o ApigUpstreamArrayOutput) Index(i pulumi.IntInput) ApigUpstreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigUpstream {
		return vs[0].([]*ApigUpstream)[vs[1].(int)]
	}).(ApigUpstreamOutput)
}

type ApigUpstreamMapOutput struct{ *pulumi.OutputState }

func (ApigUpstreamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigUpstream)(nil)).Elem()
}

func (o ApigUpstreamMapOutput) ToApigUpstreamMapOutput() ApigUpstreamMapOutput {
	return o
}

func (o ApigUpstreamMapOutput) ToApigUpstreamMapOutputWithContext(ctx context.Context) ApigUpstreamMapOutput {
	return o
}

func (o ApigUpstreamMapOutput) MapIndex(k pulumi.StringInput) ApigUpstreamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigUpstream {
		return vs[0].(map[string]*ApigUpstream)[vs[1].(string)]
	}).(ApigUpstreamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigUpstreamInput)(nil)).Elem(), &ApigUpstream{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigUpstreamArrayInput)(nil)).Elem(), ApigUpstreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigUpstreamMapInput)(nil)).Elem(), ApigUpstreamMap{})
	pulumi.RegisterOutputType(ApigUpstreamOutput{})
	pulumi.RegisterOutputType(ApigUpstreamArrayOutput{})
	pulumi.RegisterOutputType(ApigUpstreamMapOutput{})
}
