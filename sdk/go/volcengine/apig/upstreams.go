// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of apig upstreams
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/apig"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apig.GetUpstreams(ctx, &apig.GetUpstreamsArgs{
//				GatewayId: pulumi.StringRef("gd13d8c6eq1emkiunq6p0"),
//				Ids: []string{
//					"ud18p5krj5ce3htvrd0v0",
//					"ud18ouitrjp6fhvu61n7g",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.apig.Upstreams has been deprecated in favor of volcengine.apig.getUpstreams
func Upstreams(ctx *pulumi.Context, args *UpstreamsArgs, opts ...pulumi.InvokeOption) (*UpstreamsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv UpstreamsResult
	err := ctx.Invoke("volcengine:apig/upstreams:Upstreams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Upstreams.
type UpstreamsArgs struct {
	// The id of api gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// A list of apig upstream IDs.
	Ids []string `pulumi:"ids"`
	// The name of apig upstream. This field support fuzzy query.
	Name *string `pulumi:"name"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The resource type of apig upstream. Valid values: `Console`, `Ingress`.
	ResourceType *string `pulumi:"resourceType"`
	// The source type of apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
	SourceType *string `pulumi:"sourceType"`
}

// A collection of values returned by Upstreams.
type UpstreamsResult struct {
	// The id of api gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The name of apig upstream version.
	Name       *string `pulumi:"name"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The resource type of apig upstream.
	ResourceType *string `pulumi:"resourceType"`
	// The source type of apig upstream.
	SourceType *string `pulumi:"sourceType"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The collection of query.
	Upstreams []UpstreamsUpstream `pulumi:"upstreams"`
}

func UpstreamsOutput(ctx *pulumi.Context, args UpstreamsOutputArgs, opts ...pulumi.InvokeOption) UpstreamsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (UpstreamsResult, error) {
			args := v.(UpstreamsArgs)
			r, err := Upstreams(ctx, &args, opts...)
			var s UpstreamsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(UpstreamsResultOutput)
}

// A collection of arguments for invoking Upstreams.
type UpstreamsOutputArgs struct {
	// The id of api gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// A list of apig upstream IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The name of apig upstream. This field support fuzzy query.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The resource type of apig upstream. Valid values: `Console`, `Ingress`.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// The source type of apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
}

func (UpstreamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamsArgs)(nil)).Elem()
}

// A collection of values returned by Upstreams.
type UpstreamsResultOutput struct{ *pulumi.OutputState }

func (UpstreamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamsResult)(nil)).Elem()
}

func (o UpstreamsResultOutput) ToUpstreamsResultOutput() UpstreamsResultOutput {
	return o
}

func (o UpstreamsResultOutput) ToUpstreamsResultOutputWithContext(ctx context.Context) UpstreamsResultOutput {
	return o
}

// The id of api gateway.
func (o UpstreamsResultOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamsResult) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o UpstreamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v UpstreamsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o UpstreamsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UpstreamsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The name of apig upstream version.
func (o UpstreamsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o UpstreamsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o UpstreamsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The resource type of apig upstream.
func (o UpstreamsResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamsResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The source type of apig upstream.
func (o UpstreamsResultOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamsResult) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o UpstreamsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v UpstreamsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The collection of query.
func (o UpstreamsResultOutput) Upstreams() UpstreamsUpstreamArrayOutput {
	return o.ApplyT(func(v UpstreamsResult) []UpstreamsUpstream { return v.Upstreams }).(UpstreamsUpstreamArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(UpstreamsResultOutput{})
}
