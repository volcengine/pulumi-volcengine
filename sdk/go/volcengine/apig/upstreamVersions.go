// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of apig upstream versions
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/apig"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apig.GetUpstreamVersions(ctx, &apig.GetUpstreamVersionsArgs{
//				UpstreamId: "ud18p5krj5ce3htvrd0v0",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.apig.UpstreamVersions has been deprecated in favor of volcengine.apig.getUpstreamVersions
func UpstreamVersions(ctx *pulumi.Context, args *UpstreamVersionsArgs, opts ...pulumi.InvokeOption) (*UpstreamVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv UpstreamVersionsResult
	err := ctx.Invoke("volcengine:apig/upstreamVersions:UpstreamVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking UpstreamVersions.
type UpstreamVersionsArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The id of the apig upstream.
	UpstreamId string `pulumi:"upstreamId"`
}

// A collection of values returned by UpstreamVersions.
type UpstreamVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int    `pulumi:"totalCount"`
	UpstreamId string `pulumi:"upstreamId"`
	// The collection of query.
	Versions []UpstreamVersionsVersion `pulumi:"versions"`
}

func UpstreamVersionsOutput(ctx *pulumi.Context, args UpstreamVersionsOutputArgs, opts ...pulumi.InvokeOption) UpstreamVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (UpstreamVersionsResult, error) {
			args := v.(UpstreamVersionsArgs)
			r, err := UpstreamVersions(ctx, &args, opts...)
			var s UpstreamVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(UpstreamVersionsResultOutput)
}

// A collection of arguments for invoking UpstreamVersions.
type UpstreamVersionsOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The id of the apig upstream.
	UpstreamId pulumi.StringInput `pulumi:"upstreamId"`
}

func (UpstreamVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamVersionsArgs)(nil)).Elem()
}

// A collection of values returned by UpstreamVersions.
type UpstreamVersionsResultOutput struct{ *pulumi.OutputState }

func (UpstreamVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamVersionsResult)(nil)).Elem()
}

func (o UpstreamVersionsResultOutput) ToUpstreamVersionsResultOutput() UpstreamVersionsResultOutput {
	return o
}

func (o UpstreamVersionsResultOutput) ToUpstreamVersionsResultOutputWithContext(ctx context.Context) UpstreamVersionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o UpstreamVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v UpstreamVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o UpstreamVersionsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamVersionsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o UpstreamVersionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamVersionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o UpstreamVersionsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v UpstreamVersionsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o UpstreamVersionsResultOutput) UpstreamId() pulumi.StringOutput {
	return o.ApplyT(func(v UpstreamVersionsResult) string { return v.UpstreamId }).(pulumi.StringOutput)
}

// The collection of query.
func (o UpstreamVersionsResultOutput) Versions() UpstreamVersionsVersionArrayOutput {
	return o.ApplyT(func(v UpstreamVersionsResult) []UpstreamVersionsVersion { return v.Versions }).(UpstreamVersionsVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(UpstreamVersionsResultOutput{})
}
