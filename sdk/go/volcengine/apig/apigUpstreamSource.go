// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apig

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage apig upstream source
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/apig"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			foo1, err := vpc.NewSubnet(ctx, "foo1", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			foo2, err := vpc.NewSubnet(ctx, "foo2", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.1.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[1].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooApigGateway, err := apig.NewApigGateway(ctx, "fooApigGateway", &apig.ApigGatewayArgs{
//				Type:        pulumi.String("standard"),
//				Comments:    pulumi.String("acc-test"),
//				ProjectName: pulumi.String("default"),
//				Tags: apig.ApigGatewayTagArray{
//					&apig.ApigGatewayTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//				NetworkSpec: &apig.ApigGatewayNetworkSpecArgs{
//					VpcId: fooVpc.ID(),
//					SubnetIds: pulumi.StringArray{
//						foo1.ID(),
//						foo2.ID(),
//					},
//				},
//				ResourceSpec: &apig.ApigGatewayResourceSpecArgs{
//					Replicas:                 pulumi.Int(2),
//					InstanceSpecCode:         pulumi.String("1c2g"),
//					ClbSpecCode:              pulumi.String("small_1"),
//					PublicNetworkBillingType: pulumi.String("bandwidth"),
//					PublicNetworkBandwidth:   pulumi.Int(1),
//					NetworkType: &apig.ApigGatewayResourceSpecNetworkTypeArgs{
//						EnablePublicNetwork:  pulumi.Bool(true),
//						EnablePrivateNetwork: pulumi.Bool(true),
//					},
//				},
//				LogSpec: &apig.ApigGatewayLogSpecArgs{
//					Enable:    pulumi.Bool(true),
//					ProjectId: pulumi.String("d3cb87c0-faeb-4074-b1ee-9bd747865a76"),
//					TopicId:   pulumi.String("d339482e-d86d-4bd8-a9bb-f270417f00a1"),
//				},
//				MonitorSpec: &apig.ApigGatewayMonitorSpecArgs{
//					Enable:      pulumi.Bool(true),
//					WorkspaceId: pulumi.String("4ed1caf3-279d-4c5f-8301-87ea38e92ffc"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apig.NewApigGatewayService(ctx, "fooApigGatewayService", &apig.ApigGatewayServiceArgs{
//				GatewayId:   fooApigGateway.ID(),
//				ServiceName: pulumi.String("acc-test-apig-service"),
//				Comments:    pulumi.String("acc-test"),
//				Protocols: pulumi.StringArray{
//					pulumi.String("HTTP"),
//					pulumi.String("HTTPS"),
//				},
//				AuthSpec: &apig.ApigGatewayServiceAuthSpecArgs{
//					Enable: pulumi.Bool(false),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apig.NewApigUpstreamSource(ctx, "foo-nacos", &apig.ApigUpstreamSourceArgs{
//				GatewayId:  fooApigGateway.ID(),
//				Comments:   pulumi.String("acc-test-nacos"),
//				SourceType: pulumi.String("Nacos"),
//				SourceSpec: &apig.ApigUpstreamSourceSourceSpecArgs{
//					NacosSource: &apig.ApigUpstreamSourceSourceSpecNacosSourceArgs{
//						NacosId: pulumi.String("nd197ls631meck48imm7g"),
//						AuthConfig: &apig.ApigUpstreamSourceSourceSpecNacosSourceAuthConfigArgs{
//							Basic: &apig.ApigUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs{
//								Username: pulumi.String("nacos"),
//								Password: pulumi.String("******"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apig.NewApigUpstreamSource(ctx, "foo-k8s", &apig.ApigUpstreamSourceArgs{
//				GatewayId:  fooApigGateway.ID(),
//				Comments:   pulumi.String("acc-test-k8s"),
//				SourceType: pulumi.String("K8S"),
//				SourceSpec: &apig.ApigUpstreamSourceSourceSpecArgs{
//					K8sSource: &apig.ApigUpstreamSourceSourceSpecK8sSourceArgs{
//						ClusterId: pulumi.String("cd197sac4mpmnruh7um80"),
//					},
//				},
//				IngressSettings: apig.ApigUpstreamSourceIngressSettingArray{
//					&apig.ApigUpstreamSourceIngressSettingArgs{
//						EnableIngress: pulumi.Bool(true),
//						UpdateStatus:  pulumi.Bool(true),
//						IngressClasses: pulumi.StringArray{
//							pulumi.String("test"),
//						},
//						WatchNamespaces: pulumi.StringArray{
//							pulumi.String("default"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ApigUpstreamSource can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:apig/apigUpstreamSource:ApigUpstreamSource default resource_id
// ```
type ApigUpstreamSource struct {
	pulumi.CustomResourceState

	// The comments of the apig upstream source.
	Comments pulumi.StringPtrOutput `pulumi:"comments"`
	// The gateway id of the apig upstream source.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// The ingress settings of apig upstream source.
	IngressSettings ApigUpstreamSourceIngressSettingArrayOutput `pulumi:"ingressSettings"`
	// The source spec of apig upstream source.
	SourceSpec ApigUpstreamSourceSourceSpecOutput `pulumi:"sourceSpec"`
	// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
}

// NewApigUpstreamSource registers a new resource with the given unique name, arguments, and options.
func NewApigUpstreamSource(ctx *pulumi.Context,
	name string, args *ApigUpstreamSourceArgs, opts ...pulumi.ResourceOption) (*ApigUpstreamSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	if args.SourceSpec == nil {
		return nil, errors.New("invalid value for required argument 'SourceSpec'")
	}
	if args.SourceType == nil {
		return nil, errors.New("invalid value for required argument 'SourceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApigUpstreamSource
	err := ctx.RegisterResource("volcengine:apig/apigUpstreamSource:ApigUpstreamSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigUpstreamSource gets an existing ApigUpstreamSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigUpstreamSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigUpstreamSourceState, opts ...pulumi.ResourceOption) (*ApigUpstreamSource, error) {
	var resource ApigUpstreamSource
	err := ctx.ReadResource("volcengine:apig/apigUpstreamSource:ApigUpstreamSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigUpstreamSource resources.
type apigUpstreamSourceState struct {
	// The comments of the apig upstream source.
	Comments *string `pulumi:"comments"`
	// The gateway id of the apig upstream source.
	GatewayId *string `pulumi:"gatewayId"`
	// The ingress settings of apig upstream source.
	IngressSettings []ApigUpstreamSourceIngressSetting `pulumi:"ingressSettings"`
	// The source spec of apig upstream source.
	SourceSpec *ApigUpstreamSourceSourceSpec `pulumi:"sourceSpec"`
	// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
	SourceType *string `pulumi:"sourceType"`
}

type ApigUpstreamSourceState struct {
	// The comments of the apig upstream source.
	Comments pulumi.StringPtrInput
	// The gateway id of the apig upstream source.
	GatewayId pulumi.StringPtrInput
	// The ingress settings of apig upstream source.
	IngressSettings ApigUpstreamSourceIngressSettingArrayInput
	// The source spec of apig upstream source.
	SourceSpec ApigUpstreamSourceSourceSpecPtrInput
	// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
	SourceType pulumi.StringPtrInput
}

func (ApigUpstreamSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigUpstreamSourceState)(nil)).Elem()
}

type apigUpstreamSourceArgs struct {
	// The comments of the apig upstream source.
	Comments *string `pulumi:"comments"`
	// The gateway id of the apig upstream source.
	GatewayId string `pulumi:"gatewayId"`
	// The ingress settings of apig upstream source.
	IngressSettings []ApigUpstreamSourceIngressSetting `pulumi:"ingressSettings"`
	// The source spec of apig upstream source.
	SourceSpec ApigUpstreamSourceSourceSpec `pulumi:"sourceSpec"`
	// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
	SourceType string `pulumi:"sourceType"`
}

// The set of arguments for constructing a ApigUpstreamSource resource.
type ApigUpstreamSourceArgs struct {
	// The comments of the apig upstream source.
	Comments pulumi.StringPtrInput
	// The gateway id of the apig upstream source.
	GatewayId pulumi.StringInput
	// The ingress settings of apig upstream source.
	IngressSettings ApigUpstreamSourceIngressSettingArrayInput
	// The source spec of apig upstream source.
	SourceSpec ApigUpstreamSourceSourceSpecInput
	// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
	SourceType pulumi.StringInput
}

func (ApigUpstreamSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigUpstreamSourceArgs)(nil)).Elem()
}

type ApigUpstreamSourceInput interface {
	pulumi.Input

	ToApigUpstreamSourceOutput() ApigUpstreamSourceOutput
	ToApigUpstreamSourceOutputWithContext(ctx context.Context) ApigUpstreamSourceOutput
}

func (*ApigUpstreamSource) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigUpstreamSource)(nil)).Elem()
}

func (i *ApigUpstreamSource) ToApigUpstreamSourceOutput() ApigUpstreamSourceOutput {
	return i.ToApigUpstreamSourceOutputWithContext(context.Background())
}

func (i *ApigUpstreamSource) ToApigUpstreamSourceOutputWithContext(ctx context.Context) ApigUpstreamSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigUpstreamSourceOutput)
}

// ApigUpstreamSourceArrayInput is an input type that accepts ApigUpstreamSourceArray and ApigUpstreamSourceArrayOutput values.
// You can construct a concrete instance of `ApigUpstreamSourceArrayInput` via:
//
//	ApigUpstreamSourceArray{ ApigUpstreamSourceArgs{...} }
type ApigUpstreamSourceArrayInput interface {
	pulumi.Input

	ToApigUpstreamSourceArrayOutput() ApigUpstreamSourceArrayOutput
	ToApigUpstreamSourceArrayOutputWithContext(context.Context) ApigUpstreamSourceArrayOutput
}

type ApigUpstreamSourceArray []ApigUpstreamSourceInput

func (ApigUpstreamSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigUpstreamSource)(nil)).Elem()
}

func (i ApigUpstreamSourceArray) ToApigUpstreamSourceArrayOutput() ApigUpstreamSourceArrayOutput {
	return i.ToApigUpstreamSourceArrayOutputWithContext(context.Background())
}

func (i ApigUpstreamSourceArray) ToApigUpstreamSourceArrayOutputWithContext(ctx context.Context) ApigUpstreamSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigUpstreamSourceArrayOutput)
}

// ApigUpstreamSourceMapInput is an input type that accepts ApigUpstreamSourceMap and ApigUpstreamSourceMapOutput values.
// You can construct a concrete instance of `ApigUpstreamSourceMapInput` via:
//
//	ApigUpstreamSourceMap{ "key": ApigUpstreamSourceArgs{...} }
type ApigUpstreamSourceMapInput interface {
	pulumi.Input

	ToApigUpstreamSourceMapOutput() ApigUpstreamSourceMapOutput
	ToApigUpstreamSourceMapOutputWithContext(context.Context) ApigUpstreamSourceMapOutput
}

type ApigUpstreamSourceMap map[string]ApigUpstreamSourceInput

func (ApigUpstreamSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigUpstreamSource)(nil)).Elem()
}

func (i ApigUpstreamSourceMap) ToApigUpstreamSourceMapOutput() ApigUpstreamSourceMapOutput {
	return i.ToApigUpstreamSourceMapOutputWithContext(context.Background())
}

func (i ApigUpstreamSourceMap) ToApigUpstreamSourceMapOutputWithContext(ctx context.Context) ApigUpstreamSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigUpstreamSourceMapOutput)
}

type ApigUpstreamSourceOutput struct{ *pulumi.OutputState }

func (ApigUpstreamSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigUpstreamSource)(nil)).Elem()
}

func (o ApigUpstreamSourceOutput) ToApigUpstreamSourceOutput() ApigUpstreamSourceOutput {
	return o
}

func (o ApigUpstreamSourceOutput) ToApigUpstreamSourceOutputWithContext(ctx context.Context) ApigUpstreamSourceOutput {
	return o
}

// The comments of the apig upstream source.
func (o ApigUpstreamSourceOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigUpstreamSource) pulumi.StringPtrOutput { return v.Comments }).(pulumi.StringPtrOutput)
}

// The gateway id of the apig upstream source.
func (o ApigUpstreamSourceOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigUpstreamSource) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// The ingress settings of apig upstream source.
func (o ApigUpstreamSourceOutput) IngressSettings() ApigUpstreamSourceIngressSettingArrayOutput {
	return o.ApplyT(func(v *ApigUpstreamSource) ApigUpstreamSourceIngressSettingArrayOutput { return v.IngressSettings }).(ApigUpstreamSourceIngressSettingArrayOutput)
}

// The source spec of apig upstream source.
func (o ApigUpstreamSourceOutput) SourceSpec() ApigUpstreamSourceSourceSpecOutput {
	return o.ApplyT(func(v *ApigUpstreamSource) ApigUpstreamSourceSourceSpecOutput { return v.SourceSpec }).(ApigUpstreamSourceSourceSpecOutput)
}

// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
func (o ApigUpstreamSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigUpstreamSource) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

type ApigUpstreamSourceArrayOutput struct{ *pulumi.OutputState }

func (ApigUpstreamSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApigUpstreamSource)(nil)).Elem()
}

func (o ApigUpstreamSourceArrayOutput) ToApigUpstreamSourceArrayOutput() ApigUpstreamSourceArrayOutput {
	return o
}

func (o ApigUpstreamSourceArrayOutput) ToApigUpstreamSourceArrayOutputWithContext(ctx context.Context) ApigUpstreamSourceArrayOutput {
	return o
}

func (o ApigUpstreamSourceArrayOutput) Index(i pulumi.IntInput) ApigUpstreamSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApigUpstreamSource {
		return vs[0].([]*ApigUpstreamSource)[vs[1].(int)]
	}).(ApigUpstreamSourceOutput)
}

type ApigUpstreamSourceMapOutput struct{ *pulumi.OutputState }

func (ApigUpstreamSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApigUpstreamSource)(nil)).Elem()
}

func (o ApigUpstreamSourceMapOutput) ToApigUpstreamSourceMapOutput() ApigUpstreamSourceMapOutput {
	return o
}

func (o ApigUpstreamSourceMapOutput) ToApigUpstreamSourceMapOutputWithContext(ctx context.Context) ApigUpstreamSourceMapOutput {
	return o
}

func (o ApigUpstreamSourceMapOutput) MapIndex(k pulumi.StringInput) ApigUpstreamSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApigUpstreamSource {
		return vs[0].(map[string]*ApigUpstreamSource)[vs[1].(string)]
	}).(ApigUpstreamSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigUpstreamSourceInput)(nil)).Elem(), &ApigUpstreamSource{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigUpstreamSourceArrayInput)(nil)).Elem(), ApigUpstreamSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApigUpstreamSourceMapInput)(nil)).Elem(), ApigUpstreamSourceMap{})
	pulumi.RegisterOutputType(ApigUpstreamSourceOutput{})
	pulumi.RegisterOutputType(ApigUpstreamSourceArrayOutput{})
	pulumi.RegisterOutputType(ApigUpstreamSourceMapOutput{})
}
