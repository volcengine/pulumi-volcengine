// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of apig gateway services
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/apig"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apig.GetGatewayServices(ctx, &apig.GetGatewayServicesArgs{
//				GatewayId: pulumi.StringRef("gd13d8c6eq1emkiunq6p0"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGatewayServices(ctx *pulumi.Context, args *GetGatewayServicesArgs, opts ...pulumi.InvokeOption) (*GetGatewayServicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGatewayServicesResult
	err := ctx.Invoke("volcengine:apig/getGatewayServices:getGatewayServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayServices.
type GetGatewayServicesArgs struct {
	// The gateway id of api gateway service.
	GatewayId *string `pulumi:"gatewayId"`
	// The name of api gateway service. This field support fuzzy query.
	Name *string `pulumi:"name"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The status of api gateway service.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getGatewayServices.
type GetGatewayServicesResult struct {
	// The gateway id of the api gateway service.
	GatewayId *string `pulumi:"gatewayId"`
	// The collection of query.
	GatewayServices []GetGatewayServicesGatewayService `pulumi:"gatewayServices"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the api gateway service.
	Name       *string `pulumi:"name"`
	OutputFile *string `pulumi:"outputFile"`
	// The status of the api gateway service.
	Status *string `pulumi:"status"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetGatewayServicesOutput(ctx *pulumi.Context, args GetGatewayServicesOutputArgs, opts ...pulumi.InvokeOption) GetGatewayServicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGatewayServicesResult, error) {
			args := v.(GetGatewayServicesArgs)
			r, err := GetGatewayServices(ctx, &args, opts...)
			var s GetGatewayServicesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGatewayServicesResultOutput)
}

// A collection of arguments for invoking getGatewayServices.
type GetGatewayServicesOutputArgs struct {
	// The gateway id of api gateway service.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// The name of api gateway service. This field support fuzzy query.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of api gateway service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetGatewayServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayServicesArgs)(nil)).Elem()
}

// A collection of values returned by getGatewayServices.
type GetGatewayServicesResultOutput struct{ *pulumi.OutputState }

func (GetGatewayServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayServicesResult)(nil)).Elem()
}

func (o GetGatewayServicesResultOutput) ToGetGatewayServicesResultOutput() GetGatewayServicesResultOutput {
	return o
}

func (o GetGatewayServicesResultOutput) ToGetGatewayServicesResultOutputWithContext(ctx context.Context) GetGatewayServicesResultOutput {
	return o
}

// The gateway id of the api gateway service.
func (o GetGatewayServicesResultOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayServicesResult) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetGatewayServicesResultOutput) GatewayServices() GetGatewayServicesGatewayServiceArrayOutput {
	return o.ApplyT(func(v GetGatewayServicesResult) []GetGatewayServicesGatewayService { return v.GatewayServices }).(GetGatewayServicesGatewayServiceArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGatewayServicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayServicesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the api gateway service.
func (o GetGatewayServicesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayServicesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGatewayServicesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayServicesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The status of the api gateway service.
func (o GetGatewayServicesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewayServicesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetGatewayServicesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetGatewayServicesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGatewayServicesResultOutput{})
}
