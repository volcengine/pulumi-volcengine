// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of apig routes
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/apig"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apig.GetRoutes(ctx, &apig.GetRoutesArgs{
//				GatewayId: pulumi.StringRef("gd1ek1ki9optek6ooabh0"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.apig.Routes has been deprecated in favor of volcengine.apig.getRoutes
func Routes(ctx *pulumi.Context, args *RoutesArgs, opts ...pulumi.InvokeOption) (*RoutesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv RoutesResult
	err := ctx.Invoke("volcengine:apig/routes:Routes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Routes.
type RoutesArgs struct {
	// The id of api gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// The name of api gateway route. This field support fuzzy query.
	Name *string `pulumi:"name"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The path of api gateway route.
	Path *string `pulumi:"path"`
	// The resource type of route. Valid values: `Console`, `Ingress`.
	ResourceType *string `pulumi:"resourceType"`
	// The id of api gateway service.
	ServiceId *string `pulumi:"serviceId"`
	// The id of api gateway upstream.
	UpstreamId *string `pulumi:"upstreamId"`
	// The version of api gateway upstream.
	UpstreamVersion *string `pulumi:"upstreamVersion"`
}

// A collection of values returned by Routes.
type RoutesResult struct {
	GatewayId *string `pulumi:"gatewayId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the api gateway route.
	Name       *string `pulumi:"name"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The path of the api gateway route.
	Path *string `pulumi:"path"`
	// The resource type of route. Valid values: `Console`, `Ingress`.
	ResourceType *string `pulumi:"resourceType"`
	// The collection of query.
	Routes []RoutesRoute `pulumi:"routes"`
	// The id of the api gateway service.
	ServiceId *string `pulumi:"serviceId"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The id of the api gateway upstream.
	UpstreamId      *string `pulumi:"upstreamId"`
	UpstreamVersion *string `pulumi:"upstreamVersion"`
}

func RoutesOutput(ctx *pulumi.Context, args RoutesOutputArgs, opts ...pulumi.InvokeOption) RoutesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (RoutesResult, error) {
			args := v.(RoutesArgs)
			r, err := Routes(ctx, &args, opts...)
			var s RoutesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(RoutesResultOutput)
}

// A collection of arguments for invoking Routes.
type RoutesOutputArgs struct {
	// The id of api gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// The name of api gateway route. This field support fuzzy query.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The path of api gateway route.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The resource type of route. Valid values: `Console`, `Ingress`.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// The id of api gateway service.
	ServiceId pulumi.StringPtrInput `pulumi:"serviceId"`
	// The id of api gateway upstream.
	UpstreamId pulumi.StringPtrInput `pulumi:"upstreamId"`
	// The version of api gateway upstream.
	UpstreamVersion pulumi.StringPtrInput `pulumi:"upstreamVersion"`
}

func (RoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesArgs)(nil)).Elem()
}

// A collection of values returned by Routes.
type RoutesResultOutput struct{ *pulumi.OutputState }

func (RoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutesResult)(nil)).Elem()
}

func (o RoutesResultOutput) ToRoutesResultOutput() RoutesResultOutput {
	return o
}

func (o RoutesResultOutput) ToRoutesResultOutputWithContext(ctx context.Context) RoutesResultOutput {
	return o
}

func (o RoutesResultOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o RoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the api gateway route.
func (o RoutesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RoutesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o RoutesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The path of the api gateway route.
func (o RoutesResultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The resource type of route. Valid values: `Console`, `Ingress`.
func (o RoutesResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o RoutesResultOutput) Routes() RoutesRouteArrayOutput {
	return o.ApplyT(func(v RoutesResult) []RoutesRoute { return v.Routes }).(RoutesRouteArrayOutput)
}

// The id of the api gateway service.
func (o RoutesResultOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.ServiceId }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o RoutesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v RoutesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The id of the api gateway upstream.
func (o RoutesResultOutput) UpstreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.UpstreamId }).(pulumi.StringPtrOutput)
}

func (o RoutesResultOutput) UpstreamVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutesResult) *string { return v.UpstreamVersion }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RoutesResultOutput{})
}
