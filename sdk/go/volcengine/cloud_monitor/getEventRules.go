// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cloud monitor event rules
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_monitor"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloud_monitor.GetEventRules(ctx, &cloud_monitor.GetEventRulesArgs{
//				RuleName: pulumi.StringRef("tftest"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEventRules(ctx *pulumi.Context, args *GetEventRulesArgs, opts ...pulumi.InvokeOption) (*GetEventRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEventRulesResult
	err := ctx.Invoke("volcengine:cloud_monitor/getEventRules:getEventRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEventRules.
type GetEventRulesArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Rule name, search rules by name using fuzzy search.
	RuleName *string `pulumi:"ruleName"`
	// Event source.
	Source *string `pulumi:"source"`
}

// A collection of values returned by getEventRules.
type GetEventRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The name of the rule.
	RuleName *string `pulumi:"ruleName"`
	// The collection of query.
	Rules []GetEventRulesRule `pulumi:"rules"`
	// Event source corresponding to pattern matching.
	Source *string `pulumi:"source"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetEventRulesOutput(ctx *pulumi.Context, args GetEventRulesOutputArgs, opts ...pulumi.InvokeOption) GetEventRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEventRulesResult, error) {
			args := v.(GetEventRulesArgs)
			r, err := GetEventRules(ctx, &args, opts...)
			var s GetEventRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEventRulesResultOutput)
}

// A collection of arguments for invoking getEventRules.
type GetEventRulesOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Rule name, search rules by name using fuzzy search.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
	// Event source.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (GetEventRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventRulesArgs)(nil)).Elem()
}

// A collection of values returned by getEventRules.
type GetEventRulesResultOutput struct{ *pulumi.OutputState }

func (GetEventRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventRulesResult)(nil)).Elem()
}

func (o GetEventRulesResultOutput) ToGetEventRulesResultOutput() GetEventRulesResultOutput {
	return o
}

func (o GetEventRulesResultOutput) ToGetEventRulesResultOutputWithContext(ctx context.Context) GetEventRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetEventRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEventRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The name of the rule.
func (o GetEventRulesResultOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventRulesResult) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetEventRulesResultOutput) Rules() GetEventRulesRuleArrayOutput {
	return o.ApplyT(func(v GetEventRulesResult) []GetEventRulesRule { return v.Rules }).(GetEventRulesRuleArrayOutput)
}

// Event source corresponding to pattern matching.
func (o GetEventRulesResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventRulesResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetEventRulesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetEventRulesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEventRulesResultOutput{})
}
