// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_postgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of rds postgresql allowlists
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_postgresql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds_postgresql.GetAllowlists(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.rds_postgresql.Allowlists has been deprecated in favor of volcengine.rds_postgresql.getAllowlists
func Allowlists(ctx *pulumi.Context, args *AllowlistsArgs, opts ...pulumi.InvokeOption) (*AllowlistsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv AllowlistsResult
	err := ctx.Invoke("volcengine:rds_postgresql/allowlists:Allowlists", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Allowlists.
type AllowlistsArgs struct {
	// The id of the postgresql Instance.
	InstanceId *string `pulumi:"instanceId"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by Allowlists.
type AllowlistsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The id of the postgresql instance.
	InstanceId *string `pulumi:"instanceId"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The list of postgresql allowed list.
	PostgresqlAllowLists []AllowlistsPostgresqlAllowList `pulumi:"postgresqlAllowLists"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func AllowlistsOutput(ctx *pulumi.Context, args AllowlistsOutputArgs, opts ...pulumi.InvokeOption) AllowlistsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AllowlistsResult, error) {
			args := v.(AllowlistsArgs)
			r, err := Allowlists(ctx, &args, opts...)
			var s AllowlistsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AllowlistsResultOutput)
}

// A collection of arguments for invoking Allowlists.
type AllowlistsOutputArgs struct {
	// The id of the postgresql Instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (AllowlistsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowlistsArgs)(nil)).Elem()
}

// A collection of values returned by Allowlists.
type AllowlistsResultOutput struct{ *pulumi.OutputState }

func (AllowlistsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowlistsResult)(nil)).Elem()
}

func (o AllowlistsResultOutput) ToAllowlistsResultOutput() AllowlistsResultOutput {
	return o
}

func (o AllowlistsResultOutput) ToAllowlistsResultOutputWithContext(ctx context.Context) AllowlistsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o AllowlistsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the postgresql instance.
func (o AllowlistsResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowlistsResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o AllowlistsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowlistsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o AllowlistsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowlistsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The list of postgresql allowed list.
func (o AllowlistsResultOutput) PostgresqlAllowLists() AllowlistsPostgresqlAllowListArrayOutput {
	return o.ApplyT(func(v AllowlistsResult) []AllowlistsPostgresqlAllowList { return v.PostgresqlAllowLists }).(AllowlistsPostgresqlAllowListArrayOutput)
}

// The total count of query.
func (o AllowlistsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AllowlistsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(AllowlistsResultOutput{})
}
