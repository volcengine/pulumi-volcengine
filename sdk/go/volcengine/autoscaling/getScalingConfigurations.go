// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of scaling configurations
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/autoscaling"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// fooZones, err := ecs.GetZones(ctx, nil, nil);
// if err != nil {
// return err
// }
// fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
// VpcName: pulumi.String("acc-test-vpc"),
// CidrBlock: pulumi.String("172.16.0.0/16"),
// })
// if err != nil {
// return err
// }
// fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
// SubnetName: pulumi.String("acc-test-subnet"),
// CidrBlock: pulumi.String("172.16.0.0/24"),
// ZoneId: pulumi.String(fooZones.Zones[0].Id),
// VpcId: fooVpc.ID(),
// })
// if err != nil {
// return err
// }
// fooSecurityGroup, err := vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
// SecurityGroupName: pulumi.String("acc-test-security-group"),
// VpcId: fooVpc.ID(),
// })
// if err != nil {
// return err
// }
// fooImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
// OsType: pulumi.StringRef("Linux"),
// Visibility: pulumi.StringRef("public"),
// InstanceTypeId: pulumi.StringRef("ecs.g1.large"),
// }, nil);
// if err != nil {
// return err
// }
// fooScalingGroup, err := autoscaling.NewScalingGroup(ctx, "fooScalingGroup", &autoscaling.ScalingGroupArgs{
// ScalingGroupName: pulumi.String("acc-test-scaling-group"),
// SubnetIds: pulumi.StringArray{
// fooSubnet.ID(),
// },
// MultiAzPolicy: pulumi.String("BALANCE"),
// DesireInstanceNumber: pulumi.Int(0),
// MinInstanceNumber: pulumi.Int(0),
// MaxInstanceNumber: pulumi.Int(1),
// InstanceTerminatePolicy: pulumi.String("OldestInstance"),
// DefaultCooldown: pulumi.Int(10),
// })
// if err != nil {
// return err
// }
// var fooScalingConfiguration []*autoscaling.ScalingConfiguration
//
//	for index := 0; index < 3; index++ {
//	    key0 := index
//	    val0 := index
//
// __res, err := autoscaling.NewScalingConfiguration(ctx, fmt.Sprintf("fooScalingConfiguration-%v", key0), &autoscaling.ScalingConfigurationArgs{
// ImageId: pulumi.String(fooImages.Images[0].ImageId),
// InstanceName: pulumi.String("acc-test-instance"),
// InstanceTypes: pulumi.StringArray{
// pulumi.String("ecs.g1.large"),
// },
// Password: pulumi.String("93f0cb0614Aab12"),
// ScalingConfigurationName: pulumi.String(fmt.Sprintf("acc-test-scaling-config-%v", val0)),
// ScalingGroupId: fooScalingGroup.ID(),
// SecurityGroupIds: pulumi.StringArray{
// fooSecurityGroup.ID(),
// },
// Volumes: autoscaling.ScalingConfigurationVolumeArray{
// &autoscaling.ScalingConfigurationVolumeArgs{
// VolumeType: pulumi.String("ESSD_PL0"),
// Size: pulumi.Int(50),
// DeleteWithInstance: pulumi.Bool(true),
// },
// },
// })
// if err != nil {
// return err
// }
// fooScalingConfiguration = append(fooScalingConfiguration, __res)
// }
// _ = autoscaling.GetScalingConfigurationsOutput(ctx, autoscaling.GetScalingConfigurationsOutputArgs{
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:autoscaling-getScalingConfigurations:getScalingConfigurations.pp:50,9-38),
// }, nil);
// return nil
// })
// }
// ```
func GetScalingConfigurations(ctx *pulumi.Context, args *GetScalingConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetScalingConfigurationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScalingConfigurationsResult
	err := ctx.Invoke("volcengine:autoscaling/getScalingConfigurations:getScalingConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScalingConfigurations.
type GetScalingConfigurationsArgs struct {
	// A list of scaling configuration ids.
	Ids []string `pulumi:"ids"`
	// A Name Regex of scaling configuration.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// A list of scaling configuration names.
	ScalingConfigurationNames []string `pulumi:"scalingConfigurationNames"`
	// An id of scaling group.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
}

// A collection of values returned by getScalingConfigurations.
type GetScalingConfigurationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                        string   `pulumi:"id"`
	Ids                       []string `pulumi:"ids"`
	NameRegex                 *string  `pulumi:"nameRegex"`
	OutputFile                *string  `pulumi:"outputFile"`
	ScalingConfigurationNames []string `pulumi:"scalingConfigurationNames"`
	// The collection of scaling configuration query.
	ScalingConfigurations []GetScalingConfigurationsScalingConfiguration `pulumi:"scalingConfigurations"`
	// The id of the scaling group to which the scaling configuration belongs.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
	// The total count of scaling configuration query.
	TotalCount int `pulumi:"totalCount"`
}

func GetScalingConfigurationsOutput(ctx *pulumi.Context, args GetScalingConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetScalingConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScalingConfigurationsResult, error) {
			args := v.(GetScalingConfigurationsArgs)
			r, err := GetScalingConfigurations(ctx, &args, opts...)
			var s GetScalingConfigurationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScalingConfigurationsResultOutput)
}

// A collection of arguments for invoking getScalingConfigurations.
type GetScalingConfigurationsOutputArgs struct {
	// A list of scaling configuration ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of scaling configuration.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// A list of scaling configuration names.
	ScalingConfigurationNames pulumi.StringArrayInput `pulumi:"scalingConfigurationNames"`
	// An id of scaling group.
	ScalingGroupId pulumi.StringPtrInput `pulumi:"scalingGroupId"`
}

func (GetScalingConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationsArgs)(nil)).Elem()
}

// A collection of values returned by getScalingConfigurations.
type GetScalingConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetScalingConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationsResult)(nil)).Elem()
}

func (o GetScalingConfigurationsResultOutput) ToGetScalingConfigurationsResultOutput() GetScalingConfigurationsResultOutput {
	return o
}

func (o GetScalingConfigurationsResultOutput) ToGetScalingConfigurationsResultOutputWithContext(ctx context.Context) GetScalingConfigurationsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetScalingConfigurationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingConfigurationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetScalingConfigurationsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScalingConfigurationsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetScalingConfigurationsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingConfigurationsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetScalingConfigurationsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingConfigurationsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetScalingConfigurationsResultOutput) ScalingConfigurationNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScalingConfigurationsResult) []string { return v.ScalingConfigurationNames }).(pulumi.StringArrayOutput)
}

// The collection of scaling configuration query.
func (o GetScalingConfigurationsResultOutput) ScalingConfigurations() GetScalingConfigurationsScalingConfigurationArrayOutput {
	return o.ApplyT(func(v GetScalingConfigurationsResult) []GetScalingConfigurationsScalingConfiguration {
		return v.ScalingConfigurations
	}).(GetScalingConfigurationsScalingConfigurationArrayOutput)
}

// The id of the scaling group to which the scaling configuration belongs.
func (o GetScalingConfigurationsResultOutput) ScalingGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingConfigurationsResult) *string { return v.ScalingGroupId }).(pulumi.StringPtrOutput)
}

// The total count of scaling configuration query.
func (o GetScalingConfigurationsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetScalingConfigurationsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScalingConfigurationsResultOutput{})
}
