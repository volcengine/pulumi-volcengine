// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of scaling groups
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/autoscaling"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := autoscaling.ScalingGroups(ctx, &autoscaling.ScalingGroupsArgs{
//				Ids: []string{
//					"scg-ybru8pazhgl8j1di4tyd",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func ScalingGroups(ctx *pulumi.Context, args *ScalingGroupsArgs, opts ...pulumi.InvokeOption) (*ScalingGroupsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv ScalingGroupsResult
	err := ctx.Invoke("volcengine:autoscaling/scalingGroups:ScalingGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ScalingGroups.
type ScalingGroupsArgs struct {
	// A list of scaling group ids.
	Ids []string `pulumi:"ids"`
	// A Name Regex of scaling group.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// A list of scaling group names.
	ScalingGroupNames []string `pulumi:"scalingGroupNames"`
}

// A collection of values returned by ScalingGroups.
type ScalingGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                string   `pulumi:"id"`
	Ids               []string `pulumi:"ids"`
	NameRegex         *string  `pulumi:"nameRegex"`
	OutputFile        *string  `pulumi:"outputFile"`
	ScalingGroupNames []string `pulumi:"scalingGroupNames"`
	// The collection of scaling group query.
	ScalingGroups []ScalingGroupsScalingGroup `pulumi:"scalingGroups"`
	// The total count of scaling group query.
	TotalCount int `pulumi:"totalCount"`
}

func ScalingGroupsOutput(ctx *pulumi.Context, args ScalingGroupsOutputArgs, opts ...pulumi.InvokeOption) ScalingGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ScalingGroupsResult, error) {
			args := v.(ScalingGroupsArgs)
			r, err := ScalingGroups(ctx, &args, opts...)
			var s ScalingGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ScalingGroupsResultOutput)
}

// A collection of arguments for invoking ScalingGroups.
type ScalingGroupsOutputArgs struct {
	// A list of scaling group ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of scaling group.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// A list of scaling group names.
	ScalingGroupNames pulumi.StringArrayInput `pulumi:"scalingGroupNames"`
}

func (ScalingGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingGroupsArgs)(nil)).Elem()
}

// A collection of values returned by ScalingGroups.
type ScalingGroupsResultOutput struct{ *pulumi.OutputState }

func (ScalingGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingGroupsResult)(nil)).Elem()
}

func (o ScalingGroupsResultOutput) ToScalingGroupsResultOutput() ScalingGroupsResultOutput {
	return o
}

func (o ScalingGroupsResultOutput) ToScalingGroupsResultOutputWithContext(ctx context.Context) ScalingGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o ScalingGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ScalingGroupsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalingGroupsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o ScalingGroupsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingGroupsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o ScalingGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o ScalingGroupsResultOutput) ScalingGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalingGroupsResult) []string { return v.ScalingGroupNames }).(pulumi.StringArrayOutput)
}

// The collection of scaling group query.
func (o ScalingGroupsResultOutput) ScalingGroups() ScalingGroupsScalingGroupArrayOutput {
	return o.ApplyT(func(v ScalingGroupsResult) []ScalingGroupsScalingGroup { return v.ScalingGroups }).(ScalingGroupsScalingGroupArrayOutput)
}

// The total count of scaling group query.
func (o ScalingGroupsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScalingGroupsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(ScalingGroupsResultOutput{})
}
