// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage scaling group enabler
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/autoscaling"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := autoscaling.NewScalingGroup(ctx, "foo", &autoscaling.ScalingGroupArgs{
//				ScalingGroupName: pulumi.String("zzm-tf-test"),
//				SubnetIds: pulumi.StringArray{
//					pulumi.String("subnet-2fegl9waotzi859gp67relkhv"),
//				},
//				MultiAzPolicy:           pulumi.String("BALANCE"),
//				DesireInstanceNumber:    pulumi.Int(0),
//				MinInstanceNumber:       pulumi.Int(0),
//				MaxInstanceNumber:       pulumi.Int(1),
//				InstanceTerminatePolicy: pulumi.String("OldestInstance"),
//				DefaultCooldown:         pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			foo1, err := autoscaling.NewScalingConfiguration(ctx, "foo1", &autoscaling.ScalingConfigurationArgs{
//				ScalingConfigurationName: pulumi.String("terraform-test"),
//				ScalingGroupId:           foo.ScalingGroupId,
//				ImageId:                  pulumi.String("image-ybx2d38wdfl8j1pupx7b"),
//				InstanceTypes: pulumi.StringArray{
//					pulumi.String("ecs.g1.2xlarge"),
//				},
//				InstanceName:                pulumi.String("tf-test"),
//				InstanceDescription:         pulumi.String(""),
//				HostName:                    pulumi.String(""),
//				Password:                    pulumi.String(""),
//				KeyPairName:                 pulumi.String("zktest"),
//				SecurityEnhancementStrategy: pulumi.String("InActive"),
//				Volumes: autoscaling.ScalingConfigurationVolumeArray{
//					&autoscaling.ScalingConfigurationVolumeArgs{
//						VolumeType:         pulumi.String("ESSD_PL0"),
//						Size:               pulumi.Int(20),
//						DeleteWithInstance: pulumi.Bool(false),
//					},
//					&autoscaling.ScalingConfigurationVolumeArgs{
//						VolumeType:         pulumi.String("ESSD_PL0"),
//						Size:               pulumi.Int(20),
//						DeleteWithInstance: pulumi.Bool(true),
//					},
//				},
//				SecurityGroupIds: pulumi.StringArray{
//					pulumi.String("sg-12b8llnkn1la817q7y1be4kop"),
//				},
//				EipBandwidth:   pulumi.Int(0),
//				EipIsp:         pulumi.String("ChinaMobile"),
//				EipBillingType: pulumi.String("PostPaidByBandwidth"),
//			})
//			if err != nil {
//				return err
//			}
//			foo2, err := autoscaling.NewScalingConfigurationAttachment(ctx, "foo2", &autoscaling.ScalingConfigurationAttachmentArgs{
//				ScalingConfigurationId: foo1.ScalingConfigurationId,
//			}, pulumi.DependsOn([]pulumi.Resource{
//				foo1,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = autoscaling.NewScalingGroupEnabler(ctx, "foo3", &autoscaling.ScalingGroupEnablerArgs{
//				ScalingGroupId: foo.ScalingGroupId,
//			}, pulumi.DependsOn([]pulumi.Resource{
//				foo2,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Scaling Group enabler can be imported using the scaling_group_id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:autoscaling/scalingGroupEnabler:ScalingGroupEnabler default enable:scg-mizl7m1kqccg5smt1bdpijuj
//
// ```
type ScalingGroupEnabler struct {
	pulumi.CustomResourceState

	// The id of the scaling group.
	ScalingGroupId pulumi.StringOutput `pulumi:"scalingGroupId"`
}

// NewScalingGroupEnabler registers a new resource with the given unique name, arguments, and options.
func NewScalingGroupEnabler(ctx *pulumi.Context,
	name string, args *ScalingGroupEnablerArgs, opts ...pulumi.ResourceOption) (*ScalingGroupEnabler, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScalingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ScalingGroupId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ScalingGroupEnabler
	err := ctx.RegisterResource("volcengine:autoscaling/scalingGroupEnabler:ScalingGroupEnabler", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScalingGroupEnabler gets an existing ScalingGroupEnabler resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScalingGroupEnabler(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScalingGroupEnablerState, opts ...pulumi.ResourceOption) (*ScalingGroupEnabler, error) {
	var resource ScalingGroupEnabler
	err := ctx.ReadResource("volcengine:autoscaling/scalingGroupEnabler:ScalingGroupEnabler", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScalingGroupEnabler resources.
type scalingGroupEnablerState struct {
	// The id of the scaling group.
	ScalingGroupId *string `pulumi:"scalingGroupId"`
}

type ScalingGroupEnablerState struct {
	// The id of the scaling group.
	ScalingGroupId pulumi.StringPtrInput
}

func (ScalingGroupEnablerState) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingGroupEnablerState)(nil)).Elem()
}

type scalingGroupEnablerArgs struct {
	// The id of the scaling group.
	ScalingGroupId string `pulumi:"scalingGroupId"`
}

// The set of arguments for constructing a ScalingGroupEnabler resource.
type ScalingGroupEnablerArgs struct {
	// The id of the scaling group.
	ScalingGroupId pulumi.StringInput
}

func (ScalingGroupEnablerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingGroupEnablerArgs)(nil)).Elem()
}

type ScalingGroupEnablerInput interface {
	pulumi.Input

	ToScalingGroupEnablerOutput() ScalingGroupEnablerOutput
	ToScalingGroupEnablerOutputWithContext(ctx context.Context) ScalingGroupEnablerOutput
}

func (*ScalingGroupEnabler) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingGroupEnabler)(nil)).Elem()
}

func (i *ScalingGroupEnabler) ToScalingGroupEnablerOutput() ScalingGroupEnablerOutput {
	return i.ToScalingGroupEnablerOutputWithContext(context.Background())
}

func (i *ScalingGroupEnabler) ToScalingGroupEnablerOutputWithContext(ctx context.Context) ScalingGroupEnablerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingGroupEnablerOutput)
}

// ScalingGroupEnablerArrayInput is an input type that accepts ScalingGroupEnablerArray and ScalingGroupEnablerArrayOutput values.
// You can construct a concrete instance of `ScalingGroupEnablerArrayInput` via:
//
//	ScalingGroupEnablerArray{ ScalingGroupEnablerArgs{...} }
type ScalingGroupEnablerArrayInput interface {
	pulumi.Input

	ToScalingGroupEnablerArrayOutput() ScalingGroupEnablerArrayOutput
	ToScalingGroupEnablerArrayOutputWithContext(context.Context) ScalingGroupEnablerArrayOutput
}

type ScalingGroupEnablerArray []ScalingGroupEnablerInput

func (ScalingGroupEnablerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalingGroupEnabler)(nil)).Elem()
}

func (i ScalingGroupEnablerArray) ToScalingGroupEnablerArrayOutput() ScalingGroupEnablerArrayOutput {
	return i.ToScalingGroupEnablerArrayOutputWithContext(context.Background())
}

func (i ScalingGroupEnablerArray) ToScalingGroupEnablerArrayOutputWithContext(ctx context.Context) ScalingGroupEnablerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingGroupEnablerArrayOutput)
}

// ScalingGroupEnablerMapInput is an input type that accepts ScalingGroupEnablerMap and ScalingGroupEnablerMapOutput values.
// You can construct a concrete instance of `ScalingGroupEnablerMapInput` via:
//
//	ScalingGroupEnablerMap{ "key": ScalingGroupEnablerArgs{...} }
type ScalingGroupEnablerMapInput interface {
	pulumi.Input

	ToScalingGroupEnablerMapOutput() ScalingGroupEnablerMapOutput
	ToScalingGroupEnablerMapOutputWithContext(context.Context) ScalingGroupEnablerMapOutput
}

type ScalingGroupEnablerMap map[string]ScalingGroupEnablerInput

func (ScalingGroupEnablerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalingGroupEnabler)(nil)).Elem()
}

func (i ScalingGroupEnablerMap) ToScalingGroupEnablerMapOutput() ScalingGroupEnablerMapOutput {
	return i.ToScalingGroupEnablerMapOutputWithContext(context.Background())
}

func (i ScalingGroupEnablerMap) ToScalingGroupEnablerMapOutputWithContext(ctx context.Context) ScalingGroupEnablerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingGroupEnablerMapOutput)
}

type ScalingGroupEnablerOutput struct{ *pulumi.OutputState }

func (ScalingGroupEnablerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingGroupEnabler)(nil)).Elem()
}

func (o ScalingGroupEnablerOutput) ToScalingGroupEnablerOutput() ScalingGroupEnablerOutput {
	return o
}

func (o ScalingGroupEnablerOutput) ToScalingGroupEnablerOutputWithContext(ctx context.Context) ScalingGroupEnablerOutput {
	return o
}

// The id of the scaling group.
func (o ScalingGroupEnablerOutput) ScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingGroupEnabler) pulumi.StringOutput { return v.ScalingGroupId }).(pulumi.StringOutput)
}

type ScalingGroupEnablerArrayOutput struct{ *pulumi.OutputState }

func (ScalingGroupEnablerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalingGroupEnabler)(nil)).Elem()
}

func (o ScalingGroupEnablerArrayOutput) ToScalingGroupEnablerArrayOutput() ScalingGroupEnablerArrayOutput {
	return o
}

func (o ScalingGroupEnablerArrayOutput) ToScalingGroupEnablerArrayOutputWithContext(ctx context.Context) ScalingGroupEnablerArrayOutput {
	return o
}

func (o ScalingGroupEnablerArrayOutput) Index(i pulumi.IntInput) ScalingGroupEnablerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScalingGroupEnabler {
		return vs[0].([]*ScalingGroupEnabler)[vs[1].(int)]
	}).(ScalingGroupEnablerOutput)
}

type ScalingGroupEnablerMapOutput struct{ *pulumi.OutputState }

func (ScalingGroupEnablerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalingGroupEnabler)(nil)).Elem()
}

func (o ScalingGroupEnablerMapOutput) ToScalingGroupEnablerMapOutput() ScalingGroupEnablerMapOutput {
	return o
}

func (o ScalingGroupEnablerMapOutput) ToScalingGroupEnablerMapOutputWithContext(ctx context.Context) ScalingGroupEnablerMapOutput {
	return o
}

func (o ScalingGroupEnablerMapOutput) MapIndex(k pulumi.StringInput) ScalingGroupEnablerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScalingGroupEnabler {
		return vs[0].(map[string]*ScalingGroupEnabler)[vs[1].(string)]
	}).(ScalingGroupEnablerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingGroupEnablerInput)(nil)).Elem(), &ScalingGroupEnabler{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingGroupEnablerArrayInput)(nil)).Elem(), ScalingGroupEnablerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingGroupEnablerMapInput)(nil)).Elem(), ScalingGroupEnablerMap{})
	pulumi.RegisterOutputType(ScalingGroupEnablerOutput{})
	pulumi.RegisterOutputType(ScalingGroupEnablerArrayOutput{})
	pulumi.RegisterOutputType(ScalingGroupEnablerMapOutput{})
}
