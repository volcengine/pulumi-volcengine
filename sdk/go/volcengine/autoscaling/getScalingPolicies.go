// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of scaling policies
func GetScalingPolicies(ctx *pulumi.Context, args *GetScalingPoliciesArgs, opts ...pulumi.InvokeOption) (*GetScalingPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScalingPoliciesResult
	err := ctx.Invoke("volcengine:autoscaling/getScalingPolicies:getScalingPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScalingPolicies.
type GetScalingPoliciesArgs struct {
	// A list of scaling policy ids.
	Ids []string `pulumi:"ids"`
	// A Name Regex of scaling policy.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// An id of the scaling group to which the scaling policy belongs.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// A list of scaling policy names.
	ScalingPolicyNames []string `pulumi:"scalingPolicyNames"`
	// A type of scaling policy. Valid values: Scheduled, Recurrence, Manual, Alarm.
	ScalingPolicyType *string `pulumi:"scalingPolicyType"`
}

// A collection of values returned by getScalingPolicies.
type GetScalingPoliciesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The id of the scaling group to which the scaling policy belongs.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// The collection of scaling policy query.
	ScalingPolicies    []GetScalingPoliciesScalingPolicy `pulumi:"scalingPolicies"`
	ScalingPolicyNames []string                          `pulumi:"scalingPolicyNames"`
	// The type of the scaling policy.
	ScalingPolicyType *string `pulumi:"scalingPolicyType"`
	// The total count of scaling policy query.
	TotalCount int `pulumi:"totalCount"`
}

func GetScalingPoliciesOutput(ctx *pulumi.Context, args GetScalingPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetScalingPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScalingPoliciesResult, error) {
			args := v.(GetScalingPoliciesArgs)
			r, err := GetScalingPolicies(ctx, &args, opts...)
			var s GetScalingPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScalingPoliciesResultOutput)
}

// A collection of arguments for invoking getScalingPolicies.
type GetScalingPoliciesOutputArgs struct {
	// A list of scaling policy ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of scaling policy.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// An id of the scaling group to which the scaling policy belongs.
	ScalingGroupId pulumi.StringInput `pulumi:"scalingGroupId"`
	// A list of scaling policy names.
	ScalingPolicyNames pulumi.StringArrayInput `pulumi:"scalingPolicyNames"`
	// A type of scaling policy. Valid values: Scheduled, Recurrence, Manual, Alarm.
	ScalingPolicyType pulumi.StringPtrInput `pulumi:"scalingPolicyType"`
}

func (GetScalingPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getScalingPolicies.
type GetScalingPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetScalingPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingPoliciesResult)(nil)).Elem()
}

func (o GetScalingPoliciesResultOutput) ToGetScalingPoliciesResultOutput() GetScalingPoliciesResultOutput {
	return o
}

func (o GetScalingPoliciesResultOutput) ToGetScalingPoliciesResultOutputWithContext(ctx context.Context) GetScalingPoliciesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetScalingPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetScalingPoliciesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetScalingPoliciesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetScalingPoliciesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The id of the scaling group to which the scaling policy belongs.
func (o GetScalingPoliciesResultOutput) ScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) string { return v.ScalingGroupId }).(pulumi.StringOutput)
}

// The collection of scaling policy query.
func (o GetScalingPoliciesResultOutput) ScalingPolicies() GetScalingPoliciesScalingPolicyArrayOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) []GetScalingPoliciesScalingPolicy { return v.ScalingPolicies }).(GetScalingPoliciesScalingPolicyArrayOutput)
}

func (o GetScalingPoliciesResultOutput) ScalingPolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) []string { return v.ScalingPolicyNames }).(pulumi.StringArrayOutput)
}

// The type of the scaling policy.
func (o GetScalingPoliciesResultOutput) ScalingPolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) *string { return v.ScalingPolicyType }).(pulumi.StringPtrOutput)
}

// The total count of scaling policy query.
func (o GetScalingPoliciesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetScalingPoliciesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScalingPoliciesResultOutput{})
}
