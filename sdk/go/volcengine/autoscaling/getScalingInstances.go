// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of scaling instances
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/autoscaling"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// fooZones, err := ecs.GetZones(ctx, nil, nil);
// if err != nil {
// return err
// }
// fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
// VpcName: pulumi.String("acc-test-vpc"),
// CidrBlock: pulumi.String("172.16.0.0/16"),
// })
// if err != nil {
// return err
// }
// fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
// SubnetName: pulumi.String("acc-test-subnet"),
// CidrBlock: pulumi.String("172.16.0.0/24"),
// ZoneId: pulumi.String(fooZones.Zones[0].Id),
// VpcId: fooVpc.ID(),
// })
// if err != nil {
// return err
// }
// fooSecurityGroup, err := vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
// SecurityGroupName: pulumi.String("acc-test-security-group"),
// VpcId: fooVpc.ID(),
// })
// if err != nil {
// return err
// }
// fooImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
// OsType: pulumi.StringRef("Linux"),
// Visibility: pulumi.StringRef("public"),
// InstanceTypeId: pulumi.StringRef("ecs.g1.large"),
// }, nil);
// if err != nil {
// return err
// }
// fooKeyPair, err := ecs.NewKeyPair(ctx, "fooKeyPair", &ecs.KeyPairArgs{
// Description: pulumi.String("acc-test-2"),
// KeyPairName: pulumi.String("acc-test-key-pair-name"),
// })
// if err != nil {
// return err
// }
// fooLaunchTemplate, err := ecs.NewLaunchTemplate(ctx, "fooLaunchTemplate", &ecs.LaunchTemplateArgs{
// Description: pulumi.String("acc-test-desc"),
// EipBandwidth: pulumi.Int(200),
// EipBillingType: pulumi.String("PostPaidByBandwidth"),
// EipIsp: pulumi.String("BGP"),
// HostName: pulumi.String("acc-hostname"),
// ImageId: pulumi.String(fooImages.Images[0].ImageId),
// InstanceChargeType: pulumi.String("PostPaid"),
// InstanceName: pulumi.String("acc-instance-name"),
// InstanceTypeId: pulumi.String("ecs.g1.large"),
// KeyPairName: fooKeyPair.KeyPairName,
// LaunchTemplateName: pulumi.String("acc-test-template"),
// NetworkInterfaces: ecs.LaunchTemplateNetworkInterfaceArray{
// &ecs.LaunchTemplateNetworkInterfaceArgs{
// SubnetId: fooSubnet.ID(),
// SecurityGroupIds: pulumi.StringArray{
// fooSecurityGroup.ID(),
// },
// },
// },
// Volumes: ecs.LaunchTemplateVolumeArray{
// &ecs.LaunchTemplateVolumeArgs{
// VolumeType: pulumi.String("ESSD_PL0"),
// Size: pulumi.Int(50),
// DeleteWithInstance: pulumi.Bool(true),
// },
// },
// })
// if err != nil {
// return err
// }
// fooScalingGroup, err := autoscaling.NewScalingGroup(ctx, "fooScalingGroup", &autoscaling.ScalingGroupArgs{
// ScalingGroupName: pulumi.String("acc-test-scaling-group"),
// SubnetIds: pulumi.StringArray{
// fooSubnet.ID(),
// },
// MultiAzPolicy: pulumi.String("BALANCE"),
// DesireInstanceNumber: -1,
// MinInstanceNumber: pulumi.Int(0),
// MaxInstanceNumber: pulumi.Int(10),
// InstanceTerminatePolicy: pulumi.String("OldestInstance"),
// DefaultCooldown: pulumi.Int(10),
// LaunchTemplateId: fooLaunchTemplate.ID(),
// LaunchTemplateVersion: pulumi.String("Default"),
// })
// if err != nil {
// return err
// }
// fooScalingGroupEnabler, err := autoscaling.NewScalingGroupEnabler(ctx, "fooScalingGroupEnabler", &autoscaling.ScalingGroupEnablerArgs{
// ScalingGroupId: fooScalingGroup.ID(),
// })
// if err != nil {
// return err
// }
// var fooInstance []*ecs.Instance
//
//	for index := 0; index < 3; index++ {
//	    key0 := index
//	    val0 := index
//
// __res, err := ecs.NewInstance(ctx, fmt.Sprintf("fooInstance-%v", key0), &ecs.InstanceArgs{
// InstanceName: pulumi.String(fmt.Sprintf("acc-test-ecs-%v", val0)),
// Description: pulumi.String("acc-test"),
// HostName: pulumi.String("tf-acc-test"),
// ImageId: pulumi.String(fooImages.Images[0].ImageId),
// InstanceType: pulumi.String("ecs.g1.large"),
// Password: pulumi.String("93f0cb0614Aab12"),
// InstanceChargeType: pulumi.String("PostPaid"),
// SystemVolumeType: pulumi.String("ESSD_PL0"),
// SystemVolumeSize: pulumi.Int(40),
// SubnetId: fooSubnet.ID(),
// SecurityGroupIds: pulumi.StringArray{
// fooSecurityGroup.ID(),
// },
// })
// if err != nil {
// return err
// }
// fooInstance = append(fooInstance, __res)
// }
// var fooScalingInstanceAttachment []*autoscaling.ScalingInstanceAttachment
//
//	for index := 0; index < len(fooInstance); index++ {
//	    key0 := index
//	    val0 := index
//
// __res, err := autoscaling.NewScalingInstanceAttachment(ctx, fmt.Sprintf("fooScalingInstanceAttachment-%v", key0), &autoscaling.ScalingInstanceAttachmentArgs{
// InstanceId: fooInstance[val0].ID(),
// ScalingGroupId: fooScalingGroup.ID(),
// Entrusted: pulumi.Bool(true),
// }, pulumi.DependsOn([]pulumi.Resource{
// fooScalingGroupEnabler,
// }))
// if err != nil {
// return err
// }
// fooScalingInstanceAttachment = append(fooScalingInstanceAttachment, __res)
// }
// _ = autoscaling.GetScalingInstancesOutput(ctx, autoscaling.GetScalingInstancesOutputArgs{
// ScalingGroupId: fooScalingGroup.ID(),
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:autoscaling-getScalingInstances:getScalingInstances.pp:93,22-64),
// }, nil);
// return nil
// })
// }
// ```
func GetScalingInstances(ctx *pulumi.Context, args *GetScalingInstancesArgs, opts ...pulumi.InvokeOption) (*GetScalingInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScalingInstancesResult
	err := ctx.Invoke("volcengine:autoscaling/getScalingInstances:getScalingInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScalingInstances.
type GetScalingInstancesArgs struct {
	// The creation type of the instances. Valid values: AutoCreated, Attached.
	CreationType *string `pulumi:"creationType"`
	// A list of instance ids.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The id of the scaling configuration id.
	ScalingConfigurationId *string `pulumi:"scalingConfigurationId"`
	// The id of the scaling group.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// The status of instances. Valid values: Init, Pending, Pending:Wait, InService, Error, Removing, Removing:Wait, Stopped, Protected.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getScalingInstances.
type GetScalingInstancesResult struct {
	// The creation type of the instance. Valid values: AutoCreated, Attached.
	CreationType *string `pulumi:"creationType"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The id of the scaling configuration.
	ScalingConfigurationId *string `pulumi:"scalingConfigurationId"`
	// The id of the scaling group.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// The collection of scaling instances.
	ScalingInstances []GetScalingInstancesScalingInstance `pulumi:"scalingInstances"`
	// The status of instances.
	Status *string `pulumi:"status"`
	// The total count of scaling instances query.
	TotalCount int `pulumi:"totalCount"`
}

func GetScalingInstancesOutput(ctx *pulumi.Context, args GetScalingInstancesOutputArgs, opts ...pulumi.InvokeOption) GetScalingInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScalingInstancesResult, error) {
			args := v.(GetScalingInstancesArgs)
			r, err := GetScalingInstances(ctx, &args, opts...)
			var s GetScalingInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScalingInstancesResultOutput)
}

// A collection of arguments for invoking getScalingInstances.
type GetScalingInstancesOutputArgs struct {
	// The creation type of the instances. Valid values: AutoCreated, Attached.
	CreationType pulumi.StringPtrInput `pulumi:"creationType"`
	// A list of instance ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The id of the scaling configuration id.
	ScalingConfigurationId pulumi.StringPtrInput `pulumi:"scalingConfigurationId"`
	// The id of the scaling group.
	ScalingGroupId pulumi.StringInput `pulumi:"scalingGroupId"`
	// The status of instances. Valid values: Init, Pending, Pending:Wait, InService, Error, Removing, Removing:Wait, Stopped, Protected.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetScalingInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getScalingInstances.
type GetScalingInstancesResultOutput struct{ *pulumi.OutputState }

func (GetScalingInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingInstancesResult)(nil)).Elem()
}

func (o GetScalingInstancesResultOutput) ToGetScalingInstancesResultOutput() GetScalingInstancesResultOutput {
	return o
}

func (o GetScalingInstancesResultOutput) ToGetScalingInstancesResultOutputWithContext(ctx context.Context) GetScalingInstancesResultOutput {
	return o
}

// The creation type of the instance. Valid values: AutoCreated, Attached.
func (o GetScalingInstancesResultOutput) CreationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) *string { return v.CreationType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetScalingInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetScalingInstancesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetScalingInstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The id of the scaling configuration.
func (o GetScalingInstancesResultOutput) ScalingConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) *string { return v.ScalingConfigurationId }).(pulumi.StringPtrOutput)
}

// The id of the scaling group.
func (o GetScalingInstancesResultOutput) ScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) string { return v.ScalingGroupId }).(pulumi.StringOutput)
}

// The collection of scaling instances.
func (o GetScalingInstancesResultOutput) ScalingInstances() GetScalingInstancesScalingInstanceArrayOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) []GetScalingInstancesScalingInstance { return v.ScalingInstances }).(GetScalingInstancesScalingInstanceArrayOutput)
}

// The status of instances.
func (o GetScalingInstancesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The total count of scaling instances query.
func (o GetScalingInstancesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetScalingInstancesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScalingInstancesResultOutput{})
}
