// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of scaling groups
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/autoscaling"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// fooZones, err := ecs.GetZones(ctx, nil, nil);
// if err != nil {
// return err
// }
// fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
// VpcName: pulumi.String("acc-test-vpc"),
// CidrBlock: pulumi.String("172.16.0.0/16"),
// })
// if err != nil {
// return err
// }
// fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
// SubnetName: pulumi.String("acc-test-subnet"),
// CidrBlock: pulumi.String("172.16.0.0/24"),
// ZoneId: pulumi.String(fooZones.Zones[0].Id),
// VpcId: fooVpc.ID(),
// })
// if err != nil {
// return err
// }
// var fooScalingGroup []*autoscaling.ScalingGroup
//
//	for index := 0; index < 3; index++ {
//	    key0 := index
//	    val0 := index
//
// __res, err := autoscaling.NewScalingGroup(ctx, fmt.Sprintf("fooScalingGroup-%v", key0), &autoscaling.ScalingGroupArgs{
// ScalingGroupName: pulumi.String(fmt.Sprintf("acc-test-scaling-group-%v", val0)),
// SubnetIds: pulumi.StringArray{
// fooSubnet.ID(),
// },
// MultiAzPolicy: pulumi.String("BALANCE"),
// DesireInstanceNumber: pulumi.Int(0),
// MinInstanceNumber: pulumi.Int(0),
// MaxInstanceNumber: pulumi.Int(10),
// InstanceTerminatePolicy: pulumi.String("OldestInstance"),
// DefaultCooldown: pulumi.Int(30),
// Tags: autoscaling.ScalingGroupTagArray{
// &autoscaling.ScalingGroupTagArgs{
// Key: pulumi.String("k2"),
// Value: pulumi.String("v2"),
// },
// &autoscaling.ScalingGroupTagArgs{
// Key: pulumi.String("k1"),
// Value: pulumi.String("v1"),
// },
// },
// })
// if err != nil {
// return err
// }
// fooScalingGroup = append(fooScalingGroup, __res)
// }
// _ = autoscaling.GetScalingGroupsOutput(ctx, autoscaling.GetScalingGroupsOutputArgs{
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:autoscaling-getScalingGroups:getScalingGroups.pp:35,9-30),
// }, nil);
// return nil
// })
// }
// ```
func GetScalingGroups(ctx *pulumi.Context, args *GetScalingGroupsArgs, opts ...pulumi.InvokeOption) (*GetScalingGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScalingGroupsResult
	err := ctx.Invoke("volcengine:autoscaling/getScalingGroups:getScalingGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScalingGroups.
type GetScalingGroupsArgs struct {
	// A list of scaling group ids.
	Ids []string `pulumi:"ids"`
	// A Name Regex of scaling group.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of the scaling group.
	ProjectName *string `pulumi:"projectName"`
	// A list of scaling group names.
	ScalingGroupNames []string `pulumi:"scalingGroupNames"`
}

// A collection of values returned by getScalingGroups.
type GetScalingGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The ProjectName of scaling group.
	ProjectName       *string  `pulumi:"projectName"`
	ScalingGroupNames []string `pulumi:"scalingGroupNames"`
	// The collection of scaling group query.
	ScalingGroups []GetScalingGroupsScalingGroup `pulumi:"scalingGroups"`
	// The total count of scaling group query.
	TotalCount int `pulumi:"totalCount"`
}

func GetScalingGroupsOutput(ctx *pulumi.Context, args GetScalingGroupsOutputArgs, opts ...pulumi.InvokeOption) GetScalingGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScalingGroupsResult, error) {
			args := v.(GetScalingGroupsArgs)
			r, err := GetScalingGroups(ctx, &args, opts...)
			var s GetScalingGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScalingGroupsResultOutput)
}

// A collection of arguments for invoking getScalingGroups.
type GetScalingGroupsOutputArgs struct {
	// A list of scaling group ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of scaling group.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of the scaling group.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// A list of scaling group names.
	ScalingGroupNames pulumi.StringArrayInput `pulumi:"scalingGroupNames"`
}

func (GetScalingGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getScalingGroups.
type GetScalingGroupsResultOutput struct{ *pulumi.OutputState }

func (GetScalingGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingGroupsResult)(nil)).Elem()
}

func (o GetScalingGroupsResultOutput) ToGetScalingGroupsResultOutput() GetScalingGroupsResultOutput {
	return o
}

func (o GetScalingGroupsResultOutput) ToGetScalingGroupsResultOutputWithContext(ctx context.Context) GetScalingGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetScalingGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetScalingGroupsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScalingGroupsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetScalingGroupsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingGroupsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetScalingGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The ProjectName of scaling group.
func (o GetScalingGroupsResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScalingGroupsResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

func (o GetScalingGroupsResultOutput) ScalingGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScalingGroupsResult) []string { return v.ScalingGroupNames }).(pulumi.StringArrayOutput)
}

// The collection of scaling group query.
func (o GetScalingGroupsResultOutput) ScalingGroups() GetScalingGroupsScalingGroupArrayOutput {
	return o.ApplyT(func(v GetScalingGroupsResult) []GetScalingGroupsScalingGroup { return v.ScalingGroups }).(GetScalingGroupsScalingGroupArrayOutput)
}

// The total count of scaling group query.
func (o GetScalingGroupsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetScalingGroupsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScalingGroupsResultOutput{})
}
