// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of scaling activities
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/autoscaling"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooSecurityGroup, err := vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
//				SecurityGroupName: pulumi.String("acc-test-security-group"),
//				VpcId:             fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooImages, err := ecs.GetImages(ctx, &ecs.GetImagesArgs{
//				OsType:         pulumi.StringRef("Linux"),
//				Visibility:     pulumi.StringRef("public"),
//				InstanceTypeId: pulumi.StringRef("ecs.g1.large"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			fooKeyPair, err := ecs.NewKeyPair(ctx, "fooKeyPair", &ecs.KeyPairArgs{
//				Description: pulumi.String("acc-test-2"),
//				KeyPairName: pulumi.String("acc-test-key-pair-name"),
//			})
//			if err != nil {
//				return err
//			}
//			fooLaunchTemplate, err := ecs.NewLaunchTemplate(ctx, "fooLaunchTemplate", &ecs.LaunchTemplateArgs{
//				Description:        pulumi.String("acc-test-desc"),
//				EipBandwidth:       pulumi.Int(200),
//				EipBillingType:     pulumi.String("PostPaidByBandwidth"),
//				EipIsp:             pulumi.String("BGP"),
//				HostName:           pulumi.String("acc-hostname"),
//				ImageId:            pulumi.String(fooImages.Images[0].ImageId),
//				InstanceChargeType: pulumi.String("PostPaid"),
//				InstanceName:       pulumi.String("acc-instance-name"),
//				InstanceTypeId:     pulumi.String("ecs.g1.large"),
//				KeyPairName:        fooKeyPair.KeyPairName,
//				LaunchTemplateName: pulumi.String("acc-test-template"),
//				NetworkInterfaces: ecs.LaunchTemplateNetworkInterfaceArray{
//					&ecs.LaunchTemplateNetworkInterfaceArgs{
//						SubnetId: fooSubnet.ID(),
//						SecurityGroupIds: pulumi.StringArray{
//							fooSecurityGroup.ID(),
//						},
//					},
//				},
//				Volumes: ecs.LaunchTemplateVolumeArray{
//					&ecs.LaunchTemplateVolumeArgs{
//						VolumeType:         pulumi.String("ESSD_PL0"),
//						Size:               pulumi.Int(50),
//						DeleteWithInstance: pulumi.Bool(true),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooScalingGroup, err := autoscaling.NewScalingGroup(ctx, "fooScalingGroup", &autoscaling.ScalingGroupArgs{
//				ScalingGroupName: pulumi.String("acc-test-scaling-group"),
//				SubnetIds: pulumi.StringArray{
//					fooSubnet.ID(),
//				},
//				MultiAzPolicy:           pulumi.String("BALANCE"),
//				DesireInstanceNumber:    -1,
//				MinInstanceNumber:       pulumi.Int(0),
//				MaxInstanceNumber:       pulumi.Int(10),
//				InstanceTerminatePolicy: pulumi.String("OldestInstance"),
//				DefaultCooldown:         pulumi.Int(10),
//				LaunchTemplateId:        fooLaunchTemplate.ID(),
//				LaunchTemplateVersion:   pulumi.String("Default"),
//			})
//			if err != nil {
//				return err
//			}
//			fooScalingGroupEnabler, err := autoscaling.NewScalingGroupEnabler(ctx, "fooScalingGroupEnabler", &autoscaling.ScalingGroupEnablerArgs{
//				ScalingGroupId: fooScalingGroup.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			var fooInstance []*ecs.Instance
//			for index := 0; index < 3; index++ {
//				key0 := index
//				val0 := index
//				__res, err := ecs.NewInstance(ctx, fmt.Sprintf("fooInstance-%v", key0), &ecs.InstanceArgs{
//					InstanceName:       pulumi.String(fmt.Sprintf("acc-test-ecs-%v", val0)),
//					Description:        pulumi.String("acc-test"),
//					HostName:           pulumi.String("tf-acc-test"),
//					ImageId:            pulumi.String(fooImages.Images[0].ImageId),
//					InstanceType:       pulumi.String("ecs.g1.large"),
//					Password:           pulumi.String("93f0cb0614Aab12"),
//					InstanceChargeType: pulumi.String("PostPaid"),
//					SystemVolumeType:   pulumi.String("ESSD_PL0"),
//					SystemVolumeSize:   pulumi.Int(40),
//					SubnetId:           fooSubnet.ID(),
//					SecurityGroupIds: pulumi.StringArray{
//						fooSecurityGroup.ID(),
//					},
//				})
//				if err != nil {
//					return err
//				}
//				fooInstance = append(fooInstance, __res)
//			}
//			var fooScalingInstanceAttachment []*autoscaling.ScalingInstanceAttachment
//			for index := 0; index < len(fooInstance); index++ {
//				key0 := index
//				val0 := index
//				__res, err := autoscaling.NewScalingInstanceAttachment(ctx, fmt.Sprintf("fooScalingInstanceAttachment-%v", key0), &autoscaling.ScalingInstanceAttachmentArgs{
//					InstanceId:     fooInstance[val0].ID(),
//					ScalingGroupId: fooScalingGroup.ID(),
//					Entrusted:      pulumi.Bool(true),
//				}, pulumi.DependsOn([]pulumi.Resource{
//					fooScalingGroupEnabler,
//				}))
//				if err != nil {
//					return err
//				}
//				fooScalingInstanceAttachment = append(fooScalingInstanceAttachment, __res)
//			}
//			_ = autoscaling.GetScalingActivitiesOutput(ctx, autoscaling.GetScalingActivitiesOutputArgs{
//				ScalingGroupId: fooScalingGroup.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.autoscaling.ScalingActivities has been deprecated in favor of volcengine.autoscaling.getScalingActivities
func ScalingActivities(ctx *pulumi.Context, args *ScalingActivitiesArgs, opts ...pulumi.InvokeOption) (*ScalingActivitiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ScalingActivitiesResult
	err := ctx.Invoke("volcengine:autoscaling/scalingActivities:ScalingActivities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ScalingActivities.
type ScalingActivitiesArgs struct {
	// An end time to start a Scaling Activity.
	EndTime *string `pulumi:"endTime"`
	// A list of Scaling Activity IDs.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// A Id of Scaling Group.
	ScalingGroupId string `pulumi:"scalingGroupId"`
	// A start time to start a Scaling Activity.
	StartTime *string `pulumi:"startTime"`
	// A status code of Scaling Activity. Valid values: Init, Running, Success, PartialSuccess, Error, Rejected, Exception.
	StatusCode *string `pulumi:"statusCode"`
}

// A collection of values returned by ScalingActivities.
type ScalingActivitiesResult struct {
	// The collection of Scaling Activity query.
	Activities []ScalingActivitiesActivity `pulumi:"activities"`
	EndTime    *string                     `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The scaling group Id.
	ScalingGroupId string  `pulumi:"scalingGroupId"`
	StartTime      *string `pulumi:"startTime"`
	// The Status Code of Scaling Activity.
	StatusCode *string `pulumi:"statusCode"`
	// The total count of Scaling Activity query.
	TotalCount int `pulumi:"totalCount"`
}

func ScalingActivitiesOutput(ctx *pulumi.Context, args ScalingActivitiesOutputArgs, opts ...pulumi.InvokeOption) ScalingActivitiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ScalingActivitiesResult, error) {
			args := v.(ScalingActivitiesArgs)
			r, err := ScalingActivities(ctx, &args, opts...)
			var s ScalingActivitiesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ScalingActivitiesResultOutput)
}

// A collection of arguments for invoking ScalingActivities.
type ScalingActivitiesOutputArgs struct {
	// An end time to start a Scaling Activity.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// A list of Scaling Activity IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// A Id of Scaling Group.
	ScalingGroupId pulumi.StringInput `pulumi:"scalingGroupId"`
	// A start time to start a Scaling Activity.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// A status code of Scaling Activity. Valid values: Init, Running, Success, PartialSuccess, Error, Rejected, Exception.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ScalingActivitiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingActivitiesArgs)(nil)).Elem()
}

// A collection of values returned by ScalingActivities.
type ScalingActivitiesResultOutput struct{ *pulumi.OutputState }

func (ScalingActivitiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingActivitiesResult)(nil)).Elem()
}

func (o ScalingActivitiesResultOutput) ToScalingActivitiesResultOutput() ScalingActivitiesResultOutput {
	return o
}

func (o ScalingActivitiesResultOutput) ToScalingActivitiesResultOutputWithContext(ctx context.Context) ScalingActivitiesResultOutput {
	return o
}

// The collection of Scaling Activity query.
func (o ScalingActivitiesResultOutput) Activities() ScalingActivitiesActivityArrayOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) []ScalingActivitiesActivity { return v.Activities }).(ScalingActivitiesActivityArrayOutput)
}

func (o ScalingActivitiesResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ScalingActivitiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ScalingActivitiesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o ScalingActivitiesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The scaling group Id.
func (o ScalingActivitiesResultOutput) ScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) string { return v.ScalingGroupId }).(pulumi.StringOutput)
}

func (o ScalingActivitiesResultOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The Status Code of Scaling Activity.
func (o ScalingActivitiesResultOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

// The total count of Scaling Activity query.
func (o ScalingActivitiesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v ScalingActivitiesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(ScalingActivitiesResultOutput{})
}
