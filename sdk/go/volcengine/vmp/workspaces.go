// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of vmp workspaces
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vmp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooWorkspace, err := vmp.NewWorkspace(ctx, "fooWorkspace", &vmp.WorkspaceArgs{
//				InstanceTypeId:          pulumi.String("vmp.standard.15d"),
//				DeleteProtectionEnabled: pulumi.Bool(false),
//				Description:             pulumi.String("acc-test-1"),
//				Username:                pulumi.String("admin123"),
//				Password:                pulumi.String("*******"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = vmp.GetWorkspacesOutput(ctx, vmp.GetWorkspacesOutputArgs{
//				Ids: pulumi.StringArray{
//					fooWorkspace.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.vmp.Workspaces has been deprecated in favor of volcengine.vmp.getWorkspaces
func Workspaces(ctx *pulumi.Context, args *WorkspacesArgs, opts ...pulumi.InvokeOption) (*WorkspacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv WorkspacesResult
	err := ctx.Invoke("volcengine:vmp/workspaces:Workspaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Workspaces.
type WorkspacesArgs struct {
	// A list of Workspace IDs.
	Ids []string `pulumi:"ids"`
	// A list of Instance Type IDs.
	InstanceTypeIds []string `pulumi:"instanceTypeIds"`
	// The name of workspace.
	Name *string `pulumi:"name"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of vmp workspace.
	ProjectName *string `pulumi:"projectName"`
	// A list of Workspace status.
	Statuses []string `pulumi:"statuses"`
	// The tags of vmp workspace.
	Tags []WorkspacesTag `pulumi:"tags"`
}

// A collection of values returned by Workspaces.
type WorkspacesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Ids             []string `pulumi:"ids"`
	InstanceTypeIds []string `pulumi:"instanceTypeIds"`
	// The name of workspace.
	Name       *string `pulumi:"name"`
	OutputFile *string `pulumi:"outputFile"`
	// The project name of vmp workspace.
	ProjectName *string  `pulumi:"projectName"`
	Statuses    []string `pulumi:"statuses"`
	// Tags.
	Tags []WorkspacesTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The collection of query.
	Workspaces []WorkspacesWorkspace `pulumi:"workspaces"`
}

func WorkspacesOutput(ctx *pulumi.Context, args WorkspacesOutputArgs, opts ...pulumi.InvokeOption) WorkspacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (WorkspacesResult, error) {
			args := v.(WorkspacesArgs)
			r, err := Workspaces(ctx, &args, opts...)
			var s WorkspacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(WorkspacesResultOutput)
}

// A collection of arguments for invoking Workspaces.
type WorkspacesOutputArgs struct {
	// A list of Workspace IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A list of Instance Type IDs.
	InstanceTypeIds pulumi.StringArrayInput `pulumi:"instanceTypeIds"`
	// The name of workspace.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of vmp workspace.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// A list of Workspace status.
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
	// The tags of vmp workspace.
	Tags WorkspacesTagArrayInput `pulumi:"tags"`
}

func (WorkspacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesArgs)(nil)).Elem()
}

// A collection of values returned by Workspaces.
type WorkspacesResultOutput struct{ *pulumi.OutputState }

func (WorkspacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesResult)(nil)).Elem()
}

func (o WorkspacesResultOutput) ToWorkspacesResultOutput() WorkspacesResultOutput {
	return o
}

func (o WorkspacesResultOutput) ToWorkspacesResultOutputWithContext(ctx context.Context) WorkspacesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o WorkspacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o WorkspacesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspacesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o WorkspacesResultOutput) InstanceTypeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspacesResult) []string { return v.InstanceTypeIds }).(pulumi.StringArrayOutput)
}

// The name of workspace.
func (o WorkspacesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o WorkspacesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of vmp workspace.
func (o WorkspacesResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacesResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

func (o WorkspacesResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspacesResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

// Tags.
func (o WorkspacesResultOutput) Tags() WorkspacesTagArrayOutput {
	return o.ApplyT(func(v WorkspacesResult) []WorkspacesTag { return v.Tags }).(WorkspacesTagArrayOutput)
}

// The total count of query.
func (o WorkspacesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The collection of query.
func (o WorkspacesResultOutput) Workspaces() WorkspacesWorkspaceArrayOutput {
	return o.ApplyT(func(v WorkspacesResult) []WorkspacesWorkspace { return v.Workspaces }).(WorkspacesWorkspaceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkspacesResultOutput{})
}
