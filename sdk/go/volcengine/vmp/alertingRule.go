// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage vmp alerting rule
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vmp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooWorkspace, err := vmp.NewWorkspace(ctx, "fooWorkspace", &vmp.WorkspaceArgs{
//				InstanceTypeId:          pulumi.String("vmp.standard.15d"),
//				DeleteProtectionEnabled: pulumi.Bool(false),
//				Description:             pulumi.String("acc-test-1"),
//				Username:                pulumi.String("admin123"),
//				Password:                pulumi.String("Pass123456"),
//			})
//			if err != nil {
//				return err
//			}
//			fooContact, err := vmp.NewContact(ctx, "fooContact", &vmp.ContactArgs{
//				Email: pulumi.String("acctest1@tftest.com"),
//				Webhook: &vmp.ContactWebhookArgs{
//					Address: pulumi.String("https://www.acctest1.com"),
//				},
//				LarkBotWebhook: &vmp.ContactLarkBotWebhookArgs{
//					Address: pulumi.String("https://www.acctest1.com"),
//				},
//				DingTalkBotWebhook: &vmp.ContactDingTalkBotWebhookArgs{
//					Address: pulumi.String("https://www.dingacctest1.com"),
//					AtMobiles: pulumi.StringArray{
//						pulumi.String("18046891812"),
//					},
//				},
//				PhoneNumber: &vmp.ContactPhoneNumberArgs{
//					CountryCode: pulumi.String("+86"),
//					Number:      pulumi.String("18310101010"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			foo1Contact, err := vmp.NewContact(ctx, "foo1Contact", &vmp.ContactArgs{
//				Email: pulumi.String("acctest2@tftest.com"),
//				Webhook: &vmp.ContactWebhookArgs{
//					Address: pulumi.String("https://www.acctest2.com"),
//				},
//				LarkBotWebhook: &vmp.ContactLarkBotWebhookArgs{
//					Address: pulumi.String("https://www.acctest2.com"),
//				},
//				DingTalkBotWebhook: &vmp.ContactDingTalkBotWebhookArgs{
//					Address: pulumi.String("https://www.dingacctest2.com"),
//					AtMobiles: pulumi.StringArray{
//						pulumi.String("18046891813"),
//					},
//				},
//				PhoneNumber: &vmp.ContactPhoneNumberArgs{
//					CountryCode: pulumi.String("+86"),
//					Number:      pulumi.String("18310101011"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooContactGroup, err := vmp.NewContactGroup(ctx, "fooContactGroup", &vmp.ContactGroupArgs{
//				ContactIds: pulumi.StringArray{
//					fooContact.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			foo1ContactGroup, err := vmp.NewContactGroup(ctx, "foo1ContactGroup", &vmp.ContactGroupArgs{
//				ContactIds: pulumi.StringArray{
//					foo1Contact.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooNotifyPolicy, err := vmp.NewNotifyPolicy(ctx, "fooNotifyPolicy", &vmp.NotifyPolicyArgs{
//				Description: pulumi.String("acc-test-1"),
//				Levels: vmp.NotifyPolicyLevelArray{
//					&vmp.NotifyPolicyLevelArgs{
//						Level: pulumi.String("P1"),
//						ContactGroupIds: pulumi.StringArray{
//							fooContactGroup.ID(),
//						},
//						Channels: pulumi.StringArray{
//							pulumi.String("Email"),
//							pulumi.String("Webhook"),
//						},
//					},
//					&vmp.NotifyPolicyLevelArgs{
//						Level: pulumi.String("P0"),
//						ContactGroupIds: pulumi.StringArray{
//							foo1ContactGroup.ID(),
//						},
//						Channels: pulumi.StringArray{
//							pulumi.String("LarkBotWebhook"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooNotifyGroupPolicy, err := vmp.NewNotifyGroupPolicy(ctx, "fooNotifyGroupPolicy", &vmp.NotifyGroupPolicyArgs{
//				Description: pulumi.String("acc-test-1"),
//				Levels: vmp.NotifyGroupPolicyLevelArray{
//					&vmp.NotifyGroupPolicyLevelArgs{
//						Level: pulumi.String("P2"),
//						GroupBies: pulumi.StringArray{
//							pulumi.String("__rule__"),
//						},
//						GroupWait:      pulumi.String("35"),
//						GroupInterval:  pulumi.String("60"),
//						RepeatInterval: pulumi.String("70"),
//					},
//					&vmp.NotifyGroupPolicyLevelArgs{
//						Level: pulumi.String("P0"),
//						GroupBies: pulumi.StringArray{
//							pulumi.String("__rule__"),
//						},
//						GroupWait:      pulumi.String("30"),
//						GroupInterval:  pulumi.String("60"),
//						RepeatInterval: pulumi.String("70"),
//					},
//					&vmp.NotifyGroupPolicyLevelArgs{
//						Level: pulumi.String("P1"),
//						GroupBies: pulumi.StringArray{
//							pulumi.String("__rule__"),
//						},
//						GroupWait:      pulumi.String("40"),
//						GroupInterval:  pulumi.String("75"),
//						RepeatInterval: pulumi.String("75"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vmp.NewAlertingRule(ctx, "fooAlertingRule", &vmp.AlertingRuleArgs{
//				Description:         pulumi.String("acc-test-1"),
//				NotifyPolicyId:      fooNotifyPolicy.ID(),
//				NotifyGroupPolicyId: fooNotifyGroupPolicy.ID(),
//				Query: &vmp.AlertingRuleQueryArgs{
//					WorkspaceId: fooWorkspace.ID(),
//					PromQl:      pulumi.String("sum(up)"),
//				},
//				Levels: vmp.AlertingRuleLevelArray{
//					&vmp.AlertingRuleLevelArgs{
//						Level:      pulumi.String("P0"),
//						For:        pulumi.String("0s"),
//						Comparator: pulumi.String(">="),
//						Threshold:  pulumi.Float64(2),
//					},
//					&vmp.AlertingRuleLevelArgs{
//						Level:      pulumi.String("P1"),
//						For:        pulumi.String("0s"),
//						Comparator: pulumi.String(">="),
//						Threshold:  pulumi.Float64(1),
//					},
//					&vmp.AlertingRuleLevelArgs{
//						Level:      pulumi.String("P2"),
//						For:        pulumi.String("0s"),
//						Comparator: pulumi.String(">="),
//						Threshold:  pulumi.Float64(0.5),
//					},
//				},
//				Annotations: vmp.AlertingRuleAnnotationArray{
//					&vmp.AlertingRuleAnnotationArgs{
//						Name:  pulumi.String("annotation"),
//						Value: pulumi.String("acc-test"),
//					},
//				},
//				Labels: vmp.AlertingRuleLabelArray{
//					&vmp.AlertingRuleLabelArgs{
//						Name:  pulumi.String("label"),
//						Value: pulumi.String("acc-test"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VmpAlertingRule can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:vmp/alertingRule:AlertingRule default 5bd29e81-2717-4ac8-a1a6-d76da2b1****
// ```
type AlertingRule struct {
	pulumi.CustomResourceState

	// The annotations of the vmp alerting rule.
	Annotations AlertingRuleAnnotationArrayOutput `pulumi:"annotations"`
	// The create time of the vmp alerting rule.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The description of the vmp alerting rule.
	Description pulumi.StringOutput `pulumi:"description"`
	// The labels of the vmp alerting rule.
	Labels AlertingRuleLabelArrayOutput `pulumi:"labels"`
	// The alerting levels of the vmp alerting rule.
	Levels AlertingRuleLevelArrayOutput `pulumi:"levels"`
	// The name of the vmp alerting rule.
	Name pulumi.StringOutput `pulumi:"name"`
	// The id of the notify group policy.
	NotifyGroupPolicyId pulumi.StringOutput `pulumi:"notifyGroupPolicyId"`
	// The id of the notify policy.
	NotifyPolicyId pulumi.StringPtrOutput `pulumi:"notifyPolicyId"`
	// The alerting query of the vmp alerting rule.
	Query AlertingRuleQueryOutput `pulumi:"query"`
	// The status of the vmp alerting rule.
	Status pulumi.StringOutput `pulumi:"status"`
	// The update time of the vmp alerting rule.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAlertingRule registers a new resource with the given unique name, arguments, and options.
func NewAlertingRule(ctx *pulumi.Context,
	name string, args *AlertingRuleArgs, opts ...pulumi.ResourceOption) (*AlertingRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Levels == nil {
		return nil, errors.New("invalid value for required argument 'Levels'")
	}
	if args.NotifyGroupPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'NotifyGroupPolicyId'")
	}
	if args.Query == nil {
		return nil, errors.New("invalid value for required argument 'Query'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlertingRule
	err := ctx.RegisterResource("volcengine:vmp/alertingRule:AlertingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertingRule gets an existing AlertingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertingRuleState, opts ...pulumi.ResourceOption) (*AlertingRule, error) {
	var resource AlertingRule
	err := ctx.ReadResource("volcengine:vmp/alertingRule:AlertingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertingRule resources.
type alertingRuleState struct {
	// The annotations of the vmp alerting rule.
	Annotations []AlertingRuleAnnotation `pulumi:"annotations"`
	// The create time of the vmp alerting rule.
	CreateTime *string `pulumi:"createTime"`
	// The description of the vmp alerting rule.
	Description *string `pulumi:"description"`
	// The labels of the vmp alerting rule.
	Labels []AlertingRuleLabel `pulumi:"labels"`
	// The alerting levels of the vmp alerting rule.
	Levels []AlertingRuleLevel `pulumi:"levels"`
	// The name of the vmp alerting rule.
	Name *string `pulumi:"name"`
	// The id of the notify group policy.
	NotifyGroupPolicyId *string `pulumi:"notifyGroupPolicyId"`
	// The id of the notify policy.
	NotifyPolicyId *string `pulumi:"notifyPolicyId"`
	// The alerting query of the vmp alerting rule.
	Query *AlertingRuleQuery `pulumi:"query"`
	// The status of the vmp alerting rule.
	Status *string `pulumi:"status"`
	// The update time of the vmp alerting rule.
	UpdateTime *string `pulumi:"updateTime"`
}

type AlertingRuleState struct {
	// The annotations of the vmp alerting rule.
	Annotations AlertingRuleAnnotationArrayInput
	// The create time of the vmp alerting rule.
	CreateTime pulumi.StringPtrInput
	// The description of the vmp alerting rule.
	Description pulumi.StringPtrInput
	// The labels of the vmp alerting rule.
	Labels AlertingRuleLabelArrayInput
	// The alerting levels of the vmp alerting rule.
	Levels AlertingRuleLevelArrayInput
	// The name of the vmp alerting rule.
	Name pulumi.StringPtrInput
	// The id of the notify group policy.
	NotifyGroupPolicyId pulumi.StringPtrInput
	// The id of the notify policy.
	NotifyPolicyId pulumi.StringPtrInput
	// The alerting query of the vmp alerting rule.
	Query AlertingRuleQueryPtrInput
	// The status of the vmp alerting rule.
	Status pulumi.StringPtrInput
	// The update time of the vmp alerting rule.
	UpdateTime pulumi.StringPtrInput
}

func (AlertingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertingRuleState)(nil)).Elem()
}

type alertingRuleArgs struct {
	// The annotations of the vmp alerting rule.
	Annotations []AlertingRuleAnnotation `pulumi:"annotations"`
	// The description of the vmp alerting rule.
	Description *string `pulumi:"description"`
	// The labels of the vmp alerting rule.
	Labels []AlertingRuleLabel `pulumi:"labels"`
	// The alerting levels of the vmp alerting rule.
	Levels []AlertingRuleLevel `pulumi:"levels"`
	// The name of the vmp alerting rule.
	Name *string `pulumi:"name"`
	// The id of the notify group policy.
	NotifyGroupPolicyId string `pulumi:"notifyGroupPolicyId"`
	// The id of the notify policy.
	NotifyPolicyId *string `pulumi:"notifyPolicyId"`
	// The alerting query of the vmp alerting rule.
	Query AlertingRuleQuery `pulumi:"query"`
}

// The set of arguments for constructing a AlertingRule resource.
type AlertingRuleArgs struct {
	// The annotations of the vmp alerting rule.
	Annotations AlertingRuleAnnotationArrayInput
	// The description of the vmp alerting rule.
	Description pulumi.StringPtrInput
	// The labels of the vmp alerting rule.
	Labels AlertingRuleLabelArrayInput
	// The alerting levels of the vmp alerting rule.
	Levels AlertingRuleLevelArrayInput
	// The name of the vmp alerting rule.
	Name pulumi.StringPtrInput
	// The id of the notify group policy.
	NotifyGroupPolicyId pulumi.StringInput
	// The id of the notify policy.
	NotifyPolicyId pulumi.StringPtrInput
	// The alerting query of the vmp alerting rule.
	Query AlertingRuleQueryInput
}

func (AlertingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertingRuleArgs)(nil)).Elem()
}

type AlertingRuleInput interface {
	pulumi.Input

	ToAlertingRuleOutput() AlertingRuleOutput
	ToAlertingRuleOutputWithContext(ctx context.Context) AlertingRuleOutput
}

func (*AlertingRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertingRule)(nil)).Elem()
}

func (i *AlertingRule) ToAlertingRuleOutput() AlertingRuleOutput {
	return i.ToAlertingRuleOutputWithContext(context.Background())
}

func (i *AlertingRule) ToAlertingRuleOutputWithContext(ctx context.Context) AlertingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleOutput)
}

// AlertingRuleArrayInput is an input type that accepts AlertingRuleArray and AlertingRuleArrayOutput values.
// You can construct a concrete instance of `AlertingRuleArrayInput` via:
//
//	AlertingRuleArray{ AlertingRuleArgs{...} }
type AlertingRuleArrayInput interface {
	pulumi.Input

	ToAlertingRuleArrayOutput() AlertingRuleArrayOutput
	ToAlertingRuleArrayOutputWithContext(context.Context) AlertingRuleArrayOutput
}

type AlertingRuleArray []AlertingRuleInput

func (AlertingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertingRule)(nil)).Elem()
}

func (i AlertingRuleArray) ToAlertingRuleArrayOutput() AlertingRuleArrayOutput {
	return i.ToAlertingRuleArrayOutputWithContext(context.Background())
}

func (i AlertingRuleArray) ToAlertingRuleArrayOutputWithContext(ctx context.Context) AlertingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleArrayOutput)
}

// AlertingRuleMapInput is an input type that accepts AlertingRuleMap and AlertingRuleMapOutput values.
// You can construct a concrete instance of `AlertingRuleMapInput` via:
//
//	AlertingRuleMap{ "key": AlertingRuleArgs{...} }
type AlertingRuleMapInput interface {
	pulumi.Input

	ToAlertingRuleMapOutput() AlertingRuleMapOutput
	ToAlertingRuleMapOutputWithContext(context.Context) AlertingRuleMapOutput
}

type AlertingRuleMap map[string]AlertingRuleInput

func (AlertingRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertingRule)(nil)).Elem()
}

func (i AlertingRuleMap) ToAlertingRuleMapOutput() AlertingRuleMapOutput {
	return i.ToAlertingRuleMapOutputWithContext(context.Background())
}

func (i AlertingRuleMap) ToAlertingRuleMapOutputWithContext(ctx context.Context) AlertingRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleMapOutput)
}

type AlertingRuleOutput struct{ *pulumi.OutputState }

func (AlertingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertingRule)(nil)).Elem()
}

func (o AlertingRuleOutput) ToAlertingRuleOutput() AlertingRuleOutput {
	return o
}

func (o AlertingRuleOutput) ToAlertingRuleOutputWithContext(ctx context.Context) AlertingRuleOutput {
	return o
}

// The annotations of the vmp alerting rule.
func (o AlertingRuleOutput) Annotations() AlertingRuleAnnotationArrayOutput {
	return o.ApplyT(func(v *AlertingRule) AlertingRuleAnnotationArrayOutput { return v.Annotations }).(AlertingRuleAnnotationArrayOutput)
}

// The create time of the vmp alerting rule.
func (o AlertingRuleOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertingRule) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the vmp alerting rule.
func (o AlertingRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertingRule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The labels of the vmp alerting rule.
func (o AlertingRuleOutput) Labels() AlertingRuleLabelArrayOutput {
	return o.ApplyT(func(v *AlertingRule) AlertingRuleLabelArrayOutput { return v.Labels }).(AlertingRuleLabelArrayOutput)
}

// The alerting levels of the vmp alerting rule.
func (o AlertingRuleOutput) Levels() AlertingRuleLevelArrayOutput {
	return o.ApplyT(func(v *AlertingRule) AlertingRuleLevelArrayOutput { return v.Levels }).(AlertingRuleLevelArrayOutput)
}

// The name of the vmp alerting rule.
func (o AlertingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertingRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The id of the notify group policy.
func (o AlertingRuleOutput) NotifyGroupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertingRule) pulumi.StringOutput { return v.NotifyGroupPolicyId }).(pulumi.StringOutput)
}

// The id of the notify policy.
func (o AlertingRuleOutput) NotifyPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertingRule) pulumi.StringPtrOutput { return v.NotifyPolicyId }).(pulumi.StringPtrOutput)
}

// The alerting query of the vmp alerting rule.
func (o AlertingRuleOutput) Query() AlertingRuleQueryOutput {
	return o.ApplyT(func(v *AlertingRule) AlertingRuleQueryOutput { return v.Query }).(AlertingRuleQueryOutput)
}

// The status of the vmp alerting rule.
func (o AlertingRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertingRule) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The update time of the vmp alerting rule.
func (o AlertingRuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertingRule) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type AlertingRuleArrayOutput struct{ *pulumi.OutputState }

func (AlertingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertingRule)(nil)).Elem()
}

func (o AlertingRuleArrayOutput) ToAlertingRuleArrayOutput() AlertingRuleArrayOutput {
	return o
}

func (o AlertingRuleArrayOutput) ToAlertingRuleArrayOutputWithContext(ctx context.Context) AlertingRuleArrayOutput {
	return o
}

func (o AlertingRuleArrayOutput) Index(i pulumi.IntInput) AlertingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertingRule {
		return vs[0].([]*AlertingRule)[vs[1].(int)]
	}).(AlertingRuleOutput)
}

type AlertingRuleMapOutput struct{ *pulumi.OutputState }

func (AlertingRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertingRule)(nil)).Elem()
}

func (o AlertingRuleMapOutput) ToAlertingRuleMapOutput() AlertingRuleMapOutput {
	return o
}

func (o AlertingRuleMapOutput) ToAlertingRuleMapOutputWithContext(ctx context.Context) AlertingRuleMapOutput {
	return o
}

func (o AlertingRuleMapOutput) MapIndex(k pulumi.StringInput) AlertingRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertingRule {
		return vs[0].(map[string]*AlertingRule)[vs[1].(string)]
	}).(AlertingRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleInput)(nil)).Elem(), &AlertingRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleArrayInput)(nil)).Elem(), AlertingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleMapInput)(nil)).Elem(), AlertingRuleMap{})
	pulumi.RegisterOutputType(AlertingRuleOutput{})
	pulumi.RegisterOutputType(AlertingRuleArrayOutput{})
	pulumi.RegisterOutputType(AlertingRuleMapOutput{})
}
