// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of vmp rule files
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vmp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooWorkspace, err := vmp.NewWorkspace(ctx, "fooWorkspace", &vmp.WorkspaceArgs{
//				InstanceTypeId:          pulumi.String("vmp.standard.15d"),
//				DeleteProtectionEnabled: pulumi.Bool(false),
//				Description:             pulumi.String("acc-test-1"),
//				Username:                pulumi.String("admin123"),
//				Password:                pulumi.String("*********"),
//			})
//			if err != nil {
//				return err
//			}
//			fooRuleFile, err := vmp.NewRuleFile(ctx, "fooRuleFile", &vmp.RuleFileArgs{
//				WorkspaceId: fooWorkspace.ID(),
//				Description: pulumi.String("acc-test-1"),
//				Content: pulumi.String(`groups:
//	    - interval: 10s
//	      name: recording_rules
//	      rules:
//	        - expr: sum(irate(container_cpu_usage_seconds_total{image!=""}[5m])) by (pod) *100
//	          labels:
//	            team: operations
//	          record: pod:cpu:useage
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			_ = vmp.GetRuleFilesOutput(ctx, vmp.GetRuleFilesOutputArgs{
//				Ids: pulumi.StringArray{
//					fooRuleFile.RuleFileId,
//				},
//				WorkspaceId: fooWorkspace.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetRuleFiles(ctx *pulumi.Context, args *GetRuleFilesArgs, opts ...pulumi.InvokeOption) (*GetRuleFilesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRuleFilesResult
	err := ctx.Invoke("volcengine:vmp/getRuleFiles:getRuleFiles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuleFiles.
type GetRuleFilesArgs struct {
	// A list of Rule File IDs.
	Ids []string `pulumi:"ids"`
	// The name of rule file.
	Name *string `pulumi:"name"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The status of rule file.
	Status *string `pulumi:"status"`
	// The id of workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// A collection of values returned by getRuleFiles.
type GetRuleFilesResult struct {
	// The collection of query.
	Files []GetRuleFilesFile `pulumi:"files"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The name of rule file.
	Name       *string `pulumi:"name"`
	OutputFile *string `pulumi:"outputFile"`
	// The status of rule file.
	Status *string `pulumi:"status"`
	// The total count of query.
	TotalCount  int    `pulumi:"totalCount"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func GetRuleFilesOutput(ctx *pulumi.Context, args GetRuleFilesOutputArgs, opts ...pulumi.InvokeOption) GetRuleFilesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRuleFilesResult, error) {
			args := v.(GetRuleFilesArgs)
			r, err := GetRuleFiles(ctx, &args, opts...)
			var s GetRuleFilesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRuleFilesResultOutput)
}

// A collection of arguments for invoking getRuleFiles.
type GetRuleFilesOutputArgs struct {
	// A list of Rule File IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The name of rule file.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The status of rule file.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The id of workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (GetRuleFilesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleFilesArgs)(nil)).Elem()
}

// A collection of values returned by getRuleFiles.
type GetRuleFilesResultOutput struct{ *pulumi.OutputState }

func (GetRuleFilesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleFilesResult)(nil)).Elem()
}

func (o GetRuleFilesResultOutput) ToGetRuleFilesResultOutput() GetRuleFilesResultOutput {
	return o
}

func (o GetRuleFilesResultOutput) ToGetRuleFilesResultOutputWithContext(ctx context.Context) GetRuleFilesResultOutput {
	return o
}

// The collection of query.
func (o GetRuleFilesResultOutput) Files() GetRuleFilesFileArrayOutput {
	return o.ApplyT(func(v GetRuleFilesResult) []GetRuleFilesFile { return v.Files }).(GetRuleFilesFileArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRuleFilesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRuleFilesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleFilesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The name of rule file.
func (o GetRuleFilesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRuleFilesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetRuleFilesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRuleFilesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The status of rule file.
func (o GetRuleFilesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRuleFilesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetRuleFilesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleFilesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o GetRuleFilesResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRuleFilesResultOutput{})
}
