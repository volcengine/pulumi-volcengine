// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of vmp alerts
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vmp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vmp.GetAlerts(ctx, &vmp.GetAlertsArgs{
//				Ids: []string{
//					"9a4f84-0868efcb795c2ac4-73cefd4b3263****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.vmp.Alerts has been deprecated in favor of volcengine.vmp.getAlerts
func Alerts(ctx *pulumi.Context, args *AlertsArgs, opts ...pulumi.InvokeOption) (*AlertsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv AlertsResult
	err := ctx.Invoke("volcengine:vmp/alerts:Alerts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Alerts.
type AlertsArgs struct {
	// A list of alerting rule IDs.
	AlertingRuleIds []string `pulumi:"alertingRuleIds"`
	// The status of vmp alert. Valid values: `Pending`, `Active`, `Resolved`, `Disabled`.
	CurrentPhase *string `pulumi:"currentPhase"`
	// Whether to use descending sorting.
	Desc *bool `pulumi:"desc"`
	// A list of vmp alert IDs.
	Ids []string `pulumi:"ids"`
	// The level of vmp alert. Valid values: `P0`, `P1`, `P2`.
	Level *string `pulumi:"level"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by Alerts.
type AlertsResult struct {
	AlertingRuleIds []string `pulumi:"alertingRuleIds"`
	// The collection of query.
	Alerts []AlertsAlert `pulumi:"alerts"`
	// The status of the vmp alert.
	CurrentPhase *string `pulumi:"currentPhase"`
	Desc         *bool   `pulumi:"desc"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The level of the vmp alerting rule.
	Level      *string `pulumi:"level"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func AlertsOutput(ctx *pulumi.Context, args AlertsOutputArgs, opts ...pulumi.InvokeOption) AlertsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AlertsResult, error) {
			args := v.(AlertsArgs)
			r, err := Alerts(ctx, &args, opts...)
			var s AlertsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AlertsResultOutput)
}

// A collection of arguments for invoking Alerts.
type AlertsOutputArgs struct {
	// A list of alerting rule IDs.
	AlertingRuleIds pulumi.StringArrayInput `pulumi:"alertingRuleIds"`
	// The status of vmp alert. Valid values: `Pending`, `Active`, `Resolved`, `Disabled`.
	CurrentPhase pulumi.StringPtrInput `pulumi:"currentPhase"`
	// Whether to use descending sorting.
	Desc pulumi.BoolPtrInput `pulumi:"desc"`
	// A list of vmp alert IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The level of vmp alert. Valid values: `P0`, `P1`, `P2`.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (AlertsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsArgs)(nil)).Elem()
}

// A collection of values returned by Alerts.
type AlertsResultOutput struct{ *pulumi.OutputState }

func (AlertsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsResult)(nil)).Elem()
}

func (o AlertsResultOutput) ToAlertsResultOutput() AlertsResultOutput {
	return o
}

func (o AlertsResultOutput) ToAlertsResultOutputWithContext(ctx context.Context) AlertsResultOutput {
	return o
}

func (o AlertsResultOutput) AlertingRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertsResult) []string { return v.AlertingRuleIds }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o AlertsResultOutput) Alerts() AlertsAlertArrayOutput {
	return o.ApplyT(func(v AlertsResult) []AlertsAlert { return v.Alerts }).(AlertsAlertArrayOutput)
}

// The status of the vmp alert.
func (o AlertsResultOutput) CurrentPhase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertsResult) *string { return v.CurrentPhase }).(pulumi.StringPtrOutput)
}

func (o AlertsResultOutput) Desc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertsResult) *bool { return v.Desc }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o AlertsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o AlertsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The level of the vmp alerting rule.
func (o AlertsResultOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertsResult) *string { return v.Level }).(pulumi.StringPtrOutput)
}

func (o AlertsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o AlertsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AlertsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertsResultOutput{})
}
