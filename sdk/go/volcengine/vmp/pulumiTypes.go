// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AlertingRuleAnnotation struct {
	// The name of the annotation.
	Name string `pulumi:"name"`
	// The value of the annotation.
	Value string `pulumi:"value"`
}

// AlertingRuleAnnotationInput is an input type that accepts AlertingRuleAnnotationArgs and AlertingRuleAnnotationOutput values.
// You can construct a concrete instance of `AlertingRuleAnnotationInput` via:
//
//	AlertingRuleAnnotationArgs{...}
type AlertingRuleAnnotationInput interface {
	pulumi.Input

	ToAlertingRuleAnnotationOutput() AlertingRuleAnnotationOutput
	ToAlertingRuleAnnotationOutputWithContext(context.Context) AlertingRuleAnnotationOutput
}

type AlertingRuleAnnotationArgs struct {
	// The name of the annotation.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the annotation.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertingRuleAnnotationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRuleAnnotation)(nil)).Elem()
}

func (i AlertingRuleAnnotationArgs) ToAlertingRuleAnnotationOutput() AlertingRuleAnnotationOutput {
	return i.ToAlertingRuleAnnotationOutputWithContext(context.Background())
}

func (i AlertingRuleAnnotationArgs) ToAlertingRuleAnnotationOutputWithContext(ctx context.Context) AlertingRuleAnnotationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleAnnotationOutput)
}

// AlertingRuleAnnotationArrayInput is an input type that accepts AlertingRuleAnnotationArray and AlertingRuleAnnotationArrayOutput values.
// You can construct a concrete instance of `AlertingRuleAnnotationArrayInput` via:
//
//	AlertingRuleAnnotationArray{ AlertingRuleAnnotationArgs{...} }
type AlertingRuleAnnotationArrayInput interface {
	pulumi.Input

	ToAlertingRuleAnnotationArrayOutput() AlertingRuleAnnotationArrayOutput
	ToAlertingRuleAnnotationArrayOutputWithContext(context.Context) AlertingRuleAnnotationArrayOutput
}

type AlertingRuleAnnotationArray []AlertingRuleAnnotationInput

func (AlertingRuleAnnotationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRuleAnnotation)(nil)).Elem()
}

func (i AlertingRuleAnnotationArray) ToAlertingRuleAnnotationArrayOutput() AlertingRuleAnnotationArrayOutput {
	return i.ToAlertingRuleAnnotationArrayOutputWithContext(context.Background())
}

func (i AlertingRuleAnnotationArray) ToAlertingRuleAnnotationArrayOutputWithContext(ctx context.Context) AlertingRuleAnnotationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleAnnotationArrayOutput)
}

type AlertingRuleAnnotationOutput struct{ *pulumi.OutputState }

func (AlertingRuleAnnotationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRuleAnnotation)(nil)).Elem()
}

func (o AlertingRuleAnnotationOutput) ToAlertingRuleAnnotationOutput() AlertingRuleAnnotationOutput {
	return o
}

func (o AlertingRuleAnnotationOutput) ToAlertingRuleAnnotationOutputWithContext(ctx context.Context) AlertingRuleAnnotationOutput {
	return o
}

// The name of the annotation.
func (o AlertingRuleAnnotationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleAnnotation) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the annotation.
func (o AlertingRuleAnnotationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleAnnotation) string { return v.Value }).(pulumi.StringOutput)
}

type AlertingRuleAnnotationArrayOutput struct{ *pulumi.OutputState }

func (AlertingRuleAnnotationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRuleAnnotation)(nil)).Elem()
}

func (o AlertingRuleAnnotationArrayOutput) ToAlertingRuleAnnotationArrayOutput() AlertingRuleAnnotationArrayOutput {
	return o
}

func (o AlertingRuleAnnotationArrayOutput) ToAlertingRuleAnnotationArrayOutputWithContext(ctx context.Context) AlertingRuleAnnotationArrayOutput {
	return o
}

func (o AlertingRuleAnnotationArrayOutput) Index(i pulumi.IntInput) AlertingRuleAnnotationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertingRuleAnnotation {
		return vs[0].([]AlertingRuleAnnotation)[vs[1].(int)]
	}).(AlertingRuleAnnotationOutput)
}

type AlertingRuleLabel struct {
	// The name of the label.
	Name string `pulumi:"name"`
	// The value of the label.
	Value string `pulumi:"value"`
}

// AlertingRuleLabelInput is an input type that accepts AlertingRuleLabelArgs and AlertingRuleLabelOutput values.
// You can construct a concrete instance of `AlertingRuleLabelInput` via:
//
//	AlertingRuleLabelArgs{...}
type AlertingRuleLabelInput interface {
	pulumi.Input

	ToAlertingRuleLabelOutput() AlertingRuleLabelOutput
	ToAlertingRuleLabelOutputWithContext(context.Context) AlertingRuleLabelOutput
}

type AlertingRuleLabelArgs struct {
	// The name of the label.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertingRuleLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRuleLabel)(nil)).Elem()
}

func (i AlertingRuleLabelArgs) ToAlertingRuleLabelOutput() AlertingRuleLabelOutput {
	return i.ToAlertingRuleLabelOutputWithContext(context.Background())
}

func (i AlertingRuleLabelArgs) ToAlertingRuleLabelOutputWithContext(ctx context.Context) AlertingRuleLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleLabelOutput)
}

// AlertingRuleLabelArrayInput is an input type that accepts AlertingRuleLabelArray and AlertingRuleLabelArrayOutput values.
// You can construct a concrete instance of `AlertingRuleLabelArrayInput` via:
//
//	AlertingRuleLabelArray{ AlertingRuleLabelArgs{...} }
type AlertingRuleLabelArrayInput interface {
	pulumi.Input

	ToAlertingRuleLabelArrayOutput() AlertingRuleLabelArrayOutput
	ToAlertingRuleLabelArrayOutputWithContext(context.Context) AlertingRuleLabelArrayOutput
}

type AlertingRuleLabelArray []AlertingRuleLabelInput

func (AlertingRuleLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRuleLabel)(nil)).Elem()
}

func (i AlertingRuleLabelArray) ToAlertingRuleLabelArrayOutput() AlertingRuleLabelArrayOutput {
	return i.ToAlertingRuleLabelArrayOutputWithContext(context.Background())
}

func (i AlertingRuleLabelArray) ToAlertingRuleLabelArrayOutputWithContext(ctx context.Context) AlertingRuleLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleLabelArrayOutput)
}

type AlertingRuleLabelOutput struct{ *pulumi.OutputState }

func (AlertingRuleLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRuleLabel)(nil)).Elem()
}

func (o AlertingRuleLabelOutput) ToAlertingRuleLabelOutput() AlertingRuleLabelOutput {
	return o
}

func (o AlertingRuleLabelOutput) ToAlertingRuleLabelOutputWithContext(ctx context.Context) AlertingRuleLabelOutput {
	return o
}

// The name of the label.
func (o AlertingRuleLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleLabel) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the label.
func (o AlertingRuleLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleLabel) string { return v.Value }).(pulumi.StringOutput)
}

type AlertingRuleLabelArrayOutput struct{ *pulumi.OutputState }

func (AlertingRuleLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRuleLabel)(nil)).Elem()
}

func (o AlertingRuleLabelArrayOutput) ToAlertingRuleLabelArrayOutput() AlertingRuleLabelArrayOutput {
	return o
}

func (o AlertingRuleLabelArrayOutput) ToAlertingRuleLabelArrayOutputWithContext(ctx context.Context) AlertingRuleLabelArrayOutput {
	return o
}

func (o AlertingRuleLabelArrayOutput) Index(i pulumi.IntInput) AlertingRuleLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertingRuleLabel {
		return vs[0].([]AlertingRuleLabel)[vs[1].(int)]
	}).(AlertingRuleLabelOutput)
}

type AlertingRuleLevel struct {
	// The comparator of the vmp alerting rule. Valid values: `>`, `>=`, `<`, `<=`, `==`, `!=`.
	Comparator string `pulumi:"comparator"`
	// The duration of the alerting rule. Valid values: `0s`, `1m`, `2m`, `5m`, `10m`.
	For string `pulumi:"for"`
	// The level of the vmp alerting rule. Valid values: `P0`, `P1`, `P2`. The value of this field cannot be duplicate.
	Level string `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold float64 `pulumi:"threshold"`
}

// AlertingRuleLevelInput is an input type that accepts AlertingRuleLevelArgs and AlertingRuleLevelOutput values.
// You can construct a concrete instance of `AlertingRuleLevelInput` via:
//
//	AlertingRuleLevelArgs{...}
type AlertingRuleLevelInput interface {
	pulumi.Input

	ToAlertingRuleLevelOutput() AlertingRuleLevelOutput
	ToAlertingRuleLevelOutputWithContext(context.Context) AlertingRuleLevelOutput
}

type AlertingRuleLevelArgs struct {
	// The comparator of the vmp alerting rule. Valid values: `>`, `>=`, `<`, `<=`, `==`, `!=`.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// The duration of the alerting rule. Valid values: `0s`, `1m`, `2m`, `5m`, `10m`.
	For pulumi.StringInput `pulumi:"for"`
	// The level of the vmp alerting rule. Valid values: `P0`, `P1`, `P2`. The value of this field cannot be duplicate.
	Level pulumi.StringInput `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (AlertingRuleLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRuleLevel)(nil)).Elem()
}

func (i AlertingRuleLevelArgs) ToAlertingRuleLevelOutput() AlertingRuleLevelOutput {
	return i.ToAlertingRuleLevelOutputWithContext(context.Background())
}

func (i AlertingRuleLevelArgs) ToAlertingRuleLevelOutputWithContext(ctx context.Context) AlertingRuleLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleLevelOutput)
}

// AlertingRuleLevelArrayInput is an input type that accepts AlertingRuleLevelArray and AlertingRuleLevelArrayOutput values.
// You can construct a concrete instance of `AlertingRuleLevelArrayInput` via:
//
//	AlertingRuleLevelArray{ AlertingRuleLevelArgs{...} }
type AlertingRuleLevelArrayInput interface {
	pulumi.Input

	ToAlertingRuleLevelArrayOutput() AlertingRuleLevelArrayOutput
	ToAlertingRuleLevelArrayOutputWithContext(context.Context) AlertingRuleLevelArrayOutput
}

type AlertingRuleLevelArray []AlertingRuleLevelInput

func (AlertingRuleLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRuleLevel)(nil)).Elem()
}

func (i AlertingRuleLevelArray) ToAlertingRuleLevelArrayOutput() AlertingRuleLevelArrayOutput {
	return i.ToAlertingRuleLevelArrayOutputWithContext(context.Background())
}

func (i AlertingRuleLevelArray) ToAlertingRuleLevelArrayOutputWithContext(ctx context.Context) AlertingRuleLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleLevelArrayOutput)
}

type AlertingRuleLevelOutput struct{ *pulumi.OutputState }

func (AlertingRuleLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRuleLevel)(nil)).Elem()
}

func (o AlertingRuleLevelOutput) ToAlertingRuleLevelOutput() AlertingRuleLevelOutput {
	return o
}

func (o AlertingRuleLevelOutput) ToAlertingRuleLevelOutputWithContext(ctx context.Context) AlertingRuleLevelOutput {
	return o
}

// The comparator of the vmp alerting rule. Valid values: `>`, `>=`, `<`, `<=`, `==`, `!=`.
func (o AlertingRuleLevelOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleLevel) string { return v.Comparator }).(pulumi.StringOutput)
}

// The duration of the alerting rule. Valid values: `0s`, `1m`, `2m`, `5m`, `10m`.
func (o AlertingRuleLevelOutput) For() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleLevel) string { return v.For }).(pulumi.StringOutput)
}

// The level of the vmp alerting rule. Valid values: `P0`, `P1`, `P2`. The value of this field cannot be duplicate.
func (o AlertingRuleLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The threshold of the vmp alerting rule.
func (o AlertingRuleLevelOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v AlertingRuleLevel) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type AlertingRuleLevelArrayOutput struct{ *pulumi.OutputState }

func (AlertingRuleLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRuleLevel)(nil)).Elem()
}

func (o AlertingRuleLevelArrayOutput) ToAlertingRuleLevelArrayOutput() AlertingRuleLevelArrayOutput {
	return o
}

func (o AlertingRuleLevelArrayOutput) ToAlertingRuleLevelArrayOutputWithContext(ctx context.Context) AlertingRuleLevelArrayOutput {
	return o
}

func (o AlertingRuleLevelArrayOutput) Index(i pulumi.IntInput) AlertingRuleLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertingRuleLevel {
		return vs[0].([]AlertingRuleLevel)[vs[1].(int)]
	}).(AlertingRuleLevelOutput)
}

type AlertingRuleQuery struct {
	// The prom ql of query.
	PromQl string `pulumi:"promQl"`
	// The id of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// AlertingRuleQueryInput is an input type that accepts AlertingRuleQueryArgs and AlertingRuleQueryOutput values.
// You can construct a concrete instance of `AlertingRuleQueryInput` via:
//
//	AlertingRuleQueryArgs{...}
type AlertingRuleQueryInput interface {
	pulumi.Input

	ToAlertingRuleQueryOutput() AlertingRuleQueryOutput
	ToAlertingRuleQueryOutputWithContext(context.Context) AlertingRuleQueryOutput
}

type AlertingRuleQueryArgs struct {
	// The prom ql of query.
	PromQl pulumi.StringInput `pulumi:"promQl"`
	// The id of the workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (AlertingRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRuleQuery)(nil)).Elem()
}

func (i AlertingRuleQueryArgs) ToAlertingRuleQueryOutput() AlertingRuleQueryOutput {
	return i.ToAlertingRuleQueryOutputWithContext(context.Background())
}

func (i AlertingRuleQueryArgs) ToAlertingRuleQueryOutputWithContext(ctx context.Context) AlertingRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleQueryOutput)
}

func (i AlertingRuleQueryArgs) ToAlertingRuleQueryPtrOutput() AlertingRuleQueryPtrOutput {
	return i.ToAlertingRuleQueryPtrOutputWithContext(context.Background())
}

func (i AlertingRuleQueryArgs) ToAlertingRuleQueryPtrOutputWithContext(ctx context.Context) AlertingRuleQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleQueryOutput).ToAlertingRuleQueryPtrOutputWithContext(ctx)
}

// AlertingRuleQueryPtrInput is an input type that accepts AlertingRuleQueryArgs, AlertingRuleQueryPtr and AlertingRuleQueryPtrOutput values.
// You can construct a concrete instance of `AlertingRuleQueryPtrInput` via:
//
//	        AlertingRuleQueryArgs{...}
//
//	or:
//
//	        nil
type AlertingRuleQueryPtrInput interface {
	pulumi.Input

	ToAlertingRuleQueryPtrOutput() AlertingRuleQueryPtrOutput
	ToAlertingRuleQueryPtrOutputWithContext(context.Context) AlertingRuleQueryPtrOutput
}

type alertingRuleQueryPtrType AlertingRuleQueryArgs

func AlertingRuleQueryPtr(v *AlertingRuleQueryArgs) AlertingRuleQueryPtrInput {
	return (*alertingRuleQueryPtrType)(v)
}

func (*alertingRuleQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertingRuleQuery)(nil)).Elem()
}

func (i *alertingRuleQueryPtrType) ToAlertingRuleQueryPtrOutput() AlertingRuleQueryPtrOutput {
	return i.ToAlertingRuleQueryPtrOutputWithContext(context.Background())
}

func (i *alertingRuleQueryPtrType) ToAlertingRuleQueryPtrOutputWithContext(ctx context.Context) AlertingRuleQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRuleQueryPtrOutput)
}

type AlertingRuleQueryOutput struct{ *pulumi.OutputState }

func (AlertingRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRuleQuery)(nil)).Elem()
}

func (o AlertingRuleQueryOutput) ToAlertingRuleQueryOutput() AlertingRuleQueryOutput {
	return o
}

func (o AlertingRuleQueryOutput) ToAlertingRuleQueryOutputWithContext(ctx context.Context) AlertingRuleQueryOutput {
	return o
}

func (o AlertingRuleQueryOutput) ToAlertingRuleQueryPtrOutput() AlertingRuleQueryPtrOutput {
	return o.ToAlertingRuleQueryPtrOutputWithContext(context.Background())
}

func (o AlertingRuleQueryOutput) ToAlertingRuleQueryPtrOutputWithContext(ctx context.Context) AlertingRuleQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertingRuleQuery) *AlertingRuleQuery {
		return &v
	}).(AlertingRuleQueryPtrOutput)
}

// The prom ql of query.
func (o AlertingRuleQueryOutput) PromQl() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleQuery) string { return v.PromQl }).(pulumi.StringOutput)
}

// The id of the workspace.
func (o AlertingRuleQueryOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRuleQuery) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type AlertingRuleQueryPtrOutput struct{ *pulumi.OutputState }

func (AlertingRuleQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertingRuleQuery)(nil)).Elem()
}

func (o AlertingRuleQueryPtrOutput) ToAlertingRuleQueryPtrOutput() AlertingRuleQueryPtrOutput {
	return o
}

func (o AlertingRuleQueryPtrOutput) ToAlertingRuleQueryPtrOutputWithContext(ctx context.Context) AlertingRuleQueryPtrOutput {
	return o
}

func (o AlertingRuleQueryPtrOutput) Elem() AlertingRuleQueryOutput {
	return o.ApplyT(func(v *AlertingRuleQuery) AlertingRuleQuery {
		if v != nil {
			return *v
		}
		var ret AlertingRuleQuery
		return ret
	}).(AlertingRuleQueryOutput)
}

// The prom ql of query.
func (o AlertingRuleQueryPtrOutput) PromQl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertingRuleQuery) *string {
		if v == nil {
			return nil
		}
		return &v.PromQl
	}).(pulumi.StringPtrOutput)
}

// The id of the workspace.
func (o AlertingRuleQueryPtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertingRuleQuery) *string {
		if v == nil {
			return nil
		}
		return &v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

type AlertingRulesAlertingRule struct {
	// The annotations of the vmp alerting rule.
	Annotations []AlertingRulesAlertingRuleAnnotation `pulumi:"annotations"`
	// The create time of the vmp alerting rule.
	CreateTime string `pulumi:"createTime"`
	// The description of the vmp alerting rule.
	Description string `pulumi:"description"`
	// The id of the vmp alerting rule.
	Id string `pulumi:"id"`
	// The labels of the vmp alerting rule.
	Labels []AlertingRulesAlertingRuleLabel `pulumi:"labels"`
	// The alerting levels of the vmp alerting rule.
	Levels []AlertingRulesAlertingRuleLevel `pulumi:"levels"`
	// The name of vmp alerting rule. This field support fuzzy query.
	Name string `pulumi:"name"`
	// The notify group policy id of the vmp alerting rule.
	NotifyGroupPolicyId string `pulumi:"notifyGroupPolicyId"`
	// The notify policy id of the vmp alerting rule.
	NotifyPolicyId string `pulumi:"notifyPolicyId"`
	// The alerting query of the vmp alerting rule.
	Queries []AlertingRulesAlertingRuleQuery `pulumi:"queries"`
	// The status of vmp alerting rule. Valid values: `Running`, `Disabled`.
	Status string `pulumi:"status"`
	// The type of vmp alerting rule. Valid values: `vmp/PromQL`.
	Type string `pulumi:"type"`
	// The update time of the vmp alerting rule.
	UpdateTime string `pulumi:"updateTime"`
}

// AlertingRulesAlertingRuleInput is an input type that accepts AlertingRulesAlertingRuleArgs and AlertingRulesAlertingRuleOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleInput` via:
//
//	AlertingRulesAlertingRuleArgs{...}
type AlertingRulesAlertingRuleInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleOutput() AlertingRulesAlertingRuleOutput
	ToAlertingRulesAlertingRuleOutputWithContext(context.Context) AlertingRulesAlertingRuleOutput
}

type AlertingRulesAlertingRuleArgs struct {
	// The annotations of the vmp alerting rule.
	Annotations AlertingRulesAlertingRuleAnnotationArrayInput `pulumi:"annotations"`
	// The create time of the vmp alerting rule.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the vmp alerting rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the vmp alerting rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The labels of the vmp alerting rule.
	Labels AlertingRulesAlertingRuleLabelArrayInput `pulumi:"labels"`
	// The alerting levels of the vmp alerting rule.
	Levels AlertingRulesAlertingRuleLevelArrayInput `pulumi:"levels"`
	// The name of vmp alerting rule. This field support fuzzy query.
	Name pulumi.StringInput `pulumi:"name"`
	// The notify group policy id of the vmp alerting rule.
	NotifyGroupPolicyId pulumi.StringInput `pulumi:"notifyGroupPolicyId"`
	// The notify policy id of the vmp alerting rule.
	NotifyPolicyId pulumi.StringInput `pulumi:"notifyPolicyId"`
	// The alerting query of the vmp alerting rule.
	Queries AlertingRulesAlertingRuleQueryArrayInput `pulumi:"queries"`
	// The status of vmp alerting rule. Valid values: `Running`, `Disabled`.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of vmp alerting rule. Valid values: `vmp/PromQL`.
	Type pulumi.StringInput `pulumi:"type"`
	// The update time of the vmp alerting rule.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (AlertingRulesAlertingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRule)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleArgs) ToAlertingRulesAlertingRuleOutput() AlertingRulesAlertingRuleOutput {
	return i.ToAlertingRulesAlertingRuleOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleArgs) ToAlertingRulesAlertingRuleOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleOutput)
}

// AlertingRulesAlertingRuleArrayInput is an input type that accepts AlertingRulesAlertingRuleArray and AlertingRulesAlertingRuleArrayOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleArrayInput` via:
//
//	AlertingRulesAlertingRuleArray{ AlertingRulesAlertingRuleArgs{...} }
type AlertingRulesAlertingRuleArrayInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleArrayOutput() AlertingRulesAlertingRuleArrayOutput
	ToAlertingRulesAlertingRuleArrayOutputWithContext(context.Context) AlertingRulesAlertingRuleArrayOutput
}

type AlertingRulesAlertingRuleArray []AlertingRulesAlertingRuleInput

func (AlertingRulesAlertingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRule)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleArray) ToAlertingRulesAlertingRuleArrayOutput() AlertingRulesAlertingRuleArrayOutput {
	return i.ToAlertingRulesAlertingRuleArrayOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleArray) ToAlertingRulesAlertingRuleArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleArrayOutput)
}

type AlertingRulesAlertingRuleOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRule)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleOutput) ToAlertingRulesAlertingRuleOutput() AlertingRulesAlertingRuleOutput {
	return o
}

func (o AlertingRulesAlertingRuleOutput) ToAlertingRulesAlertingRuleOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleOutput {
	return o
}

// The annotations of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) Annotations() AlertingRulesAlertingRuleAnnotationArrayOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) []AlertingRulesAlertingRuleAnnotation { return v.Annotations }).(AlertingRulesAlertingRuleAnnotationArrayOutput)
}

// The create time of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.Id }).(pulumi.StringOutput)
}

// The labels of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) Labels() AlertingRulesAlertingRuleLabelArrayOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) []AlertingRulesAlertingRuleLabel { return v.Labels }).(AlertingRulesAlertingRuleLabelArrayOutput)
}

// The alerting levels of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) Levels() AlertingRulesAlertingRuleLevelArrayOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) []AlertingRulesAlertingRuleLevel { return v.Levels }).(AlertingRulesAlertingRuleLevelArrayOutput)
}

// The name of vmp alerting rule. This field support fuzzy query.
func (o AlertingRulesAlertingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.Name }).(pulumi.StringOutput)
}

// The notify group policy id of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) NotifyGroupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.NotifyGroupPolicyId }).(pulumi.StringOutput)
}

// The notify policy id of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) NotifyPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.NotifyPolicyId }).(pulumi.StringOutput)
}

// The alerting query of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) Queries() AlertingRulesAlertingRuleQueryArrayOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) []AlertingRulesAlertingRuleQuery { return v.Queries }).(AlertingRulesAlertingRuleQueryArrayOutput)
}

// The status of vmp alerting rule. Valid values: `Running`, `Disabled`.
func (o AlertingRulesAlertingRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.Status }).(pulumi.StringOutput)
}

// The type of vmp alerting rule. Valid values: `vmp/PromQL`.
func (o AlertingRulesAlertingRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.Type }).(pulumi.StringOutput)
}

// The update time of the vmp alerting rule.
func (o AlertingRulesAlertingRuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRule) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type AlertingRulesAlertingRuleArrayOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRule)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleArrayOutput) ToAlertingRulesAlertingRuleArrayOutput() AlertingRulesAlertingRuleArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleArrayOutput) ToAlertingRulesAlertingRuleArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleArrayOutput) Index(i pulumi.IntInput) AlertingRulesAlertingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertingRulesAlertingRule {
		return vs[0].([]AlertingRulesAlertingRule)[vs[1].(int)]
	}).(AlertingRulesAlertingRuleOutput)
}

type AlertingRulesAlertingRuleAnnotation struct {
	// The name of vmp alerting rule. This field support fuzzy query.
	Name string `pulumi:"name"`
	// The value of the label.
	Value string `pulumi:"value"`
}

// AlertingRulesAlertingRuleAnnotationInput is an input type that accepts AlertingRulesAlertingRuleAnnotationArgs and AlertingRulesAlertingRuleAnnotationOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleAnnotationInput` via:
//
//	AlertingRulesAlertingRuleAnnotationArgs{...}
type AlertingRulesAlertingRuleAnnotationInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleAnnotationOutput() AlertingRulesAlertingRuleAnnotationOutput
	ToAlertingRulesAlertingRuleAnnotationOutputWithContext(context.Context) AlertingRulesAlertingRuleAnnotationOutput
}

type AlertingRulesAlertingRuleAnnotationArgs struct {
	// The name of vmp alerting rule. This field support fuzzy query.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertingRulesAlertingRuleAnnotationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRuleAnnotation)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleAnnotationArgs) ToAlertingRulesAlertingRuleAnnotationOutput() AlertingRulesAlertingRuleAnnotationOutput {
	return i.ToAlertingRulesAlertingRuleAnnotationOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleAnnotationArgs) ToAlertingRulesAlertingRuleAnnotationOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleAnnotationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleAnnotationOutput)
}

// AlertingRulesAlertingRuleAnnotationArrayInput is an input type that accepts AlertingRulesAlertingRuleAnnotationArray and AlertingRulesAlertingRuleAnnotationArrayOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleAnnotationArrayInput` via:
//
//	AlertingRulesAlertingRuleAnnotationArray{ AlertingRulesAlertingRuleAnnotationArgs{...} }
type AlertingRulesAlertingRuleAnnotationArrayInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleAnnotationArrayOutput() AlertingRulesAlertingRuleAnnotationArrayOutput
	ToAlertingRulesAlertingRuleAnnotationArrayOutputWithContext(context.Context) AlertingRulesAlertingRuleAnnotationArrayOutput
}

type AlertingRulesAlertingRuleAnnotationArray []AlertingRulesAlertingRuleAnnotationInput

func (AlertingRulesAlertingRuleAnnotationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRuleAnnotation)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleAnnotationArray) ToAlertingRulesAlertingRuleAnnotationArrayOutput() AlertingRulesAlertingRuleAnnotationArrayOutput {
	return i.ToAlertingRulesAlertingRuleAnnotationArrayOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleAnnotationArray) ToAlertingRulesAlertingRuleAnnotationArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleAnnotationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleAnnotationArrayOutput)
}

type AlertingRulesAlertingRuleAnnotationOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleAnnotationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRuleAnnotation)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleAnnotationOutput) ToAlertingRulesAlertingRuleAnnotationOutput() AlertingRulesAlertingRuleAnnotationOutput {
	return o
}

func (o AlertingRulesAlertingRuleAnnotationOutput) ToAlertingRulesAlertingRuleAnnotationOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleAnnotationOutput {
	return o
}

// The name of vmp alerting rule. This field support fuzzy query.
func (o AlertingRulesAlertingRuleAnnotationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleAnnotation) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the label.
func (o AlertingRulesAlertingRuleAnnotationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleAnnotation) string { return v.Value }).(pulumi.StringOutput)
}

type AlertingRulesAlertingRuleAnnotationArrayOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleAnnotationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRuleAnnotation)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleAnnotationArrayOutput) ToAlertingRulesAlertingRuleAnnotationArrayOutput() AlertingRulesAlertingRuleAnnotationArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleAnnotationArrayOutput) ToAlertingRulesAlertingRuleAnnotationArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleAnnotationArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleAnnotationArrayOutput) Index(i pulumi.IntInput) AlertingRulesAlertingRuleAnnotationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertingRulesAlertingRuleAnnotation {
		return vs[0].([]AlertingRulesAlertingRuleAnnotation)[vs[1].(int)]
	}).(AlertingRulesAlertingRuleAnnotationOutput)
}

type AlertingRulesAlertingRuleLabel struct {
	// The name of the label.
	Key string `pulumi:"key"`
	// The value of the label.
	Value string `pulumi:"value"`
}

// AlertingRulesAlertingRuleLabelInput is an input type that accepts AlertingRulesAlertingRuleLabelArgs and AlertingRulesAlertingRuleLabelOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleLabelInput` via:
//
//	AlertingRulesAlertingRuleLabelArgs{...}
type AlertingRulesAlertingRuleLabelInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleLabelOutput() AlertingRulesAlertingRuleLabelOutput
	ToAlertingRulesAlertingRuleLabelOutputWithContext(context.Context) AlertingRulesAlertingRuleLabelOutput
}

type AlertingRulesAlertingRuleLabelArgs struct {
	// The name of the label.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertingRulesAlertingRuleLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRuleLabel)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleLabelArgs) ToAlertingRulesAlertingRuleLabelOutput() AlertingRulesAlertingRuleLabelOutput {
	return i.ToAlertingRulesAlertingRuleLabelOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleLabelArgs) ToAlertingRulesAlertingRuleLabelOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleLabelOutput)
}

// AlertingRulesAlertingRuleLabelArrayInput is an input type that accepts AlertingRulesAlertingRuleLabelArray and AlertingRulesAlertingRuleLabelArrayOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleLabelArrayInput` via:
//
//	AlertingRulesAlertingRuleLabelArray{ AlertingRulesAlertingRuleLabelArgs{...} }
type AlertingRulesAlertingRuleLabelArrayInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleLabelArrayOutput() AlertingRulesAlertingRuleLabelArrayOutput
	ToAlertingRulesAlertingRuleLabelArrayOutputWithContext(context.Context) AlertingRulesAlertingRuleLabelArrayOutput
}

type AlertingRulesAlertingRuleLabelArray []AlertingRulesAlertingRuleLabelInput

func (AlertingRulesAlertingRuleLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRuleLabel)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleLabelArray) ToAlertingRulesAlertingRuleLabelArrayOutput() AlertingRulesAlertingRuleLabelArrayOutput {
	return i.ToAlertingRulesAlertingRuleLabelArrayOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleLabelArray) ToAlertingRulesAlertingRuleLabelArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleLabelArrayOutput)
}

type AlertingRulesAlertingRuleLabelOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRuleLabel)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleLabelOutput) ToAlertingRulesAlertingRuleLabelOutput() AlertingRulesAlertingRuleLabelOutput {
	return o
}

func (o AlertingRulesAlertingRuleLabelOutput) ToAlertingRulesAlertingRuleLabelOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleLabelOutput {
	return o
}

// The name of the label.
func (o AlertingRulesAlertingRuleLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the label.
func (o AlertingRulesAlertingRuleLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleLabel) string { return v.Value }).(pulumi.StringOutput)
}

type AlertingRulesAlertingRuleLabelArrayOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRuleLabel)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleLabelArrayOutput) ToAlertingRulesAlertingRuleLabelArrayOutput() AlertingRulesAlertingRuleLabelArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleLabelArrayOutput) ToAlertingRulesAlertingRuleLabelArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleLabelArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleLabelArrayOutput) Index(i pulumi.IntInput) AlertingRulesAlertingRuleLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertingRulesAlertingRuleLabel {
		return vs[0].([]AlertingRulesAlertingRuleLabel)[vs[1].(int)]
	}).(AlertingRulesAlertingRuleLabelOutput)
}

type AlertingRulesAlertingRuleLevel struct {
	// The comparator of the vmp alerting rule.
	Comparator string `pulumi:"comparator"`
	// The duration of the alerting rule.
	For string `pulumi:"for"`
	// The level of the vmp alerting rule.
	Level string `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold float64 `pulumi:"threshold"`
}

// AlertingRulesAlertingRuleLevelInput is an input type that accepts AlertingRulesAlertingRuleLevelArgs and AlertingRulesAlertingRuleLevelOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleLevelInput` via:
//
//	AlertingRulesAlertingRuleLevelArgs{...}
type AlertingRulesAlertingRuleLevelInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleLevelOutput() AlertingRulesAlertingRuleLevelOutput
	ToAlertingRulesAlertingRuleLevelOutputWithContext(context.Context) AlertingRulesAlertingRuleLevelOutput
}

type AlertingRulesAlertingRuleLevelArgs struct {
	// The comparator of the vmp alerting rule.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// The duration of the alerting rule.
	For pulumi.StringInput `pulumi:"for"`
	// The level of the vmp alerting rule.
	Level pulumi.StringInput `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (AlertingRulesAlertingRuleLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRuleLevel)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleLevelArgs) ToAlertingRulesAlertingRuleLevelOutput() AlertingRulesAlertingRuleLevelOutput {
	return i.ToAlertingRulesAlertingRuleLevelOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleLevelArgs) ToAlertingRulesAlertingRuleLevelOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleLevelOutput)
}

// AlertingRulesAlertingRuleLevelArrayInput is an input type that accepts AlertingRulesAlertingRuleLevelArray and AlertingRulesAlertingRuleLevelArrayOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleLevelArrayInput` via:
//
//	AlertingRulesAlertingRuleLevelArray{ AlertingRulesAlertingRuleLevelArgs{...} }
type AlertingRulesAlertingRuleLevelArrayInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleLevelArrayOutput() AlertingRulesAlertingRuleLevelArrayOutput
	ToAlertingRulesAlertingRuleLevelArrayOutputWithContext(context.Context) AlertingRulesAlertingRuleLevelArrayOutput
}

type AlertingRulesAlertingRuleLevelArray []AlertingRulesAlertingRuleLevelInput

func (AlertingRulesAlertingRuleLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRuleLevel)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleLevelArray) ToAlertingRulesAlertingRuleLevelArrayOutput() AlertingRulesAlertingRuleLevelArrayOutput {
	return i.ToAlertingRulesAlertingRuleLevelArrayOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleLevelArray) ToAlertingRulesAlertingRuleLevelArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleLevelArrayOutput)
}

type AlertingRulesAlertingRuleLevelOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRuleLevel)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleLevelOutput) ToAlertingRulesAlertingRuleLevelOutput() AlertingRulesAlertingRuleLevelOutput {
	return o
}

func (o AlertingRulesAlertingRuleLevelOutput) ToAlertingRulesAlertingRuleLevelOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleLevelOutput {
	return o
}

// The comparator of the vmp alerting rule.
func (o AlertingRulesAlertingRuleLevelOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleLevel) string { return v.Comparator }).(pulumi.StringOutput)
}

// The duration of the alerting rule.
func (o AlertingRulesAlertingRuleLevelOutput) For() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleLevel) string { return v.For }).(pulumi.StringOutput)
}

// The level of the vmp alerting rule.
func (o AlertingRulesAlertingRuleLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The threshold of the vmp alerting rule.
func (o AlertingRulesAlertingRuleLevelOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v AlertingRulesAlertingRuleLevel) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type AlertingRulesAlertingRuleLevelArrayOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRuleLevel)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleLevelArrayOutput) ToAlertingRulesAlertingRuleLevelArrayOutput() AlertingRulesAlertingRuleLevelArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleLevelArrayOutput) ToAlertingRulesAlertingRuleLevelArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleLevelArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleLevelArrayOutput) Index(i pulumi.IntInput) AlertingRulesAlertingRuleLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertingRulesAlertingRuleLevel {
		return vs[0].([]AlertingRulesAlertingRuleLevel)[vs[1].(int)]
	}).(AlertingRulesAlertingRuleLevelOutput)
}

type AlertingRulesAlertingRuleQuery struct {
	// The prom ql of query.
	PromQl string `pulumi:"promQl"`
	// The workspace id of vmp alerting rule.
	WorkspaceId string `pulumi:"workspaceId"`
}

// AlertingRulesAlertingRuleQueryInput is an input type that accepts AlertingRulesAlertingRuleQueryArgs and AlertingRulesAlertingRuleQueryOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleQueryInput` via:
//
//	AlertingRulesAlertingRuleQueryArgs{...}
type AlertingRulesAlertingRuleQueryInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleQueryOutput() AlertingRulesAlertingRuleQueryOutput
	ToAlertingRulesAlertingRuleQueryOutputWithContext(context.Context) AlertingRulesAlertingRuleQueryOutput
}

type AlertingRulesAlertingRuleQueryArgs struct {
	// The prom ql of query.
	PromQl pulumi.StringInput `pulumi:"promQl"`
	// The workspace id of vmp alerting rule.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (AlertingRulesAlertingRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRuleQuery)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleQueryArgs) ToAlertingRulesAlertingRuleQueryOutput() AlertingRulesAlertingRuleQueryOutput {
	return i.ToAlertingRulesAlertingRuleQueryOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleQueryArgs) ToAlertingRulesAlertingRuleQueryOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleQueryOutput)
}

// AlertingRulesAlertingRuleQueryArrayInput is an input type that accepts AlertingRulesAlertingRuleQueryArray and AlertingRulesAlertingRuleQueryArrayOutput values.
// You can construct a concrete instance of `AlertingRulesAlertingRuleQueryArrayInput` via:
//
//	AlertingRulesAlertingRuleQueryArray{ AlertingRulesAlertingRuleQueryArgs{...} }
type AlertingRulesAlertingRuleQueryArrayInput interface {
	pulumi.Input

	ToAlertingRulesAlertingRuleQueryArrayOutput() AlertingRulesAlertingRuleQueryArrayOutput
	ToAlertingRulesAlertingRuleQueryArrayOutputWithContext(context.Context) AlertingRulesAlertingRuleQueryArrayOutput
}

type AlertingRulesAlertingRuleQueryArray []AlertingRulesAlertingRuleQueryInput

func (AlertingRulesAlertingRuleQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRuleQuery)(nil)).Elem()
}

func (i AlertingRulesAlertingRuleQueryArray) ToAlertingRulesAlertingRuleQueryArrayOutput() AlertingRulesAlertingRuleQueryArrayOutput {
	return i.ToAlertingRulesAlertingRuleQueryArrayOutputWithContext(context.Background())
}

func (i AlertingRulesAlertingRuleQueryArray) ToAlertingRulesAlertingRuleQueryArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingRulesAlertingRuleQueryArrayOutput)
}

type AlertingRulesAlertingRuleQueryOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertingRulesAlertingRuleQuery)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleQueryOutput) ToAlertingRulesAlertingRuleQueryOutput() AlertingRulesAlertingRuleQueryOutput {
	return o
}

func (o AlertingRulesAlertingRuleQueryOutput) ToAlertingRulesAlertingRuleQueryOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleQueryOutput {
	return o
}

// The prom ql of query.
func (o AlertingRulesAlertingRuleQueryOutput) PromQl() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleQuery) string { return v.PromQl }).(pulumi.StringOutput)
}

// The workspace id of vmp alerting rule.
func (o AlertingRulesAlertingRuleQueryOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v AlertingRulesAlertingRuleQuery) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type AlertingRulesAlertingRuleQueryArrayOutput struct{ *pulumi.OutputState }

func (AlertingRulesAlertingRuleQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertingRulesAlertingRuleQuery)(nil)).Elem()
}

func (o AlertingRulesAlertingRuleQueryArrayOutput) ToAlertingRulesAlertingRuleQueryArrayOutput() AlertingRulesAlertingRuleQueryArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleQueryArrayOutput) ToAlertingRulesAlertingRuleQueryArrayOutputWithContext(ctx context.Context) AlertingRulesAlertingRuleQueryArrayOutput {
	return o
}

func (o AlertingRulesAlertingRuleQueryArrayOutput) Index(i pulumi.IntInput) AlertingRulesAlertingRuleQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertingRulesAlertingRuleQuery {
		return vs[0].([]AlertingRulesAlertingRuleQuery)[vs[1].(int)]
	}).(AlertingRulesAlertingRuleQueryOutput)
}

type AlertsAlert struct {
	// The id of the vmp alerting rule.
	AlertingRuleId string `pulumi:"alertingRuleId"`
	// The alerting query of the vmp alerting rule.
	AlertingRuleQueries []AlertsAlertAlertingRuleQuery `pulumi:"alertingRuleQueries"`
	// The type of the vmp alerting rule.
	AlertingRuleType string `pulumi:"alertingRuleType"`
	// The current level of the vmp alert.
	CurrentLevel string `pulumi:"currentLevel"`
	// The status of vmp alert. Valid values: `Pending`, `Active`, `Resolved`, `Disabled`.
	CurrentPhase string `pulumi:"currentPhase"`
	// The id of the vmp alert.
	Id string `pulumi:"id"`
	// The start time of the vmp alert. Format: RFC3339.
	InitialAlertTimestamp string `pulumi:"initialAlertTimestamp"`
	// The last time of the vmp alert. Format: RFC3339.
	LastAlertTimestamp string `pulumi:"lastAlertTimestamp"`
	// The alerting levels of the vmp alert.
	Levels []AlertsAlertLevel `pulumi:"levels"`
	// The end time of the vmp alert. Format: RFC3339.
	ResolveAlertTimestamp string `pulumi:"resolveAlertTimestamp"`
	// The alerting resource of the vmp alert.
	Resources []AlertsAlertResource `pulumi:"resources"`
}

// AlertsAlertInput is an input type that accepts AlertsAlertArgs and AlertsAlertOutput values.
// You can construct a concrete instance of `AlertsAlertInput` via:
//
//	AlertsAlertArgs{...}
type AlertsAlertInput interface {
	pulumi.Input

	ToAlertsAlertOutput() AlertsAlertOutput
	ToAlertsAlertOutputWithContext(context.Context) AlertsAlertOutput
}

type AlertsAlertArgs struct {
	// The id of the vmp alerting rule.
	AlertingRuleId pulumi.StringInput `pulumi:"alertingRuleId"`
	// The alerting query of the vmp alerting rule.
	AlertingRuleQueries AlertsAlertAlertingRuleQueryArrayInput `pulumi:"alertingRuleQueries"`
	// The type of the vmp alerting rule.
	AlertingRuleType pulumi.StringInput `pulumi:"alertingRuleType"`
	// The current level of the vmp alert.
	CurrentLevel pulumi.StringInput `pulumi:"currentLevel"`
	// The status of vmp alert. Valid values: `Pending`, `Active`, `Resolved`, `Disabled`.
	CurrentPhase pulumi.StringInput `pulumi:"currentPhase"`
	// The id of the vmp alert.
	Id pulumi.StringInput `pulumi:"id"`
	// The start time of the vmp alert. Format: RFC3339.
	InitialAlertTimestamp pulumi.StringInput `pulumi:"initialAlertTimestamp"`
	// The last time of the vmp alert. Format: RFC3339.
	LastAlertTimestamp pulumi.StringInput `pulumi:"lastAlertTimestamp"`
	// The alerting levels of the vmp alert.
	Levels AlertsAlertLevelArrayInput `pulumi:"levels"`
	// The end time of the vmp alert. Format: RFC3339.
	ResolveAlertTimestamp pulumi.StringInput `pulumi:"resolveAlertTimestamp"`
	// The alerting resource of the vmp alert.
	Resources AlertsAlertResourceArrayInput `pulumi:"resources"`
}

func (AlertsAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlert)(nil)).Elem()
}

func (i AlertsAlertArgs) ToAlertsAlertOutput() AlertsAlertOutput {
	return i.ToAlertsAlertOutputWithContext(context.Background())
}

func (i AlertsAlertArgs) ToAlertsAlertOutputWithContext(ctx context.Context) AlertsAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertOutput)
}

// AlertsAlertArrayInput is an input type that accepts AlertsAlertArray and AlertsAlertArrayOutput values.
// You can construct a concrete instance of `AlertsAlertArrayInput` via:
//
//	AlertsAlertArray{ AlertsAlertArgs{...} }
type AlertsAlertArrayInput interface {
	pulumi.Input

	ToAlertsAlertArrayOutput() AlertsAlertArrayOutput
	ToAlertsAlertArrayOutputWithContext(context.Context) AlertsAlertArrayOutput
}

type AlertsAlertArray []AlertsAlertInput

func (AlertsAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlert)(nil)).Elem()
}

func (i AlertsAlertArray) ToAlertsAlertArrayOutput() AlertsAlertArrayOutput {
	return i.ToAlertsAlertArrayOutputWithContext(context.Background())
}

func (i AlertsAlertArray) ToAlertsAlertArrayOutputWithContext(ctx context.Context) AlertsAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertArrayOutput)
}

type AlertsAlertOutput struct{ *pulumi.OutputState }

func (AlertsAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlert)(nil)).Elem()
}

func (o AlertsAlertOutput) ToAlertsAlertOutput() AlertsAlertOutput {
	return o
}

func (o AlertsAlertOutput) ToAlertsAlertOutputWithContext(ctx context.Context) AlertsAlertOutput {
	return o
}

// The id of the vmp alerting rule.
func (o AlertsAlertOutput) AlertingRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlert) string { return v.AlertingRuleId }).(pulumi.StringOutput)
}

// The alerting query of the vmp alerting rule.
func (o AlertsAlertOutput) AlertingRuleQueries() AlertsAlertAlertingRuleQueryArrayOutput {
	return o.ApplyT(func(v AlertsAlert) []AlertsAlertAlertingRuleQuery { return v.AlertingRuleQueries }).(AlertsAlertAlertingRuleQueryArrayOutput)
}

// The type of the vmp alerting rule.
func (o AlertsAlertOutput) AlertingRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlert) string { return v.AlertingRuleType }).(pulumi.StringOutput)
}

// The current level of the vmp alert.
func (o AlertsAlertOutput) CurrentLevel() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlert) string { return v.CurrentLevel }).(pulumi.StringOutput)
}

// The status of vmp alert. Valid values: `Pending`, `Active`, `Resolved`, `Disabled`.
func (o AlertsAlertOutput) CurrentPhase() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlert) string { return v.CurrentPhase }).(pulumi.StringOutput)
}

// The id of the vmp alert.
func (o AlertsAlertOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlert) string { return v.Id }).(pulumi.StringOutput)
}

// The start time of the vmp alert. Format: RFC3339.
func (o AlertsAlertOutput) InitialAlertTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlert) string { return v.InitialAlertTimestamp }).(pulumi.StringOutput)
}

// The last time of the vmp alert. Format: RFC3339.
func (o AlertsAlertOutput) LastAlertTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlert) string { return v.LastAlertTimestamp }).(pulumi.StringOutput)
}

// The alerting levels of the vmp alert.
func (o AlertsAlertOutput) Levels() AlertsAlertLevelArrayOutput {
	return o.ApplyT(func(v AlertsAlert) []AlertsAlertLevel { return v.Levels }).(AlertsAlertLevelArrayOutput)
}

// The end time of the vmp alert. Format: RFC3339.
func (o AlertsAlertOutput) ResolveAlertTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlert) string { return v.ResolveAlertTimestamp }).(pulumi.StringOutput)
}

// The alerting resource of the vmp alert.
func (o AlertsAlertOutput) Resources() AlertsAlertResourceArrayOutput {
	return o.ApplyT(func(v AlertsAlert) []AlertsAlertResource { return v.Resources }).(AlertsAlertResourceArrayOutput)
}

type AlertsAlertArrayOutput struct{ *pulumi.OutputState }

func (AlertsAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlert)(nil)).Elem()
}

func (o AlertsAlertArrayOutput) ToAlertsAlertArrayOutput() AlertsAlertArrayOutput {
	return o
}

func (o AlertsAlertArrayOutput) ToAlertsAlertArrayOutputWithContext(ctx context.Context) AlertsAlertArrayOutput {
	return o
}

func (o AlertsAlertArrayOutput) Index(i pulumi.IntInput) AlertsAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertsAlert {
		return vs[0].([]AlertsAlert)[vs[1].(int)]
	}).(AlertsAlertOutput)
}

type AlertsAlertAlertingRuleQuery struct {
	// The prom ql of query.
	PromQl string `pulumi:"promQl"`
	// The id of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// AlertsAlertAlertingRuleQueryInput is an input type that accepts AlertsAlertAlertingRuleQueryArgs and AlertsAlertAlertingRuleQueryOutput values.
// You can construct a concrete instance of `AlertsAlertAlertingRuleQueryInput` via:
//
//	AlertsAlertAlertingRuleQueryArgs{...}
type AlertsAlertAlertingRuleQueryInput interface {
	pulumi.Input

	ToAlertsAlertAlertingRuleQueryOutput() AlertsAlertAlertingRuleQueryOutput
	ToAlertsAlertAlertingRuleQueryOutputWithContext(context.Context) AlertsAlertAlertingRuleQueryOutput
}

type AlertsAlertAlertingRuleQueryArgs struct {
	// The prom ql of query.
	PromQl pulumi.StringInput `pulumi:"promQl"`
	// The id of the workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (AlertsAlertAlertingRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlertAlertingRuleQuery)(nil)).Elem()
}

func (i AlertsAlertAlertingRuleQueryArgs) ToAlertsAlertAlertingRuleQueryOutput() AlertsAlertAlertingRuleQueryOutput {
	return i.ToAlertsAlertAlertingRuleQueryOutputWithContext(context.Background())
}

func (i AlertsAlertAlertingRuleQueryArgs) ToAlertsAlertAlertingRuleQueryOutputWithContext(ctx context.Context) AlertsAlertAlertingRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertAlertingRuleQueryOutput)
}

// AlertsAlertAlertingRuleQueryArrayInput is an input type that accepts AlertsAlertAlertingRuleQueryArray and AlertsAlertAlertingRuleQueryArrayOutput values.
// You can construct a concrete instance of `AlertsAlertAlertingRuleQueryArrayInput` via:
//
//	AlertsAlertAlertingRuleQueryArray{ AlertsAlertAlertingRuleQueryArgs{...} }
type AlertsAlertAlertingRuleQueryArrayInput interface {
	pulumi.Input

	ToAlertsAlertAlertingRuleQueryArrayOutput() AlertsAlertAlertingRuleQueryArrayOutput
	ToAlertsAlertAlertingRuleQueryArrayOutputWithContext(context.Context) AlertsAlertAlertingRuleQueryArrayOutput
}

type AlertsAlertAlertingRuleQueryArray []AlertsAlertAlertingRuleQueryInput

func (AlertsAlertAlertingRuleQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlertAlertingRuleQuery)(nil)).Elem()
}

func (i AlertsAlertAlertingRuleQueryArray) ToAlertsAlertAlertingRuleQueryArrayOutput() AlertsAlertAlertingRuleQueryArrayOutput {
	return i.ToAlertsAlertAlertingRuleQueryArrayOutputWithContext(context.Background())
}

func (i AlertsAlertAlertingRuleQueryArray) ToAlertsAlertAlertingRuleQueryArrayOutputWithContext(ctx context.Context) AlertsAlertAlertingRuleQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertAlertingRuleQueryArrayOutput)
}

type AlertsAlertAlertingRuleQueryOutput struct{ *pulumi.OutputState }

func (AlertsAlertAlertingRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlertAlertingRuleQuery)(nil)).Elem()
}

func (o AlertsAlertAlertingRuleQueryOutput) ToAlertsAlertAlertingRuleQueryOutput() AlertsAlertAlertingRuleQueryOutput {
	return o
}

func (o AlertsAlertAlertingRuleQueryOutput) ToAlertsAlertAlertingRuleQueryOutputWithContext(ctx context.Context) AlertsAlertAlertingRuleQueryOutput {
	return o
}

// The prom ql of query.
func (o AlertsAlertAlertingRuleQueryOutput) PromQl() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlertAlertingRuleQuery) string { return v.PromQl }).(pulumi.StringOutput)
}

// The id of the workspace.
func (o AlertsAlertAlertingRuleQueryOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlertAlertingRuleQuery) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type AlertsAlertAlertingRuleQueryArrayOutput struct{ *pulumi.OutputState }

func (AlertsAlertAlertingRuleQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlertAlertingRuleQuery)(nil)).Elem()
}

func (o AlertsAlertAlertingRuleQueryArrayOutput) ToAlertsAlertAlertingRuleQueryArrayOutput() AlertsAlertAlertingRuleQueryArrayOutput {
	return o
}

func (o AlertsAlertAlertingRuleQueryArrayOutput) ToAlertsAlertAlertingRuleQueryArrayOutputWithContext(ctx context.Context) AlertsAlertAlertingRuleQueryArrayOutput {
	return o
}

func (o AlertsAlertAlertingRuleQueryArrayOutput) Index(i pulumi.IntInput) AlertsAlertAlertingRuleQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertsAlertAlertingRuleQuery {
		return vs[0].([]AlertsAlertAlertingRuleQuery)[vs[1].(int)]
	}).(AlertsAlertAlertingRuleQueryOutput)
}

type AlertsAlertLevel struct {
	// The comparator of the vmp alerting rule.
	Comparator string `pulumi:"comparator"`
	// The duration of the alerting rule.
	For string `pulumi:"for"`
	// The level of vmp alert. Valid values: `P0`, `P1`, `P2`.
	Level string `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold float64 `pulumi:"threshold"`
}

// AlertsAlertLevelInput is an input type that accepts AlertsAlertLevelArgs and AlertsAlertLevelOutput values.
// You can construct a concrete instance of `AlertsAlertLevelInput` via:
//
//	AlertsAlertLevelArgs{...}
type AlertsAlertLevelInput interface {
	pulumi.Input

	ToAlertsAlertLevelOutput() AlertsAlertLevelOutput
	ToAlertsAlertLevelOutputWithContext(context.Context) AlertsAlertLevelOutput
}

type AlertsAlertLevelArgs struct {
	// The comparator of the vmp alerting rule.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// The duration of the alerting rule.
	For pulumi.StringInput `pulumi:"for"`
	// The level of vmp alert. Valid values: `P0`, `P1`, `P2`.
	Level pulumi.StringInput `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (AlertsAlertLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlertLevel)(nil)).Elem()
}

func (i AlertsAlertLevelArgs) ToAlertsAlertLevelOutput() AlertsAlertLevelOutput {
	return i.ToAlertsAlertLevelOutputWithContext(context.Background())
}

func (i AlertsAlertLevelArgs) ToAlertsAlertLevelOutputWithContext(ctx context.Context) AlertsAlertLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertLevelOutput)
}

// AlertsAlertLevelArrayInput is an input type that accepts AlertsAlertLevelArray and AlertsAlertLevelArrayOutput values.
// You can construct a concrete instance of `AlertsAlertLevelArrayInput` via:
//
//	AlertsAlertLevelArray{ AlertsAlertLevelArgs{...} }
type AlertsAlertLevelArrayInput interface {
	pulumi.Input

	ToAlertsAlertLevelArrayOutput() AlertsAlertLevelArrayOutput
	ToAlertsAlertLevelArrayOutputWithContext(context.Context) AlertsAlertLevelArrayOutput
}

type AlertsAlertLevelArray []AlertsAlertLevelInput

func (AlertsAlertLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlertLevel)(nil)).Elem()
}

func (i AlertsAlertLevelArray) ToAlertsAlertLevelArrayOutput() AlertsAlertLevelArrayOutput {
	return i.ToAlertsAlertLevelArrayOutputWithContext(context.Background())
}

func (i AlertsAlertLevelArray) ToAlertsAlertLevelArrayOutputWithContext(ctx context.Context) AlertsAlertLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertLevelArrayOutput)
}

type AlertsAlertLevelOutput struct{ *pulumi.OutputState }

func (AlertsAlertLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlertLevel)(nil)).Elem()
}

func (o AlertsAlertLevelOutput) ToAlertsAlertLevelOutput() AlertsAlertLevelOutput {
	return o
}

func (o AlertsAlertLevelOutput) ToAlertsAlertLevelOutputWithContext(ctx context.Context) AlertsAlertLevelOutput {
	return o
}

// The comparator of the vmp alerting rule.
func (o AlertsAlertLevelOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlertLevel) string { return v.Comparator }).(pulumi.StringOutput)
}

// The duration of the alerting rule.
func (o AlertsAlertLevelOutput) For() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlertLevel) string { return v.For }).(pulumi.StringOutput)
}

// The level of vmp alert. Valid values: `P0`, `P1`, `P2`.
func (o AlertsAlertLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlertLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The threshold of the vmp alerting rule.
func (o AlertsAlertLevelOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v AlertsAlertLevel) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type AlertsAlertLevelArrayOutput struct{ *pulumi.OutputState }

func (AlertsAlertLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlertLevel)(nil)).Elem()
}

func (o AlertsAlertLevelArrayOutput) ToAlertsAlertLevelArrayOutput() AlertsAlertLevelArrayOutput {
	return o
}

func (o AlertsAlertLevelArrayOutput) ToAlertsAlertLevelArrayOutputWithContext(ctx context.Context) AlertsAlertLevelArrayOutput {
	return o
}

func (o AlertsAlertLevelArrayOutput) Index(i pulumi.IntInput) AlertsAlertLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertsAlertLevel {
		return vs[0].([]AlertsAlertLevel)[vs[1].(int)]
	}).(AlertsAlertLevelOutput)
}

type AlertsAlertResource struct {
	// The labels of alerting resource.
	Labels []AlertsAlertResourceLabel `pulumi:"labels"`
}

// AlertsAlertResourceInput is an input type that accepts AlertsAlertResourceArgs and AlertsAlertResourceOutput values.
// You can construct a concrete instance of `AlertsAlertResourceInput` via:
//
//	AlertsAlertResourceArgs{...}
type AlertsAlertResourceInput interface {
	pulumi.Input

	ToAlertsAlertResourceOutput() AlertsAlertResourceOutput
	ToAlertsAlertResourceOutputWithContext(context.Context) AlertsAlertResourceOutput
}

type AlertsAlertResourceArgs struct {
	// The labels of alerting resource.
	Labels AlertsAlertResourceLabelArrayInput `pulumi:"labels"`
}

func (AlertsAlertResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlertResource)(nil)).Elem()
}

func (i AlertsAlertResourceArgs) ToAlertsAlertResourceOutput() AlertsAlertResourceOutput {
	return i.ToAlertsAlertResourceOutputWithContext(context.Background())
}

func (i AlertsAlertResourceArgs) ToAlertsAlertResourceOutputWithContext(ctx context.Context) AlertsAlertResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertResourceOutput)
}

// AlertsAlertResourceArrayInput is an input type that accepts AlertsAlertResourceArray and AlertsAlertResourceArrayOutput values.
// You can construct a concrete instance of `AlertsAlertResourceArrayInput` via:
//
//	AlertsAlertResourceArray{ AlertsAlertResourceArgs{...} }
type AlertsAlertResourceArrayInput interface {
	pulumi.Input

	ToAlertsAlertResourceArrayOutput() AlertsAlertResourceArrayOutput
	ToAlertsAlertResourceArrayOutputWithContext(context.Context) AlertsAlertResourceArrayOutput
}

type AlertsAlertResourceArray []AlertsAlertResourceInput

func (AlertsAlertResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlertResource)(nil)).Elem()
}

func (i AlertsAlertResourceArray) ToAlertsAlertResourceArrayOutput() AlertsAlertResourceArrayOutput {
	return i.ToAlertsAlertResourceArrayOutputWithContext(context.Background())
}

func (i AlertsAlertResourceArray) ToAlertsAlertResourceArrayOutputWithContext(ctx context.Context) AlertsAlertResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertResourceArrayOutput)
}

type AlertsAlertResourceOutput struct{ *pulumi.OutputState }

func (AlertsAlertResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlertResource)(nil)).Elem()
}

func (o AlertsAlertResourceOutput) ToAlertsAlertResourceOutput() AlertsAlertResourceOutput {
	return o
}

func (o AlertsAlertResourceOutput) ToAlertsAlertResourceOutputWithContext(ctx context.Context) AlertsAlertResourceOutput {
	return o
}

// The labels of alerting resource.
func (o AlertsAlertResourceOutput) Labels() AlertsAlertResourceLabelArrayOutput {
	return o.ApplyT(func(v AlertsAlertResource) []AlertsAlertResourceLabel { return v.Labels }).(AlertsAlertResourceLabelArrayOutput)
}

type AlertsAlertResourceArrayOutput struct{ *pulumi.OutputState }

func (AlertsAlertResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlertResource)(nil)).Elem()
}

func (o AlertsAlertResourceArrayOutput) ToAlertsAlertResourceArrayOutput() AlertsAlertResourceArrayOutput {
	return o
}

func (o AlertsAlertResourceArrayOutput) ToAlertsAlertResourceArrayOutputWithContext(ctx context.Context) AlertsAlertResourceArrayOutput {
	return o
}

func (o AlertsAlertResourceArrayOutput) Index(i pulumi.IntInput) AlertsAlertResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertsAlertResource {
		return vs[0].([]AlertsAlertResource)[vs[1].(int)]
	}).(AlertsAlertResourceOutput)
}

type AlertsAlertResourceLabel struct {
	// The key of the label.
	Key string `pulumi:"key"`
	// The value of the label.
	Value string `pulumi:"value"`
}

// AlertsAlertResourceLabelInput is an input type that accepts AlertsAlertResourceLabelArgs and AlertsAlertResourceLabelOutput values.
// You can construct a concrete instance of `AlertsAlertResourceLabelInput` via:
//
//	AlertsAlertResourceLabelArgs{...}
type AlertsAlertResourceLabelInput interface {
	pulumi.Input

	ToAlertsAlertResourceLabelOutput() AlertsAlertResourceLabelOutput
	ToAlertsAlertResourceLabelOutputWithContext(context.Context) AlertsAlertResourceLabelOutput
}

type AlertsAlertResourceLabelArgs struct {
	// The key of the label.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertsAlertResourceLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlertResourceLabel)(nil)).Elem()
}

func (i AlertsAlertResourceLabelArgs) ToAlertsAlertResourceLabelOutput() AlertsAlertResourceLabelOutput {
	return i.ToAlertsAlertResourceLabelOutputWithContext(context.Background())
}

func (i AlertsAlertResourceLabelArgs) ToAlertsAlertResourceLabelOutputWithContext(ctx context.Context) AlertsAlertResourceLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertResourceLabelOutput)
}

// AlertsAlertResourceLabelArrayInput is an input type that accepts AlertsAlertResourceLabelArray and AlertsAlertResourceLabelArrayOutput values.
// You can construct a concrete instance of `AlertsAlertResourceLabelArrayInput` via:
//
//	AlertsAlertResourceLabelArray{ AlertsAlertResourceLabelArgs{...} }
type AlertsAlertResourceLabelArrayInput interface {
	pulumi.Input

	ToAlertsAlertResourceLabelArrayOutput() AlertsAlertResourceLabelArrayOutput
	ToAlertsAlertResourceLabelArrayOutputWithContext(context.Context) AlertsAlertResourceLabelArrayOutput
}

type AlertsAlertResourceLabelArray []AlertsAlertResourceLabelInput

func (AlertsAlertResourceLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlertResourceLabel)(nil)).Elem()
}

func (i AlertsAlertResourceLabelArray) ToAlertsAlertResourceLabelArrayOutput() AlertsAlertResourceLabelArrayOutput {
	return i.ToAlertsAlertResourceLabelArrayOutputWithContext(context.Background())
}

func (i AlertsAlertResourceLabelArray) ToAlertsAlertResourceLabelArrayOutputWithContext(ctx context.Context) AlertsAlertResourceLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertsAlertResourceLabelArrayOutput)
}

type AlertsAlertResourceLabelOutput struct{ *pulumi.OutputState }

func (AlertsAlertResourceLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertsAlertResourceLabel)(nil)).Elem()
}

func (o AlertsAlertResourceLabelOutput) ToAlertsAlertResourceLabelOutput() AlertsAlertResourceLabelOutput {
	return o
}

func (o AlertsAlertResourceLabelOutput) ToAlertsAlertResourceLabelOutputWithContext(ctx context.Context) AlertsAlertResourceLabelOutput {
	return o
}

// The key of the label.
func (o AlertsAlertResourceLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlertResourceLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the label.
func (o AlertsAlertResourceLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertsAlertResourceLabel) string { return v.Value }).(pulumi.StringOutput)
}

type AlertsAlertResourceLabelArrayOutput struct{ *pulumi.OutputState }

func (AlertsAlertResourceLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertsAlertResourceLabel)(nil)).Elem()
}

func (o AlertsAlertResourceLabelArrayOutput) ToAlertsAlertResourceLabelArrayOutput() AlertsAlertResourceLabelArrayOutput {
	return o
}

func (o AlertsAlertResourceLabelArrayOutput) ToAlertsAlertResourceLabelArrayOutputWithContext(ctx context.Context) AlertsAlertResourceLabelArrayOutput {
	return o
}

func (o AlertsAlertResourceLabelArrayOutput) Index(i pulumi.IntInput) AlertsAlertResourceLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertsAlertResourceLabel {
		return vs[0].([]AlertsAlertResourceLabel)[vs[1].(int)]
	}).(AlertsAlertResourceLabelOutput)
}

type ContactDingTalkBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The mobiles of user.
	AtMobiles []string `pulumi:"atMobiles"`
	// The ids of user.
	AtUserIds []string `pulumi:"atUserIds"`
	// The secret key of webhook.
	SecretKey *string `pulumi:"secretKey"`
}

// ContactDingTalkBotWebhookInput is an input type that accepts ContactDingTalkBotWebhookArgs and ContactDingTalkBotWebhookOutput values.
// You can construct a concrete instance of `ContactDingTalkBotWebhookInput` via:
//
//	ContactDingTalkBotWebhookArgs{...}
type ContactDingTalkBotWebhookInput interface {
	pulumi.Input

	ToContactDingTalkBotWebhookOutput() ContactDingTalkBotWebhookOutput
	ToContactDingTalkBotWebhookOutputWithContext(context.Context) ContactDingTalkBotWebhookOutput
}

type ContactDingTalkBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The mobiles of user.
	AtMobiles pulumi.StringArrayInput `pulumi:"atMobiles"`
	// The ids of user.
	AtUserIds pulumi.StringArrayInput `pulumi:"atUserIds"`
	// The secret key of webhook.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (ContactDingTalkBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDingTalkBotWebhook)(nil)).Elem()
}

func (i ContactDingTalkBotWebhookArgs) ToContactDingTalkBotWebhookOutput() ContactDingTalkBotWebhookOutput {
	return i.ToContactDingTalkBotWebhookOutputWithContext(context.Background())
}

func (i ContactDingTalkBotWebhookArgs) ToContactDingTalkBotWebhookOutputWithContext(ctx context.Context) ContactDingTalkBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDingTalkBotWebhookOutput)
}

func (i ContactDingTalkBotWebhookArgs) ToContactDingTalkBotWebhookPtrOutput() ContactDingTalkBotWebhookPtrOutput {
	return i.ToContactDingTalkBotWebhookPtrOutputWithContext(context.Background())
}

func (i ContactDingTalkBotWebhookArgs) ToContactDingTalkBotWebhookPtrOutputWithContext(ctx context.Context) ContactDingTalkBotWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDingTalkBotWebhookOutput).ToContactDingTalkBotWebhookPtrOutputWithContext(ctx)
}

// ContactDingTalkBotWebhookPtrInput is an input type that accepts ContactDingTalkBotWebhookArgs, ContactDingTalkBotWebhookPtr and ContactDingTalkBotWebhookPtrOutput values.
// You can construct a concrete instance of `ContactDingTalkBotWebhookPtrInput` via:
//
//	        ContactDingTalkBotWebhookArgs{...}
//
//	or:
//
//	        nil
type ContactDingTalkBotWebhookPtrInput interface {
	pulumi.Input

	ToContactDingTalkBotWebhookPtrOutput() ContactDingTalkBotWebhookPtrOutput
	ToContactDingTalkBotWebhookPtrOutputWithContext(context.Context) ContactDingTalkBotWebhookPtrOutput
}

type contactDingTalkBotWebhookPtrType ContactDingTalkBotWebhookArgs

func ContactDingTalkBotWebhookPtr(v *ContactDingTalkBotWebhookArgs) ContactDingTalkBotWebhookPtrInput {
	return (*contactDingTalkBotWebhookPtrType)(v)
}

func (*contactDingTalkBotWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDingTalkBotWebhook)(nil)).Elem()
}

func (i *contactDingTalkBotWebhookPtrType) ToContactDingTalkBotWebhookPtrOutput() ContactDingTalkBotWebhookPtrOutput {
	return i.ToContactDingTalkBotWebhookPtrOutputWithContext(context.Background())
}

func (i *contactDingTalkBotWebhookPtrType) ToContactDingTalkBotWebhookPtrOutputWithContext(ctx context.Context) ContactDingTalkBotWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDingTalkBotWebhookPtrOutput)
}

type ContactDingTalkBotWebhookOutput struct{ *pulumi.OutputState }

func (ContactDingTalkBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDingTalkBotWebhook)(nil)).Elem()
}

func (o ContactDingTalkBotWebhookOutput) ToContactDingTalkBotWebhookOutput() ContactDingTalkBotWebhookOutput {
	return o
}

func (o ContactDingTalkBotWebhookOutput) ToContactDingTalkBotWebhookOutputWithContext(ctx context.Context) ContactDingTalkBotWebhookOutput {
	return o
}

func (o ContactDingTalkBotWebhookOutput) ToContactDingTalkBotWebhookPtrOutput() ContactDingTalkBotWebhookPtrOutput {
	return o.ToContactDingTalkBotWebhookPtrOutputWithContext(context.Background())
}

func (o ContactDingTalkBotWebhookOutput) ToContactDingTalkBotWebhookPtrOutputWithContext(ctx context.Context) ContactDingTalkBotWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactDingTalkBotWebhook) *ContactDingTalkBotWebhook {
		return &v
	}).(ContactDingTalkBotWebhookPtrOutput)
}

// The address of webhook.
func (o ContactDingTalkBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDingTalkBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The mobiles of user.
func (o ContactDingTalkBotWebhookOutput) AtMobiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDingTalkBotWebhook) []string { return v.AtMobiles }).(pulumi.StringArrayOutput)
}

// The ids of user.
func (o ContactDingTalkBotWebhookOutput) AtUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactDingTalkBotWebhook) []string { return v.AtUserIds }).(pulumi.StringArrayOutput)
}

// The secret key of webhook.
func (o ContactDingTalkBotWebhookOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDingTalkBotWebhook) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type ContactDingTalkBotWebhookPtrOutput struct{ *pulumi.OutputState }

func (ContactDingTalkBotWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDingTalkBotWebhook)(nil)).Elem()
}

func (o ContactDingTalkBotWebhookPtrOutput) ToContactDingTalkBotWebhookPtrOutput() ContactDingTalkBotWebhookPtrOutput {
	return o
}

func (o ContactDingTalkBotWebhookPtrOutput) ToContactDingTalkBotWebhookPtrOutputWithContext(ctx context.Context) ContactDingTalkBotWebhookPtrOutput {
	return o
}

func (o ContactDingTalkBotWebhookPtrOutput) Elem() ContactDingTalkBotWebhookOutput {
	return o.ApplyT(func(v *ContactDingTalkBotWebhook) ContactDingTalkBotWebhook {
		if v != nil {
			return *v
		}
		var ret ContactDingTalkBotWebhook
		return ret
	}).(ContactDingTalkBotWebhookOutput)
}

// The address of webhook.
func (o ContactDingTalkBotWebhookPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDingTalkBotWebhook) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// The mobiles of user.
func (o ContactDingTalkBotWebhookPtrOutput) AtMobiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDingTalkBotWebhook) []string {
		if v == nil {
			return nil
		}
		return v.AtMobiles
	}).(pulumi.StringArrayOutput)
}

// The ids of user.
func (o ContactDingTalkBotWebhookPtrOutput) AtUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactDingTalkBotWebhook) []string {
		if v == nil {
			return nil
		}
		return v.AtUserIds
	}).(pulumi.StringArrayOutput)
}

// The secret key of webhook.
func (o ContactDingTalkBotWebhookPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDingTalkBotWebhook) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ContactGroupsContactGroup struct {
	// A list of contact IDs.
	ContactIds []string `pulumi:"contactIds"`
	// The create time of contact group.
	CreateTime string `pulumi:"createTime"`
	// The ID of contact group.
	Id string `pulumi:"id"`
	// The name of contact group.
	Name string `pulumi:"name"`
}

// ContactGroupsContactGroupInput is an input type that accepts ContactGroupsContactGroupArgs and ContactGroupsContactGroupOutput values.
// You can construct a concrete instance of `ContactGroupsContactGroupInput` via:
//
//	ContactGroupsContactGroupArgs{...}
type ContactGroupsContactGroupInput interface {
	pulumi.Input

	ToContactGroupsContactGroupOutput() ContactGroupsContactGroupOutput
	ToContactGroupsContactGroupOutputWithContext(context.Context) ContactGroupsContactGroupOutput
}

type ContactGroupsContactGroupArgs struct {
	// A list of contact IDs.
	ContactIds pulumi.StringArrayInput `pulumi:"contactIds"`
	// The create time of contact group.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of contact group.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of contact group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ContactGroupsContactGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactGroupsContactGroup)(nil)).Elem()
}

func (i ContactGroupsContactGroupArgs) ToContactGroupsContactGroupOutput() ContactGroupsContactGroupOutput {
	return i.ToContactGroupsContactGroupOutputWithContext(context.Background())
}

func (i ContactGroupsContactGroupArgs) ToContactGroupsContactGroupOutputWithContext(ctx context.Context) ContactGroupsContactGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactGroupsContactGroupOutput)
}

// ContactGroupsContactGroupArrayInput is an input type that accepts ContactGroupsContactGroupArray and ContactGroupsContactGroupArrayOutput values.
// You can construct a concrete instance of `ContactGroupsContactGroupArrayInput` via:
//
//	ContactGroupsContactGroupArray{ ContactGroupsContactGroupArgs{...} }
type ContactGroupsContactGroupArrayInput interface {
	pulumi.Input

	ToContactGroupsContactGroupArrayOutput() ContactGroupsContactGroupArrayOutput
	ToContactGroupsContactGroupArrayOutputWithContext(context.Context) ContactGroupsContactGroupArrayOutput
}

type ContactGroupsContactGroupArray []ContactGroupsContactGroupInput

func (ContactGroupsContactGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactGroupsContactGroup)(nil)).Elem()
}

func (i ContactGroupsContactGroupArray) ToContactGroupsContactGroupArrayOutput() ContactGroupsContactGroupArrayOutput {
	return i.ToContactGroupsContactGroupArrayOutputWithContext(context.Background())
}

func (i ContactGroupsContactGroupArray) ToContactGroupsContactGroupArrayOutputWithContext(ctx context.Context) ContactGroupsContactGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactGroupsContactGroupArrayOutput)
}

type ContactGroupsContactGroupOutput struct{ *pulumi.OutputState }

func (ContactGroupsContactGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactGroupsContactGroup)(nil)).Elem()
}

func (o ContactGroupsContactGroupOutput) ToContactGroupsContactGroupOutput() ContactGroupsContactGroupOutput {
	return o
}

func (o ContactGroupsContactGroupOutput) ToContactGroupsContactGroupOutputWithContext(ctx context.Context) ContactGroupsContactGroupOutput {
	return o
}

// A list of contact IDs.
func (o ContactGroupsContactGroupOutput) ContactIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactGroupsContactGroup) []string { return v.ContactIds }).(pulumi.StringArrayOutput)
}

// The create time of contact group.
func (o ContactGroupsContactGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ContactGroupsContactGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of contact group.
func (o ContactGroupsContactGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ContactGroupsContactGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The name of contact group.
func (o ContactGroupsContactGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContactGroupsContactGroup) string { return v.Name }).(pulumi.StringOutput)
}

type ContactGroupsContactGroupArrayOutput struct{ *pulumi.OutputState }

func (ContactGroupsContactGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactGroupsContactGroup)(nil)).Elem()
}

func (o ContactGroupsContactGroupArrayOutput) ToContactGroupsContactGroupArrayOutput() ContactGroupsContactGroupArrayOutput {
	return o
}

func (o ContactGroupsContactGroupArrayOutput) ToContactGroupsContactGroupArrayOutputWithContext(ctx context.Context) ContactGroupsContactGroupArrayOutput {
	return o
}

func (o ContactGroupsContactGroupArrayOutput) Index(i pulumi.IntInput) ContactGroupsContactGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactGroupsContactGroup {
		return vs[0].([]ContactGroupsContactGroup)[vs[1].(int)]
	}).(ContactGroupsContactGroupOutput)
}

type ContactLarkBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The secret key of webhook.
	SecretKey *string `pulumi:"secretKey"`
}

// ContactLarkBotWebhookInput is an input type that accepts ContactLarkBotWebhookArgs and ContactLarkBotWebhookOutput values.
// You can construct a concrete instance of `ContactLarkBotWebhookInput` via:
//
//	ContactLarkBotWebhookArgs{...}
type ContactLarkBotWebhookInput interface {
	pulumi.Input

	ToContactLarkBotWebhookOutput() ContactLarkBotWebhookOutput
	ToContactLarkBotWebhookOutputWithContext(context.Context) ContactLarkBotWebhookOutput
}

type ContactLarkBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The secret key of webhook.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (ContactLarkBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactLarkBotWebhook)(nil)).Elem()
}

func (i ContactLarkBotWebhookArgs) ToContactLarkBotWebhookOutput() ContactLarkBotWebhookOutput {
	return i.ToContactLarkBotWebhookOutputWithContext(context.Background())
}

func (i ContactLarkBotWebhookArgs) ToContactLarkBotWebhookOutputWithContext(ctx context.Context) ContactLarkBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactLarkBotWebhookOutput)
}

func (i ContactLarkBotWebhookArgs) ToContactLarkBotWebhookPtrOutput() ContactLarkBotWebhookPtrOutput {
	return i.ToContactLarkBotWebhookPtrOutputWithContext(context.Background())
}

func (i ContactLarkBotWebhookArgs) ToContactLarkBotWebhookPtrOutputWithContext(ctx context.Context) ContactLarkBotWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactLarkBotWebhookOutput).ToContactLarkBotWebhookPtrOutputWithContext(ctx)
}

// ContactLarkBotWebhookPtrInput is an input type that accepts ContactLarkBotWebhookArgs, ContactLarkBotWebhookPtr and ContactLarkBotWebhookPtrOutput values.
// You can construct a concrete instance of `ContactLarkBotWebhookPtrInput` via:
//
//	        ContactLarkBotWebhookArgs{...}
//
//	or:
//
//	        nil
type ContactLarkBotWebhookPtrInput interface {
	pulumi.Input

	ToContactLarkBotWebhookPtrOutput() ContactLarkBotWebhookPtrOutput
	ToContactLarkBotWebhookPtrOutputWithContext(context.Context) ContactLarkBotWebhookPtrOutput
}

type contactLarkBotWebhookPtrType ContactLarkBotWebhookArgs

func ContactLarkBotWebhookPtr(v *ContactLarkBotWebhookArgs) ContactLarkBotWebhookPtrInput {
	return (*contactLarkBotWebhookPtrType)(v)
}

func (*contactLarkBotWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactLarkBotWebhook)(nil)).Elem()
}

func (i *contactLarkBotWebhookPtrType) ToContactLarkBotWebhookPtrOutput() ContactLarkBotWebhookPtrOutput {
	return i.ToContactLarkBotWebhookPtrOutputWithContext(context.Background())
}

func (i *contactLarkBotWebhookPtrType) ToContactLarkBotWebhookPtrOutputWithContext(ctx context.Context) ContactLarkBotWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactLarkBotWebhookPtrOutput)
}

type ContactLarkBotWebhookOutput struct{ *pulumi.OutputState }

func (ContactLarkBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactLarkBotWebhook)(nil)).Elem()
}

func (o ContactLarkBotWebhookOutput) ToContactLarkBotWebhookOutput() ContactLarkBotWebhookOutput {
	return o
}

func (o ContactLarkBotWebhookOutput) ToContactLarkBotWebhookOutputWithContext(ctx context.Context) ContactLarkBotWebhookOutput {
	return o
}

func (o ContactLarkBotWebhookOutput) ToContactLarkBotWebhookPtrOutput() ContactLarkBotWebhookPtrOutput {
	return o.ToContactLarkBotWebhookPtrOutputWithContext(context.Background())
}

func (o ContactLarkBotWebhookOutput) ToContactLarkBotWebhookPtrOutputWithContext(ctx context.Context) ContactLarkBotWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactLarkBotWebhook) *ContactLarkBotWebhook {
		return &v
	}).(ContactLarkBotWebhookPtrOutput)
}

// The address of webhook.
func (o ContactLarkBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ContactLarkBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The secret key of webhook.
func (o ContactLarkBotWebhookOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactLarkBotWebhook) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type ContactLarkBotWebhookPtrOutput struct{ *pulumi.OutputState }

func (ContactLarkBotWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactLarkBotWebhook)(nil)).Elem()
}

func (o ContactLarkBotWebhookPtrOutput) ToContactLarkBotWebhookPtrOutput() ContactLarkBotWebhookPtrOutput {
	return o
}

func (o ContactLarkBotWebhookPtrOutput) ToContactLarkBotWebhookPtrOutputWithContext(ctx context.Context) ContactLarkBotWebhookPtrOutput {
	return o
}

func (o ContactLarkBotWebhookPtrOutput) Elem() ContactLarkBotWebhookOutput {
	return o.ApplyT(func(v *ContactLarkBotWebhook) ContactLarkBotWebhook {
		if v != nil {
			return *v
		}
		var ret ContactLarkBotWebhook
		return ret
	}).(ContactLarkBotWebhookOutput)
}

// The address of webhook.
func (o ContactLarkBotWebhookPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactLarkBotWebhook) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// The secret key of webhook.
func (o ContactLarkBotWebhookPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactLarkBotWebhook) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ContactPhoneNumber struct {
	// The country code of phone number. The value is `+86`.
	CountryCode string `pulumi:"countryCode"`
	// The number of phone number.
	Number string `pulumi:"number"`
}

// ContactPhoneNumberInput is an input type that accepts ContactPhoneNumberArgs and ContactPhoneNumberOutput values.
// You can construct a concrete instance of `ContactPhoneNumberInput` via:
//
//	ContactPhoneNumberArgs{...}
type ContactPhoneNumberInput interface {
	pulumi.Input

	ToContactPhoneNumberOutput() ContactPhoneNumberOutput
	ToContactPhoneNumberOutputWithContext(context.Context) ContactPhoneNumberOutput
}

type ContactPhoneNumberArgs struct {
	// The country code of phone number. The value is `+86`.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The number of phone number.
	Number pulumi.StringInput `pulumi:"number"`
}

func (ContactPhoneNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactPhoneNumber)(nil)).Elem()
}

func (i ContactPhoneNumberArgs) ToContactPhoneNumberOutput() ContactPhoneNumberOutput {
	return i.ToContactPhoneNumberOutputWithContext(context.Background())
}

func (i ContactPhoneNumberArgs) ToContactPhoneNumberOutputWithContext(ctx context.Context) ContactPhoneNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactPhoneNumberOutput)
}

func (i ContactPhoneNumberArgs) ToContactPhoneNumberPtrOutput() ContactPhoneNumberPtrOutput {
	return i.ToContactPhoneNumberPtrOutputWithContext(context.Background())
}

func (i ContactPhoneNumberArgs) ToContactPhoneNumberPtrOutputWithContext(ctx context.Context) ContactPhoneNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactPhoneNumberOutput).ToContactPhoneNumberPtrOutputWithContext(ctx)
}

// ContactPhoneNumberPtrInput is an input type that accepts ContactPhoneNumberArgs, ContactPhoneNumberPtr and ContactPhoneNumberPtrOutput values.
// You can construct a concrete instance of `ContactPhoneNumberPtrInput` via:
//
//	        ContactPhoneNumberArgs{...}
//
//	or:
//
//	        nil
type ContactPhoneNumberPtrInput interface {
	pulumi.Input

	ToContactPhoneNumberPtrOutput() ContactPhoneNumberPtrOutput
	ToContactPhoneNumberPtrOutputWithContext(context.Context) ContactPhoneNumberPtrOutput
}

type contactPhoneNumberPtrType ContactPhoneNumberArgs

func ContactPhoneNumberPtr(v *ContactPhoneNumberArgs) ContactPhoneNumberPtrInput {
	return (*contactPhoneNumberPtrType)(v)
}

func (*contactPhoneNumberPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactPhoneNumber)(nil)).Elem()
}

func (i *contactPhoneNumberPtrType) ToContactPhoneNumberPtrOutput() ContactPhoneNumberPtrOutput {
	return i.ToContactPhoneNumberPtrOutputWithContext(context.Background())
}

func (i *contactPhoneNumberPtrType) ToContactPhoneNumberPtrOutputWithContext(ctx context.Context) ContactPhoneNumberPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactPhoneNumberPtrOutput)
}

type ContactPhoneNumberOutput struct{ *pulumi.OutputState }

func (ContactPhoneNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactPhoneNumber)(nil)).Elem()
}

func (o ContactPhoneNumberOutput) ToContactPhoneNumberOutput() ContactPhoneNumberOutput {
	return o
}

func (o ContactPhoneNumberOutput) ToContactPhoneNumberOutputWithContext(ctx context.Context) ContactPhoneNumberOutput {
	return o
}

func (o ContactPhoneNumberOutput) ToContactPhoneNumberPtrOutput() ContactPhoneNumberPtrOutput {
	return o.ToContactPhoneNumberPtrOutputWithContext(context.Background())
}

func (o ContactPhoneNumberOutput) ToContactPhoneNumberPtrOutputWithContext(ctx context.Context) ContactPhoneNumberPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactPhoneNumber) *ContactPhoneNumber {
		return &v
	}).(ContactPhoneNumberPtrOutput)
}

// The country code of phone number. The value is `+86`.
func (o ContactPhoneNumberOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v ContactPhoneNumber) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The number of phone number.
func (o ContactPhoneNumberOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v ContactPhoneNumber) string { return v.Number }).(pulumi.StringOutput)
}

type ContactPhoneNumberPtrOutput struct{ *pulumi.OutputState }

func (ContactPhoneNumberPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactPhoneNumber)(nil)).Elem()
}

func (o ContactPhoneNumberPtrOutput) ToContactPhoneNumberPtrOutput() ContactPhoneNumberPtrOutput {
	return o
}

func (o ContactPhoneNumberPtrOutput) ToContactPhoneNumberPtrOutputWithContext(ctx context.Context) ContactPhoneNumberPtrOutput {
	return o
}

func (o ContactPhoneNumberPtrOutput) Elem() ContactPhoneNumberOutput {
	return o.ApplyT(func(v *ContactPhoneNumber) ContactPhoneNumber {
		if v != nil {
			return *v
		}
		var ret ContactPhoneNumber
		return ret
	}).(ContactPhoneNumberOutput)
}

// The country code of phone number. The value is `+86`.
func (o ContactPhoneNumberPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactPhoneNumber) *string {
		if v == nil {
			return nil
		}
		return &v.CountryCode
	}).(pulumi.StringPtrOutput)
}

// The number of phone number.
func (o ContactPhoneNumberPtrOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactPhoneNumber) *string {
		if v == nil {
			return nil
		}
		return &v.Number
	}).(pulumi.StringPtrOutput)
}

type ContactWeComBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The ids of user.
	AtUserIds []string `pulumi:"atUserIds"`
}

// ContactWeComBotWebhookInput is an input type that accepts ContactWeComBotWebhookArgs and ContactWeComBotWebhookOutput values.
// You can construct a concrete instance of `ContactWeComBotWebhookInput` via:
//
//	ContactWeComBotWebhookArgs{...}
type ContactWeComBotWebhookInput interface {
	pulumi.Input

	ToContactWeComBotWebhookOutput() ContactWeComBotWebhookOutput
	ToContactWeComBotWebhookOutputWithContext(context.Context) ContactWeComBotWebhookOutput
}

type ContactWeComBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The ids of user.
	AtUserIds pulumi.StringArrayInput `pulumi:"atUserIds"`
}

func (ContactWeComBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactWeComBotWebhook)(nil)).Elem()
}

func (i ContactWeComBotWebhookArgs) ToContactWeComBotWebhookOutput() ContactWeComBotWebhookOutput {
	return i.ToContactWeComBotWebhookOutputWithContext(context.Background())
}

func (i ContactWeComBotWebhookArgs) ToContactWeComBotWebhookOutputWithContext(ctx context.Context) ContactWeComBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactWeComBotWebhookOutput)
}

func (i ContactWeComBotWebhookArgs) ToContactWeComBotWebhookPtrOutput() ContactWeComBotWebhookPtrOutput {
	return i.ToContactWeComBotWebhookPtrOutputWithContext(context.Background())
}

func (i ContactWeComBotWebhookArgs) ToContactWeComBotWebhookPtrOutputWithContext(ctx context.Context) ContactWeComBotWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactWeComBotWebhookOutput).ToContactWeComBotWebhookPtrOutputWithContext(ctx)
}

// ContactWeComBotWebhookPtrInput is an input type that accepts ContactWeComBotWebhookArgs, ContactWeComBotWebhookPtr and ContactWeComBotWebhookPtrOutput values.
// You can construct a concrete instance of `ContactWeComBotWebhookPtrInput` via:
//
//	        ContactWeComBotWebhookArgs{...}
//
//	or:
//
//	        nil
type ContactWeComBotWebhookPtrInput interface {
	pulumi.Input

	ToContactWeComBotWebhookPtrOutput() ContactWeComBotWebhookPtrOutput
	ToContactWeComBotWebhookPtrOutputWithContext(context.Context) ContactWeComBotWebhookPtrOutput
}

type contactWeComBotWebhookPtrType ContactWeComBotWebhookArgs

func ContactWeComBotWebhookPtr(v *ContactWeComBotWebhookArgs) ContactWeComBotWebhookPtrInput {
	return (*contactWeComBotWebhookPtrType)(v)
}

func (*contactWeComBotWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactWeComBotWebhook)(nil)).Elem()
}

func (i *contactWeComBotWebhookPtrType) ToContactWeComBotWebhookPtrOutput() ContactWeComBotWebhookPtrOutput {
	return i.ToContactWeComBotWebhookPtrOutputWithContext(context.Background())
}

func (i *contactWeComBotWebhookPtrType) ToContactWeComBotWebhookPtrOutputWithContext(ctx context.Context) ContactWeComBotWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactWeComBotWebhookPtrOutput)
}

type ContactWeComBotWebhookOutput struct{ *pulumi.OutputState }

func (ContactWeComBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactWeComBotWebhook)(nil)).Elem()
}

func (o ContactWeComBotWebhookOutput) ToContactWeComBotWebhookOutput() ContactWeComBotWebhookOutput {
	return o
}

func (o ContactWeComBotWebhookOutput) ToContactWeComBotWebhookOutputWithContext(ctx context.Context) ContactWeComBotWebhookOutput {
	return o
}

func (o ContactWeComBotWebhookOutput) ToContactWeComBotWebhookPtrOutput() ContactWeComBotWebhookPtrOutput {
	return o.ToContactWeComBotWebhookPtrOutputWithContext(context.Background())
}

func (o ContactWeComBotWebhookOutput) ToContactWeComBotWebhookPtrOutputWithContext(ctx context.Context) ContactWeComBotWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactWeComBotWebhook) *ContactWeComBotWebhook {
		return &v
	}).(ContactWeComBotWebhookPtrOutput)
}

// The address of webhook.
func (o ContactWeComBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ContactWeComBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The ids of user.
func (o ContactWeComBotWebhookOutput) AtUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactWeComBotWebhook) []string { return v.AtUserIds }).(pulumi.StringArrayOutput)
}

type ContactWeComBotWebhookPtrOutput struct{ *pulumi.OutputState }

func (ContactWeComBotWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactWeComBotWebhook)(nil)).Elem()
}

func (o ContactWeComBotWebhookPtrOutput) ToContactWeComBotWebhookPtrOutput() ContactWeComBotWebhookPtrOutput {
	return o
}

func (o ContactWeComBotWebhookPtrOutput) ToContactWeComBotWebhookPtrOutputWithContext(ctx context.Context) ContactWeComBotWebhookPtrOutput {
	return o
}

func (o ContactWeComBotWebhookPtrOutput) Elem() ContactWeComBotWebhookOutput {
	return o.ApplyT(func(v *ContactWeComBotWebhook) ContactWeComBotWebhook {
		if v != nil {
			return *v
		}
		var ret ContactWeComBotWebhook
		return ret
	}).(ContactWeComBotWebhookOutput)
}

// The address of webhook.
func (o ContactWeComBotWebhookPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactWeComBotWebhook) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// The ids of user.
func (o ContactWeComBotWebhookPtrOutput) AtUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContactWeComBotWebhook) []string {
		if v == nil {
			return nil
		}
		return v.AtUserIds
	}).(pulumi.StringArrayOutput)
}

type ContactWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The token of webhook.
	Token *string `pulumi:"token"`
}

// ContactWebhookInput is an input type that accepts ContactWebhookArgs and ContactWebhookOutput values.
// You can construct a concrete instance of `ContactWebhookInput` via:
//
//	ContactWebhookArgs{...}
type ContactWebhookInput interface {
	pulumi.Input

	ToContactWebhookOutput() ContactWebhookOutput
	ToContactWebhookOutputWithContext(context.Context) ContactWebhookOutput
}

type ContactWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The token of webhook.
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (ContactWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactWebhook)(nil)).Elem()
}

func (i ContactWebhookArgs) ToContactWebhookOutput() ContactWebhookOutput {
	return i.ToContactWebhookOutputWithContext(context.Background())
}

func (i ContactWebhookArgs) ToContactWebhookOutputWithContext(ctx context.Context) ContactWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactWebhookOutput)
}

func (i ContactWebhookArgs) ToContactWebhookPtrOutput() ContactWebhookPtrOutput {
	return i.ToContactWebhookPtrOutputWithContext(context.Background())
}

func (i ContactWebhookArgs) ToContactWebhookPtrOutputWithContext(ctx context.Context) ContactWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactWebhookOutput).ToContactWebhookPtrOutputWithContext(ctx)
}

// ContactWebhookPtrInput is an input type that accepts ContactWebhookArgs, ContactWebhookPtr and ContactWebhookPtrOutput values.
// You can construct a concrete instance of `ContactWebhookPtrInput` via:
//
//	        ContactWebhookArgs{...}
//
//	or:
//
//	        nil
type ContactWebhookPtrInput interface {
	pulumi.Input

	ToContactWebhookPtrOutput() ContactWebhookPtrOutput
	ToContactWebhookPtrOutputWithContext(context.Context) ContactWebhookPtrOutput
}

type contactWebhookPtrType ContactWebhookArgs

func ContactWebhookPtr(v *ContactWebhookArgs) ContactWebhookPtrInput {
	return (*contactWebhookPtrType)(v)
}

func (*contactWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactWebhook)(nil)).Elem()
}

func (i *contactWebhookPtrType) ToContactWebhookPtrOutput() ContactWebhookPtrOutput {
	return i.ToContactWebhookPtrOutputWithContext(context.Background())
}

func (i *contactWebhookPtrType) ToContactWebhookPtrOutputWithContext(ctx context.Context) ContactWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactWebhookPtrOutput)
}

type ContactWebhookOutput struct{ *pulumi.OutputState }

func (ContactWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactWebhook)(nil)).Elem()
}

func (o ContactWebhookOutput) ToContactWebhookOutput() ContactWebhookOutput {
	return o
}

func (o ContactWebhookOutput) ToContactWebhookOutputWithContext(ctx context.Context) ContactWebhookOutput {
	return o
}

func (o ContactWebhookOutput) ToContactWebhookPtrOutput() ContactWebhookPtrOutput {
	return o.ToContactWebhookPtrOutputWithContext(context.Background())
}

func (o ContactWebhookOutput) ToContactWebhookPtrOutputWithContext(ctx context.Context) ContactWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactWebhook) *ContactWebhook {
		return &v
	}).(ContactWebhookPtrOutput)
}

// The address of webhook.
func (o ContactWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ContactWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The token of webhook.
func (o ContactWebhookOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactWebhook) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type ContactWebhookPtrOutput struct{ *pulumi.OutputState }

func (ContactWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactWebhook)(nil)).Elem()
}

func (o ContactWebhookPtrOutput) ToContactWebhookPtrOutput() ContactWebhookPtrOutput {
	return o
}

func (o ContactWebhookPtrOutput) ToContactWebhookPtrOutputWithContext(ctx context.Context) ContactWebhookPtrOutput {
	return o
}

func (o ContactWebhookPtrOutput) Elem() ContactWebhookOutput {
	return o.ApplyT(func(v *ContactWebhook) ContactWebhook {
		if v != nil {
			return *v
		}
		var ret ContactWebhook
		return ret
	}).(ContactWebhookOutput)
}

// The address of webhook.
func (o ContactWebhookPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactWebhook) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// The token of webhook.
func (o ContactWebhookPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

type ContactsContact struct {
	// A list of contact group ids.
	ContactGroupIds []string `pulumi:"contactGroupIds"`
	// The create time of contact.
	CreateTime string `pulumi:"createTime"`
	// The ding talk bot webhook of contact.
	DingTalkBotWebhooks []ContactsContactDingTalkBotWebhook `pulumi:"dingTalkBotWebhooks"`
	// The email of contact.
	Email string `pulumi:"email"`
	// Whether the email of contact active.
	EmailActive bool `pulumi:"emailActive"`
	// The ID of contact.
	Id string `pulumi:"id"`
	// The lark bot webhook of contact.
	LarkBotWebhooks []ContactsContactLarkBotWebhook `pulumi:"larkBotWebhooks"`
	// The name of contact.
	Name string `pulumi:"name"`
	// Whether phone number is active.
	PhoneNumberActive bool `pulumi:"phoneNumberActive"`
	// The phone number of contact.
	PhoneNumbers []ContactsContactPhoneNumber `pulumi:"phoneNumbers"`
	// The we com bot webhook of contact.
	WeComBotWebhooks []ContactsContactWeComBotWebhook `pulumi:"weComBotWebhooks"`
	// The webhook of contact.
	Webhooks []ContactsContactWebhook `pulumi:"webhooks"`
}

// ContactsContactInput is an input type that accepts ContactsContactArgs and ContactsContactOutput values.
// You can construct a concrete instance of `ContactsContactInput` via:
//
//	ContactsContactArgs{...}
type ContactsContactInput interface {
	pulumi.Input

	ToContactsContactOutput() ContactsContactOutput
	ToContactsContactOutputWithContext(context.Context) ContactsContactOutput
}

type ContactsContactArgs struct {
	// A list of contact group ids.
	ContactGroupIds pulumi.StringArrayInput `pulumi:"contactGroupIds"`
	// The create time of contact.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ding talk bot webhook of contact.
	DingTalkBotWebhooks ContactsContactDingTalkBotWebhookArrayInput `pulumi:"dingTalkBotWebhooks"`
	// The email of contact.
	Email pulumi.StringInput `pulumi:"email"`
	// Whether the email of contact active.
	EmailActive pulumi.BoolInput `pulumi:"emailActive"`
	// The ID of contact.
	Id pulumi.StringInput `pulumi:"id"`
	// The lark bot webhook of contact.
	LarkBotWebhooks ContactsContactLarkBotWebhookArrayInput `pulumi:"larkBotWebhooks"`
	// The name of contact.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether phone number is active.
	PhoneNumberActive pulumi.BoolInput `pulumi:"phoneNumberActive"`
	// The phone number of contact.
	PhoneNumbers ContactsContactPhoneNumberArrayInput `pulumi:"phoneNumbers"`
	// The we com bot webhook of contact.
	WeComBotWebhooks ContactsContactWeComBotWebhookArrayInput `pulumi:"weComBotWebhooks"`
	// The webhook of contact.
	Webhooks ContactsContactWebhookArrayInput `pulumi:"webhooks"`
}

func (ContactsContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContact)(nil)).Elem()
}

func (i ContactsContactArgs) ToContactsContactOutput() ContactsContactOutput {
	return i.ToContactsContactOutputWithContext(context.Background())
}

func (i ContactsContactArgs) ToContactsContactOutputWithContext(ctx context.Context) ContactsContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactOutput)
}

// ContactsContactArrayInput is an input type that accepts ContactsContactArray and ContactsContactArrayOutput values.
// You can construct a concrete instance of `ContactsContactArrayInput` via:
//
//	ContactsContactArray{ ContactsContactArgs{...} }
type ContactsContactArrayInput interface {
	pulumi.Input

	ToContactsContactArrayOutput() ContactsContactArrayOutput
	ToContactsContactArrayOutputWithContext(context.Context) ContactsContactArrayOutput
}

type ContactsContactArray []ContactsContactInput

func (ContactsContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContact)(nil)).Elem()
}

func (i ContactsContactArray) ToContactsContactArrayOutput() ContactsContactArrayOutput {
	return i.ToContactsContactArrayOutputWithContext(context.Background())
}

func (i ContactsContactArray) ToContactsContactArrayOutputWithContext(ctx context.Context) ContactsContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactArrayOutput)
}

type ContactsContactOutput struct{ *pulumi.OutputState }

func (ContactsContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContact)(nil)).Elem()
}

func (o ContactsContactOutput) ToContactsContactOutput() ContactsContactOutput {
	return o
}

func (o ContactsContactOutput) ToContactsContactOutputWithContext(ctx context.Context) ContactsContactOutput {
	return o
}

// A list of contact group ids.
func (o ContactsContactOutput) ContactGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactsContact) []string { return v.ContactGroupIds }).(pulumi.StringArrayOutput)
}

// The create time of contact.
func (o ContactsContactOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContact) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ding talk bot webhook of contact.
func (o ContactsContactOutput) DingTalkBotWebhooks() ContactsContactDingTalkBotWebhookArrayOutput {
	return o.ApplyT(func(v ContactsContact) []ContactsContactDingTalkBotWebhook { return v.DingTalkBotWebhooks }).(ContactsContactDingTalkBotWebhookArrayOutput)
}

// The email of contact.
func (o ContactsContactOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContact) string { return v.Email }).(pulumi.StringOutput)
}

// Whether the email of contact active.
func (o ContactsContactOutput) EmailActive() pulumi.BoolOutput {
	return o.ApplyT(func(v ContactsContact) bool { return v.EmailActive }).(pulumi.BoolOutput)
}

// The ID of contact.
func (o ContactsContactOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContact) string { return v.Id }).(pulumi.StringOutput)
}

// The lark bot webhook of contact.
func (o ContactsContactOutput) LarkBotWebhooks() ContactsContactLarkBotWebhookArrayOutput {
	return o.ApplyT(func(v ContactsContact) []ContactsContactLarkBotWebhook { return v.LarkBotWebhooks }).(ContactsContactLarkBotWebhookArrayOutput)
}

// The name of contact.
func (o ContactsContactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContact) string { return v.Name }).(pulumi.StringOutput)
}

// Whether phone number is active.
func (o ContactsContactOutput) PhoneNumberActive() pulumi.BoolOutput {
	return o.ApplyT(func(v ContactsContact) bool { return v.PhoneNumberActive }).(pulumi.BoolOutput)
}

// The phone number of contact.
func (o ContactsContactOutput) PhoneNumbers() ContactsContactPhoneNumberArrayOutput {
	return o.ApplyT(func(v ContactsContact) []ContactsContactPhoneNumber { return v.PhoneNumbers }).(ContactsContactPhoneNumberArrayOutput)
}

// The we com bot webhook of contact.
func (o ContactsContactOutput) WeComBotWebhooks() ContactsContactWeComBotWebhookArrayOutput {
	return o.ApplyT(func(v ContactsContact) []ContactsContactWeComBotWebhook { return v.WeComBotWebhooks }).(ContactsContactWeComBotWebhookArrayOutput)
}

// The webhook of contact.
func (o ContactsContactOutput) Webhooks() ContactsContactWebhookArrayOutput {
	return o.ApplyT(func(v ContactsContact) []ContactsContactWebhook { return v.Webhooks }).(ContactsContactWebhookArrayOutput)
}

type ContactsContactArrayOutput struct{ *pulumi.OutputState }

func (ContactsContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContact)(nil)).Elem()
}

func (o ContactsContactArrayOutput) ToContactsContactArrayOutput() ContactsContactArrayOutput {
	return o
}

func (o ContactsContactArrayOutput) ToContactsContactArrayOutputWithContext(ctx context.Context) ContactsContactArrayOutput {
	return o
}

func (o ContactsContactArrayOutput) Index(i pulumi.IntInput) ContactsContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsContact {
		return vs[0].([]ContactsContact)[vs[1].(int)]
	}).(ContactsContactOutput)
}

type ContactsContactDingTalkBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The mobiles of user.
	AtMobiles []string `pulumi:"atMobiles"`
	// The ids of user.
	AtUserIds []string `pulumi:"atUserIds"`
	// The secret key of webhook.
	SecretKey string `pulumi:"secretKey"`
}

// ContactsContactDingTalkBotWebhookInput is an input type that accepts ContactsContactDingTalkBotWebhookArgs and ContactsContactDingTalkBotWebhookOutput values.
// You can construct a concrete instance of `ContactsContactDingTalkBotWebhookInput` via:
//
//	ContactsContactDingTalkBotWebhookArgs{...}
type ContactsContactDingTalkBotWebhookInput interface {
	pulumi.Input

	ToContactsContactDingTalkBotWebhookOutput() ContactsContactDingTalkBotWebhookOutput
	ToContactsContactDingTalkBotWebhookOutputWithContext(context.Context) ContactsContactDingTalkBotWebhookOutput
}

type ContactsContactDingTalkBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The mobiles of user.
	AtMobiles pulumi.StringArrayInput `pulumi:"atMobiles"`
	// The ids of user.
	AtUserIds pulumi.StringArrayInput `pulumi:"atUserIds"`
	// The secret key of webhook.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (ContactsContactDingTalkBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactDingTalkBotWebhook)(nil)).Elem()
}

func (i ContactsContactDingTalkBotWebhookArgs) ToContactsContactDingTalkBotWebhookOutput() ContactsContactDingTalkBotWebhookOutput {
	return i.ToContactsContactDingTalkBotWebhookOutputWithContext(context.Background())
}

func (i ContactsContactDingTalkBotWebhookArgs) ToContactsContactDingTalkBotWebhookOutputWithContext(ctx context.Context) ContactsContactDingTalkBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactDingTalkBotWebhookOutput)
}

// ContactsContactDingTalkBotWebhookArrayInput is an input type that accepts ContactsContactDingTalkBotWebhookArray and ContactsContactDingTalkBotWebhookArrayOutput values.
// You can construct a concrete instance of `ContactsContactDingTalkBotWebhookArrayInput` via:
//
//	ContactsContactDingTalkBotWebhookArray{ ContactsContactDingTalkBotWebhookArgs{...} }
type ContactsContactDingTalkBotWebhookArrayInput interface {
	pulumi.Input

	ToContactsContactDingTalkBotWebhookArrayOutput() ContactsContactDingTalkBotWebhookArrayOutput
	ToContactsContactDingTalkBotWebhookArrayOutputWithContext(context.Context) ContactsContactDingTalkBotWebhookArrayOutput
}

type ContactsContactDingTalkBotWebhookArray []ContactsContactDingTalkBotWebhookInput

func (ContactsContactDingTalkBotWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactDingTalkBotWebhook)(nil)).Elem()
}

func (i ContactsContactDingTalkBotWebhookArray) ToContactsContactDingTalkBotWebhookArrayOutput() ContactsContactDingTalkBotWebhookArrayOutput {
	return i.ToContactsContactDingTalkBotWebhookArrayOutputWithContext(context.Background())
}

func (i ContactsContactDingTalkBotWebhookArray) ToContactsContactDingTalkBotWebhookArrayOutputWithContext(ctx context.Context) ContactsContactDingTalkBotWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactDingTalkBotWebhookArrayOutput)
}

type ContactsContactDingTalkBotWebhookOutput struct{ *pulumi.OutputState }

func (ContactsContactDingTalkBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactDingTalkBotWebhook)(nil)).Elem()
}

func (o ContactsContactDingTalkBotWebhookOutput) ToContactsContactDingTalkBotWebhookOutput() ContactsContactDingTalkBotWebhookOutput {
	return o
}

func (o ContactsContactDingTalkBotWebhookOutput) ToContactsContactDingTalkBotWebhookOutputWithContext(ctx context.Context) ContactsContactDingTalkBotWebhookOutput {
	return o
}

// The address of webhook.
func (o ContactsContactDingTalkBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactDingTalkBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The mobiles of user.
func (o ContactsContactDingTalkBotWebhookOutput) AtMobiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactsContactDingTalkBotWebhook) []string { return v.AtMobiles }).(pulumi.StringArrayOutput)
}

// The ids of user.
func (o ContactsContactDingTalkBotWebhookOutput) AtUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactsContactDingTalkBotWebhook) []string { return v.AtUserIds }).(pulumi.StringArrayOutput)
}

// The secret key of webhook.
func (o ContactsContactDingTalkBotWebhookOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactDingTalkBotWebhook) string { return v.SecretKey }).(pulumi.StringOutput)
}

type ContactsContactDingTalkBotWebhookArrayOutput struct{ *pulumi.OutputState }

func (ContactsContactDingTalkBotWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactDingTalkBotWebhook)(nil)).Elem()
}

func (o ContactsContactDingTalkBotWebhookArrayOutput) ToContactsContactDingTalkBotWebhookArrayOutput() ContactsContactDingTalkBotWebhookArrayOutput {
	return o
}

func (o ContactsContactDingTalkBotWebhookArrayOutput) ToContactsContactDingTalkBotWebhookArrayOutputWithContext(ctx context.Context) ContactsContactDingTalkBotWebhookArrayOutput {
	return o
}

func (o ContactsContactDingTalkBotWebhookArrayOutput) Index(i pulumi.IntInput) ContactsContactDingTalkBotWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsContactDingTalkBotWebhook {
		return vs[0].([]ContactsContactDingTalkBotWebhook)[vs[1].(int)]
	}).(ContactsContactDingTalkBotWebhookOutput)
}

type ContactsContactLarkBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The secret key of webhook.
	SecretKey string `pulumi:"secretKey"`
}

// ContactsContactLarkBotWebhookInput is an input type that accepts ContactsContactLarkBotWebhookArgs and ContactsContactLarkBotWebhookOutput values.
// You can construct a concrete instance of `ContactsContactLarkBotWebhookInput` via:
//
//	ContactsContactLarkBotWebhookArgs{...}
type ContactsContactLarkBotWebhookInput interface {
	pulumi.Input

	ToContactsContactLarkBotWebhookOutput() ContactsContactLarkBotWebhookOutput
	ToContactsContactLarkBotWebhookOutputWithContext(context.Context) ContactsContactLarkBotWebhookOutput
}

type ContactsContactLarkBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The secret key of webhook.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (ContactsContactLarkBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactLarkBotWebhook)(nil)).Elem()
}

func (i ContactsContactLarkBotWebhookArgs) ToContactsContactLarkBotWebhookOutput() ContactsContactLarkBotWebhookOutput {
	return i.ToContactsContactLarkBotWebhookOutputWithContext(context.Background())
}

func (i ContactsContactLarkBotWebhookArgs) ToContactsContactLarkBotWebhookOutputWithContext(ctx context.Context) ContactsContactLarkBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactLarkBotWebhookOutput)
}

// ContactsContactLarkBotWebhookArrayInput is an input type that accepts ContactsContactLarkBotWebhookArray and ContactsContactLarkBotWebhookArrayOutput values.
// You can construct a concrete instance of `ContactsContactLarkBotWebhookArrayInput` via:
//
//	ContactsContactLarkBotWebhookArray{ ContactsContactLarkBotWebhookArgs{...} }
type ContactsContactLarkBotWebhookArrayInput interface {
	pulumi.Input

	ToContactsContactLarkBotWebhookArrayOutput() ContactsContactLarkBotWebhookArrayOutput
	ToContactsContactLarkBotWebhookArrayOutputWithContext(context.Context) ContactsContactLarkBotWebhookArrayOutput
}

type ContactsContactLarkBotWebhookArray []ContactsContactLarkBotWebhookInput

func (ContactsContactLarkBotWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactLarkBotWebhook)(nil)).Elem()
}

func (i ContactsContactLarkBotWebhookArray) ToContactsContactLarkBotWebhookArrayOutput() ContactsContactLarkBotWebhookArrayOutput {
	return i.ToContactsContactLarkBotWebhookArrayOutputWithContext(context.Background())
}

func (i ContactsContactLarkBotWebhookArray) ToContactsContactLarkBotWebhookArrayOutputWithContext(ctx context.Context) ContactsContactLarkBotWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactLarkBotWebhookArrayOutput)
}

type ContactsContactLarkBotWebhookOutput struct{ *pulumi.OutputState }

func (ContactsContactLarkBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactLarkBotWebhook)(nil)).Elem()
}

func (o ContactsContactLarkBotWebhookOutput) ToContactsContactLarkBotWebhookOutput() ContactsContactLarkBotWebhookOutput {
	return o
}

func (o ContactsContactLarkBotWebhookOutput) ToContactsContactLarkBotWebhookOutputWithContext(ctx context.Context) ContactsContactLarkBotWebhookOutput {
	return o
}

// The address of webhook.
func (o ContactsContactLarkBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactLarkBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The secret key of webhook.
func (o ContactsContactLarkBotWebhookOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactLarkBotWebhook) string { return v.SecretKey }).(pulumi.StringOutput)
}

type ContactsContactLarkBotWebhookArrayOutput struct{ *pulumi.OutputState }

func (ContactsContactLarkBotWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactLarkBotWebhook)(nil)).Elem()
}

func (o ContactsContactLarkBotWebhookArrayOutput) ToContactsContactLarkBotWebhookArrayOutput() ContactsContactLarkBotWebhookArrayOutput {
	return o
}

func (o ContactsContactLarkBotWebhookArrayOutput) ToContactsContactLarkBotWebhookArrayOutputWithContext(ctx context.Context) ContactsContactLarkBotWebhookArrayOutput {
	return o
}

func (o ContactsContactLarkBotWebhookArrayOutput) Index(i pulumi.IntInput) ContactsContactLarkBotWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsContactLarkBotWebhook {
		return vs[0].([]ContactsContactLarkBotWebhook)[vs[1].(int)]
	}).(ContactsContactLarkBotWebhookOutput)
}

type ContactsContactPhoneNumber struct {
	// The country code of phone number.
	CountryCode string `pulumi:"countryCode"`
	// The number of phone number.
	Number string `pulumi:"number"`
}

// ContactsContactPhoneNumberInput is an input type that accepts ContactsContactPhoneNumberArgs and ContactsContactPhoneNumberOutput values.
// You can construct a concrete instance of `ContactsContactPhoneNumberInput` via:
//
//	ContactsContactPhoneNumberArgs{...}
type ContactsContactPhoneNumberInput interface {
	pulumi.Input

	ToContactsContactPhoneNumberOutput() ContactsContactPhoneNumberOutput
	ToContactsContactPhoneNumberOutputWithContext(context.Context) ContactsContactPhoneNumberOutput
}

type ContactsContactPhoneNumberArgs struct {
	// The country code of phone number.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The number of phone number.
	Number pulumi.StringInput `pulumi:"number"`
}

func (ContactsContactPhoneNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactPhoneNumber)(nil)).Elem()
}

func (i ContactsContactPhoneNumberArgs) ToContactsContactPhoneNumberOutput() ContactsContactPhoneNumberOutput {
	return i.ToContactsContactPhoneNumberOutputWithContext(context.Background())
}

func (i ContactsContactPhoneNumberArgs) ToContactsContactPhoneNumberOutputWithContext(ctx context.Context) ContactsContactPhoneNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactPhoneNumberOutput)
}

// ContactsContactPhoneNumberArrayInput is an input type that accepts ContactsContactPhoneNumberArray and ContactsContactPhoneNumberArrayOutput values.
// You can construct a concrete instance of `ContactsContactPhoneNumberArrayInput` via:
//
//	ContactsContactPhoneNumberArray{ ContactsContactPhoneNumberArgs{...} }
type ContactsContactPhoneNumberArrayInput interface {
	pulumi.Input

	ToContactsContactPhoneNumberArrayOutput() ContactsContactPhoneNumberArrayOutput
	ToContactsContactPhoneNumberArrayOutputWithContext(context.Context) ContactsContactPhoneNumberArrayOutput
}

type ContactsContactPhoneNumberArray []ContactsContactPhoneNumberInput

func (ContactsContactPhoneNumberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactPhoneNumber)(nil)).Elem()
}

func (i ContactsContactPhoneNumberArray) ToContactsContactPhoneNumberArrayOutput() ContactsContactPhoneNumberArrayOutput {
	return i.ToContactsContactPhoneNumberArrayOutputWithContext(context.Background())
}

func (i ContactsContactPhoneNumberArray) ToContactsContactPhoneNumberArrayOutputWithContext(ctx context.Context) ContactsContactPhoneNumberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactPhoneNumberArrayOutput)
}

type ContactsContactPhoneNumberOutput struct{ *pulumi.OutputState }

func (ContactsContactPhoneNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactPhoneNumber)(nil)).Elem()
}

func (o ContactsContactPhoneNumberOutput) ToContactsContactPhoneNumberOutput() ContactsContactPhoneNumberOutput {
	return o
}

func (o ContactsContactPhoneNumberOutput) ToContactsContactPhoneNumberOutputWithContext(ctx context.Context) ContactsContactPhoneNumberOutput {
	return o
}

// The country code of phone number.
func (o ContactsContactPhoneNumberOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactPhoneNumber) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The number of phone number.
func (o ContactsContactPhoneNumberOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactPhoneNumber) string { return v.Number }).(pulumi.StringOutput)
}

type ContactsContactPhoneNumberArrayOutput struct{ *pulumi.OutputState }

func (ContactsContactPhoneNumberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactPhoneNumber)(nil)).Elem()
}

func (o ContactsContactPhoneNumberArrayOutput) ToContactsContactPhoneNumberArrayOutput() ContactsContactPhoneNumberArrayOutput {
	return o
}

func (o ContactsContactPhoneNumberArrayOutput) ToContactsContactPhoneNumberArrayOutputWithContext(ctx context.Context) ContactsContactPhoneNumberArrayOutput {
	return o
}

func (o ContactsContactPhoneNumberArrayOutput) Index(i pulumi.IntInput) ContactsContactPhoneNumberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsContactPhoneNumber {
		return vs[0].([]ContactsContactPhoneNumber)[vs[1].(int)]
	}).(ContactsContactPhoneNumberOutput)
}

type ContactsContactWeComBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The ids of user.
	AtUserIds []string `pulumi:"atUserIds"`
}

// ContactsContactWeComBotWebhookInput is an input type that accepts ContactsContactWeComBotWebhookArgs and ContactsContactWeComBotWebhookOutput values.
// You can construct a concrete instance of `ContactsContactWeComBotWebhookInput` via:
//
//	ContactsContactWeComBotWebhookArgs{...}
type ContactsContactWeComBotWebhookInput interface {
	pulumi.Input

	ToContactsContactWeComBotWebhookOutput() ContactsContactWeComBotWebhookOutput
	ToContactsContactWeComBotWebhookOutputWithContext(context.Context) ContactsContactWeComBotWebhookOutput
}

type ContactsContactWeComBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The ids of user.
	AtUserIds pulumi.StringArrayInput `pulumi:"atUserIds"`
}

func (ContactsContactWeComBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactWeComBotWebhook)(nil)).Elem()
}

func (i ContactsContactWeComBotWebhookArgs) ToContactsContactWeComBotWebhookOutput() ContactsContactWeComBotWebhookOutput {
	return i.ToContactsContactWeComBotWebhookOutputWithContext(context.Background())
}

func (i ContactsContactWeComBotWebhookArgs) ToContactsContactWeComBotWebhookOutputWithContext(ctx context.Context) ContactsContactWeComBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactWeComBotWebhookOutput)
}

// ContactsContactWeComBotWebhookArrayInput is an input type that accepts ContactsContactWeComBotWebhookArray and ContactsContactWeComBotWebhookArrayOutput values.
// You can construct a concrete instance of `ContactsContactWeComBotWebhookArrayInput` via:
//
//	ContactsContactWeComBotWebhookArray{ ContactsContactWeComBotWebhookArgs{...} }
type ContactsContactWeComBotWebhookArrayInput interface {
	pulumi.Input

	ToContactsContactWeComBotWebhookArrayOutput() ContactsContactWeComBotWebhookArrayOutput
	ToContactsContactWeComBotWebhookArrayOutputWithContext(context.Context) ContactsContactWeComBotWebhookArrayOutput
}

type ContactsContactWeComBotWebhookArray []ContactsContactWeComBotWebhookInput

func (ContactsContactWeComBotWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactWeComBotWebhook)(nil)).Elem()
}

func (i ContactsContactWeComBotWebhookArray) ToContactsContactWeComBotWebhookArrayOutput() ContactsContactWeComBotWebhookArrayOutput {
	return i.ToContactsContactWeComBotWebhookArrayOutputWithContext(context.Background())
}

func (i ContactsContactWeComBotWebhookArray) ToContactsContactWeComBotWebhookArrayOutputWithContext(ctx context.Context) ContactsContactWeComBotWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactWeComBotWebhookArrayOutput)
}

type ContactsContactWeComBotWebhookOutput struct{ *pulumi.OutputState }

func (ContactsContactWeComBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactWeComBotWebhook)(nil)).Elem()
}

func (o ContactsContactWeComBotWebhookOutput) ToContactsContactWeComBotWebhookOutput() ContactsContactWeComBotWebhookOutput {
	return o
}

func (o ContactsContactWeComBotWebhookOutput) ToContactsContactWeComBotWebhookOutputWithContext(ctx context.Context) ContactsContactWeComBotWebhookOutput {
	return o
}

// The address of webhook.
func (o ContactsContactWeComBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactWeComBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The ids of user.
func (o ContactsContactWeComBotWebhookOutput) AtUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContactsContactWeComBotWebhook) []string { return v.AtUserIds }).(pulumi.StringArrayOutput)
}

type ContactsContactWeComBotWebhookArrayOutput struct{ *pulumi.OutputState }

func (ContactsContactWeComBotWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactWeComBotWebhook)(nil)).Elem()
}

func (o ContactsContactWeComBotWebhookArrayOutput) ToContactsContactWeComBotWebhookArrayOutput() ContactsContactWeComBotWebhookArrayOutput {
	return o
}

func (o ContactsContactWeComBotWebhookArrayOutput) ToContactsContactWeComBotWebhookArrayOutputWithContext(ctx context.Context) ContactsContactWeComBotWebhookArrayOutput {
	return o
}

func (o ContactsContactWeComBotWebhookArrayOutput) Index(i pulumi.IntInput) ContactsContactWeComBotWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsContactWeComBotWebhook {
		return vs[0].([]ContactsContactWeComBotWebhook)[vs[1].(int)]
	}).(ContactsContactWeComBotWebhookOutput)
}

type ContactsContactWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The token of webhook.
	Token string `pulumi:"token"`
}

// ContactsContactWebhookInput is an input type that accepts ContactsContactWebhookArgs and ContactsContactWebhookOutput values.
// You can construct a concrete instance of `ContactsContactWebhookInput` via:
//
//	ContactsContactWebhookArgs{...}
type ContactsContactWebhookInput interface {
	pulumi.Input

	ToContactsContactWebhookOutput() ContactsContactWebhookOutput
	ToContactsContactWebhookOutputWithContext(context.Context) ContactsContactWebhookOutput
}

type ContactsContactWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The token of webhook.
	Token pulumi.StringInput `pulumi:"token"`
}

func (ContactsContactWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactWebhook)(nil)).Elem()
}

func (i ContactsContactWebhookArgs) ToContactsContactWebhookOutput() ContactsContactWebhookOutput {
	return i.ToContactsContactWebhookOutputWithContext(context.Background())
}

func (i ContactsContactWebhookArgs) ToContactsContactWebhookOutputWithContext(ctx context.Context) ContactsContactWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactWebhookOutput)
}

// ContactsContactWebhookArrayInput is an input type that accepts ContactsContactWebhookArray and ContactsContactWebhookArrayOutput values.
// You can construct a concrete instance of `ContactsContactWebhookArrayInput` via:
//
//	ContactsContactWebhookArray{ ContactsContactWebhookArgs{...} }
type ContactsContactWebhookArrayInput interface {
	pulumi.Input

	ToContactsContactWebhookArrayOutput() ContactsContactWebhookArrayOutput
	ToContactsContactWebhookArrayOutputWithContext(context.Context) ContactsContactWebhookArrayOutput
}

type ContactsContactWebhookArray []ContactsContactWebhookInput

func (ContactsContactWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactWebhook)(nil)).Elem()
}

func (i ContactsContactWebhookArray) ToContactsContactWebhookArrayOutput() ContactsContactWebhookArrayOutput {
	return i.ToContactsContactWebhookArrayOutputWithContext(context.Background())
}

func (i ContactsContactWebhookArray) ToContactsContactWebhookArrayOutputWithContext(ctx context.Context) ContactsContactWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactsContactWebhookArrayOutput)
}

type ContactsContactWebhookOutput struct{ *pulumi.OutputState }

func (ContactsContactWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactsContactWebhook)(nil)).Elem()
}

func (o ContactsContactWebhookOutput) ToContactsContactWebhookOutput() ContactsContactWebhookOutput {
	return o
}

func (o ContactsContactWebhookOutput) ToContactsContactWebhookOutputWithContext(ctx context.Context) ContactsContactWebhookOutput {
	return o
}

// The address of webhook.
func (o ContactsContactWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The token of webhook.
func (o ContactsContactWebhookOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v ContactsContactWebhook) string { return v.Token }).(pulumi.StringOutput)
}

type ContactsContactWebhookArrayOutput struct{ *pulumi.OutputState }

func (ContactsContactWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContactsContactWebhook)(nil)).Elem()
}

func (o ContactsContactWebhookArrayOutput) ToContactsContactWebhookArrayOutput() ContactsContactWebhookArrayOutput {
	return o
}

func (o ContactsContactWebhookArrayOutput) ToContactsContactWebhookArrayOutputWithContext(ctx context.Context) ContactsContactWebhookArrayOutput {
	return o
}

func (o ContactsContactWebhookArrayOutput) Index(i pulumi.IntInput) ContactsContactWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContactsContactWebhook {
		return vs[0].([]ContactsContactWebhook)[vs[1].(int)]
	}).(ContactsContactWebhookOutput)
}

type InstanceTypesInstanceType struct {
	// Maximum number of active sequences.
	ActiveSeries int `pulumi:"activeSeries"`
	// Number of zone.
	AvailabilityZoneReplicas int `pulumi:"availabilityZoneReplicas"`
	// Whether the workspace is exclusive.
	Dedicated bool `pulumi:"dedicated"`
	// The ID of instance type.
	Id string `pulumi:"id"`
	// Maximum write samples per second.
	IngestSamplesPerSecond int `pulumi:"ingestSamplesPerSecond"`
	// Maximum number of concurrent queries.
	QueryConcurrency int `pulumi:"queryConcurrency"`
	// Maximum Query QPS.
	QueryPerSecond int `pulumi:"queryPerSecond"`
	// Data replicas per az.
	ReplicasPerZone int `pulumi:"replicasPerZone"`
	// Maximum data retention time.
	RetentionPeriod string `pulumi:"retentionPeriod"`
	// Maximum scan samples per second.
	ScanSamplesPerSecond int `pulumi:"scanSamplesPerSecond"`
	// Maximum number of scan sequences per second.
	ScanSeriesPerSecond int `pulumi:"scanSeriesPerSecond"`
}

// InstanceTypesInstanceTypeInput is an input type that accepts InstanceTypesInstanceTypeArgs and InstanceTypesInstanceTypeOutput values.
// You can construct a concrete instance of `InstanceTypesInstanceTypeInput` via:
//
//	InstanceTypesInstanceTypeArgs{...}
type InstanceTypesInstanceTypeInput interface {
	pulumi.Input

	ToInstanceTypesInstanceTypeOutput() InstanceTypesInstanceTypeOutput
	ToInstanceTypesInstanceTypeOutputWithContext(context.Context) InstanceTypesInstanceTypeOutput
}

type InstanceTypesInstanceTypeArgs struct {
	// Maximum number of active sequences.
	ActiveSeries pulumi.IntInput `pulumi:"activeSeries"`
	// Number of zone.
	AvailabilityZoneReplicas pulumi.IntInput `pulumi:"availabilityZoneReplicas"`
	// Whether the workspace is exclusive.
	Dedicated pulumi.BoolInput `pulumi:"dedicated"`
	// The ID of instance type.
	Id pulumi.StringInput `pulumi:"id"`
	// Maximum write samples per second.
	IngestSamplesPerSecond pulumi.IntInput `pulumi:"ingestSamplesPerSecond"`
	// Maximum number of concurrent queries.
	QueryConcurrency pulumi.IntInput `pulumi:"queryConcurrency"`
	// Maximum Query QPS.
	QueryPerSecond pulumi.IntInput `pulumi:"queryPerSecond"`
	// Data replicas per az.
	ReplicasPerZone pulumi.IntInput `pulumi:"replicasPerZone"`
	// Maximum data retention time.
	RetentionPeriod pulumi.StringInput `pulumi:"retentionPeriod"`
	// Maximum scan samples per second.
	ScanSamplesPerSecond pulumi.IntInput `pulumi:"scanSamplesPerSecond"`
	// Maximum number of scan sequences per second.
	ScanSeriesPerSecond pulumi.IntInput `pulumi:"scanSeriesPerSecond"`
}

func (InstanceTypesInstanceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypesInstanceType)(nil)).Elem()
}

func (i InstanceTypesInstanceTypeArgs) ToInstanceTypesInstanceTypeOutput() InstanceTypesInstanceTypeOutput {
	return i.ToInstanceTypesInstanceTypeOutputWithContext(context.Background())
}

func (i InstanceTypesInstanceTypeArgs) ToInstanceTypesInstanceTypeOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypesInstanceTypeOutput)
}

// InstanceTypesInstanceTypeArrayInput is an input type that accepts InstanceTypesInstanceTypeArray and InstanceTypesInstanceTypeArrayOutput values.
// You can construct a concrete instance of `InstanceTypesInstanceTypeArrayInput` via:
//
//	InstanceTypesInstanceTypeArray{ InstanceTypesInstanceTypeArgs{...} }
type InstanceTypesInstanceTypeArrayInput interface {
	pulumi.Input

	ToInstanceTypesInstanceTypeArrayOutput() InstanceTypesInstanceTypeArrayOutput
	ToInstanceTypesInstanceTypeArrayOutputWithContext(context.Context) InstanceTypesInstanceTypeArrayOutput
}

type InstanceTypesInstanceTypeArray []InstanceTypesInstanceTypeInput

func (InstanceTypesInstanceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTypesInstanceType)(nil)).Elem()
}

func (i InstanceTypesInstanceTypeArray) ToInstanceTypesInstanceTypeArrayOutput() InstanceTypesInstanceTypeArrayOutput {
	return i.ToInstanceTypesInstanceTypeArrayOutputWithContext(context.Background())
}

func (i InstanceTypesInstanceTypeArray) ToInstanceTypesInstanceTypeArrayOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypesInstanceTypeArrayOutput)
}

type InstanceTypesInstanceTypeOutput struct{ *pulumi.OutputState }

func (InstanceTypesInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypesInstanceType)(nil)).Elem()
}

func (o InstanceTypesInstanceTypeOutput) ToInstanceTypesInstanceTypeOutput() InstanceTypesInstanceTypeOutput {
	return o
}

func (o InstanceTypesInstanceTypeOutput) ToInstanceTypesInstanceTypeOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeOutput {
	return o
}

// Maximum number of active sequences.
func (o InstanceTypesInstanceTypeOutput) ActiveSeries() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) int { return v.ActiveSeries }).(pulumi.IntOutput)
}

// Number of zone.
func (o InstanceTypesInstanceTypeOutput) AvailabilityZoneReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) int { return v.AvailabilityZoneReplicas }).(pulumi.IntOutput)
}

// Whether the workspace is exclusive.
func (o InstanceTypesInstanceTypeOutput) Dedicated() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) bool { return v.Dedicated }).(pulumi.BoolOutput)
}

// The ID of instance type.
func (o InstanceTypesInstanceTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) string { return v.Id }).(pulumi.StringOutput)
}

// Maximum write samples per second.
func (o InstanceTypesInstanceTypeOutput) IngestSamplesPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) int { return v.IngestSamplesPerSecond }).(pulumi.IntOutput)
}

// Maximum number of concurrent queries.
func (o InstanceTypesInstanceTypeOutput) QueryConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) int { return v.QueryConcurrency }).(pulumi.IntOutput)
}

// Maximum Query QPS.
func (o InstanceTypesInstanceTypeOutput) QueryPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) int { return v.QueryPerSecond }).(pulumi.IntOutput)
}

// Data replicas per az.
func (o InstanceTypesInstanceTypeOutput) ReplicasPerZone() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) int { return v.ReplicasPerZone }).(pulumi.IntOutput)
}

// Maximum data retention time.
func (o InstanceTypesInstanceTypeOutput) RetentionPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) string { return v.RetentionPeriod }).(pulumi.StringOutput)
}

// Maximum scan samples per second.
func (o InstanceTypesInstanceTypeOutput) ScanSamplesPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) int { return v.ScanSamplesPerSecond }).(pulumi.IntOutput)
}

// Maximum number of scan sequences per second.
func (o InstanceTypesInstanceTypeOutput) ScanSeriesPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceType) int { return v.ScanSeriesPerSecond }).(pulumi.IntOutput)
}

type InstanceTypesInstanceTypeArrayOutput struct{ *pulumi.OutputState }

func (InstanceTypesInstanceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTypesInstanceType)(nil)).Elem()
}

func (o InstanceTypesInstanceTypeArrayOutput) ToInstanceTypesInstanceTypeArrayOutput() InstanceTypesInstanceTypeArrayOutput {
	return o
}

func (o InstanceTypesInstanceTypeArrayOutput) ToInstanceTypesInstanceTypeArrayOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeArrayOutput {
	return o
}

func (o InstanceTypesInstanceTypeArrayOutput) Index(i pulumi.IntInput) InstanceTypesInstanceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTypesInstanceType {
		return vs[0].([]InstanceTypesInstanceType)[vs[1].(int)]
	}).(InstanceTypesInstanceTypeOutput)
}

type NotifyGroupPoliciesNotifyPolicy struct {
	// The create time of notify group policy.
	CreateTime string `pulumi:"createTime"`
	// The description of notify group policy.
	Description string `pulumi:"description"`
	// The id of the notify group policy.
	Id string `pulumi:"id"`
	// The levels of the notify group policy.
	Levels []NotifyGroupPoliciesNotifyPolicyLevel `pulumi:"levels"`
	// The name of notify group policy.
	Name string `pulumi:"name"`
}

// NotifyGroupPoliciesNotifyPolicyInput is an input type that accepts NotifyGroupPoliciesNotifyPolicyArgs and NotifyGroupPoliciesNotifyPolicyOutput values.
// You can construct a concrete instance of `NotifyGroupPoliciesNotifyPolicyInput` via:
//
//	NotifyGroupPoliciesNotifyPolicyArgs{...}
type NotifyGroupPoliciesNotifyPolicyInput interface {
	pulumi.Input

	ToNotifyGroupPoliciesNotifyPolicyOutput() NotifyGroupPoliciesNotifyPolicyOutput
	ToNotifyGroupPoliciesNotifyPolicyOutputWithContext(context.Context) NotifyGroupPoliciesNotifyPolicyOutput
}

type NotifyGroupPoliciesNotifyPolicyArgs struct {
	// The create time of notify group policy.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of notify group policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the notify group policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The levels of the notify group policy.
	Levels NotifyGroupPoliciesNotifyPolicyLevelArrayInput `pulumi:"levels"`
	// The name of notify group policy.
	Name pulumi.StringInput `pulumi:"name"`
}

func (NotifyGroupPoliciesNotifyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyGroupPoliciesNotifyPolicy)(nil)).Elem()
}

func (i NotifyGroupPoliciesNotifyPolicyArgs) ToNotifyGroupPoliciesNotifyPolicyOutput() NotifyGroupPoliciesNotifyPolicyOutput {
	return i.ToNotifyGroupPoliciesNotifyPolicyOutputWithContext(context.Background())
}

func (i NotifyGroupPoliciesNotifyPolicyArgs) ToNotifyGroupPoliciesNotifyPolicyOutputWithContext(ctx context.Context) NotifyGroupPoliciesNotifyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyGroupPoliciesNotifyPolicyOutput)
}

// NotifyGroupPoliciesNotifyPolicyArrayInput is an input type that accepts NotifyGroupPoliciesNotifyPolicyArray and NotifyGroupPoliciesNotifyPolicyArrayOutput values.
// You can construct a concrete instance of `NotifyGroupPoliciesNotifyPolicyArrayInput` via:
//
//	NotifyGroupPoliciesNotifyPolicyArray{ NotifyGroupPoliciesNotifyPolicyArgs{...} }
type NotifyGroupPoliciesNotifyPolicyArrayInput interface {
	pulumi.Input

	ToNotifyGroupPoliciesNotifyPolicyArrayOutput() NotifyGroupPoliciesNotifyPolicyArrayOutput
	ToNotifyGroupPoliciesNotifyPolicyArrayOutputWithContext(context.Context) NotifyGroupPoliciesNotifyPolicyArrayOutput
}

type NotifyGroupPoliciesNotifyPolicyArray []NotifyGroupPoliciesNotifyPolicyInput

func (NotifyGroupPoliciesNotifyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyGroupPoliciesNotifyPolicy)(nil)).Elem()
}

func (i NotifyGroupPoliciesNotifyPolicyArray) ToNotifyGroupPoliciesNotifyPolicyArrayOutput() NotifyGroupPoliciesNotifyPolicyArrayOutput {
	return i.ToNotifyGroupPoliciesNotifyPolicyArrayOutputWithContext(context.Background())
}

func (i NotifyGroupPoliciesNotifyPolicyArray) ToNotifyGroupPoliciesNotifyPolicyArrayOutputWithContext(ctx context.Context) NotifyGroupPoliciesNotifyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyGroupPoliciesNotifyPolicyArrayOutput)
}

type NotifyGroupPoliciesNotifyPolicyOutput struct{ *pulumi.OutputState }

func (NotifyGroupPoliciesNotifyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyGroupPoliciesNotifyPolicy)(nil)).Elem()
}

func (o NotifyGroupPoliciesNotifyPolicyOutput) ToNotifyGroupPoliciesNotifyPolicyOutput() NotifyGroupPoliciesNotifyPolicyOutput {
	return o
}

func (o NotifyGroupPoliciesNotifyPolicyOutput) ToNotifyGroupPoliciesNotifyPolicyOutputWithContext(ctx context.Context) NotifyGroupPoliciesNotifyPolicyOutput {
	return o
}

// The create time of notify group policy.
func (o NotifyGroupPoliciesNotifyPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of notify group policy.
func (o NotifyGroupPoliciesNotifyPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the notify group policy.
func (o NotifyGroupPoliciesNotifyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The levels of the notify group policy.
func (o NotifyGroupPoliciesNotifyPolicyOutput) Levels() NotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicy) []NotifyGroupPoliciesNotifyPolicyLevel { return v.Levels }).(NotifyGroupPoliciesNotifyPolicyLevelArrayOutput)
}

// The name of notify group policy.
func (o NotifyGroupPoliciesNotifyPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type NotifyGroupPoliciesNotifyPolicyArrayOutput struct{ *pulumi.OutputState }

func (NotifyGroupPoliciesNotifyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyGroupPoliciesNotifyPolicy)(nil)).Elem()
}

func (o NotifyGroupPoliciesNotifyPolicyArrayOutput) ToNotifyGroupPoliciesNotifyPolicyArrayOutput() NotifyGroupPoliciesNotifyPolicyArrayOutput {
	return o
}

func (o NotifyGroupPoliciesNotifyPolicyArrayOutput) ToNotifyGroupPoliciesNotifyPolicyArrayOutputWithContext(ctx context.Context) NotifyGroupPoliciesNotifyPolicyArrayOutput {
	return o
}

func (o NotifyGroupPoliciesNotifyPolicyArrayOutput) Index(i pulumi.IntInput) NotifyGroupPoliciesNotifyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyGroupPoliciesNotifyPolicy {
		return vs[0].([]NotifyGroupPoliciesNotifyPolicy)[vs[1].(int)]
	}).(NotifyGroupPoliciesNotifyPolicyOutput)
}

type NotifyGroupPoliciesNotifyPolicyLevel struct {
	// The aggregate dimension.
	GroupBies []string `pulumi:"groupBies"`
	// The aggregation cycle.
	GroupInterval string `pulumi:"groupInterval"`
	// The wait time.
	GroupWait string `pulumi:"groupWait"`
	// The level of the policy.
	Level string `pulumi:"level"`
	// The notification cycle.
	RepeatInterval string `pulumi:"repeatInterval"`
}

// NotifyGroupPoliciesNotifyPolicyLevelInput is an input type that accepts NotifyGroupPoliciesNotifyPolicyLevelArgs and NotifyGroupPoliciesNotifyPolicyLevelOutput values.
// You can construct a concrete instance of `NotifyGroupPoliciesNotifyPolicyLevelInput` via:
//
//	NotifyGroupPoliciesNotifyPolicyLevelArgs{...}
type NotifyGroupPoliciesNotifyPolicyLevelInput interface {
	pulumi.Input

	ToNotifyGroupPoliciesNotifyPolicyLevelOutput() NotifyGroupPoliciesNotifyPolicyLevelOutput
	ToNotifyGroupPoliciesNotifyPolicyLevelOutputWithContext(context.Context) NotifyGroupPoliciesNotifyPolicyLevelOutput
}

type NotifyGroupPoliciesNotifyPolicyLevelArgs struct {
	// The aggregate dimension.
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// The aggregation cycle.
	GroupInterval pulumi.StringInput `pulumi:"groupInterval"`
	// The wait time.
	GroupWait pulumi.StringInput `pulumi:"groupWait"`
	// The level of the policy.
	Level pulumi.StringInput `pulumi:"level"`
	// The notification cycle.
	RepeatInterval pulumi.StringInput `pulumi:"repeatInterval"`
}

func (NotifyGroupPoliciesNotifyPolicyLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyGroupPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (i NotifyGroupPoliciesNotifyPolicyLevelArgs) ToNotifyGroupPoliciesNotifyPolicyLevelOutput() NotifyGroupPoliciesNotifyPolicyLevelOutput {
	return i.ToNotifyGroupPoliciesNotifyPolicyLevelOutputWithContext(context.Background())
}

func (i NotifyGroupPoliciesNotifyPolicyLevelArgs) ToNotifyGroupPoliciesNotifyPolicyLevelOutputWithContext(ctx context.Context) NotifyGroupPoliciesNotifyPolicyLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyGroupPoliciesNotifyPolicyLevelOutput)
}

// NotifyGroupPoliciesNotifyPolicyLevelArrayInput is an input type that accepts NotifyGroupPoliciesNotifyPolicyLevelArray and NotifyGroupPoliciesNotifyPolicyLevelArrayOutput values.
// You can construct a concrete instance of `NotifyGroupPoliciesNotifyPolicyLevelArrayInput` via:
//
//	NotifyGroupPoliciesNotifyPolicyLevelArray{ NotifyGroupPoliciesNotifyPolicyLevelArgs{...} }
type NotifyGroupPoliciesNotifyPolicyLevelArrayInput interface {
	pulumi.Input

	ToNotifyGroupPoliciesNotifyPolicyLevelArrayOutput() NotifyGroupPoliciesNotifyPolicyLevelArrayOutput
	ToNotifyGroupPoliciesNotifyPolicyLevelArrayOutputWithContext(context.Context) NotifyGroupPoliciesNotifyPolicyLevelArrayOutput
}

type NotifyGroupPoliciesNotifyPolicyLevelArray []NotifyGroupPoliciesNotifyPolicyLevelInput

func (NotifyGroupPoliciesNotifyPolicyLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyGroupPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (i NotifyGroupPoliciesNotifyPolicyLevelArray) ToNotifyGroupPoliciesNotifyPolicyLevelArrayOutput() NotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return i.ToNotifyGroupPoliciesNotifyPolicyLevelArrayOutputWithContext(context.Background())
}

func (i NotifyGroupPoliciesNotifyPolicyLevelArray) ToNotifyGroupPoliciesNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) NotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyGroupPoliciesNotifyPolicyLevelArrayOutput)
}

type NotifyGroupPoliciesNotifyPolicyLevelOutput struct{ *pulumi.OutputState }

func (NotifyGroupPoliciesNotifyPolicyLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyGroupPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (o NotifyGroupPoliciesNotifyPolicyLevelOutput) ToNotifyGroupPoliciesNotifyPolicyLevelOutput() NotifyGroupPoliciesNotifyPolicyLevelOutput {
	return o
}

func (o NotifyGroupPoliciesNotifyPolicyLevelOutput) ToNotifyGroupPoliciesNotifyPolicyLevelOutputWithContext(ctx context.Context) NotifyGroupPoliciesNotifyPolicyLevelOutput {
	return o
}

// The aggregate dimension.
func (o NotifyGroupPoliciesNotifyPolicyLevelOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicyLevel) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// The aggregation cycle.
func (o NotifyGroupPoliciesNotifyPolicyLevelOutput) GroupInterval() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicyLevel) string { return v.GroupInterval }).(pulumi.StringOutput)
}

// The wait time.
func (o NotifyGroupPoliciesNotifyPolicyLevelOutput) GroupWait() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicyLevel) string { return v.GroupWait }).(pulumi.StringOutput)
}

// The level of the policy.
func (o NotifyGroupPoliciesNotifyPolicyLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicyLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The notification cycle.
func (o NotifyGroupPoliciesNotifyPolicyLevelOutput) RepeatInterval() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPoliciesNotifyPolicyLevel) string { return v.RepeatInterval }).(pulumi.StringOutput)
}

type NotifyGroupPoliciesNotifyPolicyLevelArrayOutput struct{ *pulumi.OutputState }

func (NotifyGroupPoliciesNotifyPolicyLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyGroupPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (o NotifyGroupPoliciesNotifyPolicyLevelArrayOutput) ToNotifyGroupPoliciesNotifyPolicyLevelArrayOutput() NotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return o
}

func (o NotifyGroupPoliciesNotifyPolicyLevelArrayOutput) ToNotifyGroupPoliciesNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) NotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return o
}

func (o NotifyGroupPoliciesNotifyPolicyLevelArrayOutput) Index(i pulumi.IntInput) NotifyGroupPoliciesNotifyPolicyLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyGroupPoliciesNotifyPolicyLevel {
		return vs[0].([]NotifyGroupPoliciesNotifyPolicyLevel)[vs[1].(int)]
	}).(NotifyGroupPoliciesNotifyPolicyLevelOutput)
}

type NotifyGroupPolicyLevel struct {
	// The aggregate dimension, the value can be `__rule__`.
	GroupBies []string `pulumi:"groupBies"`
	// The aggregation cycle. Integer form, unit is second.
	GroupInterval string `pulumi:"groupInterval"`
	// The wait time. Integer form, unit is second.
	GroupWait string `pulumi:"groupWait"`
	// The level of the policy, the value can be one of the following: `P0`, `P1`, `P2`.
	Level string `pulumi:"level"`
	// The notification cycle. Integer form, unit is second.
	RepeatInterval string `pulumi:"repeatInterval"`
}

// NotifyGroupPolicyLevelInput is an input type that accepts NotifyGroupPolicyLevelArgs and NotifyGroupPolicyLevelOutput values.
// You can construct a concrete instance of `NotifyGroupPolicyLevelInput` via:
//
//	NotifyGroupPolicyLevelArgs{...}
type NotifyGroupPolicyLevelInput interface {
	pulumi.Input

	ToNotifyGroupPolicyLevelOutput() NotifyGroupPolicyLevelOutput
	ToNotifyGroupPolicyLevelOutputWithContext(context.Context) NotifyGroupPolicyLevelOutput
}

type NotifyGroupPolicyLevelArgs struct {
	// The aggregate dimension, the value can be `__rule__`.
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// The aggregation cycle. Integer form, unit is second.
	GroupInterval pulumi.StringInput `pulumi:"groupInterval"`
	// The wait time. Integer form, unit is second.
	GroupWait pulumi.StringInput `pulumi:"groupWait"`
	// The level of the policy, the value can be one of the following: `P0`, `P1`, `P2`.
	Level pulumi.StringInput `pulumi:"level"`
	// The notification cycle. Integer form, unit is second.
	RepeatInterval pulumi.StringInput `pulumi:"repeatInterval"`
}

func (NotifyGroupPolicyLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyGroupPolicyLevel)(nil)).Elem()
}

func (i NotifyGroupPolicyLevelArgs) ToNotifyGroupPolicyLevelOutput() NotifyGroupPolicyLevelOutput {
	return i.ToNotifyGroupPolicyLevelOutputWithContext(context.Background())
}

func (i NotifyGroupPolicyLevelArgs) ToNotifyGroupPolicyLevelOutputWithContext(ctx context.Context) NotifyGroupPolicyLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyGroupPolicyLevelOutput)
}

// NotifyGroupPolicyLevelArrayInput is an input type that accepts NotifyGroupPolicyLevelArray and NotifyGroupPolicyLevelArrayOutput values.
// You can construct a concrete instance of `NotifyGroupPolicyLevelArrayInput` via:
//
//	NotifyGroupPolicyLevelArray{ NotifyGroupPolicyLevelArgs{...} }
type NotifyGroupPolicyLevelArrayInput interface {
	pulumi.Input

	ToNotifyGroupPolicyLevelArrayOutput() NotifyGroupPolicyLevelArrayOutput
	ToNotifyGroupPolicyLevelArrayOutputWithContext(context.Context) NotifyGroupPolicyLevelArrayOutput
}

type NotifyGroupPolicyLevelArray []NotifyGroupPolicyLevelInput

func (NotifyGroupPolicyLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyGroupPolicyLevel)(nil)).Elem()
}

func (i NotifyGroupPolicyLevelArray) ToNotifyGroupPolicyLevelArrayOutput() NotifyGroupPolicyLevelArrayOutput {
	return i.ToNotifyGroupPolicyLevelArrayOutputWithContext(context.Background())
}

func (i NotifyGroupPolicyLevelArray) ToNotifyGroupPolicyLevelArrayOutputWithContext(ctx context.Context) NotifyGroupPolicyLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyGroupPolicyLevelArrayOutput)
}

type NotifyGroupPolicyLevelOutput struct{ *pulumi.OutputState }

func (NotifyGroupPolicyLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyGroupPolicyLevel)(nil)).Elem()
}

func (o NotifyGroupPolicyLevelOutput) ToNotifyGroupPolicyLevelOutput() NotifyGroupPolicyLevelOutput {
	return o
}

func (o NotifyGroupPolicyLevelOutput) ToNotifyGroupPolicyLevelOutputWithContext(ctx context.Context) NotifyGroupPolicyLevelOutput {
	return o
}

// The aggregate dimension, the value can be `__rule__`.
func (o NotifyGroupPolicyLevelOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyGroupPolicyLevel) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// The aggregation cycle. Integer form, unit is second.
func (o NotifyGroupPolicyLevelOutput) GroupInterval() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPolicyLevel) string { return v.GroupInterval }).(pulumi.StringOutput)
}

// The wait time. Integer form, unit is second.
func (o NotifyGroupPolicyLevelOutput) GroupWait() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPolicyLevel) string { return v.GroupWait }).(pulumi.StringOutput)
}

// The level of the policy, the value can be one of the following: `P0`, `P1`, `P2`.
func (o NotifyGroupPolicyLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPolicyLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The notification cycle. Integer form, unit is second.
func (o NotifyGroupPolicyLevelOutput) RepeatInterval() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyGroupPolicyLevel) string { return v.RepeatInterval }).(pulumi.StringOutput)
}

type NotifyGroupPolicyLevelArrayOutput struct{ *pulumi.OutputState }

func (NotifyGroupPolicyLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyGroupPolicyLevel)(nil)).Elem()
}

func (o NotifyGroupPolicyLevelArrayOutput) ToNotifyGroupPolicyLevelArrayOutput() NotifyGroupPolicyLevelArrayOutput {
	return o
}

func (o NotifyGroupPolicyLevelArrayOutput) ToNotifyGroupPolicyLevelArrayOutputWithContext(ctx context.Context) NotifyGroupPolicyLevelArrayOutput {
	return o
}

func (o NotifyGroupPolicyLevelArrayOutput) Index(i pulumi.IntInput) NotifyGroupPolicyLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyGroupPolicyLevel {
		return vs[0].([]NotifyGroupPolicyLevel)[vs[1].(int)]
	}).(NotifyGroupPolicyLevelOutput)
}

type NotifyPoliciesNotifyPolicy struct {
	// The channel notify template for the alarm notification policy.
	ChannelNotifyTemplateIds []string `pulumi:"channelNotifyTemplateIds"`
	// The create time of notify policy.
	CreateTime string `pulumi:"createTime"`
	// The description of notify policy.
	Description string `pulumi:"description"`
	// The id of the notify policy.
	Id string `pulumi:"id"`
	// The levels of the notify policy.
	Levels []NotifyPoliciesNotifyPolicyLevel `pulumi:"levels"`
	// The name of notify policy.
	Name string `pulumi:"name"`
}

// NotifyPoliciesNotifyPolicyInput is an input type that accepts NotifyPoliciesNotifyPolicyArgs and NotifyPoliciesNotifyPolicyOutput values.
// You can construct a concrete instance of `NotifyPoliciesNotifyPolicyInput` via:
//
//	NotifyPoliciesNotifyPolicyArgs{...}
type NotifyPoliciesNotifyPolicyInput interface {
	pulumi.Input

	ToNotifyPoliciesNotifyPolicyOutput() NotifyPoliciesNotifyPolicyOutput
	ToNotifyPoliciesNotifyPolicyOutputWithContext(context.Context) NotifyPoliciesNotifyPolicyOutput
}

type NotifyPoliciesNotifyPolicyArgs struct {
	// The channel notify template for the alarm notification policy.
	ChannelNotifyTemplateIds pulumi.StringArrayInput `pulumi:"channelNotifyTemplateIds"`
	// The create time of notify policy.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of notify policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the notify policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The levels of the notify policy.
	Levels NotifyPoliciesNotifyPolicyLevelArrayInput `pulumi:"levels"`
	// The name of notify policy.
	Name pulumi.StringInput `pulumi:"name"`
}

func (NotifyPoliciesNotifyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyPoliciesNotifyPolicy)(nil)).Elem()
}

func (i NotifyPoliciesNotifyPolicyArgs) ToNotifyPoliciesNotifyPolicyOutput() NotifyPoliciesNotifyPolicyOutput {
	return i.ToNotifyPoliciesNotifyPolicyOutputWithContext(context.Background())
}

func (i NotifyPoliciesNotifyPolicyArgs) ToNotifyPoliciesNotifyPolicyOutputWithContext(ctx context.Context) NotifyPoliciesNotifyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyPoliciesNotifyPolicyOutput)
}

// NotifyPoliciesNotifyPolicyArrayInput is an input type that accepts NotifyPoliciesNotifyPolicyArray and NotifyPoliciesNotifyPolicyArrayOutput values.
// You can construct a concrete instance of `NotifyPoliciesNotifyPolicyArrayInput` via:
//
//	NotifyPoliciesNotifyPolicyArray{ NotifyPoliciesNotifyPolicyArgs{...} }
type NotifyPoliciesNotifyPolicyArrayInput interface {
	pulumi.Input

	ToNotifyPoliciesNotifyPolicyArrayOutput() NotifyPoliciesNotifyPolicyArrayOutput
	ToNotifyPoliciesNotifyPolicyArrayOutputWithContext(context.Context) NotifyPoliciesNotifyPolicyArrayOutput
}

type NotifyPoliciesNotifyPolicyArray []NotifyPoliciesNotifyPolicyInput

func (NotifyPoliciesNotifyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyPoliciesNotifyPolicy)(nil)).Elem()
}

func (i NotifyPoliciesNotifyPolicyArray) ToNotifyPoliciesNotifyPolicyArrayOutput() NotifyPoliciesNotifyPolicyArrayOutput {
	return i.ToNotifyPoliciesNotifyPolicyArrayOutputWithContext(context.Background())
}

func (i NotifyPoliciesNotifyPolicyArray) ToNotifyPoliciesNotifyPolicyArrayOutputWithContext(ctx context.Context) NotifyPoliciesNotifyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyPoliciesNotifyPolicyArrayOutput)
}

type NotifyPoliciesNotifyPolicyOutput struct{ *pulumi.OutputState }

func (NotifyPoliciesNotifyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyPoliciesNotifyPolicy)(nil)).Elem()
}

func (o NotifyPoliciesNotifyPolicyOutput) ToNotifyPoliciesNotifyPolicyOutput() NotifyPoliciesNotifyPolicyOutput {
	return o
}

func (o NotifyPoliciesNotifyPolicyOutput) ToNotifyPoliciesNotifyPolicyOutputWithContext(ctx context.Context) NotifyPoliciesNotifyPolicyOutput {
	return o
}

// The channel notify template for the alarm notification policy.
func (o NotifyPoliciesNotifyPolicyOutput) ChannelNotifyTemplateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicy) []string { return v.ChannelNotifyTemplateIds }).(pulumi.StringArrayOutput)
}

// The create time of notify policy.
func (o NotifyPoliciesNotifyPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of notify policy.
func (o NotifyPoliciesNotifyPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the notify policy.
func (o NotifyPoliciesNotifyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The levels of the notify policy.
func (o NotifyPoliciesNotifyPolicyOutput) Levels() NotifyPoliciesNotifyPolicyLevelArrayOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicy) []NotifyPoliciesNotifyPolicyLevel { return v.Levels }).(NotifyPoliciesNotifyPolicyLevelArrayOutput)
}

// The name of notify policy.
func (o NotifyPoliciesNotifyPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type NotifyPoliciesNotifyPolicyArrayOutput struct{ *pulumi.OutputState }

func (NotifyPoliciesNotifyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyPoliciesNotifyPolicy)(nil)).Elem()
}

func (o NotifyPoliciesNotifyPolicyArrayOutput) ToNotifyPoliciesNotifyPolicyArrayOutput() NotifyPoliciesNotifyPolicyArrayOutput {
	return o
}

func (o NotifyPoliciesNotifyPolicyArrayOutput) ToNotifyPoliciesNotifyPolicyArrayOutputWithContext(ctx context.Context) NotifyPoliciesNotifyPolicyArrayOutput {
	return o
}

func (o NotifyPoliciesNotifyPolicyArrayOutput) Index(i pulumi.IntInput) NotifyPoliciesNotifyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyPoliciesNotifyPolicy {
		return vs[0].([]NotifyPoliciesNotifyPolicy)[vs[1].(int)]
	}).(NotifyPoliciesNotifyPolicyOutput)
}

type NotifyPoliciesNotifyPolicyLevel struct {
	// The alarm notification method of the alarm notification policy.
	Channels []string `pulumi:"channels"`
	// The contact group for the alarm notification policy.
	ContactGroupIds []string `pulumi:"contactGroupIds"`
	// The level of the policy.
	Level string `pulumi:"level"`
	// The resolved alarm notification method of the alarm notification policy.
	ResolvedChannels []string `pulumi:"resolvedChannels"`
}

// NotifyPoliciesNotifyPolicyLevelInput is an input type that accepts NotifyPoliciesNotifyPolicyLevelArgs and NotifyPoliciesNotifyPolicyLevelOutput values.
// You can construct a concrete instance of `NotifyPoliciesNotifyPolicyLevelInput` via:
//
//	NotifyPoliciesNotifyPolicyLevelArgs{...}
type NotifyPoliciesNotifyPolicyLevelInput interface {
	pulumi.Input

	ToNotifyPoliciesNotifyPolicyLevelOutput() NotifyPoliciesNotifyPolicyLevelOutput
	ToNotifyPoliciesNotifyPolicyLevelOutputWithContext(context.Context) NotifyPoliciesNotifyPolicyLevelOutput
}

type NotifyPoliciesNotifyPolicyLevelArgs struct {
	// The alarm notification method of the alarm notification policy.
	Channels pulumi.StringArrayInput `pulumi:"channels"`
	// The contact group for the alarm notification policy.
	ContactGroupIds pulumi.StringArrayInput `pulumi:"contactGroupIds"`
	// The level of the policy.
	Level pulumi.StringInput `pulumi:"level"`
	// The resolved alarm notification method of the alarm notification policy.
	ResolvedChannels pulumi.StringArrayInput `pulumi:"resolvedChannels"`
}

func (NotifyPoliciesNotifyPolicyLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (i NotifyPoliciesNotifyPolicyLevelArgs) ToNotifyPoliciesNotifyPolicyLevelOutput() NotifyPoliciesNotifyPolicyLevelOutput {
	return i.ToNotifyPoliciesNotifyPolicyLevelOutputWithContext(context.Background())
}

func (i NotifyPoliciesNotifyPolicyLevelArgs) ToNotifyPoliciesNotifyPolicyLevelOutputWithContext(ctx context.Context) NotifyPoliciesNotifyPolicyLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyPoliciesNotifyPolicyLevelOutput)
}

// NotifyPoliciesNotifyPolicyLevelArrayInput is an input type that accepts NotifyPoliciesNotifyPolicyLevelArray and NotifyPoliciesNotifyPolicyLevelArrayOutput values.
// You can construct a concrete instance of `NotifyPoliciesNotifyPolicyLevelArrayInput` via:
//
//	NotifyPoliciesNotifyPolicyLevelArray{ NotifyPoliciesNotifyPolicyLevelArgs{...} }
type NotifyPoliciesNotifyPolicyLevelArrayInput interface {
	pulumi.Input

	ToNotifyPoliciesNotifyPolicyLevelArrayOutput() NotifyPoliciesNotifyPolicyLevelArrayOutput
	ToNotifyPoliciesNotifyPolicyLevelArrayOutputWithContext(context.Context) NotifyPoliciesNotifyPolicyLevelArrayOutput
}

type NotifyPoliciesNotifyPolicyLevelArray []NotifyPoliciesNotifyPolicyLevelInput

func (NotifyPoliciesNotifyPolicyLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (i NotifyPoliciesNotifyPolicyLevelArray) ToNotifyPoliciesNotifyPolicyLevelArrayOutput() NotifyPoliciesNotifyPolicyLevelArrayOutput {
	return i.ToNotifyPoliciesNotifyPolicyLevelArrayOutputWithContext(context.Background())
}

func (i NotifyPoliciesNotifyPolicyLevelArray) ToNotifyPoliciesNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) NotifyPoliciesNotifyPolicyLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyPoliciesNotifyPolicyLevelArrayOutput)
}

type NotifyPoliciesNotifyPolicyLevelOutput struct{ *pulumi.OutputState }

func (NotifyPoliciesNotifyPolicyLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (o NotifyPoliciesNotifyPolicyLevelOutput) ToNotifyPoliciesNotifyPolicyLevelOutput() NotifyPoliciesNotifyPolicyLevelOutput {
	return o
}

func (o NotifyPoliciesNotifyPolicyLevelOutput) ToNotifyPoliciesNotifyPolicyLevelOutputWithContext(ctx context.Context) NotifyPoliciesNotifyPolicyLevelOutput {
	return o
}

// The alarm notification method of the alarm notification policy.
func (o NotifyPoliciesNotifyPolicyLevelOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicyLevel) []string { return v.Channels }).(pulumi.StringArrayOutput)
}

// The contact group for the alarm notification policy.
func (o NotifyPoliciesNotifyPolicyLevelOutput) ContactGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicyLevel) []string { return v.ContactGroupIds }).(pulumi.StringArrayOutput)
}

// The level of the policy.
func (o NotifyPoliciesNotifyPolicyLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicyLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The resolved alarm notification method of the alarm notification policy.
func (o NotifyPoliciesNotifyPolicyLevelOutput) ResolvedChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyPoliciesNotifyPolicyLevel) []string { return v.ResolvedChannels }).(pulumi.StringArrayOutput)
}

type NotifyPoliciesNotifyPolicyLevelArrayOutput struct{ *pulumi.OutputState }

func (NotifyPoliciesNotifyPolicyLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (o NotifyPoliciesNotifyPolicyLevelArrayOutput) ToNotifyPoliciesNotifyPolicyLevelArrayOutput() NotifyPoliciesNotifyPolicyLevelArrayOutput {
	return o
}

func (o NotifyPoliciesNotifyPolicyLevelArrayOutput) ToNotifyPoliciesNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) NotifyPoliciesNotifyPolicyLevelArrayOutput {
	return o
}

func (o NotifyPoliciesNotifyPolicyLevelArrayOutput) Index(i pulumi.IntInput) NotifyPoliciesNotifyPolicyLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyPoliciesNotifyPolicyLevel {
		return vs[0].([]NotifyPoliciesNotifyPolicyLevel)[vs[1].(int)]
	}).(NotifyPoliciesNotifyPolicyLevelOutput)
}

type NotifyPolicyLevel struct {
	// The alarm notification method of the alarm notification policy, the optional value can be `Email`, `Webhook`, `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
	Channels []string `pulumi:"channels"`
	// The contact group for the alarm notification policy.
	ContactGroupIds []string `pulumi:"contactGroupIds"`
	// The level of the policy, the value can be one of the following: `P0`, `P1`, `P2`.
	Level string `pulumi:"level"`
	// The resolved alarm notification method of the alarm notification policy, the optional value can be `Email`, `Webhook`, `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
	ResolvedChannels []string `pulumi:"resolvedChannels"`
}

// NotifyPolicyLevelInput is an input type that accepts NotifyPolicyLevelArgs and NotifyPolicyLevelOutput values.
// You can construct a concrete instance of `NotifyPolicyLevelInput` via:
//
//	NotifyPolicyLevelArgs{...}
type NotifyPolicyLevelInput interface {
	pulumi.Input

	ToNotifyPolicyLevelOutput() NotifyPolicyLevelOutput
	ToNotifyPolicyLevelOutputWithContext(context.Context) NotifyPolicyLevelOutput
}

type NotifyPolicyLevelArgs struct {
	// The alarm notification method of the alarm notification policy, the optional value can be `Email`, `Webhook`, `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
	Channels pulumi.StringArrayInput `pulumi:"channels"`
	// The contact group for the alarm notification policy.
	ContactGroupIds pulumi.StringArrayInput `pulumi:"contactGroupIds"`
	// The level of the policy, the value can be one of the following: `P0`, `P1`, `P2`.
	Level pulumi.StringInput `pulumi:"level"`
	// The resolved alarm notification method of the alarm notification policy, the optional value can be `Email`, `Webhook`, `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
	ResolvedChannels pulumi.StringArrayInput `pulumi:"resolvedChannels"`
}

func (NotifyPolicyLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyPolicyLevel)(nil)).Elem()
}

func (i NotifyPolicyLevelArgs) ToNotifyPolicyLevelOutput() NotifyPolicyLevelOutput {
	return i.ToNotifyPolicyLevelOutputWithContext(context.Background())
}

func (i NotifyPolicyLevelArgs) ToNotifyPolicyLevelOutputWithContext(ctx context.Context) NotifyPolicyLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyPolicyLevelOutput)
}

// NotifyPolicyLevelArrayInput is an input type that accepts NotifyPolicyLevelArray and NotifyPolicyLevelArrayOutput values.
// You can construct a concrete instance of `NotifyPolicyLevelArrayInput` via:
//
//	NotifyPolicyLevelArray{ NotifyPolicyLevelArgs{...} }
type NotifyPolicyLevelArrayInput interface {
	pulumi.Input

	ToNotifyPolicyLevelArrayOutput() NotifyPolicyLevelArrayOutput
	ToNotifyPolicyLevelArrayOutputWithContext(context.Context) NotifyPolicyLevelArrayOutput
}

type NotifyPolicyLevelArray []NotifyPolicyLevelInput

func (NotifyPolicyLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyPolicyLevel)(nil)).Elem()
}

func (i NotifyPolicyLevelArray) ToNotifyPolicyLevelArrayOutput() NotifyPolicyLevelArrayOutput {
	return i.ToNotifyPolicyLevelArrayOutputWithContext(context.Background())
}

func (i NotifyPolicyLevelArray) ToNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) NotifyPolicyLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyPolicyLevelArrayOutput)
}

type NotifyPolicyLevelOutput struct{ *pulumi.OutputState }

func (NotifyPolicyLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyPolicyLevel)(nil)).Elem()
}

func (o NotifyPolicyLevelOutput) ToNotifyPolicyLevelOutput() NotifyPolicyLevelOutput {
	return o
}

func (o NotifyPolicyLevelOutput) ToNotifyPolicyLevelOutputWithContext(ctx context.Context) NotifyPolicyLevelOutput {
	return o
}

// The alarm notification method of the alarm notification policy, the optional value can be `Email`, `Webhook`, `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
func (o NotifyPolicyLevelOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyPolicyLevel) []string { return v.Channels }).(pulumi.StringArrayOutput)
}

// The contact group for the alarm notification policy.
func (o NotifyPolicyLevelOutput) ContactGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyPolicyLevel) []string { return v.ContactGroupIds }).(pulumi.StringArrayOutput)
}

// The level of the policy, the value can be one of the following: `P0`, `P1`, `P2`.
func (o NotifyPolicyLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyPolicyLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The resolved alarm notification method of the alarm notification policy, the optional value can be `Email`, `Webhook`, `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
func (o NotifyPolicyLevelOutput) ResolvedChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotifyPolicyLevel) []string { return v.ResolvedChannels }).(pulumi.StringArrayOutput)
}

type NotifyPolicyLevelArrayOutput struct{ *pulumi.OutputState }

func (NotifyPolicyLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyPolicyLevel)(nil)).Elem()
}

func (o NotifyPolicyLevelArrayOutput) ToNotifyPolicyLevelArrayOutput() NotifyPolicyLevelArrayOutput {
	return o
}

func (o NotifyPolicyLevelArrayOutput) ToNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) NotifyPolicyLevelArrayOutput {
	return o
}

func (o NotifyPolicyLevelArrayOutput) Index(i pulumi.IntInput) NotifyPolicyLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyPolicyLevel {
		return vs[0].([]NotifyPolicyLevel)[vs[1].(int)]
	}).(NotifyPolicyLevelOutput)
}

type NotifyTemplateActive struct {
	// The content of notify template.
	Content string `pulumi:"content"`
	// The title of notify template.
	Title string `pulumi:"title"`
}

// NotifyTemplateActiveInput is an input type that accepts NotifyTemplateActiveArgs and NotifyTemplateActiveOutput values.
// You can construct a concrete instance of `NotifyTemplateActiveInput` via:
//
//	NotifyTemplateActiveArgs{...}
type NotifyTemplateActiveInput interface {
	pulumi.Input

	ToNotifyTemplateActiveOutput() NotifyTemplateActiveOutput
	ToNotifyTemplateActiveOutputWithContext(context.Context) NotifyTemplateActiveOutput
}

type NotifyTemplateActiveArgs struct {
	// The content of notify template.
	Content pulumi.StringInput `pulumi:"content"`
	// The title of notify template.
	Title pulumi.StringInput `pulumi:"title"`
}

func (NotifyTemplateActiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplateActive)(nil)).Elem()
}

func (i NotifyTemplateActiveArgs) ToNotifyTemplateActiveOutput() NotifyTemplateActiveOutput {
	return i.ToNotifyTemplateActiveOutputWithContext(context.Background())
}

func (i NotifyTemplateActiveArgs) ToNotifyTemplateActiveOutputWithContext(ctx context.Context) NotifyTemplateActiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplateActiveOutput)
}

func (i NotifyTemplateActiveArgs) ToNotifyTemplateActivePtrOutput() NotifyTemplateActivePtrOutput {
	return i.ToNotifyTemplateActivePtrOutputWithContext(context.Background())
}

func (i NotifyTemplateActiveArgs) ToNotifyTemplateActivePtrOutputWithContext(ctx context.Context) NotifyTemplateActivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplateActiveOutput).ToNotifyTemplateActivePtrOutputWithContext(ctx)
}

// NotifyTemplateActivePtrInput is an input type that accepts NotifyTemplateActiveArgs, NotifyTemplateActivePtr and NotifyTemplateActivePtrOutput values.
// You can construct a concrete instance of `NotifyTemplateActivePtrInput` via:
//
//	        NotifyTemplateActiveArgs{...}
//
//	or:
//
//	        nil
type NotifyTemplateActivePtrInput interface {
	pulumi.Input

	ToNotifyTemplateActivePtrOutput() NotifyTemplateActivePtrOutput
	ToNotifyTemplateActivePtrOutputWithContext(context.Context) NotifyTemplateActivePtrOutput
}

type notifyTemplateActivePtrType NotifyTemplateActiveArgs

func NotifyTemplateActivePtr(v *NotifyTemplateActiveArgs) NotifyTemplateActivePtrInput {
	return (*notifyTemplateActivePtrType)(v)
}

func (*notifyTemplateActivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifyTemplateActive)(nil)).Elem()
}

func (i *notifyTemplateActivePtrType) ToNotifyTemplateActivePtrOutput() NotifyTemplateActivePtrOutput {
	return i.ToNotifyTemplateActivePtrOutputWithContext(context.Background())
}

func (i *notifyTemplateActivePtrType) ToNotifyTemplateActivePtrOutputWithContext(ctx context.Context) NotifyTemplateActivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplateActivePtrOutput)
}

type NotifyTemplateActiveOutput struct{ *pulumi.OutputState }

func (NotifyTemplateActiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplateActive)(nil)).Elem()
}

func (o NotifyTemplateActiveOutput) ToNotifyTemplateActiveOutput() NotifyTemplateActiveOutput {
	return o
}

func (o NotifyTemplateActiveOutput) ToNotifyTemplateActiveOutputWithContext(ctx context.Context) NotifyTemplateActiveOutput {
	return o
}

func (o NotifyTemplateActiveOutput) ToNotifyTemplateActivePtrOutput() NotifyTemplateActivePtrOutput {
	return o.ToNotifyTemplateActivePtrOutputWithContext(context.Background())
}

func (o NotifyTemplateActiveOutput) ToNotifyTemplateActivePtrOutputWithContext(ctx context.Context) NotifyTemplateActivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifyTemplateActive) *NotifyTemplateActive {
		return &v
	}).(NotifyTemplateActivePtrOutput)
}

// The content of notify template.
func (o NotifyTemplateActiveOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplateActive) string { return v.Content }).(pulumi.StringOutput)
}

// The title of notify template.
func (o NotifyTemplateActiveOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplateActive) string { return v.Title }).(pulumi.StringOutput)
}

type NotifyTemplateActivePtrOutput struct{ *pulumi.OutputState }

func (NotifyTemplateActivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifyTemplateActive)(nil)).Elem()
}

func (o NotifyTemplateActivePtrOutput) ToNotifyTemplateActivePtrOutput() NotifyTemplateActivePtrOutput {
	return o
}

func (o NotifyTemplateActivePtrOutput) ToNotifyTemplateActivePtrOutputWithContext(ctx context.Context) NotifyTemplateActivePtrOutput {
	return o
}

func (o NotifyTemplateActivePtrOutput) Elem() NotifyTemplateActiveOutput {
	return o.ApplyT(func(v *NotifyTemplateActive) NotifyTemplateActive {
		if v != nil {
			return *v
		}
		var ret NotifyTemplateActive
		return ret
	}).(NotifyTemplateActiveOutput)
}

// The content of notify template.
func (o NotifyTemplateActivePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifyTemplateActive) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// The title of notify template.
func (o NotifyTemplateActivePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifyTemplateActive) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type NotifyTemplateResolved struct {
	// The content of notify template.
	Content string `pulumi:"content"`
	// The title of notify template.
	Title string `pulumi:"title"`
}

// NotifyTemplateResolvedInput is an input type that accepts NotifyTemplateResolvedArgs and NotifyTemplateResolvedOutput values.
// You can construct a concrete instance of `NotifyTemplateResolvedInput` via:
//
//	NotifyTemplateResolvedArgs{...}
type NotifyTemplateResolvedInput interface {
	pulumi.Input

	ToNotifyTemplateResolvedOutput() NotifyTemplateResolvedOutput
	ToNotifyTemplateResolvedOutputWithContext(context.Context) NotifyTemplateResolvedOutput
}

type NotifyTemplateResolvedArgs struct {
	// The content of notify template.
	Content pulumi.StringInput `pulumi:"content"`
	// The title of notify template.
	Title pulumi.StringInput `pulumi:"title"`
}

func (NotifyTemplateResolvedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplateResolved)(nil)).Elem()
}

func (i NotifyTemplateResolvedArgs) ToNotifyTemplateResolvedOutput() NotifyTemplateResolvedOutput {
	return i.ToNotifyTemplateResolvedOutputWithContext(context.Background())
}

func (i NotifyTemplateResolvedArgs) ToNotifyTemplateResolvedOutputWithContext(ctx context.Context) NotifyTemplateResolvedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplateResolvedOutput)
}

func (i NotifyTemplateResolvedArgs) ToNotifyTemplateResolvedPtrOutput() NotifyTemplateResolvedPtrOutput {
	return i.ToNotifyTemplateResolvedPtrOutputWithContext(context.Background())
}

func (i NotifyTemplateResolvedArgs) ToNotifyTemplateResolvedPtrOutputWithContext(ctx context.Context) NotifyTemplateResolvedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplateResolvedOutput).ToNotifyTemplateResolvedPtrOutputWithContext(ctx)
}

// NotifyTemplateResolvedPtrInput is an input type that accepts NotifyTemplateResolvedArgs, NotifyTemplateResolvedPtr and NotifyTemplateResolvedPtrOutput values.
// You can construct a concrete instance of `NotifyTemplateResolvedPtrInput` via:
//
//	        NotifyTemplateResolvedArgs{...}
//
//	or:
//
//	        nil
type NotifyTemplateResolvedPtrInput interface {
	pulumi.Input

	ToNotifyTemplateResolvedPtrOutput() NotifyTemplateResolvedPtrOutput
	ToNotifyTemplateResolvedPtrOutputWithContext(context.Context) NotifyTemplateResolvedPtrOutput
}

type notifyTemplateResolvedPtrType NotifyTemplateResolvedArgs

func NotifyTemplateResolvedPtr(v *NotifyTemplateResolvedArgs) NotifyTemplateResolvedPtrInput {
	return (*notifyTemplateResolvedPtrType)(v)
}

func (*notifyTemplateResolvedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifyTemplateResolved)(nil)).Elem()
}

func (i *notifyTemplateResolvedPtrType) ToNotifyTemplateResolvedPtrOutput() NotifyTemplateResolvedPtrOutput {
	return i.ToNotifyTemplateResolvedPtrOutputWithContext(context.Background())
}

func (i *notifyTemplateResolvedPtrType) ToNotifyTemplateResolvedPtrOutputWithContext(ctx context.Context) NotifyTemplateResolvedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplateResolvedPtrOutput)
}

type NotifyTemplateResolvedOutput struct{ *pulumi.OutputState }

func (NotifyTemplateResolvedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplateResolved)(nil)).Elem()
}

func (o NotifyTemplateResolvedOutput) ToNotifyTemplateResolvedOutput() NotifyTemplateResolvedOutput {
	return o
}

func (o NotifyTemplateResolvedOutput) ToNotifyTemplateResolvedOutputWithContext(ctx context.Context) NotifyTemplateResolvedOutput {
	return o
}

func (o NotifyTemplateResolvedOutput) ToNotifyTemplateResolvedPtrOutput() NotifyTemplateResolvedPtrOutput {
	return o.ToNotifyTemplateResolvedPtrOutputWithContext(context.Background())
}

func (o NotifyTemplateResolvedOutput) ToNotifyTemplateResolvedPtrOutputWithContext(ctx context.Context) NotifyTemplateResolvedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotifyTemplateResolved) *NotifyTemplateResolved {
		return &v
	}).(NotifyTemplateResolvedPtrOutput)
}

// The content of notify template.
func (o NotifyTemplateResolvedOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplateResolved) string { return v.Content }).(pulumi.StringOutput)
}

// The title of notify template.
func (o NotifyTemplateResolvedOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplateResolved) string { return v.Title }).(pulumi.StringOutput)
}

type NotifyTemplateResolvedPtrOutput struct{ *pulumi.OutputState }

func (NotifyTemplateResolvedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotifyTemplateResolved)(nil)).Elem()
}

func (o NotifyTemplateResolvedPtrOutput) ToNotifyTemplateResolvedPtrOutput() NotifyTemplateResolvedPtrOutput {
	return o
}

func (o NotifyTemplateResolvedPtrOutput) ToNotifyTemplateResolvedPtrOutputWithContext(ctx context.Context) NotifyTemplateResolvedPtrOutput {
	return o
}

func (o NotifyTemplateResolvedPtrOutput) Elem() NotifyTemplateResolvedOutput {
	return o.ApplyT(func(v *NotifyTemplateResolved) NotifyTemplateResolved {
		if v != nil {
			return *v
		}
		var ret NotifyTemplateResolved
		return ret
	}).(NotifyTemplateResolvedOutput)
}

// The content of notify template.
func (o NotifyTemplateResolvedPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifyTemplateResolved) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// The title of notify template.
func (o NotifyTemplateResolvedPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotifyTemplateResolved) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type NotifyTemplatesNotifyTemplate struct {
	// The active notify template info.
	Actives []NotifyTemplatesNotifyTemplateActive `pulumi:"actives"`
	// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
	Channel string `pulumi:"channel"`
	// The create time of notify template.
	CreateTime string `pulumi:"createTime"`
	// The description of notify template.
	Description string `pulumi:"description"`
	// The ID of notify template.
	Id string `pulumi:"id"`
	// The name of notify template. This field support fuzzy query.
	Name string `pulumi:"name"`
	// The resolved notify template info.
	Resolveds []NotifyTemplatesNotifyTemplateResolved `pulumi:"resolveds"`
	// The update time of notify template.
	UpdateTime string `pulumi:"updateTime"`
}

// NotifyTemplatesNotifyTemplateInput is an input type that accepts NotifyTemplatesNotifyTemplateArgs and NotifyTemplatesNotifyTemplateOutput values.
// You can construct a concrete instance of `NotifyTemplatesNotifyTemplateInput` via:
//
//	NotifyTemplatesNotifyTemplateArgs{...}
type NotifyTemplatesNotifyTemplateInput interface {
	pulumi.Input

	ToNotifyTemplatesNotifyTemplateOutput() NotifyTemplatesNotifyTemplateOutput
	ToNotifyTemplatesNotifyTemplateOutputWithContext(context.Context) NotifyTemplatesNotifyTemplateOutput
}

type NotifyTemplatesNotifyTemplateArgs struct {
	// The active notify template info.
	Actives NotifyTemplatesNotifyTemplateActiveArrayInput `pulumi:"actives"`
	// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
	Channel pulumi.StringInput `pulumi:"channel"`
	// The create time of notify template.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of notify template.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of notify template.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of notify template. This field support fuzzy query.
	Name pulumi.StringInput `pulumi:"name"`
	// The resolved notify template info.
	Resolveds NotifyTemplatesNotifyTemplateResolvedArrayInput `pulumi:"resolveds"`
	// The update time of notify template.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (NotifyTemplatesNotifyTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplatesNotifyTemplate)(nil)).Elem()
}

func (i NotifyTemplatesNotifyTemplateArgs) ToNotifyTemplatesNotifyTemplateOutput() NotifyTemplatesNotifyTemplateOutput {
	return i.ToNotifyTemplatesNotifyTemplateOutputWithContext(context.Background())
}

func (i NotifyTemplatesNotifyTemplateArgs) ToNotifyTemplatesNotifyTemplateOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplatesNotifyTemplateOutput)
}

// NotifyTemplatesNotifyTemplateArrayInput is an input type that accepts NotifyTemplatesNotifyTemplateArray and NotifyTemplatesNotifyTemplateArrayOutput values.
// You can construct a concrete instance of `NotifyTemplatesNotifyTemplateArrayInput` via:
//
//	NotifyTemplatesNotifyTemplateArray{ NotifyTemplatesNotifyTemplateArgs{...} }
type NotifyTemplatesNotifyTemplateArrayInput interface {
	pulumi.Input

	ToNotifyTemplatesNotifyTemplateArrayOutput() NotifyTemplatesNotifyTemplateArrayOutput
	ToNotifyTemplatesNotifyTemplateArrayOutputWithContext(context.Context) NotifyTemplatesNotifyTemplateArrayOutput
}

type NotifyTemplatesNotifyTemplateArray []NotifyTemplatesNotifyTemplateInput

func (NotifyTemplatesNotifyTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyTemplatesNotifyTemplate)(nil)).Elem()
}

func (i NotifyTemplatesNotifyTemplateArray) ToNotifyTemplatesNotifyTemplateArrayOutput() NotifyTemplatesNotifyTemplateArrayOutput {
	return i.ToNotifyTemplatesNotifyTemplateArrayOutputWithContext(context.Background())
}

func (i NotifyTemplatesNotifyTemplateArray) ToNotifyTemplatesNotifyTemplateArrayOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplatesNotifyTemplateArrayOutput)
}

type NotifyTemplatesNotifyTemplateOutput struct{ *pulumi.OutputState }

func (NotifyTemplatesNotifyTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplatesNotifyTemplate)(nil)).Elem()
}

func (o NotifyTemplatesNotifyTemplateOutput) ToNotifyTemplatesNotifyTemplateOutput() NotifyTemplatesNotifyTemplateOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateOutput) ToNotifyTemplatesNotifyTemplateOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateOutput {
	return o
}

// The active notify template info.
func (o NotifyTemplatesNotifyTemplateOutput) Actives() NotifyTemplatesNotifyTemplateActiveArrayOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplate) []NotifyTemplatesNotifyTemplateActive { return v.Actives }).(NotifyTemplatesNotifyTemplateActiveArrayOutput)
}

// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
func (o NotifyTemplatesNotifyTemplateOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplate) string { return v.Channel }).(pulumi.StringOutput)
}

// The create time of notify template.
func (o NotifyTemplatesNotifyTemplateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplate) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of notify template.
func (o NotifyTemplatesNotifyTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of notify template.
func (o NotifyTemplatesNotifyTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The name of notify template. This field support fuzzy query.
func (o NotifyTemplatesNotifyTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplate) string { return v.Name }).(pulumi.StringOutput)
}

// The resolved notify template info.
func (o NotifyTemplatesNotifyTemplateOutput) Resolveds() NotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplate) []NotifyTemplatesNotifyTemplateResolved { return v.Resolveds }).(NotifyTemplatesNotifyTemplateResolvedArrayOutput)
}

// The update time of notify template.
func (o NotifyTemplatesNotifyTemplateOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplate) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type NotifyTemplatesNotifyTemplateArrayOutput struct{ *pulumi.OutputState }

func (NotifyTemplatesNotifyTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyTemplatesNotifyTemplate)(nil)).Elem()
}

func (o NotifyTemplatesNotifyTemplateArrayOutput) ToNotifyTemplatesNotifyTemplateArrayOutput() NotifyTemplatesNotifyTemplateArrayOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateArrayOutput) ToNotifyTemplatesNotifyTemplateArrayOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateArrayOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateArrayOutput) Index(i pulumi.IntInput) NotifyTemplatesNotifyTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyTemplatesNotifyTemplate {
		return vs[0].([]NotifyTemplatesNotifyTemplate)[vs[1].(int)]
	}).(NotifyTemplatesNotifyTemplateOutput)
}

type NotifyTemplatesNotifyTemplateActive struct {
	// The content of notify template.
	Content string `pulumi:"content"`
	// The title of notify template.
	Title string `pulumi:"title"`
}

// NotifyTemplatesNotifyTemplateActiveInput is an input type that accepts NotifyTemplatesNotifyTemplateActiveArgs and NotifyTemplatesNotifyTemplateActiveOutput values.
// You can construct a concrete instance of `NotifyTemplatesNotifyTemplateActiveInput` via:
//
//	NotifyTemplatesNotifyTemplateActiveArgs{...}
type NotifyTemplatesNotifyTemplateActiveInput interface {
	pulumi.Input

	ToNotifyTemplatesNotifyTemplateActiveOutput() NotifyTemplatesNotifyTemplateActiveOutput
	ToNotifyTemplatesNotifyTemplateActiveOutputWithContext(context.Context) NotifyTemplatesNotifyTemplateActiveOutput
}

type NotifyTemplatesNotifyTemplateActiveArgs struct {
	// The content of notify template.
	Content pulumi.StringInput `pulumi:"content"`
	// The title of notify template.
	Title pulumi.StringInput `pulumi:"title"`
}

func (NotifyTemplatesNotifyTemplateActiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplatesNotifyTemplateActive)(nil)).Elem()
}

func (i NotifyTemplatesNotifyTemplateActiveArgs) ToNotifyTemplatesNotifyTemplateActiveOutput() NotifyTemplatesNotifyTemplateActiveOutput {
	return i.ToNotifyTemplatesNotifyTemplateActiveOutputWithContext(context.Background())
}

func (i NotifyTemplatesNotifyTemplateActiveArgs) ToNotifyTemplatesNotifyTemplateActiveOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateActiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplatesNotifyTemplateActiveOutput)
}

// NotifyTemplatesNotifyTemplateActiveArrayInput is an input type that accepts NotifyTemplatesNotifyTemplateActiveArray and NotifyTemplatesNotifyTemplateActiveArrayOutput values.
// You can construct a concrete instance of `NotifyTemplatesNotifyTemplateActiveArrayInput` via:
//
//	NotifyTemplatesNotifyTemplateActiveArray{ NotifyTemplatesNotifyTemplateActiveArgs{...} }
type NotifyTemplatesNotifyTemplateActiveArrayInput interface {
	pulumi.Input

	ToNotifyTemplatesNotifyTemplateActiveArrayOutput() NotifyTemplatesNotifyTemplateActiveArrayOutput
	ToNotifyTemplatesNotifyTemplateActiveArrayOutputWithContext(context.Context) NotifyTemplatesNotifyTemplateActiveArrayOutput
}

type NotifyTemplatesNotifyTemplateActiveArray []NotifyTemplatesNotifyTemplateActiveInput

func (NotifyTemplatesNotifyTemplateActiveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyTemplatesNotifyTemplateActive)(nil)).Elem()
}

func (i NotifyTemplatesNotifyTemplateActiveArray) ToNotifyTemplatesNotifyTemplateActiveArrayOutput() NotifyTemplatesNotifyTemplateActiveArrayOutput {
	return i.ToNotifyTemplatesNotifyTemplateActiveArrayOutputWithContext(context.Background())
}

func (i NotifyTemplatesNotifyTemplateActiveArray) ToNotifyTemplatesNotifyTemplateActiveArrayOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateActiveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplatesNotifyTemplateActiveArrayOutput)
}

type NotifyTemplatesNotifyTemplateActiveOutput struct{ *pulumi.OutputState }

func (NotifyTemplatesNotifyTemplateActiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplatesNotifyTemplateActive)(nil)).Elem()
}

func (o NotifyTemplatesNotifyTemplateActiveOutput) ToNotifyTemplatesNotifyTemplateActiveOutput() NotifyTemplatesNotifyTemplateActiveOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateActiveOutput) ToNotifyTemplatesNotifyTemplateActiveOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateActiveOutput {
	return o
}

// The content of notify template.
func (o NotifyTemplatesNotifyTemplateActiveOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplateActive) string { return v.Content }).(pulumi.StringOutput)
}

// The title of notify template.
func (o NotifyTemplatesNotifyTemplateActiveOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplateActive) string { return v.Title }).(pulumi.StringOutput)
}

type NotifyTemplatesNotifyTemplateActiveArrayOutput struct{ *pulumi.OutputState }

func (NotifyTemplatesNotifyTemplateActiveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyTemplatesNotifyTemplateActive)(nil)).Elem()
}

func (o NotifyTemplatesNotifyTemplateActiveArrayOutput) ToNotifyTemplatesNotifyTemplateActiveArrayOutput() NotifyTemplatesNotifyTemplateActiveArrayOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateActiveArrayOutput) ToNotifyTemplatesNotifyTemplateActiveArrayOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateActiveArrayOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateActiveArrayOutput) Index(i pulumi.IntInput) NotifyTemplatesNotifyTemplateActiveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyTemplatesNotifyTemplateActive {
		return vs[0].([]NotifyTemplatesNotifyTemplateActive)[vs[1].(int)]
	}).(NotifyTemplatesNotifyTemplateActiveOutput)
}

type NotifyTemplatesNotifyTemplateResolved struct {
	// The content of notify template.
	Content string `pulumi:"content"`
	// The title of notify template.
	Title string `pulumi:"title"`
}

// NotifyTemplatesNotifyTemplateResolvedInput is an input type that accepts NotifyTemplatesNotifyTemplateResolvedArgs and NotifyTemplatesNotifyTemplateResolvedOutput values.
// You can construct a concrete instance of `NotifyTemplatesNotifyTemplateResolvedInput` via:
//
//	NotifyTemplatesNotifyTemplateResolvedArgs{...}
type NotifyTemplatesNotifyTemplateResolvedInput interface {
	pulumi.Input

	ToNotifyTemplatesNotifyTemplateResolvedOutput() NotifyTemplatesNotifyTemplateResolvedOutput
	ToNotifyTemplatesNotifyTemplateResolvedOutputWithContext(context.Context) NotifyTemplatesNotifyTemplateResolvedOutput
}

type NotifyTemplatesNotifyTemplateResolvedArgs struct {
	// The content of notify template.
	Content pulumi.StringInput `pulumi:"content"`
	// The title of notify template.
	Title pulumi.StringInput `pulumi:"title"`
}

func (NotifyTemplatesNotifyTemplateResolvedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplatesNotifyTemplateResolved)(nil)).Elem()
}

func (i NotifyTemplatesNotifyTemplateResolvedArgs) ToNotifyTemplatesNotifyTemplateResolvedOutput() NotifyTemplatesNotifyTemplateResolvedOutput {
	return i.ToNotifyTemplatesNotifyTemplateResolvedOutputWithContext(context.Background())
}

func (i NotifyTemplatesNotifyTemplateResolvedArgs) ToNotifyTemplatesNotifyTemplateResolvedOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateResolvedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplatesNotifyTemplateResolvedOutput)
}

// NotifyTemplatesNotifyTemplateResolvedArrayInput is an input type that accepts NotifyTemplatesNotifyTemplateResolvedArray and NotifyTemplatesNotifyTemplateResolvedArrayOutput values.
// You can construct a concrete instance of `NotifyTemplatesNotifyTemplateResolvedArrayInput` via:
//
//	NotifyTemplatesNotifyTemplateResolvedArray{ NotifyTemplatesNotifyTemplateResolvedArgs{...} }
type NotifyTemplatesNotifyTemplateResolvedArrayInput interface {
	pulumi.Input

	ToNotifyTemplatesNotifyTemplateResolvedArrayOutput() NotifyTemplatesNotifyTemplateResolvedArrayOutput
	ToNotifyTemplatesNotifyTemplateResolvedArrayOutputWithContext(context.Context) NotifyTemplatesNotifyTemplateResolvedArrayOutput
}

type NotifyTemplatesNotifyTemplateResolvedArray []NotifyTemplatesNotifyTemplateResolvedInput

func (NotifyTemplatesNotifyTemplateResolvedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyTemplatesNotifyTemplateResolved)(nil)).Elem()
}

func (i NotifyTemplatesNotifyTemplateResolvedArray) ToNotifyTemplatesNotifyTemplateResolvedArrayOutput() NotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return i.ToNotifyTemplatesNotifyTemplateResolvedArrayOutputWithContext(context.Background())
}

func (i NotifyTemplatesNotifyTemplateResolvedArray) ToNotifyTemplatesNotifyTemplateResolvedArrayOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotifyTemplatesNotifyTemplateResolvedArrayOutput)
}

type NotifyTemplatesNotifyTemplateResolvedOutput struct{ *pulumi.OutputState }

func (NotifyTemplatesNotifyTemplateResolvedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotifyTemplatesNotifyTemplateResolved)(nil)).Elem()
}

func (o NotifyTemplatesNotifyTemplateResolvedOutput) ToNotifyTemplatesNotifyTemplateResolvedOutput() NotifyTemplatesNotifyTemplateResolvedOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateResolvedOutput) ToNotifyTemplatesNotifyTemplateResolvedOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateResolvedOutput {
	return o
}

// The content of notify template.
func (o NotifyTemplatesNotifyTemplateResolvedOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplateResolved) string { return v.Content }).(pulumi.StringOutput)
}

// The title of notify template.
func (o NotifyTemplatesNotifyTemplateResolvedOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v NotifyTemplatesNotifyTemplateResolved) string { return v.Title }).(pulumi.StringOutput)
}

type NotifyTemplatesNotifyTemplateResolvedArrayOutput struct{ *pulumi.OutputState }

func (NotifyTemplatesNotifyTemplateResolvedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotifyTemplatesNotifyTemplateResolved)(nil)).Elem()
}

func (o NotifyTemplatesNotifyTemplateResolvedArrayOutput) ToNotifyTemplatesNotifyTemplateResolvedArrayOutput() NotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateResolvedArrayOutput) ToNotifyTemplatesNotifyTemplateResolvedArrayOutputWithContext(ctx context.Context) NotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return o
}

func (o NotifyTemplatesNotifyTemplateResolvedArrayOutput) Index(i pulumi.IntInput) NotifyTemplatesNotifyTemplateResolvedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotifyTemplatesNotifyTemplateResolved {
		return vs[0].([]NotifyTemplatesNotifyTemplateResolved)[vs[1].(int)]
	}).(NotifyTemplatesNotifyTemplateResolvedOutput)
}

type RuleFilesFile struct {
	// The content of rule file.
	Content string `pulumi:"content"`
	// The create time of rule file.
	CreateTime string `pulumi:"createTime"`
	// The description of rule file.
	Description string `pulumi:"description"`
	// The ID of rule file.
	Id string `pulumi:"id"`
	// The last update time of rule file.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The name of rule file.
	Name string `pulumi:"name"`
	// The rule count number of rule file.
	RuleCount int `pulumi:"ruleCount"`
	// The status of rule file.
	Status string `pulumi:"status"`
}

// RuleFilesFileInput is an input type that accepts RuleFilesFileArgs and RuleFilesFileOutput values.
// You can construct a concrete instance of `RuleFilesFileInput` via:
//
//	RuleFilesFileArgs{...}
type RuleFilesFileInput interface {
	pulumi.Input

	ToRuleFilesFileOutput() RuleFilesFileOutput
	ToRuleFilesFileOutputWithContext(context.Context) RuleFilesFileOutput
}

type RuleFilesFileArgs struct {
	// The content of rule file.
	Content pulumi.StringInput `pulumi:"content"`
	// The create time of rule file.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of rule file.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of rule file.
	Id pulumi.StringInput `pulumi:"id"`
	// The last update time of rule file.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The name of rule file.
	Name pulumi.StringInput `pulumi:"name"`
	// The rule count number of rule file.
	RuleCount pulumi.IntInput `pulumi:"ruleCount"`
	// The status of rule file.
	Status pulumi.StringInput `pulumi:"status"`
}

func (RuleFilesFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleFilesFile)(nil)).Elem()
}

func (i RuleFilesFileArgs) ToRuleFilesFileOutput() RuleFilesFileOutput {
	return i.ToRuleFilesFileOutputWithContext(context.Background())
}

func (i RuleFilesFileArgs) ToRuleFilesFileOutputWithContext(ctx context.Context) RuleFilesFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleFilesFileOutput)
}

// RuleFilesFileArrayInput is an input type that accepts RuleFilesFileArray and RuleFilesFileArrayOutput values.
// You can construct a concrete instance of `RuleFilesFileArrayInput` via:
//
//	RuleFilesFileArray{ RuleFilesFileArgs{...} }
type RuleFilesFileArrayInput interface {
	pulumi.Input

	ToRuleFilesFileArrayOutput() RuleFilesFileArrayOutput
	ToRuleFilesFileArrayOutputWithContext(context.Context) RuleFilesFileArrayOutput
}

type RuleFilesFileArray []RuleFilesFileInput

func (RuleFilesFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleFilesFile)(nil)).Elem()
}

func (i RuleFilesFileArray) ToRuleFilesFileArrayOutput() RuleFilesFileArrayOutput {
	return i.ToRuleFilesFileArrayOutputWithContext(context.Background())
}

func (i RuleFilesFileArray) ToRuleFilesFileArrayOutputWithContext(ctx context.Context) RuleFilesFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleFilesFileArrayOutput)
}

type RuleFilesFileOutput struct{ *pulumi.OutputState }

func (RuleFilesFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleFilesFile)(nil)).Elem()
}

func (o RuleFilesFileOutput) ToRuleFilesFileOutput() RuleFilesFileOutput {
	return o
}

func (o RuleFilesFileOutput) ToRuleFilesFileOutputWithContext(ctx context.Context) RuleFilesFileOutput {
	return o
}

// The content of rule file.
func (o RuleFilesFileOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v RuleFilesFile) string { return v.Content }).(pulumi.StringOutput)
}

// The create time of rule file.
func (o RuleFilesFileOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RuleFilesFile) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of rule file.
func (o RuleFilesFileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RuleFilesFile) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of rule file.
func (o RuleFilesFileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RuleFilesFile) string { return v.Id }).(pulumi.StringOutput)
}

// The last update time of rule file.
func (o RuleFilesFileOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RuleFilesFile) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The name of rule file.
func (o RuleFilesFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleFilesFile) string { return v.Name }).(pulumi.StringOutput)
}

// The rule count number of rule file.
func (o RuleFilesFileOutput) RuleCount() pulumi.IntOutput {
	return o.ApplyT(func(v RuleFilesFile) int { return v.RuleCount }).(pulumi.IntOutput)
}

// The status of rule file.
func (o RuleFilesFileOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RuleFilesFile) string { return v.Status }).(pulumi.StringOutput)
}

type RuleFilesFileArrayOutput struct{ *pulumi.OutputState }

func (RuleFilesFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleFilesFile)(nil)).Elem()
}

func (o RuleFilesFileArrayOutput) ToRuleFilesFileArrayOutput() RuleFilesFileArrayOutput {
	return o
}

func (o RuleFilesFileArrayOutput) ToRuleFilesFileArrayOutputWithContext(ctx context.Context) RuleFilesFileArrayOutput {
	return o
}

func (o RuleFilesFileArrayOutput) Index(i pulumi.IntInput) RuleFilesFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleFilesFile {
		return vs[0].([]RuleFilesFile)[vs[1].(int)]
	}).(RuleFilesFileOutput)
}

type RulesRule struct {
	// The expr of rule.
	Expr string `pulumi:"expr"`
	// The kind of rule.
	Kind string `pulumi:"kind"`
	// The labels of rule.
	Labels []RulesRuleLabel `pulumi:"labels"`
	// The last evaluation of rule.
	LastEvaluation string `pulumi:"lastEvaluation"`
	// The name of rule.
	Name string `pulumi:"name"`
	// The reason of rule.
	Reason string `pulumi:"reason"`
	// The name of rule file.
	RuleFileName string `pulumi:"ruleFileName"`
	// The name of rule group.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The status of rule.
	Status string `pulumi:"status"`
}

// RulesRuleInput is an input type that accepts RulesRuleArgs and RulesRuleOutput values.
// You can construct a concrete instance of `RulesRuleInput` via:
//
//	RulesRuleArgs{...}
type RulesRuleInput interface {
	pulumi.Input

	ToRulesRuleOutput() RulesRuleOutput
	ToRulesRuleOutputWithContext(context.Context) RulesRuleOutput
}

type RulesRuleArgs struct {
	// The expr of rule.
	Expr pulumi.StringInput `pulumi:"expr"`
	// The kind of rule.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The labels of rule.
	Labels RulesRuleLabelArrayInput `pulumi:"labels"`
	// The last evaluation of rule.
	LastEvaluation pulumi.StringInput `pulumi:"lastEvaluation"`
	// The name of rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The reason of rule.
	Reason pulumi.StringInput `pulumi:"reason"`
	// The name of rule file.
	RuleFileName pulumi.StringInput `pulumi:"ruleFileName"`
	// The name of rule group.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The status of rule.
	Status pulumi.StringInput `pulumi:"status"`
}

func (RulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRule)(nil)).Elem()
}

func (i RulesRuleArgs) ToRulesRuleOutput() RulesRuleOutput {
	return i.ToRulesRuleOutputWithContext(context.Background())
}

func (i RulesRuleArgs) ToRulesRuleOutputWithContext(ctx context.Context) RulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleOutput)
}

// RulesRuleArrayInput is an input type that accepts RulesRuleArray and RulesRuleArrayOutput values.
// You can construct a concrete instance of `RulesRuleArrayInput` via:
//
//	RulesRuleArray{ RulesRuleArgs{...} }
type RulesRuleArrayInput interface {
	pulumi.Input

	ToRulesRuleArrayOutput() RulesRuleArrayOutput
	ToRulesRuleArrayOutputWithContext(context.Context) RulesRuleArrayOutput
}

type RulesRuleArray []RulesRuleInput

func (RulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRule)(nil)).Elem()
}

func (i RulesRuleArray) ToRulesRuleArrayOutput() RulesRuleArrayOutput {
	return i.ToRulesRuleArrayOutputWithContext(context.Background())
}

func (i RulesRuleArray) ToRulesRuleArrayOutputWithContext(ctx context.Context) RulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleArrayOutput)
}

type RulesRuleOutput struct{ *pulumi.OutputState }

func (RulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRule)(nil)).Elem()
}

func (o RulesRuleOutput) ToRulesRuleOutput() RulesRuleOutput {
	return o
}

func (o RulesRuleOutput) ToRulesRuleOutputWithContext(ctx context.Context) RulesRuleOutput {
	return o
}

// The expr of rule.
func (o RulesRuleOutput) Expr() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Expr }).(pulumi.StringOutput)
}

// The kind of rule.
func (o RulesRuleOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Kind }).(pulumi.StringOutput)
}

// The labels of rule.
func (o RulesRuleOutput) Labels() RulesRuleLabelArrayOutput {
	return o.ApplyT(func(v RulesRule) []RulesRuleLabel { return v.Labels }).(RulesRuleLabelArrayOutput)
}

// The last evaluation of rule.
func (o RulesRuleOutput) LastEvaluation() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.LastEvaluation }).(pulumi.StringOutput)
}

// The name of rule.
func (o RulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Name }).(pulumi.StringOutput)
}

// The reason of rule.
func (o RulesRuleOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Reason }).(pulumi.StringOutput)
}

// The name of rule file.
func (o RulesRuleOutput) RuleFileName() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.RuleFileName }).(pulumi.StringOutput)
}

// The name of rule group.
func (o RulesRuleOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The status of rule.
func (o RulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Status }).(pulumi.StringOutput)
}

type RulesRuleArrayOutput struct{ *pulumi.OutputState }

func (RulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRule)(nil)).Elem()
}

func (o RulesRuleArrayOutput) ToRulesRuleArrayOutput() RulesRuleArrayOutput {
	return o
}

func (o RulesRuleArrayOutput) ToRulesRuleArrayOutputWithContext(ctx context.Context) RulesRuleArrayOutput {
	return o
}

func (o RulesRuleArrayOutput) Index(i pulumi.IntInput) RulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesRule {
		return vs[0].([]RulesRule)[vs[1].(int)]
	}).(RulesRuleOutput)
}

type RulesRuleLabel struct {
	// The key of label.
	Key string `pulumi:"key"`
	// The value of label.
	Value string `pulumi:"value"`
}

// RulesRuleLabelInput is an input type that accepts RulesRuleLabelArgs and RulesRuleLabelOutput values.
// You can construct a concrete instance of `RulesRuleLabelInput` via:
//
//	RulesRuleLabelArgs{...}
type RulesRuleLabelInput interface {
	pulumi.Input

	ToRulesRuleLabelOutput() RulesRuleLabelOutput
	ToRulesRuleLabelOutputWithContext(context.Context) RulesRuleLabelOutput
}

type RulesRuleLabelArgs struct {
	// The key of label.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RulesRuleLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRuleLabel)(nil)).Elem()
}

func (i RulesRuleLabelArgs) ToRulesRuleLabelOutput() RulesRuleLabelOutput {
	return i.ToRulesRuleLabelOutputWithContext(context.Background())
}

func (i RulesRuleLabelArgs) ToRulesRuleLabelOutputWithContext(ctx context.Context) RulesRuleLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleLabelOutput)
}

// RulesRuleLabelArrayInput is an input type that accepts RulesRuleLabelArray and RulesRuleLabelArrayOutput values.
// You can construct a concrete instance of `RulesRuleLabelArrayInput` via:
//
//	RulesRuleLabelArray{ RulesRuleLabelArgs{...} }
type RulesRuleLabelArrayInput interface {
	pulumi.Input

	ToRulesRuleLabelArrayOutput() RulesRuleLabelArrayOutput
	ToRulesRuleLabelArrayOutputWithContext(context.Context) RulesRuleLabelArrayOutput
}

type RulesRuleLabelArray []RulesRuleLabelInput

func (RulesRuleLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRuleLabel)(nil)).Elem()
}

func (i RulesRuleLabelArray) ToRulesRuleLabelArrayOutput() RulesRuleLabelArrayOutput {
	return i.ToRulesRuleLabelArrayOutputWithContext(context.Background())
}

func (i RulesRuleLabelArray) ToRulesRuleLabelArrayOutputWithContext(ctx context.Context) RulesRuleLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleLabelArrayOutput)
}

type RulesRuleLabelOutput struct{ *pulumi.OutputState }

func (RulesRuleLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRuleLabel)(nil)).Elem()
}

func (o RulesRuleLabelOutput) ToRulesRuleLabelOutput() RulesRuleLabelOutput {
	return o
}

func (o RulesRuleLabelOutput) ToRulesRuleLabelOutputWithContext(ctx context.Context) RulesRuleLabelOutput {
	return o
}

// The key of label.
func (o RulesRuleLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRuleLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value of label.
func (o RulesRuleLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRuleLabel) string { return v.Value }).(pulumi.StringOutput)
}

type RulesRuleLabelArrayOutput struct{ *pulumi.OutputState }

func (RulesRuleLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRuleLabel)(nil)).Elem()
}

func (o RulesRuleLabelArrayOutput) ToRulesRuleLabelArrayOutput() RulesRuleLabelArrayOutput {
	return o
}

func (o RulesRuleLabelArrayOutput) ToRulesRuleLabelArrayOutputWithContext(ctx context.Context) RulesRuleLabelArrayOutput {
	return o
}

func (o RulesRuleLabelArrayOutput) Index(i pulumi.IntInput) RulesRuleLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesRuleLabel {
		return vs[0].([]RulesRuleLabel)[vs[1].(int)]
	}).(RulesRuleLabelOutput)
}

type WorkspaceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// WorkspaceTagInput is an input type that accepts WorkspaceTagArgs and WorkspaceTagOutput values.
// You can construct a concrete instance of `WorkspaceTagInput` via:
//
//	WorkspaceTagArgs{...}
type WorkspaceTagInput interface {
	pulumi.Input

	ToWorkspaceTagOutput() WorkspaceTagOutput
	ToWorkspaceTagOutputWithContext(context.Context) WorkspaceTagOutput
}

type WorkspaceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkspaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTag)(nil)).Elem()
}

func (i WorkspaceTagArgs) ToWorkspaceTagOutput() WorkspaceTagOutput {
	return i.ToWorkspaceTagOutputWithContext(context.Background())
}

func (i WorkspaceTagArgs) ToWorkspaceTagOutputWithContext(ctx context.Context) WorkspaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTagOutput)
}

// WorkspaceTagArrayInput is an input type that accepts WorkspaceTagArray and WorkspaceTagArrayOutput values.
// You can construct a concrete instance of `WorkspaceTagArrayInput` via:
//
//	WorkspaceTagArray{ WorkspaceTagArgs{...} }
type WorkspaceTagArrayInput interface {
	pulumi.Input

	ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput
	ToWorkspaceTagArrayOutputWithContext(context.Context) WorkspaceTagArrayOutput
}

type WorkspaceTagArray []WorkspaceTagInput

func (WorkspaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTag)(nil)).Elem()
}

func (i WorkspaceTagArray) ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput {
	return i.ToWorkspaceTagArrayOutputWithContext(context.Background())
}

func (i WorkspaceTagArray) ToWorkspaceTagArrayOutputWithContext(ctx context.Context) WorkspaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTagArrayOutput)
}

type WorkspaceTagOutput struct{ *pulumi.OutputState }

func (WorkspaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTag)(nil)).Elem()
}

func (o WorkspaceTagOutput) ToWorkspaceTagOutput() WorkspaceTagOutput {
	return o
}

func (o WorkspaceTagOutput) ToWorkspaceTagOutputWithContext(ctx context.Context) WorkspaceTagOutput {
	return o
}

// The Key of Tags.
func (o WorkspaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o WorkspaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type WorkspaceTagArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTag)(nil)).Elem()
}

func (o WorkspaceTagArrayOutput) ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput {
	return o
}

func (o WorkspaceTagArrayOutput) ToWorkspaceTagArrayOutputWithContext(ctx context.Context) WorkspaceTagArrayOutput {
	return o
}

func (o WorkspaceTagArrayOutput) Index(i pulumi.IntInput) WorkspaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceTag {
		return vs[0].([]WorkspaceTag)[vs[1].(int)]
	}).(WorkspaceTagOutput)
}

type WorkspacesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Values []string `pulumi:"values"`
}

// WorkspacesTagInput is an input type that accepts WorkspacesTagArgs and WorkspacesTagOutput values.
// You can construct a concrete instance of `WorkspacesTagInput` via:
//
//	WorkspacesTagArgs{...}
type WorkspacesTagInput interface {
	pulumi.Input

	ToWorkspacesTagOutput() WorkspacesTagOutput
	ToWorkspacesTagOutputWithContext(context.Context) WorkspacesTagOutput
}

type WorkspacesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (WorkspacesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesTag)(nil)).Elem()
}

func (i WorkspacesTagArgs) ToWorkspacesTagOutput() WorkspacesTagOutput {
	return i.ToWorkspacesTagOutputWithContext(context.Background())
}

func (i WorkspacesTagArgs) ToWorkspacesTagOutputWithContext(ctx context.Context) WorkspacesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesTagOutput)
}

// WorkspacesTagArrayInput is an input type that accepts WorkspacesTagArray and WorkspacesTagArrayOutput values.
// You can construct a concrete instance of `WorkspacesTagArrayInput` via:
//
//	WorkspacesTagArray{ WorkspacesTagArgs{...} }
type WorkspacesTagArrayInput interface {
	pulumi.Input

	ToWorkspacesTagArrayOutput() WorkspacesTagArrayOutput
	ToWorkspacesTagArrayOutputWithContext(context.Context) WorkspacesTagArrayOutput
}

type WorkspacesTagArray []WorkspacesTagInput

func (WorkspacesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacesTag)(nil)).Elem()
}

func (i WorkspacesTagArray) ToWorkspacesTagArrayOutput() WorkspacesTagArrayOutput {
	return i.ToWorkspacesTagArrayOutputWithContext(context.Background())
}

func (i WorkspacesTagArray) ToWorkspacesTagArrayOutputWithContext(ctx context.Context) WorkspacesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesTagArrayOutput)
}

type WorkspacesTagOutput struct{ *pulumi.OutputState }

func (WorkspacesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesTag)(nil)).Elem()
}

func (o WorkspacesTagOutput) ToWorkspacesTagOutput() WorkspacesTagOutput {
	return o
}

func (o WorkspacesTagOutput) ToWorkspacesTagOutputWithContext(ctx context.Context) WorkspacesTagOutput {
	return o
}

// The Key of Tags.
func (o WorkspacesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o WorkspacesTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkspacesTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type WorkspacesTagArrayOutput struct{ *pulumi.OutputState }

func (WorkspacesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacesTag)(nil)).Elem()
}

func (o WorkspacesTagArrayOutput) ToWorkspacesTagArrayOutput() WorkspacesTagArrayOutput {
	return o
}

func (o WorkspacesTagArrayOutput) ToWorkspacesTagArrayOutputWithContext(ctx context.Context) WorkspacesTagArrayOutput {
	return o
}

func (o WorkspacesTagArrayOutput) Index(i pulumi.IntInput) WorkspacesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspacesTag {
		return vs[0].([]WorkspacesTag)[vs[1].(int)]
	}).(WorkspacesTagOutput)
}

type WorkspacesWorkspace struct {
	// The create time of workspace.
	CreateTime string `pulumi:"createTime"`
	// Whether enable delete protection.
	DeleteProtectionEnabled bool `pulumi:"deleteProtectionEnabled"`
	// The description of workspace.
	Description string `pulumi:"description"`
	// The ID of workspace.
	Id string `pulumi:"id"`
	// The id of instance type.
	InstanceTypeId string `pulumi:"instanceTypeId"`
	// The name of workspace.
	Name string `pulumi:"name"`
	// The overdue reclaim time.
	OverdueReclaimTime string `pulumi:"overdueReclaimTime"`
	// The project name of vmp workspace.
	ProjectName string `pulumi:"projectName"`
	// The prometheus push intranet endpoint.
	PrometheusPushIntranetEndpoint string `pulumi:"prometheusPushIntranetEndpoint"`
	// The prometheus query intranet endpoint.
	PrometheusQueryIntranetEndpoint string `pulumi:"prometheusQueryIntranetEndpoint"`
	// The prometheus write intranet endpoint.
	PrometheusWriteIntranetEndpoint string `pulumi:"prometheusWriteIntranetEndpoint"`
	// The status of workspace.
	Status string `pulumi:"status"`
	// The tags of vmp workspace.
	Tags []WorkspacesWorkspaceTag `pulumi:"tags"`
	// The username of workspace.
	Username string `pulumi:"username"`
}

// WorkspacesWorkspaceInput is an input type that accepts WorkspacesWorkspaceArgs and WorkspacesWorkspaceOutput values.
// You can construct a concrete instance of `WorkspacesWorkspaceInput` via:
//
//	WorkspacesWorkspaceArgs{...}
type WorkspacesWorkspaceInput interface {
	pulumi.Input

	ToWorkspacesWorkspaceOutput() WorkspacesWorkspaceOutput
	ToWorkspacesWorkspaceOutputWithContext(context.Context) WorkspacesWorkspaceOutput
}

type WorkspacesWorkspaceArgs struct {
	// The create time of workspace.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Whether enable delete protection.
	DeleteProtectionEnabled pulumi.BoolInput `pulumi:"deleteProtectionEnabled"`
	// The description of workspace.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of workspace.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of instance type.
	InstanceTypeId pulumi.StringInput `pulumi:"instanceTypeId"`
	// The name of workspace.
	Name pulumi.StringInput `pulumi:"name"`
	// The overdue reclaim time.
	OverdueReclaimTime pulumi.StringInput `pulumi:"overdueReclaimTime"`
	// The project name of vmp workspace.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The prometheus push intranet endpoint.
	PrometheusPushIntranetEndpoint pulumi.StringInput `pulumi:"prometheusPushIntranetEndpoint"`
	// The prometheus query intranet endpoint.
	PrometheusQueryIntranetEndpoint pulumi.StringInput `pulumi:"prometheusQueryIntranetEndpoint"`
	// The prometheus write intranet endpoint.
	PrometheusWriteIntranetEndpoint pulumi.StringInput `pulumi:"prometheusWriteIntranetEndpoint"`
	// The status of workspace.
	Status pulumi.StringInput `pulumi:"status"`
	// The tags of vmp workspace.
	Tags WorkspacesWorkspaceTagArrayInput `pulumi:"tags"`
	// The username of workspace.
	Username pulumi.StringInput `pulumi:"username"`
}

func (WorkspacesWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesWorkspace)(nil)).Elem()
}

func (i WorkspacesWorkspaceArgs) ToWorkspacesWorkspaceOutput() WorkspacesWorkspaceOutput {
	return i.ToWorkspacesWorkspaceOutputWithContext(context.Background())
}

func (i WorkspacesWorkspaceArgs) ToWorkspacesWorkspaceOutputWithContext(ctx context.Context) WorkspacesWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesWorkspaceOutput)
}

// WorkspacesWorkspaceArrayInput is an input type that accepts WorkspacesWorkspaceArray and WorkspacesWorkspaceArrayOutput values.
// You can construct a concrete instance of `WorkspacesWorkspaceArrayInput` via:
//
//	WorkspacesWorkspaceArray{ WorkspacesWorkspaceArgs{...} }
type WorkspacesWorkspaceArrayInput interface {
	pulumi.Input

	ToWorkspacesWorkspaceArrayOutput() WorkspacesWorkspaceArrayOutput
	ToWorkspacesWorkspaceArrayOutputWithContext(context.Context) WorkspacesWorkspaceArrayOutput
}

type WorkspacesWorkspaceArray []WorkspacesWorkspaceInput

func (WorkspacesWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacesWorkspace)(nil)).Elem()
}

func (i WorkspacesWorkspaceArray) ToWorkspacesWorkspaceArrayOutput() WorkspacesWorkspaceArrayOutput {
	return i.ToWorkspacesWorkspaceArrayOutputWithContext(context.Background())
}

func (i WorkspacesWorkspaceArray) ToWorkspacesWorkspaceArrayOutputWithContext(ctx context.Context) WorkspacesWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesWorkspaceArrayOutput)
}

type WorkspacesWorkspaceOutput struct{ *pulumi.OutputState }

func (WorkspacesWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesWorkspace)(nil)).Elem()
}

func (o WorkspacesWorkspaceOutput) ToWorkspacesWorkspaceOutput() WorkspacesWorkspaceOutput {
	return o
}

func (o WorkspacesWorkspaceOutput) ToWorkspacesWorkspaceOutputWithContext(ctx context.Context) WorkspacesWorkspaceOutput {
	return o
}

// The create time of workspace.
func (o WorkspacesWorkspaceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether enable delete protection.
func (o WorkspacesWorkspaceOutput) DeleteProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) bool { return v.DeleteProtectionEnabled }).(pulumi.BoolOutput)
}

// The description of workspace.
func (o WorkspacesWorkspaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of workspace.
func (o WorkspacesWorkspaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.Id }).(pulumi.StringOutput)
}

// The id of instance type.
func (o WorkspacesWorkspaceOutput) InstanceTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.InstanceTypeId }).(pulumi.StringOutput)
}

// The name of workspace.
func (o WorkspacesWorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.Name }).(pulumi.StringOutput)
}

// The overdue reclaim time.
func (o WorkspacesWorkspaceOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// The project name of vmp workspace.
func (o WorkspacesWorkspaceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The prometheus push intranet endpoint.
func (o WorkspacesWorkspaceOutput) PrometheusPushIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.PrometheusPushIntranetEndpoint }).(pulumi.StringOutput)
}

// The prometheus query intranet endpoint.
func (o WorkspacesWorkspaceOutput) PrometheusQueryIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.PrometheusQueryIntranetEndpoint }).(pulumi.StringOutput)
}

// The prometheus write intranet endpoint.
func (o WorkspacesWorkspaceOutput) PrometheusWriteIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.PrometheusWriteIntranetEndpoint }).(pulumi.StringOutput)
}

// The status of workspace.
func (o WorkspacesWorkspaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.Status }).(pulumi.StringOutput)
}

// The tags of vmp workspace.
func (o WorkspacesWorkspaceOutput) Tags() WorkspacesWorkspaceTagArrayOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) []WorkspacesWorkspaceTag { return v.Tags }).(WorkspacesWorkspaceTagArrayOutput)
}

// The username of workspace.
func (o WorkspacesWorkspaceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspace) string { return v.Username }).(pulumi.StringOutput)
}

type WorkspacesWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (WorkspacesWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacesWorkspace)(nil)).Elem()
}

func (o WorkspacesWorkspaceArrayOutput) ToWorkspacesWorkspaceArrayOutput() WorkspacesWorkspaceArrayOutput {
	return o
}

func (o WorkspacesWorkspaceArrayOutput) ToWorkspacesWorkspaceArrayOutputWithContext(ctx context.Context) WorkspacesWorkspaceArrayOutput {
	return o
}

func (o WorkspacesWorkspaceArrayOutput) Index(i pulumi.IntInput) WorkspacesWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspacesWorkspace {
		return vs[0].([]WorkspacesWorkspace)[vs[1].(int)]
	}).(WorkspacesWorkspaceOutput)
}

type WorkspacesWorkspaceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// WorkspacesWorkspaceTagInput is an input type that accepts WorkspacesWorkspaceTagArgs and WorkspacesWorkspaceTagOutput values.
// You can construct a concrete instance of `WorkspacesWorkspaceTagInput` via:
//
//	WorkspacesWorkspaceTagArgs{...}
type WorkspacesWorkspaceTagInput interface {
	pulumi.Input

	ToWorkspacesWorkspaceTagOutput() WorkspacesWorkspaceTagOutput
	ToWorkspacesWorkspaceTagOutputWithContext(context.Context) WorkspacesWorkspaceTagOutput
}

type WorkspacesWorkspaceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkspacesWorkspaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesWorkspaceTag)(nil)).Elem()
}

func (i WorkspacesWorkspaceTagArgs) ToWorkspacesWorkspaceTagOutput() WorkspacesWorkspaceTagOutput {
	return i.ToWorkspacesWorkspaceTagOutputWithContext(context.Background())
}

func (i WorkspacesWorkspaceTagArgs) ToWorkspacesWorkspaceTagOutputWithContext(ctx context.Context) WorkspacesWorkspaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesWorkspaceTagOutput)
}

// WorkspacesWorkspaceTagArrayInput is an input type that accepts WorkspacesWorkspaceTagArray and WorkspacesWorkspaceTagArrayOutput values.
// You can construct a concrete instance of `WorkspacesWorkspaceTagArrayInput` via:
//
//	WorkspacesWorkspaceTagArray{ WorkspacesWorkspaceTagArgs{...} }
type WorkspacesWorkspaceTagArrayInput interface {
	pulumi.Input

	ToWorkspacesWorkspaceTagArrayOutput() WorkspacesWorkspaceTagArrayOutput
	ToWorkspacesWorkspaceTagArrayOutputWithContext(context.Context) WorkspacesWorkspaceTagArrayOutput
}

type WorkspacesWorkspaceTagArray []WorkspacesWorkspaceTagInput

func (WorkspacesWorkspaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacesWorkspaceTag)(nil)).Elem()
}

func (i WorkspacesWorkspaceTagArray) ToWorkspacesWorkspaceTagArrayOutput() WorkspacesWorkspaceTagArrayOutput {
	return i.ToWorkspacesWorkspaceTagArrayOutputWithContext(context.Background())
}

func (i WorkspacesWorkspaceTagArray) ToWorkspacesWorkspaceTagArrayOutputWithContext(ctx context.Context) WorkspacesWorkspaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesWorkspaceTagArrayOutput)
}

type WorkspacesWorkspaceTagOutput struct{ *pulumi.OutputState }

func (WorkspacesWorkspaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesWorkspaceTag)(nil)).Elem()
}

func (o WorkspacesWorkspaceTagOutput) ToWorkspacesWorkspaceTagOutput() WorkspacesWorkspaceTagOutput {
	return o
}

func (o WorkspacesWorkspaceTagOutput) ToWorkspacesWorkspaceTagOutputWithContext(ctx context.Context) WorkspacesWorkspaceTagOutput {
	return o
}

// The Key of Tags.
func (o WorkspacesWorkspaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o WorkspacesWorkspaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesWorkspaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type WorkspacesWorkspaceTagArrayOutput struct{ *pulumi.OutputState }

func (WorkspacesWorkspaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacesWorkspaceTag)(nil)).Elem()
}

func (o WorkspacesWorkspaceTagArrayOutput) ToWorkspacesWorkspaceTagArrayOutput() WorkspacesWorkspaceTagArrayOutput {
	return o
}

func (o WorkspacesWorkspaceTagArrayOutput) ToWorkspacesWorkspaceTagArrayOutputWithContext(ctx context.Context) WorkspacesWorkspaceTagArrayOutput {
	return o
}

func (o WorkspacesWorkspaceTagArrayOutput) Index(i pulumi.IntInput) WorkspacesWorkspaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspacesWorkspaceTag {
		return vs[0].([]WorkspacesWorkspaceTag)[vs[1].(int)]
	}).(WorkspacesWorkspaceTagOutput)
}

type GetAlertingRulesAlertingRule struct {
	// The annotations of the vmp alerting rule.
	Annotations []GetAlertingRulesAlertingRuleAnnotation `pulumi:"annotations"`
	// The create time of the vmp alerting rule.
	CreateTime string `pulumi:"createTime"`
	// The description of the vmp alerting rule.
	Description string `pulumi:"description"`
	// The id of the vmp alerting rule.
	Id string `pulumi:"id"`
	// The labels of the vmp alerting rule.
	Labels []GetAlertingRulesAlertingRuleLabel `pulumi:"labels"`
	// The alerting levels of the vmp alerting rule.
	Levels []GetAlertingRulesAlertingRuleLevel `pulumi:"levels"`
	// The name of vmp alerting rule. This field support fuzzy query.
	Name string `pulumi:"name"`
	// The notify group policy id of the vmp alerting rule.
	NotifyGroupPolicyId string `pulumi:"notifyGroupPolicyId"`
	// The notify policy id of the vmp alerting rule.
	NotifyPolicyId string `pulumi:"notifyPolicyId"`
	// The alerting query of the vmp alerting rule.
	Queries []GetAlertingRulesAlertingRuleQuery `pulumi:"queries"`
	// The status of vmp alerting rule. Valid values: `Running`, `Disabled`.
	Status string `pulumi:"status"`
	// The type of vmp alerting rule. Valid values: `vmp/PromQL`.
	Type string `pulumi:"type"`
	// The update time of the vmp alerting rule.
	UpdateTime string `pulumi:"updateTime"`
}

// GetAlertingRulesAlertingRuleInput is an input type that accepts GetAlertingRulesAlertingRuleArgs and GetAlertingRulesAlertingRuleOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleInput` via:
//
//	GetAlertingRulesAlertingRuleArgs{...}
type GetAlertingRulesAlertingRuleInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleOutput() GetAlertingRulesAlertingRuleOutput
	ToGetAlertingRulesAlertingRuleOutputWithContext(context.Context) GetAlertingRulesAlertingRuleOutput
}

type GetAlertingRulesAlertingRuleArgs struct {
	// The annotations of the vmp alerting rule.
	Annotations GetAlertingRulesAlertingRuleAnnotationArrayInput `pulumi:"annotations"`
	// The create time of the vmp alerting rule.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the vmp alerting rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the vmp alerting rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The labels of the vmp alerting rule.
	Labels GetAlertingRulesAlertingRuleLabelArrayInput `pulumi:"labels"`
	// The alerting levels of the vmp alerting rule.
	Levels GetAlertingRulesAlertingRuleLevelArrayInput `pulumi:"levels"`
	// The name of vmp alerting rule. This field support fuzzy query.
	Name pulumi.StringInput `pulumi:"name"`
	// The notify group policy id of the vmp alerting rule.
	NotifyGroupPolicyId pulumi.StringInput `pulumi:"notifyGroupPolicyId"`
	// The notify policy id of the vmp alerting rule.
	NotifyPolicyId pulumi.StringInput `pulumi:"notifyPolicyId"`
	// The alerting query of the vmp alerting rule.
	Queries GetAlertingRulesAlertingRuleQueryArrayInput `pulumi:"queries"`
	// The status of vmp alerting rule. Valid values: `Running`, `Disabled`.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of vmp alerting rule. Valid values: `vmp/PromQL`.
	Type pulumi.StringInput `pulumi:"type"`
	// The update time of the vmp alerting rule.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetAlertingRulesAlertingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRule)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleArgs) ToGetAlertingRulesAlertingRuleOutput() GetAlertingRulesAlertingRuleOutput {
	return i.ToGetAlertingRulesAlertingRuleOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleArgs) ToGetAlertingRulesAlertingRuleOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleOutput)
}

// GetAlertingRulesAlertingRuleArrayInput is an input type that accepts GetAlertingRulesAlertingRuleArray and GetAlertingRulesAlertingRuleArrayOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleArrayInput` via:
//
//	GetAlertingRulesAlertingRuleArray{ GetAlertingRulesAlertingRuleArgs{...} }
type GetAlertingRulesAlertingRuleArrayInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleArrayOutput() GetAlertingRulesAlertingRuleArrayOutput
	ToGetAlertingRulesAlertingRuleArrayOutputWithContext(context.Context) GetAlertingRulesAlertingRuleArrayOutput
}

type GetAlertingRulesAlertingRuleArray []GetAlertingRulesAlertingRuleInput

func (GetAlertingRulesAlertingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRule)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleArray) ToGetAlertingRulesAlertingRuleArrayOutput() GetAlertingRulesAlertingRuleArrayOutput {
	return i.ToGetAlertingRulesAlertingRuleArrayOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleArray) ToGetAlertingRulesAlertingRuleArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleArrayOutput)
}

type GetAlertingRulesAlertingRuleOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRule)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleOutput) ToGetAlertingRulesAlertingRuleOutput() GetAlertingRulesAlertingRuleOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleOutput) ToGetAlertingRulesAlertingRuleOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleOutput {
	return o
}

// The annotations of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) Annotations() GetAlertingRulesAlertingRuleAnnotationArrayOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) []GetAlertingRulesAlertingRuleAnnotation { return v.Annotations }).(GetAlertingRulesAlertingRuleAnnotationArrayOutput)
}

// The create time of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.Id }).(pulumi.StringOutput)
}

// The labels of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) Labels() GetAlertingRulesAlertingRuleLabelArrayOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) []GetAlertingRulesAlertingRuleLabel { return v.Labels }).(GetAlertingRulesAlertingRuleLabelArrayOutput)
}

// The alerting levels of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) Levels() GetAlertingRulesAlertingRuleLevelArrayOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) []GetAlertingRulesAlertingRuleLevel { return v.Levels }).(GetAlertingRulesAlertingRuleLevelArrayOutput)
}

// The name of vmp alerting rule. This field support fuzzy query.
func (o GetAlertingRulesAlertingRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.Name }).(pulumi.StringOutput)
}

// The notify group policy id of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) NotifyGroupPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.NotifyGroupPolicyId }).(pulumi.StringOutput)
}

// The notify policy id of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) NotifyPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.NotifyPolicyId }).(pulumi.StringOutput)
}

// The alerting query of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) Queries() GetAlertingRulesAlertingRuleQueryArrayOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) []GetAlertingRulesAlertingRuleQuery { return v.Queries }).(GetAlertingRulesAlertingRuleQueryArrayOutput)
}

// The status of vmp alerting rule. Valid values: `Running`, `Disabled`.
func (o GetAlertingRulesAlertingRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.Status }).(pulumi.StringOutput)
}

// The type of vmp alerting rule. Valid values: `vmp/PromQL`.
func (o GetAlertingRulesAlertingRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.Type }).(pulumi.StringOutput)
}

// The update time of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRule) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetAlertingRulesAlertingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRule)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleArrayOutput) ToGetAlertingRulesAlertingRuleArrayOutput() GetAlertingRulesAlertingRuleArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleArrayOutput) ToGetAlertingRulesAlertingRuleArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleArrayOutput) Index(i pulumi.IntInput) GetAlertingRulesAlertingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertingRulesAlertingRule {
		return vs[0].([]GetAlertingRulesAlertingRule)[vs[1].(int)]
	}).(GetAlertingRulesAlertingRuleOutput)
}

type GetAlertingRulesAlertingRuleAnnotation struct {
	// The name of vmp alerting rule. This field support fuzzy query.
	Name string `pulumi:"name"`
	// The value of the label.
	Value string `pulumi:"value"`
}

// GetAlertingRulesAlertingRuleAnnotationInput is an input type that accepts GetAlertingRulesAlertingRuleAnnotationArgs and GetAlertingRulesAlertingRuleAnnotationOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleAnnotationInput` via:
//
//	GetAlertingRulesAlertingRuleAnnotationArgs{...}
type GetAlertingRulesAlertingRuleAnnotationInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleAnnotationOutput() GetAlertingRulesAlertingRuleAnnotationOutput
	ToGetAlertingRulesAlertingRuleAnnotationOutputWithContext(context.Context) GetAlertingRulesAlertingRuleAnnotationOutput
}

type GetAlertingRulesAlertingRuleAnnotationArgs struct {
	// The name of vmp alerting rule. This field support fuzzy query.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertingRulesAlertingRuleAnnotationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRuleAnnotation)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleAnnotationArgs) ToGetAlertingRulesAlertingRuleAnnotationOutput() GetAlertingRulesAlertingRuleAnnotationOutput {
	return i.ToGetAlertingRulesAlertingRuleAnnotationOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleAnnotationArgs) ToGetAlertingRulesAlertingRuleAnnotationOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleAnnotationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleAnnotationOutput)
}

// GetAlertingRulesAlertingRuleAnnotationArrayInput is an input type that accepts GetAlertingRulesAlertingRuleAnnotationArray and GetAlertingRulesAlertingRuleAnnotationArrayOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleAnnotationArrayInput` via:
//
//	GetAlertingRulesAlertingRuleAnnotationArray{ GetAlertingRulesAlertingRuleAnnotationArgs{...} }
type GetAlertingRulesAlertingRuleAnnotationArrayInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleAnnotationArrayOutput() GetAlertingRulesAlertingRuleAnnotationArrayOutput
	ToGetAlertingRulesAlertingRuleAnnotationArrayOutputWithContext(context.Context) GetAlertingRulesAlertingRuleAnnotationArrayOutput
}

type GetAlertingRulesAlertingRuleAnnotationArray []GetAlertingRulesAlertingRuleAnnotationInput

func (GetAlertingRulesAlertingRuleAnnotationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRuleAnnotation)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleAnnotationArray) ToGetAlertingRulesAlertingRuleAnnotationArrayOutput() GetAlertingRulesAlertingRuleAnnotationArrayOutput {
	return i.ToGetAlertingRulesAlertingRuleAnnotationArrayOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleAnnotationArray) ToGetAlertingRulesAlertingRuleAnnotationArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleAnnotationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleAnnotationArrayOutput)
}

type GetAlertingRulesAlertingRuleAnnotationOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleAnnotationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRuleAnnotation)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleAnnotationOutput) ToGetAlertingRulesAlertingRuleAnnotationOutput() GetAlertingRulesAlertingRuleAnnotationOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleAnnotationOutput) ToGetAlertingRulesAlertingRuleAnnotationOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleAnnotationOutput {
	return o
}

// The name of vmp alerting rule. This field support fuzzy query.
func (o GetAlertingRulesAlertingRuleAnnotationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleAnnotation) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the label.
func (o GetAlertingRulesAlertingRuleAnnotationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleAnnotation) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertingRulesAlertingRuleAnnotationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleAnnotationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRuleAnnotation)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleAnnotationArrayOutput) ToGetAlertingRulesAlertingRuleAnnotationArrayOutput() GetAlertingRulesAlertingRuleAnnotationArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleAnnotationArrayOutput) ToGetAlertingRulesAlertingRuleAnnotationArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleAnnotationArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleAnnotationArrayOutput) Index(i pulumi.IntInput) GetAlertingRulesAlertingRuleAnnotationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertingRulesAlertingRuleAnnotation {
		return vs[0].([]GetAlertingRulesAlertingRuleAnnotation)[vs[1].(int)]
	}).(GetAlertingRulesAlertingRuleAnnotationOutput)
}

type GetAlertingRulesAlertingRuleLabel struct {
	// The name of the label.
	Key string `pulumi:"key"`
	// The value of the label.
	Value string `pulumi:"value"`
}

// GetAlertingRulesAlertingRuleLabelInput is an input type that accepts GetAlertingRulesAlertingRuleLabelArgs and GetAlertingRulesAlertingRuleLabelOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleLabelInput` via:
//
//	GetAlertingRulesAlertingRuleLabelArgs{...}
type GetAlertingRulesAlertingRuleLabelInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleLabelOutput() GetAlertingRulesAlertingRuleLabelOutput
	ToGetAlertingRulesAlertingRuleLabelOutputWithContext(context.Context) GetAlertingRulesAlertingRuleLabelOutput
}

type GetAlertingRulesAlertingRuleLabelArgs struct {
	// The name of the label.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertingRulesAlertingRuleLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRuleLabel)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleLabelArgs) ToGetAlertingRulesAlertingRuleLabelOutput() GetAlertingRulesAlertingRuleLabelOutput {
	return i.ToGetAlertingRulesAlertingRuleLabelOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleLabelArgs) ToGetAlertingRulesAlertingRuleLabelOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleLabelOutput)
}

// GetAlertingRulesAlertingRuleLabelArrayInput is an input type that accepts GetAlertingRulesAlertingRuleLabelArray and GetAlertingRulesAlertingRuleLabelArrayOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleLabelArrayInput` via:
//
//	GetAlertingRulesAlertingRuleLabelArray{ GetAlertingRulesAlertingRuleLabelArgs{...} }
type GetAlertingRulesAlertingRuleLabelArrayInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleLabelArrayOutput() GetAlertingRulesAlertingRuleLabelArrayOutput
	ToGetAlertingRulesAlertingRuleLabelArrayOutputWithContext(context.Context) GetAlertingRulesAlertingRuleLabelArrayOutput
}

type GetAlertingRulesAlertingRuleLabelArray []GetAlertingRulesAlertingRuleLabelInput

func (GetAlertingRulesAlertingRuleLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRuleLabel)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleLabelArray) ToGetAlertingRulesAlertingRuleLabelArrayOutput() GetAlertingRulesAlertingRuleLabelArrayOutput {
	return i.ToGetAlertingRulesAlertingRuleLabelArrayOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleLabelArray) ToGetAlertingRulesAlertingRuleLabelArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleLabelArrayOutput)
}

type GetAlertingRulesAlertingRuleLabelOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRuleLabel)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleLabelOutput) ToGetAlertingRulesAlertingRuleLabelOutput() GetAlertingRulesAlertingRuleLabelOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleLabelOutput) ToGetAlertingRulesAlertingRuleLabelOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleLabelOutput {
	return o
}

// The name of the label.
func (o GetAlertingRulesAlertingRuleLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the label.
func (o GetAlertingRulesAlertingRuleLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertingRulesAlertingRuleLabelArrayOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRuleLabel)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleLabelArrayOutput) ToGetAlertingRulesAlertingRuleLabelArrayOutput() GetAlertingRulesAlertingRuleLabelArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleLabelArrayOutput) ToGetAlertingRulesAlertingRuleLabelArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleLabelArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleLabelArrayOutput) Index(i pulumi.IntInput) GetAlertingRulesAlertingRuleLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertingRulesAlertingRuleLabel {
		return vs[0].([]GetAlertingRulesAlertingRuleLabel)[vs[1].(int)]
	}).(GetAlertingRulesAlertingRuleLabelOutput)
}

type GetAlertingRulesAlertingRuleLevel struct {
	// The comparator of the vmp alerting rule.
	Comparator string `pulumi:"comparator"`
	// The duration of the alerting rule.
	For string `pulumi:"for"`
	// The level of the vmp alerting rule.
	Level string `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold float64 `pulumi:"threshold"`
}

// GetAlertingRulesAlertingRuleLevelInput is an input type that accepts GetAlertingRulesAlertingRuleLevelArgs and GetAlertingRulesAlertingRuleLevelOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleLevelInput` via:
//
//	GetAlertingRulesAlertingRuleLevelArgs{...}
type GetAlertingRulesAlertingRuleLevelInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleLevelOutput() GetAlertingRulesAlertingRuleLevelOutput
	ToGetAlertingRulesAlertingRuleLevelOutputWithContext(context.Context) GetAlertingRulesAlertingRuleLevelOutput
}

type GetAlertingRulesAlertingRuleLevelArgs struct {
	// The comparator of the vmp alerting rule.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// The duration of the alerting rule.
	For pulumi.StringInput `pulumi:"for"`
	// The level of the vmp alerting rule.
	Level pulumi.StringInput `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (GetAlertingRulesAlertingRuleLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRuleLevel)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleLevelArgs) ToGetAlertingRulesAlertingRuleLevelOutput() GetAlertingRulesAlertingRuleLevelOutput {
	return i.ToGetAlertingRulesAlertingRuleLevelOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleLevelArgs) ToGetAlertingRulesAlertingRuleLevelOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleLevelOutput)
}

// GetAlertingRulesAlertingRuleLevelArrayInput is an input type that accepts GetAlertingRulesAlertingRuleLevelArray and GetAlertingRulesAlertingRuleLevelArrayOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleLevelArrayInput` via:
//
//	GetAlertingRulesAlertingRuleLevelArray{ GetAlertingRulesAlertingRuleLevelArgs{...} }
type GetAlertingRulesAlertingRuleLevelArrayInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleLevelArrayOutput() GetAlertingRulesAlertingRuleLevelArrayOutput
	ToGetAlertingRulesAlertingRuleLevelArrayOutputWithContext(context.Context) GetAlertingRulesAlertingRuleLevelArrayOutput
}

type GetAlertingRulesAlertingRuleLevelArray []GetAlertingRulesAlertingRuleLevelInput

func (GetAlertingRulesAlertingRuleLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRuleLevel)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleLevelArray) ToGetAlertingRulesAlertingRuleLevelArrayOutput() GetAlertingRulesAlertingRuleLevelArrayOutput {
	return i.ToGetAlertingRulesAlertingRuleLevelArrayOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleLevelArray) ToGetAlertingRulesAlertingRuleLevelArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleLevelArrayOutput)
}

type GetAlertingRulesAlertingRuleLevelOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRuleLevel)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleLevelOutput) ToGetAlertingRulesAlertingRuleLevelOutput() GetAlertingRulesAlertingRuleLevelOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleLevelOutput) ToGetAlertingRulesAlertingRuleLevelOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleLevelOutput {
	return o
}

// The comparator of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleLevelOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleLevel) string { return v.Comparator }).(pulumi.StringOutput)
}

// The duration of the alerting rule.
func (o GetAlertingRulesAlertingRuleLevelOutput) For() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleLevel) string { return v.For }).(pulumi.StringOutput)
}

// The level of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The threshold of the vmp alerting rule.
func (o GetAlertingRulesAlertingRuleLevelOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleLevel) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type GetAlertingRulesAlertingRuleLevelArrayOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRuleLevel)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleLevelArrayOutput) ToGetAlertingRulesAlertingRuleLevelArrayOutput() GetAlertingRulesAlertingRuleLevelArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleLevelArrayOutput) ToGetAlertingRulesAlertingRuleLevelArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleLevelArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleLevelArrayOutput) Index(i pulumi.IntInput) GetAlertingRulesAlertingRuleLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertingRulesAlertingRuleLevel {
		return vs[0].([]GetAlertingRulesAlertingRuleLevel)[vs[1].(int)]
	}).(GetAlertingRulesAlertingRuleLevelOutput)
}

type GetAlertingRulesAlertingRuleQuery struct {
	// The prom ql of query.
	PromQl string `pulumi:"promQl"`
	// The workspace id of vmp alerting rule.
	WorkspaceId string `pulumi:"workspaceId"`
}

// GetAlertingRulesAlertingRuleQueryInput is an input type that accepts GetAlertingRulesAlertingRuleQueryArgs and GetAlertingRulesAlertingRuleQueryOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleQueryInput` via:
//
//	GetAlertingRulesAlertingRuleQueryArgs{...}
type GetAlertingRulesAlertingRuleQueryInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleQueryOutput() GetAlertingRulesAlertingRuleQueryOutput
	ToGetAlertingRulesAlertingRuleQueryOutputWithContext(context.Context) GetAlertingRulesAlertingRuleQueryOutput
}

type GetAlertingRulesAlertingRuleQueryArgs struct {
	// The prom ql of query.
	PromQl pulumi.StringInput `pulumi:"promQl"`
	// The workspace id of vmp alerting rule.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (GetAlertingRulesAlertingRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRuleQuery)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleQueryArgs) ToGetAlertingRulesAlertingRuleQueryOutput() GetAlertingRulesAlertingRuleQueryOutput {
	return i.ToGetAlertingRulesAlertingRuleQueryOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleQueryArgs) ToGetAlertingRulesAlertingRuleQueryOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleQueryOutput)
}

// GetAlertingRulesAlertingRuleQueryArrayInput is an input type that accepts GetAlertingRulesAlertingRuleQueryArray and GetAlertingRulesAlertingRuleQueryArrayOutput values.
// You can construct a concrete instance of `GetAlertingRulesAlertingRuleQueryArrayInput` via:
//
//	GetAlertingRulesAlertingRuleQueryArray{ GetAlertingRulesAlertingRuleQueryArgs{...} }
type GetAlertingRulesAlertingRuleQueryArrayInput interface {
	pulumi.Input

	ToGetAlertingRulesAlertingRuleQueryArrayOutput() GetAlertingRulesAlertingRuleQueryArrayOutput
	ToGetAlertingRulesAlertingRuleQueryArrayOutputWithContext(context.Context) GetAlertingRulesAlertingRuleQueryArrayOutput
}

type GetAlertingRulesAlertingRuleQueryArray []GetAlertingRulesAlertingRuleQueryInput

func (GetAlertingRulesAlertingRuleQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRuleQuery)(nil)).Elem()
}

func (i GetAlertingRulesAlertingRuleQueryArray) ToGetAlertingRulesAlertingRuleQueryArrayOutput() GetAlertingRulesAlertingRuleQueryArrayOutput {
	return i.ToGetAlertingRulesAlertingRuleQueryArrayOutputWithContext(context.Background())
}

func (i GetAlertingRulesAlertingRuleQueryArray) ToGetAlertingRulesAlertingRuleQueryArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingRulesAlertingRuleQueryArrayOutput)
}

type GetAlertingRulesAlertingRuleQueryOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingRulesAlertingRuleQuery)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleQueryOutput) ToGetAlertingRulesAlertingRuleQueryOutput() GetAlertingRulesAlertingRuleQueryOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleQueryOutput) ToGetAlertingRulesAlertingRuleQueryOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleQueryOutput {
	return o
}

// The prom ql of query.
func (o GetAlertingRulesAlertingRuleQueryOutput) PromQl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleQuery) string { return v.PromQl }).(pulumi.StringOutput)
}

// The workspace id of vmp alerting rule.
func (o GetAlertingRulesAlertingRuleQueryOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingRulesAlertingRuleQuery) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type GetAlertingRulesAlertingRuleQueryArrayOutput struct{ *pulumi.OutputState }

func (GetAlertingRulesAlertingRuleQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingRulesAlertingRuleQuery)(nil)).Elem()
}

func (o GetAlertingRulesAlertingRuleQueryArrayOutput) ToGetAlertingRulesAlertingRuleQueryArrayOutput() GetAlertingRulesAlertingRuleQueryArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleQueryArrayOutput) ToGetAlertingRulesAlertingRuleQueryArrayOutputWithContext(ctx context.Context) GetAlertingRulesAlertingRuleQueryArrayOutput {
	return o
}

func (o GetAlertingRulesAlertingRuleQueryArrayOutput) Index(i pulumi.IntInput) GetAlertingRulesAlertingRuleQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertingRulesAlertingRuleQuery {
		return vs[0].([]GetAlertingRulesAlertingRuleQuery)[vs[1].(int)]
	}).(GetAlertingRulesAlertingRuleQueryOutput)
}

type GetAlertsAlert struct {
	// The id of the vmp alerting rule.
	AlertingRuleId string `pulumi:"alertingRuleId"`
	// The alerting query of the vmp alerting rule.
	AlertingRuleQueries []GetAlertsAlertAlertingRuleQuery `pulumi:"alertingRuleQueries"`
	// The type of the vmp alerting rule.
	AlertingRuleType string `pulumi:"alertingRuleType"`
	// The current level of the vmp alert.
	CurrentLevel string `pulumi:"currentLevel"`
	// The status of vmp alert. Valid values: `Pending`, `Active`, `Resolved`, `Disabled`.
	CurrentPhase string `pulumi:"currentPhase"`
	// The id of the vmp alert.
	Id string `pulumi:"id"`
	// The start time of the vmp alert. Format: RFC3339.
	InitialAlertTimestamp string `pulumi:"initialAlertTimestamp"`
	// The last time of the vmp alert. Format: RFC3339.
	LastAlertTimestamp string `pulumi:"lastAlertTimestamp"`
	// The alerting levels of the vmp alert.
	Levels []GetAlertsAlertLevel `pulumi:"levels"`
	// The end time of the vmp alert. Format: RFC3339.
	ResolveAlertTimestamp string `pulumi:"resolveAlertTimestamp"`
	// The alerting resource of the vmp alert.
	Resources []GetAlertsAlertResource `pulumi:"resources"`
}

// GetAlertsAlertInput is an input type that accepts GetAlertsAlertArgs and GetAlertsAlertOutput values.
// You can construct a concrete instance of `GetAlertsAlertInput` via:
//
//	GetAlertsAlertArgs{...}
type GetAlertsAlertInput interface {
	pulumi.Input

	ToGetAlertsAlertOutput() GetAlertsAlertOutput
	ToGetAlertsAlertOutputWithContext(context.Context) GetAlertsAlertOutput
}

type GetAlertsAlertArgs struct {
	// The id of the vmp alerting rule.
	AlertingRuleId pulumi.StringInput `pulumi:"alertingRuleId"`
	// The alerting query of the vmp alerting rule.
	AlertingRuleQueries GetAlertsAlertAlertingRuleQueryArrayInput `pulumi:"alertingRuleQueries"`
	// The type of the vmp alerting rule.
	AlertingRuleType pulumi.StringInput `pulumi:"alertingRuleType"`
	// The current level of the vmp alert.
	CurrentLevel pulumi.StringInput `pulumi:"currentLevel"`
	// The status of vmp alert. Valid values: `Pending`, `Active`, `Resolved`, `Disabled`.
	CurrentPhase pulumi.StringInput `pulumi:"currentPhase"`
	// The id of the vmp alert.
	Id pulumi.StringInput `pulumi:"id"`
	// The start time of the vmp alert. Format: RFC3339.
	InitialAlertTimestamp pulumi.StringInput `pulumi:"initialAlertTimestamp"`
	// The last time of the vmp alert. Format: RFC3339.
	LastAlertTimestamp pulumi.StringInput `pulumi:"lastAlertTimestamp"`
	// The alerting levels of the vmp alert.
	Levels GetAlertsAlertLevelArrayInput `pulumi:"levels"`
	// The end time of the vmp alert. Format: RFC3339.
	ResolveAlertTimestamp pulumi.StringInput `pulumi:"resolveAlertTimestamp"`
	// The alerting resource of the vmp alert.
	Resources GetAlertsAlertResourceArrayInput `pulumi:"resources"`
}

func (GetAlertsAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlert)(nil)).Elem()
}

func (i GetAlertsAlertArgs) ToGetAlertsAlertOutput() GetAlertsAlertOutput {
	return i.ToGetAlertsAlertOutputWithContext(context.Background())
}

func (i GetAlertsAlertArgs) ToGetAlertsAlertOutputWithContext(ctx context.Context) GetAlertsAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertOutput)
}

// GetAlertsAlertArrayInput is an input type that accepts GetAlertsAlertArray and GetAlertsAlertArrayOutput values.
// You can construct a concrete instance of `GetAlertsAlertArrayInput` via:
//
//	GetAlertsAlertArray{ GetAlertsAlertArgs{...} }
type GetAlertsAlertArrayInput interface {
	pulumi.Input

	ToGetAlertsAlertArrayOutput() GetAlertsAlertArrayOutput
	ToGetAlertsAlertArrayOutputWithContext(context.Context) GetAlertsAlertArrayOutput
}

type GetAlertsAlertArray []GetAlertsAlertInput

func (GetAlertsAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlert)(nil)).Elem()
}

func (i GetAlertsAlertArray) ToGetAlertsAlertArrayOutput() GetAlertsAlertArrayOutput {
	return i.ToGetAlertsAlertArrayOutputWithContext(context.Background())
}

func (i GetAlertsAlertArray) ToGetAlertsAlertArrayOutputWithContext(ctx context.Context) GetAlertsAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertArrayOutput)
}

type GetAlertsAlertOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlert)(nil)).Elem()
}

func (o GetAlertsAlertOutput) ToGetAlertsAlertOutput() GetAlertsAlertOutput {
	return o
}

func (o GetAlertsAlertOutput) ToGetAlertsAlertOutputWithContext(ctx context.Context) GetAlertsAlertOutput {
	return o
}

// The id of the vmp alerting rule.
func (o GetAlertsAlertOutput) AlertingRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlert) string { return v.AlertingRuleId }).(pulumi.StringOutput)
}

// The alerting query of the vmp alerting rule.
func (o GetAlertsAlertOutput) AlertingRuleQueries() GetAlertsAlertAlertingRuleQueryArrayOutput {
	return o.ApplyT(func(v GetAlertsAlert) []GetAlertsAlertAlertingRuleQuery { return v.AlertingRuleQueries }).(GetAlertsAlertAlertingRuleQueryArrayOutput)
}

// The type of the vmp alerting rule.
func (o GetAlertsAlertOutput) AlertingRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlert) string { return v.AlertingRuleType }).(pulumi.StringOutput)
}

// The current level of the vmp alert.
func (o GetAlertsAlertOutput) CurrentLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlert) string { return v.CurrentLevel }).(pulumi.StringOutput)
}

// The status of vmp alert. Valid values: `Pending`, `Active`, `Resolved`, `Disabled`.
func (o GetAlertsAlertOutput) CurrentPhase() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlert) string { return v.CurrentPhase }).(pulumi.StringOutput)
}

// The id of the vmp alert.
func (o GetAlertsAlertOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlert) string { return v.Id }).(pulumi.StringOutput)
}

// The start time of the vmp alert. Format: RFC3339.
func (o GetAlertsAlertOutput) InitialAlertTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlert) string { return v.InitialAlertTimestamp }).(pulumi.StringOutput)
}

// The last time of the vmp alert. Format: RFC3339.
func (o GetAlertsAlertOutput) LastAlertTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlert) string { return v.LastAlertTimestamp }).(pulumi.StringOutput)
}

// The alerting levels of the vmp alert.
func (o GetAlertsAlertOutput) Levels() GetAlertsAlertLevelArrayOutput {
	return o.ApplyT(func(v GetAlertsAlert) []GetAlertsAlertLevel { return v.Levels }).(GetAlertsAlertLevelArrayOutput)
}

// The end time of the vmp alert. Format: RFC3339.
func (o GetAlertsAlertOutput) ResolveAlertTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlert) string { return v.ResolveAlertTimestamp }).(pulumi.StringOutput)
}

// The alerting resource of the vmp alert.
func (o GetAlertsAlertOutput) Resources() GetAlertsAlertResourceArrayOutput {
	return o.ApplyT(func(v GetAlertsAlert) []GetAlertsAlertResource { return v.Resources }).(GetAlertsAlertResourceArrayOutput)
}

type GetAlertsAlertArrayOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlert)(nil)).Elem()
}

func (o GetAlertsAlertArrayOutput) ToGetAlertsAlertArrayOutput() GetAlertsAlertArrayOutput {
	return o
}

func (o GetAlertsAlertArrayOutput) ToGetAlertsAlertArrayOutputWithContext(ctx context.Context) GetAlertsAlertArrayOutput {
	return o
}

func (o GetAlertsAlertArrayOutput) Index(i pulumi.IntInput) GetAlertsAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertsAlert {
		return vs[0].([]GetAlertsAlert)[vs[1].(int)]
	}).(GetAlertsAlertOutput)
}

type GetAlertsAlertAlertingRuleQuery struct {
	// The prom ql of query.
	PromQl string `pulumi:"promQl"`
	// The id of the workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// GetAlertsAlertAlertingRuleQueryInput is an input type that accepts GetAlertsAlertAlertingRuleQueryArgs and GetAlertsAlertAlertingRuleQueryOutput values.
// You can construct a concrete instance of `GetAlertsAlertAlertingRuleQueryInput` via:
//
//	GetAlertsAlertAlertingRuleQueryArgs{...}
type GetAlertsAlertAlertingRuleQueryInput interface {
	pulumi.Input

	ToGetAlertsAlertAlertingRuleQueryOutput() GetAlertsAlertAlertingRuleQueryOutput
	ToGetAlertsAlertAlertingRuleQueryOutputWithContext(context.Context) GetAlertsAlertAlertingRuleQueryOutput
}

type GetAlertsAlertAlertingRuleQueryArgs struct {
	// The prom ql of query.
	PromQl pulumi.StringInput `pulumi:"promQl"`
	// The id of the workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (GetAlertsAlertAlertingRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlertAlertingRuleQuery)(nil)).Elem()
}

func (i GetAlertsAlertAlertingRuleQueryArgs) ToGetAlertsAlertAlertingRuleQueryOutput() GetAlertsAlertAlertingRuleQueryOutput {
	return i.ToGetAlertsAlertAlertingRuleQueryOutputWithContext(context.Background())
}

func (i GetAlertsAlertAlertingRuleQueryArgs) ToGetAlertsAlertAlertingRuleQueryOutputWithContext(ctx context.Context) GetAlertsAlertAlertingRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertAlertingRuleQueryOutput)
}

// GetAlertsAlertAlertingRuleQueryArrayInput is an input type that accepts GetAlertsAlertAlertingRuleQueryArray and GetAlertsAlertAlertingRuleQueryArrayOutput values.
// You can construct a concrete instance of `GetAlertsAlertAlertingRuleQueryArrayInput` via:
//
//	GetAlertsAlertAlertingRuleQueryArray{ GetAlertsAlertAlertingRuleQueryArgs{...} }
type GetAlertsAlertAlertingRuleQueryArrayInput interface {
	pulumi.Input

	ToGetAlertsAlertAlertingRuleQueryArrayOutput() GetAlertsAlertAlertingRuleQueryArrayOutput
	ToGetAlertsAlertAlertingRuleQueryArrayOutputWithContext(context.Context) GetAlertsAlertAlertingRuleQueryArrayOutput
}

type GetAlertsAlertAlertingRuleQueryArray []GetAlertsAlertAlertingRuleQueryInput

func (GetAlertsAlertAlertingRuleQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlertAlertingRuleQuery)(nil)).Elem()
}

func (i GetAlertsAlertAlertingRuleQueryArray) ToGetAlertsAlertAlertingRuleQueryArrayOutput() GetAlertsAlertAlertingRuleQueryArrayOutput {
	return i.ToGetAlertsAlertAlertingRuleQueryArrayOutputWithContext(context.Background())
}

func (i GetAlertsAlertAlertingRuleQueryArray) ToGetAlertsAlertAlertingRuleQueryArrayOutputWithContext(ctx context.Context) GetAlertsAlertAlertingRuleQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertAlertingRuleQueryArrayOutput)
}

type GetAlertsAlertAlertingRuleQueryOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertAlertingRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlertAlertingRuleQuery)(nil)).Elem()
}

func (o GetAlertsAlertAlertingRuleQueryOutput) ToGetAlertsAlertAlertingRuleQueryOutput() GetAlertsAlertAlertingRuleQueryOutput {
	return o
}

func (o GetAlertsAlertAlertingRuleQueryOutput) ToGetAlertsAlertAlertingRuleQueryOutputWithContext(ctx context.Context) GetAlertsAlertAlertingRuleQueryOutput {
	return o
}

// The prom ql of query.
func (o GetAlertsAlertAlertingRuleQueryOutput) PromQl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlertAlertingRuleQuery) string { return v.PromQl }).(pulumi.StringOutput)
}

// The id of the workspace.
func (o GetAlertsAlertAlertingRuleQueryOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlertAlertingRuleQuery) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type GetAlertsAlertAlertingRuleQueryArrayOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertAlertingRuleQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlertAlertingRuleQuery)(nil)).Elem()
}

func (o GetAlertsAlertAlertingRuleQueryArrayOutput) ToGetAlertsAlertAlertingRuleQueryArrayOutput() GetAlertsAlertAlertingRuleQueryArrayOutput {
	return o
}

func (o GetAlertsAlertAlertingRuleQueryArrayOutput) ToGetAlertsAlertAlertingRuleQueryArrayOutputWithContext(ctx context.Context) GetAlertsAlertAlertingRuleQueryArrayOutput {
	return o
}

func (o GetAlertsAlertAlertingRuleQueryArrayOutput) Index(i pulumi.IntInput) GetAlertsAlertAlertingRuleQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertsAlertAlertingRuleQuery {
		return vs[0].([]GetAlertsAlertAlertingRuleQuery)[vs[1].(int)]
	}).(GetAlertsAlertAlertingRuleQueryOutput)
}

type GetAlertsAlertLevel struct {
	// The comparator of the vmp alerting rule.
	Comparator string `pulumi:"comparator"`
	// The duration of the alerting rule.
	For string `pulumi:"for"`
	// The level of vmp alert. Valid values: `P0`, `P1`, `P2`.
	Level string `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold float64 `pulumi:"threshold"`
}

// GetAlertsAlertLevelInput is an input type that accepts GetAlertsAlertLevelArgs and GetAlertsAlertLevelOutput values.
// You can construct a concrete instance of `GetAlertsAlertLevelInput` via:
//
//	GetAlertsAlertLevelArgs{...}
type GetAlertsAlertLevelInput interface {
	pulumi.Input

	ToGetAlertsAlertLevelOutput() GetAlertsAlertLevelOutput
	ToGetAlertsAlertLevelOutputWithContext(context.Context) GetAlertsAlertLevelOutput
}

type GetAlertsAlertLevelArgs struct {
	// The comparator of the vmp alerting rule.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// The duration of the alerting rule.
	For pulumi.StringInput `pulumi:"for"`
	// The level of vmp alert. Valid values: `P0`, `P1`, `P2`.
	Level pulumi.StringInput `pulumi:"level"`
	// The threshold of the vmp alerting rule.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (GetAlertsAlertLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlertLevel)(nil)).Elem()
}

func (i GetAlertsAlertLevelArgs) ToGetAlertsAlertLevelOutput() GetAlertsAlertLevelOutput {
	return i.ToGetAlertsAlertLevelOutputWithContext(context.Background())
}

func (i GetAlertsAlertLevelArgs) ToGetAlertsAlertLevelOutputWithContext(ctx context.Context) GetAlertsAlertLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertLevelOutput)
}

// GetAlertsAlertLevelArrayInput is an input type that accepts GetAlertsAlertLevelArray and GetAlertsAlertLevelArrayOutput values.
// You can construct a concrete instance of `GetAlertsAlertLevelArrayInput` via:
//
//	GetAlertsAlertLevelArray{ GetAlertsAlertLevelArgs{...} }
type GetAlertsAlertLevelArrayInput interface {
	pulumi.Input

	ToGetAlertsAlertLevelArrayOutput() GetAlertsAlertLevelArrayOutput
	ToGetAlertsAlertLevelArrayOutputWithContext(context.Context) GetAlertsAlertLevelArrayOutput
}

type GetAlertsAlertLevelArray []GetAlertsAlertLevelInput

func (GetAlertsAlertLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlertLevel)(nil)).Elem()
}

func (i GetAlertsAlertLevelArray) ToGetAlertsAlertLevelArrayOutput() GetAlertsAlertLevelArrayOutput {
	return i.ToGetAlertsAlertLevelArrayOutputWithContext(context.Background())
}

func (i GetAlertsAlertLevelArray) ToGetAlertsAlertLevelArrayOutputWithContext(ctx context.Context) GetAlertsAlertLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertLevelArrayOutput)
}

type GetAlertsAlertLevelOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlertLevel)(nil)).Elem()
}

func (o GetAlertsAlertLevelOutput) ToGetAlertsAlertLevelOutput() GetAlertsAlertLevelOutput {
	return o
}

func (o GetAlertsAlertLevelOutput) ToGetAlertsAlertLevelOutputWithContext(ctx context.Context) GetAlertsAlertLevelOutput {
	return o
}

// The comparator of the vmp alerting rule.
func (o GetAlertsAlertLevelOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlertLevel) string { return v.Comparator }).(pulumi.StringOutput)
}

// The duration of the alerting rule.
func (o GetAlertsAlertLevelOutput) For() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlertLevel) string { return v.For }).(pulumi.StringOutput)
}

// The level of vmp alert. Valid values: `P0`, `P1`, `P2`.
func (o GetAlertsAlertLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlertLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The threshold of the vmp alerting rule.
func (o GetAlertsAlertLevelOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetAlertsAlertLevel) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type GetAlertsAlertLevelArrayOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlertLevel)(nil)).Elem()
}

func (o GetAlertsAlertLevelArrayOutput) ToGetAlertsAlertLevelArrayOutput() GetAlertsAlertLevelArrayOutput {
	return o
}

func (o GetAlertsAlertLevelArrayOutput) ToGetAlertsAlertLevelArrayOutputWithContext(ctx context.Context) GetAlertsAlertLevelArrayOutput {
	return o
}

func (o GetAlertsAlertLevelArrayOutput) Index(i pulumi.IntInput) GetAlertsAlertLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertsAlertLevel {
		return vs[0].([]GetAlertsAlertLevel)[vs[1].(int)]
	}).(GetAlertsAlertLevelOutput)
}

type GetAlertsAlertResource struct {
	// The labels of alerting resource.
	Labels []GetAlertsAlertResourceLabel `pulumi:"labels"`
}

// GetAlertsAlertResourceInput is an input type that accepts GetAlertsAlertResourceArgs and GetAlertsAlertResourceOutput values.
// You can construct a concrete instance of `GetAlertsAlertResourceInput` via:
//
//	GetAlertsAlertResourceArgs{...}
type GetAlertsAlertResourceInput interface {
	pulumi.Input

	ToGetAlertsAlertResourceOutput() GetAlertsAlertResourceOutput
	ToGetAlertsAlertResourceOutputWithContext(context.Context) GetAlertsAlertResourceOutput
}

type GetAlertsAlertResourceArgs struct {
	// The labels of alerting resource.
	Labels GetAlertsAlertResourceLabelArrayInput `pulumi:"labels"`
}

func (GetAlertsAlertResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlertResource)(nil)).Elem()
}

func (i GetAlertsAlertResourceArgs) ToGetAlertsAlertResourceOutput() GetAlertsAlertResourceOutput {
	return i.ToGetAlertsAlertResourceOutputWithContext(context.Background())
}

func (i GetAlertsAlertResourceArgs) ToGetAlertsAlertResourceOutputWithContext(ctx context.Context) GetAlertsAlertResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertResourceOutput)
}

// GetAlertsAlertResourceArrayInput is an input type that accepts GetAlertsAlertResourceArray and GetAlertsAlertResourceArrayOutput values.
// You can construct a concrete instance of `GetAlertsAlertResourceArrayInput` via:
//
//	GetAlertsAlertResourceArray{ GetAlertsAlertResourceArgs{...} }
type GetAlertsAlertResourceArrayInput interface {
	pulumi.Input

	ToGetAlertsAlertResourceArrayOutput() GetAlertsAlertResourceArrayOutput
	ToGetAlertsAlertResourceArrayOutputWithContext(context.Context) GetAlertsAlertResourceArrayOutput
}

type GetAlertsAlertResourceArray []GetAlertsAlertResourceInput

func (GetAlertsAlertResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlertResource)(nil)).Elem()
}

func (i GetAlertsAlertResourceArray) ToGetAlertsAlertResourceArrayOutput() GetAlertsAlertResourceArrayOutput {
	return i.ToGetAlertsAlertResourceArrayOutputWithContext(context.Background())
}

func (i GetAlertsAlertResourceArray) ToGetAlertsAlertResourceArrayOutputWithContext(ctx context.Context) GetAlertsAlertResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertResourceArrayOutput)
}

type GetAlertsAlertResourceOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlertResource)(nil)).Elem()
}

func (o GetAlertsAlertResourceOutput) ToGetAlertsAlertResourceOutput() GetAlertsAlertResourceOutput {
	return o
}

func (o GetAlertsAlertResourceOutput) ToGetAlertsAlertResourceOutputWithContext(ctx context.Context) GetAlertsAlertResourceOutput {
	return o
}

// The labels of alerting resource.
func (o GetAlertsAlertResourceOutput) Labels() GetAlertsAlertResourceLabelArrayOutput {
	return o.ApplyT(func(v GetAlertsAlertResource) []GetAlertsAlertResourceLabel { return v.Labels }).(GetAlertsAlertResourceLabelArrayOutput)
}

type GetAlertsAlertResourceArrayOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlertResource)(nil)).Elem()
}

func (o GetAlertsAlertResourceArrayOutput) ToGetAlertsAlertResourceArrayOutput() GetAlertsAlertResourceArrayOutput {
	return o
}

func (o GetAlertsAlertResourceArrayOutput) ToGetAlertsAlertResourceArrayOutputWithContext(ctx context.Context) GetAlertsAlertResourceArrayOutput {
	return o
}

func (o GetAlertsAlertResourceArrayOutput) Index(i pulumi.IntInput) GetAlertsAlertResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertsAlertResource {
		return vs[0].([]GetAlertsAlertResource)[vs[1].(int)]
	}).(GetAlertsAlertResourceOutput)
}

type GetAlertsAlertResourceLabel struct {
	// The key of the label.
	Key string `pulumi:"key"`
	// The value of the label.
	Value string `pulumi:"value"`
}

// GetAlertsAlertResourceLabelInput is an input type that accepts GetAlertsAlertResourceLabelArgs and GetAlertsAlertResourceLabelOutput values.
// You can construct a concrete instance of `GetAlertsAlertResourceLabelInput` via:
//
//	GetAlertsAlertResourceLabelArgs{...}
type GetAlertsAlertResourceLabelInput interface {
	pulumi.Input

	ToGetAlertsAlertResourceLabelOutput() GetAlertsAlertResourceLabelOutput
	ToGetAlertsAlertResourceLabelOutputWithContext(context.Context) GetAlertsAlertResourceLabelOutput
}

type GetAlertsAlertResourceLabelArgs struct {
	// The key of the label.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertsAlertResourceLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlertResourceLabel)(nil)).Elem()
}

func (i GetAlertsAlertResourceLabelArgs) ToGetAlertsAlertResourceLabelOutput() GetAlertsAlertResourceLabelOutput {
	return i.ToGetAlertsAlertResourceLabelOutputWithContext(context.Background())
}

func (i GetAlertsAlertResourceLabelArgs) ToGetAlertsAlertResourceLabelOutputWithContext(ctx context.Context) GetAlertsAlertResourceLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertResourceLabelOutput)
}

// GetAlertsAlertResourceLabelArrayInput is an input type that accepts GetAlertsAlertResourceLabelArray and GetAlertsAlertResourceLabelArrayOutput values.
// You can construct a concrete instance of `GetAlertsAlertResourceLabelArrayInput` via:
//
//	GetAlertsAlertResourceLabelArray{ GetAlertsAlertResourceLabelArgs{...} }
type GetAlertsAlertResourceLabelArrayInput interface {
	pulumi.Input

	ToGetAlertsAlertResourceLabelArrayOutput() GetAlertsAlertResourceLabelArrayOutput
	ToGetAlertsAlertResourceLabelArrayOutputWithContext(context.Context) GetAlertsAlertResourceLabelArrayOutput
}

type GetAlertsAlertResourceLabelArray []GetAlertsAlertResourceLabelInput

func (GetAlertsAlertResourceLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlertResourceLabel)(nil)).Elem()
}

func (i GetAlertsAlertResourceLabelArray) ToGetAlertsAlertResourceLabelArrayOutput() GetAlertsAlertResourceLabelArrayOutput {
	return i.ToGetAlertsAlertResourceLabelArrayOutputWithContext(context.Background())
}

func (i GetAlertsAlertResourceLabelArray) ToGetAlertsAlertResourceLabelArrayOutputWithContext(ctx context.Context) GetAlertsAlertResourceLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertsAlertResourceLabelArrayOutput)
}

type GetAlertsAlertResourceLabelOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertResourceLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertsAlertResourceLabel)(nil)).Elem()
}

func (o GetAlertsAlertResourceLabelOutput) ToGetAlertsAlertResourceLabelOutput() GetAlertsAlertResourceLabelOutput {
	return o
}

func (o GetAlertsAlertResourceLabelOutput) ToGetAlertsAlertResourceLabelOutputWithContext(ctx context.Context) GetAlertsAlertResourceLabelOutput {
	return o
}

// The key of the label.
func (o GetAlertsAlertResourceLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlertResourceLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the label.
func (o GetAlertsAlertResourceLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertsAlertResourceLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertsAlertResourceLabelArrayOutput struct{ *pulumi.OutputState }

func (GetAlertsAlertResourceLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertsAlertResourceLabel)(nil)).Elem()
}

func (o GetAlertsAlertResourceLabelArrayOutput) ToGetAlertsAlertResourceLabelArrayOutput() GetAlertsAlertResourceLabelArrayOutput {
	return o
}

func (o GetAlertsAlertResourceLabelArrayOutput) ToGetAlertsAlertResourceLabelArrayOutputWithContext(ctx context.Context) GetAlertsAlertResourceLabelArrayOutput {
	return o
}

func (o GetAlertsAlertResourceLabelArrayOutput) Index(i pulumi.IntInput) GetAlertsAlertResourceLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertsAlertResourceLabel {
		return vs[0].([]GetAlertsAlertResourceLabel)[vs[1].(int)]
	}).(GetAlertsAlertResourceLabelOutput)
}

type GetContactGroupsContactGroup struct {
	// A list of contact IDs.
	ContactIds []string `pulumi:"contactIds"`
	// The create time of contact group.
	CreateTime string `pulumi:"createTime"`
	// The ID of contact group.
	Id string `pulumi:"id"`
	// The name of contact group.
	Name string `pulumi:"name"`
}

// GetContactGroupsContactGroupInput is an input type that accepts GetContactGroupsContactGroupArgs and GetContactGroupsContactGroupOutput values.
// You can construct a concrete instance of `GetContactGroupsContactGroupInput` via:
//
//	GetContactGroupsContactGroupArgs{...}
type GetContactGroupsContactGroupInput interface {
	pulumi.Input

	ToGetContactGroupsContactGroupOutput() GetContactGroupsContactGroupOutput
	ToGetContactGroupsContactGroupOutputWithContext(context.Context) GetContactGroupsContactGroupOutput
}

type GetContactGroupsContactGroupArgs struct {
	// A list of contact IDs.
	ContactIds pulumi.StringArrayInput `pulumi:"contactIds"`
	// The create time of contact group.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of contact group.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of contact group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetContactGroupsContactGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactGroupsContactGroup)(nil)).Elem()
}

func (i GetContactGroupsContactGroupArgs) ToGetContactGroupsContactGroupOutput() GetContactGroupsContactGroupOutput {
	return i.ToGetContactGroupsContactGroupOutputWithContext(context.Background())
}

func (i GetContactGroupsContactGroupArgs) ToGetContactGroupsContactGroupOutputWithContext(ctx context.Context) GetContactGroupsContactGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactGroupsContactGroupOutput)
}

// GetContactGroupsContactGroupArrayInput is an input type that accepts GetContactGroupsContactGroupArray and GetContactGroupsContactGroupArrayOutput values.
// You can construct a concrete instance of `GetContactGroupsContactGroupArrayInput` via:
//
//	GetContactGroupsContactGroupArray{ GetContactGroupsContactGroupArgs{...} }
type GetContactGroupsContactGroupArrayInput interface {
	pulumi.Input

	ToGetContactGroupsContactGroupArrayOutput() GetContactGroupsContactGroupArrayOutput
	ToGetContactGroupsContactGroupArrayOutputWithContext(context.Context) GetContactGroupsContactGroupArrayOutput
}

type GetContactGroupsContactGroupArray []GetContactGroupsContactGroupInput

func (GetContactGroupsContactGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactGroupsContactGroup)(nil)).Elem()
}

func (i GetContactGroupsContactGroupArray) ToGetContactGroupsContactGroupArrayOutput() GetContactGroupsContactGroupArrayOutput {
	return i.ToGetContactGroupsContactGroupArrayOutputWithContext(context.Background())
}

func (i GetContactGroupsContactGroupArray) ToGetContactGroupsContactGroupArrayOutputWithContext(ctx context.Context) GetContactGroupsContactGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactGroupsContactGroupArrayOutput)
}

type GetContactGroupsContactGroupOutput struct{ *pulumi.OutputState }

func (GetContactGroupsContactGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactGroupsContactGroup)(nil)).Elem()
}

func (o GetContactGroupsContactGroupOutput) ToGetContactGroupsContactGroupOutput() GetContactGroupsContactGroupOutput {
	return o
}

func (o GetContactGroupsContactGroupOutput) ToGetContactGroupsContactGroupOutputWithContext(ctx context.Context) GetContactGroupsContactGroupOutput {
	return o
}

// A list of contact IDs.
func (o GetContactGroupsContactGroupOutput) ContactIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContactGroupsContactGroup) []string { return v.ContactIds }).(pulumi.StringArrayOutput)
}

// The create time of contact group.
func (o GetContactGroupsContactGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactGroupsContactGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of contact group.
func (o GetContactGroupsContactGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactGroupsContactGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The name of contact group.
func (o GetContactGroupsContactGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactGroupsContactGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetContactGroupsContactGroupArrayOutput struct{ *pulumi.OutputState }

func (GetContactGroupsContactGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactGroupsContactGroup)(nil)).Elem()
}

func (o GetContactGroupsContactGroupArrayOutput) ToGetContactGroupsContactGroupArrayOutput() GetContactGroupsContactGroupArrayOutput {
	return o
}

func (o GetContactGroupsContactGroupArrayOutput) ToGetContactGroupsContactGroupArrayOutputWithContext(ctx context.Context) GetContactGroupsContactGroupArrayOutput {
	return o
}

func (o GetContactGroupsContactGroupArrayOutput) Index(i pulumi.IntInput) GetContactGroupsContactGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactGroupsContactGroup {
		return vs[0].([]GetContactGroupsContactGroup)[vs[1].(int)]
	}).(GetContactGroupsContactGroupOutput)
}

type GetContactsContact struct {
	// A list of contact group ids.
	ContactGroupIds []string `pulumi:"contactGroupIds"`
	// The create time of contact.
	CreateTime string `pulumi:"createTime"`
	// The ding talk bot webhook of contact.
	DingTalkBotWebhooks []GetContactsContactDingTalkBotWebhook `pulumi:"dingTalkBotWebhooks"`
	// The email of contact.
	Email string `pulumi:"email"`
	// Whether the email of contact active.
	EmailActive bool `pulumi:"emailActive"`
	// The ID of contact.
	Id string `pulumi:"id"`
	// The lark bot webhook of contact.
	LarkBotWebhooks []GetContactsContactLarkBotWebhook `pulumi:"larkBotWebhooks"`
	// The name of contact.
	Name string `pulumi:"name"`
	// Whether phone number is active.
	PhoneNumberActive bool `pulumi:"phoneNumberActive"`
	// The phone number of contact.
	PhoneNumbers []GetContactsContactPhoneNumber `pulumi:"phoneNumbers"`
	// The we com bot webhook of contact.
	WeComBotWebhooks []GetContactsContactWeComBotWebhook `pulumi:"weComBotWebhooks"`
	// The webhook of contact.
	Webhooks []GetContactsContactWebhook `pulumi:"webhooks"`
}

// GetContactsContactInput is an input type that accepts GetContactsContactArgs and GetContactsContactOutput values.
// You can construct a concrete instance of `GetContactsContactInput` via:
//
//	GetContactsContactArgs{...}
type GetContactsContactInput interface {
	pulumi.Input

	ToGetContactsContactOutput() GetContactsContactOutput
	ToGetContactsContactOutputWithContext(context.Context) GetContactsContactOutput
}

type GetContactsContactArgs struct {
	// A list of contact group ids.
	ContactGroupIds pulumi.StringArrayInput `pulumi:"contactGroupIds"`
	// The create time of contact.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ding talk bot webhook of contact.
	DingTalkBotWebhooks GetContactsContactDingTalkBotWebhookArrayInput `pulumi:"dingTalkBotWebhooks"`
	// The email of contact.
	Email pulumi.StringInput `pulumi:"email"`
	// Whether the email of contact active.
	EmailActive pulumi.BoolInput `pulumi:"emailActive"`
	// The ID of contact.
	Id pulumi.StringInput `pulumi:"id"`
	// The lark bot webhook of contact.
	LarkBotWebhooks GetContactsContactLarkBotWebhookArrayInput `pulumi:"larkBotWebhooks"`
	// The name of contact.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether phone number is active.
	PhoneNumberActive pulumi.BoolInput `pulumi:"phoneNumberActive"`
	// The phone number of contact.
	PhoneNumbers GetContactsContactPhoneNumberArrayInput `pulumi:"phoneNumbers"`
	// The we com bot webhook of contact.
	WeComBotWebhooks GetContactsContactWeComBotWebhookArrayInput `pulumi:"weComBotWebhooks"`
	// The webhook of contact.
	Webhooks GetContactsContactWebhookArrayInput `pulumi:"webhooks"`
}

func (GetContactsContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContact)(nil)).Elem()
}

func (i GetContactsContactArgs) ToGetContactsContactOutput() GetContactsContactOutput {
	return i.ToGetContactsContactOutputWithContext(context.Background())
}

func (i GetContactsContactArgs) ToGetContactsContactOutputWithContext(ctx context.Context) GetContactsContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactOutput)
}

// GetContactsContactArrayInput is an input type that accepts GetContactsContactArray and GetContactsContactArrayOutput values.
// You can construct a concrete instance of `GetContactsContactArrayInput` via:
//
//	GetContactsContactArray{ GetContactsContactArgs{...} }
type GetContactsContactArrayInput interface {
	pulumi.Input

	ToGetContactsContactArrayOutput() GetContactsContactArrayOutput
	ToGetContactsContactArrayOutputWithContext(context.Context) GetContactsContactArrayOutput
}

type GetContactsContactArray []GetContactsContactInput

func (GetContactsContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContact)(nil)).Elem()
}

func (i GetContactsContactArray) ToGetContactsContactArrayOutput() GetContactsContactArrayOutput {
	return i.ToGetContactsContactArrayOutputWithContext(context.Background())
}

func (i GetContactsContactArray) ToGetContactsContactArrayOutputWithContext(ctx context.Context) GetContactsContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactArrayOutput)
}

type GetContactsContactOutput struct{ *pulumi.OutputState }

func (GetContactsContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContact)(nil)).Elem()
}

func (o GetContactsContactOutput) ToGetContactsContactOutput() GetContactsContactOutput {
	return o
}

func (o GetContactsContactOutput) ToGetContactsContactOutputWithContext(ctx context.Context) GetContactsContactOutput {
	return o
}

// A list of contact group ids.
func (o GetContactsContactOutput) ContactGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContactsContact) []string { return v.ContactGroupIds }).(pulumi.StringArrayOutput)
}

// The create time of contact.
func (o GetContactsContactOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContact) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ding talk bot webhook of contact.
func (o GetContactsContactOutput) DingTalkBotWebhooks() GetContactsContactDingTalkBotWebhookArrayOutput {
	return o.ApplyT(func(v GetContactsContact) []GetContactsContactDingTalkBotWebhook { return v.DingTalkBotWebhooks }).(GetContactsContactDingTalkBotWebhookArrayOutput)
}

// The email of contact.
func (o GetContactsContactOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContact) string { return v.Email }).(pulumi.StringOutput)
}

// Whether the email of contact active.
func (o GetContactsContactOutput) EmailActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetContactsContact) bool { return v.EmailActive }).(pulumi.BoolOutput)
}

// The ID of contact.
func (o GetContactsContactOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContact) string { return v.Id }).(pulumi.StringOutput)
}

// The lark bot webhook of contact.
func (o GetContactsContactOutput) LarkBotWebhooks() GetContactsContactLarkBotWebhookArrayOutput {
	return o.ApplyT(func(v GetContactsContact) []GetContactsContactLarkBotWebhook { return v.LarkBotWebhooks }).(GetContactsContactLarkBotWebhookArrayOutput)
}

// The name of contact.
func (o GetContactsContactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContact) string { return v.Name }).(pulumi.StringOutput)
}

// Whether phone number is active.
func (o GetContactsContactOutput) PhoneNumberActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetContactsContact) bool { return v.PhoneNumberActive }).(pulumi.BoolOutput)
}

// The phone number of contact.
func (o GetContactsContactOutput) PhoneNumbers() GetContactsContactPhoneNumberArrayOutput {
	return o.ApplyT(func(v GetContactsContact) []GetContactsContactPhoneNumber { return v.PhoneNumbers }).(GetContactsContactPhoneNumberArrayOutput)
}

// The we com bot webhook of contact.
func (o GetContactsContactOutput) WeComBotWebhooks() GetContactsContactWeComBotWebhookArrayOutput {
	return o.ApplyT(func(v GetContactsContact) []GetContactsContactWeComBotWebhook { return v.WeComBotWebhooks }).(GetContactsContactWeComBotWebhookArrayOutput)
}

// The webhook of contact.
func (o GetContactsContactOutput) Webhooks() GetContactsContactWebhookArrayOutput {
	return o.ApplyT(func(v GetContactsContact) []GetContactsContactWebhook { return v.Webhooks }).(GetContactsContactWebhookArrayOutput)
}

type GetContactsContactArrayOutput struct{ *pulumi.OutputState }

func (GetContactsContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContact)(nil)).Elem()
}

func (o GetContactsContactArrayOutput) ToGetContactsContactArrayOutput() GetContactsContactArrayOutput {
	return o
}

func (o GetContactsContactArrayOutput) ToGetContactsContactArrayOutputWithContext(ctx context.Context) GetContactsContactArrayOutput {
	return o
}

func (o GetContactsContactArrayOutput) Index(i pulumi.IntInput) GetContactsContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsContact {
		return vs[0].([]GetContactsContact)[vs[1].(int)]
	}).(GetContactsContactOutput)
}

type GetContactsContactDingTalkBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The mobiles of user.
	AtMobiles []string `pulumi:"atMobiles"`
	// The ids of user.
	AtUserIds []string `pulumi:"atUserIds"`
	// The secret key of webhook.
	SecretKey string `pulumi:"secretKey"`
}

// GetContactsContactDingTalkBotWebhookInput is an input type that accepts GetContactsContactDingTalkBotWebhookArgs and GetContactsContactDingTalkBotWebhookOutput values.
// You can construct a concrete instance of `GetContactsContactDingTalkBotWebhookInput` via:
//
//	GetContactsContactDingTalkBotWebhookArgs{...}
type GetContactsContactDingTalkBotWebhookInput interface {
	pulumi.Input

	ToGetContactsContactDingTalkBotWebhookOutput() GetContactsContactDingTalkBotWebhookOutput
	ToGetContactsContactDingTalkBotWebhookOutputWithContext(context.Context) GetContactsContactDingTalkBotWebhookOutput
}

type GetContactsContactDingTalkBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The mobiles of user.
	AtMobiles pulumi.StringArrayInput `pulumi:"atMobiles"`
	// The ids of user.
	AtUserIds pulumi.StringArrayInput `pulumi:"atUserIds"`
	// The secret key of webhook.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (GetContactsContactDingTalkBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactDingTalkBotWebhook)(nil)).Elem()
}

func (i GetContactsContactDingTalkBotWebhookArgs) ToGetContactsContactDingTalkBotWebhookOutput() GetContactsContactDingTalkBotWebhookOutput {
	return i.ToGetContactsContactDingTalkBotWebhookOutputWithContext(context.Background())
}

func (i GetContactsContactDingTalkBotWebhookArgs) ToGetContactsContactDingTalkBotWebhookOutputWithContext(ctx context.Context) GetContactsContactDingTalkBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactDingTalkBotWebhookOutput)
}

// GetContactsContactDingTalkBotWebhookArrayInput is an input type that accepts GetContactsContactDingTalkBotWebhookArray and GetContactsContactDingTalkBotWebhookArrayOutput values.
// You can construct a concrete instance of `GetContactsContactDingTalkBotWebhookArrayInput` via:
//
//	GetContactsContactDingTalkBotWebhookArray{ GetContactsContactDingTalkBotWebhookArgs{...} }
type GetContactsContactDingTalkBotWebhookArrayInput interface {
	pulumi.Input

	ToGetContactsContactDingTalkBotWebhookArrayOutput() GetContactsContactDingTalkBotWebhookArrayOutput
	ToGetContactsContactDingTalkBotWebhookArrayOutputWithContext(context.Context) GetContactsContactDingTalkBotWebhookArrayOutput
}

type GetContactsContactDingTalkBotWebhookArray []GetContactsContactDingTalkBotWebhookInput

func (GetContactsContactDingTalkBotWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactDingTalkBotWebhook)(nil)).Elem()
}

func (i GetContactsContactDingTalkBotWebhookArray) ToGetContactsContactDingTalkBotWebhookArrayOutput() GetContactsContactDingTalkBotWebhookArrayOutput {
	return i.ToGetContactsContactDingTalkBotWebhookArrayOutputWithContext(context.Background())
}

func (i GetContactsContactDingTalkBotWebhookArray) ToGetContactsContactDingTalkBotWebhookArrayOutputWithContext(ctx context.Context) GetContactsContactDingTalkBotWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactDingTalkBotWebhookArrayOutput)
}

type GetContactsContactDingTalkBotWebhookOutput struct{ *pulumi.OutputState }

func (GetContactsContactDingTalkBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactDingTalkBotWebhook)(nil)).Elem()
}

func (o GetContactsContactDingTalkBotWebhookOutput) ToGetContactsContactDingTalkBotWebhookOutput() GetContactsContactDingTalkBotWebhookOutput {
	return o
}

func (o GetContactsContactDingTalkBotWebhookOutput) ToGetContactsContactDingTalkBotWebhookOutputWithContext(ctx context.Context) GetContactsContactDingTalkBotWebhookOutput {
	return o
}

// The address of webhook.
func (o GetContactsContactDingTalkBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactDingTalkBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The mobiles of user.
func (o GetContactsContactDingTalkBotWebhookOutput) AtMobiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContactsContactDingTalkBotWebhook) []string { return v.AtMobiles }).(pulumi.StringArrayOutput)
}

// The ids of user.
func (o GetContactsContactDingTalkBotWebhookOutput) AtUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContactsContactDingTalkBotWebhook) []string { return v.AtUserIds }).(pulumi.StringArrayOutput)
}

// The secret key of webhook.
func (o GetContactsContactDingTalkBotWebhookOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactDingTalkBotWebhook) string { return v.SecretKey }).(pulumi.StringOutput)
}

type GetContactsContactDingTalkBotWebhookArrayOutput struct{ *pulumi.OutputState }

func (GetContactsContactDingTalkBotWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactDingTalkBotWebhook)(nil)).Elem()
}

func (o GetContactsContactDingTalkBotWebhookArrayOutput) ToGetContactsContactDingTalkBotWebhookArrayOutput() GetContactsContactDingTalkBotWebhookArrayOutput {
	return o
}

func (o GetContactsContactDingTalkBotWebhookArrayOutput) ToGetContactsContactDingTalkBotWebhookArrayOutputWithContext(ctx context.Context) GetContactsContactDingTalkBotWebhookArrayOutput {
	return o
}

func (o GetContactsContactDingTalkBotWebhookArrayOutput) Index(i pulumi.IntInput) GetContactsContactDingTalkBotWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsContactDingTalkBotWebhook {
		return vs[0].([]GetContactsContactDingTalkBotWebhook)[vs[1].(int)]
	}).(GetContactsContactDingTalkBotWebhookOutput)
}

type GetContactsContactLarkBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The secret key of webhook.
	SecretKey string `pulumi:"secretKey"`
}

// GetContactsContactLarkBotWebhookInput is an input type that accepts GetContactsContactLarkBotWebhookArgs and GetContactsContactLarkBotWebhookOutput values.
// You can construct a concrete instance of `GetContactsContactLarkBotWebhookInput` via:
//
//	GetContactsContactLarkBotWebhookArgs{...}
type GetContactsContactLarkBotWebhookInput interface {
	pulumi.Input

	ToGetContactsContactLarkBotWebhookOutput() GetContactsContactLarkBotWebhookOutput
	ToGetContactsContactLarkBotWebhookOutputWithContext(context.Context) GetContactsContactLarkBotWebhookOutput
}

type GetContactsContactLarkBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The secret key of webhook.
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (GetContactsContactLarkBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactLarkBotWebhook)(nil)).Elem()
}

func (i GetContactsContactLarkBotWebhookArgs) ToGetContactsContactLarkBotWebhookOutput() GetContactsContactLarkBotWebhookOutput {
	return i.ToGetContactsContactLarkBotWebhookOutputWithContext(context.Background())
}

func (i GetContactsContactLarkBotWebhookArgs) ToGetContactsContactLarkBotWebhookOutputWithContext(ctx context.Context) GetContactsContactLarkBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactLarkBotWebhookOutput)
}

// GetContactsContactLarkBotWebhookArrayInput is an input type that accepts GetContactsContactLarkBotWebhookArray and GetContactsContactLarkBotWebhookArrayOutput values.
// You can construct a concrete instance of `GetContactsContactLarkBotWebhookArrayInput` via:
//
//	GetContactsContactLarkBotWebhookArray{ GetContactsContactLarkBotWebhookArgs{...} }
type GetContactsContactLarkBotWebhookArrayInput interface {
	pulumi.Input

	ToGetContactsContactLarkBotWebhookArrayOutput() GetContactsContactLarkBotWebhookArrayOutput
	ToGetContactsContactLarkBotWebhookArrayOutputWithContext(context.Context) GetContactsContactLarkBotWebhookArrayOutput
}

type GetContactsContactLarkBotWebhookArray []GetContactsContactLarkBotWebhookInput

func (GetContactsContactLarkBotWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactLarkBotWebhook)(nil)).Elem()
}

func (i GetContactsContactLarkBotWebhookArray) ToGetContactsContactLarkBotWebhookArrayOutput() GetContactsContactLarkBotWebhookArrayOutput {
	return i.ToGetContactsContactLarkBotWebhookArrayOutputWithContext(context.Background())
}

func (i GetContactsContactLarkBotWebhookArray) ToGetContactsContactLarkBotWebhookArrayOutputWithContext(ctx context.Context) GetContactsContactLarkBotWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactLarkBotWebhookArrayOutput)
}

type GetContactsContactLarkBotWebhookOutput struct{ *pulumi.OutputState }

func (GetContactsContactLarkBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactLarkBotWebhook)(nil)).Elem()
}

func (o GetContactsContactLarkBotWebhookOutput) ToGetContactsContactLarkBotWebhookOutput() GetContactsContactLarkBotWebhookOutput {
	return o
}

func (o GetContactsContactLarkBotWebhookOutput) ToGetContactsContactLarkBotWebhookOutputWithContext(ctx context.Context) GetContactsContactLarkBotWebhookOutput {
	return o
}

// The address of webhook.
func (o GetContactsContactLarkBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactLarkBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The secret key of webhook.
func (o GetContactsContactLarkBotWebhookOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactLarkBotWebhook) string { return v.SecretKey }).(pulumi.StringOutput)
}

type GetContactsContactLarkBotWebhookArrayOutput struct{ *pulumi.OutputState }

func (GetContactsContactLarkBotWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactLarkBotWebhook)(nil)).Elem()
}

func (o GetContactsContactLarkBotWebhookArrayOutput) ToGetContactsContactLarkBotWebhookArrayOutput() GetContactsContactLarkBotWebhookArrayOutput {
	return o
}

func (o GetContactsContactLarkBotWebhookArrayOutput) ToGetContactsContactLarkBotWebhookArrayOutputWithContext(ctx context.Context) GetContactsContactLarkBotWebhookArrayOutput {
	return o
}

func (o GetContactsContactLarkBotWebhookArrayOutput) Index(i pulumi.IntInput) GetContactsContactLarkBotWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsContactLarkBotWebhook {
		return vs[0].([]GetContactsContactLarkBotWebhook)[vs[1].(int)]
	}).(GetContactsContactLarkBotWebhookOutput)
}

type GetContactsContactPhoneNumber struct {
	// The country code of phone number.
	CountryCode string `pulumi:"countryCode"`
	// The number of phone number.
	Number string `pulumi:"number"`
}

// GetContactsContactPhoneNumberInput is an input type that accepts GetContactsContactPhoneNumberArgs and GetContactsContactPhoneNumberOutput values.
// You can construct a concrete instance of `GetContactsContactPhoneNumberInput` via:
//
//	GetContactsContactPhoneNumberArgs{...}
type GetContactsContactPhoneNumberInput interface {
	pulumi.Input

	ToGetContactsContactPhoneNumberOutput() GetContactsContactPhoneNumberOutput
	ToGetContactsContactPhoneNumberOutputWithContext(context.Context) GetContactsContactPhoneNumberOutput
}

type GetContactsContactPhoneNumberArgs struct {
	// The country code of phone number.
	CountryCode pulumi.StringInput `pulumi:"countryCode"`
	// The number of phone number.
	Number pulumi.StringInput `pulumi:"number"`
}

func (GetContactsContactPhoneNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactPhoneNumber)(nil)).Elem()
}

func (i GetContactsContactPhoneNumberArgs) ToGetContactsContactPhoneNumberOutput() GetContactsContactPhoneNumberOutput {
	return i.ToGetContactsContactPhoneNumberOutputWithContext(context.Background())
}

func (i GetContactsContactPhoneNumberArgs) ToGetContactsContactPhoneNumberOutputWithContext(ctx context.Context) GetContactsContactPhoneNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactPhoneNumberOutput)
}

// GetContactsContactPhoneNumberArrayInput is an input type that accepts GetContactsContactPhoneNumberArray and GetContactsContactPhoneNumberArrayOutput values.
// You can construct a concrete instance of `GetContactsContactPhoneNumberArrayInput` via:
//
//	GetContactsContactPhoneNumberArray{ GetContactsContactPhoneNumberArgs{...} }
type GetContactsContactPhoneNumberArrayInput interface {
	pulumi.Input

	ToGetContactsContactPhoneNumberArrayOutput() GetContactsContactPhoneNumberArrayOutput
	ToGetContactsContactPhoneNumberArrayOutputWithContext(context.Context) GetContactsContactPhoneNumberArrayOutput
}

type GetContactsContactPhoneNumberArray []GetContactsContactPhoneNumberInput

func (GetContactsContactPhoneNumberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactPhoneNumber)(nil)).Elem()
}

func (i GetContactsContactPhoneNumberArray) ToGetContactsContactPhoneNumberArrayOutput() GetContactsContactPhoneNumberArrayOutput {
	return i.ToGetContactsContactPhoneNumberArrayOutputWithContext(context.Background())
}

func (i GetContactsContactPhoneNumberArray) ToGetContactsContactPhoneNumberArrayOutputWithContext(ctx context.Context) GetContactsContactPhoneNumberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactPhoneNumberArrayOutput)
}

type GetContactsContactPhoneNumberOutput struct{ *pulumi.OutputState }

func (GetContactsContactPhoneNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactPhoneNumber)(nil)).Elem()
}

func (o GetContactsContactPhoneNumberOutput) ToGetContactsContactPhoneNumberOutput() GetContactsContactPhoneNumberOutput {
	return o
}

func (o GetContactsContactPhoneNumberOutput) ToGetContactsContactPhoneNumberOutputWithContext(ctx context.Context) GetContactsContactPhoneNumberOutput {
	return o
}

// The country code of phone number.
func (o GetContactsContactPhoneNumberOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactPhoneNumber) string { return v.CountryCode }).(pulumi.StringOutput)
}

// The number of phone number.
func (o GetContactsContactPhoneNumberOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactPhoneNumber) string { return v.Number }).(pulumi.StringOutput)
}

type GetContactsContactPhoneNumberArrayOutput struct{ *pulumi.OutputState }

func (GetContactsContactPhoneNumberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactPhoneNumber)(nil)).Elem()
}

func (o GetContactsContactPhoneNumberArrayOutput) ToGetContactsContactPhoneNumberArrayOutput() GetContactsContactPhoneNumberArrayOutput {
	return o
}

func (o GetContactsContactPhoneNumberArrayOutput) ToGetContactsContactPhoneNumberArrayOutputWithContext(ctx context.Context) GetContactsContactPhoneNumberArrayOutput {
	return o
}

func (o GetContactsContactPhoneNumberArrayOutput) Index(i pulumi.IntInput) GetContactsContactPhoneNumberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsContactPhoneNumber {
		return vs[0].([]GetContactsContactPhoneNumber)[vs[1].(int)]
	}).(GetContactsContactPhoneNumberOutput)
}

type GetContactsContactWeComBotWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The ids of user.
	AtUserIds []string `pulumi:"atUserIds"`
}

// GetContactsContactWeComBotWebhookInput is an input type that accepts GetContactsContactWeComBotWebhookArgs and GetContactsContactWeComBotWebhookOutput values.
// You can construct a concrete instance of `GetContactsContactWeComBotWebhookInput` via:
//
//	GetContactsContactWeComBotWebhookArgs{...}
type GetContactsContactWeComBotWebhookInput interface {
	pulumi.Input

	ToGetContactsContactWeComBotWebhookOutput() GetContactsContactWeComBotWebhookOutput
	ToGetContactsContactWeComBotWebhookOutputWithContext(context.Context) GetContactsContactWeComBotWebhookOutput
}

type GetContactsContactWeComBotWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The ids of user.
	AtUserIds pulumi.StringArrayInput `pulumi:"atUserIds"`
}

func (GetContactsContactWeComBotWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactWeComBotWebhook)(nil)).Elem()
}

func (i GetContactsContactWeComBotWebhookArgs) ToGetContactsContactWeComBotWebhookOutput() GetContactsContactWeComBotWebhookOutput {
	return i.ToGetContactsContactWeComBotWebhookOutputWithContext(context.Background())
}

func (i GetContactsContactWeComBotWebhookArgs) ToGetContactsContactWeComBotWebhookOutputWithContext(ctx context.Context) GetContactsContactWeComBotWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactWeComBotWebhookOutput)
}

// GetContactsContactWeComBotWebhookArrayInput is an input type that accepts GetContactsContactWeComBotWebhookArray and GetContactsContactWeComBotWebhookArrayOutput values.
// You can construct a concrete instance of `GetContactsContactWeComBotWebhookArrayInput` via:
//
//	GetContactsContactWeComBotWebhookArray{ GetContactsContactWeComBotWebhookArgs{...} }
type GetContactsContactWeComBotWebhookArrayInput interface {
	pulumi.Input

	ToGetContactsContactWeComBotWebhookArrayOutput() GetContactsContactWeComBotWebhookArrayOutput
	ToGetContactsContactWeComBotWebhookArrayOutputWithContext(context.Context) GetContactsContactWeComBotWebhookArrayOutput
}

type GetContactsContactWeComBotWebhookArray []GetContactsContactWeComBotWebhookInput

func (GetContactsContactWeComBotWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactWeComBotWebhook)(nil)).Elem()
}

func (i GetContactsContactWeComBotWebhookArray) ToGetContactsContactWeComBotWebhookArrayOutput() GetContactsContactWeComBotWebhookArrayOutput {
	return i.ToGetContactsContactWeComBotWebhookArrayOutputWithContext(context.Background())
}

func (i GetContactsContactWeComBotWebhookArray) ToGetContactsContactWeComBotWebhookArrayOutputWithContext(ctx context.Context) GetContactsContactWeComBotWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactWeComBotWebhookArrayOutput)
}

type GetContactsContactWeComBotWebhookOutput struct{ *pulumi.OutputState }

func (GetContactsContactWeComBotWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactWeComBotWebhook)(nil)).Elem()
}

func (o GetContactsContactWeComBotWebhookOutput) ToGetContactsContactWeComBotWebhookOutput() GetContactsContactWeComBotWebhookOutput {
	return o
}

func (o GetContactsContactWeComBotWebhookOutput) ToGetContactsContactWeComBotWebhookOutputWithContext(ctx context.Context) GetContactsContactWeComBotWebhookOutput {
	return o
}

// The address of webhook.
func (o GetContactsContactWeComBotWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactWeComBotWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The ids of user.
func (o GetContactsContactWeComBotWebhookOutput) AtUserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContactsContactWeComBotWebhook) []string { return v.AtUserIds }).(pulumi.StringArrayOutput)
}

type GetContactsContactWeComBotWebhookArrayOutput struct{ *pulumi.OutputState }

func (GetContactsContactWeComBotWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactWeComBotWebhook)(nil)).Elem()
}

func (o GetContactsContactWeComBotWebhookArrayOutput) ToGetContactsContactWeComBotWebhookArrayOutput() GetContactsContactWeComBotWebhookArrayOutput {
	return o
}

func (o GetContactsContactWeComBotWebhookArrayOutput) ToGetContactsContactWeComBotWebhookArrayOutputWithContext(ctx context.Context) GetContactsContactWeComBotWebhookArrayOutput {
	return o
}

func (o GetContactsContactWeComBotWebhookArrayOutput) Index(i pulumi.IntInput) GetContactsContactWeComBotWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsContactWeComBotWebhook {
		return vs[0].([]GetContactsContactWeComBotWebhook)[vs[1].(int)]
	}).(GetContactsContactWeComBotWebhookOutput)
}

type GetContactsContactWebhook struct {
	// The address of webhook.
	Address string `pulumi:"address"`
	// The token of webhook.
	Token string `pulumi:"token"`
}

// GetContactsContactWebhookInput is an input type that accepts GetContactsContactWebhookArgs and GetContactsContactWebhookOutput values.
// You can construct a concrete instance of `GetContactsContactWebhookInput` via:
//
//	GetContactsContactWebhookArgs{...}
type GetContactsContactWebhookInput interface {
	pulumi.Input

	ToGetContactsContactWebhookOutput() GetContactsContactWebhookOutput
	ToGetContactsContactWebhookOutputWithContext(context.Context) GetContactsContactWebhookOutput
}

type GetContactsContactWebhookArgs struct {
	// The address of webhook.
	Address pulumi.StringInput `pulumi:"address"`
	// The token of webhook.
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetContactsContactWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactWebhook)(nil)).Elem()
}

func (i GetContactsContactWebhookArgs) ToGetContactsContactWebhookOutput() GetContactsContactWebhookOutput {
	return i.ToGetContactsContactWebhookOutputWithContext(context.Background())
}

func (i GetContactsContactWebhookArgs) ToGetContactsContactWebhookOutputWithContext(ctx context.Context) GetContactsContactWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactWebhookOutput)
}

// GetContactsContactWebhookArrayInput is an input type that accepts GetContactsContactWebhookArray and GetContactsContactWebhookArrayOutput values.
// You can construct a concrete instance of `GetContactsContactWebhookArrayInput` via:
//
//	GetContactsContactWebhookArray{ GetContactsContactWebhookArgs{...} }
type GetContactsContactWebhookArrayInput interface {
	pulumi.Input

	ToGetContactsContactWebhookArrayOutput() GetContactsContactWebhookArrayOutput
	ToGetContactsContactWebhookArrayOutputWithContext(context.Context) GetContactsContactWebhookArrayOutput
}

type GetContactsContactWebhookArray []GetContactsContactWebhookInput

func (GetContactsContactWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactWebhook)(nil)).Elem()
}

func (i GetContactsContactWebhookArray) ToGetContactsContactWebhookArrayOutput() GetContactsContactWebhookArrayOutput {
	return i.ToGetContactsContactWebhookArrayOutputWithContext(context.Background())
}

func (i GetContactsContactWebhookArray) ToGetContactsContactWebhookArrayOutputWithContext(ctx context.Context) GetContactsContactWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContactsContactWebhookArrayOutput)
}

type GetContactsContactWebhookOutput struct{ *pulumi.OutputState }

func (GetContactsContactWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContactsContactWebhook)(nil)).Elem()
}

func (o GetContactsContactWebhookOutput) ToGetContactsContactWebhookOutput() GetContactsContactWebhookOutput {
	return o
}

func (o GetContactsContactWebhookOutput) ToGetContactsContactWebhookOutputWithContext(ctx context.Context) GetContactsContactWebhookOutput {
	return o
}

// The address of webhook.
func (o GetContactsContactWebhookOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactWebhook) string { return v.Address }).(pulumi.StringOutput)
}

// The token of webhook.
func (o GetContactsContactWebhookOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetContactsContactWebhook) string { return v.Token }).(pulumi.StringOutput)
}

type GetContactsContactWebhookArrayOutput struct{ *pulumi.OutputState }

func (GetContactsContactWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContactsContactWebhook)(nil)).Elem()
}

func (o GetContactsContactWebhookArrayOutput) ToGetContactsContactWebhookArrayOutput() GetContactsContactWebhookArrayOutput {
	return o
}

func (o GetContactsContactWebhookArrayOutput) ToGetContactsContactWebhookArrayOutputWithContext(ctx context.Context) GetContactsContactWebhookArrayOutput {
	return o
}

func (o GetContactsContactWebhookArrayOutput) Index(i pulumi.IntInput) GetContactsContactWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetContactsContactWebhook {
		return vs[0].([]GetContactsContactWebhook)[vs[1].(int)]
	}).(GetContactsContactWebhookOutput)
}

type GetInstanceTypesInstanceType struct {
	// Maximum number of active sequences.
	ActiveSeries int `pulumi:"activeSeries"`
	// Number of zone.
	AvailabilityZoneReplicas int `pulumi:"availabilityZoneReplicas"`
	// Whether the workspace is exclusive.
	Dedicated bool `pulumi:"dedicated"`
	// The ID of instance type.
	Id string `pulumi:"id"`
	// Maximum write samples per second.
	IngestSamplesPerSecond int `pulumi:"ingestSamplesPerSecond"`
	// Maximum number of concurrent queries.
	QueryConcurrency int `pulumi:"queryConcurrency"`
	// Maximum Query QPS.
	QueryPerSecond int `pulumi:"queryPerSecond"`
	// Data replicas per az.
	ReplicasPerZone int `pulumi:"replicasPerZone"`
	// Maximum data retention time.
	RetentionPeriod string `pulumi:"retentionPeriod"`
	// Maximum scan samples per second.
	ScanSamplesPerSecond int `pulumi:"scanSamplesPerSecond"`
	// Maximum number of scan sequences per second.
	ScanSeriesPerSecond int `pulumi:"scanSeriesPerSecond"`
}

// GetInstanceTypesInstanceTypeInput is an input type that accepts GetInstanceTypesInstanceTypeArgs and GetInstanceTypesInstanceTypeOutput values.
// You can construct a concrete instance of `GetInstanceTypesInstanceTypeInput` via:
//
//	GetInstanceTypesInstanceTypeArgs{...}
type GetInstanceTypesInstanceTypeInput interface {
	pulumi.Input

	ToGetInstanceTypesInstanceTypeOutput() GetInstanceTypesInstanceTypeOutput
	ToGetInstanceTypesInstanceTypeOutputWithContext(context.Context) GetInstanceTypesInstanceTypeOutput
}

type GetInstanceTypesInstanceTypeArgs struct {
	// Maximum number of active sequences.
	ActiveSeries pulumi.IntInput `pulumi:"activeSeries"`
	// Number of zone.
	AvailabilityZoneReplicas pulumi.IntInput `pulumi:"availabilityZoneReplicas"`
	// Whether the workspace is exclusive.
	Dedicated pulumi.BoolInput `pulumi:"dedicated"`
	// The ID of instance type.
	Id pulumi.StringInput `pulumi:"id"`
	// Maximum write samples per second.
	IngestSamplesPerSecond pulumi.IntInput `pulumi:"ingestSamplesPerSecond"`
	// Maximum number of concurrent queries.
	QueryConcurrency pulumi.IntInput `pulumi:"queryConcurrency"`
	// Maximum Query QPS.
	QueryPerSecond pulumi.IntInput `pulumi:"queryPerSecond"`
	// Data replicas per az.
	ReplicasPerZone pulumi.IntInput `pulumi:"replicasPerZone"`
	// Maximum data retention time.
	RetentionPeriod pulumi.StringInput `pulumi:"retentionPeriod"`
	// Maximum scan samples per second.
	ScanSamplesPerSecond pulumi.IntInput `pulumi:"scanSamplesPerSecond"`
	// Maximum number of scan sequences per second.
	ScanSeriesPerSecond pulumi.IntInput `pulumi:"scanSeriesPerSecond"`
}

func (GetInstanceTypesInstanceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceType)(nil)).Elem()
}

func (i GetInstanceTypesInstanceTypeArgs) ToGetInstanceTypesInstanceTypeOutput() GetInstanceTypesInstanceTypeOutput {
	return i.ToGetInstanceTypesInstanceTypeOutputWithContext(context.Background())
}

func (i GetInstanceTypesInstanceTypeArgs) ToGetInstanceTypesInstanceTypeOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesInstanceTypeOutput)
}

// GetInstanceTypesInstanceTypeArrayInput is an input type that accepts GetInstanceTypesInstanceTypeArray and GetInstanceTypesInstanceTypeArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypesInstanceTypeArrayInput` via:
//
//	GetInstanceTypesInstanceTypeArray{ GetInstanceTypesInstanceTypeArgs{...} }
type GetInstanceTypesInstanceTypeArrayInput interface {
	pulumi.Input

	ToGetInstanceTypesInstanceTypeArrayOutput() GetInstanceTypesInstanceTypeArrayOutput
	ToGetInstanceTypesInstanceTypeArrayOutputWithContext(context.Context) GetInstanceTypesInstanceTypeArrayOutput
}

type GetInstanceTypesInstanceTypeArray []GetInstanceTypesInstanceTypeInput

func (GetInstanceTypesInstanceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesInstanceType)(nil)).Elem()
}

func (i GetInstanceTypesInstanceTypeArray) ToGetInstanceTypesInstanceTypeArrayOutput() GetInstanceTypesInstanceTypeArrayOutput {
	return i.ToGetInstanceTypesInstanceTypeArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypesInstanceTypeArray) ToGetInstanceTypesInstanceTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypesInstanceTypeArrayOutput)
}

type GetInstanceTypesInstanceTypeOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypesInstanceType)(nil)).Elem()
}

func (o GetInstanceTypesInstanceTypeOutput) ToGetInstanceTypesInstanceTypeOutput() GetInstanceTypesInstanceTypeOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeOutput) ToGetInstanceTypesInstanceTypeOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeOutput {
	return o
}

// Maximum number of active sequences.
func (o GetInstanceTypesInstanceTypeOutput) ActiveSeries() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.ActiveSeries }).(pulumi.IntOutput)
}

// Number of zone.
func (o GetInstanceTypesInstanceTypeOutput) AvailabilityZoneReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.AvailabilityZoneReplicas }).(pulumi.IntOutput)
}

// Whether the workspace is exclusive.
func (o GetInstanceTypesInstanceTypeOutput) Dedicated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) bool { return v.Dedicated }).(pulumi.BoolOutput)
}

// The ID of instance type.
func (o GetInstanceTypesInstanceTypeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) string { return v.Id }).(pulumi.StringOutput)
}

// Maximum write samples per second.
func (o GetInstanceTypesInstanceTypeOutput) IngestSamplesPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.IngestSamplesPerSecond }).(pulumi.IntOutput)
}

// Maximum number of concurrent queries.
func (o GetInstanceTypesInstanceTypeOutput) QueryConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.QueryConcurrency }).(pulumi.IntOutput)
}

// Maximum Query QPS.
func (o GetInstanceTypesInstanceTypeOutput) QueryPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.QueryPerSecond }).(pulumi.IntOutput)
}

// Data replicas per az.
func (o GetInstanceTypesInstanceTypeOutput) ReplicasPerZone() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.ReplicasPerZone }).(pulumi.IntOutput)
}

// Maximum data retention time.
func (o GetInstanceTypesInstanceTypeOutput) RetentionPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) string { return v.RetentionPeriod }).(pulumi.StringOutput)
}

// Maximum scan samples per second.
func (o GetInstanceTypesInstanceTypeOutput) ScanSamplesPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.ScanSamplesPerSecond }).(pulumi.IntOutput)
}

// Maximum number of scan sequences per second.
func (o GetInstanceTypesInstanceTypeOutput) ScanSeriesPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceTypesInstanceType) int { return v.ScanSeriesPerSecond }).(pulumi.IntOutput)
}

type GetInstanceTypesInstanceTypeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypesInstanceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypesInstanceType)(nil)).Elem()
}

func (o GetInstanceTypesInstanceTypeArrayOutput) ToGetInstanceTypesInstanceTypeArrayOutput() GetInstanceTypesInstanceTypeArrayOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeArrayOutput) ToGetInstanceTypesInstanceTypeArrayOutputWithContext(ctx context.Context) GetInstanceTypesInstanceTypeArrayOutput {
	return o
}

func (o GetInstanceTypesInstanceTypeArrayOutput) Index(i pulumi.IntInput) GetInstanceTypesInstanceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypesInstanceType {
		return vs[0].([]GetInstanceTypesInstanceType)[vs[1].(int)]
	}).(GetInstanceTypesInstanceTypeOutput)
}

type GetNotifyGroupPoliciesNotifyPolicy struct {
	// The create time of notify group policy.
	CreateTime string `pulumi:"createTime"`
	// The description of notify group policy.
	Description string `pulumi:"description"`
	// The id of the notify group policy.
	Id string `pulumi:"id"`
	// The levels of the notify group policy.
	Levels []GetNotifyGroupPoliciesNotifyPolicyLevel `pulumi:"levels"`
	// The name of notify group policy.
	Name string `pulumi:"name"`
}

// GetNotifyGroupPoliciesNotifyPolicyInput is an input type that accepts GetNotifyGroupPoliciesNotifyPolicyArgs and GetNotifyGroupPoliciesNotifyPolicyOutput values.
// You can construct a concrete instance of `GetNotifyGroupPoliciesNotifyPolicyInput` via:
//
//	GetNotifyGroupPoliciesNotifyPolicyArgs{...}
type GetNotifyGroupPoliciesNotifyPolicyInput interface {
	pulumi.Input

	ToGetNotifyGroupPoliciesNotifyPolicyOutput() GetNotifyGroupPoliciesNotifyPolicyOutput
	ToGetNotifyGroupPoliciesNotifyPolicyOutputWithContext(context.Context) GetNotifyGroupPoliciesNotifyPolicyOutput
}

type GetNotifyGroupPoliciesNotifyPolicyArgs struct {
	// The create time of notify group policy.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of notify group policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the notify group policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The levels of the notify group policy.
	Levels GetNotifyGroupPoliciesNotifyPolicyLevelArrayInput `pulumi:"levels"`
	// The name of notify group policy.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNotifyGroupPoliciesNotifyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyGroupPoliciesNotifyPolicy)(nil)).Elem()
}

func (i GetNotifyGroupPoliciesNotifyPolicyArgs) ToGetNotifyGroupPoliciesNotifyPolicyOutput() GetNotifyGroupPoliciesNotifyPolicyOutput {
	return i.ToGetNotifyGroupPoliciesNotifyPolicyOutputWithContext(context.Background())
}

func (i GetNotifyGroupPoliciesNotifyPolicyArgs) ToGetNotifyGroupPoliciesNotifyPolicyOutputWithContext(ctx context.Context) GetNotifyGroupPoliciesNotifyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyGroupPoliciesNotifyPolicyOutput)
}

// GetNotifyGroupPoliciesNotifyPolicyArrayInput is an input type that accepts GetNotifyGroupPoliciesNotifyPolicyArray and GetNotifyGroupPoliciesNotifyPolicyArrayOutput values.
// You can construct a concrete instance of `GetNotifyGroupPoliciesNotifyPolicyArrayInput` via:
//
//	GetNotifyGroupPoliciesNotifyPolicyArray{ GetNotifyGroupPoliciesNotifyPolicyArgs{...} }
type GetNotifyGroupPoliciesNotifyPolicyArrayInput interface {
	pulumi.Input

	ToGetNotifyGroupPoliciesNotifyPolicyArrayOutput() GetNotifyGroupPoliciesNotifyPolicyArrayOutput
	ToGetNotifyGroupPoliciesNotifyPolicyArrayOutputWithContext(context.Context) GetNotifyGroupPoliciesNotifyPolicyArrayOutput
}

type GetNotifyGroupPoliciesNotifyPolicyArray []GetNotifyGroupPoliciesNotifyPolicyInput

func (GetNotifyGroupPoliciesNotifyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyGroupPoliciesNotifyPolicy)(nil)).Elem()
}

func (i GetNotifyGroupPoliciesNotifyPolicyArray) ToGetNotifyGroupPoliciesNotifyPolicyArrayOutput() GetNotifyGroupPoliciesNotifyPolicyArrayOutput {
	return i.ToGetNotifyGroupPoliciesNotifyPolicyArrayOutputWithContext(context.Background())
}

func (i GetNotifyGroupPoliciesNotifyPolicyArray) ToGetNotifyGroupPoliciesNotifyPolicyArrayOutputWithContext(ctx context.Context) GetNotifyGroupPoliciesNotifyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyGroupPoliciesNotifyPolicyArrayOutput)
}

type GetNotifyGroupPoliciesNotifyPolicyOutput struct{ *pulumi.OutputState }

func (GetNotifyGroupPoliciesNotifyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyGroupPoliciesNotifyPolicy)(nil)).Elem()
}

func (o GetNotifyGroupPoliciesNotifyPolicyOutput) ToGetNotifyGroupPoliciesNotifyPolicyOutput() GetNotifyGroupPoliciesNotifyPolicyOutput {
	return o
}

func (o GetNotifyGroupPoliciesNotifyPolicyOutput) ToGetNotifyGroupPoliciesNotifyPolicyOutputWithContext(ctx context.Context) GetNotifyGroupPoliciesNotifyPolicyOutput {
	return o
}

// The create time of notify group policy.
func (o GetNotifyGroupPoliciesNotifyPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of notify group policy.
func (o GetNotifyGroupPoliciesNotifyPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the notify group policy.
func (o GetNotifyGroupPoliciesNotifyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The levels of the notify group policy.
func (o GetNotifyGroupPoliciesNotifyPolicyOutput) Levels() GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicy) []GetNotifyGroupPoliciesNotifyPolicyLevel { return v.Levels }).(GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput)
}

// The name of notify group policy.
func (o GetNotifyGroupPoliciesNotifyPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type GetNotifyGroupPoliciesNotifyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetNotifyGroupPoliciesNotifyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyGroupPoliciesNotifyPolicy)(nil)).Elem()
}

func (o GetNotifyGroupPoliciesNotifyPolicyArrayOutput) ToGetNotifyGroupPoliciesNotifyPolicyArrayOutput() GetNotifyGroupPoliciesNotifyPolicyArrayOutput {
	return o
}

func (o GetNotifyGroupPoliciesNotifyPolicyArrayOutput) ToGetNotifyGroupPoliciesNotifyPolicyArrayOutputWithContext(ctx context.Context) GetNotifyGroupPoliciesNotifyPolicyArrayOutput {
	return o
}

func (o GetNotifyGroupPoliciesNotifyPolicyArrayOutput) Index(i pulumi.IntInput) GetNotifyGroupPoliciesNotifyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotifyGroupPoliciesNotifyPolicy {
		return vs[0].([]GetNotifyGroupPoliciesNotifyPolicy)[vs[1].(int)]
	}).(GetNotifyGroupPoliciesNotifyPolicyOutput)
}

type GetNotifyGroupPoliciesNotifyPolicyLevel struct {
	// The aggregate dimension.
	GroupBies []string `pulumi:"groupBies"`
	// The aggregation cycle.
	GroupInterval string `pulumi:"groupInterval"`
	// The wait time.
	GroupWait string `pulumi:"groupWait"`
	// The level of the policy.
	Level string `pulumi:"level"`
	// The notification cycle.
	RepeatInterval string `pulumi:"repeatInterval"`
}

// GetNotifyGroupPoliciesNotifyPolicyLevelInput is an input type that accepts GetNotifyGroupPoliciesNotifyPolicyLevelArgs and GetNotifyGroupPoliciesNotifyPolicyLevelOutput values.
// You can construct a concrete instance of `GetNotifyGroupPoliciesNotifyPolicyLevelInput` via:
//
//	GetNotifyGroupPoliciesNotifyPolicyLevelArgs{...}
type GetNotifyGroupPoliciesNotifyPolicyLevelInput interface {
	pulumi.Input

	ToGetNotifyGroupPoliciesNotifyPolicyLevelOutput() GetNotifyGroupPoliciesNotifyPolicyLevelOutput
	ToGetNotifyGroupPoliciesNotifyPolicyLevelOutputWithContext(context.Context) GetNotifyGroupPoliciesNotifyPolicyLevelOutput
}

type GetNotifyGroupPoliciesNotifyPolicyLevelArgs struct {
	// The aggregate dimension.
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// The aggregation cycle.
	GroupInterval pulumi.StringInput `pulumi:"groupInterval"`
	// The wait time.
	GroupWait pulumi.StringInput `pulumi:"groupWait"`
	// The level of the policy.
	Level pulumi.StringInput `pulumi:"level"`
	// The notification cycle.
	RepeatInterval pulumi.StringInput `pulumi:"repeatInterval"`
}

func (GetNotifyGroupPoliciesNotifyPolicyLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyGroupPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (i GetNotifyGroupPoliciesNotifyPolicyLevelArgs) ToGetNotifyGroupPoliciesNotifyPolicyLevelOutput() GetNotifyGroupPoliciesNotifyPolicyLevelOutput {
	return i.ToGetNotifyGroupPoliciesNotifyPolicyLevelOutputWithContext(context.Background())
}

func (i GetNotifyGroupPoliciesNotifyPolicyLevelArgs) ToGetNotifyGroupPoliciesNotifyPolicyLevelOutputWithContext(ctx context.Context) GetNotifyGroupPoliciesNotifyPolicyLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyGroupPoliciesNotifyPolicyLevelOutput)
}

// GetNotifyGroupPoliciesNotifyPolicyLevelArrayInput is an input type that accepts GetNotifyGroupPoliciesNotifyPolicyLevelArray and GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput values.
// You can construct a concrete instance of `GetNotifyGroupPoliciesNotifyPolicyLevelArrayInput` via:
//
//	GetNotifyGroupPoliciesNotifyPolicyLevelArray{ GetNotifyGroupPoliciesNotifyPolicyLevelArgs{...} }
type GetNotifyGroupPoliciesNotifyPolicyLevelArrayInput interface {
	pulumi.Input

	ToGetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput() GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput
	ToGetNotifyGroupPoliciesNotifyPolicyLevelArrayOutputWithContext(context.Context) GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput
}

type GetNotifyGroupPoliciesNotifyPolicyLevelArray []GetNotifyGroupPoliciesNotifyPolicyLevelInput

func (GetNotifyGroupPoliciesNotifyPolicyLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyGroupPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (i GetNotifyGroupPoliciesNotifyPolicyLevelArray) ToGetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput() GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return i.ToGetNotifyGroupPoliciesNotifyPolicyLevelArrayOutputWithContext(context.Background())
}

func (i GetNotifyGroupPoliciesNotifyPolicyLevelArray) ToGetNotifyGroupPoliciesNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput)
}

type GetNotifyGroupPoliciesNotifyPolicyLevelOutput struct{ *pulumi.OutputState }

func (GetNotifyGroupPoliciesNotifyPolicyLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyGroupPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (o GetNotifyGroupPoliciesNotifyPolicyLevelOutput) ToGetNotifyGroupPoliciesNotifyPolicyLevelOutput() GetNotifyGroupPoliciesNotifyPolicyLevelOutput {
	return o
}

func (o GetNotifyGroupPoliciesNotifyPolicyLevelOutput) ToGetNotifyGroupPoliciesNotifyPolicyLevelOutputWithContext(ctx context.Context) GetNotifyGroupPoliciesNotifyPolicyLevelOutput {
	return o
}

// The aggregate dimension.
func (o GetNotifyGroupPoliciesNotifyPolicyLevelOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicyLevel) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// The aggregation cycle.
func (o GetNotifyGroupPoliciesNotifyPolicyLevelOutput) GroupInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicyLevel) string { return v.GroupInterval }).(pulumi.StringOutput)
}

// The wait time.
func (o GetNotifyGroupPoliciesNotifyPolicyLevelOutput) GroupWait() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicyLevel) string { return v.GroupWait }).(pulumi.StringOutput)
}

// The level of the policy.
func (o GetNotifyGroupPoliciesNotifyPolicyLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicyLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The notification cycle.
func (o GetNotifyGroupPoliciesNotifyPolicyLevelOutput) RepeatInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyGroupPoliciesNotifyPolicyLevel) string { return v.RepeatInterval }).(pulumi.StringOutput)
}

type GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput struct{ *pulumi.OutputState }

func (GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyGroupPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (o GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput) ToGetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput() GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return o
}

func (o GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput) ToGetNotifyGroupPoliciesNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput {
	return o
}

func (o GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput) Index(i pulumi.IntInput) GetNotifyGroupPoliciesNotifyPolicyLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotifyGroupPoliciesNotifyPolicyLevel {
		return vs[0].([]GetNotifyGroupPoliciesNotifyPolicyLevel)[vs[1].(int)]
	}).(GetNotifyGroupPoliciesNotifyPolicyLevelOutput)
}

type GetNotifyPoliciesNotifyPolicy struct {
	// The channel notify template for the alarm notification policy.
	ChannelNotifyTemplateIds []string `pulumi:"channelNotifyTemplateIds"`
	// The create time of notify policy.
	CreateTime string `pulumi:"createTime"`
	// The description of notify policy.
	Description string `pulumi:"description"`
	// The id of the notify policy.
	Id string `pulumi:"id"`
	// The levels of the notify policy.
	Levels []GetNotifyPoliciesNotifyPolicyLevel `pulumi:"levels"`
	// The name of notify policy.
	Name string `pulumi:"name"`
}

// GetNotifyPoliciesNotifyPolicyInput is an input type that accepts GetNotifyPoliciesNotifyPolicyArgs and GetNotifyPoliciesNotifyPolicyOutput values.
// You can construct a concrete instance of `GetNotifyPoliciesNotifyPolicyInput` via:
//
//	GetNotifyPoliciesNotifyPolicyArgs{...}
type GetNotifyPoliciesNotifyPolicyInput interface {
	pulumi.Input

	ToGetNotifyPoliciesNotifyPolicyOutput() GetNotifyPoliciesNotifyPolicyOutput
	ToGetNotifyPoliciesNotifyPolicyOutputWithContext(context.Context) GetNotifyPoliciesNotifyPolicyOutput
}

type GetNotifyPoliciesNotifyPolicyArgs struct {
	// The channel notify template for the alarm notification policy.
	ChannelNotifyTemplateIds pulumi.StringArrayInput `pulumi:"channelNotifyTemplateIds"`
	// The create time of notify policy.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of notify policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the notify policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The levels of the notify policy.
	Levels GetNotifyPoliciesNotifyPolicyLevelArrayInput `pulumi:"levels"`
	// The name of notify policy.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetNotifyPoliciesNotifyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyPoliciesNotifyPolicy)(nil)).Elem()
}

func (i GetNotifyPoliciesNotifyPolicyArgs) ToGetNotifyPoliciesNotifyPolicyOutput() GetNotifyPoliciesNotifyPolicyOutput {
	return i.ToGetNotifyPoliciesNotifyPolicyOutputWithContext(context.Background())
}

func (i GetNotifyPoliciesNotifyPolicyArgs) ToGetNotifyPoliciesNotifyPolicyOutputWithContext(ctx context.Context) GetNotifyPoliciesNotifyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyPoliciesNotifyPolicyOutput)
}

// GetNotifyPoliciesNotifyPolicyArrayInput is an input type that accepts GetNotifyPoliciesNotifyPolicyArray and GetNotifyPoliciesNotifyPolicyArrayOutput values.
// You can construct a concrete instance of `GetNotifyPoliciesNotifyPolicyArrayInput` via:
//
//	GetNotifyPoliciesNotifyPolicyArray{ GetNotifyPoliciesNotifyPolicyArgs{...} }
type GetNotifyPoliciesNotifyPolicyArrayInput interface {
	pulumi.Input

	ToGetNotifyPoliciesNotifyPolicyArrayOutput() GetNotifyPoliciesNotifyPolicyArrayOutput
	ToGetNotifyPoliciesNotifyPolicyArrayOutputWithContext(context.Context) GetNotifyPoliciesNotifyPolicyArrayOutput
}

type GetNotifyPoliciesNotifyPolicyArray []GetNotifyPoliciesNotifyPolicyInput

func (GetNotifyPoliciesNotifyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyPoliciesNotifyPolicy)(nil)).Elem()
}

func (i GetNotifyPoliciesNotifyPolicyArray) ToGetNotifyPoliciesNotifyPolicyArrayOutput() GetNotifyPoliciesNotifyPolicyArrayOutput {
	return i.ToGetNotifyPoliciesNotifyPolicyArrayOutputWithContext(context.Background())
}

func (i GetNotifyPoliciesNotifyPolicyArray) ToGetNotifyPoliciesNotifyPolicyArrayOutputWithContext(ctx context.Context) GetNotifyPoliciesNotifyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyPoliciesNotifyPolicyArrayOutput)
}

type GetNotifyPoliciesNotifyPolicyOutput struct{ *pulumi.OutputState }

func (GetNotifyPoliciesNotifyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyPoliciesNotifyPolicy)(nil)).Elem()
}

func (o GetNotifyPoliciesNotifyPolicyOutput) ToGetNotifyPoliciesNotifyPolicyOutput() GetNotifyPoliciesNotifyPolicyOutput {
	return o
}

func (o GetNotifyPoliciesNotifyPolicyOutput) ToGetNotifyPoliciesNotifyPolicyOutputWithContext(ctx context.Context) GetNotifyPoliciesNotifyPolicyOutput {
	return o
}

// The channel notify template for the alarm notification policy.
func (o GetNotifyPoliciesNotifyPolicyOutput) ChannelNotifyTemplateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicy) []string { return v.ChannelNotifyTemplateIds }).(pulumi.StringArrayOutput)
}

// The create time of notify policy.
func (o GetNotifyPoliciesNotifyPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicy) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of notify policy.
func (o GetNotifyPoliciesNotifyPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the notify policy.
func (o GetNotifyPoliciesNotifyPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The levels of the notify policy.
func (o GetNotifyPoliciesNotifyPolicyOutput) Levels() GetNotifyPoliciesNotifyPolicyLevelArrayOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicy) []GetNotifyPoliciesNotifyPolicyLevel { return v.Levels }).(GetNotifyPoliciesNotifyPolicyLevelArrayOutput)
}

// The name of notify policy.
func (o GetNotifyPoliciesNotifyPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type GetNotifyPoliciesNotifyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetNotifyPoliciesNotifyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyPoliciesNotifyPolicy)(nil)).Elem()
}

func (o GetNotifyPoliciesNotifyPolicyArrayOutput) ToGetNotifyPoliciesNotifyPolicyArrayOutput() GetNotifyPoliciesNotifyPolicyArrayOutput {
	return o
}

func (o GetNotifyPoliciesNotifyPolicyArrayOutput) ToGetNotifyPoliciesNotifyPolicyArrayOutputWithContext(ctx context.Context) GetNotifyPoliciesNotifyPolicyArrayOutput {
	return o
}

func (o GetNotifyPoliciesNotifyPolicyArrayOutput) Index(i pulumi.IntInput) GetNotifyPoliciesNotifyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotifyPoliciesNotifyPolicy {
		return vs[0].([]GetNotifyPoliciesNotifyPolicy)[vs[1].(int)]
	}).(GetNotifyPoliciesNotifyPolicyOutput)
}

type GetNotifyPoliciesNotifyPolicyLevel struct {
	// The alarm notification method of the alarm notification policy.
	Channels []string `pulumi:"channels"`
	// The contact group for the alarm notification policy.
	ContactGroupIds []string `pulumi:"contactGroupIds"`
	// The level of the policy.
	Level string `pulumi:"level"`
	// The resolved alarm notification method of the alarm notification policy.
	ResolvedChannels []string `pulumi:"resolvedChannels"`
}

// GetNotifyPoliciesNotifyPolicyLevelInput is an input type that accepts GetNotifyPoliciesNotifyPolicyLevelArgs and GetNotifyPoliciesNotifyPolicyLevelOutput values.
// You can construct a concrete instance of `GetNotifyPoliciesNotifyPolicyLevelInput` via:
//
//	GetNotifyPoliciesNotifyPolicyLevelArgs{...}
type GetNotifyPoliciesNotifyPolicyLevelInput interface {
	pulumi.Input

	ToGetNotifyPoliciesNotifyPolicyLevelOutput() GetNotifyPoliciesNotifyPolicyLevelOutput
	ToGetNotifyPoliciesNotifyPolicyLevelOutputWithContext(context.Context) GetNotifyPoliciesNotifyPolicyLevelOutput
}

type GetNotifyPoliciesNotifyPolicyLevelArgs struct {
	// The alarm notification method of the alarm notification policy.
	Channels pulumi.StringArrayInput `pulumi:"channels"`
	// The contact group for the alarm notification policy.
	ContactGroupIds pulumi.StringArrayInput `pulumi:"contactGroupIds"`
	// The level of the policy.
	Level pulumi.StringInput `pulumi:"level"`
	// The resolved alarm notification method of the alarm notification policy.
	ResolvedChannels pulumi.StringArrayInput `pulumi:"resolvedChannels"`
}

func (GetNotifyPoliciesNotifyPolicyLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (i GetNotifyPoliciesNotifyPolicyLevelArgs) ToGetNotifyPoliciesNotifyPolicyLevelOutput() GetNotifyPoliciesNotifyPolicyLevelOutput {
	return i.ToGetNotifyPoliciesNotifyPolicyLevelOutputWithContext(context.Background())
}

func (i GetNotifyPoliciesNotifyPolicyLevelArgs) ToGetNotifyPoliciesNotifyPolicyLevelOutputWithContext(ctx context.Context) GetNotifyPoliciesNotifyPolicyLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyPoliciesNotifyPolicyLevelOutput)
}

// GetNotifyPoliciesNotifyPolicyLevelArrayInput is an input type that accepts GetNotifyPoliciesNotifyPolicyLevelArray and GetNotifyPoliciesNotifyPolicyLevelArrayOutput values.
// You can construct a concrete instance of `GetNotifyPoliciesNotifyPolicyLevelArrayInput` via:
//
//	GetNotifyPoliciesNotifyPolicyLevelArray{ GetNotifyPoliciesNotifyPolicyLevelArgs{...} }
type GetNotifyPoliciesNotifyPolicyLevelArrayInput interface {
	pulumi.Input

	ToGetNotifyPoliciesNotifyPolicyLevelArrayOutput() GetNotifyPoliciesNotifyPolicyLevelArrayOutput
	ToGetNotifyPoliciesNotifyPolicyLevelArrayOutputWithContext(context.Context) GetNotifyPoliciesNotifyPolicyLevelArrayOutput
}

type GetNotifyPoliciesNotifyPolicyLevelArray []GetNotifyPoliciesNotifyPolicyLevelInput

func (GetNotifyPoliciesNotifyPolicyLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (i GetNotifyPoliciesNotifyPolicyLevelArray) ToGetNotifyPoliciesNotifyPolicyLevelArrayOutput() GetNotifyPoliciesNotifyPolicyLevelArrayOutput {
	return i.ToGetNotifyPoliciesNotifyPolicyLevelArrayOutputWithContext(context.Background())
}

func (i GetNotifyPoliciesNotifyPolicyLevelArray) ToGetNotifyPoliciesNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) GetNotifyPoliciesNotifyPolicyLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyPoliciesNotifyPolicyLevelArrayOutput)
}

type GetNotifyPoliciesNotifyPolicyLevelOutput struct{ *pulumi.OutputState }

func (GetNotifyPoliciesNotifyPolicyLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (o GetNotifyPoliciesNotifyPolicyLevelOutput) ToGetNotifyPoliciesNotifyPolicyLevelOutput() GetNotifyPoliciesNotifyPolicyLevelOutput {
	return o
}

func (o GetNotifyPoliciesNotifyPolicyLevelOutput) ToGetNotifyPoliciesNotifyPolicyLevelOutputWithContext(ctx context.Context) GetNotifyPoliciesNotifyPolicyLevelOutput {
	return o
}

// The alarm notification method of the alarm notification policy.
func (o GetNotifyPoliciesNotifyPolicyLevelOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicyLevel) []string { return v.Channels }).(pulumi.StringArrayOutput)
}

// The contact group for the alarm notification policy.
func (o GetNotifyPoliciesNotifyPolicyLevelOutput) ContactGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicyLevel) []string { return v.ContactGroupIds }).(pulumi.StringArrayOutput)
}

// The level of the policy.
func (o GetNotifyPoliciesNotifyPolicyLevelOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicyLevel) string { return v.Level }).(pulumi.StringOutput)
}

// The resolved alarm notification method of the alarm notification policy.
func (o GetNotifyPoliciesNotifyPolicyLevelOutput) ResolvedChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNotifyPoliciesNotifyPolicyLevel) []string { return v.ResolvedChannels }).(pulumi.StringArrayOutput)
}

type GetNotifyPoliciesNotifyPolicyLevelArrayOutput struct{ *pulumi.OutputState }

func (GetNotifyPoliciesNotifyPolicyLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyPoliciesNotifyPolicyLevel)(nil)).Elem()
}

func (o GetNotifyPoliciesNotifyPolicyLevelArrayOutput) ToGetNotifyPoliciesNotifyPolicyLevelArrayOutput() GetNotifyPoliciesNotifyPolicyLevelArrayOutput {
	return o
}

func (o GetNotifyPoliciesNotifyPolicyLevelArrayOutput) ToGetNotifyPoliciesNotifyPolicyLevelArrayOutputWithContext(ctx context.Context) GetNotifyPoliciesNotifyPolicyLevelArrayOutput {
	return o
}

func (o GetNotifyPoliciesNotifyPolicyLevelArrayOutput) Index(i pulumi.IntInput) GetNotifyPoliciesNotifyPolicyLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotifyPoliciesNotifyPolicyLevel {
		return vs[0].([]GetNotifyPoliciesNotifyPolicyLevel)[vs[1].(int)]
	}).(GetNotifyPoliciesNotifyPolicyLevelOutput)
}

type GetNotifyTemplatesNotifyTemplate struct {
	// The active notify template info.
	Actives []GetNotifyTemplatesNotifyTemplateActive `pulumi:"actives"`
	// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
	Channel string `pulumi:"channel"`
	// The create time of notify template.
	CreateTime string `pulumi:"createTime"`
	// The description of notify template.
	Description string `pulumi:"description"`
	// The ID of notify template.
	Id string `pulumi:"id"`
	// The name of notify template. This field support fuzzy query.
	Name string `pulumi:"name"`
	// The resolved notify template info.
	Resolveds []GetNotifyTemplatesNotifyTemplateResolved `pulumi:"resolveds"`
	// The update time of notify template.
	UpdateTime string `pulumi:"updateTime"`
}

// GetNotifyTemplatesNotifyTemplateInput is an input type that accepts GetNotifyTemplatesNotifyTemplateArgs and GetNotifyTemplatesNotifyTemplateOutput values.
// You can construct a concrete instance of `GetNotifyTemplatesNotifyTemplateInput` via:
//
//	GetNotifyTemplatesNotifyTemplateArgs{...}
type GetNotifyTemplatesNotifyTemplateInput interface {
	pulumi.Input

	ToGetNotifyTemplatesNotifyTemplateOutput() GetNotifyTemplatesNotifyTemplateOutput
	ToGetNotifyTemplatesNotifyTemplateOutputWithContext(context.Context) GetNotifyTemplatesNotifyTemplateOutput
}

type GetNotifyTemplatesNotifyTemplateArgs struct {
	// The active notify template info.
	Actives GetNotifyTemplatesNotifyTemplateActiveArrayInput `pulumi:"actives"`
	// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
	Channel pulumi.StringInput `pulumi:"channel"`
	// The create time of notify template.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of notify template.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of notify template.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of notify template. This field support fuzzy query.
	Name pulumi.StringInput `pulumi:"name"`
	// The resolved notify template info.
	Resolveds GetNotifyTemplatesNotifyTemplateResolvedArrayInput `pulumi:"resolveds"`
	// The update time of notify template.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetNotifyTemplatesNotifyTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyTemplatesNotifyTemplate)(nil)).Elem()
}

func (i GetNotifyTemplatesNotifyTemplateArgs) ToGetNotifyTemplatesNotifyTemplateOutput() GetNotifyTemplatesNotifyTemplateOutput {
	return i.ToGetNotifyTemplatesNotifyTemplateOutputWithContext(context.Background())
}

func (i GetNotifyTemplatesNotifyTemplateArgs) ToGetNotifyTemplatesNotifyTemplateOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyTemplatesNotifyTemplateOutput)
}

// GetNotifyTemplatesNotifyTemplateArrayInput is an input type that accepts GetNotifyTemplatesNotifyTemplateArray and GetNotifyTemplatesNotifyTemplateArrayOutput values.
// You can construct a concrete instance of `GetNotifyTemplatesNotifyTemplateArrayInput` via:
//
//	GetNotifyTemplatesNotifyTemplateArray{ GetNotifyTemplatesNotifyTemplateArgs{...} }
type GetNotifyTemplatesNotifyTemplateArrayInput interface {
	pulumi.Input

	ToGetNotifyTemplatesNotifyTemplateArrayOutput() GetNotifyTemplatesNotifyTemplateArrayOutput
	ToGetNotifyTemplatesNotifyTemplateArrayOutputWithContext(context.Context) GetNotifyTemplatesNotifyTemplateArrayOutput
}

type GetNotifyTemplatesNotifyTemplateArray []GetNotifyTemplatesNotifyTemplateInput

func (GetNotifyTemplatesNotifyTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyTemplatesNotifyTemplate)(nil)).Elem()
}

func (i GetNotifyTemplatesNotifyTemplateArray) ToGetNotifyTemplatesNotifyTemplateArrayOutput() GetNotifyTemplatesNotifyTemplateArrayOutput {
	return i.ToGetNotifyTemplatesNotifyTemplateArrayOutputWithContext(context.Background())
}

func (i GetNotifyTemplatesNotifyTemplateArray) ToGetNotifyTemplatesNotifyTemplateArrayOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyTemplatesNotifyTemplateArrayOutput)
}

type GetNotifyTemplatesNotifyTemplateOutput struct{ *pulumi.OutputState }

func (GetNotifyTemplatesNotifyTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyTemplatesNotifyTemplate)(nil)).Elem()
}

func (o GetNotifyTemplatesNotifyTemplateOutput) ToGetNotifyTemplatesNotifyTemplateOutput() GetNotifyTemplatesNotifyTemplateOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateOutput) ToGetNotifyTemplatesNotifyTemplateOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateOutput {
	return o
}

// The active notify template info.
func (o GetNotifyTemplatesNotifyTemplateOutput) Actives() GetNotifyTemplatesNotifyTemplateActiveArrayOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplate) []GetNotifyTemplatesNotifyTemplateActive { return v.Actives }).(GetNotifyTemplatesNotifyTemplateActiveArrayOutput)
}

// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
func (o GetNotifyTemplatesNotifyTemplateOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplate) string { return v.Channel }).(pulumi.StringOutput)
}

// The create time of notify template.
func (o GetNotifyTemplatesNotifyTemplateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplate) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of notify template.
func (o GetNotifyTemplatesNotifyTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of notify template.
func (o GetNotifyTemplatesNotifyTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The name of notify template. This field support fuzzy query.
func (o GetNotifyTemplatesNotifyTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplate) string { return v.Name }).(pulumi.StringOutput)
}

// The resolved notify template info.
func (o GetNotifyTemplatesNotifyTemplateOutput) Resolveds() GetNotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplate) []GetNotifyTemplatesNotifyTemplateResolved {
		return v.Resolveds
	}).(GetNotifyTemplatesNotifyTemplateResolvedArrayOutput)
}

// The update time of notify template.
func (o GetNotifyTemplatesNotifyTemplateOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplate) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetNotifyTemplatesNotifyTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetNotifyTemplatesNotifyTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyTemplatesNotifyTemplate)(nil)).Elem()
}

func (o GetNotifyTemplatesNotifyTemplateArrayOutput) ToGetNotifyTemplatesNotifyTemplateArrayOutput() GetNotifyTemplatesNotifyTemplateArrayOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateArrayOutput) ToGetNotifyTemplatesNotifyTemplateArrayOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateArrayOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateArrayOutput) Index(i pulumi.IntInput) GetNotifyTemplatesNotifyTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotifyTemplatesNotifyTemplate {
		return vs[0].([]GetNotifyTemplatesNotifyTemplate)[vs[1].(int)]
	}).(GetNotifyTemplatesNotifyTemplateOutput)
}

type GetNotifyTemplatesNotifyTemplateActive struct {
	// The content of notify template.
	Content string `pulumi:"content"`
	// The title of notify template.
	Title string `pulumi:"title"`
}

// GetNotifyTemplatesNotifyTemplateActiveInput is an input type that accepts GetNotifyTemplatesNotifyTemplateActiveArgs and GetNotifyTemplatesNotifyTemplateActiveOutput values.
// You can construct a concrete instance of `GetNotifyTemplatesNotifyTemplateActiveInput` via:
//
//	GetNotifyTemplatesNotifyTemplateActiveArgs{...}
type GetNotifyTemplatesNotifyTemplateActiveInput interface {
	pulumi.Input

	ToGetNotifyTemplatesNotifyTemplateActiveOutput() GetNotifyTemplatesNotifyTemplateActiveOutput
	ToGetNotifyTemplatesNotifyTemplateActiveOutputWithContext(context.Context) GetNotifyTemplatesNotifyTemplateActiveOutput
}

type GetNotifyTemplatesNotifyTemplateActiveArgs struct {
	// The content of notify template.
	Content pulumi.StringInput `pulumi:"content"`
	// The title of notify template.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetNotifyTemplatesNotifyTemplateActiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateActive)(nil)).Elem()
}

func (i GetNotifyTemplatesNotifyTemplateActiveArgs) ToGetNotifyTemplatesNotifyTemplateActiveOutput() GetNotifyTemplatesNotifyTemplateActiveOutput {
	return i.ToGetNotifyTemplatesNotifyTemplateActiveOutputWithContext(context.Background())
}

func (i GetNotifyTemplatesNotifyTemplateActiveArgs) ToGetNotifyTemplatesNotifyTemplateActiveOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateActiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyTemplatesNotifyTemplateActiveOutput)
}

// GetNotifyTemplatesNotifyTemplateActiveArrayInput is an input type that accepts GetNotifyTemplatesNotifyTemplateActiveArray and GetNotifyTemplatesNotifyTemplateActiveArrayOutput values.
// You can construct a concrete instance of `GetNotifyTemplatesNotifyTemplateActiveArrayInput` via:
//
//	GetNotifyTemplatesNotifyTemplateActiveArray{ GetNotifyTemplatesNotifyTemplateActiveArgs{...} }
type GetNotifyTemplatesNotifyTemplateActiveArrayInput interface {
	pulumi.Input

	ToGetNotifyTemplatesNotifyTemplateActiveArrayOutput() GetNotifyTemplatesNotifyTemplateActiveArrayOutput
	ToGetNotifyTemplatesNotifyTemplateActiveArrayOutputWithContext(context.Context) GetNotifyTemplatesNotifyTemplateActiveArrayOutput
}

type GetNotifyTemplatesNotifyTemplateActiveArray []GetNotifyTemplatesNotifyTemplateActiveInput

func (GetNotifyTemplatesNotifyTemplateActiveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyTemplatesNotifyTemplateActive)(nil)).Elem()
}

func (i GetNotifyTemplatesNotifyTemplateActiveArray) ToGetNotifyTemplatesNotifyTemplateActiveArrayOutput() GetNotifyTemplatesNotifyTemplateActiveArrayOutput {
	return i.ToGetNotifyTemplatesNotifyTemplateActiveArrayOutputWithContext(context.Background())
}

func (i GetNotifyTemplatesNotifyTemplateActiveArray) ToGetNotifyTemplatesNotifyTemplateActiveArrayOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateActiveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyTemplatesNotifyTemplateActiveArrayOutput)
}

type GetNotifyTemplatesNotifyTemplateActiveOutput struct{ *pulumi.OutputState }

func (GetNotifyTemplatesNotifyTemplateActiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateActive)(nil)).Elem()
}

func (o GetNotifyTemplatesNotifyTemplateActiveOutput) ToGetNotifyTemplatesNotifyTemplateActiveOutput() GetNotifyTemplatesNotifyTemplateActiveOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateActiveOutput) ToGetNotifyTemplatesNotifyTemplateActiveOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateActiveOutput {
	return o
}

// The content of notify template.
func (o GetNotifyTemplatesNotifyTemplateActiveOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplateActive) string { return v.Content }).(pulumi.StringOutput)
}

// The title of notify template.
func (o GetNotifyTemplatesNotifyTemplateActiveOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplateActive) string { return v.Title }).(pulumi.StringOutput)
}

type GetNotifyTemplatesNotifyTemplateActiveArrayOutput struct{ *pulumi.OutputState }

func (GetNotifyTemplatesNotifyTemplateActiveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyTemplatesNotifyTemplateActive)(nil)).Elem()
}

func (o GetNotifyTemplatesNotifyTemplateActiveArrayOutput) ToGetNotifyTemplatesNotifyTemplateActiveArrayOutput() GetNotifyTemplatesNotifyTemplateActiveArrayOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateActiveArrayOutput) ToGetNotifyTemplatesNotifyTemplateActiveArrayOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateActiveArrayOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateActiveArrayOutput) Index(i pulumi.IntInput) GetNotifyTemplatesNotifyTemplateActiveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotifyTemplatesNotifyTemplateActive {
		return vs[0].([]GetNotifyTemplatesNotifyTemplateActive)[vs[1].(int)]
	}).(GetNotifyTemplatesNotifyTemplateActiveOutput)
}

type GetNotifyTemplatesNotifyTemplateResolved struct {
	// The content of notify template.
	Content string `pulumi:"content"`
	// The title of notify template.
	Title string `pulumi:"title"`
}

// GetNotifyTemplatesNotifyTemplateResolvedInput is an input type that accepts GetNotifyTemplatesNotifyTemplateResolvedArgs and GetNotifyTemplatesNotifyTemplateResolvedOutput values.
// You can construct a concrete instance of `GetNotifyTemplatesNotifyTemplateResolvedInput` via:
//
//	GetNotifyTemplatesNotifyTemplateResolvedArgs{...}
type GetNotifyTemplatesNotifyTemplateResolvedInput interface {
	pulumi.Input

	ToGetNotifyTemplatesNotifyTemplateResolvedOutput() GetNotifyTemplatesNotifyTemplateResolvedOutput
	ToGetNotifyTemplatesNotifyTemplateResolvedOutputWithContext(context.Context) GetNotifyTemplatesNotifyTemplateResolvedOutput
}

type GetNotifyTemplatesNotifyTemplateResolvedArgs struct {
	// The content of notify template.
	Content pulumi.StringInput `pulumi:"content"`
	// The title of notify template.
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetNotifyTemplatesNotifyTemplateResolvedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateResolved)(nil)).Elem()
}

func (i GetNotifyTemplatesNotifyTemplateResolvedArgs) ToGetNotifyTemplatesNotifyTemplateResolvedOutput() GetNotifyTemplatesNotifyTemplateResolvedOutput {
	return i.ToGetNotifyTemplatesNotifyTemplateResolvedOutputWithContext(context.Background())
}

func (i GetNotifyTemplatesNotifyTemplateResolvedArgs) ToGetNotifyTemplatesNotifyTemplateResolvedOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateResolvedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyTemplatesNotifyTemplateResolvedOutput)
}

// GetNotifyTemplatesNotifyTemplateResolvedArrayInput is an input type that accepts GetNotifyTemplatesNotifyTemplateResolvedArray and GetNotifyTemplatesNotifyTemplateResolvedArrayOutput values.
// You can construct a concrete instance of `GetNotifyTemplatesNotifyTemplateResolvedArrayInput` via:
//
//	GetNotifyTemplatesNotifyTemplateResolvedArray{ GetNotifyTemplatesNotifyTemplateResolvedArgs{...} }
type GetNotifyTemplatesNotifyTemplateResolvedArrayInput interface {
	pulumi.Input

	ToGetNotifyTemplatesNotifyTemplateResolvedArrayOutput() GetNotifyTemplatesNotifyTemplateResolvedArrayOutput
	ToGetNotifyTemplatesNotifyTemplateResolvedArrayOutputWithContext(context.Context) GetNotifyTemplatesNotifyTemplateResolvedArrayOutput
}

type GetNotifyTemplatesNotifyTemplateResolvedArray []GetNotifyTemplatesNotifyTemplateResolvedInput

func (GetNotifyTemplatesNotifyTemplateResolvedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyTemplatesNotifyTemplateResolved)(nil)).Elem()
}

func (i GetNotifyTemplatesNotifyTemplateResolvedArray) ToGetNotifyTemplatesNotifyTemplateResolvedArrayOutput() GetNotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return i.ToGetNotifyTemplatesNotifyTemplateResolvedArrayOutputWithContext(context.Background())
}

func (i GetNotifyTemplatesNotifyTemplateResolvedArray) ToGetNotifyTemplatesNotifyTemplateResolvedArrayOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotifyTemplatesNotifyTemplateResolvedArrayOutput)
}

type GetNotifyTemplatesNotifyTemplateResolvedOutput struct{ *pulumi.OutputState }

func (GetNotifyTemplatesNotifyTemplateResolvedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateResolved)(nil)).Elem()
}

func (o GetNotifyTemplatesNotifyTemplateResolvedOutput) ToGetNotifyTemplatesNotifyTemplateResolvedOutput() GetNotifyTemplatesNotifyTemplateResolvedOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateResolvedOutput) ToGetNotifyTemplatesNotifyTemplateResolvedOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateResolvedOutput {
	return o
}

// The content of notify template.
func (o GetNotifyTemplatesNotifyTemplateResolvedOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplateResolved) string { return v.Content }).(pulumi.StringOutput)
}

// The title of notify template.
func (o GetNotifyTemplatesNotifyTemplateResolvedOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotifyTemplatesNotifyTemplateResolved) string { return v.Title }).(pulumi.StringOutput)
}

type GetNotifyTemplatesNotifyTemplateResolvedArrayOutput struct{ *pulumi.OutputState }

func (GetNotifyTemplatesNotifyTemplateResolvedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotifyTemplatesNotifyTemplateResolved)(nil)).Elem()
}

func (o GetNotifyTemplatesNotifyTemplateResolvedArrayOutput) ToGetNotifyTemplatesNotifyTemplateResolvedArrayOutput() GetNotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateResolvedArrayOutput) ToGetNotifyTemplatesNotifyTemplateResolvedArrayOutputWithContext(ctx context.Context) GetNotifyTemplatesNotifyTemplateResolvedArrayOutput {
	return o
}

func (o GetNotifyTemplatesNotifyTemplateResolvedArrayOutput) Index(i pulumi.IntInput) GetNotifyTemplatesNotifyTemplateResolvedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotifyTemplatesNotifyTemplateResolved {
		return vs[0].([]GetNotifyTemplatesNotifyTemplateResolved)[vs[1].(int)]
	}).(GetNotifyTemplatesNotifyTemplateResolvedOutput)
}

type GetRuleFilesFile struct {
	// The content of rule file.
	Content string `pulumi:"content"`
	// The create time of rule file.
	CreateTime string `pulumi:"createTime"`
	// The description of rule file.
	Description string `pulumi:"description"`
	// The ID of rule file.
	Id string `pulumi:"id"`
	// The last update time of rule file.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The name of rule file.
	Name string `pulumi:"name"`
	// The rule count number of rule file.
	RuleCount int `pulumi:"ruleCount"`
	// The status of rule file.
	Status string `pulumi:"status"`
}

// GetRuleFilesFileInput is an input type that accepts GetRuleFilesFileArgs and GetRuleFilesFileOutput values.
// You can construct a concrete instance of `GetRuleFilesFileInput` via:
//
//	GetRuleFilesFileArgs{...}
type GetRuleFilesFileInput interface {
	pulumi.Input

	ToGetRuleFilesFileOutput() GetRuleFilesFileOutput
	ToGetRuleFilesFileOutputWithContext(context.Context) GetRuleFilesFileOutput
}

type GetRuleFilesFileArgs struct {
	// The content of rule file.
	Content pulumi.StringInput `pulumi:"content"`
	// The create time of rule file.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of rule file.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of rule file.
	Id pulumi.StringInput `pulumi:"id"`
	// The last update time of rule file.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The name of rule file.
	Name pulumi.StringInput `pulumi:"name"`
	// The rule count number of rule file.
	RuleCount pulumi.IntInput `pulumi:"ruleCount"`
	// The status of rule file.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRuleFilesFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleFilesFile)(nil)).Elem()
}

func (i GetRuleFilesFileArgs) ToGetRuleFilesFileOutput() GetRuleFilesFileOutput {
	return i.ToGetRuleFilesFileOutputWithContext(context.Background())
}

func (i GetRuleFilesFileArgs) ToGetRuleFilesFileOutputWithContext(ctx context.Context) GetRuleFilesFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleFilesFileOutput)
}

// GetRuleFilesFileArrayInput is an input type that accepts GetRuleFilesFileArray and GetRuleFilesFileArrayOutput values.
// You can construct a concrete instance of `GetRuleFilesFileArrayInput` via:
//
//	GetRuleFilesFileArray{ GetRuleFilesFileArgs{...} }
type GetRuleFilesFileArrayInput interface {
	pulumi.Input

	ToGetRuleFilesFileArrayOutput() GetRuleFilesFileArrayOutput
	ToGetRuleFilesFileArrayOutputWithContext(context.Context) GetRuleFilesFileArrayOutput
}

type GetRuleFilesFileArray []GetRuleFilesFileInput

func (GetRuleFilesFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleFilesFile)(nil)).Elem()
}

func (i GetRuleFilesFileArray) ToGetRuleFilesFileArrayOutput() GetRuleFilesFileArrayOutput {
	return i.ToGetRuleFilesFileArrayOutputWithContext(context.Background())
}

func (i GetRuleFilesFileArray) ToGetRuleFilesFileArrayOutputWithContext(ctx context.Context) GetRuleFilesFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleFilesFileArrayOutput)
}

type GetRuleFilesFileOutput struct{ *pulumi.OutputState }

func (GetRuleFilesFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleFilesFile)(nil)).Elem()
}

func (o GetRuleFilesFileOutput) ToGetRuleFilesFileOutput() GetRuleFilesFileOutput {
	return o
}

func (o GetRuleFilesFileOutput) ToGetRuleFilesFileOutputWithContext(ctx context.Context) GetRuleFilesFileOutput {
	return o
}

// The content of rule file.
func (o GetRuleFilesFileOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesFile) string { return v.Content }).(pulumi.StringOutput)
}

// The create time of rule file.
func (o GetRuleFilesFileOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesFile) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of rule file.
func (o GetRuleFilesFileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesFile) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of rule file.
func (o GetRuleFilesFileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesFile) string { return v.Id }).(pulumi.StringOutput)
}

// The last update time of rule file.
func (o GetRuleFilesFileOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesFile) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The name of rule file.
func (o GetRuleFilesFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesFile) string { return v.Name }).(pulumi.StringOutput)
}

// The rule count number of rule file.
func (o GetRuleFilesFileOutput) RuleCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleFilesFile) int { return v.RuleCount }).(pulumi.IntOutput)
}

// The status of rule file.
func (o GetRuleFilesFileOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleFilesFile) string { return v.Status }).(pulumi.StringOutput)
}

type GetRuleFilesFileArrayOutput struct{ *pulumi.OutputState }

func (GetRuleFilesFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleFilesFile)(nil)).Elem()
}

func (o GetRuleFilesFileArrayOutput) ToGetRuleFilesFileArrayOutput() GetRuleFilesFileArrayOutput {
	return o
}

func (o GetRuleFilesFileArrayOutput) ToGetRuleFilesFileArrayOutputWithContext(ctx context.Context) GetRuleFilesFileArrayOutput {
	return o
}

func (o GetRuleFilesFileArrayOutput) Index(i pulumi.IntInput) GetRuleFilesFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleFilesFile {
		return vs[0].([]GetRuleFilesFile)[vs[1].(int)]
	}).(GetRuleFilesFileOutput)
}

type GetRulesRule struct {
	// The expr of rule.
	Expr string `pulumi:"expr"`
	// The kind of rule.
	Kind string `pulumi:"kind"`
	// The labels of rule.
	Labels []GetRulesRuleLabel `pulumi:"labels"`
	// The last evaluation of rule.
	LastEvaluation string `pulumi:"lastEvaluation"`
	// The name of rule.
	Name string `pulumi:"name"`
	// The reason of rule.
	Reason string `pulumi:"reason"`
	// The name of rule file.
	RuleFileName string `pulumi:"ruleFileName"`
	// The name of rule group.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The status of rule.
	Status string `pulumi:"status"`
}

// GetRulesRuleInput is an input type that accepts GetRulesRuleArgs and GetRulesRuleOutput values.
// You can construct a concrete instance of `GetRulesRuleInput` via:
//
//	GetRulesRuleArgs{...}
type GetRulesRuleInput interface {
	pulumi.Input

	ToGetRulesRuleOutput() GetRulesRuleOutput
	ToGetRulesRuleOutputWithContext(context.Context) GetRulesRuleOutput
}

type GetRulesRuleArgs struct {
	// The expr of rule.
	Expr pulumi.StringInput `pulumi:"expr"`
	// The kind of rule.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The labels of rule.
	Labels GetRulesRuleLabelArrayInput `pulumi:"labels"`
	// The last evaluation of rule.
	LastEvaluation pulumi.StringInput `pulumi:"lastEvaluation"`
	// The name of rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The reason of rule.
	Reason pulumi.StringInput `pulumi:"reason"`
	// The name of rule file.
	RuleFileName pulumi.StringInput `pulumi:"ruleFileName"`
	// The name of rule group.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The status of rule.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRule)(nil)).Elem()
}

func (i GetRulesRuleArgs) ToGetRulesRuleOutput() GetRulesRuleOutput {
	return i.ToGetRulesRuleOutputWithContext(context.Background())
}

func (i GetRulesRuleArgs) ToGetRulesRuleOutputWithContext(ctx context.Context) GetRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleOutput)
}

// GetRulesRuleArrayInput is an input type that accepts GetRulesRuleArray and GetRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetRulesRuleArrayInput` via:
//
//	GetRulesRuleArray{ GetRulesRuleArgs{...} }
type GetRulesRuleArrayInput interface {
	pulumi.Input

	ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput
	ToGetRulesRuleArrayOutputWithContext(context.Context) GetRulesRuleArrayOutput
}

type GetRulesRuleArray []GetRulesRuleInput

func (GetRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRule)(nil)).Elem()
}

func (i GetRulesRuleArray) ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput {
	return i.ToGetRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetRulesRuleArray) ToGetRulesRuleArrayOutputWithContext(ctx context.Context) GetRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleArrayOutput)
}

type GetRulesRuleOutput struct{ *pulumi.OutputState }

func (GetRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRule)(nil)).Elem()
}

func (o GetRulesRuleOutput) ToGetRulesRuleOutput() GetRulesRuleOutput {
	return o
}

func (o GetRulesRuleOutput) ToGetRulesRuleOutputWithContext(ctx context.Context) GetRulesRuleOutput {
	return o
}

// The expr of rule.
func (o GetRulesRuleOutput) Expr() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Expr }).(pulumi.StringOutput)
}

// The kind of rule.
func (o GetRulesRuleOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Kind }).(pulumi.StringOutput)
}

// The labels of rule.
func (o GetRulesRuleOutput) Labels() GetRulesRuleLabelArrayOutput {
	return o.ApplyT(func(v GetRulesRule) []GetRulesRuleLabel { return v.Labels }).(GetRulesRuleLabelArrayOutput)
}

// The last evaluation of rule.
func (o GetRulesRuleOutput) LastEvaluation() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.LastEvaluation }).(pulumi.StringOutput)
}

// The name of rule.
func (o GetRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

// The reason of rule.
func (o GetRulesRuleOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Reason }).(pulumi.StringOutput)
}

// The name of rule file.
func (o GetRulesRuleOutput) RuleFileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.RuleFileName }).(pulumi.StringOutput)
}

// The name of rule group.
func (o GetRulesRuleOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The status of rule.
func (o GetRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

type GetRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRule)(nil)).Elem()
}

func (o GetRulesRuleArrayOutput) ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput {
	return o
}

func (o GetRulesRuleArrayOutput) ToGetRulesRuleArrayOutputWithContext(ctx context.Context) GetRulesRuleArrayOutput {
	return o
}

func (o GetRulesRuleArrayOutput) Index(i pulumi.IntInput) GetRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesRule {
		return vs[0].([]GetRulesRule)[vs[1].(int)]
	}).(GetRulesRuleOutput)
}

type GetRulesRuleLabel struct {
	// The key of label.
	Key string `pulumi:"key"`
	// The value of label.
	Value string `pulumi:"value"`
}

// GetRulesRuleLabelInput is an input type that accepts GetRulesRuleLabelArgs and GetRulesRuleLabelOutput values.
// You can construct a concrete instance of `GetRulesRuleLabelInput` via:
//
//	GetRulesRuleLabelArgs{...}
type GetRulesRuleLabelInput interface {
	pulumi.Input

	ToGetRulesRuleLabelOutput() GetRulesRuleLabelOutput
	ToGetRulesRuleLabelOutputWithContext(context.Context) GetRulesRuleLabelOutput
}

type GetRulesRuleLabelArgs struct {
	// The key of label.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of label.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRulesRuleLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRuleLabel)(nil)).Elem()
}

func (i GetRulesRuleLabelArgs) ToGetRulesRuleLabelOutput() GetRulesRuleLabelOutput {
	return i.ToGetRulesRuleLabelOutputWithContext(context.Background())
}

func (i GetRulesRuleLabelArgs) ToGetRulesRuleLabelOutputWithContext(ctx context.Context) GetRulesRuleLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleLabelOutput)
}

// GetRulesRuleLabelArrayInput is an input type that accepts GetRulesRuleLabelArray and GetRulesRuleLabelArrayOutput values.
// You can construct a concrete instance of `GetRulesRuleLabelArrayInput` via:
//
//	GetRulesRuleLabelArray{ GetRulesRuleLabelArgs{...} }
type GetRulesRuleLabelArrayInput interface {
	pulumi.Input

	ToGetRulesRuleLabelArrayOutput() GetRulesRuleLabelArrayOutput
	ToGetRulesRuleLabelArrayOutputWithContext(context.Context) GetRulesRuleLabelArrayOutput
}

type GetRulesRuleLabelArray []GetRulesRuleLabelInput

func (GetRulesRuleLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRuleLabel)(nil)).Elem()
}

func (i GetRulesRuleLabelArray) ToGetRulesRuleLabelArrayOutput() GetRulesRuleLabelArrayOutput {
	return i.ToGetRulesRuleLabelArrayOutputWithContext(context.Background())
}

func (i GetRulesRuleLabelArray) ToGetRulesRuleLabelArrayOutputWithContext(ctx context.Context) GetRulesRuleLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleLabelArrayOutput)
}

type GetRulesRuleLabelOutput struct{ *pulumi.OutputState }

func (GetRulesRuleLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRuleLabel)(nil)).Elem()
}

func (o GetRulesRuleLabelOutput) ToGetRulesRuleLabelOutput() GetRulesRuleLabelOutput {
	return o
}

func (o GetRulesRuleLabelOutput) ToGetRulesRuleLabelOutputWithContext(ctx context.Context) GetRulesRuleLabelOutput {
	return o
}

// The key of label.
func (o GetRulesRuleLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRuleLabel) string { return v.Key }).(pulumi.StringOutput)
}

// The value of label.
func (o GetRulesRuleLabelOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRuleLabel) string { return v.Value }).(pulumi.StringOutput)
}

type GetRulesRuleLabelArrayOutput struct{ *pulumi.OutputState }

func (GetRulesRuleLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRuleLabel)(nil)).Elem()
}

func (o GetRulesRuleLabelArrayOutput) ToGetRulesRuleLabelArrayOutput() GetRulesRuleLabelArrayOutput {
	return o
}

func (o GetRulesRuleLabelArrayOutput) ToGetRulesRuleLabelArrayOutputWithContext(ctx context.Context) GetRulesRuleLabelArrayOutput {
	return o
}

func (o GetRulesRuleLabelArrayOutput) Index(i pulumi.IntInput) GetRulesRuleLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesRuleLabel {
		return vs[0].([]GetRulesRuleLabel)[vs[1].(int)]
	}).(GetRulesRuleLabelOutput)
}

type GetWorkspacesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Values []string `pulumi:"values"`
}

// GetWorkspacesTagInput is an input type that accepts GetWorkspacesTagArgs and GetWorkspacesTagOutput values.
// You can construct a concrete instance of `GetWorkspacesTagInput` via:
//
//	GetWorkspacesTagArgs{...}
type GetWorkspacesTagInput interface {
	pulumi.Input

	ToGetWorkspacesTagOutput() GetWorkspacesTagOutput
	ToGetWorkspacesTagOutputWithContext(context.Context) GetWorkspacesTagOutput
}

type GetWorkspacesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetWorkspacesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesTag)(nil)).Elem()
}

func (i GetWorkspacesTagArgs) ToGetWorkspacesTagOutput() GetWorkspacesTagOutput {
	return i.ToGetWorkspacesTagOutputWithContext(context.Background())
}

func (i GetWorkspacesTagArgs) ToGetWorkspacesTagOutputWithContext(ctx context.Context) GetWorkspacesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspacesTagOutput)
}

// GetWorkspacesTagArrayInput is an input type that accepts GetWorkspacesTagArray and GetWorkspacesTagArrayOutput values.
// You can construct a concrete instance of `GetWorkspacesTagArrayInput` via:
//
//	GetWorkspacesTagArray{ GetWorkspacesTagArgs{...} }
type GetWorkspacesTagArrayInput interface {
	pulumi.Input

	ToGetWorkspacesTagArrayOutput() GetWorkspacesTagArrayOutput
	ToGetWorkspacesTagArrayOutputWithContext(context.Context) GetWorkspacesTagArrayOutput
}

type GetWorkspacesTagArray []GetWorkspacesTagInput

func (GetWorkspacesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspacesTag)(nil)).Elem()
}

func (i GetWorkspacesTagArray) ToGetWorkspacesTagArrayOutput() GetWorkspacesTagArrayOutput {
	return i.ToGetWorkspacesTagArrayOutputWithContext(context.Background())
}

func (i GetWorkspacesTagArray) ToGetWorkspacesTagArrayOutputWithContext(ctx context.Context) GetWorkspacesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspacesTagArrayOutput)
}

type GetWorkspacesTagOutput struct{ *pulumi.OutputState }

func (GetWorkspacesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesTag)(nil)).Elem()
}

func (o GetWorkspacesTagOutput) ToGetWorkspacesTagOutput() GetWorkspacesTagOutput {
	return o
}

func (o GetWorkspacesTagOutput) ToGetWorkspacesTagOutputWithContext(ctx context.Context) GetWorkspacesTagOutput {
	return o
}

// The Key of Tags.
func (o GetWorkspacesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetWorkspacesTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkspacesTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetWorkspacesTagArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspacesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspacesTag)(nil)).Elem()
}

func (o GetWorkspacesTagArrayOutput) ToGetWorkspacesTagArrayOutput() GetWorkspacesTagArrayOutput {
	return o
}

func (o GetWorkspacesTagArrayOutput) ToGetWorkspacesTagArrayOutputWithContext(ctx context.Context) GetWorkspacesTagArrayOutput {
	return o
}

func (o GetWorkspacesTagArrayOutput) Index(i pulumi.IntInput) GetWorkspacesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspacesTag {
		return vs[0].([]GetWorkspacesTag)[vs[1].(int)]
	}).(GetWorkspacesTagOutput)
}

type GetWorkspacesWorkspace struct {
	// The create time of workspace.
	CreateTime string `pulumi:"createTime"`
	// Whether enable delete protection.
	DeleteProtectionEnabled bool `pulumi:"deleteProtectionEnabled"`
	// The description of workspace.
	Description string `pulumi:"description"`
	// The ID of workspace.
	Id string `pulumi:"id"`
	// The id of instance type.
	InstanceTypeId string `pulumi:"instanceTypeId"`
	// The name of workspace.
	Name string `pulumi:"name"`
	// The overdue reclaim time.
	OverdueReclaimTime string `pulumi:"overdueReclaimTime"`
	// The project name of vmp workspace.
	ProjectName string `pulumi:"projectName"`
	// The prometheus push intranet endpoint.
	PrometheusPushIntranetEndpoint string `pulumi:"prometheusPushIntranetEndpoint"`
	// The prometheus query intranet endpoint.
	PrometheusQueryIntranetEndpoint string `pulumi:"prometheusQueryIntranetEndpoint"`
	// The prometheus write intranet endpoint.
	PrometheusWriteIntranetEndpoint string `pulumi:"prometheusWriteIntranetEndpoint"`
	// The status of workspace.
	Status string `pulumi:"status"`
	// The tags of vmp workspace.
	Tags []GetWorkspacesWorkspaceTag `pulumi:"tags"`
	// The username of workspace.
	Username string `pulumi:"username"`
}

// GetWorkspacesWorkspaceInput is an input type that accepts GetWorkspacesWorkspaceArgs and GetWorkspacesWorkspaceOutput values.
// You can construct a concrete instance of `GetWorkspacesWorkspaceInput` via:
//
//	GetWorkspacesWorkspaceArgs{...}
type GetWorkspacesWorkspaceInput interface {
	pulumi.Input

	ToGetWorkspacesWorkspaceOutput() GetWorkspacesWorkspaceOutput
	ToGetWorkspacesWorkspaceOutputWithContext(context.Context) GetWorkspacesWorkspaceOutput
}

type GetWorkspacesWorkspaceArgs struct {
	// The create time of workspace.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Whether enable delete protection.
	DeleteProtectionEnabled pulumi.BoolInput `pulumi:"deleteProtectionEnabled"`
	// The description of workspace.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of workspace.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of instance type.
	InstanceTypeId pulumi.StringInput `pulumi:"instanceTypeId"`
	// The name of workspace.
	Name pulumi.StringInput `pulumi:"name"`
	// The overdue reclaim time.
	OverdueReclaimTime pulumi.StringInput `pulumi:"overdueReclaimTime"`
	// The project name of vmp workspace.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The prometheus push intranet endpoint.
	PrometheusPushIntranetEndpoint pulumi.StringInput `pulumi:"prometheusPushIntranetEndpoint"`
	// The prometheus query intranet endpoint.
	PrometheusQueryIntranetEndpoint pulumi.StringInput `pulumi:"prometheusQueryIntranetEndpoint"`
	// The prometheus write intranet endpoint.
	PrometheusWriteIntranetEndpoint pulumi.StringInput `pulumi:"prometheusWriteIntranetEndpoint"`
	// The status of workspace.
	Status pulumi.StringInput `pulumi:"status"`
	// The tags of vmp workspace.
	Tags GetWorkspacesWorkspaceTagArrayInput `pulumi:"tags"`
	// The username of workspace.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetWorkspacesWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesWorkspace)(nil)).Elem()
}

func (i GetWorkspacesWorkspaceArgs) ToGetWorkspacesWorkspaceOutput() GetWorkspacesWorkspaceOutput {
	return i.ToGetWorkspacesWorkspaceOutputWithContext(context.Background())
}

func (i GetWorkspacesWorkspaceArgs) ToGetWorkspacesWorkspaceOutputWithContext(ctx context.Context) GetWorkspacesWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspacesWorkspaceOutput)
}

// GetWorkspacesWorkspaceArrayInput is an input type that accepts GetWorkspacesWorkspaceArray and GetWorkspacesWorkspaceArrayOutput values.
// You can construct a concrete instance of `GetWorkspacesWorkspaceArrayInput` via:
//
//	GetWorkspacesWorkspaceArray{ GetWorkspacesWorkspaceArgs{...} }
type GetWorkspacesWorkspaceArrayInput interface {
	pulumi.Input

	ToGetWorkspacesWorkspaceArrayOutput() GetWorkspacesWorkspaceArrayOutput
	ToGetWorkspacesWorkspaceArrayOutputWithContext(context.Context) GetWorkspacesWorkspaceArrayOutput
}

type GetWorkspacesWorkspaceArray []GetWorkspacesWorkspaceInput

func (GetWorkspacesWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspacesWorkspace)(nil)).Elem()
}

func (i GetWorkspacesWorkspaceArray) ToGetWorkspacesWorkspaceArrayOutput() GetWorkspacesWorkspaceArrayOutput {
	return i.ToGetWorkspacesWorkspaceArrayOutputWithContext(context.Background())
}

func (i GetWorkspacesWorkspaceArray) ToGetWorkspacesWorkspaceArrayOutputWithContext(ctx context.Context) GetWorkspacesWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspacesWorkspaceArrayOutput)
}

type GetWorkspacesWorkspaceOutput struct{ *pulumi.OutputState }

func (GetWorkspacesWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesWorkspace)(nil)).Elem()
}

func (o GetWorkspacesWorkspaceOutput) ToGetWorkspacesWorkspaceOutput() GetWorkspacesWorkspaceOutput {
	return o
}

func (o GetWorkspacesWorkspaceOutput) ToGetWorkspacesWorkspaceOutputWithContext(ctx context.Context) GetWorkspacesWorkspaceOutput {
	return o
}

// The create time of workspace.
func (o GetWorkspacesWorkspaceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether enable delete protection.
func (o GetWorkspacesWorkspaceOutput) DeleteProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) bool { return v.DeleteProtectionEnabled }).(pulumi.BoolOutput)
}

// The description of workspace.
func (o GetWorkspacesWorkspaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of workspace.
func (o GetWorkspacesWorkspaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.Id }).(pulumi.StringOutput)
}

// The id of instance type.
func (o GetWorkspacesWorkspaceOutput) InstanceTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.InstanceTypeId }).(pulumi.StringOutput)
}

// The name of workspace.
func (o GetWorkspacesWorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.Name }).(pulumi.StringOutput)
}

// The overdue reclaim time.
func (o GetWorkspacesWorkspaceOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// The project name of vmp workspace.
func (o GetWorkspacesWorkspaceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The prometheus push intranet endpoint.
func (o GetWorkspacesWorkspaceOutput) PrometheusPushIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.PrometheusPushIntranetEndpoint }).(pulumi.StringOutput)
}

// The prometheus query intranet endpoint.
func (o GetWorkspacesWorkspaceOutput) PrometheusQueryIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.PrometheusQueryIntranetEndpoint }).(pulumi.StringOutput)
}

// The prometheus write intranet endpoint.
func (o GetWorkspacesWorkspaceOutput) PrometheusWriteIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.PrometheusWriteIntranetEndpoint }).(pulumi.StringOutput)
}

// The status of workspace.
func (o GetWorkspacesWorkspaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.Status }).(pulumi.StringOutput)
}

// The tags of vmp workspace.
func (o GetWorkspacesWorkspaceOutput) Tags() GetWorkspacesWorkspaceTagArrayOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) []GetWorkspacesWorkspaceTag { return v.Tags }).(GetWorkspacesWorkspaceTagArrayOutput)
}

// The username of workspace.
func (o GetWorkspacesWorkspaceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspace) string { return v.Username }).(pulumi.StringOutput)
}

type GetWorkspacesWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspacesWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspacesWorkspace)(nil)).Elem()
}

func (o GetWorkspacesWorkspaceArrayOutput) ToGetWorkspacesWorkspaceArrayOutput() GetWorkspacesWorkspaceArrayOutput {
	return o
}

func (o GetWorkspacesWorkspaceArrayOutput) ToGetWorkspacesWorkspaceArrayOutputWithContext(ctx context.Context) GetWorkspacesWorkspaceArrayOutput {
	return o
}

func (o GetWorkspacesWorkspaceArrayOutput) Index(i pulumi.IntInput) GetWorkspacesWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspacesWorkspace {
		return vs[0].([]GetWorkspacesWorkspace)[vs[1].(int)]
	}).(GetWorkspacesWorkspaceOutput)
}

type GetWorkspacesWorkspaceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetWorkspacesWorkspaceTagInput is an input type that accepts GetWorkspacesWorkspaceTagArgs and GetWorkspacesWorkspaceTagOutput values.
// You can construct a concrete instance of `GetWorkspacesWorkspaceTagInput` via:
//
//	GetWorkspacesWorkspaceTagArgs{...}
type GetWorkspacesWorkspaceTagInput interface {
	pulumi.Input

	ToGetWorkspacesWorkspaceTagOutput() GetWorkspacesWorkspaceTagOutput
	ToGetWorkspacesWorkspaceTagOutputWithContext(context.Context) GetWorkspacesWorkspaceTagOutput
}

type GetWorkspacesWorkspaceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetWorkspacesWorkspaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesWorkspaceTag)(nil)).Elem()
}

func (i GetWorkspacesWorkspaceTagArgs) ToGetWorkspacesWorkspaceTagOutput() GetWorkspacesWorkspaceTagOutput {
	return i.ToGetWorkspacesWorkspaceTagOutputWithContext(context.Background())
}

func (i GetWorkspacesWorkspaceTagArgs) ToGetWorkspacesWorkspaceTagOutputWithContext(ctx context.Context) GetWorkspacesWorkspaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspacesWorkspaceTagOutput)
}

// GetWorkspacesWorkspaceTagArrayInput is an input type that accepts GetWorkspacesWorkspaceTagArray and GetWorkspacesWorkspaceTagArrayOutput values.
// You can construct a concrete instance of `GetWorkspacesWorkspaceTagArrayInput` via:
//
//	GetWorkspacesWorkspaceTagArray{ GetWorkspacesWorkspaceTagArgs{...} }
type GetWorkspacesWorkspaceTagArrayInput interface {
	pulumi.Input

	ToGetWorkspacesWorkspaceTagArrayOutput() GetWorkspacesWorkspaceTagArrayOutput
	ToGetWorkspacesWorkspaceTagArrayOutputWithContext(context.Context) GetWorkspacesWorkspaceTagArrayOutput
}

type GetWorkspacesWorkspaceTagArray []GetWorkspacesWorkspaceTagInput

func (GetWorkspacesWorkspaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspacesWorkspaceTag)(nil)).Elem()
}

func (i GetWorkspacesWorkspaceTagArray) ToGetWorkspacesWorkspaceTagArrayOutput() GetWorkspacesWorkspaceTagArrayOutput {
	return i.ToGetWorkspacesWorkspaceTagArrayOutputWithContext(context.Background())
}

func (i GetWorkspacesWorkspaceTagArray) ToGetWorkspacesWorkspaceTagArrayOutputWithContext(ctx context.Context) GetWorkspacesWorkspaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspacesWorkspaceTagArrayOutput)
}

type GetWorkspacesWorkspaceTagOutput struct{ *pulumi.OutputState }

func (GetWorkspacesWorkspaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesWorkspaceTag)(nil)).Elem()
}

func (o GetWorkspacesWorkspaceTagOutput) ToGetWorkspacesWorkspaceTagOutput() GetWorkspacesWorkspaceTagOutput {
	return o
}

func (o GetWorkspacesWorkspaceTagOutput) ToGetWorkspacesWorkspaceTagOutputWithContext(ctx context.Context) GetWorkspacesWorkspaceTagOutput {
	return o
}

// The Key of Tags.
func (o GetWorkspacesWorkspaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetWorkspacesWorkspaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesWorkspaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetWorkspacesWorkspaceTagArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspacesWorkspaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspacesWorkspaceTag)(nil)).Elem()
}

func (o GetWorkspacesWorkspaceTagArrayOutput) ToGetWorkspacesWorkspaceTagArrayOutput() GetWorkspacesWorkspaceTagArrayOutput {
	return o
}

func (o GetWorkspacesWorkspaceTagArrayOutput) ToGetWorkspacesWorkspaceTagArrayOutputWithContext(ctx context.Context) GetWorkspacesWorkspaceTagArrayOutput {
	return o
}

func (o GetWorkspacesWorkspaceTagArrayOutput) Index(i pulumi.IntInput) GetWorkspacesWorkspaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspacesWorkspaceTag {
		return vs[0].([]GetWorkspacesWorkspaceTag)[vs[1].(int)]
	}).(GetWorkspacesWorkspaceTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleAnnotationInput)(nil)).Elem(), AlertingRuleAnnotationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleAnnotationArrayInput)(nil)).Elem(), AlertingRuleAnnotationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleLabelInput)(nil)).Elem(), AlertingRuleLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleLabelArrayInput)(nil)).Elem(), AlertingRuleLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleLevelInput)(nil)).Elem(), AlertingRuleLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleLevelArrayInput)(nil)).Elem(), AlertingRuleLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleQueryInput)(nil)).Elem(), AlertingRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRuleQueryPtrInput)(nil)).Elem(), AlertingRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleInput)(nil)).Elem(), AlertingRulesAlertingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleArrayInput)(nil)).Elem(), AlertingRulesAlertingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleAnnotationInput)(nil)).Elem(), AlertingRulesAlertingRuleAnnotationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleAnnotationArrayInput)(nil)).Elem(), AlertingRulesAlertingRuleAnnotationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleLabelInput)(nil)).Elem(), AlertingRulesAlertingRuleLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleLabelArrayInput)(nil)).Elem(), AlertingRulesAlertingRuleLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleLevelInput)(nil)).Elem(), AlertingRulesAlertingRuleLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleLevelArrayInput)(nil)).Elem(), AlertingRulesAlertingRuleLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleQueryInput)(nil)).Elem(), AlertingRulesAlertingRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingRulesAlertingRuleQueryArrayInput)(nil)).Elem(), AlertingRulesAlertingRuleQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertInput)(nil)).Elem(), AlertsAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertArrayInput)(nil)).Elem(), AlertsAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertAlertingRuleQueryInput)(nil)).Elem(), AlertsAlertAlertingRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertAlertingRuleQueryArrayInput)(nil)).Elem(), AlertsAlertAlertingRuleQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertLevelInput)(nil)).Elem(), AlertsAlertLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertLevelArrayInput)(nil)).Elem(), AlertsAlertLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertResourceInput)(nil)).Elem(), AlertsAlertResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertResourceArrayInput)(nil)).Elem(), AlertsAlertResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertResourceLabelInput)(nil)).Elem(), AlertsAlertResourceLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertsAlertResourceLabelArrayInput)(nil)).Elem(), AlertsAlertResourceLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactDingTalkBotWebhookInput)(nil)).Elem(), ContactDingTalkBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactDingTalkBotWebhookPtrInput)(nil)).Elem(), ContactDingTalkBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactGroupsContactGroupInput)(nil)).Elem(), ContactGroupsContactGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactGroupsContactGroupArrayInput)(nil)).Elem(), ContactGroupsContactGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactLarkBotWebhookInput)(nil)).Elem(), ContactLarkBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactLarkBotWebhookPtrInput)(nil)).Elem(), ContactLarkBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactPhoneNumberInput)(nil)).Elem(), ContactPhoneNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactPhoneNumberPtrInput)(nil)).Elem(), ContactPhoneNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactWeComBotWebhookInput)(nil)).Elem(), ContactWeComBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactWeComBotWebhookPtrInput)(nil)).Elem(), ContactWeComBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactWebhookInput)(nil)).Elem(), ContactWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactWebhookPtrInput)(nil)).Elem(), ContactWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactInput)(nil)).Elem(), ContactsContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactArrayInput)(nil)).Elem(), ContactsContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactDingTalkBotWebhookInput)(nil)).Elem(), ContactsContactDingTalkBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactDingTalkBotWebhookArrayInput)(nil)).Elem(), ContactsContactDingTalkBotWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactLarkBotWebhookInput)(nil)).Elem(), ContactsContactLarkBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactLarkBotWebhookArrayInput)(nil)).Elem(), ContactsContactLarkBotWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactPhoneNumberInput)(nil)).Elem(), ContactsContactPhoneNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactPhoneNumberArrayInput)(nil)).Elem(), ContactsContactPhoneNumberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactWeComBotWebhookInput)(nil)).Elem(), ContactsContactWeComBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactWeComBotWebhookArrayInput)(nil)).Elem(), ContactsContactWeComBotWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactWebhookInput)(nil)).Elem(), ContactsContactWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactsContactWebhookArrayInput)(nil)).Elem(), ContactsContactWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTypesInstanceTypeInput)(nil)).Elem(), InstanceTypesInstanceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTypesInstanceTypeArrayInput)(nil)).Elem(), InstanceTypesInstanceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyGroupPoliciesNotifyPolicyInput)(nil)).Elem(), NotifyGroupPoliciesNotifyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyGroupPoliciesNotifyPolicyArrayInput)(nil)).Elem(), NotifyGroupPoliciesNotifyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyGroupPoliciesNotifyPolicyLevelInput)(nil)).Elem(), NotifyGroupPoliciesNotifyPolicyLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyGroupPoliciesNotifyPolicyLevelArrayInput)(nil)).Elem(), NotifyGroupPoliciesNotifyPolicyLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyGroupPolicyLevelInput)(nil)).Elem(), NotifyGroupPolicyLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyGroupPolicyLevelArrayInput)(nil)).Elem(), NotifyGroupPolicyLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyPoliciesNotifyPolicyInput)(nil)).Elem(), NotifyPoliciesNotifyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyPoliciesNotifyPolicyArrayInput)(nil)).Elem(), NotifyPoliciesNotifyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyPoliciesNotifyPolicyLevelInput)(nil)).Elem(), NotifyPoliciesNotifyPolicyLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyPoliciesNotifyPolicyLevelArrayInput)(nil)).Elem(), NotifyPoliciesNotifyPolicyLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyPolicyLevelInput)(nil)).Elem(), NotifyPolicyLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyPolicyLevelArrayInput)(nil)).Elem(), NotifyPolicyLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplateActiveInput)(nil)).Elem(), NotifyTemplateActiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplateActivePtrInput)(nil)).Elem(), NotifyTemplateActiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplateResolvedInput)(nil)).Elem(), NotifyTemplateResolvedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplateResolvedPtrInput)(nil)).Elem(), NotifyTemplateResolvedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplatesNotifyTemplateInput)(nil)).Elem(), NotifyTemplatesNotifyTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplatesNotifyTemplateArrayInput)(nil)).Elem(), NotifyTemplatesNotifyTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplatesNotifyTemplateActiveInput)(nil)).Elem(), NotifyTemplatesNotifyTemplateActiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplatesNotifyTemplateActiveArrayInput)(nil)).Elem(), NotifyTemplatesNotifyTemplateActiveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplatesNotifyTemplateResolvedInput)(nil)).Elem(), NotifyTemplatesNotifyTemplateResolvedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotifyTemplatesNotifyTemplateResolvedArrayInput)(nil)).Elem(), NotifyTemplatesNotifyTemplateResolvedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleFilesFileInput)(nil)).Elem(), RuleFilesFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleFilesFileArrayInput)(nil)).Elem(), RuleFilesFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleInput)(nil)).Elem(), RulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleArrayInput)(nil)).Elem(), RulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleLabelInput)(nil)).Elem(), RulesRuleLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleLabelArrayInput)(nil)).Elem(), RulesRuleLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTagInput)(nil)).Elem(), WorkspaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceTagArrayInput)(nil)).Elem(), WorkspaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesTagInput)(nil)).Elem(), WorkspacesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesTagArrayInput)(nil)).Elem(), WorkspacesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesWorkspaceInput)(nil)).Elem(), WorkspacesWorkspaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesWorkspaceArrayInput)(nil)).Elem(), WorkspacesWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesWorkspaceTagInput)(nil)).Elem(), WorkspacesWorkspaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesWorkspaceTagArrayInput)(nil)).Elem(), WorkspacesWorkspaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleInput)(nil)).Elem(), GetAlertingRulesAlertingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleArrayInput)(nil)).Elem(), GetAlertingRulesAlertingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleAnnotationInput)(nil)).Elem(), GetAlertingRulesAlertingRuleAnnotationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleAnnotationArrayInput)(nil)).Elem(), GetAlertingRulesAlertingRuleAnnotationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleLabelInput)(nil)).Elem(), GetAlertingRulesAlertingRuleLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleLabelArrayInput)(nil)).Elem(), GetAlertingRulesAlertingRuleLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleLevelInput)(nil)).Elem(), GetAlertingRulesAlertingRuleLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleLevelArrayInput)(nil)).Elem(), GetAlertingRulesAlertingRuleLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleQueryInput)(nil)).Elem(), GetAlertingRulesAlertingRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingRulesAlertingRuleQueryArrayInput)(nil)).Elem(), GetAlertingRulesAlertingRuleQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertInput)(nil)).Elem(), GetAlertsAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertArrayInput)(nil)).Elem(), GetAlertsAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertAlertingRuleQueryInput)(nil)).Elem(), GetAlertsAlertAlertingRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertAlertingRuleQueryArrayInput)(nil)).Elem(), GetAlertsAlertAlertingRuleQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertLevelInput)(nil)).Elem(), GetAlertsAlertLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertLevelArrayInput)(nil)).Elem(), GetAlertsAlertLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertResourceInput)(nil)).Elem(), GetAlertsAlertResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertResourceArrayInput)(nil)).Elem(), GetAlertsAlertResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertResourceLabelInput)(nil)).Elem(), GetAlertsAlertResourceLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertsAlertResourceLabelArrayInput)(nil)).Elem(), GetAlertsAlertResourceLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactGroupsContactGroupInput)(nil)).Elem(), GetContactGroupsContactGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactGroupsContactGroupArrayInput)(nil)).Elem(), GetContactGroupsContactGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactInput)(nil)).Elem(), GetContactsContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactArrayInput)(nil)).Elem(), GetContactsContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactDingTalkBotWebhookInput)(nil)).Elem(), GetContactsContactDingTalkBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactDingTalkBotWebhookArrayInput)(nil)).Elem(), GetContactsContactDingTalkBotWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactLarkBotWebhookInput)(nil)).Elem(), GetContactsContactLarkBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactLarkBotWebhookArrayInput)(nil)).Elem(), GetContactsContactLarkBotWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactPhoneNumberInput)(nil)).Elem(), GetContactsContactPhoneNumberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactPhoneNumberArrayInput)(nil)).Elem(), GetContactsContactPhoneNumberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactWeComBotWebhookInput)(nil)).Elem(), GetContactsContactWeComBotWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactWeComBotWebhookArrayInput)(nil)).Elem(), GetContactsContactWeComBotWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactWebhookInput)(nil)).Elem(), GetContactsContactWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetContactsContactWebhookArrayInput)(nil)).Elem(), GetContactsContactWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesInstanceTypeInput)(nil)).Elem(), GetInstanceTypesInstanceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceTypesInstanceTypeArrayInput)(nil)).Elem(), GetInstanceTypesInstanceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyGroupPoliciesNotifyPolicyInput)(nil)).Elem(), GetNotifyGroupPoliciesNotifyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyGroupPoliciesNotifyPolicyArrayInput)(nil)).Elem(), GetNotifyGroupPoliciesNotifyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyGroupPoliciesNotifyPolicyLevelInput)(nil)).Elem(), GetNotifyGroupPoliciesNotifyPolicyLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyGroupPoliciesNotifyPolicyLevelArrayInput)(nil)).Elem(), GetNotifyGroupPoliciesNotifyPolicyLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyPoliciesNotifyPolicyInput)(nil)).Elem(), GetNotifyPoliciesNotifyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyPoliciesNotifyPolicyArrayInput)(nil)).Elem(), GetNotifyPoliciesNotifyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyPoliciesNotifyPolicyLevelInput)(nil)).Elem(), GetNotifyPoliciesNotifyPolicyLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyPoliciesNotifyPolicyLevelArrayInput)(nil)).Elem(), GetNotifyPoliciesNotifyPolicyLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateInput)(nil)).Elem(), GetNotifyTemplatesNotifyTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateArrayInput)(nil)).Elem(), GetNotifyTemplatesNotifyTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateActiveInput)(nil)).Elem(), GetNotifyTemplatesNotifyTemplateActiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateActiveArrayInput)(nil)).Elem(), GetNotifyTemplatesNotifyTemplateActiveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateResolvedInput)(nil)).Elem(), GetNotifyTemplatesNotifyTemplateResolvedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotifyTemplatesNotifyTemplateResolvedArrayInput)(nil)).Elem(), GetNotifyTemplatesNotifyTemplateResolvedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleFilesFileInput)(nil)).Elem(), GetRuleFilesFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleFilesFileArrayInput)(nil)).Elem(), GetRuleFilesFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleInput)(nil)).Elem(), GetRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleArrayInput)(nil)).Elem(), GetRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleLabelInput)(nil)).Elem(), GetRulesRuleLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleLabelArrayInput)(nil)).Elem(), GetRulesRuleLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspacesTagInput)(nil)).Elem(), GetWorkspacesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspacesTagArrayInput)(nil)).Elem(), GetWorkspacesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspacesWorkspaceInput)(nil)).Elem(), GetWorkspacesWorkspaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspacesWorkspaceArrayInput)(nil)).Elem(), GetWorkspacesWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspacesWorkspaceTagInput)(nil)).Elem(), GetWorkspacesWorkspaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspacesWorkspaceTagArrayInput)(nil)).Elem(), GetWorkspacesWorkspaceTagArray{})
	pulumi.RegisterOutputType(AlertingRuleAnnotationOutput{})
	pulumi.RegisterOutputType(AlertingRuleAnnotationArrayOutput{})
	pulumi.RegisterOutputType(AlertingRuleLabelOutput{})
	pulumi.RegisterOutputType(AlertingRuleLabelArrayOutput{})
	pulumi.RegisterOutputType(AlertingRuleLevelOutput{})
	pulumi.RegisterOutputType(AlertingRuleLevelArrayOutput{})
	pulumi.RegisterOutputType(AlertingRuleQueryOutput{})
	pulumi.RegisterOutputType(AlertingRuleQueryPtrOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleArrayOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleAnnotationOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleAnnotationArrayOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleLabelOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleLabelArrayOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleLevelOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleLevelArrayOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleQueryOutput{})
	pulumi.RegisterOutputType(AlertingRulesAlertingRuleQueryArrayOutput{})
	pulumi.RegisterOutputType(AlertsAlertOutput{})
	pulumi.RegisterOutputType(AlertsAlertArrayOutput{})
	pulumi.RegisterOutputType(AlertsAlertAlertingRuleQueryOutput{})
	pulumi.RegisterOutputType(AlertsAlertAlertingRuleQueryArrayOutput{})
	pulumi.RegisterOutputType(AlertsAlertLevelOutput{})
	pulumi.RegisterOutputType(AlertsAlertLevelArrayOutput{})
	pulumi.RegisterOutputType(AlertsAlertResourceOutput{})
	pulumi.RegisterOutputType(AlertsAlertResourceArrayOutput{})
	pulumi.RegisterOutputType(AlertsAlertResourceLabelOutput{})
	pulumi.RegisterOutputType(AlertsAlertResourceLabelArrayOutput{})
	pulumi.RegisterOutputType(ContactDingTalkBotWebhookOutput{})
	pulumi.RegisterOutputType(ContactDingTalkBotWebhookPtrOutput{})
	pulumi.RegisterOutputType(ContactGroupsContactGroupOutput{})
	pulumi.RegisterOutputType(ContactGroupsContactGroupArrayOutput{})
	pulumi.RegisterOutputType(ContactLarkBotWebhookOutput{})
	pulumi.RegisterOutputType(ContactLarkBotWebhookPtrOutput{})
	pulumi.RegisterOutputType(ContactPhoneNumberOutput{})
	pulumi.RegisterOutputType(ContactPhoneNumberPtrOutput{})
	pulumi.RegisterOutputType(ContactWeComBotWebhookOutput{})
	pulumi.RegisterOutputType(ContactWeComBotWebhookPtrOutput{})
	pulumi.RegisterOutputType(ContactWebhookOutput{})
	pulumi.RegisterOutputType(ContactWebhookPtrOutput{})
	pulumi.RegisterOutputType(ContactsContactOutput{})
	pulumi.RegisterOutputType(ContactsContactArrayOutput{})
	pulumi.RegisterOutputType(ContactsContactDingTalkBotWebhookOutput{})
	pulumi.RegisterOutputType(ContactsContactDingTalkBotWebhookArrayOutput{})
	pulumi.RegisterOutputType(ContactsContactLarkBotWebhookOutput{})
	pulumi.RegisterOutputType(ContactsContactLarkBotWebhookArrayOutput{})
	pulumi.RegisterOutputType(ContactsContactPhoneNumberOutput{})
	pulumi.RegisterOutputType(ContactsContactPhoneNumberArrayOutput{})
	pulumi.RegisterOutputType(ContactsContactWeComBotWebhookOutput{})
	pulumi.RegisterOutputType(ContactsContactWeComBotWebhookArrayOutput{})
	pulumi.RegisterOutputType(ContactsContactWebhookOutput{})
	pulumi.RegisterOutputType(ContactsContactWebhookArrayOutput{})
	pulumi.RegisterOutputType(InstanceTypesInstanceTypeOutput{})
	pulumi.RegisterOutputType(InstanceTypesInstanceTypeArrayOutput{})
	pulumi.RegisterOutputType(NotifyGroupPoliciesNotifyPolicyOutput{})
	pulumi.RegisterOutputType(NotifyGroupPoliciesNotifyPolicyArrayOutput{})
	pulumi.RegisterOutputType(NotifyGroupPoliciesNotifyPolicyLevelOutput{})
	pulumi.RegisterOutputType(NotifyGroupPoliciesNotifyPolicyLevelArrayOutput{})
	pulumi.RegisterOutputType(NotifyGroupPolicyLevelOutput{})
	pulumi.RegisterOutputType(NotifyGroupPolicyLevelArrayOutput{})
	pulumi.RegisterOutputType(NotifyPoliciesNotifyPolicyOutput{})
	pulumi.RegisterOutputType(NotifyPoliciesNotifyPolicyArrayOutput{})
	pulumi.RegisterOutputType(NotifyPoliciesNotifyPolicyLevelOutput{})
	pulumi.RegisterOutputType(NotifyPoliciesNotifyPolicyLevelArrayOutput{})
	pulumi.RegisterOutputType(NotifyPolicyLevelOutput{})
	pulumi.RegisterOutputType(NotifyPolicyLevelArrayOutput{})
	pulumi.RegisterOutputType(NotifyTemplateActiveOutput{})
	pulumi.RegisterOutputType(NotifyTemplateActivePtrOutput{})
	pulumi.RegisterOutputType(NotifyTemplateResolvedOutput{})
	pulumi.RegisterOutputType(NotifyTemplateResolvedPtrOutput{})
	pulumi.RegisterOutputType(NotifyTemplatesNotifyTemplateOutput{})
	pulumi.RegisterOutputType(NotifyTemplatesNotifyTemplateArrayOutput{})
	pulumi.RegisterOutputType(NotifyTemplatesNotifyTemplateActiveOutput{})
	pulumi.RegisterOutputType(NotifyTemplatesNotifyTemplateActiveArrayOutput{})
	pulumi.RegisterOutputType(NotifyTemplatesNotifyTemplateResolvedOutput{})
	pulumi.RegisterOutputType(NotifyTemplatesNotifyTemplateResolvedArrayOutput{})
	pulumi.RegisterOutputType(RuleFilesFileOutput{})
	pulumi.RegisterOutputType(RuleFilesFileArrayOutput{})
	pulumi.RegisterOutputType(RulesRuleOutput{})
	pulumi.RegisterOutputType(RulesRuleArrayOutput{})
	pulumi.RegisterOutputType(RulesRuleLabelOutput{})
	pulumi.RegisterOutputType(RulesRuleLabelArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceTagOutput{})
	pulumi.RegisterOutputType(WorkspaceTagArrayOutput{})
	pulumi.RegisterOutputType(WorkspacesTagOutput{})
	pulumi.RegisterOutputType(WorkspacesTagArrayOutput{})
	pulumi.RegisterOutputType(WorkspacesWorkspaceOutput{})
	pulumi.RegisterOutputType(WorkspacesWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(WorkspacesWorkspaceTagOutput{})
	pulumi.RegisterOutputType(WorkspacesWorkspaceTagArrayOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleAnnotationOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleAnnotationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleLabelOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleLabelArrayOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleLevelOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleLevelArrayOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleQueryOutput{})
	pulumi.RegisterOutputType(GetAlertingRulesAlertingRuleQueryArrayOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertArrayOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertAlertingRuleQueryOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertAlertingRuleQueryArrayOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertLevelOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertLevelArrayOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertResourceOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertResourceArrayOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertResourceLabelOutput{})
	pulumi.RegisterOutputType(GetAlertsAlertResourceLabelArrayOutput{})
	pulumi.RegisterOutputType(GetContactGroupsContactGroupOutput{})
	pulumi.RegisterOutputType(GetContactGroupsContactGroupArrayOutput{})
	pulumi.RegisterOutputType(GetContactsContactOutput{})
	pulumi.RegisterOutputType(GetContactsContactArrayOutput{})
	pulumi.RegisterOutputType(GetContactsContactDingTalkBotWebhookOutput{})
	pulumi.RegisterOutputType(GetContactsContactDingTalkBotWebhookArrayOutput{})
	pulumi.RegisterOutputType(GetContactsContactLarkBotWebhookOutput{})
	pulumi.RegisterOutputType(GetContactsContactLarkBotWebhookArrayOutput{})
	pulumi.RegisterOutputType(GetContactsContactPhoneNumberOutput{})
	pulumi.RegisterOutputType(GetContactsContactPhoneNumberArrayOutput{})
	pulumi.RegisterOutputType(GetContactsContactWeComBotWebhookOutput{})
	pulumi.RegisterOutputType(GetContactsContactWeComBotWebhookArrayOutput{})
	pulumi.RegisterOutputType(GetContactsContactWebhookOutput{})
	pulumi.RegisterOutputType(GetContactsContactWebhookArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesInstanceTypeOutput{})
	pulumi.RegisterOutputType(GetInstanceTypesInstanceTypeArrayOutput{})
	pulumi.RegisterOutputType(GetNotifyGroupPoliciesNotifyPolicyOutput{})
	pulumi.RegisterOutputType(GetNotifyGroupPoliciesNotifyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetNotifyGroupPoliciesNotifyPolicyLevelOutput{})
	pulumi.RegisterOutputType(GetNotifyGroupPoliciesNotifyPolicyLevelArrayOutput{})
	pulumi.RegisterOutputType(GetNotifyPoliciesNotifyPolicyOutput{})
	pulumi.RegisterOutputType(GetNotifyPoliciesNotifyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetNotifyPoliciesNotifyPolicyLevelOutput{})
	pulumi.RegisterOutputType(GetNotifyPoliciesNotifyPolicyLevelArrayOutput{})
	pulumi.RegisterOutputType(GetNotifyTemplatesNotifyTemplateOutput{})
	pulumi.RegisterOutputType(GetNotifyTemplatesNotifyTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetNotifyTemplatesNotifyTemplateActiveOutput{})
	pulumi.RegisterOutputType(GetNotifyTemplatesNotifyTemplateActiveArrayOutput{})
	pulumi.RegisterOutputType(GetNotifyTemplatesNotifyTemplateResolvedOutput{})
	pulumi.RegisterOutputType(GetNotifyTemplatesNotifyTemplateResolvedArrayOutput{})
	pulumi.RegisterOutputType(GetRuleFilesFileOutput{})
	pulumi.RegisterOutputType(GetRuleFilesFileArrayOutput{})
	pulumi.RegisterOutputType(GetRulesRuleOutput{})
	pulumi.RegisterOutputType(GetRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRulesRuleLabelOutput{})
	pulumi.RegisterOutputType(GetRulesRuleLabelArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspacesTagOutput{})
	pulumi.RegisterOutputType(GetWorkspacesTagArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspacesWorkspaceOutput{})
	pulumi.RegisterOutputType(GetWorkspacesWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspacesWorkspaceTagOutput{})
	pulumi.RegisterOutputType(GetWorkspacesWorkspaceTagArrayOutput{})
}
