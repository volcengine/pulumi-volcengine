// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage vmp workspace
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vmp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vmp.NewWorkspace(ctx, "foo", &vmp.WorkspaceArgs{
//				DeleteProtectionEnabled: pulumi.Bool(false),
//				Description:             pulumi.String("acc-test"),
//				InstanceTypeId:          pulumi.String("vmp.standard.15d"),
//				Password:                pulumi.String("Pass123456"),
//				ProjectName:             pulumi.String("default"),
//				Tags: vmp.WorkspaceTagArray{
//					&vmp.WorkspaceTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//				Username: pulumi.String("admin123"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Workspace can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:vmp/workspace:Workspace default 60dde3ca-951c-4c05-8777-e5a7caa07ad6
// ```
type Workspace struct {
	pulumi.CustomResourceState

	// The create time of workspace.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Whether enable delete protection.
	DeleteProtectionEnabled pulumi.BoolPtrOutput `pulumi:"deleteProtectionEnabled"`
	// The description of the workspace.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The instance type id of the workspace.
	InstanceTypeId pulumi.StringOutput `pulumi:"instanceTypeId"`
	// The name of the workspace.
	Name pulumi.StringOutput `pulumi:"name"`
	// The overdue reclaim time.
	OverdueReclaimTime pulumi.StringOutput `pulumi:"overdueReclaimTime"`
	// The password of the workspace.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The project name of the vmp workspace.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// The prometheus push intranet endpoint.
	PrometheusPushIntranetEndpoint pulumi.StringOutput `pulumi:"prometheusPushIntranetEndpoint"`
	// The prometheus query intranet endpoint.
	PrometheusQueryIntranetEndpoint pulumi.StringOutput `pulumi:"prometheusQueryIntranetEndpoint"`
	// The prometheus write intranet endpoint.
	PrometheusWriteIntranetEndpoint pulumi.StringOutput `pulumi:"prometheusWriteIntranetEndpoint"`
	// The status of workspace.
	Status pulumi.StringOutput `pulumi:"status"`
	// Tags.
	Tags WorkspaceTagArrayOutput `pulumi:"tags"`
	// The username of the workspace.
	Username pulumi.StringPtrOutput `pulumi:"username"`
}

// NewWorkspace registers a new resource with the given unique name, arguments, and options.
func NewWorkspace(ctx *pulumi.Context,
	name string, args *WorkspaceArgs, opts ...pulumi.ResourceOption) (*Workspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceTypeId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceTypeId'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workspace
	err := ctx.RegisterResource("volcengine:vmp/workspace:Workspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspace gets an existing Workspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceState, opts ...pulumi.ResourceOption) (*Workspace, error) {
	var resource Workspace
	err := ctx.ReadResource("volcengine:vmp/workspace:Workspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workspace resources.
type workspaceState struct {
	// The create time of workspace.
	CreateTime *string `pulumi:"createTime"`
	// Whether enable delete protection.
	DeleteProtectionEnabled *bool `pulumi:"deleteProtectionEnabled"`
	// The description of the workspace.
	Description *string `pulumi:"description"`
	// The instance type id of the workspace.
	InstanceTypeId *string `pulumi:"instanceTypeId"`
	// The name of the workspace.
	Name *string `pulumi:"name"`
	// The overdue reclaim time.
	OverdueReclaimTime *string `pulumi:"overdueReclaimTime"`
	// The password of the workspace.
	Password *string `pulumi:"password"`
	// The project name of the vmp workspace.
	ProjectName *string `pulumi:"projectName"`
	// The prometheus push intranet endpoint.
	PrometheusPushIntranetEndpoint *string `pulumi:"prometheusPushIntranetEndpoint"`
	// The prometheus query intranet endpoint.
	PrometheusQueryIntranetEndpoint *string `pulumi:"prometheusQueryIntranetEndpoint"`
	// The prometheus write intranet endpoint.
	PrometheusWriteIntranetEndpoint *string `pulumi:"prometheusWriteIntranetEndpoint"`
	// The status of workspace.
	Status *string `pulumi:"status"`
	// Tags.
	Tags []WorkspaceTag `pulumi:"tags"`
	// The username of the workspace.
	Username *string `pulumi:"username"`
}

type WorkspaceState struct {
	// The create time of workspace.
	CreateTime pulumi.StringPtrInput
	// Whether enable delete protection.
	DeleteProtectionEnabled pulumi.BoolPtrInput
	// The description of the workspace.
	Description pulumi.StringPtrInput
	// The instance type id of the workspace.
	InstanceTypeId pulumi.StringPtrInput
	// The name of the workspace.
	Name pulumi.StringPtrInput
	// The overdue reclaim time.
	OverdueReclaimTime pulumi.StringPtrInput
	// The password of the workspace.
	Password pulumi.StringPtrInput
	// The project name of the vmp workspace.
	ProjectName pulumi.StringPtrInput
	// The prometheus push intranet endpoint.
	PrometheusPushIntranetEndpoint pulumi.StringPtrInput
	// The prometheus query intranet endpoint.
	PrometheusQueryIntranetEndpoint pulumi.StringPtrInput
	// The prometheus write intranet endpoint.
	PrometheusWriteIntranetEndpoint pulumi.StringPtrInput
	// The status of workspace.
	Status pulumi.StringPtrInput
	// Tags.
	Tags WorkspaceTagArrayInput
	// The username of the workspace.
	Username pulumi.StringPtrInput
}

func (WorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceState)(nil)).Elem()
}

type workspaceArgs struct {
	// Whether enable delete protection.
	DeleteProtectionEnabled *bool `pulumi:"deleteProtectionEnabled"`
	// The description of the workspace.
	Description *string `pulumi:"description"`
	// The instance type id of the workspace.
	InstanceTypeId string `pulumi:"instanceTypeId"`
	// The name of the workspace.
	Name *string `pulumi:"name"`
	// The password of the workspace.
	Password *string `pulumi:"password"`
	// The project name of the vmp workspace.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []WorkspaceTag `pulumi:"tags"`
	// The username of the workspace.
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a Workspace resource.
type WorkspaceArgs struct {
	// Whether enable delete protection.
	DeleteProtectionEnabled pulumi.BoolPtrInput
	// The description of the workspace.
	Description pulumi.StringPtrInput
	// The instance type id of the workspace.
	InstanceTypeId pulumi.StringInput
	// The name of the workspace.
	Name pulumi.StringPtrInput
	// The password of the workspace.
	Password pulumi.StringPtrInput
	// The project name of the vmp workspace.
	ProjectName pulumi.StringPtrInput
	// Tags.
	Tags WorkspaceTagArrayInput
	// The username of the workspace.
	Username pulumi.StringPtrInput
}

func (WorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceArgs)(nil)).Elem()
}

type WorkspaceInput interface {
	pulumi.Input

	ToWorkspaceOutput() WorkspaceOutput
	ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput
}

func (*Workspace) ElementType() reflect.Type {
	return reflect.TypeOf((**Workspace)(nil)).Elem()
}

func (i *Workspace) ToWorkspaceOutput() WorkspaceOutput {
	return i.ToWorkspaceOutputWithContext(context.Background())
}

func (i *Workspace) ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceOutput)
}

// WorkspaceArrayInput is an input type that accepts WorkspaceArray and WorkspaceArrayOutput values.
// You can construct a concrete instance of `WorkspaceArrayInput` via:
//
//	WorkspaceArray{ WorkspaceArgs{...} }
type WorkspaceArrayInput interface {
	pulumi.Input

	ToWorkspaceArrayOutput() WorkspaceArrayOutput
	ToWorkspaceArrayOutputWithContext(context.Context) WorkspaceArrayOutput
}

type WorkspaceArray []WorkspaceInput

func (WorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Workspace)(nil)).Elem()
}

func (i WorkspaceArray) ToWorkspaceArrayOutput() WorkspaceArrayOutput {
	return i.ToWorkspaceArrayOutputWithContext(context.Background())
}

func (i WorkspaceArray) ToWorkspaceArrayOutputWithContext(ctx context.Context) WorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceArrayOutput)
}

// WorkspaceMapInput is an input type that accepts WorkspaceMap and WorkspaceMapOutput values.
// You can construct a concrete instance of `WorkspaceMapInput` via:
//
//	WorkspaceMap{ "key": WorkspaceArgs{...} }
type WorkspaceMapInput interface {
	pulumi.Input

	ToWorkspaceMapOutput() WorkspaceMapOutput
	ToWorkspaceMapOutputWithContext(context.Context) WorkspaceMapOutput
}

type WorkspaceMap map[string]WorkspaceInput

func (WorkspaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Workspace)(nil)).Elem()
}

func (i WorkspaceMap) ToWorkspaceMapOutput() WorkspaceMapOutput {
	return i.ToWorkspaceMapOutputWithContext(context.Background())
}

func (i WorkspaceMap) ToWorkspaceMapOutputWithContext(ctx context.Context) WorkspaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMapOutput)
}

type WorkspaceOutput struct{ *pulumi.OutputState }

func (WorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Workspace)(nil)).Elem()
}

func (o WorkspaceOutput) ToWorkspaceOutput() WorkspaceOutput {
	return o
}

func (o WorkspaceOutput) ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput {
	return o
}

// The create time of workspace.
func (o WorkspaceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether enable delete protection.
func (o WorkspaceOutput) DeleteProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.BoolPtrOutput { return v.DeleteProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// The description of the workspace.
func (o WorkspaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The instance type id of the workspace.
func (o WorkspaceOutput) InstanceTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.InstanceTypeId }).(pulumi.StringOutput)
}

// The name of the workspace.
func (o WorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The overdue reclaim time.
func (o WorkspaceOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// The password of the workspace.
func (o WorkspaceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The project name of the vmp workspace.
func (o WorkspaceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// The prometheus push intranet endpoint.
func (o WorkspaceOutput) PrometheusPushIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.PrometheusPushIntranetEndpoint }).(pulumi.StringOutput)
}

// The prometheus query intranet endpoint.
func (o WorkspaceOutput) PrometheusQueryIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.PrometheusQueryIntranetEndpoint }).(pulumi.StringOutput)
}

// The prometheus write intranet endpoint.
func (o WorkspaceOutput) PrometheusWriteIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.PrometheusWriteIntranetEndpoint }).(pulumi.StringOutput)
}

// The status of workspace.
func (o WorkspaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o WorkspaceOutput) Tags() WorkspaceTagArrayOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceTagArrayOutput { return v.Tags }).(WorkspaceTagArrayOutput)
}

// The username of the workspace.
func (o WorkspaceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

type WorkspaceArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Workspace)(nil)).Elem()
}

func (o WorkspaceArrayOutput) ToWorkspaceArrayOutput() WorkspaceArrayOutput {
	return o
}

func (o WorkspaceArrayOutput) ToWorkspaceArrayOutputWithContext(ctx context.Context) WorkspaceArrayOutput {
	return o
}

func (o WorkspaceArrayOutput) Index(i pulumi.IntInput) WorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Workspace {
		return vs[0].([]*Workspace)[vs[1].(int)]
	}).(WorkspaceOutput)
}

type WorkspaceMapOutput struct{ *pulumi.OutputState }

func (WorkspaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Workspace)(nil)).Elem()
}

func (o WorkspaceMapOutput) ToWorkspaceMapOutput() WorkspaceMapOutput {
	return o
}

func (o WorkspaceMapOutput) ToWorkspaceMapOutputWithContext(ctx context.Context) WorkspaceMapOutput {
	return o
}

func (o WorkspaceMapOutput) MapIndex(k pulumi.StringInput) WorkspaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Workspace {
		return vs[0].(map[string]*Workspace)[vs[1].(string)]
	}).(WorkspaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceInput)(nil)).Elem(), &Workspace{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceArrayInput)(nil)).Elem(), WorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMapInput)(nil)).Elem(), WorkspaceMap{})
	pulumi.RegisterOutputType(WorkspaceOutput{})
	pulumi.RegisterOutputType(WorkspaceArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceMapOutput{})
}
