// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vefaas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of vefaas releases
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vefaas"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vefaas.GetReleases(ctx, &vefaas.GetReleasesArgs{
//				FunctionId: "g79asxxx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetReleases(ctx *pulumi.Context, args *GetReleasesArgs, opts ...pulumi.InvokeOption) (*GetReleasesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetReleasesResult
	err := ctx.Invoke("volcengine:vefaas/getReleases:getReleases", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReleases.
type GetReleasesArgs struct {
	// Query the filtering conditions.
	Filters []GetReleasesFilter `pulumi:"filters"`
	// The ID of Function.
	FunctionId string `pulumi:"functionId"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// Query the sorting parameters.
	OrderBies []GetReleasesOrderBy `pulumi:"orderBies"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getReleases.
type GetReleasesResult struct {
	Filters []GetReleasesFilter `pulumi:"filters"`
	// The ID of Function.
	FunctionId string `pulumi:"functionId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of function publication records.
	Items      []GetReleasesItem    `pulumi:"items"`
	NameRegex  *string              `pulumi:"nameRegex"`
	OrderBies  []GetReleasesOrderBy `pulumi:"orderBies"`
	OutputFile *string              `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetReleasesOutput(ctx *pulumi.Context, args GetReleasesOutputArgs, opts ...pulumi.InvokeOption) GetReleasesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetReleasesResult, error) {
			args := v.(GetReleasesArgs)
			r, err := GetReleases(ctx, &args, opts...)
			var s GetReleasesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetReleasesResultOutput)
}

// A collection of arguments for invoking getReleases.
type GetReleasesOutputArgs struct {
	// Query the filtering conditions.
	Filters GetReleasesFilterArrayInput `pulumi:"filters"`
	// The ID of Function.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// Query the sorting parameters.
	OrderBies GetReleasesOrderByArrayInput `pulumi:"orderBies"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetReleasesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleasesArgs)(nil)).Elem()
}

// A collection of values returned by getReleases.
type GetReleasesResultOutput struct{ *pulumi.OutputState }

func (GetReleasesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleasesResult)(nil)).Elem()
}

func (o GetReleasesResultOutput) ToGetReleasesResultOutput() GetReleasesResultOutput {
	return o
}

func (o GetReleasesResultOutput) ToGetReleasesResultOutputWithContext(ctx context.Context) GetReleasesResultOutput {
	return o
}

func (o GetReleasesResultOutput) Filters() GetReleasesFilterArrayOutput {
	return o.ApplyT(func(v GetReleasesResult) []GetReleasesFilter { return v.Filters }).(GetReleasesFilterArrayOutput)
}

// The ID of Function.
func (o GetReleasesResultOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesResult) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetReleasesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of function publication records.
func (o GetReleasesResultOutput) Items() GetReleasesItemArrayOutput {
	return o.ApplyT(func(v GetReleasesResult) []GetReleasesItem { return v.Items }).(GetReleasesItemArrayOutput)
}

func (o GetReleasesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReleasesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetReleasesResultOutput) OrderBies() GetReleasesOrderByArrayOutput {
	return o.ApplyT(func(v GetReleasesResult) []GetReleasesOrderBy { return v.OrderBies }).(GetReleasesOrderByArrayOutput)
}

func (o GetReleasesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReleasesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetReleasesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetReleasesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReleasesResultOutput{})
}
