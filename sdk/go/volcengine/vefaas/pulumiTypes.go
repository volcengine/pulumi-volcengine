// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vefaas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type FunctionEnv struct {
	// The Key of the environment variable.
	Key string `pulumi:"key"`
	// The Value of the environment variable.
	Value string `pulumi:"value"`
}

// FunctionEnvInput is an input type that accepts FunctionEnvArgs and FunctionEnvOutput values.
// You can construct a concrete instance of `FunctionEnvInput` via:
//
//	FunctionEnvArgs{...}
type FunctionEnvInput interface {
	pulumi.Input

	ToFunctionEnvOutput() FunctionEnvOutput
	ToFunctionEnvOutputWithContext(context.Context) FunctionEnvOutput
}

type FunctionEnvArgs struct {
	// The Key of the environment variable.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of the environment variable.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FunctionEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEnv)(nil)).Elem()
}

func (i FunctionEnvArgs) ToFunctionEnvOutput() FunctionEnvOutput {
	return i.ToFunctionEnvOutputWithContext(context.Background())
}

func (i FunctionEnvArgs) ToFunctionEnvOutputWithContext(ctx context.Context) FunctionEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvOutput)
}

// FunctionEnvArrayInput is an input type that accepts FunctionEnvArray and FunctionEnvArrayOutput values.
// You can construct a concrete instance of `FunctionEnvArrayInput` via:
//
//	FunctionEnvArray{ FunctionEnvArgs{...} }
type FunctionEnvArrayInput interface {
	pulumi.Input

	ToFunctionEnvArrayOutput() FunctionEnvArrayOutput
	ToFunctionEnvArrayOutputWithContext(context.Context) FunctionEnvArrayOutput
}

type FunctionEnvArray []FunctionEnvInput

func (FunctionEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionEnv)(nil)).Elem()
}

func (i FunctionEnvArray) ToFunctionEnvArrayOutput() FunctionEnvArrayOutput {
	return i.ToFunctionEnvArrayOutputWithContext(context.Background())
}

func (i FunctionEnvArray) ToFunctionEnvArrayOutputWithContext(ctx context.Context) FunctionEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEnvArrayOutput)
}

type FunctionEnvOutput struct{ *pulumi.OutputState }

func (FunctionEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionEnv)(nil)).Elem()
}

func (o FunctionEnvOutput) ToFunctionEnvOutput() FunctionEnvOutput {
	return o
}

func (o FunctionEnvOutput) ToFunctionEnvOutputWithContext(ctx context.Context) FunctionEnvOutput {
	return o
}

// The Key of the environment variable.
func (o FunctionEnvOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEnv) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of the environment variable.
func (o FunctionEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionEnv) string { return v.Value }).(pulumi.StringOutput)
}

type FunctionEnvArrayOutput struct{ *pulumi.OutputState }

func (FunctionEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionEnv)(nil)).Elem()
}

func (o FunctionEnvArrayOutput) ToFunctionEnvArrayOutput() FunctionEnvArrayOutput {
	return o
}

func (o FunctionEnvArrayOutput) ToFunctionEnvArrayOutputWithContext(ctx context.Context) FunctionEnvArrayOutput {
	return o
}

func (o FunctionEnvArrayOutput) Index(i pulumi.IntInput) FunctionEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionEnv {
		return vs[0].([]FunctionEnv)[vs[1].(int)]
	}).(FunctionEnvOutput)
}

type FunctionNasStorage struct {
	// Whether to enable NAS storage mounting.
	EnableNas bool `pulumi:"enableNas"`
	// The configuration of NAS.
	NasConfigs []FunctionNasStorageNasConfig `pulumi:"nasConfigs"`
}

// FunctionNasStorageInput is an input type that accepts FunctionNasStorageArgs and FunctionNasStorageOutput values.
// You can construct a concrete instance of `FunctionNasStorageInput` via:
//
//	FunctionNasStorageArgs{...}
type FunctionNasStorageInput interface {
	pulumi.Input

	ToFunctionNasStorageOutput() FunctionNasStorageOutput
	ToFunctionNasStorageOutputWithContext(context.Context) FunctionNasStorageOutput
}

type FunctionNasStorageArgs struct {
	// Whether to enable NAS storage mounting.
	EnableNas pulumi.BoolInput `pulumi:"enableNas"`
	// The configuration of NAS.
	NasConfigs FunctionNasStorageNasConfigArrayInput `pulumi:"nasConfigs"`
}

func (FunctionNasStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNasStorage)(nil)).Elem()
}

func (i FunctionNasStorageArgs) ToFunctionNasStorageOutput() FunctionNasStorageOutput {
	return i.ToFunctionNasStorageOutputWithContext(context.Background())
}

func (i FunctionNasStorageArgs) ToFunctionNasStorageOutputWithContext(ctx context.Context) FunctionNasStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNasStorageOutput)
}

func (i FunctionNasStorageArgs) ToFunctionNasStoragePtrOutput() FunctionNasStoragePtrOutput {
	return i.ToFunctionNasStoragePtrOutputWithContext(context.Background())
}

func (i FunctionNasStorageArgs) ToFunctionNasStoragePtrOutputWithContext(ctx context.Context) FunctionNasStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNasStorageOutput).ToFunctionNasStoragePtrOutputWithContext(ctx)
}

// FunctionNasStoragePtrInput is an input type that accepts FunctionNasStorageArgs, FunctionNasStoragePtr and FunctionNasStoragePtrOutput values.
// You can construct a concrete instance of `FunctionNasStoragePtrInput` via:
//
//	        FunctionNasStorageArgs{...}
//
//	or:
//
//	        nil
type FunctionNasStoragePtrInput interface {
	pulumi.Input

	ToFunctionNasStoragePtrOutput() FunctionNasStoragePtrOutput
	ToFunctionNasStoragePtrOutputWithContext(context.Context) FunctionNasStoragePtrOutput
}

type functionNasStoragePtrType FunctionNasStorageArgs

func FunctionNasStoragePtr(v *FunctionNasStorageArgs) FunctionNasStoragePtrInput {
	return (*functionNasStoragePtrType)(v)
}

func (*functionNasStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionNasStorage)(nil)).Elem()
}

func (i *functionNasStoragePtrType) ToFunctionNasStoragePtrOutput() FunctionNasStoragePtrOutput {
	return i.ToFunctionNasStoragePtrOutputWithContext(context.Background())
}

func (i *functionNasStoragePtrType) ToFunctionNasStoragePtrOutputWithContext(ctx context.Context) FunctionNasStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNasStoragePtrOutput)
}

type FunctionNasStorageOutput struct{ *pulumi.OutputState }

func (FunctionNasStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNasStorage)(nil)).Elem()
}

func (o FunctionNasStorageOutput) ToFunctionNasStorageOutput() FunctionNasStorageOutput {
	return o
}

func (o FunctionNasStorageOutput) ToFunctionNasStorageOutputWithContext(ctx context.Context) FunctionNasStorageOutput {
	return o
}

func (o FunctionNasStorageOutput) ToFunctionNasStoragePtrOutput() FunctionNasStoragePtrOutput {
	return o.ToFunctionNasStoragePtrOutputWithContext(context.Background())
}

func (o FunctionNasStorageOutput) ToFunctionNasStoragePtrOutputWithContext(ctx context.Context) FunctionNasStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionNasStorage) *FunctionNasStorage {
		return &v
	}).(FunctionNasStoragePtrOutput)
}

// Whether to enable NAS storage mounting.
func (o FunctionNasStorageOutput) EnableNas() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionNasStorage) bool { return v.EnableNas }).(pulumi.BoolOutput)
}

// The configuration of NAS.
func (o FunctionNasStorageOutput) NasConfigs() FunctionNasStorageNasConfigArrayOutput {
	return o.ApplyT(func(v FunctionNasStorage) []FunctionNasStorageNasConfig { return v.NasConfigs }).(FunctionNasStorageNasConfigArrayOutput)
}

type FunctionNasStoragePtrOutput struct{ *pulumi.OutputState }

func (FunctionNasStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionNasStorage)(nil)).Elem()
}

func (o FunctionNasStoragePtrOutput) ToFunctionNasStoragePtrOutput() FunctionNasStoragePtrOutput {
	return o
}

func (o FunctionNasStoragePtrOutput) ToFunctionNasStoragePtrOutputWithContext(ctx context.Context) FunctionNasStoragePtrOutput {
	return o
}

func (o FunctionNasStoragePtrOutput) Elem() FunctionNasStorageOutput {
	return o.ApplyT(func(v *FunctionNasStorage) FunctionNasStorage {
		if v != nil {
			return *v
		}
		var ret FunctionNasStorage
		return ret
	}).(FunctionNasStorageOutput)
}

// Whether to enable NAS storage mounting.
func (o FunctionNasStoragePtrOutput) EnableNas() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionNasStorage) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableNas
	}).(pulumi.BoolPtrOutput)
}

// The configuration of NAS.
func (o FunctionNasStoragePtrOutput) NasConfigs() FunctionNasStorageNasConfigArrayOutput {
	return o.ApplyT(func(v *FunctionNasStorage) []FunctionNasStorageNasConfig {
		if v == nil {
			return nil
		}
		return v.NasConfigs
	}).(FunctionNasStorageNasConfigArrayOutput)
}

type FunctionNasStorageNasConfig struct {
	// The ID of NAS file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// The directory of Function local mount.
	LocalMountPath string `pulumi:"localMountPath"`
	// The ID of NAS mount point.
	MountPointId string `pulumi:"mountPointId"`
	// Remote directory of the file system.
	RemotePath string `pulumi:"remotePath"`
}

// FunctionNasStorageNasConfigInput is an input type that accepts FunctionNasStorageNasConfigArgs and FunctionNasStorageNasConfigOutput values.
// You can construct a concrete instance of `FunctionNasStorageNasConfigInput` via:
//
//	FunctionNasStorageNasConfigArgs{...}
type FunctionNasStorageNasConfigInput interface {
	pulumi.Input

	ToFunctionNasStorageNasConfigOutput() FunctionNasStorageNasConfigOutput
	ToFunctionNasStorageNasConfigOutputWithContext(context.Context) FunctionNasStorageNasConfigOutput
}

type FunctionNasStorageNasConfigArgs struct {
	// The ID of NAS file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The directory of Function local mount.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// The ID of NAS mount point.
	MountPointId pulumi.StringInput `pulumi:"mountPointId"`
	// Remote directory of the file system.
	RemotePath pulumi.StringInput `pulumi:"remotePath"`
}

func (FunctionNasStorageNasConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNasStorageNasConfig)(nil)).Elem()
}

func (i FunctionNasStorageNasConfigArgs) ToFunctionNasStorageNasConfigOutput() FunctionNasStorageNasConfigOutput {
	return i.ToFunctionNasStorageNasConfigOutputWithContext(context.Background())
}

func (i FunctionNasStorageNasConfigArgs) ToFunctionNasStorageNasConfigOutputWithContext(ctx context.Context) FunctionNasStorageNasConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNasStorageNasConfigOutput)
}

// FunctionNasStorageNasConfigArrayInput is an input type that accepts FunctionNasStorageNasConfigArray and FunctionNasStorageNasConfigArrayOutput values.
// You can construct a concrete instance of `FunctionNasStorageNasConfigArrayInput` via:
//
//	FunctionNasStorageNasConfigArray{ FunctionNasStorageNasConfigArgs{...} }
type FunctionNasStorageNasConfigArrayInput interface {
	pulumi.Input

	ToFunctionNasStorageNasConfigArrayOutput() FunctionNasStorageNasConfigArrayOutput
	ToFunctionNasStorageNasConfigArrayOutputWithContext(context.Context) FunctionNasStorageNasConfigArrayOutput
}

type FunctionNasStorageNasConfigArray []FunctionNasStorageNasConfigInput

func (FunctionNasStorageNasConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionNasStorageNasConfig)(nil)).Elem()
}

func (i FunctionNasStorageNasConfigArray) ToFunctionNasStorageNasConfigArrayOutput() FunctionNasStorageNasConfigArrayOutput {
	return i.ToFunctionNasStorageNasConfigArrayOutputWithContext(context.Background())
}

func (i FunctionNasStorageNasConfigArray) ToFunctionNasStorageNasConfigArrayOutputWithContext(ctx context.Context) FunctionNasStorageNasConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionNasStorageNasConfigArrayOutput)
}

type FunctionNasStorageNasConfigOutput struct{ *pulumi.OutputState }

func (FunctionNasStorageNasConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionNasStorageNasConfig)(nil)).Elem()
}

func (o FunctionNasStorageNasConfigOutput) ToFunctionNasStorageNasConfigOutput() FunctionNasStorageNasConfigOutput {
	return o
}

func (o FunctionNasStorageNasConfigOutput) ToFunctionNasStorageNasConfigOutputWithContext(ctx context.Context) FunctionNasStorageNasConfigOutput {
	return o
}

// The ID of NAS file system.
func (o FunctionNasStorageNasConfigOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionNasStorageNasConfig) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The directory of Function local mount.
func (o FunctionNasStorageNasConfigOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionNasStorageNasConfig) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// The ID of NAS mount point.
func (o FunctionNasStorageNasConfigOutput) MountPointId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionNasStorageNasConfig) string { return v.MountPointId }).(pulumi.StringOutput)
}

// Remote directory of the file system.
func (o FunctionNasStorageNasConfigOutput) RemotePath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionNasStorageNasConfig) string { return v.RemotePath }).(pulumi.StringOutput)
}

type FunctionNasStorageNasConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionNasStorageNasConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionNasStorageNasConfig)(nil)).Elem()
}

func (o FunctionNasStorageNasConfigArrayOutput) ToFunctionNasStorageNasConfigArrayOutput() FunctionNasStorageNasConfigArrayOutput {
	return o
}

func (o FunctionNasStorageNasConfigArrayOutput) ToFunctionNasStorageNasConfigArrayOutputWithContext(ctx context.Context) FunctionNasStorageNasConfigArrayOutput {
	return o
}

func (o FunctionNasStorageNasConfigArrayOutput) Index(i pulumi.IntInput) FunctionNasStorageNasConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionNasStorageNasConfig {
		return vs[0].([]FunctionNasStorageNasConfig)[vs[1].(int)]
	}).(FunctionNasStorageNasConfigOutput)
}

type FunctionSourceAccessConfig struct {
	// The image repository password.
	Password bool `pulumi:"password"`
	// Mirror repository username.
	Username string `pulumi:"username"`
}

// FunctionSourceAccessConfigInput is an input type that accepts FunctionSourceAccessConfigArgs and FunctionSourceAccessConfigOutput values.
// You can construct a concrete instance of `FunctionSourceAccessConfigInput` via:
//
//	FunctionSourceAccessConfigArgs{...}
type FunctionSourceAccessConfigInput interface {
	pulumi.Input

	ToFunctionSourceAccessConfigOutput() FunctionSourceAccessConfigOutput
	ToFunctionSourceAccessConfigOutputWithContext(context.Context) FunctionSourceAccessConfigOutput
}

type FunctionSourceAccessConfigArgs struct {
	// The image repository password.
	Password pulumi.BoolInput `pulumi:"password"`
	// Mirror repository username.
	Username pulumi.StringInput `pulumi:"username"`
}

func (FunctionSourceAccessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSourceAccessConfig)(nil)).Elem()
}

func (i FunctionSourceAccessConfigArgs) ToFunctionSourceAccessConfigOutput() FunctionSourceAccessConfigOutput {
	return i.ToFunctionSourceAccessConfigOutputWithContext(context.Background())
}

func (i FunctionSourceAccessConfigArgs) ToFunctionSourceAccessConfigOutputWithContext(ctx context.Context) FunctionSourceAccessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceAccessConfigOutput)
}

func (i FunctionSourceAccessConfigArgs) ToFunctionSourceAccessConfigPtrOutput() FunctionSourceAccessConfigPtrOutput {
	return i.ToFunctionSourceAccessConfigPtrOutputWithContext(context.Background())
}

func (i FunctionSourceAccessConfigArgs) ToFunctionSourceAccessConfigPtrOutputWithContext(ctx context.Context) FunctionSourceAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceAccessConfigOutput).ToFunctionSourceAccessConfigPtrOutputWithContext(ctx)
}

// FunctionSourceAccessConfigPtrInput is an input type that accepts FunctionSourceAccessConfigArgs, FunctionSourceAccessConfigPtr and FunctionSourceAccessConfigPtrOutput values.
// You can construct a concrete instance of `FunctionSourceAccessConfigPtrInput` via:
//
//	        FunctionSourceAccessConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionSourceAccessConfigPtrInput interface {
	pulumi.Input

	ToFunctionSourceAccessConfigPtrOutput() FunctionSourceAccessConfigPtrOutput
	ToFunctionSourceAccessConfigPtrOutputWithContext(context.Context) FunctionSourceAccessConfigPtrOutput
}

type functionSourceAccessConfigPtrType FunctionSourceAccessConfigArgs

func FunctionSourceAccessConfigPtr(v *FunctionSourceAccessConfigArgs) FunctionSourceAccessConfigPtrInput {
	return (*functionSourceAccessConfigPtrType)(v)
}

func (*functionSourceAccessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSourceAccessConfig)(nil)).Elem()
}

func (i *functionSourceAccessConfigPtrType) ToFunctionSourceAccessConfigPtrOutput() FunctionSourceAccessConfigPtrOutput {
	return i.ToFunctionSourceAccessConfigPtrOutputWithContext(context.Background())
}

func (i *functionSourceAccessConfigPtrType) ToFunctionSourceAccessConfigPtrOutputWithContext(ctx context.Context) FunctionSourceAccessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSourceAccessConfigPtrOutput)
}

type FunctionSourceAccessConfigOutput struct{ *pulumi.OutputState }

func (FunctionSourceAccessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSourceAccessConfig)(nil)).Elem()
}

func (o FunctionSourceAccessConfigOutput) ToFunctionSourceAccessConfigOutput() FunctionSourceAccessConfigOutput {
	return o
}

func (o FunctionSourceAccessConfigOutput) ToFunctionSourceAccessConfigOutputWithContext(ctx context.Context) FunctionSourceAccessConfigOutput {
	return o
}

func (o FunctionSourceAccessConfigOutput) ToFunctionSourceAccessConfigPtrOutput() FunctionSourceAccessConfigPtrOutput {
	return o.ToFunctionSourceAccessConfigPtrOutputWithContext(context.Background())
}

func (o FunctionSourceAccessConfigOutput) ToFunctionSourceAccessConfigPtrOutputWithContext(ctx context.Context) FunctionSourceAccessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionSourceAccessConfig) *FunctionSourceAccessConfig {
		return &v
	}).(FunctionSourceAccessConfigPtrOutput)
}

// The image repository password.
func (o FunctionSourceAccessConfigOutput) Password() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionSourceAccessConfig) bool { return v.Password }).(pulumi.BoolOutput)
}

// Mirror repository username.
func (o FunctionSourceAccessConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionSourceAccessConfig) string { return v.Username }).(pulumi.StringOutput)
}

type FunctionSourceAccessConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionSourceAccessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSourceAccessConfig)(nil)).Elem()
}

func (o FunctionSourceAccessConfigPtrOutput) ToFunctionSourceAccessConfigPtrOutput() FunctionSourceAccessConfigPtrOutput {
	return o
}

func (o FunctionSourceAccessConfigPtrOutput) ToFunctionSourceAccessConfigPtrOutputWithContext(ctx context.Context) FunctionSourceAccessConfigPtrOutput {
	return o
}

func (o FunctionSourceAccessConfigPtrOutput) Elem() FunctionSourceAccessConfigOutput {
	return o.ApplyT(func(v *FunctionSourceAccessConfig) FunctionSourceAccessConfig {
		if v != nil {
			return *v
		}
		var ret FunctionSourceAccessConfig
		return ret
	}).(FunctionSourceAccessConfigOutput)
}

// The image repository password.
func (o FunctionSourceAccessConfigPtrOutput) Password() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionSourceAccessConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.BoolPtrOutput)
}

// Mirror repository username.
func (o FunctionSourceAccessConfigPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSourceAccessConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type FunctionTlsConfig struct {
	// TLS log function switch.
	EnableLog bool `pulumi:"enableLog"`
	// The project ID of TLS log topic.
	TlsProjectId *string `pulumi:"tlsProjectId"`
	// The topic ID of TLS log topic.
	TlsTopicId *string `pulumi:"tlsTopicId"`
}

// FunctionTlsConfigInput is an input type that accepts FunctionTlsConfigArgs and FunctionTlsConfigOutput values.
// You can construct a concrete instance of `FunctionTlsConfigInput` via:
//
//	FunctionTlsConfigArgs{...}
type FunctionTlsConfigInput interface {
	pulumi.Input

	ToFunctionTlsConfigOutput() FunctionTlsConfigOutput
	ToFunctionTlsConfigOutputWithContext(context.Context) FunctionTlsConfigOutput
}

type FunctionTlsConfigArgs struct {
	// TLS log function switch.
	EnableLog pulumi.BoolInput `pulumi:"enableLog"`
	// The project ID of TLS log topic.
	TlsProjectId pulumi.StringPtrInput `pulumi:"tlsProjectId"`
	// The topic ID of TLS log topic.
	TlsTopicId pulumi.StringPtrInput `pulumi:"tlsTopicId"`
}

func (FunctionTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTlsConfig)(nil)).Elem()
}

func (i FunctionTlsConfigArgs) ToFunctionTlsConfigOutput() FunctionTlsConfigOutput {
	return i.ToFunctionTlsConfigOutputWithContext(context.Background())
}

func (i FunctionTlsConfigArgs) ToFunctionTlsConfigOutputWithContext(ctx context.Context) FunctionTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTlsConfigOutput)
}

func (i FunctionTlsConfigArgs) ToFunctionTlsConfigPtrOutput() FunctionTlsConfigPtrOutput {
	return i.ToFunctionTlsConfigPtrOutputWithContext(context.Background())
}

func (i FunctionTlsConfigArgs) ToFunctionTlsConfigPtrOutputWithContext(ctx context.Context) FunctionTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTlsConfigOutput).ToFunctionTlsConfigPtrOutputWithContext(ctx)
}

// FunctionTlsConfigPtrInput is an input type that accepts FunctionTlsConfigArgs, FunctionTlsConfigPtr and FunctionTlsConfigPtrOutput values.
// You can construct a concrete instance of `FunctionTlsConfigPtrInput` via:
//
//	        FunctionTlsConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionTlsConfigPtrInput interface {
	pulumi.Input

	ToFunctionTlsConfigPtrOutput() FunctionTlsConfigPtrOutput
	ToFunctionTlsConfigPtrOutputWithContext(context.Context) FunctionTlsConfigPtrOutput
}

type functionTlsConfigPtrType FunctionTlsConfigArgs

func FunctionTlsConfigPtr(v *FunctionTlsConfigArgs) FunctionTlsConfigPtrInput {
	return (*functionTlsConfigPtrType)(v)
}

func (*functionTlsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTlsConfig)(nil)).Elem()
}

func (i *functionTlsConfigPtrType) ToFunctionTlsConfigPtrOutput() FunctionTlsConfigPtrOutput {
	return i.ToFunctionTlsConfigPtrOutputWithContext(context.Background())
}

func (i *functionTlsConfigPtrType) ToFunctionTlsConfigPtrOutputWithContext(ctx context.Context) FunctionTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTlsConfigPtrOutput)
}

type FunctionTlsConfigOutput struct{ *pulumi.OutputState }

func (FunctionTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTlsConfig)(nil)).Elem()
}

func (o FunctionTlsConfigOutput) ToFunctionTlsConfigOutput() FunctionTlsConfigOutput {
	return o
}

func (o FunctionTlsConfigOutput) ToFunctionTlsConfigOutputWithContext(ctx context.Context) FunctionTlsConfigOutput {
	return o
}

func (o FunctionTlsConfigOutput) ToFunctionTlsConfigPtrOutput() FunctionTlsConfigPtrOutput {
	return o.ToFunctionTlsConfigPtrOutputWithContext(context.Background())
}

func (o FunctionTlsConfigOutput) ToFunctionTlsConfigPtrOutputWithContext(ctx context.Context) FunctionTlsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionTlsConfig) *FunctionTlsConfig {
		return &v
	}).(FunctionTlsConfigPtrOutput)
}

// TLS log function switch.
func (o FunctionTlsConfigOutput) EnableLog() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionTlsConfig) bool { return v.EnableLog }).(pulumi.BoolOutput)
}

// The project ID of TLS log topic.
func (o FunctionTlsConfigOutput) TlsProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTlsConfig) *string { return v.TlsProjectId }).(pulumi.StringPtrOutput)
}

// The topic ID of TLS log topic.
func (o FunctionTlsConfigOutput) TlsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionTlsConfig) *string { return v.TlsTopicId }).(pulumi.StringPtrOutput)
}

type FunctionTlsConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionTlsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTlsConfig)(nil)).Elem()
}

func (o FunctionTlsConfigPtrOutput) ToFunctionTlsConfigPtrOutput() FunctionTlsConfigPtrOutput {
	return o
}

func (o FunctionTlsConfigPtrOutput) ToFunctionTlsConfigPtrOutputWithContext(ctx context.Context) FunctionTlsConfigPtrOutput {
	return o
}

func (o FunctionTlsConfigPtrOutput) Elem() FunctionTlsConfigOutput {
	return o.ApplyT(func(v *FunctionTlsConfig) FunctionTlsConfig {
		if v != nil {
			return *v
		}
		var ret FunctionTlsConfig
		return ret
	}).(FunctionTlsConfigOutput)
}

// TLS log function switch.
func (o FunctionTlsConfigPtrOutput) EnableLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionTlsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableLog
	}).(pulumi.BoolPtrOutput)
}

// The project ID of TLS log topic.
func (o FunctionTlsConfigPtrOutput) TlsProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.TlsProjectId
	}).(pulumi.StringPtrOutput)
}

// The topic ID of TLS log topic.
func (o FunctionTlsConfigPtrOutput) TlsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.TlsTopicId
	}).(pulumi.StringPtrOutput)
}

type FunctionTosMountConfig struct {
	// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	Credentials *FunctionTosMountConfigCredentials `pulumi:"credentials"`
	// Whether to enable TOS storage mounting.
	EnableTos bool `pulumi:"enableTos"`
	// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
	MountPoints []FunctionTosMountConfigMountPoint `pulumi:"mountPoints"`
}

// FunctionTosMountConfigInput is an input type that accepts FunctionTosMountConfigArgs and FunctionTosMountConfigOutput values.
// You can construct a concrete instance of `FunctionTosMountConfigInput` via:
//
//	FunctionTosMountConfigArgs{...}
type FunctionTosMountConfigInput interface {
	pulumi.Input

	ToFunctionTosMountConfigOutput() FunctionTosMountConfigOutput
	ToFunctionTosMountConfigOutputWithContext(context.Context) FunctionTosMountConfigOutput
}

type FunctionTosMountConfigArgs struct {
	// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	Credentials FunctionTosMountConfigCredentialsPtrInput `pulumi:"credentials"`
	// Whether to enable TOS storage mounting.
	EnableTos pulumi.BoolInput `pulumi:"enableTos"`
	// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
	MountPoints FunctionTosMountConfigMountPointArrayInput `pulumi:"mountPoints"`
}

func (FunctionTosMountConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTosMountConfig)(nil)).Elem()
}

func (i FunctionTosMountConfigArgs) ToFunctionTosMountConfigOutput() FunctionTosMountConfigOutput {
	return i.ToFunctionTosMountConfigOutputWithContext(context.Background())
}

func (i FunctionTosMountConfigArgs) ToFunctionTosMountConfigOutputWithContext(ctx context.Context) FunctionTosMountConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTosMountConfigOutput)
}

func (i FunctionTosMountConfigArgs) ToFunctionTosMountConfigPtrOutput() FunctionTosMountConfigPtrOutput {
	return i.ToFunctionTosMountConfigPtrOutputWithContext(context.Background())
}

func (i FunctionTosMountConfigArgs) ToFunctionTosMountConfigPtrOutputWithContext(ctx context.Context) FunctionTosMountConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTosMountConfigOutput).ToFunctionTosMountConfigPtrOutputWithContext(ctx)
}

// FunctionTosMountConfigPtrInput is an input type that accepts FunctionTosMountConfigArgs, FunctionTosMountConfigPtr and FunctionTosMountConfigPtrOutput values.
// You can construct a concrete instance of `FunctionTosMountConfigPtrInput` via:
//
//	        FunctionTosMountConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionTosMountConfigPtrInput interface {
	pulumi.Input

	ToFunctionTosMountConfigPtrOutput() FunctionTosMountConfigPtrOutput
	ToFunctionTosMountConfigPtrOutputWithContext(context.Context) FunctionTosMountConfigPtrOutput
}

type functionTosMountConfigPtrType FunctionTosMountConfigArgs

func FunctionTosMountConfigPtr(v *FunctionTosMountConfigArgs) FunctionTosMountConfigPtrInput {
	return (*functionTosMountConfigPtrType)(v)
}

func (*functionTosMountConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTosMountConfig)(nil)).Elem()
}

func (i *functionTosMountConfigPtrType) ToFunctionTosMountConfigPtrOutput() FunctionTosMountConfigPtrOutput {
	return i.ToFunctionTosMountConfigPtrOutputWithContext(context.Background())
}

func (i *functionTosMountConfigPtrType) ToFunctionTosMountConfigPtrOutputWithContext(ctx context.Context) FunctionTosMountConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTosMountConfigPtrOutput)
}

type FunctionTosMountConfigOutput struct{ *pulumi.OutputState }

func (FunctionTosMountConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTosMountConfig)(nil)).Elem()
}

func (o FunctionTosMountConfigOutput) ToFunctionTosMountConfigOutput() FunctionTosMountConfigOutput {
	return o
}

func (o FunctionTosMountConfigOutput) ToFunctionTosMountConfigOutputWithContext(ctx context.Context) FunctionTosMountConfigOutput {
	return o
}

func (o FunctionTosMountConfigOutput) ToFunctionTosMountConfigPtrOutput() FunctionTosMountConfigPtrOutput {
	return o.ToFunctionTosMountConfigPtrOutputWithContext(context.Background())
}

func (o FunctionTosMountConfigOutput) ToFunctionTosMountConfigPtrOutputWithContext(ctx context.Context) FunctionTosMountConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionTosMountConfig) *FunctionTosMountConfig {
		return &v
	}).(FunctionTosMountConfigPtrOutput)
}

// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o FunctionTosMountConfigOutput) Credentials() FunctionTosMountConfigCredentialsPtrOutput {
	return o.ApplyT(func(v FunctionTosMountConfig) *FunctionTosMountConfigCredentials { return v.Credentials }).(FunctionTosMountConfigCredentialsPtrOutput)
}

// Whether to enable TOS storage mounting.
func (o FunctionTosMountConfigOutput) EnableTos() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionTosMountConfig) bool { return v.EnableTos }).(pulumi.BoolOutput)
}

// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
func (o FunctionTosMountConfigOutput) MountPoints() FunctionTosMountConfigMountPointArrayOutput {
	return o.ApplyT(func(v FunctionTosMountConfig) []FunctionTosMountConfigMountPoint { return v.MountPoints }).(FunctionTosMountConfigMountPointArrayOutput)
}

type FunctionTosMountConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionTosMountConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTosMountConfig)(nil)).Elem()
}

func (o FunctionTosMountConfigPtrOutput) ToFunctionTosMountConfigPtrOutput() FunctionTosMountConfigPtrOutput {
	return o
}

func (o FunctionTosMountConfigPtrOutput) ToFunctionTosMountConfigPtrOutputWithContext(ctx context.Context) FunctionTosMountConfigPtrOutput {
	return o
}

func (o FunctionTosMountConfigPtrOutput) Elem() FunctionTosMountConfigOutput {
	return o.ApplyT(func(v *FunctionTosMountConfig) FunctionTosMountConfig {
		if v != nil {
			return *v
		}
		var ret FunctionTosMountConfig
		return ret
	}).(FunctionTosMountConfigOutput)
}

// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o FunctionTosMountConfigPtrOutput) Credentials() FunctionTosMountConfigCredentialsPtrOutput {
	return o.ApplyT(func(v *FunctionTosMountConfig) *FunctionTosMountConfigCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(FunctionTosMountConfigCredentialsPtrOutput)
}

// Whether to enable TOS storage mounting.
func (o FunctionTosMountConfigPtrOutput) EnableTos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionTosMountConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableTos
	}).(pulumi.BoolPtrOutput)
}

// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
func (o FunctionTosMountConfigPtrOutput) MountPoints() FunctionTosMountConfigMountPointArrayOutput {
	return o.ApplyT(func(v *FunctionTosMountConfig) []FunctionTosMountConfigMountPoint {
		if v == nil {
			return nil
		}
		return v.MountPoints
	}).(FunctionTosMountConfigMountPointArrayOutput)
}

type FunctionTosMountConfigCredentials struct {
	// The AccessKey ID (AK) of the Volcano Engine account.
	AccessKeyId string `pulumi:"accessKeyId"`
	// The Secret Access Key (SK) of the Volcano Engine account.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// FunctionTosMountConfigCredentialsInput is an input type that accepts FunctionTosMountConfigCredentialsArgs and FunctionTosMountConfigCredentialsOutput values.
// You can construct a concrete instance of `FunctionTosMountConfigCredentialsInput` via:
//
//	FunctionTosMountConfigCredentialsArgs{...}
type FunctionTosMountConfigCredentialsInput interface {
	pulumi.Input

	ToFunctionTosMountConfigCredentialsOutput() FunctionTosMountConfigCredentialsOutput
	ToFunctionTosMountConfigCredentialsOutputWithContext(context.Context) FunctionTosMountConfigCredentialsOutput
}

type FunctionTosMountConfigCredentialsArgs struct {
	// The AccessKey ID (AK) of the Volcano Engine account.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// The Secret Access Key (SK) of the Volcano Engine account.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (FunctionTosMountConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTosMountConfigCredentials)(nil)).Elem()
}

func (i FunctionTosMountConfigCredentialsArgs) ToFunctionTosMountConfigCredentialsOutput() FunctionTosMountConfigCredentialsOutput {
	return i.ToFunctionTosMountConfigCredentialsOutputWithContext(context.Background())
}

func (i FunctionTosMountConfigCredentialsArgs) ToFunctionTosMountConfigCredentialsOutputWithContext(ctx context.Context) FunctionTosMountConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTosMountConfigCredentialsOutput)
}

func (i FunctionTosMountConfigCredentialsArgs) ToFunctionTosMountConfigCredentialsPtrOutput() FunctionTosMountConfigCredentialsPtrOutput {
	return i.ToFunctionTosMountConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i FunctionTosMountConfigCredentialsArgs) ToFunctionTosMountConfigCredentialsPtrOutputWithContext(ctx context.Context) FunctionTosMountConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTosMountConfigCredentialsOutput).ToFunctionTosMountConfigCredentialsPtrOutputWithContext(ctx)
}

// FunctionTosMountConfigCredentialsPtrInput is an input type that accepts FunctionTosMountConfigCredentialsArgs, FunctionTosMountConfigCredentialsPtr and FunctionTosMountConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `FunctionTosMountConfigCredentialsPtrInput` via:
//
//	        FunctionTosMountConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type FunctionTosMountConfigCredentialsPtrInput interface {
	pulumi.Input

	ToFunctionTosMountConfigCredentialsPtrOutput() FunctionTosMountConfigCredentialsPtrOutput
	ToFunctionTosMountConfigCredentialsPtrOutputWithContext(context.Context) FunctionTosMountConfigCredentialsPtrOutput
}

type functionTosMountConfigCredentialsPtrType FunctionTosMountConfigCredentialsArgs

func FunctionTosMountConfigCredentialsPtr(v *FunctionTosMountConfigCredentialsArgs) FunctionTosMountConfigCredentialsPtrInput {
	return (*functionTosMountConfigCredentialsPtrType)(v)
}

func (*functionTosMountConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTosMountConfigCredentials)(nil)).Elem()
}

func (i *functionTosMountConfigCredentialsPtrType) ToFunctionTosMountConfigCredentialsPtrOutput() FunctionTosMountConfigCredentialsPtrOutput {
	return i.ToFunctionTosMountConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *functionTosMountConfigCredentialsPtrType) ToFunctionTosMountConfigCredentialsPtrOutputWithContext(ctx context.Context) FunctionTosMountConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTosMountConfigCredentialsPtrOutput)
}

type FunctionTosMountConfigCredentialsOutput struct{ *pulumi.OutputState }

func (FunctionTosMountConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTosMountConfigCredentials)(nil)).Elem()
}

func (o FunctionTosMountConfigCredentialsOutput) ToFunctionTosMountConfigCredentialsOutput() FunctionTosMountConfigCredentialsOutput {
	return o
}

func (o FunctionTosMountConfigCredentialsOutput) ToFunctionTosMountConfigCredentialsOutputWithContext(ctx context.Context) FunctionTosMountConfigCredentialsOutput {
	return o
}

func (o FunctionTosMountConfigCredentialsOutput) ToFunctionTosMountConfigCredentialsPtrOutput() FunctionTosMountConfigCredentialsPtrOutput {
	return o.ToFunctionTosMountConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o FunctionTosMountConfigCredentialsOutput) ToFunctionTosMountConfigCredentialsPtrOutputWithContext(ctx context.Context) FunctionTosMountConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionTosMountConfigCredentials) *FunctionTosMountConfigCredentials {
		return &v
	}).(FunctionTosMountConfigCredentialsPtrOutput)
}

// The AccessKey ID (AK) of the Volcano Engine account.
func (o FunctionTosMountConfigCredentialsOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTosMountConfigCredentials) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// The Secret Access Key (SK) of the Volcano Engine account.
func (o FunctionTosMountConfigCredentialsOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTosMountConfigCredentials) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type FunctionTosMountConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (FunctionTosMountConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionTosMountConfigCredentials)(nil)).Elem()
}

func (o FunctionTosMountConfigCredentialsPtrOutput) ToFunctionTosMountConfigCredentialsPtrOutput() FunctionTosMountConfigCredentialsPtrOutput {
	return o
}

func (o FunctionTosMountConfigCredentialsPtrOutput) ToFunctionTosMountConfigCredentialsPtrOutputWithContext(ctx context.Context) FunctionTosMountConfigCredentialsPtrOutput {
	return o
}

func (o FunctionTosMountConfigCredentialsPtrOutput) Elem() FunctionTosMountConfigCredentialsOutput {
	return o.ApplyT(func(v *FunctionTosMountConfigCredentials) FunctionTosMountConfigCredentials {
		if v != nil {
			return *v
		}
		var ret FunctionTosMountConfigCredentials
		return ret
	}).(FunctionTosMountConfigCredentialsOutput)
}

// The AccessKey ID (AK) of the Volcano Engine account.
func (o FunctionTosMountConfigCredentialsPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTosMountConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// The Secret Access Key (SK) of the Volcano Engine account.
func (o FunctionTosMountConfigCredentialsPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionTosMountConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

type FunctionTosMountConfigMountPoint struct {
	// TOS bucket.
	BucketName string `pulumi:"bucketName"`
	// The mounted TOS Bucket path.
	BucketPath string `pulumi:"bucketPath"`
	// TOS Access domain name.
	Endpoint string `pulumi:"endpoint"`
	// Function local mount directory.
	LocalMountPath string `pulumi:"localMountPath"`
	// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
	ReadOnly *bool `pulumi:"readOnly"`
}

// FunctionTosMountConfigMountPointInput is an input type that accepts FunctionTosMountConfigMountPointArgs and FunctionTosMountConfigMountPointOutput values.
// You can construct a concrete instance of `FunctionTosMountConfigMountPointInput` via:
//
//	FunctionTosMountConfigMountPointArgs{...}
type FunctionTosMountConfigMountPointInput interface {
	pulumi.Input

	ToFunctionTosMountConfigMountPointOutput() FunctionTosMountConfigMountPointOutput
	ToFunctionTosMountConfigMountPointOutputWithContext(context.Context) FunctionTosMountConfigMountPointOutput
}

type FunctionTosMountConfigMountPointArgs struct {
	// TOS bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The mounted TOS Bucket path.
	BucketPath pulumi.StringInput `pulumi:"bucketPath"`
	// TOS Access domain name.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Function local mount directory.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (FunctionTosMountConfigMountPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTosMountConfigMountPoint)(nil)).Elem()
}

func (i FunctionTosMountConfigMountPointArgs) ToFunctionTosMountConfigMountPointOutput() FunctionTosMountConfigMountPointOutput {
	return i.ToFunctionTosMountConfigMountPointOutputWithContext(context.Background())
}

func (i FunctionTosMountConfigMountPointArgs) ToFunctionTosMountConfigMountPointOutputWithContext(ctx context.Context) FunctionTosMountConfigMountPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTosMountConfigMountPointOutput)
}

// FunctionTosMountConfigMountPointArrayInput is an input type that accepts FunctionTosMountConfigMountPointArray and FunctionTosMountConfigMountPointArrayOutput values.
// You can construct a concrete instance of `FunctionTosMountConfigMountPointArrayInput` via:
//
//	FunctionTosMountConfigMountPointArray{ FunctionTosMountConfigMountPointArgs{...} }
type FunctionTosMountConfigMountPointArrayInput interface {
	pulumi.Input

	ToFunctionTosMountConfigMountPointArrayOutput() FunctionTosMountConfigMountPointArrayOutput
	ToFunctionTosMountConfigMountPointArrayOutputWithContext(context.Context) FunctionTosMountConfigMountPointArrayOutput
}

type FunctionTosMountConfigMountPointArray []FunctionTosMountConfigMountPointInput

func (FunctionTosMountConfigMountPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionTosMountConfigMountPoint)(nil)).Elem()
}

func (i FunctionTosMountConfigMountPointArray) ToFunctionTosMountConfigMountPointArrayOutput() FunctionTosMountConfigMountPointArrayOutput {
	return i.ToFunctionTosMountConfigMountPointArrayOutputWithContext(context.Background())
}

func (i FunctionTosMountConfigMountPointArray) ToFunctionTosMountConfigMountPointArrayOutputWithContext(ctx context.Context) FunctionTosMountConfigMountPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTosMountConfigMountPointArrayOutput)
}

type FunctionTosMountConfigMountPointOutput struct{ *pulumi.OutputState }

func (FunctionTosMountConfigMountPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionTosMountConfigMountPoint)(nil)).Elem()
}

func (o FunctionTosMountConfigMountPointOutput) ToFunctionTosMountConfigMountPointOutput() FunctionTosMountConfigMountPointOutput {
	return o
}

func (o FunctionTosMountConfigMountPointOutput) ToFunctionTosMountConfigMountPointOutputWithContext(ctx context.Context) FunctionTosMountConfigMountPointOutput {
	return o
}

// TOS bucket.
func (o FunctionTosMountConfigMountPointOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTosMountConfigMountPoint) string { return v.BucketName }).(pulumi.StringOutput)
}

// The mounted TOS Bucket path.
func (o FunctionTosMountConfigMountPointOutput) BucketPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTosMountConfigMountPoint) string { return v.BucketPath }).(pulumi.StringOutput)
}

// TOS Access domain name.
func (o FunctionTosMountConfigMountPointOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTosMountConfigMountPoint) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Function local mount directory.
func (o FunctionTosMountConfigMountPointOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionTosMountConfigMountPoint) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
func (o FunctionTosMountConfigMountPointOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionTosMountConfigMountPoint) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type FunctionTosMountConfigMountPointArrayOutput struct{ *pulumi.OutputState }

func (FunctionTosMountConfigMountPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionTosMountConfigMountPoint)(nil)).Elem()
}

func (o FunctionTosMountConfigMountPointArrayOutput) ToFunctionTosMountConfigMountPointArrayOutput() FunctionTosMountConfigMountPointArrayOutput {
	return o
}

func (o FunctionTosMountConfigMountPointArrayOutput) ToFunctionTosMountConfigMountPointArrayOutputWithContext(ctx context.Context) FunctionTosMountConfigMountPointArrayOutput {
	return o
}

func (o FunctionTosMountConfigMountPointArrayOutput) Index(i pulumi.IntInput) FunctionTosMountConfigMountPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionTosMountConfigMountPoint {
		return vs[0].([]FunctionTosMountConfigMountPoint)[vs[1].(int)]
	}).(FunctionTosMountConfigMountPointOutput)
}

type FunctionVpcConfig struct {
	// Function access to the public network switch.
	EnableSharedInternetAccess *bool `pulumi:"enableSharedInternetAccess"`
	// Whether the function enables private network access.
	EnableVpc bool `pulumi:"enableVpc"`
	// The ID of security group.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of subnet.
	SubnetIds []string `pulumi:"subnetIds"`
	// The ID of VPC.
	VpcId *string `pulumi:"vpcId"`
}

// FunctionVpcConfigInput is an input type that accepts FunctionVpcConfigArgs and FunctionVpcConfigOutput values.
// You can construct a concrete instance of `FunctionVpcConfigInput` via:
//
//	FunctionVpcConfigArgs{...}
type FunctionVpcConfigInput interface {
	pulumi.Input

	ToFunctionVpcConfigOutput() FunctionVpcConfigOutput
	ToFunctionVpcConfigOutputWithContext(context.Context) FunctionVpcConfigOutput
}

type FunctionVpcConfigArgs struct {
	// Function access to the public network switch.
	EnableSharedInternetAccess pulumi.BoolPtrInput `pulumi:"enableSharedInternetAccess"`
	// Whether the function enables private network access.
	EnableVpc pulumi.BoolInput `pulumi:"enableVpc"`
	// The ID of security group.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of subnet.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The ID of VPC.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (FunctionVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVpcConfig)(nil)).Elem()
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigOutput() FunctionVpcConfigOutput {
	return i.ToFunctionVpcConfigOutputWithContext(context.Background())
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigOutputWithContext(ctx context.Context) FunctionVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigOutput)
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return i.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (i FunctionVpcConfigArgs) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigOutput).ToFunctionVpcConfigPtrOutputWithContext(ctx)
}

// FunctionVpcConfigPtrInput is an input type that accepts FunctionVpcConfigArgs, FunctionVpcConfigPtr and FunctionVpcConfigPtrOutput values.
// You can construct a concrete instance of `FunctionVpcConfigPtrInput` via:
//
//	        FunctionVpcConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionVpcConfigPtrInput interface {
	pulumi.Input

	ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput
	ToFunctionVpcConfigPtrOutputWithContext(context.Context) FunctionVpcConfigPtrOutput
}

type functionVpcConfigPtrType FunctionVpcConfigArgs

func FunctionVpcConfigPtr(v *FunctionVpcConfigArgs) FunctionVpcConfigPtrInput {
	return (*functionVpcConfigPtrType)(v)
}

func (*functionVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVpcConfig)(nil)).Elem()
}

func (i *functionVpcConfigPtrType) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return i.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (i *functionVpcConfigPtrType) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionVpcConfigPtrOutput)
}

type FunctionVpcConfigOutput struct{ *pulumi.OutputState }

func (FunctionVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionVpcConfig)(nil)).Elem()
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigOutput() FunctionVpcConfigOutput {
	return o
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigOutputWithContext(ctx context.Context) FunctionVpcConfigOutput {
	return o
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return o.ToFunctionVpcConfigPtrOutputWithContext(context.Background())
}

func (o FunctionVpcConfigOutput) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionVpcConfig) *FunctionVpcConfig {
		return &v
	}).(FunctionVpcConfigPtrOutput)
}

// Function access to the public network switch.
func (o FunctionVpcConfigOutput) EnableSharedInternetAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionVpcConfig) *bool { return v.EnableSharedInternetAccess }).(pulumi.BoolPtrOutput)
}

// Whether the function enables private network access.
func (o FunctionVpcConfigOutput) EnableVpc() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionVpcConfig) bool { return v.EnableVpc }).(pulumi.BoolOutput)
}

// The ID of security group.
func (o FunctionVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of subnet.
func (o FunctionVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The ID of VPC.
func (o FunctionVpcConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionVpcConfig) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type FunctionVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionVpcConfig)(nil)).Elem()
}

func (o FunctionVpcConfigPtrOutput) ToFunctionVpcConfigPtrOutput() FunctionVpcConfigPtrOutput {
	return o
}

func (o FunctionVpcConfigPtrOutput) ToFunctionVpcConfigPtrOutputWithContext(ctx context.Context) FunctionVpcConfigPtrOutput {
	return o
}

func (o FunctionVpcConfigPtrOutput) Elem() FunctionVpcConfigOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) FunctionVpcConfig {
		if v != nil {
			return *v
		}
		var ret FunctionVpcConfig
		return ret
	}).(FunctionVpcConfigOutput)
}

// Function access to the public network switch.
func (o FunctionVpcConfigPtrOutput) EnableSharedInternetAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSharedInternetAccess
	}).(pulumi.BoolPtrOutput)
}

// Whether the function enables private network access.
func (o FunctionVpcConfigPtrOutput) EnableVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableVpc
	}).(pulumi.BoolPtrOutput)
}

// The ID of security group.
func (o FunctionVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The ID of subnet.
func (o FunctionVpcConfigPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// The ID of VPC.
func (o FunctionVpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionVpcConfig) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type FunctionsItem struct {
	// The size of code package.
	CodeSize int `pulumi:"codeSize"`
	// Maximum code package size.
	CodeSizeLimit int `pulumi:"codeSizeLimit"`
	// The custom startup command for the instance.
	Command string `pulumi:"command"`
	// Function CPU charging policy.
	CpuStrategy string `pulumi:"cpuStrategy"`
	// Creation time.
	CreationTime string `pulumi:"creationTime"`
	// The description of Function.
	Description string `pulumi:"description"`
	// Function environment variable.
	Envs []FunctionsItemEnv `pulumi:"envs"`
	// Exclusive mode switch.
	ExclusiveMode bool `pulumi:"exclusiveMode"`
	// The ID of Function.
	Id string `pulumi:"id"`
	// Function to initialize timeout configuration.
	InitializerSec int `pulumi:"initializerSec"`
	// The instance type of the function instance.
	InstanceType string `pulumi:"instanceType"`
	// Update time.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// Maximum concurrency of a single instance.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Maximum memory for a single instance.
	MemoryMb int `pulumi:"memoryMb"`
	// The name of Function.
	Name string `pulumi:"name"`
	// The configuration of file storage NAS mount.
	NasStorages []FunctionsItemNasStorage `pulumi:"nasStorages"`
	// The owner of Function.
	Owner string `pulumi:"owner"`
	// Custom listening port for the instance.
	Port int `pulumi:"port"`
	// Request timeout (in seconds).
	RequestTimeout int `pulumi:"requestTimeout"`
	// The runtime of Function.
	Runtime string `pulumi:"runtime"`
	// The source address of the code/image.
	SourceLocation string `pulumi:"sourceLocation"`
	// Code Source type, supports tos, zip, image (whitelist accounts support native/v1 custom images).
	SourceType string `pulumi:"sourceType"`
	// Tags.
	Tags []FunctionsItemTag `pulumi:"tags"`
	// Function log configuration.
	TlsConfigs []FunctionsItemTlsConfig `pulumi:"tlsConfigs"`
	// The configuration of Object Storage TOS mount.
	TosMountConfigs []FunctionsItemTosMountConfig `pulumi:"tosMountConfigs"`
	// The number of triggers for this Function.
	TriggersCount int `pulumi:"triggersCount"`
	// The configuration of VPC.
	VpcConfigs []FunctionsItemVpcConfig `pulumi:"vpcConfigs"`
}

// FunctionsItemInput is an input type that accepts FunctionsItemArgs and FunctionsItemOutput values.
// You can construct a concrete instance of `FunctionsItemInput` via:
//
//	FunctionsItemArgs{...}
type FunctionsItemInput interface {
	pulumi.Input

	ToFunctionsItemOutput() FunctionsItemOutput
	ToFunctionsItemOutputWithContext(context.Context) FunctionsItemOutput
}

type FunctionsItemArgs struct {
	// The size of code package.
	CodeSize pulumi.IntInput `pulumi:"codeSize"`
	// Maximum code package size.
	CodeSizeLimit pulumi.IntInput `pulumi:"codeSizeLimit"`
	// The custom startup command for the instance.
	Command pulumi.StringInput `pulumi:"command"`
	// Function CPU charging policy.
	CpuStrategy pulumi.StringInput `pulumi:"cpuStrategy"`
	// Creation time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of Function.
	Description pulumi.StringInput `pulumi:"description"`
	// Function environment variable.
	Envs FunctionsItemEnvArrayInput `pulumi:"envs"`
	// Exclusive mode switch.
	ExclusiveMode pulumi.BoolInput `pulumi:"exclusiveMode"`
	// The ID of Function.
	Id pulumi.StringInput `pulumi:"id"`
	// Function to initialize timeout configuration.
	InitializerSec pulumi.IntInput `pulumi:"initializerSec"`
	// The instance type of the function instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Update time.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// Maximum concurrency of a single instance.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Maximum memory for a single instance.
	MemoryMb pulumi.IntInput `pulumi:"memoryMb"`
	// The name of Function.
	Name pulumi.StringInput `pulumi:"name"`
	// The configuration of file storage NAS mount.
	NasStorages FunctionsItemNasStorageArrayInput `pulumi:"nasStorages"`
	// The owner of Function.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Custom listening port for the instance.
	Port pulumi.IntInput `pulumi:"port"`
	// Request timeout (in seconds).
	RequestTimeout pulumi.IntInput `pulumi:"requestTimeout"`
	// The runtime of Function.
	Runtime pulumi.StringInput `pulumi:"runtime"`
	// The source address of the code/image.
	SourceLocation pulumi.StringInput `pulumi:"sourceLocation"`
	// Code Source type, supports tos, zip, image (whitelist accounts support native/v1 custom images).
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// Tags.
	Tags FunctionsItemTagArrayInput `pulumi:"tags"`
	// Function log configuration.
	TlsConfigs FunctionsItemTlsConfigArrayInput `pulumi:"tlsConfigs"`
	// The configuration of Object Storage TOS mount.
	TosMountConfigs FunctionsItemTosMountConfigArrayInput `pulumi:"tosMountConfigs"`
	// The number of triggers for this Function.
	TriggersCount pulumi.IntInput `pulumi:"triggersCount"`
	// The configuration of VPC.
	VpcConfigs FunctionsItemVpcConfigArrayInput `pulumi:"vpcConfigs"`
}

func (FunctionsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItem)(nil)).Elem()
}

func (i FunctionsItemArgs) ToFunctionsItemOutput() FunctionsItemOutput {
	return i.ToFunctionsItemOutputWithContext(context.Background())
}

func (i FunctionsItemArgs) ToFunctionsItemOutputWithContext(ctx context.Context) FunctionsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemOutput)
}

// FunctionsItemArrayInput is an input type that accepts FunctionsItemArray and FunctionsItemArrayOutput values.
// You can construct a concrete instance of `FunctionsItemArrayInput` via:
//
//	FunctionsItemArray{ FunctionsItemArgs{...} }
type FunctionsItemArrayInput interface {
	pulumi.Input

	ToFunctionsItemArrayOutput() FunctionsItemArrayOutput
	ToFunctionsItemArrayOutputWithContext(context.Context) FunctionsItemArrayOutput
}

type FunctionsItemArray []FunctionsItemInput

func (FunctionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItem)(nil)).Elem()
}

func (i FunctionsItemArray) ToFunctionsItemArrayOutput() FunctionsItemArrayOutput {
	return i.ToFunctionsItemArrayOutputWithContext(context.Background())
}

func (i FunctionsItemArray) ToFunctionsItemArrayOutputWithContext(ctx context.Context) FunctionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemArrayOutput)
}

type FunctionsItemOutput struct{ *pulumi.OutputState }

func (FunctionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItem)(nil)).Elem()
}

func (o FunctionsItemOutput) ToFunctionsItemOutput() FunctionsItemOutput {
	return o
}

func (o FunctionsItemOutput) ToFunctionsItemOutputWithContext(ctx context.Context) FunctionsItemOutput {
	return o
}

// The size of code package.
func (o FunctionsItemOutput) CodeSize() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItem) int { return v.CodeSize }).(pulumi.IntOutput)
}

// Maximum code package size.
func (o FunctionsItemOutput) CodeSizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItem) int { return v.CodeSizeLimit }).(pulumi.IntOutput)
}

// The custom startup command for the instance.
func (o FunctionsItemOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.Command }).(pulumi.StringOutput)
}

// Function CPU charging policy.
func (o FunctionsItemOutput) CpuStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.CpuStrategy }).(pulumi.StringOutput)
}

// Creation time.
func (o FunctionsItemOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of Function.
func (o FunctionsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.Description }).(pulumi.StringOutput)
}

// Function environment variable.
func (o FunctionsItemOutput) Envs() FunctionsItemEnvArrayOutput {
	return o.ApplyT(func(v FunctionsItem) []FunctionsItemEnv { return v.Envs }).(FunctionsItemEnvArrayOutput)
}

// Exclusive mode switch.
func (o FunctionsItemOutput) ExclusiveMode() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsItem) bool { return v.ExclusiveMode }).(pulumi.BoolOutput)
}

// The ID of Function.
func (o FunctionsItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.Id }).(pulumi.StringOutput)
}

// Function to initialize timeout configuration.
func (o FunctionsItemOutput) InitializerSec() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItem) int { return v.InitializerSec }).(pulumi.IntOutput)
}

// The instance type of the function instance.
func (o FunctionsItemOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Update time.
func (o FunctionsItemOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// Maximum concurrency of a single instance.
func (o FunctionsItemOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItem) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Maximum memory for a single instance.
func (o FunctionsItemOutput) MemoryMb() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItem) int { return v.MemoryMb }).(pulumi.IntOutput)
}

// The name of Function.
func (o FunctionsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The configuration of file storage NAS mount.
func (o FunctionsItemOutput) NasStorages() FunctionsItemNasStorageArrayOutput {
	return o.ApplyT(func(v FunctionsItem) []FunctionsItemNasStorage { return v.NasStorages }).(FunctionsItemNasStorageArrayOutput)
}

// The owner of Function.
func (o FunctionsItemOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.Owner }).(pulumi.StringOutput)
}

// Custom listening port for the instance.
func (o FunctionsItemOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItem) int { return v.Port }).(pulumi.IntOutput)
}

// Request timeout (in seconds).
func (o FunctionsItemOutput) RequestTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItem) int { return v.RequestTimeout }).(pulumi.IntOutput)
}

// The runtime of Function.
func (o FunctionsItemOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.Runtime }).(pulumi.StringOutput)
}

// The source address of the code/image.
func (o FunctionsItemOutput) SourceLocation() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.SourceLocation }).(pulumi.StringOutput)
}

// Code Source type, supports tos, zip, image (whitelist accounts support native/v1 custom images).
func (o FunctionsItemOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItem) string { return v.SourceType }).(pulumi.StringOutput)
}

// Tags.
func (o FunctionsItemOutput) Tags() FunctionsItemTagArrayOutput {
	return o.ApplyT(func(v FunctionsItem) []FunctionsItemTag { return v.Tags }).(FunctionsItemTagArrayOutput)
}

// Function log configuration.
func (o FunctionsItemOutput) TlsConfigs() FunctionsItemTlsConfigArrayOutput {
	return o.ApplyT(func(v FunctionsItem) []FunctionsItemTlsConfig { return v.TlsConfigs }).(FunctionsItemTlsConfigArrayOutput)
}

// The configuration of Object Storage TOS mount.
func (o FunctionsItemOutput) TosMountConfigs() FunctionsItemTosMountConfigArrayOutput {
	return o.ApplyT(func(v FunctionsItem) []FunctionsItemTosMountConfig { return v.TosMountConfigs }).(FunctionsItemTosMountConfigArrayOutput)
}

// The number of triggers for this Function.
func (o FunctionsItemOutput) TriggersCount() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItem) int { return v.TriggersCount }).(pulumi.IntOutput)
}

// The configuration of VPC.
func (o FunctionsItemOutput) VpcConfigs() FunctionsItemVpcConfigArrayOutput {
	return o.ApplyT(func(v FunctionsItem) []FunctionsItemVpcConfig { return v.VpcConfigs }).(FunctionsItemVpcConfigArrayOutput)
}

type FunctionsItemArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItem)(nil)).Elem()
}

func (o FunctionsItemArrayOutput) ToFunctionsItemArrayOutput() FunctionsItemArrayOutput {
	return o
}

func (o FunctionsItemArrayOutput) ToFunctionsItemArrayOutputWithContext(ctx context.Context) FunctionsItemArrayOutput {
	return o
}

func (o FunctionsItemArrayOutput) Index(i pulumi.IntInput) FunctionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItem {
		return vs[0].([]FunctionsItem)[vs[1].(int)]
	}).(FunctionsItemOutput)
}

type FunctionsItemEnv struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// FunctionsItemEnvInput is an input type that accepts FunctionsItemEnvArgs and FunctionsItemEnvOutput values.
// You can construct a concrete instance of `FunctionsItemEnvInput` via:
//
//	FunctionsItemEnvArgs{...}
type FunctionsItemEnvInput interface {
	pulumi.Input

	ToFunctionsItemEnvOutput() FunctionsItemEnvOutput
	ToFunctionsItemEnvOutputWithContext(context.Context) FunctionsItemEnvOutput
}

type FunctionsItemEnvArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FunctionsItemEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemEnv)(nil)).Elem()
}

func (i FunctionsItemEnvArgs) ToFunctionsItemEnvOutput() FunctionsItemEnvOutput {
	return i.ToFunctionsItemEnvOutputWithContext(context.Background())
}

func (i FunctionsItemEnvArgs) ToFunctionsItemEnvOutputWithContext(ctx context.Context) FunctionsItemEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemEnvOutput)
}

// FunctionsItemEnvArrayInput is an input type that accepts FunctionsItemEnvArray and FunctionsItemEnvArrayOutput values.
// You can construct a concrete instance of `FunctionsItemEnvArrayInput` via:
//
//	FunctionsItemEnvArray{ FunctionsItemEnvArgs{...} }
type FunctionsItemEnvArrayInput interface {
	pulumi.Input

	ToFunctionsItemEnvArrayOutput() FunctionsItemEnvArrayOutput
	ToFunctionsItemEnvArrayOutputWithContext(context.Context) FunctionsItemEnvArrayOutput
}

type FunctionsItemEnvArray []FunctionsItemEnvInput

func (FunctionsItemEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemEnv)(nil)).Elem()
}

func (i FunctionsItemEnvArray) ToFunctionsItemEnvArrayOutput() FunctionsItemEnvArrayOutput {
	return i.ToFunctionsItemEnvArrayOutputWithContext(context.Background())
}

func (i FunctionsItemEnvArray) ToFunctionsItemEnvArrayOutputWithContext(ctx context.Context) FunctionsItemEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemEnvArrayOutput)
}

type FunctionsItemEnvOutput struct{ *pulumi.OutputState }

func (FunctionsItemEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemEnv)(nil)).Elem()
}

func (o FunctionsItemEnvOutput) ToFunctionsItemEnvOutput() FunctionsItemEnvOutput {
	return o
}

func (o FunctionsItemEnvOutput) ToFunctionsItemEnvOutputWithContext(ctx context.Context) FunctionsItemEnvOutput {
	return o
}

// The Key of Tags.
func (o FunctionsItemEnvOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemEnv) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o FunctionsItemEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemEnv) string { return v.Value }).(pulumi.StringOutput)
}

type FunctionsItemEnvArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemEnv)(nil)).Elem()
}

func (o FunctionsItemEnvArrayOutput) ToFunctionsItemEnvArrayOutput() FunctionsItemEnvArrayOutput {
	return o
}

func (o FunctionsItemEnvArrayOutput) ToFunctionsItemEnvArrayOutputWithContext(ctx context.Context) FunctionsItemEnvArrayOutput {
	return o
}

func (o FunctionsItemEnvArrayOutput) Index(i pulumi.IntInput) FunctionsItemEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemEnv {
		return vs[0].([]FunctionsItemEnv)[vs[1].(int)]
	}).(FunctionsItemEnvOutput)
}

type FunctionsItemNasStorage struct {
	// Whether to enable NAS storage mounting.
	EnableNas bool `pulumi:"enableNas"`
	// The configuration of NAS.
	NasConfigs []FunctionsItemNasStorageNasConfig `pulumi:"nasConfigs"`
}

// FunctionsItemNasStorageInput is an input type that accepts FunctionsItemNasStorageArgs and FunctionsItemNasStorageOutput values.
// You can construct a concrete instance of `FunctionsItemNasStorageInput` via:
//
//	FunctionsItemNasStorageArgs{...}
type FunctionsItemNasStorageInput interface {
	pulumi.Input

	ToFunctionsItemNasStorageOutput() FunctionsItemNasStorageOutput
	ToFunctionsItemNasStorageOutputWithContext(context.Context) FunctionsItemNasStorageOutput
}

type FunctionsItemNasStorageArgs struct {
	// Whether to enable NAS storage mounting.
	EnableNas pulumi.BoolInput `pulumi:"enableNas"`
	// The configuration of NAS.
	NasConfigs FunctionsItemNasStorageNasConfigArrayInput `pulumi:"nasConfigs"`
}

func (FunctionsItemNasStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemNasStorage)(nil)).Elem()
}

func (i FunctionsItemNasStorageArgs) ToFunctionsItemNasStorageOutput() FunctionsItemNasStorageOutput {
	return i.ToFunctionsItemNasStorageOutputWithContext(context.Background())
}

func (i FunctionsItemNasStorageArgs) ToFunctionsItemNasStorageOutputWithContext(ctx context.Context) FunctionsItemNasStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemNasStorageOutput)
}

// FunctionsItemNasStorageArrayInput is an input type that accepts FunctionsItemNasStorageArray and FunctionsItemNasStorageArrayOutput values.
// You can construct a concrete instance of `FunctionsItemNasStorageArrayInput` via:
//
//	FunctionsItemNasStorageArray{ FunctionsItemNasStorageArgs{...} }
type FunctionsItemNasStorageArrayInput interface {
	pulumi.Input

	ToFunctionsItemNasStorageArrayOutput() FunctionsItemNasStorageArrayOutput
	ToFunctionsItemNasStorageArrayOutputWithContext(context.Context) FunctionsItemNasStorageArrayOutput
}

type FunctionsItemNasStorageArray []FunctionsItemNasStorageInput

func (FunctionsItemNasStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemNasStorage)(nil)).Elem()
}

func (i FunctionsItemNasStorageArray) ToFunctionsItemNasStorageArrayOutput() FunctionsItemNasStorageArrayOutput {
	return i.ToFunctionsItemNasStorageArrayOutputWithContext(context.Background())
}

func (i FunctionsItemNasStorageArray) ToFunctionsItemNasStorageArrayOutputWithContext(ctx context.Context) FunctionsItemNasStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemNasStorageArrayOutput)
}

type FunctionsItemNasStorageOutput struct{ *pulumi.OutputState }

func (FunctionsItemNasStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemNasStorage)(nil)).Elem()
}

func (o FunctionsItemNasStorageOutput) ToFunctionsItemNasStorageOutput() FunctionsItemNasStorageOutput {
	return o
}

func (o FunctionsItemNasStorageOutput) ToFunctionsItemNasStorageOutputWithContext(ctx context.Context) FunctionsItemNasStorageOutput {
	return o
}

// Whether to enable NAS storage mounting.
func (o FunctionsItemNasStorageOutput) EnableNas() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsItemNasStorage) bool { return v.EnableNas }).(pulumi.BoolOutput)
}

// The configuration of NAS.
func (o FunctionsItemNasStorageOutput) NasConfigs() FunctionsItemNasStorageNasConfigArrayOutput {
	return o.ApplyT(func(v FunctionsItemNasStorage) []FunctionsItemNasStorageNasConfig { return v.NasConfigs }).(FunctionsItemNasStorageNasConfigArrayOutput)
}

type FunctionsItemNasStorageArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemNasStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemNasStorage)(nil)).Elem()
}

func (o FunctionsItemNasStorageArrayOutput) ToFunctionsItemNasStorageArrayOutput() FunctionsItemNasStorageArrayOutput {
	return o
}

func (o FunctionsItemNasStorageArrayOutput) ToFunctionsItemNasStorageArrayOutputWithContext(ctx context.Context) FunctionsItemNasStorageArrayOutput {
	return o
}

func (o FunctionsItemNasStorageArrayOutput) Index(i pulumi.IntInput) FunctionsItemNasStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemNasStorage {
		return vs[0].([]FunctionsItemNasStorage)[vs[1].(int)]
	}).(FunctionsItemNasStorageOutput)
}

type FunctionsItemNasStorageNasConfig struct {
	// The ID of NAS file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// User groups in the file system. Customization is not supported yet. If this parameter is provided, the parameter value is 1000 (consistent with the function run user gid).
	Gid int `pulumi:"gid"`
	// Function local mount directory.
	LocalMountPath string `pulumi:"localMountPath"`
	// The ID of NAS mount point.
	MountPointId string `pulumi:"mountPointId"`
	// Remote directory of the file system.
	RemotePath string `pulumi:"remotePath"`
	// Users in the file system do not support customization yet. If this parameter is provided, its value can only be 1000 (consistent with the function run user uid).
	Uid int `pulumi:"uid"`
}

// FunctionsItemNasStorageNasConfigInput is an input type that accepts FunctionsItemNasStorageNasConfigArgs and FunctionsItemNasStorageNasConfigOutput values.
// You can construct a concrete instance of `FunctionsItemNasStorageNasConfigInput` via:
//
//	FunctionsItemNasStorageNasConfigArgs{...}
type FunctionsItemNasStorageNasConfigInput interface {
	pulumi.Input

	ToFunctionsItemNasStorageNasConfigOutput() FunctionsItemNasStorageNasConfigOutput
	ToFunctionsItemNasStorageNasConfigOutputWithContext(context.Context) FunctionsItemNasStorageNasConfigOutput
}

type FunctionsItemNasStorageNasConfigArgs struct {
	// The ID of NAS file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// User groups in the file system. Customization is not supported yet. If this parameter is provided, the parameter value is 1000 (consistent with the function run user gid).
	Gid pulumi.IntInput `pulumi:"gid"`
	// Function local mount directory.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// The ID of NAS mount point.
	MountPointId pulumi.StringInput `pulumi:"mountPointId"`
	// Remote directory of the file system.
	RemotePath pulumi.StringInput `pulumi:"remotePath"`
	// Users in the file system do not support customization yet. If this parameter is provided, its value can only be 1000 (consistent with the function run user uid).
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (FunctionsItemNasStorageNasConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemNasStorageNasConfig)(nil)).Elem()
}

func (i FunctionsItemNasStorageNasConfigArgs) ToFunctionsItemNasStorageNasConfigOutput() FunctionsItemNasStorageNasConfigOutput {
	return i.ToFunctionsItemNasStorageNasConfigOutputWithContext(context.Background())
}

func (i FunctionsItemNasStorageNasConfigArgs) ToFunctionsItemNasStorageNasConfigOutputWithContext(ctx context.Context) FunctionsItemNasStorageNasConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemNasStorageNasConfigOutput)
}

// FunctionsItemNasStorageNasConfigArrayInput is an input type that accepts FunctionsItemNasStorageNasConfigArray and FunctionsItemNasStorageNasConfigArrayOutput values.
// You can construct a concrete instance of `FunctionsItemNasStorageNasConfigArrayInput` via:
//
//	FunctionsItemNasStorageNasConfigArray{ FunctionsItemNasStorageNasConfigArgs{...} }
type FunctionsItemNasStorageNasConfigArrayInput interface {
	pulumi.Input

	ToFunctionsItemNasStorageNasConfigArrayOutput() FunctionsItemNasStorageNasConfigArrayOutput
	ToFunctionsItemNasStorageNasConfigArrayOutputWithContext(context.Context) FunctionsItemNasStorageNasConfigArrayOutput
}

type FunctionsItemNasStorageNasConfigArray []FunctionsItemNasStorageNasConfigInput

func (FunctionsItemNasStorageNasConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemNasStorageNasConfig)(nil)).Elem()
}

func (i FunctionsItemNasStorageNasConfigArray) ToFunctionsItemNasStorageNasConfigArrayOutput() FunctionsItemNasStorageNasConfigArrayOutput {
	return i.ToFunctionsItemNasStorageNasConfigArrayOutputWithContext(context.Background())
}

func (i FunctionsItemNasStorageNasConfigArray) ToFunctionsItemNasStorageNasConfigArrayOutputWithContext(ctx context.Context) FunctionsItemNasStorageNasConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemNasStorageNasConfigArrayOutput)
}

type FunctionsItemNasStorageNasConfigOutput struct{ *pulumi.OutputState }

func (FunctionsItemNasStorageNasConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemNasStorageNasConfig)(nil)).Elem()
}

func (o FunctionsItemNasStorageNasConfigOutput) ToFunctionsItemNasStorageNasConfigOutput() FunctionsItemNasStorageNasConfigOutput {
	return o
}

func (o FunctionsItemNasStorageNasConfigOutput) ToFunctionsItemNasStorageNasConfigOutputWithContext(ctx context.Context) FunctionsItemNasStorageNasConfigOutput {
	return o
}

// The ID of NAS file system.
func (o FunctionsItemNasStorageNasConfigOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemNasStorageNasConfig) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// User groups in the file system. Customization is not supported yet. If this parameter is provided, the parameter value is 1000 (consistent with the function run user gid).
func (o FunctionsItemNasStorageNasConfigOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItemNasStorageNasConfig) int { return v.Gid }).(pulumi.IntOutput)
}

// Function local mount directory.
func (o FunctionsItemNasStorageNasConfigOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemNasStorageNasConfig) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// The ID of NAS mount point.
func (o FunctionsItemNasStorageNasConfigOutput) MountPointId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemNasStorageNasConfig) string { return v.MountPointId }).(pulumi.StringOutput)
}

// Remote directory of the file system.
func (o FunctionsItemNasStorageNasConfigOutput) RemotePath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemNasStorageNasConfig) string { return v.RemotePath }).(pulumi.StringOutput)
}

// Users in the file system do not support customization yet. If this parameter is provided, its value can only be 1000 (consistent with the function run user uid).
func (o FunctionsItemNasStorageNasConfigOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v FunctionsItemNasStorageNasConfig) int { return v.Uid }).(pulumi.IntOutput)
}

type FunctionsItemNasStorageNasConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemNasStorageNasConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemNasStorageNasConfig)(nil)).Elem()
}

func (o FunctionsItemNasStorageNasConfigArrayOutput) ToFunctionsItemNasStorageNasConfigArrayOutput() FunctionsItemNasStorageNasConfigArrayOutput {
	return o
}

func (o FunctionsItemNasStorageNasConfigArrayOutput) ToFunctionsItemNasStorageNasConfigArrayOutputWithContext(ctx context.Context) FunctionsItemNasStorageNasConfigArrayOutput {
	return o
}

func (o FunctionsItemNasStorageNasConfigArrayOutput) Index(i pulumi.IntInput) FunctionsItemNasStorageNasConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemNasStorageNasConfig {
		return vs[0].([]FunctionsItemNasStorageNasConfig)[vs[1].(int)]
	}).(FunctionsItemNasStorageNasConfigOutput)
}

type FunctionsItemTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// FunctionsItemTagInput is an input type that accepts FunctionsItemTagArgs and FunctionsItemTagOutput values.
// You can construct a concrete instance of `FunctionsItemTagInput` via:
//
//	FunctionsItemTagArgs{...}
type FunctionsItemTagInput interface {
	pulumi.Input

	ToFunctionsItemTagOutput() FunctionsItemTagOutput
	ToFunctionsItemTagOutputWithContext(context.Context) FunctionsItemTagOutput
}

type FunctionsItemTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FunctionsItemTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTag)(nil)).Elem()
}

func (i FunctionsItemTagArgs) ToFunctionsItemTagOutput() FunctionsItemTagOutput {
	return i.ToFunctionsItemTagOutputWithContext(context.Background())
}

func (i FunctionsItemTagArgs) ToFunctionsItemTagOutputWithContext(ctx context.Context) FunctionsItemTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTagOutput)
}

// FunctionsItemTagArrayInput is an input type that accepts FunctionsItemTagArray and FunctionsItemTagArrayOutput values.
// You can construct a concrete instance of `FunctionsItemTagArrayInput` via:
//
//	FunctionsItemTagArray{ FunctionsItemTagArgs{...} }
type FunctionsItemTagArrayInput interface {
	pulumi.Input

	ToFunctionsItemTagArrayOutput() FunctionsItemTagArrayOutput
	ToFunctionsItemTagArrayOutputWithContext(context.Context) FunctionsItemTagArrayOutput
}

type FunctionsItemTagArray []FunctionsItemTagInput

func (FunctionsItemTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTag)(nil)).Elem()
}

func (i FunctionsItemTagArray) ToFunctionsItemTagArrayOutput() FunctionsItemTagArrayOutput {
	return i.ToFunctionsItemTagArrayOutputWithContext(context.Background())
}

func (i FunctionsItemTagArray) ToFunctionsItemTagArrayOutputWithContext(ctx context.Context) FunctionsItemTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTagArrayOutput)
}

type FunctionsItemTagOutput struct{ *pulumi.OutputState }

func (FunctionsItemTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTag)(nil)).Elem()
}

func (o FunctionsItemTagOutput) ToFunctionsItemTagOutput() FunctionsItemTagOutput {
	return o
}

func (o FunctionsItemTagOutput) ToFunctionsItemTagOutputWithContext(ctx context.Context) FunctionsItemTagOutput {
	return o
}

// The Key of Tags.
func (o FunctionsItemTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o FunctionsItemTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTag) string { return v.Value }).(pulumi.StringOutput)
}

type FunctionsItemTagArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTag)(nil)).Elem()
}

func (o FunctionsItemTagArrayOutput) ToFunctionsItemTagArrayOutput() FunctionsItemTagArrayOutput {
	return o
}

func (o FunctionsItemTagArrayOutput) ToFunctionsItemTagArrayOutputWithContext(ctx context.Context) FunctionsItemTagArrayOutput {
	return o
}

func (o FunctionsItemTagArrayOutput) Index(i pulumi.IntInput) FunctionsItemTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemTag {
		return vs[0].([]FunctionsItemTag)[vs[1].(int)]
	}).(FunctionsItemTagOutput)
}

type FunctionsItemTlsConfig struct {
	// TLS log function switch.
	EnableLog bool `pulumi:"enableLog"`
	// The project ID of TLS log topic.
	TlsProjectId string `pulumi:"tlsProjectId"`
	// The topic ID of TLS log topic.
	TlsTopicId string `pulumi:"tlsTopicId"`
}

// FunctionsItemTlsConfigInput is an input type that accepts FunctionsItemTlsConfigArgs and FunctionsItemTlsConfigOutput values.
// You can construct a concrete instance of `FunctionsItemTlsConfigInput` via:
//
//	FunctionsItemTlsConfigArgs{...}
type FunctionsItemTlsConfigInput interface {
	pulumi.Input

	ToFunctionsItemTlsConfigOutput() FunctionsItemTlsConfigOutput
	ToFunctionsItemTlsConfigOutputWithContext(context.Context) FunctionsItemTlsConfigOutput
}

type FunctionsItemTlsConfigArgs struct {
	// TLS log function switch.
	EnableLog pulumi.BoolInput `pulumi:"enableLog"`
	// The project ID of TLS log topic.
	TlsProjectId pulumi.StringInput `pulumi:"tlsProjectId"`
	// The topic ID of TLS log topic.
	TlsTopicId pulumi.StringInput `pulumi:"tlsTopicId"`
}

func (FunctionsItemTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTlsConfig)(nil)).Elem()
}

func (i FunctionsItemTlsConfigArgs) ToFunctionsItemTlsConfigOutput() FunctionsItemTlsConfigOutput {
	return i.ToFunctionsItemTlsConfigOutputWithContext(context.Background())
}

func (i FunctionsItemTlsConfigArgs) ToFunctionsItemTlsConfigOutputWithContext(ctx context.Context) FunctionsItemTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTlsConfigOutput)
}

// FunctionsItemTlsConfigArrayInput is an input type that accepts FunctionsItemTlsConfigArray and FunctionsItemTlsConfigArrayOutput values.
// You can construct a concrete instance of `FunctionsItemTlsConfigArrayInput` via:
//
//	FunctionsItemTlsConfigArray{ FunctionsItemTlsConfigArgs{...} }
type FunctionsItemTlsConfigArrayInput interface {
	pulumi.Input

	ToFunctionsItemTlsConfigArrayOutput() FunctionsItemTlsConfigArrayOutput
	ToFunctionsItemTlsConfigArrayOutputWithContext(context.Context) FunctionsItemTlsConfigArrayOutput
}

type FunctionsItemTlsConfigArray []FunctionsItemTlsConfigInput

func (FunctionsItemTlsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTlsConfig)(nil)).Elem()
}

func (i FunctionsItemTlsConfigArray) ToFunctionsItemTlsConfigArrayOutput() FunctionsItemTlsConfigArrayOutput {
	return i.ToFunctionsItemTlsConfigArrayOutputWithContext(context.Background())
}

func (i FunctionsItemTlsConfigArray) ToFunctionsItemTlsConfigArrayOutputWithContext(ctx context.Context) FunctionsItemTlsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTlsConfigArrayOutput)
}

type FunctionsItemTlsConfigOutput struct{ *pulumi.OutputState }

func (FunctionsItemTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTlsConfig)(nil)).Elem()
}

func (o FunctionsItemTlsConfigOutput) ToFunctionsItemTlsConfigOutput() FunctionsItemTlsConfigOutput {
	return o
}

func (o FunctionsItemTlsConfigOutput) ToFunctionsItemTlsConfigOutputWithContext(ctx context.Context) FunctionsItemTlsConfigOutput {
	return o
}

// TLS log function switch.
func (o FunctionsItemTlsConfigOutput) EnableLog() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsItemTlsConfig) bool { return v.EnableLog }).(pulumi.BoolOutput)
}

// The project ID of TLS log topic.
func (o FunctionsItemTlsConfigOutput) TlsProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTlsConfig) string { return v.TlsProjectId }).(pulumi.StringOutput)
}

// The topic ID of TLS log topic.
func (o FunctionsItemTlsConfigOutput) TlsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTlsConfig) string { return v.TlsTopicId }).(pulumi.StringOutput)
}

type FunctionsItemTlsConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemTlsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTlsConfig)(nil)).Elem()
}

func (o FunctionsItemTlsConfigArrayOutput) ToFunctionsItemTlsConfigArrayOutput() FunctionsItemTlsConfigArrayOutput {
	return o
}

func (o FunctionsItemTlsConfigArrayOutput) ToFunctionsItemTlsConfigArrayOutputWithContext(ctx context.Context) FunctionsItemTlsConfigArrayOutput {
	return o
}

func (o FunctionsItemTlsConfigArrayOutput) Index(i pulumi.IntInput) FunctionsItemTlsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemTlsConfig {
		return vs[0].([]FunctionsItemTlsConfig)[vs[1].(int)]
	}).(FunctionsItemTlsConfigOutput)
}

type FunctionsItemTosMountConfig struct {
	// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name.
	Credentials []FunctionsItemTosMountConfigCredential `pulumi:"credentials"`
	// Whether to enable TOS storage mounting.
	EnableTos bool `pulumi:"enableTos"`
	// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
	MountPoints []FunctionsItemTosMountConfigMountPoint `pulumi:"mountPoints"`
}

// FunctionsItemTosMountConfigInput is an input type that accepts FunctionsItemTosMountConfigArgs and FunctionsItemTosMountConfigOutput values.
// You can construct a concrete instance of `FunctionsItemTosMountConfigInput` via:
//
//	FunctionsItemTosMountConfigArgs{...}
type FunctionsItemTosMountConfigInput interface {
	pulumi.Input

	ToFunctionsItemTosMountConfigOutput() FunctionsItemTosMountConfigOutput
	ToFunctionsItemTosMountConfigOutputWithContext(context.Context) FunctionsItemTosMountConfigOutput
}

type FunctionsItemTosMountConfigArgs struct {
	// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name.
	Credentials FunctionsItemTosMountConfigCredentialArrayInput `pulumi:"credentials"`
	// Whether to enable TOS storage mounting.
	EnableTos pulumi.BoolInput `pulumi:"enableTos"`
	// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
	MountPoints FunctionsItemTosMountConfigMountPointArrayInput `pulumi:"mountPoints"`
}

func (FunctionsItemTosMountConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTosMountConfig)(nil)).Elem()
}

func (i FunctionsItemTosMountConfigArgs) ToFunctionsItemTosMountConfigOutput() FunctionsItemTosMountConfigOutput {
	return i.ToFunctionsItemTosMountConfigOutputWithContext(context.Background())
}

func (i FunctionsItemTosMountConfigArgs) ToFunctionsItemTosMountConfigOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTosMountConfigOutput)
}

// FunctionsItemTosMountConfigArrayInput is an input type that accepts FunctionsItemTosMountConfigArray and FunctionsItemTosMountConfigArrayOutput values.
// You can construct a concrete instance of `FunctionsItemTosMountConfigArrayInput` via:
//
//	FunctionsItemTosMountConfigArray{ FunctionsItemTosMountConfigArgs{...} }
type FunctionsItemTosMountConfigArrayInput interface {
	pulumi.Input

	ToFunctionsItemTosMountConfigArrayOutput() FunctionsItemTosMountConfigArrayOutput
	ToFunctionsItemTosMountConfigArrayOutputWithContext(context.Context) FunctionsItemTosMountConfigArrayOutput
}

type FunctionsItemTosMountConfigArray []FunctionsItemTosMountConfigInput

func (FunctionsItemTosMountConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTosMountConfig)(nil)).Elem()
}

func (i FunctionsItemTosMountConfigArray) ToFunctionsItemTosMountConfigArrayOutput() FunctionsItemTosMountConfigArrayOutput {
	return i.ToFunctionsItemTosMountConfigArrayOutputWithContext(context.Background())
}

func (i FunctionsItemTosMountConfigArray) ToFunctionsItemTosMountConfigArrayOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTosMountConfigArrayOutput)
}

type FunctionsItemTosMountConfigOutput struct{ *pulumi.OutputState }

func (FunctionsItemTosMountConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTosMountConfig)(nil)).Elem()
}

func (o FunctionsItemTosMountConfigOutput) ToFunctionsItemTosMountConfigOutput() FunctionsItemTosMountConfigOutput {
	return o
}

func (o FunctionsItemTosMountConfigOutput) ToFunctionsItemTosMountConfigOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigOutput {
	return o
}

// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name.
func (o FunctionsItemTosMountConfigOutput) Credentials() FunctionsItemTosMountConfigCredentialArrayOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfig) []FunctionsItemTosMountConfigCredential { return v.Credentials }).(FunctionsItemTosMountConfigCredentialArrayOutput)
}

// Whether to enable TOS storage mounting.
func (o FunctionsItemTosMountConfigOutput) EnableTos() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfig) bool { return v.EnableTos }).(pulumi.BoolOutput)
}

// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
func (o FunctionsItemTosMountConfigOutput) MountPoints() FunctionsItemTosMountConfigMountPointArrayOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfig) []FunctionsItemTosMountConfigMountPoint { return v.MountPoints }).(FunctionsItemTosMountConfigMountPointArrayOutput)
}

type FunctionsItemTosMountConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemTosMountConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTosMountConfig)(nil)).Elem()
}

func (o FunctionsItemTosMountConfigArrayOutput) ToFunctionsItemTosMountConfigArrayOutput() FunctionsItemTosMountConfigArrayOutput {
	return o
}

func (o FunctionsItemTosMountConfigArrayOutput) ToFunctionsItemTosMountConfigArrayOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigArrayOutput {
	return o
}

func (o FunctionsItemTosMountConfigArrayOutput) Index(i pulumi.IntInput) FunctionsItemTosMountConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemTosMountConfig {
		return vs[0].([]FunctionsItemTosMountConfig)[vs[1].(int)]
	}).(FunctionsItemTosMountConfigOutput)
}

type FunctionsItemTosMountConfigCredential struct {
	// The AccessKey ID (AK) of the Volcano Engine account.
	AccessKeyId string `pulumi:"accessKeyId"`
	// The Secret Access Key (SK) of the Volcano Engine account.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// FunctionsItemTosMountConfigCredentialInput is an input type that accepts FunctionsItemTosMountConfigCredentialArgs and FunctionsItemTosMountConfigCredentialOutput values.
// You can construct a concrete instance of `FunctionsItemTosMountConfigCredentialInput` via:
//
//	FunctionsItemTosMountConfigCredentialArgs{...}
type FunctionsItemTosMountConfigCredentialInput interface {
	pulumi.Input

	ToFunctionsItemTosMountConfigCredentialOutput() FunctionsItemTosMountConfigCredentialOutput
	ToFunctionsItemTosMountConfigCredentialOutputWithContext(context.Context) FunctionsItemTosMountConfigCredentialOutput
}

type FunctionsItemTosMountConfigCredentialArgs struct {
	// The AccessKey ID (AK) of the Volcano Engine account.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// The Secret Access Key (SK) of the Volcano Engine account.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (FunctionsItemTosMountConfigCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTosMountConfigCredential)(nil)).Elem()
}

func (i FunctionsItemTosMountConfigCredentialArgs) ToFunctionsItemTosMountConfigCredentialOutput() FunctionsItemTosMountConfigCredentialOutput {
	return i.ToFunctionsItemTosMountConfigCredentialOutputWithContext(context.Background())
}

func (i FunctionsItemTosMountConfigCredentialArgs) ToFunctionsItemTosMountConfigCredentialOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTosMountConfigCredentialOutput)
}

// FunctionsItemTosMountConfigCredentialArrayInput is an input type that accepts FunctionsItemTosMountConfigCredentialArray and FunctionsItemTosMountConfigCredentialArrayOutput values.
// You can construct a concrete instance of `FunctionsItemTosMountConfigCredentialArrayInput` via:
//
//	FunctionsItemTosMountConfigCredentialArray{ FunctionsItemTosMountConfigCredentialArgs{...} }
type FunctionsItemTosMountConfigCredentialArrayInput interface {
	pulumi.Input

	ToFunctionsItemTosMountConfigCredentialArrayOutput() FunctionsItemTosMountConfigCredentialArrayOutput
	ToFunctionsItemTosMountConfigCredentialArrayOutputWithContext(context.Context) FunctionsItemTosMountConfigCredentialArrayOutput
}

type FunctionsItemTosMountConfigCredentialArray []FunctionsItemTosMountConfigCredentialInput

func (FunctionsItemTosMountConfigCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTosMountConfigCredential)(nil)).Elem()
}

func (i FunctionsItemTosMountConfigCredentialArray) ToFunctionsItemTosMountConfigCredentialArrayOutput() FunctionsItemTosMountConfigCredentialArrayOutput {
	return i.ToFunctionsItemTosMountConfigCredentialArrayOutputWithContext(context.Background())
}

func (i FunctionsItemTosMountConfigCredentialArray) ToFunctionsItemTosMountConfigCredentialArrayOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTosMountConfigCredentialArrayOutput)
}

type FunctionsItemTosMountConfigCredentialOutput struct{ *pulumi.OutputState }

func (FunctionsItemTosMountConfigCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTosMountConfigCredential)(nil)).Elem()
}

func (o FunctionsItemTosMountConfigCredentialOutput) ToFunctionsItemTosMountConfigCredentialOutput() FunctionsItemTosMountConfigCredentialOutput {
	return o
}

func (o FunctionsItemTosMountConfigCredentialOutput) ToFunctionsItemTosMountConfigCredentialOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigCredentialOutput {
	return o
}

// The AccessKey ID (AK) of the Volcano Engine account.
func (o FunctionsItemTosMountConfigCredentialOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfigCredential) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// The Secret Access Key (SK) of the Volcano Engine account.
func (o FunctionsItemTosMountConfigCredentialOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfigCredential) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type FunctionsItemTosMountConfigCredentialArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemTosMountConfigCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTosMountConfigCredential)(nil)).Elem()
}

func (o FunctionsItemTosMountConfigCredentialArrayOutput) ToFunctionsItemTosMountConfigCredentialArrayOutput() FunctionsItemTosMountConfigCredentialArrayOutput {
	return o
}

func (o FunctionsItemTosMountConfigCredentialArrayOutput) ToFunctionsItemTosMountConfigCredentialArrayOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigCredentialArrayOutput {
	return o
}

func (o FunctionsItemTosMountConfigCredentialArrayOutput) Index(i pulumi.IntInput) FunctionsItemTosMountConfigCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemTosMountConfigCredential {
		return vs[0].([]FunctionsItemTosMountConfigCredential)[vs[1].(int)]
	}).(FunctionsItemTosMountConfigCredentialOutput)
}

type FunctionsItemTosMountConfigMountPoint struct {
	// TOS bucket.
	BucketName string `pulumi:"bucketName"`
	// The mounted TOS Bucket path.
	BucketPath string `pulumi:"bucketPath"`
	// TOS Access domain name.
	Endpoint string `pulumi:"endpoint"`
	// Function local mount directory.
	LocalMountPath string `pulumi:"localMountPath"`
	// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
	ReadOnly bool `pulumi:"readOnly"`
}

// FunctionsItemTosMountConfigMountPointInput is an input type that accepts FunctionsItemTosMountConfigMountPointArgs and FunctionsItemTosMountConfigMountPointOutput values.
// You can construct a concrete instance of `FunctionsItemTosMountConfigMountPointInput` via:
//
//	FunctionsItemTosMountConfigMountPointArgs{...}
type FunctionsItemTosMountConfigMountPointInput interface {
	pulumi.Input

	ToFunctionsItemTosMountConfigMountPointOutput() FunctionsItemTosMountConfigMountPointOutput
	ToFunctionsItemTosMountConfigMountPointOutputWithContext(context.Context) FunctionsItemTosMountConfigMountPointOutput
}

type FunctionsItemTosMountConfigMountPointArgs struct {
	// TOS bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The mounted TOS Bucket path.
	BucketPath pulumi.StringInput `pulumi:"bucketPath"`
	// TOS Access domain name.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Function local mount directory.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`
}

func (FunctionsItemTosMountConfigMountPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTosMountConfigMountPoint)(nil)).Elem()
}

func (i FunctionsItemTosMountConfigMountPointArgs) ToFunctionsItemTosMountConfigMountPointOutput() FunctionsItemTosMountConfigMountPointOutput {
	return i.ToFunctionsItemTosMountConfigMountPointOutputWithContext(context.Background())
}

func (i FunctionsItemTosMountConfigMountPointArgs) ToFunctionsItemTosMountConfigMountPointOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigMountPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTosMountConfigMountPointOutput)
}

// FunctionsItemTosMountConfigMountPointArrayInput is an input type that accepts FunctionsItemTosMountConfigMountPointArray and FunctionsItemTosMountConfigMountPointArrayOutput values.
// You can construct a concrete instance of `FunctionsItemTosMountConfigMountPointArrayInput` via:
//
//	FunctionsItemTosMountConfigMountPointArray{ FunctionsItemTosMountConfigMountPointArgs{...} }
type FunctionsItemTosMountConfigMountPointArrayInput interface {
	pulumi.Input

	ToFunctionsItemTosMountConfigMountPointArrayOutput() FunctionsItemTosMountConfigMountPointArrayOutput
	ToFunctionsItemTosMountConfigMountPointArrayOutputWithContext(context.Context) FunctionsItemTosMountConfigMountPointArrayOutput
}

type FunctionsItemTosMountConfigMountPointArray []FunctionsItemTosMountConfigMountPointInput

func (FunctionsItemTosMountConfigMountPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTosMountConfigMountPoint)(nil)).Elem()
}

func (i FunctionsItemTosMountConfigMountPointArray) ToFunctionsItemTosMountConfigMountPointArrayOutput() FunctionsItemTosMountConfigMountPointArrayOutput {
	return i.ToFunctionsItemTosMountConfigMountPointArrayOutputWithContext(context.Background())
}

func (i FunctionsItemTosMountConfigMountPointArray) ToFunctionsItemTosMountConfigMountPointArrayOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigMountPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemTosMountConfigMountPointArrayOutput)
}

type FunctionsItemTosMountConfigMountPointOutput struct{ *pulumi.OutputState }

func (FunctionsItemTosMountConfigMountPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemTosMountConfigMountPoint)(nil)).Elem()
}

func (o FunctionsItemTosMountConfigMountPointOutput) ToFunctionsItemTosMountConfigMountPointOutput() FunctionsItemTosMountConfigMountPointOutput {
	return o
}

func (o FunctionsItemTosMountConfigMountPointOutput) ToFunctionsItemTosMountConfigMountPointOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigMountPointOutput {
	return o
}

// TOS bucket.
func (o FunctionsItemTosMountConfigMountPointOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfigMountPoint) string { return v.BucketName }).(pulumi.StringOutput)
}

// The mounted TOS Bucket path.
func (o FunctionsItemTosMountConfigMountPointOutput) BucketPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfigMountPoint) string { return v.BucketPath }).(pulumi.StringOutput)
}

// TOS Access domain name.
func (o FunctionsItemTosMountConfigMountPointOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfigMountPoint) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Function local mount directory.
func (o FunctionsItemTosMountConfigMountPointOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfigMountPoint) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
func (o FunctionsItemTosMountConfigMountPointOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsItemTosMountConfigMountPoint) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

type FunctionsItemTosMountConfigMountPointArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemTosMountConfigMountPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemTosMountConfigMountPoint)(nil)).Elem()
}

func (o FunctionsItemTosMountConfigMountPointArrayOutput) ToFunctionsItemTosMountConfigMountPointArrayOutput() FunctionsItemTosMountConfigMountPointArrayOutput {
	return o
}

func (o FunctionsItemTosMountConfigMountPointArrayOutput) ToFunctionsItemTosMountConfigMountPointArrayOutputWithContext(ctx context.Context) FunctionsItemTosMountConfigMountPointArrayOutput {
	return o
}

func (o FunctionsItemTosMountConfigMountPointArrayOutput) Index(i pulumi.IntInput) FunctionsItemTosMountConfigMountPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemTosMountConfigMountPoint {
		return vs[0].([]FunctionsItemTosMountConfigMountPoint)[vs[1].(int)]
	}).(FunctionsItemTosMountConfigMountPointOutput)
}

type FunctionsItemVpcConfig struct {
	// Function access to the public network switch.
	EnableSharedInternetAccess bool `pulumi:"enableSharedInternetAccess"`
	// Whether the function enables private network access.
	EnableVpc bool `pulumi:"enableVpc"`
	// The ID of security group.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of subnet.
	SubnetIds []string `pulumi:"subnetIds"`
	// The ID of VPC.
	VpcId string `pulumi:"vpcId"`
}

// FunctionsItemVpcConfigInput is an input type that accepts FunctionsItemVpcConfigArgs and FunctionsItemVpcConfigOutput values.
// You can construct a concrete instance of `FunctionsItemVpcConfigInput` via:
//
//	FunctionsItemVpcConfigArgs{...}
type FunctionsItemVpcConfigInput interface {
	pulumi.Input

	ToFunctionsItemVpcConfigOutput() FunctionsItemVpcConfigOutput
	ToFunctionsItemVpcConfigOutputWithContext(context.Context) FunctionsItemVpcConfigOutput
}

type FunctionsItemVpcConfigArgs struct {
	// Function access to the public network switch.
	EnableSharedInternetAccess pulumi.BoolInput `pulumi:"enableSharedInternetAccess"`
	// Whether the function enables private network access.
	EnableVpc pulumi.BoolInput `pulumi:"enableVpc"`
	// The ID of security group.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of subnet.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The ID of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (FunctionsItemVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemVpcConfig)(nil)).Elem()
}

func (i FunctionsItemVpcConfigArgs) ToFunctionsItemVpcConfigOutput() FunctionsItemVpcConfigOutput {
	return i.ToFunctionsItemVpcConfigOutputWithContext(context.Background())
}

func (i FunctionsItemVpcConfigArgs) ToFunctionsItemVpcConfigOutputWithContext(ctx context.Context) FunctionsItemVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemVpcConfigOutput)
}

// FunctionsItemVpcConfigArrayInput is an input type that accepts FunctionsItemVpcConfigArray and FunctionsItemVpcConfigArrayOutput values.
// You can construct a concrete instance of `FunctionsItemVpcConfigArrayInput` via:
//
//	FunctionsItemVpcConfigArray{ FunctionsItemVpcConfigArgs{...} }
type FunctionsItemVpcConfigArrayInput interface {
	pulumi.Input

	ToFunctionsItemVpcConfigArrayOutput() FunctionsItemVpcConfigArrayOutput
	ToFunctionsItemVpcConfigArrayOutputWithContext(context.Context) FunctionsItemVpcConfigArrayOutput
}

type FunctionsItemVpcConfigArray []FunctionsItemVpcConfigInput

func (FunctionsItemVpcConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemVpcConfig)(nil)).Elem()
}

func (i FunctionsItemVpcConfigArray) ToFunctionsItemVpcConfigArrayOutput() FunctionsItemVpcConfigArrayOutput {
	return i.ToFunctionsItemVpcConfigArrayOutputWithContext(context.Background())
}

func (i FunctionsItemVpcConfigArray) ToFunctionsItemVpcConfigArrayOutputWithContext(ctx context.Context) FunctionsItemVpcConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionsItemVpcConfigArrayOutput)
}

type FunctionsItemVpcConfigOutput struct{ *pulumi.OutputState }

func (FunctionsItemVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionsItemVpcConfig)(nil)).Elem()
}

func (o FunctionsItemVpcConfigOutput) ToFunctionsItemVpcConfigOutput() FunctionsItemVpcConfigOutput {
	return o
}

func (o FunctionsItemVpcConfigOutput) ToFunctionsItemVpcConfigOutputWithContext(ctx context.Context) FunctionsItemVpcConfigOutput {
	return o
}

// Function access to the public network switch.
func (o FunctionsItemVpcConfigOutput) EnableSharedInternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsItemVpcConfig) bool { return v.EnableSharedInternetAccess }).(pulumi.BoolOutput)
}

// Whether the function enables private network access.
func (o FunctionsItemVpcConfigOutput) EnableVpc() pulumi.BoolOutput {
	return o.ApplyT(func(v FunctionsItemVpcConfig) bool { return v.EnableVpc }).(pulumi.BoolOutput)
}

// The ID of security group.
func (o FunctionsItemVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionsItemVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of subnet.
func (o FunctionsItemVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FunctionsItemVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The ID of VPC.
func (o FunctionsItemVpcConfigOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionsItemVpcConfig) string { return v.VpcId }).(pulumi.StringOutput)
}

type FunctionsItemVpcConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionsItemVpcConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionsItemVpcConfig)(nil)).Elem()
}

func (o FunctionsItemVpcConfigArrayOutput) ToFunctionsItemVpcConfigArrayOutput() FunctionsItemVpcConfigArrayOutput {
	return o
}

func (o FunctionsItemVpcConfigArrayOutput) ToFunctionsItemVpcConfigArrayOutputWithContext(ctx context.Context) FunctionsItemVpcConfigArrayOutput {
	return o
}

func (o FunctionsItemVpcConfigArrayOutput) Index(i pulumi.IntInput) FunctionsItemVpcConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionsItemVpcConfig {
		return vs[0].([]FunctionsItemVpcConfig)[vs[1].(int)]
	}).(FunctionsItemVpcConfigOutput)
}

type KafkaTriggerKafkaCredentials struct {
	// Kafka authentication mechanism.
	Mechanism string `pulumi:"mechanism"`
	// The SASL/PLAIN user password set when creating a Kafka instance.
	Password string `pulumi:"password"`
	// The SASL/PLAIN user name set when creating a Kafka instance.
	Username string `pulumi:"username"`
}

// KafkaTriggerKafkaCredentialsInput is an input type that accepts KafkaTriggerKafkaCredentialsArgs and KafkaTriggerKafkaCredentialsOutput values.
// You can construct a concrete instance of `KafkaTriggerKafkaCredentialsInput` via:
//
//	KafkaTriggerKafkaCredentialsArgs{...}
type KafkaTriggerKafkaCredentialsInput interface {
	pulumi.Input

	ToKafkaTriggerKafkaCredentialsOutput() KafkaTriggerKafkaCredentialsOutput
	ToKafkaTriggerKafkaCredentialsOutputWithContext(context.Context) KafkaTriggerKafkaCredentialsOutput
}

type KafkaTriggerKafkaCredentialsArgs struct {
	// Kafka authentication mechanism.
	Mechanism pulumi.StringInput `pulumi:"mechanism"`
	// The SASL/PLAIN user password set when creating a Kafka instance.
	Password pulumi.StringInput `pulumi:"password"`
	// The SASL/PLAIN user name set when creating a Kafka instance.
	Username pulumi.StringInput `pulumi:"username"`
}

func (KafkaTriggerKafkaCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTriggerKafkaCredentials)(nil)).Elem()
}

func (i KafkaTriggerKafkaCredentialsArgs) ToKafkaTriggerKafkaCredentialsOutput() KafkaTriggerKafkaCredentialsOutput {
	return i.ToKafkaTriggerKafkaCredentialsOutputWithContext(context.Background())
}

func (i KafkaTriggerKafkaCredentialsArgs) ToKafkaTriggerKafkaCredentialsOutputWithContext(ctx context.Context) KafkaTriggerKafkaCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTriggerKafkaCredentialsOutput)
}

func (i KafkaTriggerKafkaCredentialsArgs) ToKafkaTriggerKafkaCredentialsPtrOutput() KafkaTriggerKafkaCredentialsPtrOutput {
	return i.ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaTriggerKafkaCredentialsArgs) ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(ctx context.Context) KafkaTriggerKafkaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTriggerKafkaCredentialsOutput).ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(ctx)
}

// KafkaTriggerKafkaCredentialsPtrInput is an input type that accepts KafkaTriggerKafkaCredentialsArgs, KafkaTriggerKafkaCredentialsPtr and KafkaTriggerKafkaCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaTriggerKafkaCredentialsPtrInput` via:
//
//	        KafkaTriggerKafkaCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaTriggerKafkaCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaTriggerKafkaCredentialsPtrOutput() KafkaTriggerKafkaCredentialsPtrOutput
	ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(context.Context) KafkaTriggerKafkaCredentialsPtrOutput
}

type kafkaTriggerKafkaCredentialsPtrType KafkaTriggerKafkaCredentialsArgs

func KafkaTriggerKafkaCredentialsPtr(v *KafkaTriggerKafkaCredentialsArgs) KafkaTriggerKafkaCredentialsPtrInput {
	return (*kafkaTriggerKafkaCredentialsPtrType)(v)
}

func (*kafkaTriggerKafkaCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTriggerKafkaCredentials)(nil)).Elem()
}

func (i *kafkaTriggerKafkaCredentialsPtrType) ToKafkaTriggerKafkaCredentialsPtrOutput() KafkaTriggerKafkaCredentialsPtrOutput {
	return i.ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaTriggerKafkaCredentialsPtrType) ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(ctx context.Context) KafkaTriggerKafkaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTriggerKafkaCredentialsPtrOutput)
}

type KafkaTriggerKafkaCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaTriggerKafkaCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTriggerKafkaCredentials)(nil)).Elem()
}

func (o KafkaTriggerKafkaCredentialsOutput) ToKafkaTriggerKafkaCredentialsOutput() KafkaTriggerKafkaCredentialsOutput {
	return o
}

func (o KafkaTriggerKafkaCredentialsOutput) ToKafkaTriggerKafkaCredentialsOutputWithContext(ctx context.Context) KafkaTriggerKafkaCredentialsOutput {
	return o
}

func (o KafkaTriggerKafkaCredentialsOutput) ToKafkaTriggerKafkaCredentialsPtrOutput() KafkaTriggerKafkaCredentialsPtrOutput {
	return o.ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaTriggerKafkaCredentialsOutput) ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(ctx context.Context) KafkaTriggerKafkaCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTriggerKafkaCredentials) *KafkaTriggerKafkaCredentials {
		return &v
	}).(KafkaTriggerKafkaCredentialsPtrOutput)
}

// Kafka authentication mechanism.
func (o KafkaTriggerKafkaCredentialsOutput) Mechanism() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggerKafkaCredentials) string { return v.Mechanism }).(pulumi.StringOutput)
}

// The SASL/PLAIN user password set when creating a Kafka instance.
func (o KafkaTriggerKafkaCredentialsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggerKafkaCredentials) string { return v.Password }).(pulumi.StringOutput)
}

// The SASL/PLAIN user name set when creating a Kafka instance.
func (o KafkaTriggerKafkaCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggerKafkaCredentials) string { return v.Username }).(pulumi.StringOutput)
}

type KafkaTriggerKafkaCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaTriggerKafkaCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTriggerKafkaCredentials)(nil)).Elem()
}

func (o KafkaTriggerKafkaCredentialsPtrOutput) ToKafkaTriggerKafkaCredentialsPtrOutput() KafkaTriggerKafkaCredentialsPtrOutput {
	return o
}

func (o KafkaTriggerKafkaCredentialsPtrOutput) ToKafkaTriggerKafkaCredentialsPtrOutputWithContext(ctx context.Context) KafkaTriggerKafkaCredentialsPtrOutput {
	return o
}

func (o KafkaTriggerKafkaCredentialsPtrOutput) Elem() KafkaTriggerKafkaCredentialsOutput {
	return o.ApplyT(func(v *KafkaTriggerKafkaCredentials) KafkaTriggerKafkaCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaTriggerKafkaCredentials
		return ret
	}).(KafkaTriggerKafkaCredentialsOutput)
}

// Kafka authentication mechanism.
func (o KafkaTriggerKafkaCredentialsPtrOutput) Mechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTriggerKafkaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Mechanism
	}).(pulumi.StringPtrOutput)
}

// The SASL/PLAIN user password set when creating a Kafka instance.
func (o KafkaTriggerKafkaCredentialsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTriggerKafkaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The SASL/PLAIN user name set when creating a Kafka instance.
func (o KafkaTriggerKafkaCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTriggerKafkaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type KafkaTriggersItem struct {
	// The ID of account.
	AccountId string `pulumi:"accountId"`
	// The creation time of the Timer trigger.
	CreationTime string `pulumi:"creationTime"`
	// The description of the Timer trigger.
	Description string `pulumi:"description"`
	// The details of trigger configuration.
	DetailedConfig string `pulumi:"detailedConfig"`
	// Whether the Timer trigger is enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of Function.
	FunctionId string `pulumi:"functionId"`
	// The ID of the Timer trigger.
	Id string `pulumi:"id"`
	// The image version of the Timer trigger.
	ImageVersion string `pulumi:"imageVersion"`
	// The last update time of the Timer trigger.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The name of the Timer trigger.
	Name string `pulumi:"name"`
	// The category of the Timer trigger.
	Type string `pulumi:"type"`
}

// KafkaTriggersItemInput is an input type that accepts KafkaTriggersItemArgs and KafkaTriggersItemOutput values.
// You can construct a concrete instance of `KafkaTriggersItemInput` via:
//
//	KafkaTriggersItemArgs{...}
type KafkaTriggersItemInput interface {
	pulumi.Input

	ToKafkaTriggersItemOutput() KafkaTriggersItemOutput
	ToKafkaTriggersItemOutputWithContext(context.Context) KafkaTriggersItemOutput
}

type KafkaTriggersItemArgs struct {
	// The ID of account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The creation time of the Timer trigger.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the Timer trigger.
	Description pulumi.StringInput `pulumi:"description"`
	// The details of trigger configuration.
	DetailedConfig pulumi.StringInput `pulumi:"detailedConfig"`
	// Whether the Timer trigger is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of Function.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The ID of the Timer trigger.
	Id pulumi.StringInput `pulumi:"id"`
	// The image version of the Timer trigger.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	// The last update time of the Timer trigger.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The name of the Timer trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The category of the Timer trigger.
	Type pulumi.StringInput `pulumi:"type"`
}

func (KafkaTriggersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTriggersItem)(nil)).Elem()
}

func (i KafkaTriggersItemArgs) ToKafkaTriggersItemOutput() KafkaTriggersItemOutput {
	return i.ToKafkaTriggersItemOutputWithContext(context.Background())
}

func (i KafkaTriggersItemArgs) ToKafkaTriggersItemOutputWithContext(ctx context.Context) KafkaTriggersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTriggersItemOutput)
}

// KafkaTriggersItemArrayInput is an input type that accepts KafkaTriggersItemArray and KafkaTriggersItemArrayOutput values.
// You can construct a concrete instance of `KafkaTriggersItemArrayInput` via:
//
//	KafkaTriggersItemArray{ KafkaTriggersItemArgs{...} }
type KafkaTriggersItemArrayInput interface {
	pulumi.Input

	ToKafkaTriggersItemArrayOutput() KafkaTriggersItemArrayOutput
	ToKafkaTriggersItemArrayOutputWithContext(context.Context) KafkaTriggersItemArrayOutput
}

type KafkaTriggersItemArray []KafkaTriggersItemInput

func (KafkaTriggersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTriggersItem)(nil)).Elem()
}

func (i KafkaTriggersItemArray) ToKafkaTriggersItemArrayOutput() KafkaTriggersItemArrayOutput {
	return i.ToKafkaTriggersItemArrayOutputWithContext(context.Background())
}

func (i KafkaTriggersItemArray) ToKafkaTriggersItemArrayOutputWithContext(ctx context.Context) KafkaTriggersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTriggersItemArrayOutput)
}

type KafkaTriggersItemOutput struct{ *pulumi.OutputState }

func (KafkaTriggersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTriggersItem)(nil)).Elem()
}

func (o KafkaTriggersItemOutput) ToKafkaTriggersItemOutput() KafkaTriggersItemOutput {
	return o
}

func (o KafkaTriggersItemOutput) ToKafkaTriggersItemOutputWithContext(ctx context.Context) KafkaTriggersItemOutput {
	return o
}

// The ID of account.
func (o KafkaTriggersItemOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.AccountId }).(pulumi.StringOutput)
}

// The creation time of the Timer trigger.
func (o KafkaTriggersItemOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the Timer trigger.
func (o KafkaTriggersItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.Description }).(pulumi.StringOutput)
}

// The details of trigger configuration.
func (o KafkaTriggersItemOutput) DetailedConfig() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.DetailedConfig }).(pulumi.StringOutput)
}

// Whether the Timer trigger is enabled.
func (o KafkaTriggersItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v KafkaTriggersItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of Function.
func (o KafkaTriggersItemOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The ID of the Timer trigger.
func (o KafkaTriggersItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.Id }).(pulumi.StringOutput)
}

// The image version of the Timer trigger.
func (o KafkaTriggersItemOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.ImageVersion }).(pulumi.StringOutput)
}

// The last update time of the Timer trigger.
func (o KafkaTriggersItemOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The name of the Timer trigger.
func (o KafkaTriggersItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.Name }).(pulumi.StringOutput)
}

// The category of the Timer trigger.
func (o KafkaTriggersItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTriggersItem) string { return v.Type }).(pulumi.StringOutput)
}

type KafkaTriggersItemArrayOutput struct{ *pulumi.OutputState }

func (KafkaTriggersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaTriggersItem)(nil)).Elem()
}

func (o KafkaTriggersItemArrayOutput) ToKafkaTriggersItemArrayOutput() KafkaTriggersItemArrayOutput {
	return o
}

func (o KafkaTriggersItemArrayOutput) ToKafkaTriggersItemArrayOutputWithContext(ctx context.Context) KafkaTriggersItemArrayOutput {
	return o
}

func (o KafkaTriggersItemArrayOutput) Index(i pulumi.IntInput) KafkaTriggersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaTriggersItem {
		return vs[0].([]KafkaTriggersItem)[vs[1].(int)]
	}).(KafkaTriggersItemOutput)
}

type ReleasesFilter struct {
	// Filter key enumeration.
	Name *string `pulumi:"name"`
	// The filtering value of the query.
	Values []string `pulumi:"values"`
}

// ReleasesFilterInput is an input type that accepts ReleasesFilterArgs and ReleasesFilterOutput values.
// You can construct a concrete instance of `ReleasesFilterInput` via:
//
//	ReleasesFilterArgs{...}
type ReleasesFilterInput interface {
	pulumi.Input

	ToReleasesFilterOutput() ReleasesFilterOutput
	ToReleasesFilterOutputWithContext(context.Context) ReleasesFilterOutput
}

type ReleasesFilterArgs struct {
	// Filter key enumeration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The filtering value of the query.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ReleasesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleasesFilter)(nil)).Elem()
}

func (i ReleasesFilterArgs) ToReleasesFilterOutput() ReleasesFilterOutput {
	return i.ToReleasesFilterOutputWithContext(context.Background())
}

func (i ReleasesFilterArgs) ToReleasesFilterOutputWithContext(ctx context.Context) ReleasesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasesFilterOutput)
}

// ReleasesFilterArrayInput is an input type that accepts ReleasesFilterArray and ReleasesFilterArrayOutput values.
// You can construct a concrete instance of `ReleasesFilterArrayInput` via:
//
//	ReleasesFilterArray{ ReleasesFilterArgs{...} }
type ReleasesFilterArrayInput interface {
	pulumi.Input

	ToReleasesFilterArrayOutput() ReleasesFilterArrayOutput
	ToReleasesFilterArrayOutputWithContext(context.Context) ReleasesFilterArrayOutput
}

type ReleasesFilterArray []ReleasesFilterInput

func (ReleasesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleasesFilter)(nil)).Elem()
}

func (i ReleasesFilterArray) ToReleasesFilterArrayOutput() ReleasesFilterArrayOutput {
	return i.ToReleasesFilterArrayOutputWithContext(context.Background())
}

func (i ReleasesFilterArray) ToReleasesFilterArrayOutputWithContext(ctx context.Context) ReleasesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasesFilterArrayOutput)
}

type ReleasesFilterOutput struct{ *pulumi.OutputState }

func (ReleasesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleasesFilter)(nil)).Elem()
}

func (o ReleasesFilterOutput) ToReleasesFilterOutput() ReleasesFilterOutput {
	return o
}

func (o ReleasesFilterOutput) ToReleasesFilterOutputWithContext(ctx context.Context) ReleasesFilterOutput {
	return o
}

// Filter key enumeration.
func (o ReleasesFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleasesFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The filtering value of the query.
func (o ReleasesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReleasesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ReleasesFilterArrayOutput struct{ *pulumi.OutputState }

func (ReleasesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleasesFilter)(nil)).Elem()
}

func (o ReleasesFilterArrayOutput) ToReleasesFilterArrayOutput() ReleasesFilterArrayOutput {
	return o
}

func (o ReleasesFilterArrayOutput) ToReleasesFilterArrayOutputWithContext(ctx context.Context) ReleasesFilterArrayOutput {
	return o
}

func (o ReleasesFilterArrayOutput) Index(i pulumi.IntInput) ReleasesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReleasesFilter {
		return vs[0].([]ReleasesFilter)[vs[1].(int)]
	}).(ReleasesFilterOutput)
}

type ReleasesItem struct {
	// The create time of the published information.
	CreationTime string `pulumi:"creationTime"`
	// The description of the published information.
	Description string `pulumi:"description"`
	// Finish time.
	FinishTime string `pulumi:"finishTime"`
	// The ID of Function.
	FunctionId string `pulumi:"functionId"`
	// The ID of function release.
	Id string `pulumi:"id"`
	// The last update time of the published information.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The historical version numbers released.
	SourceRevisionNumber int `pulumi:"sourceRevisionNumber"`
	// The status of function release.
	Status string `pulumi:"status"`
	// The target version number released.
	TargetRevisionNumber int `pulumi:"targetRevisionNumber"`
}

// ReleasesItemInput is an input type that accepts ReleasesItemArgs and ReleasesItemOutput values.
// You can construct a concrete instance of `ReleasesItemInput` via:
//
//	ReleasesItemArgs{...}
type ReleasesItemInput interface {
	pulumi.Input

	ToReleasesItemOutput() ReleasesItemOutput
	ToReleasesItemOutputWithContext(context.Context) ReleasesItemOutput
}

type ReleasesItemArgs struct {
	// The create time of the published information.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the published information.
	Description pulumi.StringInput `pulumi:"description"`
	// Finish time.
	FinishTime pulumi.StringInput `pulumi:"finishTime"`
	// The ID of Function.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The ID of function release.
	Id pulumi.StringInput `pulumi:"id"`
	// The last update time of the published information.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The historical version numbers released.
	SourceRevisionNumber pulumi.IntInput `pulumi:"sourceRevisionNumber"`
	// The status of function release.
	Status pulumi.StringInput `pulumi:"status"`
	// The target version number released.
	TargetRevisionNumber pulumi.IntInput `pulumi:"targetRevisionNumber"`
}

func (ReleasesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleasesItem)(nil)).Elem()
}

func (i ReleasesItemArgs) ToReleasesItemOutput() ReleasesItemOutput {
	return i.ToReleasesItemOutputWithContext(context.Background())
}

func (i ReleasesItemArgs) ToReleasesItemOutputWithContext(ctx context.Context) ReleasesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasesItemOutput)
}

// ReleasesItemArrayInput is an input type that accepts ReleasesItemArray and ReleasesItemArrayOutput values.
// You can construct a concrete instance of `ReleasesItemArrayInput` via:
//
//	ReleasesItemArray{ ReleasesItemArgs{...} }
type ReleasesItemArrayInput interface {
	pulumi.Input

	ToReleasesItemArrayOutput() ReleasesItemArrayOutput
	ToReleasesItemArrayOutputWithContext(context.Context) ReleasesItemArrayOutput
}

type ReleasesItemArray []ReleasesItemInput

func (ReleasesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleasesItem)(nil)).Elem()
}

func (i ReleasesItemArray) ToReleasesItemArrayOutput() ReleasesItemArrayOutput {
	return i.ToReleasesItemArrayOutputWithContext(context.Background())
}

func (i ReleasesItemArray) ToReleasesItemArrayOutputWithContext(ctx context.Context) ReleasesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasesItemArrayOutput)
}

type ReleasesItemOutput struct{ *pulumi.OutputState }

func (ReleasesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleasesItem)(nil)).Elem()
}

func (o ReleasesItemOutput) ToReleasesItemOutput() ReleasesItemOutput {
	return o
}

func (o ReleasesItemOutput) ToReleasesItemOutputWithContext(ctx context.Context) ReleasesItemOutput {
	return o
}

// The create time of the published information.
func (o ReleasesItemOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ReleasesItem) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the published information.
func (o ReleasesItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ReleasesItem) string { return v.Description }).(pulumi.StringOutput)
}

// Finish time.
func (o ReleasesItemOutput) FinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v ReleasesItem) string { return v.FinishTime }).(pulumi.StringOutput)
}

// The ID of Function.
func (o ReleasesItemOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v ReleasesItem) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The ID of function release.
func (o ReleasesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ReleasesItem) string { return v.Id }).(pulumi.StringOutput)
}

// The last update time of the published information.
func (o ReleasesItemOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ReleasesItem) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The historical version numbers released.
func (o ReleasesItemOutput) SourceRevisionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ReleasesItem) int { return v.SourceRevisionNumber }).(pulumi.IntOutput)
}

// The status of function release.
func (o ReleasesItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ReleasesItem) string { return v.Status }).(pulumi.StringOutput)
}

// The target version number released.
func (o ReleasesItemOutput) TargetRevisionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ReleasesItem) int { return v.TargetRevisionNumber }).(pulumi.IntOutput)
}

type ReleasesItemArrayOutput struct{ *pulumi.OutputState }

func (ReleasesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleasesItem)(nil)).Elem()
}

func (o ReleasesItemArrayOutput) ToReleasesItemArrayOutput() ReleasesItemArrayOutput {
	return o
}

func (o ReleasesItemArrayOutput) ToReleasesItemArrayOutputWithContext(ctx context.Context) ReleasesItemArrayOutput {
	return o
}

func (o ReleasesItemArrayOutput) Index(i pulumi.IntInput) ReleasesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReleasesItem {
		return vs[0].([]ReleasesItem)[vs[1].(int)]
	}).(ReleasesItemOutput)
}

type ReleasesOrderBy struct {
	// Whether the sorting result is sorted in ascending order.
	Ascend *bool `pulumi:"ascend"`
	// Key names used for sorting.
	Key *string `pulumi:"key"`
}

// ReleasesOrderByInput is an input type that accepts ReleasesOrderByArgs and ReleasesOrderByOutput values.
// You can construct a concrete instance of `ReleasesOrderByInput` via:
//
//	ReleasesOrderByArgs{...}
type ReleasesOrderByInput interface {
	pulumi.Input

	ToReleasesOrderByOutput() ReleasesOrderByOutput
	ToReleasesOrderByOutputWithContext(context.Context) ReleasesOrderByOutput
}

type ReleasesOrderByArgs struct {
	// Whether the sorting result is sorted in ascending order.
	Ascend pulumi.BoolPtrInput `pulumi:"ascend"`
	// Key names used for sorting.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (ReleasesOrderByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleasesOrderBy)(nil)).Elem()
}

func (i ReleasesOrderByArgs) ToReleasesOrderByOutput() ReleasesOrderByOutput {
	return i.ToReleasesOrderByOutputWithContext(context.Background())
}

func (i ReleasesOrderByArgs) ToReleasesOrderByOutputWithContext(ctx context.Context) ReleasesOrderByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasesOrderByOutput)
}

// ReleasesOrderByArrayInput is an input type that accepts ReleasesOrderByArray and ReleasesOrderByArrayOutput values.
// You can construct a concrete instance of `ReleasesOrderByArrayInput` via:
//
//	ReleasesOrderByArray{ ReleasesOrderByArgs{...} }
type ReleasesOrderByArrayInput interface {
	pulumi.Input

	ToReleasesOrderByArrayOutput() ReleasesOrderByArrayOutput
	ToReleasesOrderByArrayOutputWithContext(context.Context) ReleasesOrderByArrayOutput
}

type ReleasesOrderByArray []ReleasesOrderByInput

func (ReleasesOrderByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleasesOrderBy)(nil)).Elem()
}

func (i ReleasesOrderByArray) ToReleasesOrderByArrayOutput() ReleasesOrderByArrayOutput {
	return i.ToReleasesOrderByArrayOutputWithContext(context.Background())
}

func (i ReleasesOrderByArray) ToReleasesOrderByArrayOutputWithContext(ctx context.Context) ReleasesOrderByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasesOrderByArrayOutput)
}

type ReleasesOrderByOutput struct{ *pulumi.OutputState }

func (ReleasesOrderByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleasesOrderBy)(nil)).Elem()
}

func (o ReleasesOrderByOutput) ToReleasesOrderByOutput() ReleasesOrderByOutput {
	return o
}

func (o ReleasesOrderByOutput) ToReleasesOrderByOutputWithContext(ctx context.Context) ReleasesOrderByOutput {
	return o
}

// Whether the sorting result is sorted in ascending order.
func (o ReleasesOrderByOutput) Ascend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReleasesOrderBy) *bool { return v.Ascend }).(pulumi.BoolPtrOutput)
}

// Key names used for sorting.
func (o ReleasesOrderByOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleasesOrderBy) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type ReleasesOrderByArrayOutput struct{ *pulumi.OutputState }

func (ReleasesOrderByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleasesOrderBy)(nil)).Elem()
}

func (o ReleasesOrderByArrayOutput) ToReleasesOrderByArrayOutput() ReleasesOrderByArrayOutput {
	return o
}

func (o ReleasesOrderByArrayOutput) ToReleasesOrderByArrayOutputWithContext(ctx context.Context) ReleasesOrderByArrayOutput {
	return o
}

func (o ReleasesOrderByArrayOutput) Index(i pulumi.IntInput) ReleasesOrderByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReleasesOrderBy {
		return vs[0].([]ReleasesOrderBy)[vs[1].(int)]
	}).(ReleasesOrderByOutput)
}

type TimersItem struct {
	// The ID of account.
	AccountId string `pulumi:"accountId"`
	// The creation time of the Timer trigger.
	CreationTime string `pulumi:"creationTime"`
	// The description of the Timer trigger.
	Description string `pulumi:"description"`
	// The details of trigger configuration.
	DetailedConfig string `pulumi:"detailedConfig"`
	// Whether the Timer trigger is enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of Function.
	FunctionId string `pulumi:"functionId"`
	// The ID of the Timer trigger.
	Id string `pulumi:"id"`
	// The image version of the Timer trigger.
	ImageVersion string `pulumi:"imageVersion"`
	// The last update time of the Timer trigger.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The name of the Timer trigger.
	Name string `pulumi:"name"`
	// The category of the Timer trigger.
	Type string `pulumi:"type"`
}

// TimersItemInput is an input type that accepts TimersItemArgs and TimersItemOutput values.
// You can construct a concrete instance of `TimersItemInput` via:
//
//	TimersItemArgs{...}
type TimersItemInput interface {
	pulumi.Input

	ToTimersItemOutput() TimersItemOutput
	ToTimersItemOutputWithContext(context.Context) TimersItemOutput
}

type TimersItemArgs struct {
	// The ID of account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The creation time of the Timer trigger.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the Timer trigger.
	Description pulumi.StringInput `pulumi:"description"`
	// The details of trigger configuration.
	DetailedConfig pulumi.StringInput `pulumi:"detailedConfig"`
	// Whether the Timer trigger is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of Function.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The ID of the Timer trigger.
	Id pulumi.StringInput `pulumi:"id"`
	// The image version of the Timer trigger.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	// The last update time of the Timer trigger.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The name of the Timer trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The category of the Timer trigger.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TimersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimersItem)(nil)).Elem()
}

func (i TimersItemArgs) ToTimersItemOutput() TimersItemOutput {
	return i.ToTimersItemOutputWithContext(context.Background())
}

func (i TimersItemArgs) ToTimersItemOutputWithContext(ctx context.Context) TimersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimersItemOutput)
}

// TimersItemArrayInput is an input type that accepts TimersItemArray and TimersItemArrayOutput values.
// You can construct a concrete instance of `TimersItemArrayInput` via:
//
//	TimersItemArray{ TimersItemArgs{...} }
type TimersItemArrayInput interface {
	pulumi.Input

	ToTimersItemArrayOutput() TimersItemArrayOutput
	ToTimersItemArrayOutputWithContext(context.Context) TimersItemArrayOutput
}

type TimersItemArray []TimersItemInput

func (TimersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimersItem)(nil)).Elem()
}

func (i TimersItemArray) ToTimersItemArrayOutput() TimersItemArrayOutput {
	return i.ToTimersItemArrayOutputWithContext(context.Background())
}

func (i TimersItemArray) ToTimersItemArrayOutputWithContext(ctx context.Context) TimersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimersItemArrayOutput)
}

type TimersItemOutput struct{ *pulumi.OutputState }

func (TimersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimersItem)(nil)).Elem()
}

func (o TimersItemOutput) ToTimersItemOutput() TimersItemOutput {
	return o
}

func (o TimersItemOutput) ToTimersItemOutputWithContext(ctx context.Context) TimersItemOutput {
	return o
}

// The ID of account.
func (o TimersItemOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.AccountId }).(pulumi.StringOutput)
}

// The creation time of the Timer trigger.
func (o TimersItemOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the Timer trigger.
func (o TimersItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.Description }).(pulumi.StringOutput)
}

// The details of trigger configuration.
func (o TimersItemOutput) DetailedConfig() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.DetailedConfig }).(pulumi.StringOutput)
}

// Whether the Timer trigger is enabled.
func (o TimersItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TimersItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of Function.
func (o TimersItemOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The ID of the Timer trigger.
func (o TimersItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.Id }).(pulumi.StringOutput)
}

// The image version of the Timer trigger.
func (o TimersItemOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.ImageVersion }).(pulumi.StringOutput)
}

// The last update time of the Timer trigger.
func (o TimersItemOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The name of the Timer trigger.
func (o TimersItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.Name }).(pulumi.StringOutput)
}

// The category of the Timer trigger.
func (o TimersItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TimersItem) string { return v.Type }).(pulumi.StringOutput)
}

type TimersItemArrayOutput struct{ *pulumi.OutputState }

func (TimersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimersItem)(nil)).Elem()
}

func (o TimersItemArrayOutput) ToTimersItemArrayOutput() TimersItemArrayOutput {
	return o
}

func (o TimersItemArrayOutput) ToTimersItemArrayOutputWithContext(ctx context.Context) TimersItemArrayOutput {
	return o
}

func (o TimersItemArrayOutput) Index(i pulumi.IntInput) TimersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimersItem {
		return vs[0].([]TimersItem)[vs[1].(int)]
	}).(TimersItemOutput)
}

type GetFunctionsItem struct {
	// The size of code package.
	CodeSize int `pulumi:"codeSize"`
	// Maximum code package size.
	CodeSizeLimit int `pulumi:"codeSizeLimit"`
	// The custom startup command for the instance.
	Command string `pulumi:"command"`
	// Function CPU charging policy.
	CpuStrategy string `pulumi:"cpuStrategy"`
	// Creation time.
	CreationTime string `pulumi:"creationTime"`
	// The description of Function.
	Description string `pulumi:"description"`
	// Function environment variable.
	Envs []GetFunctionsItemEnv `pulumi:"envs"`
	// Exclusive mode switch.
	ExclusiveMode bool `pulumi:"exclusiveMode"`
	// The ID of Function.
	Id string `pulumi:"id"`
	// Function to initialize timeout configuration.
	InitializerSec int `pulumi:"initializerSec"`
	// The instance type of the function instance.
	InstanceType string `pulumi:"instanceType"`
	// Update time.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// Maximum concurrency of a single instance.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Maximum memory for a single instance.
	MemoryMb int `pulumi:"memoryMb"`
	// The name of Function.
	Name string `pulumi:"name"`
	// The configuration of file storage NAS mount.
	NasStorages []GetFunctionsItemNasStorage `pulumi:"nasStorages"`
	// The owner of Function.
	Owner string `pulumi:"owner"`
	// Custom listening port for the instance.
	Port int `pulumi:"port"`
	// Request timeout (in seconds).
	RequestTimeout int `pulumi:"requestTimeout"`
	// The runtime of Function.
	Runtime string `pulumi:"runtime"`
	// The source address of the code/image.
	SourceLocation string `pulumi:"sourceLocation"`
	// Code Source type, supports tos, zip, image (whitelist accounts support native/v1 custom images).
	SourceType string `pulumi:"sourceType"`
	// Tags.
	Tags []GetFunctionsItemTag `pulumi:"tags"`
	// Function log configuration.
	TlsConfigs []GetFunctionsItemTlsConfig `pulumi:"tlsConfigs"`
	// The configuration of Object Storage TOS mount.
	TosMountConfigs []GetFunctionsItemTosMountConfig `pulumi:"tosMountConfigs"`
	// The number of triggers for this Function.
	TriggersCount int `pulumi:"triggersCount"`
	// The configuration of VPC.
	VpcConfigs []GetFunctionsItemVpcConfig `pulumi:"vpcConfigs"`
}

// GetFunctionsItemInput is an input type that accepts GetFunctionsItemArgs and GetFunctionsItemOutput values.
// You can construct a concrete instance of `GetFunctionsItemInput` via:
//
//	GetFunctionsItemArgs{...}
type GetFunctionsItemInput interface {
	pulumi.Input

	ToGetFunctionsItemOutput() GetFunctionsItemOutput
	ToGetFunctionsItemOutputWithContext(context.Context) GetFunctionsItemOutput
}

type GetFunctionsItemArgs struct {
	// The size of code package.
	CodeSize pulumi.IntInput `pulumi:"codeSize"`
	// Maximum code package size.
	CodeSizeLimit pulumi.IntInput `pulumi:"codeSizeLimit"`
	// The custom startup command for the instance.
	Command pulumi.StringInput `pulumi:"command"`
	// Function CPU charging policy.
	CpuStrategy pulumi.StringInput `pulumi:"cpuStrategy"`
	// Creation time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of Function.
	Description pulumi.StringInput `pulumi:"description"`
	// Function environment variable.
	Envs GetFunctionsItemEnvArrayInput `pulumi:"envs"`
	// Exclusive mode switch.
	ExclusiveMode pulumi.BoolInput `pulumi:"exclusiveMode"`
	// The ID of Function.
	Id pulumi.StringInput `pulumi:"id"`
	// Function to initialize timeout configuration.
	InitializerSec pulumi.IntInput `pulumi:"initializerSec"`
	// The instance type of the function instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Update time.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// Maximum concurrency of a single instance.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Maximum memory for a single instance.
	MemoryMb pulumi.IntInput `pulumi:"memoryMb"`
	// The name of Function.
	Name pulumi.StringInput `pulumi:"name"`
	// The configuration of file storage NAS mount.
	NasStorages GetFunctionsItemNasStorageArrayInput `pulumi:"nasStorages"`
	// The owner of Function.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Custom listening port for the instance.
	Port pulumi.IntInput `pulumi:"port"`
	// Request timeout (in seconds).
	RequestTimeout pulumi.IntInput `pulumi:"requestTimeout"`
	// The runtime of Function.
	Runtime pulumi.StringInput `pulumi:"runtime"`
	// The source address of the code/image.
	SourceLocation pulumi.StringInput `pulumi:"sourceLocation"`
	// Code Source type, supports tos, zip, image (whitelist accounts support native/v1 custom images).
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// Tags.
	Tags GetFunctionsItemTagArrayInput `pulumi:"tags"`
	// Function log configuration.
	TlsConfigs GetFunctionsItemTlsConfigArrayInput `pulumi:"tlsConfigs"`
	// The configuration of Object Storage TOS mount.
	TosMountConfigs GetFunctionsItemTosMountConfigArrayInput `pulumi:"tosMountConfigs"`
	// The number of triggers for this Function.
	TriggersCount pulumi.IntInput `pulumi:"triggersCount"`
	// The configuration of VPC.
	VpcConfigs GetFunctionsItemVpcConfigArrayInput `pulumi:"vpcConfigs"`
}

func (GetFunctionsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItem)(nil)).Elem()
}

func (i GetFunctionsItemArgs) ToGetFunctionsItemOutput() GetFunctionsItemOutput {
	return i.ToGetFunctionsItemOutputWithContext(context.Background())
}

func (i GetFunctionsItemArgs) ToGetFunctionsItemOutputWithContext(ctx context.Context) GetFunctionsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemOutput)
}

// GetFunctionsItemArrayInput is an input type that accepts GetFunctionsItemArray and GetFunctionsItemArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemArrayInput` via:
//
//	GetFunctionsItemArray{ GetFunctionsItemArgs{...} }
type GetFunctionsItemArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemArrayOutput() GetFunctionsItemArrayOutput
	ToGetFunctionsItemArrayOutputWithContext(context.Context) GetFunctionsItemArrayOutput
}

type GetFunctionsItemArray []GetFunctionsItemInput

func (GetFunctionsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItem)(nil)).Elem()
}

func (i GetFunctionsItemArray) ToGetFunctionsItemArrayOutput() GetFunctionsItemArrayOutput {
	return i.ToGetFunctionsItemArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemArray) ToGetFunctionsItemArrayOutputWithContext(ctx context.Context) GetFunctionsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemArrayOutput)
}

type GetFunctionsItemOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItem)(nil)).Elem()
}

func (o GetFunctionsItemOutput) ToGetFunctionsItemOutput() GetFunctionsItemOutput {
	return o
}

func (o GetFunctionsItemOutput) ToGetFunctionsItemOutputWithContext(ctx context.Context) GetFunctionsItemOutput {
	return o
}

// The size of code package.
func (o GetFunctionsItemOutput) CodeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItem) int { return v.CodeSize }).(pulumi.IntOutput)
}

// Maximum code package size.
func (o GetFunctionsItemOutput) CodeSizeLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItem) int { return v.CodeSizeLimit }).(pulumi.IntOutput)
}

// The custom startup command for the instance.
func (o GetFunctionsItemOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.Command }).(pulumi.StringOutput)
}

// Function CPU charging policy.
func (o GetFunctionsItemOutput) CpuStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.CpuStrategy }).(pulumi.StringOutput)
}

// Creation time.
func (o GetFunctionsItemOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of Function.
func (o GetFunctionsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.Description }).(pulumi.StringOutput)
}

// Function environment variable.
func (o GetFunctionsItemOutput) Envs() GetFunctionsItemEnvArrayOutput {
	return o.ApplyT(func(v GetFunctionsItem) []GetFunctionsItemEnv { return v.Envs }).(GetFunctionsItemEnvArrayOutput)
}

// Exclusive mode switch.
func (o GetFunctionsItemOutput) ExclusiveMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionsItem) bool { return v.ExclusiveMode }).(pulumi.BoolOutput)
}

// The ID of Function.
func (o GetFunctionsItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.Id }).(pulumi.StringOutput)
}

// Function to initialize timeout configuration.
func (o GetFunctionsItemOutput) InitializerSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItem) int { return v.InitializerSec }).(pulumi.IntOutput)
}

// The instance type of the function instance.
func (o GetFunctionsItemOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Update time.
func (o GetFunctionsItemOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// Maximum concurrency of a single instance.
func (o GetFunctionsItemOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItem) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Maximum memory for a single instance.
func (o GetFunctionsItemOutput) MemoryMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItem) int { return v.MemoryMb }).(pulumi.IntOutput)
}

// The name of Function.
func (o GetFunctionsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The configuration of file storage NAS mount.
func (o GetFunctionsItemOutput) NasStorages() GetFunctionsItemNasStorageArrayOutput {
	return o.ApplyT(func(v GetFunctionsItem) []GetFunctionsItemNasStorage { return v.NasStorages }).(GetFunctionsItemNasStorageArrayOutput)
}

// The owner of Function.
func (o GetFunctionsItemOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.Owner }).(pulumi.StringOutput)
}

// Custom listening port for the instance.
func (o GetFunctionsItemOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItem) int { return v.Port }).(pulumi.IntOutput)
}

// Request timeout (in seconds).
func (o GetFunctionsItemOutput) RequestTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItem) int { return v.RequestTimeout }).(pulumi.IntOutput)
}

// The runtime of Function.
func (o GetFunctionsItemOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.Runtime }).(pulumi.StringOutput)
}

// The source address of the code/image.
func (o GetFunctionsItemOutput) SourceLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.SourceLocation }).(pulumi.StringOutput)
}

// Code Source type, supports tos, zip, image (whitelist accounts support native/v1 custom images).
func (o GetFunctionsItemOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItem) string { return v.SourceType }).(pulumi.StringOutput)
}

// Tags.
func (o GetFunctionsItemOutput) Tags() GetFunctionsItemTagArrayOutput {
	return o.ApplyT(func(v GetFunctionsItem) []GetFunctionsItemTag { return v.Tags }).(GetFunctionsItemTagArrayOutput)
}

// Function log configuration.
func (o GetFunctionsItemOutput) TlsConfigs() GetFunctionsItemTlsConfigArrayOutput {
	return o.ApplyT(func(v GetFunctionsItem) []GetFunctionsItemTlsConfig { return v.TlsConfigs }).(GetFunctionsItemTlsConfigArrayOutput)
}

// The configuration of Object Storage TOS mount.
func (o GetFunctionsItemOutput) TosMountConfigs() GetFunctionsItemTosMountConfigArrayOutput {
	return o.ApplyT(func(v GetFunctionsItem) []GetFunctionsItemTosMountConfig { return v.TosMountConfigs }).(GetFunctionsItemTosMountConfigArrayOutput)
}

// The number of triggers for this Function.
func (o GetFunctionsItemOutput) TriggersCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItem) int { return v.TriggersCount }).(pulumi.IntOutput)
}

// The configuration of VPC.
func (o GetFunctionsItemOutput) VpcConfigs() GetFunctionsItemVpcConfigArrayOutput {
	return o.ApplyT(func(v GetFunctionsItem) []GetFunctionsItemVpcConfig { return v.VpcConfigs }).(GetFunctionsItemVpcConfigArrayOutput)
}

type GetFunctionsItemArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItem)(nil)).Elem()
}

func (o GetFunctionsItemArrayOutput) ToGetFunctionsItemArrayOutput() GetFunctionsItemArrayOutput {
	return o
}

func (o GetFunctionsItemArrayOutput) ToGetFunctionsItemArrayOutputWithContext(ctx context.Context) GetFunctionsItemArrayOutput {
	return o
}

func (o GetFunctionsItemArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItem {
		return vs[0].([]GetFunctionsItem)[vs[1].(int)]
	}).(GetFunctionsItemOutput)
}

type GetFunctionsItemEnv struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetFunctionsItemEnvInput is an input type that accepts GetFunctionsItemEnvArgs and GetFunctionsItemEnvOutput values.
// You can construct a concrete instance of `GetFunctionsItemEnvInput` via:
//
//	GetFunctionsItemEnvArgs{...}
type GetFunctionsItemEnvInput interface {
	pulumi.Input

	ToGetFunctionsItemEnvOutput() GetFunctionsItemEnvOutput
	ToGetFunctionsItemEnvOutputWithContext(context.Context) GetFunctionsItemEnvOutput
}

type GetFunctionsItemEnvArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFunctionsItemEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemEnv)(nil)).Elem()
}

func (i GetFunctionsItemEnvArgs) ToGetFunctionsItemEnvOutput() GetFunctionsItemEnvOutput {
	return i.ToGetFunctionsItemEnvOutputWithContext(context.Background())
}

func (i GetFunctionsItemEnvArgs) ToGetFunctionsItemEnvOutputWithContext(ctx context.Context) GetFunctionsItemEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemEnvOutput)
}

// GetFunctionsItemEnvArrayInput is an input type that accepts GetFunctionsItemEnvArray and GetFunctionsItemEnvArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemEnvArrayInput` via:
//
//	GetFunctionsItemEnvArray{ GetFunctionsItemEnvArgs{...} }
type GetFunctionsItemEnvArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemEnvArrayOutput() GetFunctionsItemEnvArrayOutput
	ToGetFunctionsItemEnvArrayOutputWithContext(context.Context) GetFunctionsItemEnvArrayOutput
}

type GetFunctionsItemEnvArray []GetFunctionsItemEnvInput

func (GetFunctionsItemEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemEnv)(nil)).Elem()
}

func (i GetFunctionsItemEnvArray) ToGetFunctionsItemEnvArrayOutput() GetFunctionsItemEnvArrayOutput {
	return i.ToGetFunctionsItemEnvArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemEnvArray) ToGetFunctionsItemEnvArrayOutputWithContext(ctx context.Context) GetFunctionsItemEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemEnvArrayOutput)
}

type GetFunctionsItemEnvOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemEnv)(nil)).Elem()
}

func (o GetFunctionsItemEnvOutput) ToGetFunctionsItemEnvOutput() GetFunctionsItemEnvOutput {
	return o
}

func (o GetFunctionsItemEnvOutput) ToGetFunctionsItemEnvOutputWithContext(ctx context.Context) GetFunctionsItemEnvOutput {
	return o
}

// The Key of Tags.
func (o GetFunctionsItemEnvOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemEnv) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetFunctionsItemEnvOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemEnv) string { return v.Value }).(pulumi.StringOutput)
}

type GetFunctionsItemEnvArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemEnv)(nil)).Elem()
}

func (o GetFunctionsItemEnvArrayOutput) ToGetFunctionsItemEnvArrayOutput() GetFunctionsItemEnvArrayOutput {
	return o
}

func (o GetFunctionsItemEnvArrayOutput) ToGetFunctionsItemEnvArrayOutputWithContext(ctx context.Context) GetFunctionsItemEnvArrayOutput {
	return o
}

func (o GetFunctionsItemEnvArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemEnv {
		return vs[0].([]GetFunctionsItemEnv)[vs[1].(int)]
	}).(GetFunctionsItemEnvOutput)
}

type GetFunctionsItemNasStorage struct {
	// Whether to enable NAS storage mounting.
	EnableNas bool `pulumi:"enableNas"`
	// The configuration of NAS.
	NasConfigs []GetFunctionsItemNasStorageNasConfig `pulumi:"nasConfigs"`
}

// GetFunctionsItemNasStorageInput is an input type that accepts GetFunctionsItemNasStorageArgs and GetFunctionsItemNasStorageOutput values.
// You can construct a concrete instance of `GetFunctionsItemNasStorageInput` via:
//
//	GetFunctionsItemNasStorageArgs{...}
type GetFunctionsItemNasStorageInput interface {
	pulumi.Input

	ToGetFunctionsItemNasStorageOutput() GetFunctionsItemNasStorageOutput
	ToGetFunctionsItemNasStorageOutputWithContext(context.Context) GetFunctionsItemNasStorageOutput
}

type GetFunctionsItemNasStorageArgs struct {
	// Whether to enable NAS storage mounting.
	EnableNas pulumi.BoolInput `pulumi:"enableNas"`
	// The configuration of NAS.
	NasConfigs GetFunctionsItemNasStorageNasConfigArrayInput `pulumi:"nasConfigs"`
}

func (GetFunctionsItemNasStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemNasStorage)(nil)).Elem()
}

func (i GetFunctionsItemNasStorageArgs) ToGetFunctionsItemNasStorageOutput() GetFunctionsItemNasStorageOutput {
	return i.ToGetFunctionsItemNasStorageOutputWithContext(context.Background())
}

func (i GetFunctionsItemNasStorageArgs) ToGetFunctionsItemNasStorageOutputWithContext(ctx context.Context) GetFunctionsItemNasStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemNasStorageOutput)
}

// GetFunctionsItemNasStorageArrayInput is an input type that accepts GetFunctionsItemNasStorageArray and GetFunctionsItemNasStorageArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemNasStorageArrayInput` via:
//
//	GetFunctionsItemNasStorageArray{ GetFunctionsItemNasStorageArgs{...} }
type GetFunctionsItemNasStorageArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemNasStorageArrayOutput() GetFunctionsItemNasStorageArrayOutput
	ToGetFunctionsItemNasStorageArrayOutputWithContext(context.Context) GetFunctionsItemNasStorageArrayOutput
}

type GetFunctionsItemNasStorageArray []GetFunctionsItemNasStorageInput

func (GetFunctionsItemNasStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemNasStorage)(nil)).Elem()
}

func (i GetFunctionsItemNasStorageArray) ToGetFunctionsItemNasStorageArrayOutput() GetFunctionsItemNasStorageArrayOutput {
	return i.ToGetFunctionsItemNasStorageArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemNasStorageArray) ToGetFunctionsItemNasStorageArrayOutputWithContext(ctx context.Context) GetFunctionsItemNasStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemNasStorageArrayOutput)
}

type GetFunctionsItemNasStorageOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemNasStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemNasStorage)(nil)).Elem()
}

func (o GetFunctionsItemNasStorageOutput) ToGetFunctionsItemNasStorageOutput() GetFunctionsItemNasStorageOutput {
	return o
}

func (o GetFunctionsItemNasStorageOutput) ToGetFunctionsItemNasStorageOutputWithContext(ctx context.Context) GetFunctionsItemNasStorageOutput {
	return o
}

// Whether to enable NAS storage mounting.
func (o GetFunctionsItemNasStorageOutput) EnableNas() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionsItemNasStorage) bool { return v.EnableNas }).(pulumi.BoolOutput)
}

// The configuration of NAS.
func (o GetFunctionsItemNasStorageOutput) NasConfigs() GetFunctionsItemNasStorageNasConfigArrayOutput {
	return o.ApplyT(func(v GetFunctionsItemNasStorage) []GetFunctionsItemNasStorageNasConfig { return v.NasConfigs }).(GetFunctionsItemNasStorageNasConfigArrayOutput)
}

type GetFunctionsItemNasStorageArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemNasStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemNasStorage)(nil)).Elem()
}

func (o GetFunctionsItemNasStorageArrayOutput) ToGetFunctionsItemNasStorageArrayOutput() GetFunctionsItemNasStorageArrayOutput {
	return o
}

func (o GetFunctionsItemNasStorageArrayOutput) ToGetFunctionsItemNasStorageArrayOutputWithContext(ctx context.Context) GetFunctionsItemNasStorageArrayOutput {
	return o
}

func (o GetFunctionsItemNasStorageArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemNasStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemNasStorage {
		return vs[0].([]GetFunctionsItemNasStorage)[vs[1].(int)]
	}).(GetFunctionsItemNasStorageOutput)
}

type GetFunctionsItemNasStorageNasConfig struct {
	// The ID of NAS file system.
	FileSystemId string `pulumi:"fileSystemId"`
	// User groups in the file system. Customization is not supported yet. If this parameter is provided, the parameter value is 1000 (consistent with the function run user gid).
	Gid int `pulumi:"gid"`
	// Function local mount directory.
	LocalMountPath string `pulumi:"localMountPath"`
	// The ID of NAS mount point.
	MountPointId string `pulumi:"mountPointId"`
	// Remote directory of the file system.
	RemotePath string `pulumi:"remotePath"`
	// Users in the file system do not support customization yet. If this parameter is provided, its value can only be 1000 (consistent with the function run user uid).
	Uid int `pulumi:"uid"`
}

// GetFunctionsItemNasStorageNasConfigInput is an input type that accepts GetFunctionsItemNasStorageNasConfigArgs and GetFunctionsItemNasStorageNasConfigOutput values.
// You can construct a concrete instance of `GetFunctionsItemNasStorageNasConfigInput` via:
//
//	GetFunctionsItemNasStorageNasConfigArgs{...}
type GetFunctionsItemNasStorageNasConfigInput interface {
	pulumi.Input

	ToGetFunctionsItemNasStorageNasConfigOutput() GetFunctionsItemNasStorageNasConfigOutput
	ToGetFunctionsItemNasStorageNasConfigOutputWithContext(context.Context) GetFunctionsItemNasStorageNasConfigOutput
}

type GetFunctionsItemNasStorageNasConfigArgs struct {
	// The ID of NAS file system.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// User groups in the file system. Customization is not supported yet. If this parameter is provided, the parameter value is 1000 (consistent with the function run user gid).
	Gid pulumi.IntInput `pulumi:"gid"`
	// Function local mount directory.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// The ID of NAS mount point.
	MountPointId pulumi.StringInput `pulumi:"mountPointId"`
	// Remote directory of the file system.
	RemotePath pulumi.StringInput `pulumi:"remotePath"`
	// Users in the file system do not support customization yet. If this parameter is provided, its value can only be 1000 (consistent with the function run user uid).
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (GetFunctionsItemNasStorageNasConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemNasStorageNasConfig)(nil)).Elem()
}

func (i GetFunctionsItemNasStorageNasConfigArgs) ToGetFunctionsItemNasStorageNasConfigOutput() GetFunctionsItemNasStorageNasConfigOutput {
	return i.ToGetFunctionsItemNasStorageNasConfigOutputWithContext(context.Background())
}

func (i GetFunctionsItemNasStorageNasConfigArgs) ToGetFunctionsItemNasStorageNasConfigOutputWithContext(ctx context.Context) GetFunctionsItemNasStorageNasConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemNasStorageNasConfigOutput)
}

// GetFunctionsItemNasStorageNasConfigArrayInput is an input type that accepts GetFunctionsItemNasStorageNasConfigArray and GetFunctionsItemNasStorageNasConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemNasStorageNasConfigArrayInput` via:
//
//	GetFunctionsItemNasStorageNasConfigArray{ GetFunctionsItemNasStorageNasConfigArgs{...} }
type GetFunctionsItemNasStorageNasConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemNasStorageNasConfigArrayOutput() GetFunctionsItemNasStorageNasConfigArrayOutput
	ToGetFunctionsItemNasStorageNasConfigArrayOutputWithContext(context.Context) GetFunctionsItemNasStorageNasConfigArrayOutput
}

type GetFunctionsItemNasStorageNasConfigArray []GetFunctionsItemNasStorageNasConfigInput

func (GetFunctionsItemNasStorageNasConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemNasStorageNasConfig)(nil)).Elem()
}

func (i GetFunctionsItemNasStorageNasConfigArray) ToGetFunctionsItemNasStorageNasConfigArrayOutput() GetFunctionsItemNasStorageNasConfigArrayOutput {
	return i.ToGetFunctionsItemNasStorageNasConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemNasStorageNasConfigArray) ToGetFunctionsItemNasStorageNasConfigArrayOutputWithContext(ctx context.Context) GetFunctionsItemNasStorageNasConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemNasStorageNasConfigArrayOutput)
}

type GetFunctionsItemNasStorageNasConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemNasStorageNasConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemNasStorageNasConfig)(nil)).Elem()
}

func (o GetFunctionsItemNasStorageNasConfigOutput) ToGetFunctionsItemNasStorageNasConfigOutput() GetFunctionsItemNasStorageNasConfigOutput {
	return o
}

func (o GetFunctionsItemNasStorageNasConfigOutput) ToGetFunctionsItemNasStorageNasConfigOutputWithContext(ctx context.Context) GetFunctionsItemNasStorageNasConfigOutput {
	return o
}

// The ID of NAS file system.
func (o GetFunctionsItemNasStorageNasConfigOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemNasStorageNasConfig) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// User groups in the file system. Customization is not supported yet. If this parameter is provided, the parameter value is 1000 (consistent with the function run user gid).
func (o GetFunctionsItemNasStorageNasConfigOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItemNasStorageNasConfig) int { return v.Gid }).(pulumi.IntOutput)
}

// Function local mount directory.
func (o GetFunctionsItemNasStorageNasConfigOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemNasStorageNasConfig) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// The ID of NAS mount point.
func (o GetFunctionsItemNasStorageNasConfigOutput) MountPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemNasStorageNasConfig) string { return v.MountPointId }).(pulumi.StringOutput)
}

// Remote directory of the file system.
func (o GetFunctionsItemNasStorageNasConfigOutput) RemotePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemNasStorageNasConfig) string { return v.RemotePath }).(pulumi.StringOutput)
}

// Users in the file system do not support customization yet. If this parameter is provided, its value can only be 1000 (consistent with the function run user uid).
func (o GetFunctionsItemNasStorageNasConfigOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v GetFunctionsItemNasStorageNasConfig) int { return v.Uid }).(pulumi.IntOutput)
}

type GetFunctionsItemNasStorageNasConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemNasStorageNasConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemNasStorageNasConfig)(nil)).Elem()
}

func (o GetFunctionsItemNasStorageNasConfigArrayOutput) ToGetFunctionsItemNasStorageNasConfigArrayOutput() GetFunctionsItemNasStorageNasConfigArrayOutput {
	return o
}

func (o GetFunctionsItemNasStorageNasConfigArrayOutput) ToGetFunctionsItemNasStorageNasConfigArrayOutputWithContext(ctx context.Context) GetFunctionsItemNasStorageNasConfigArrayOutput {
	return o
}

func (o GetFunctionsItemNasStorageNasConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemNasStorageNasConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemNasStorageNasConfig {
		return vs[0].([]GetFunctionsItemNasStorageNasConfig)[vs[1].(int)]
	}).(GetFunctionsItemNasStorageNasConfigOutput)
}

type GetFunctionsItemTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetFunctionsItemTagInput is an input type that accepts GetFunctionsItemTagArgs and GetFunctionsItemTagOutput values.
// You can construct a concrete instance of `GetFunctionsItemTagInput` via:
//
//	GetFunctionsItemTagArgs{...}
type GetFunctionsItemTagInput interface {
	pulumi.Input

	ToGetFunctionsItemTagOutput() GetFunctionsItemTagOutput
	ToGetFunctionsItemTagOutputWithContext(context.Context) GetFunctionsItemTagOutput
}

type GetFunctionsItemTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFunctionsItemTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTag)(nil)).Elem()
}

func (i GetFunctionsItemTagArgs) ToGetFunctionsItemTagOutput() GetFunctionsItemTagOutput {
	return i.ToGetFunctionsItemTagOutputWithContext(context.Background())
}

func (i GetFunctionsItemTagArgs) ToGetFunctionsItemTagOutputWithContext(ctx context.Context) GetFunctionsItemTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTagOutput)
}

// GetFunctionsItemTagArrayInput is an input type that accepts GetFunctionsItemTagArray and GetFunctionsItemTagArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemTagArrayInput` via:
//
//	GetFunctionsItemTagArray{ GetFunctionsItemTagArgs{...} }
type GetFunctionsItemTagArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemTagArrayOutput() GetFunctionsItemTagArrayOutput
	ToGetFunctionsItemTagArrayOutputWithContext(context.Context) GetFunctionsItemTagArrayOutput
}

type GetFunctionsItemTagArray []GetFunctionsItemTagInput

func (GetFunctionsItemTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTag)(nil)).Elem()
}

func (i GetFunctionsItemTagArray) ToGetFunctionsItemTagArrayOutput() GetFunctionsItemTagArrayOutput {
	return i.ToGetFunctionsItemTagArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemTagArray) ToGetFunctionsItemTagArrayOutputWithContext(ctx context.Context) GetFunctionsItemTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTagArrayOutput)
}

type GetFunctionsItemTagOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTag)(nil)).Elem()
}

func (o GetFunctionsItemTagOutput) ToGetFunctionsItemTagOutput() GetFunctionsItemTagOutput {
	return o
}

func (o GetFunctionsItemTagOutput) ToGetFunctionsItemTagOutputWithContext(ctx context.Context) GetFunctionsItemTagOutput {
	return o
}

// The Key of Tags.
func (o GetFunctionsItemTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetFunctionsItemTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetFunctionsItemTagArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTag)(nil)).Elem()
}

func (o GetFunctionsItemTagArrayOutput) ToGetFunctionsItemTagArrayOutput() GetFunctionsItemTagArrayOutput {
	return o
}

func (o GetFunctionsItemTagArrayOutput) ToGetFunctionsItemTagArrayOutputWithContext(ctx context.Context) GetFunctionsItemTagArrayOutput {
	return o
}

func (o GetFunctionsItemTagArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemTag {
		return vs[0].([]GetFunctionsItemTag)[vs[1].(int)]
	}).(GetFunctionsItemTagOutput)
}

type GetFunctionsItemTlsConfig struct {
	// TLS log function switch.
	EnableLog bool `pulumi:"enableLog"`
	// The project ID of TLS log topic.
	TlsProjectId string `pulumi:"tlsProjectId"`
	// The topic ID of TLS log topic.
	TlsTopicId string `pulumi:"tlsTopicId"`
}

// GetFunctionsItemTlsConfigInput is an input type that accepts GetFunctionsItemTlsConfigArgs and GetFunctionsItemTlsConfigOutput values.
// You can construct a concrete instance of `GetFunctionsItemTlsConfigInput` via:
//
//	GetFunctionsItemTlsConfigArgs{...}
type GetFunctionsItemTlsConfigInput interface {
	pulumi.Input

	ToGetFunctionsItemTlsConfigOutput() GetFunctionsItemTlsConfigOutput
	ToGetFunctionsItemTlsConfigOutputWithContext(context.Context) GetFunctionsItemTlsConfigOutput
}

type GetFunctionsItemTlsConfigArgs struct {
	// TLS log function switch.
	EnableLog pulumi.BoolInput `pulumi:"enableLog"`
	// The project ID of TLS log topic.
	TlsProjectId pulumi.StringInput `pulumi:"tlsProjectId"`
	// The topic ID of TLS log topic.
	TlsTopicId pulumi.StringInput `pulumi:"tlsTopicId"`
}

func (GetFunctionsItemTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTlsConfig)(nil)).Elem()
}

func (i GetFunctionsItemTlsConfigArgs) ToGetFunctionsItemTlsConfigOutput() GetFunctionsItemTlsConfigOutput {
	return i.ToGetFunctionsItemTlsConfigOutputWithContext(context.Background())
}

func (i GetFunctionsItemTlsConfigArgs) ToGetFunctionsItemTlsConfigOutputWithContext(ctx context.Context) GetFunctionsItemTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTlsConfigOutput)
}

// GetFunctionsItemTlsConfigArrayInput is an input type that accepts GetFunctionsItemTlsConfigArray and GetFunctionsItemTlsConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemTlsConfigArrayInput` via:
//
//	GetFunctionsItemTlsConfigArray{ GetFunctionsItemTlsConfigArgs{...} }
type GetFunctionsItemTlsConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemTlsConfigArrayOutput() GetFunctionsItemTlsConfigArrayOutput
	ToGetFunctionsItemTlsConfigArrayOutputWithContext(context.Context) GetFunctionsItemTlsConfigArrayOutput
}

type GetFunctionsItemTlsConfigArray []GetFunctionsItemTlsConfigInput

func (GetFunctionsItemTlsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTlsConfig)(nil)).Elem()
}

func (i GetFunctionsItemTlsConfigArray) ToGetFunctionsItemTlsConfigArrayOutput() GetFunctionsItemTlsConfigArrayOutput {
	return i.ToGetFunctionsItemTlsConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemTlsConfigArray) ToGetFunctionsItemTlsConfigArrayOutputWithContext(ctx context.Context) GetFunctionsItemTlsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTlsConfigArrayOutput)
}

type GetFunctionsItemTlsConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTlsConfig)(nil)).Elem()
}

func (o GetFunctionsItemTlsConfigOutput) ToGetFunctionsItemTlsConfigOutput() GetFunctionsItemTlsConfigOutput {
	return o
}

func (o GetFunctionsItemTlsConfigOutput) ToGetFunctionsItemTlsConfigOutputWithContext(ctx context.Context) GetFunctionsItemTlsConfigOutput {
	return o
}

// TLS log function switch.
func (o GetFunctionsItemTlsConfigOutput) EnableLog() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionsItemTlsConfig) bool { return v.EnableLog }).(pulumi.BoolOutput)
}

// The project ID of TLS log topic.
func (o GetFunctionsItemTlsConfigOutput) TlsProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTlsConfig) string { return v.TlsProjectId }).(pulumi.StringOutput)
}

// The topic ID of TLS log topic.
func (o GetFunctionsItemTlsConfigOutput) TlsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTlsConfig) string { return v.TlsTopicId }).(pulumi.StringOutput)
}

type GetFunctionsItemTlsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTlsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTlsConfig)(nil)).Elem()
}

func (o GetFunctionsItemTlsConfigArrayOutput) ToGetFunctionsItemTlsConfigArrayOutput() GetFunctionsItemTlsConfigArrayOutput {
	return o
}

func (o GetFunctionsItemTlsConfigArrayOutput) ToGetFunctionsItemTlsConfigArrayOutputWithContext(ctx context.Context) GetFunctionsItemTlsConfigArrayOutput {
	return o
}

func (o GetFunctionsItemTlsConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemTlsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemTlsConfig {
		return vs[0].([]GetFunctionsItemTlsConfig)[vs[1].(int)]
	}).(GetFunctionsItemTlsConfigOutput)
}

type GetFunctionsItemTosMountConfig struct {
	// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name.
	Credentials []GetFunctionsItemTosMountConfigCredential `pulumi:"credentials"`
	// Whether to enable TOS storage mounting.
	EnableTos bool `pulumi:"enableTos"`
	// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
	MountPoints []GetFunctionsItemTosMountConfigMountPoint `pulumi:"mountPoints"`
}

// GetFunctionsItemTosMountConfigInput is an input type that accepts GetFunctionsItemTosMountConfigArgs and GetFunctionsItemTosMountConfigOutput values.
// You can construct a concrete instance of `GetFunctionsItemTosMountConfigInput` via:
//
//	GetFunctionsItemTosMountConfigArgs{...}
type GetFunctionsItemTosMountConfigInput interface {
	pulumi.Input

	ToGetFunctionsItemTosMountConfigOutput() GetFunctionsItemTosMountConfigOutput
	ToGetFunctionsItemTosMountConfigOutputWithContext(context.Context) GetFunctionsItemTosMountConfigOutput
}

type GetFunctionsItemTosMountConfigArgs struct {
	// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name.
	Credentials GetFunctionsItemTosMountConfigCredentialArrayInput `pulumi:"credentials"`
	// Whether to enable TOS storage mounting.
	EnableTos pulumi.BoolInput `pulumi:"enableTos"`
	// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
	MountPoints GetFunctionsItemTosMountConfigMountPointArrayInput `pulumi:"mountPoints"`
}

func (GetFunctionsItemTosMountConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTosMountConfig)(nil)).Elem()
}

func (i GetFunctionsItemTosMountConfigArgs) ToGetFunctionsItemTosMountConfigOutput() GetFunctionsItemTosMountConfigOutput {
	return i.ToGetFunctionsItemTosMountConfigOutputWithContext(context.Background())
}

func (i GetFunctionsItemTosMountConfigArgs) ToGetFunctionsItemTosMountConfigOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTosMountConfigOutput)
}

// GetFunctionsItemTosMountConfigArrayInput is an input type that accepts GetFunctionsItemTosMountConfigArray and GetFunctionsItemTosMountConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemTosMountConfigArrayInput` via:
//
//	GetFunctionsItemTosMountConfigArray{ GetFunctionsItemTosMountConfigArgs{...} }
type GetFunctionsItemTosMountConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemTosMountConfigArrayOutput() GetFunctionsItemTosMountConfigArrayOutput
	ToGetFunctionsItemTosMountConfigArrayOutputWithContext(context.Context) GetFunctionsItemTosMountConfigArrayOutput
}

type GetFunctionsItemTosMountConfigArray []GetFunctionsItemTosMountConfigInput

func (GetFunctionsItemTosMountConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTosMountConfig)(nil)).Elem()
}

func (i GetFunctionsItemTosMountConfigArray) ToGetFunctionsItemTosMountConfigArrayOutput() GetFunctionsItemTosMountConfigArrayOutput {
	return i.ToGetFunctionsItemTosMountConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemTosMountConfigArray) ToGetFunctionsItemTosMountConfigArrayOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTosMountConfigArrayOutput)
}

type GetFunctionsItemTosMountConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTosMountConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTosMountConfig)(nil)).Elem()
}

func (o GetFunctionsItemTosMountConfigOutput) ToGetFunctionsItemTosMountConfigOutput() GetFunctionsItemTosMountConfigOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigOutput) ToGetFunctionsItemTosMountConfigOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigOutput {
	return o
}

// After enabling TOS, you need to provide an AKSK with access rights to the TOS domain name.
func (o GetFunctionsItemTosMountConfigOutput) Credentials() GetFunctionsItemTosMountConfigCredentialArrayOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfig) []GetFunctionsItemTosMountConfigCredential {
		return v.Credentials
	}).(GetFunctionsItemTosMountConfigCredentialArrayOutput)
}

// Whether to enable TOS storage mounting.
func (o GetFunctionsItemTosMountConfigOutput) EnableTos() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfig) bool { return v.EnableTos }).(pulumi.BoolOutput)
}

// After enabling TOS, you need to provide a TOS storage configuration list, with a maximum of 5 items.
func (o GetFunctionsItemTosMountConfigOutput) MountPoints() GetFunctionsItemTosMountConfigMountPointArrayOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfig) []GetFunctionsItemTosMountConfigMountPoint {
		return v.MountPoints
	}).(GetFunctionsItemTosMountConfigMountPointArrayOutput)
}

type GetFunctionsItemTosMountConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTosMountConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTosMountConfig)(nil)).Elem()
}

func (o GetFunctionsItemTosMountConfigArrayOutput) ToGetFunctionsItemTosMountConfigArrayOutput() GetFunctionsItemTosMountConfigArrayOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigArrayOutput) ToGetFunctionsItemTosMountConfigArrayOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigArrayOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemTosMountConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemTosMountConfig {
		return vs[0].([]GetFunctionsItemTosMountConfig)[vs[1].(int)]
	}).(GetFunctionsItemTosMountConfigOutput)
}

type GetFunctionsItemTosMountConfigCredential struct {
	// The AccessKey ID (AK) of the Volcano Engine account.
	AccessKeyId string `pulumi:"accessKeyId"`
	// The Secret Access Key (SK) of the Volcano Engine account.
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

// GetFunctionsItemTosMountConfigCredentialInput is an input type that accepts GetFunctionsItemTosMountConfigCredentialArgs and GetFunctionsItemTosMountConfigCredentialOutput values.
// You can construct a concrete instance of `GetFunctionsItemTosMountConfigCredentialInput` via:
//
//	GetFunctionsItemTosMountConfigCredentialArgs{...}
type GetFunctionsItemTosMountConfigCredentialInput interface {
	pulumi.Input

	ToGetFunctionsItemTosMountConfigCredentialOutput() GetFunctionsItemTosMountConfigCredentialOutput
	ToGetFunctionsItemTosMountConfigCredentialOutputWithContext(context.Context) GetFunctionsItemTosMountConfigCredentialOutput
}

type GetFunctionsItemTosMountConfigCredentialArgs struct {
	// The AccessKey ID (AK) of the Volcano Engine account.
	AccessKeyId pulumi.StringInput `pulumi:"accessKeyId"`
	// The Secret Access Key (SK) of the Volcano Engine account.
	SecretAccessKey pulumi.StringInput `pulumi:"secretAccessKey"`
}

func (GetFunctionsItemTosMountConfigCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTosMountConfigCredential)(nil)).Elem()
}

func (i GetFunctionsItemTosMountConfigCredentialArgs) ToGetFunctionsItemTosMountConfigCredentialOutput() GetFunctionsItemTosMountConfigCredentialOutput {
	return i.ToGetFunctionsItemTosMountConfigCredentialOutputWithContext(context.Background())
}

func (i GetFunctionsItemTosMountConfigCredentialArgs) ToGetFunctionsItemTosMountConfigCredentialOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTosMountConfigCredentialOutput)
}

// GetFunctionsItemTosMountConfigCredentialArrayInput is an input type that accepts GetFunctionsItemTosMountConfigCredentialArray and GetFunctionsItemTosMountConfigCredentialArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemTosMountConfigCredentialArrayInput` via:
//
//	GetFunctionsItemTosMountConfigCredentialArray{ GetFunctionsItemTosMountConfigCredentialArgs{...} }
type GetFunctionsItemTosMountConfigCredentialArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemTosMountConfigCredentialArrayOutput() GetFunctionsItemTosMountConfigCredentialArrayOutput
	ToGetFunctionsItemTosMountConfigCredentialArrayOutputWithContext(context.Context) GetFunctionsItemTosMountConfigCredentialArrayOutput
}

type GetFunctionsItemTosMountConfigCredentialArray []GetFunctionsItemTosMountConfigCredentialInput

func (GetFunctionsItemTosMountConfigCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTosMountConfigCredential)(nil)).Elem()
}

func (i GetFunctionsItemTosMountConfigCredentialArray) ToGetFunctionsItemTosMountConfigCredentialArrayOutput() GetFunctionsItemTosMountConfigCredentialArrayOutput {
	return i.ToGetFunctionsItemTosMountConfigCredentialArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemTosMountConfigCredentialArray) ToGetFunctionsItemTosMountConfigCredentialArrayOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTosMountConfigCredentialArrayOutput)
}

type GetFunctionsItemTosMountConfigCredentialOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTosMountConfigCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTosMountConfigCredential)(nil)).Elem()
}

func (o GetFunctionsItemTosMountConfigCredentialOutput) ToGetFunctionsItemTosMountConfigCredentialOutput() GetFunctionsItemTosMountConfigCredentialOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigCredentialOutput) ToGetFunctionsItemTosMountConfigCredentialOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigCredentialOutput {
	return o
}

// The AccessKey ID (AK) of the Volcano Engine account.
func (o GetFunctionsItemTosMountConfigCredentialOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfigCredential) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// The Secret Access Key (SK) of the Volcano Engine account.
func (o GetFunctionsItemTosMountConfigCredentialOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfigCredential) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type GetFunctionsItemTosMountConfigCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTosMountConfigCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTosMountConfigCredential)(nil)).Elem()
}

func (o GetFunctionsItemTosMountConfigCredentialArrayOutput) ToGetFunctionsItemTosMountConfigCredentialArrayOutput() GetFunctionsItemTosMountConfigCredentialArrayOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigCredentialArrayOutput) ToGetFunctionsItemTosMountConfigCredentialArrayOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigCredentialArrayOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigCredentialArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemTosMountConfigCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemTosMountConfigCredential {
		return vs[0].([]GetFunctionsItemTosMountConfigCredential)[vs[1].(int)]
	}).(GetFunctionsItemTosMountConfigCredentialOutput)
}

type GetFunctionsItemTosMountConfigMountPoint struct {
	// TOS bucket.
	BucketName string `pulumi:"bucketName"`
	// The mounted TOS Bucket path.
	BucketPath string `pulumi:"bucketPath"`
	// TOS Access domain name.
	Endpoint string `pulumi:"endpoint"`
	// Function local mount directory.
	LocalMountPath string `pulumi:"localMountPath"`
	// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
	ReadOnly bool `pulumi:"readOnly"`
}

// GetFunctionsItemTosMountConfigMountPointInput is an input type that accepts GetFunctionsItemTosMountConfigMountPointArgs and GetFunctionsItemTosMountConfigMountPointOutput values.
// You can construct a concrete instance of `GetFunctionsItemTosMountConfigMountPointInput` via:
//
//	GetFunctionsItemTosMountConfigMountPointArgs{...}
type GetFunctionsItemTosMountConfigMountPointInput interface {
	pulumi.Input

	ToGetFunctionsItemTosMountConfigMountPointOutput() GetFunctionsItemTosMountConfigMountPointOutput
	ToGetFunctionsItemTosMountConfigMountPointOutputWithContext(context.Context) GetFunctionsItemTosMountConfigMountPointOutput
}

type GetFunctionsItemTosMountConfigMountPointArgs struct {
	// TOS bucket.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The mounted TOS Bucket path.
	BucketPath pulumi.StringInput `pulumi:"bucketPath"`
	// TOS Access domain name.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// Function local mount directory.
	LocalMountPath pulumi.StringInput `pulumi:"localMountPath"`
	// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`
}

func (GetFunctionsItemTosMountConfigMountPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTosMountConfigMountPoint)(nil)).Elem()
}

func (i GetFunctionsItemTosMountConfigMountPointArgs) ToGetFunctionsItemTosMountConfigMountPointOutput() GetFunctionsItemTosMountConfigMountPointOutput {
	return i.ToGetFunctionsItemTosMountConfigMountPointOutputWithContext(context.Background())
}

func (i GetFunctionsItemTosMountConfigMountPointArgs) ToGetFunctionsItemTosMountConfigMountPointOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigMountPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTosMountConfigMountPointOutput)
}

// GetFunctionsItemTosMountConfigMountPointArrayInput is an input type that accepts GetFunctionsItemTosMountConfigMountPointArray and GetFunctionsItemTosMountConfigMountPointArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemTosMountConfigMountPointArrayInput` via:
//
//	GetFunctionsItemTosMountConfigMountPointArray{ GetFunctionsItemTosMountConfigMountPointArgs{...} }
type GetFunctionsItemTosMountConfigMountPointArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemTosMountConfigMountPointArrayOutput() GetFunctionsItemTosMountConfigMountPointArrayOutput
	ToGetFunctionsItemTosMountConfigMountPointArrayOutputWithContext(context.Context) GetFunctionsItemTosMountConfigMountPointArrayOutput
}

type GetFunctionsItemTosMountConfigMountPointArray []GetFunctionsItemTosMountConfigMountPointInput

func (GetFunctionsItemTosMountConfigMountPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTosMountConfigMountPoint)(nil)).Elem()
}

func (i GetFunctionsItemTosMountConfigMountPointArray) ToGetFunctionsItemTosMountConfigMountPointArrayOutput() GetFunctionsItemTosMountConfigMountPointArrayOutput {
	return i.ToGetFunctionsItemTosMountConfigMountPointArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemTosMountConfigMountPointArray) ToGetFunctionsItemTosMountConfigMountPointArrayOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigMountPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemTosMountConfigMountPointArrayOutput)
}

type GetFunctionsItemTosMountConfigMountPointOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTosMountConfigMountPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemTosMountConfigMountPoint)(nil)).Elem()
}

func (o GetFunctionsItemTosMountConfigMountPointOutput) ToGetFunctionsItemTosMountConfigMountPointOutput() GetFunctionsItemTosMountConfigMountPointOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigMountPointOutput) ToGetFunctionsItemTosMountConfigMountPointOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigMountPointOutput {
	return o
}

// TOS bucket.
func (o GetFunctionsItemTosMountConfigMountPointOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfigMountPoint) string { return v.BucketName }).(pulumi.StringOutput)
}

// The mounted TOS Bucket path.
func (o GetFunctionsItemTosMountConfigMountPointOutput) BucketPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfigMountPoint) string { return v.BucketPath }).(pulumi.StringOutput)
}

// TOS Access domain name.
func (o GetFunctionsItemTosMountConfigMountPointOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfigMountPoint) string { return v.Endpoint }).(pulumi.StringOutput)
}

// Function local mount directory.
func (o GetFunctionsItemTosMountConfigMountPointOutput) LocalMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfigMountPoint) string { return v.LocalMountPath }).(pulumi.StringOutput)
}

// Function local directory access permissions. After mounting the TOS Bucket, whether the function local mount directory has read-only permissions.
func (o GetFunctionsItemTosMountConfigMountPointOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionsItemTosMountConfigMountPoint) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

type GetFunctionsItemTosMountConfigMountPointArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemTosMountConfigMountPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemTosMountConfigMountPoint)(nil)).Elem()
}

func (o GetFunctionsItemTosMountConfigMountPointArrayOutput) ToGetFunctionsItemTosMountConfigMountPointArrayOutput() GetFunctionsItemTosMountConfigMountPointArrayOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigMountPointArrayOutput) ToGetFunctionsItemTosMountConfigMountPointArrayOutputWithContext(ctx context.Context) GetFunctionsItemTosMountConfigMountPointArrayOutput {
	return o
}

func (o GetFunctionsItemTosMountConfigMountPointArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemTosMountConfigMountPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemTosMountConfigMountPoint {
		return vs[0].([]GetFunctionsItemTosMountConfigMountPoint)[vs[1].(int)]
	}).(GetFunctionsItemTosMountConfigMountPointOutput)
}

type GetFunctionsItemVpcConfig struct {
	// Function access to the public network switch.
	EnableSharedInternetAccess bool `pulumi:"enableSharedInternetAccess"`
	// Whether the function enables private network access.
	EnableVpc bool `pulumi:"enableVpc"`
	// The ID of security group.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of subnet.
	SubnetIds []string `pulumi:"subnetIds"`
	// The ID of VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetFunctionsItemVpcConfigInput is an input type that accepts GetFunctionsItemVpcConfigArgs and GetFunctionsItemVpcConfigOutput values.
// You can construct a concrete instance of `GetFunctionsItemVpcConfigInput` via:
//
//	GetFunctionsItemVpcConfigArgs{...}
type GetFunctionsItemVpcConfigInput interface {
	pulumi.Input

	ToGetFunctionsItemVpcConfigOutput() GetFunctionsItemVpcConfigOutput
	ToGetFunctionsItemVpcConfigOutputWithContext(context.Context) GetFunctionsItemVpcConfigOutput
}

type GetFunctionsItemVpcConfigArgs struct {
	// Function access to the public network switch.
	EnableSharedInternetAccess pulumi.BoolInput `pulumi:"enableSharedInternetAccess"`
	// Whether the function enables private network access.
	EnableVpc pulumi.BoolInput `pulumi:"enableVpc"`
	// The ID of security group.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of subnet.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The ID of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetFunctionsItemVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemVpcConfig)(nil)).Elem()
}

func (i GetFunctionsItemVpcConfigArgs) ToGetFunctionsItemVpcConfigOutput() GetFunctionsItemVpcConfigOutput {
	return i.ToGetFunctionsItemVpcConfigOutputWithContext(context.Background())
}

func (i GetFunctionsItemVpcConfigArgs) ToGetFunctionsItemVpcConfigOutputWithContext(ctx context.Context) GetFunctionsItemVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemVpcConfigOutput)
}

// GetFunctionsItemVpcConfigArrayInput is an input type that accepts GetFunctionsItemVpcConfigArray and GetFunctionsItemVpcConfigArrayOutput values.
// You can construct a concrete instance of `GetFunctionsItemVpcConfigArrayInput` via:
//
//	GetFunctionsItemVpcConfigArray{ GetFunctionsItemVpcConfigArgs{...} }
type GetFunctionsItemVpcConfigArrayInput interface {
	pulumi.Input

	ToGetFunctionsItemVpcConfigArrayOutput() GetFunctionsItemVpcConfigArrayOutput
	ToGetFunctionsItemVpcConfigArrayOutputWithContext(context.Context) GetFunctionsItemVpcConfigArrayOutput
}

type GetFunctionsItemVpcConfigArray []GetFunctionsItemVpcConfigInput

func (GetFunctionsItemVpcConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemVpcConfig)(nil)).Elem()
}

func (i GetFunctionsItemVpcConfigArray) ToGetFunctionsItemVpcConfigArrayOutput() GetFunctionsItemVpcConfigArrayOutput {
	return i.ToGetFunctionsItemVpcConfigArrayOutputWithContext(context.Background())
}

func (i GetFunctionsItemVpcConfigArray) ToGetFunctionsItemVpcConfigArrayOutputWithContext(ctx context.Context) GetFunctionsItemVpcConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionsItemVpcConfigArrayOutput)
}

type GetFunctionsItemVpcConfigOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsItemVpcConfig)(nil)).Elem()
}

func (o GetFunctionsItemVpcConfigOutput) ToGetFunctionsItemVpcConfigOutput() GetFunctionsItemVpcConfigOutput {
	return o
}

func (o GetFunctionsItemVpcConfigOutput) ToGetFunctionsItemVpcConfigOutputWithContext(ctx context.Context) GetFunctionsItemVpcConfigOutput {
	return o
}

// Function access to the public network switch.
func (o GetFunctionsItemVpcConfigOutput) EnableSharedInternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionsItemVpcConfig) bool { return v.EnableSharedInternetAccess }).(pulumi.BoolOutput)
}

// Whether the function enables private network access.
func (o GetFunctionsItemVpcConfigOutput) EnableVpc() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFunctionsItemVpcConfig) bool { return v.EnableVpc }).(pulumi.BoolOutput)
}

// The ID of security group.
func (o GetFunctionsItemVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionsItemVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of subnet.
func (o GetFunctionsItemVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFunctionsItemVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The ID of VPC.
func (o GetFunctionsItemVpcConfigOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsItemVpcConfig) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetFunctionsItemVpcConfigArrayOutput struct{ *pulumi.OutputState }

func (GetFunctionsItemVpcConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFunctionsItemVpcConfig)(nil)).Elem()
}

func (o GetFunctionsItemVpcConfigArrayOutput) ToGetFunctionsItemVpcConfigArrayOutput() GetFunctionsItemVpcConfigArrayOutput {
	return o
}

func (o GetFunctionsItemVpcConfigArrayOutput) ToGetFunctionsItemVpcConfigArrayOutputWithContext(ctx context.Context) GetFunctionsItemVpcConfigArrayOutput {
	return o
}

func (o GetFunctionsItemVpcConfigArrayOutput) Index(i pulumi.IntInput) GetFunctionsItemVpcConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFunctionsItemVpcConfig {
		return vs[0].([]GetFunctionsItemVpcConfig)[vs[1].(int)]
	}).(GetFunctionsItemVpcConfigOutput)
}

type GetKafkaTriggersItem struct {
	// The ID of account.
	AccountId string `pulumi:"accountId"`
	// The creation time of the Timer trigger.
	CreationTime string `pulumi:"creationTime"`
	// The description of the Timer trigger.
	Description string `pulumi:"description"`
	// The details of trigger configuration.
	DetailedConfig string `pulumi:"detailedConfig"`
	// Whether the Timer trigger is enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of Function.
	FunctionId string `pulumi:"functionId"`
	// The ID of the Timer trigger.
	Id string `pulumi:"id"`
	// The image version of the Timer trigger.
	ImageVersion string `pulumi:"imageVersion"`
	// The last update time of the Timer trigger.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The name of the Timer trigger.
	Name string `pulumi:"name"`
	// The category of the Timer trigger.
	Type string `pulumi:"type"`
}

// GetKafkaTriggersItemInput is an input type that accepts GetKafkaTriggersItemArgs and GetKafkaTriggersItemOutput values.
// You can construct a concrete instance of `GetKafkaTriggersItemInput` via:
//
//	GetKafkaTriggersItemArgs{...}
type GetKafkaTriggersItemInput interface {
	pulumi.Input

	ToGetKafkaTriggersItemOutput() GetKafkaTriggersItemOutput
	ToGetKafkaTriggersItemOutputWithContext(context.Context) GetKafkaTriggersItemOutput
}

type GetKafkaTriggersItemArgs struct {
	// The ID of account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The creation time of the Timer trigger.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the Timer trigger.
	Description pulumi.StringInput `pulumi:"description"`
	// The details of trigger configuration.
	DetailedConfig pulumi.StringInput `pulumi:"detailedConfig"`
	// Whether the Timer trigger is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of Function.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The ID of the Timer trigger.
	Id pulumi.StringInput `pulumi:"id"`
	// The image version of the Timer trigger.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	// The last update time of the Timer trigger.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The name of the Timer trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The category of the Timer trigger.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetKafkaTriggersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTriggersItem)(nil)).Elem()
}

func (i GetKafkaTriggersItemArgs) ToGetKafkaTriggersItemOutput() GetKafkaTriggersItemOutput {
	return i.ToGetKafkaTriggersItemOutputWithContext(context.Background())
}

func (i GetKafkaTriggersItemArgs) ToGetKafkaTriggersItemOutputWithContext(ctx context.Context) GetKafkaTriggersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTriggersItemOutput)
}

// GetKafkaTriggersItemArrayInput is an input type that accepts GetKafkaTriggersItemArray and GetKafkaTriggersItemArrayOutput values.
// You can construct a concrete instance of `GetKafkaTriggersItemArrayInput` via:
//
//	GetKafkaTriggersItemArray{ GetKafkaTriggersItemArgs{...} }
type GetKafkaTriggersItemArrayInput interface {
	pulumi.Input

	ToGetKafkaTriggersItemArrayOutput() GetKafkaTriggersItemArrayOutput
	ToGetKafkaTriggersItemArrayOutputWithContext(context.Context) GetKafkaTriggersItemArrayOutput
}

type GetKafkaTriggersItemArray []GetKafkaTriggersItemInput

func (GetKafkaTriggersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaTriggersItem)(nil)).Elem()
}

func (i GetKafkaTriggersItemArray) ToGetKafkaTriggersItemArrayOutput() GetKafkaTriggersItemArrayOutput {
	return i.ToGetKafkaTriggersItemArrayOutputWithContext(context.Background())
}

func (i GetKafkaTriggersItemArray) ToGetKafkaTriggersItemArrayOutputWithContext(ctx context.Context) GetKafkaTriggersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTriggersItemArrayOutput)
}

type GetKafkaTriggersItemOutput struct{ *pulumi.OutputState }

func (GetKafkaTriggersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTriggersItem)(nil)).Elem()
}

func (o GetKafkaTriggersItemOutput) ToGetKafkaTriggersItemOutput() GetKafkaTriggersItemOutput {
	return o
}

func (o GetKafkaTriggersItemOutput) ToGetKafkaTriggersItemOutputWithContext(ctx context.Context) GetKafkaTriggersItemOutput {
	return o
}

// The ID of account.
func (o GetKafkaTriggersItemOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.AccountId }).(pulumi.StringOutput)
}

// The creation time of the Timer trigger.
func (o GetKafkaTriggersItemOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the Timer trigger.
func (o GetKafkaTriggersItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.Description }).(pulumi.StringOutput)
}

// The details of trigger configuration.
func (o GetKafkaTriggersItemOutput) DetailedConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.DetailedConfig }).(pulumi.StringOutput)
}

// Whether the Timer trigger is enabled.
func (o GetKafkaTriggersItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of Function.
func (o GetKafkaTriggersItemOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The ID of the Timer trigger.
func (o GetKafkaTriggersItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.Id }).(pulumi.StringOutput)
}

// The image version of the Timer trigger.
func (o GetKafkaTriggersItemOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.ImageVersion }).(pulumi.StringOutput)
}

// The last update time of the Timer trigger.
func (o GetKafkaTriggersItemOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The name of the Timer trigger.
func (o GetKafkaTriggersItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.Name }).(pulumi.StringOutput)
}

// The category of the Timer trigger.
func (o GetKafkaTriggersItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTriggersItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetKafkaTriggersItemArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaTriggersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaTriggersItem)(nil)).Elem()
}

func (o GetKafkaTriggersItemArrayOutput) ToGetKafkaTriggersItemArrayOutput() GetKafkaTriggersItemArrayOutput {
	return o
}

func (o GetKafkaTriggersItemArrayOutput) ToGetKafkaTriggersItemArrayOutputWithContext(ctx context.Context) GetKafkaTriggersItemArrayOutput {
	return o
}

func (o GetKafkaTriggersItemArrayOutput) Index(i pulumi.IntInput) GetKafkaTriggersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaTriggersItem {
		return vs[0].([]GetKafkaTriggersItem)[vs[1].(int)]
	}).(GetKafkaTriggersItemOutput)
}

type GetReleasesFilter struct {
	// Filter key enumeration.
	Name *string `pulumi:"name"`
	// The filtering value of the query.
	Values []string `pulumi:"values"`
}

// GetReleasesFilterInput is an input type that accepts GetReleasesFilterArgs and GetReleasesFilterOutput values.
// You can construct a concrete instance of `GetReleasesFilterInput` via:
//
//	GetReleasesFilterArgs{...}
type GetReleasesFilterInput interface {
	pulumi.Input

	ToGetReleasesFilterOutput() GetReleasesFilterOutput
	ToGetReleasesFilterOutputWithContext(context.Context) GetReleasesFilterOutput
}

type GetReleasesFilterArgs struct {
	// Filter key enumeration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The filtering value of the query.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetReleasesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleasesFilter)(nil)).Elem()
}

func (i GetReleasesFilterArgs) ToGetReleasesFilterOutput() GetReleasesFilterOutput {
	return i.ToGetReleasesFilterOutputWithContext(context.Background())
}

func (i GetReleasesFilterArgs) ToGetReleasesFilterOutputWithContext(ctx context.Context) GetReleasesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleasesFilterOutput)
}

// GetReleasesFilterArrayInput is an input type that accepts GetReleasesFilterArray and GetReleasesFilterArrayOutput values.
// You can construct a concrete instance of `GetReleasesFilterArrayInput` via:
//
//	GetReleasesFilterArray{ GetReleasesFilterArgs{...} }
type GetReleasesFilterArrayInput interface {
	pulumi.Input

	ToGetReleasesFilterArrayOutput() GetReleasesFilterArrayOutput
	ToGetReleasesFilterArrayOutputWithContext(context.Context) GetReleasesFilterArrayOutput
}

type GetReleasesFilterArray []GetReleasesFilterInput

func (GetReleasesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReleasesFilter)(nil)).Elem()
}

func (i GetReleasesFilterArray) ToGetReleasesFilterArrayOutput() GetReleasesFilterArrayOutput {
	return i.ToGetReleasesFilterArrayOutputWithContext(context.Background())
}

func (i GetReleasesFilterArray) ToGetReleasesFilterArrayOutputWithContext(ctx context.Context) GetReleasesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleasesFilterArrayOutput)
}

type GetReleasesFilterOutput struct{ *pulumi.OutputState }

func (GetReleasesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleasesFilter)(nil)).Elem()
}

func (o GetReleasesFilterOutput) ToGetReleasesFilterOutput() GetReleasesFilterOutput {
	return o
}

func (o GetReleasesFilterOutput) ToGetReleasesFilterOutputWithContext(ctx context.Context) GetReleasesFilterOutput {
	return o
}

// Filter key enumeration.
func (o GetReleasesFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReleasesFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The filtering value of the query.
func (o GetReleasesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReleasesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetReleasesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetReleasesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReleasesFilter)(nil)).Elem()
}

func (o GetReleasesFilterArrayOutput) ToGetReleasesFilterArrayOutput() GetReleasesFilterArrayOutput {
	return o
}

func (o GetReleasesFilterArrayOutput) ToGetReleasesFilterArrayOutputWithContext(ctx context.Context) GetReleasesFilterArrayOutput {
	return o
}

func (o GetReleasesFilterArrayOutput) Index(i pulumi.IntInput) GetReleasesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReleasesFilter {
		return vs[0].([]GetReleasesFilter)[vs[1].(int)]
	}).(GetReleasesFilterOutput)
}

type GetReleasesItem struct {
	// The create time of the published information.
	CreationTime string `pulumi:"creationTime"`
	// The description of the published information.
	Description string `pulumi:"description"`
	// Finish time.
	FinishTime string `pulumi:"finishTime"`
	// The ID of Function.
	FunctionId string `pulumi:"functionId"`
	// The ID of function release.
	Id string `pulumi:"id"`
	// The last update time of the published information.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The historical version numbers released.
	SourceRevisionNumber int `pulumi:"sourceRevisionNumber"`
	// The status of function release.
	Status string `pulumi:"status"`
	// The target version number released.
	TargetRevisionNumber int `pulumi:"targetRevisionNumber"`
}

// GetReleasesItemInput is an input type that accepts GetReleasesItemArgs and GetReleasesItemOutput values.
// You can construct a concrete instance of `GetReleasesItemInput` via:
//
//	GetReleasesItemArgs{...}
type GetReleasesItemInput interface {
	pulumi.Input

	ToGetReleasesItemOutput() GetReleasesItemOutput
	ToGetReleasesItemOutputWithContext(context.Context) GetReleasesItemOutput
}

type GetReleasesItemArgs struct {
	// The create time of the published information.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the published information.
	Description pulumi.StringInput `pulumi:"description"`
	// Finish time.
	FinishTime pulumi.StringInput `pulumi:"finishTime"`
	// The ID of Function.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The ID of function release.
	Id pulumi.StringInput `pulumi:"id"`
	// The last update time of the published information.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The historical version numbers released.
	SourceRevisionNumber pulumi.IntInput `pulumi:"sourceRevisionNumber"`
	// The status of function release.
	Status pulumi.StringInput `pulumi:"status"`
	// The target version number released.
	TargetRevisionNumber pulumi.IntInput `pulumi:"targetRevisionNumber"`
}

func (GetReleasesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleasesItem)(nil)).Elem()
}

func (i GetReleasesItemArgs) ToGetReleasesItemOutput() GetReleasesItemOutput {
	return i.ToGetReleasesItemOutputWithContext(context.Background())
}

func (i GetReleasesItemArgs) ToGetReleasesItemOutputWithContext(ctx context.Context) GetReleasesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleasesItemOutput)
}

// GetReleasesItemArrayInput is an input type that accepts GetReleasesItemArray and GetReleasesItemArrayOutput values.
// You can construct a concrete instance of `GetReleasesItemArrayInput` via:
//
//	GetReleasesItemArray{ GetReleasesItemArgs{...} }
type GetReleasesItemArrayInput interface {
	pulumi.Input

	ToGetReleasesItemArrayOutput() GetReleasesItemArrayOutput
	ToGetReleasesItemArrayOutputWithContext(context.Context) GetReleasesItemArrayOutput
}

type GetReleasesItemArray []GetReleasesItemInput

func (GetReleasesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReleasesItem)(nil)).Elem()
}

func (i GetReleasesItemArray) ToGetReleasesItemArrayOutput() GetReleasesItemArrayOutput {
	return i.ToGetReleasesItemArrayOutputWithContext(context.Background())
}

func (i GetReleasesItemArray) ToGetReleasesItemArrayOutputWithContext(ctx context.Context) GetReleasesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleasesItemArrayOutput)
}

type GetReleasesItemOutput struct{ *pulumi.OutputState }

func (GetReleasesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleasesItem)(nil)).Elem()
}

func (o GetReleasesItemOutput) ToGetReleasesItemOutput() GetReleasesItemOutput {
	return o
}

func (o GetReleasesItemOutput) ToGetReleasesItemOutputWithContext(ctx context.Context) GetReleasesItemOutput {
	return o
}

// The create time of the published information.
func (o GetReleasesItemOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesItem) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the published information.
func (o GetReleasesItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesItem) string { return v.Description }).(pulumi.StringOutput)
}

// Finish time.
func (o GetReleasesItemOutput) FinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesItem) string { return v.FinishTime }).(pulumi.StringOutput)
}

// The ID of Function.
func (o GetReleasesItemOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesItem) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The ID of function release.
func (o GetReleasesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesItem) string { return v.Id }).(pulumi.StringOutput)
}

// The last update time of the published information.
func (o GetReleasesItemOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesItem) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The historical version numbers released.
func (o GetReleasesItemOutput) SourceRevisionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetReleasesItem) int { return v.SourceRevisionNumber }).(pulumi.IntOutput)
}

// The status of function release.
func (o GetReleasesItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleasesItem) string { return v.Status }).(pulumi.StringOutput)
}

// The target version number released.
func (o GetReleasesItemOutput) TargetRevisionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetReleasesItem) int { return v.TargetRevisionNumber }).(pulumi.IntOutput)
}

type GetReleasesItemArrayOutput struct{ *pulumi.OutputState }

func (GetReleasesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReleasesItem)(nil)).Elem()
}

func (o GetReleasesItemArrayOutput) ToGetReleasesItemArrayOutput() GetReleasesItemArrayOutput {
	return o
}

func (o GetReleasesItemArrayOutput) ToGetReleasesItemArrayOutputWithContext(ctx context.Context) GetReleasesItemArrayOutput {
	return o
}

func (o GetReleasesItemArrayOutput) Index(i pulumi.IntInput) GetReleasesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReleasesItem {
		return vs[0].([]GetReleasesItem)[vs[1].(int)]
	}).(GetReleasesItemOutput)
}

type GetReleasesOrderBy struct {
	// Whether the sorting result is sorted in ascending order.
	Ascend *bool `pulumi:"ascend"`
	// Key names used for sorting.
	Key *string `pulumi:"key"`
}

// GetReleasesOrderByInput is an input type that accepts GetReleasesOrderByArgs and GetReleasesOrderByOutput values.
// You can construct a concrete instance of `GetReleasesOrderByInput` via:
//
//	GetReleasesOrderByArgs{...}
type GetReleasesOrderByInput interface {
	pulumi.Input

	ToGetReleasesOrderByOutput() GetReleasesOrderByOutput
	ToGetReleasesOrderByOutputWithContext(context.Context) GetReleasesOrderByOutput
}

type GetReleasesOrderByArgs struct {
	// Whether the sorting result is sorted in ascending order.
	Ascend pulumi.BoolPtrInput `pulumi:"ascend"`
	// Key names used for sorting.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (GetReleasesOrderByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleasesOrderBy)(nil)).Elem()
}

func (i GetReleasesOrderByArgs) ToGetReleasesOrderByOutput() GetReleasesOrderByOutput {
	return i.ToGetReleasesOrderByOutputWithContext(context.Background())
}

func (i GetReleasesOrderByArgs) ToGetReleasesOrderByOutputWithContext(ctx context.Context) GetReleasesOrderByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleasesOrderByOutput)
}

// GetReleasesOrderByArrayInput is an input type that accepts GetReleasesOrderByArray and GetReleasesOrderByArrayOutput values.
// You can construct a concrete instance of `GetReleasesOrderByArrayInput` via:
//
//	GetReleasesOrderByArray{ GetReleasesOrderByArgs{...} }
type GetReleasesOrderByArrayInput interface {
	pulumi.Input

	ToGetReleasesOrderByArrayOutput() GetReleasesOrderByArrayOutput
	ToGetReleasesOrderByArrayOutputWithContext(context.Context) GetReleasesOrderByArrayOutput
}

type GetReleasesOrderByArray []GetReleasesOrderByInput

func (GetReleasesOrderByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReleasesOrderBy)(nil)).Elem()
}

func (i GetReleasesOrderByArray) ToGetReleasesOrderByArrayOutput() GetReleasesOrderByArrayOutput {
	return i.ToGetReleasesOrderByArrayOutputWithContext(context.Background())
}

func (i GetReleasesOrderByArray) ToGetReleasesOrderByArrayOutputWithContext(ctx context.Context) GetReleasesOrderByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleasesOrderByArrayOutput)
}

type GetReleasesOrderByOutput struct{ *pulumi.OutputState }

func (GetReleasesOrderByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleasesOrderBy)(nil)).Elem()
}

func (o GetReleasesOrderByOutput) ToGetReleasesOrderByOutput() GetReleasesOrderByOutput {
	return o
}

func (o GetReleasesOrderByOutput) ToGetReleasesOrderByOutputWithContext(ctx context.Context) GetReleasesOrderByOutput {
	return o
}

// Whether the sorting result is sorted in ascending order.
func (o GetReleasesOrderByOutput) Ascend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetReleasesOrderBy) *bool { return v.Ascend }).(pulumi.BoolPtrOutput)
}

// Key names used for sorting.
func (o GetReleasesOrderByOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReleasesOrderBy) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type GetReleasesOrderByArrayOutput struct{ *pulumi.OutputState }

func (GetReleasesOrderByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReleasesOrderBy)(nil)).Elem()
}

func (o GetReleasesOrderByArrayOutput) ToGetReleasesOrderByArrayOutput() GetReleasesOrderByArrayOutput {
	return o
}

func (o GetReleasesOrderByArrayOutput) ToGetReleasesOrderByArrayOutputWithContext(ctx context.Context) GetReleasesOrderByArrayOutput {
	return o
}

func (o GetReleasesOrderByArrayOutput) Index(i pulumi.IntInput) GetReleasesOrderByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReleasesOrderBy {
		return vs[0].([]GetReleasesOrderBy)[vs[1].(int)]
	}).(GetReleasesOrderByOutput)
}

type GetTimersItem struct {
	// The ID of account.
	AccountId string `pulumi:"accountId"`
	// The creation time of the Timer trigger.
	CreationTime string `pulumi:"creationTime"`
	// The description of the Timer trigger.
	Description string `pulumi:"description"`
	// The details of trigger configuration.
	DetailedConfig string `pulumi:"detailedConfig"`
	// Whether the Timer trigger is enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of Function.
	FunctionId string `pulumi:"functionId"`
	// The ID of the Timer trigger.
	Id string `pulumi:"id"`
	// The image version of the Timer trigger.
	ImageVersion string `pulumi:"imageVersion"`
	// The last update time of the Timer trigger.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The name of the Timer trigger.
	Name string `pulumi:"name"`
	// The category of the Timer trigger.
	Type string `pulumi:"type"`
}

// GetTimersItemInput is an input type that accepts GetTimersItemArgs and GetTimersItemOutput values.
// You can construct a concrete instance of `GetTimersItemInput` via:
//
//	GetTimersItemArgs{...}
type GetTimersItemInput interface {
	pulumi.Input

	ToGetTimersItemOutput() GetTimersItemOutput
	ToGetTimersItemOutputWithContext(context.Context) GetTimersItemOutput
}

type GetTimersItemArgs struct {
	// The ID of account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The creation time of the Timer trigger.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the Timer trigger.
	Description pulumi.StringInput `pulumi:"description"`
	// The details of trigger configuration.
	DetailedConfig pulumi.StringInput `pulumi:"detailedConfig"`
	// Whether the Timer trigger is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The ID of Function.
	FunctionId pulumi.StringInput `pulumi:"functionId"`
	// The ID of the Timer trigger.
	Id pulumi.StringInput `pulumi:"id"`
	// The image version of the Timer trigger.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	// The last update time of the Timer trigger.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The name of the Timer trigger.
	Name pulumi.StringInput `pulumi:"name"`
	// The category of the Timer trigger.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTimersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTimersItem)(nil)).Elem()
}

func (i GetTimersItemArgs) ToGetTimersItemOutput() GetTimersItemOutput {
	return i.ToGetTimersItemOutputWithContext(context.Background())
}

func (i GetTimersItemArgs) ToGetTimersItemOutputWithContext(ctx context.Context) GetTimersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTimersItemOutput)
}

// GetTimersItemArrayInput is an input type that accepts GetTimersItemArray and GetTimersItemArrayOutput values.
// You can construct a concrete instance of `GetTimersItemArrayInput` via:
//
//	GetTimersItemArray{ GetTimersItemArgs{...} }
type GetTimersItemArrayInput interface {
	pulumi.Input

	ToGetTimersItemArrayOutput() GetTimersItemArrayOutput
	ToGetTimersItemArrayOutputWithContext(context.Context) GetTimersItemArrayOutput
}

type GetTimersItemArray []GetTimersItemInput

func (GetTimersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTimersItem)(nil)).Elem()
}

func (i GetTimersItemArray) ToGetTimersItemArrayOutput() GetTimersItemArrayOutput {
	return i.ToGetTimersItemArrayOutputWithContext(context.Background())
}

func (i GetTimersItemArray) ToGetTimersItemArrayOutputWithContext(ctx context.Context) GetTimersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTimersItemArrayOutput)
}

type GetTimersItemOutput struct{ *pulumi.OutputState }

func (GetTimersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTimersItem)(nil)).Elem()
}

func (o GetTimersItemOutput) ToGetTimersItemOutput() GetTimersItemOutput {
	return o
}

func (o GetTimersItemOutput) ToGetTimersItemOutputWithContext(ctx context.Context) GetTimersItemOutput {
	return o
}

// The ID of account.
func (o GetTimersItemOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.AccountId }).(pulumi.StringOutput)
}

// The creation time of the Timer trigger.
func (o GetTimersItemOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the Timer trigger.
func (o GetTimersItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.Description }).(pulumi.StringOutput)
}

// The details of trigger configuration.
func (o GetTimersItemOutput) DetailedConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.DetailedConfig }).(pulumi.StringOutput)
}

// Whether the Timer trigger is enabled.
func (o GetTimersItemOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTimersItem) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of Function.
func (o GetTimersItemOutput) FunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.FunctionId }).(pulumi.StringOutput)
}

// The ID of the Timer trigger.
func (o GetTimersItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.Id }).(pulumi.StringOutput)
}

// The image version of the Timer trigger.
func (o GetTimersItemOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.ImageVersion }).(pulumi.StringOutput)
}

// The last update time of the Timer trigger.
func (o GetTimersItemOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The name of the Timer trigger.
func (o GetTimersItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.Name }).(pulumi.StringOutput)
}

// The category of the Timer trigger.
func (o GetTimersItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTimersItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetTimersItemArrayOutput struct{ *pulumi.OutputState }

func (GetTimersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTimersItem)(nil)).Elem()
}

func (o GetTimersItemArrayOutput) ToGetTimersItemArrayOutput() GetTimersItemArrayOutput {
	return o
}

func (o GetTimersItemArrayOutput) ToGetTimersItemArrayOutputWithContext(ctx context.Context) GetTimersItemArrayOutput {
	return o
}

func (o GetTimersItemArrayOutput) Index(i pulumi.IntInput) GetTimersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTimersItem {
		return vs[0].([]GetTimersItem)[vs[1].(int)]
	}).(GetTimersItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEnvInput)(nil)).Elem(), FunctionEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEnvArrayInput)(nil)).Elem(), FunctionEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNasStorageInput)(nil)).Elem(), FunctionNasStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNasStoragePtrInput)(nil)).Elem(), FunctionNasStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNasStorageNasConfigInput)(nil)).Elem(), FunctionNasStorageNasConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionNasStorageNasConfigArrayInput)(nil)).Elem(), FunctionNasStorageNasConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSourceAccessConfigInput)(nil)).Elem(), FunctionSourceAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSourceAccessConfigPtrInput)(nil)).Elem(), FunctionSourceAccessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTlsConfigInput)(nil)).Elem(), FunctionTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTlsConfigPtrInput)(nil)).Elem(), FunctionTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTosMountConfigInput)(nil)).Elem(), FunctionTosMountConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTosMountConfigPtrInput)(nil)).Elem(), FunctionTosMountConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTosMountConfigCredentialsInput)(nil)).Elem(), FunctionTosMountConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTosMountConfigCredentialsPtrInput)(nil)).Elem(), FunctionTosMountConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTosMountConfigMountPointInput)(nil)).Elem(), FunctionTosMountConfigMountPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionTosMountConfigMountPointArrayInput)(nil)).Elem(), FunctionTosMountConfigMountPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVpcConfigInput)(nil)).Elem(), FunctionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionVpcConfigPtrInput)(nil)).Elem(), FunctionVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemInput)(nil)).Elem(), FunctionsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemArrayInput)(nil)).Elem(), FunctionsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemEnvInput)(nil)).Elem(), FunctionsItemEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemEnvArrayInput)(nil)).Elem(), FunctionsItemEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemNasStorageInput)(nil)).Elem(), FunctionsItemNasStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemNasStorageArrayInput)(nil)).Elem(), FunctionsItemNasStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemNasStorageNasConfigInput)(nil)).Elem(), FunctionsItemNasStorageNasConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemNasStorageNasConfigArrayInput)(nil)).Elem(), FunctionsItemNasStorageNasConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTagInput)(nil)).Elem(), FunctionsItemTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTagArrayInput)(nil)).Elem(), FunctionsItemTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTlsConfigInput)(nil)).Elem(), FunctionsItemTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTlsConfigArrayInput)(nil)).Elem(), FunctionsItemTlsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTosMountConfigInput)(nil)).Elem(), FunctionsItemTosMountConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTosMountConfigArrayInput)(nil)).Elem(), FunctionsItemTosMountConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTosMountConfigCredentialInput)(nil)).Elem(), FunctionsItemTosMountConfigCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTosMountConfigCredentialArrayInput)(nil)).Elem(), FunctionsItemTosMountConfigCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTosMountConfigMountPointInput)(nil)).Elem(), FunctionsItemTosMountConfigMountPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemTosMountConfigMountPointArrayInput)(nil)).Elem(), FunctionsItemTosMountConfigMountPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemVpcConfigInput)(nil)).Elem(), FunctionsItemVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionsItemVpcConfigArrayInput)(nil)).Elem(), FunctionsItemVpcConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTriggerKafkaCredentialsInput)(nil)).Elem(), KafkaTriggerKafkaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTriggerKafkaCredentialsPtrInput)(nil)).Elem(), KafkaTriggerKafkaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTriggersItemInput)(nil)).Elem(), KafkaTriggersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTriggersItemArrayInput)(nil)).Elem(), KafkaTriggersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleasesFilterInput)(nil)).Elem(), ReleasesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleasesFilterArrayInput)(nil)).Elem(), ReleasesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleasesItemInput)(nil)).Elem(), ReleasesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleasesItemArrayInput)(nil)).Elem(), ReleasesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleasesOrderByInput)(nil)).Elem(), ReleasesOrderByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleasesOrderByArrayInput)(nil)).Elem(), ReleasesOrderByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimersItemInput)(nil)).Elem(), TimersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimersItemArrayInput)(nil)).Elem(), TimersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemInput)(nil)).Elem(), GetFunctionsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemArrayInput)(nil)).Elem(), GetFunctionsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemEnvInput)(nil)).Elem(), GetFunctionsItemEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemEnvArrayInput)(nil)).Elem(), GetFunctionsItemEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemNasStorageInput)(nil)).Elem(), GetFunctionsItemNasStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemNasStorageArrayInput)(nil)).Elem(), GetFunctionsItemNasStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemNasStorageNasConfigInput)(nil)).Elem(), GetFunctionsItemNasStorageNasConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemNasStorageNasConfigArrayInput)(nil)).Elem(), GetFunctionsItemNasStorageNasConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTagInput)(nil)).Elem(), GetFunctionsItemTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTagArrayInput)(nil)).Elem(), GetFunctionsItemTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTlsConfigInput)(nil)).Elem(), GetFunctionsItemTlsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTlsConfigArrayInput)(nil)).Elem(), GetFunctionsItemTlsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTosMountConfigInput)(nil)).Elem(), GetFunctionsItemTosMountConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTosMountConfigArrayInput)(nil)).Elem(), GetFunctionsItemTosMountConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTosMountConfigCredentialInput)(nil)).Elem(), GetFunctionsItemTosMountConfigCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTosMountConfigCredentialArrayInput)(nil)).Elem(), GetFunctionsItemTosMountConfigCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTosMountConfigMountPointInput)(nil)).Elem(), GetFunctionsItemTosMountConfigMountPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemTosMountConfigMountPointArrayInput)(nil)).Elem(), GetFunctionsItemTosMountConfigMountPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemVpcConfigInput)(nil)).Elem(), GetFunctionsItemVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFunctionsItemVpcConfigArrayInput)(nil)).Elem(), GetFunctionsItemVpcConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTriggersItemInput)(nil)).Elem(), GetKafkaTriggersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTriggersItemArrayInput)(nil)).Elem(), GetKafkaTriggersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleasesFilterInput)(nil)).Elem(), GetReleasesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleasesFilterArrayInput)(nil)).Elem(), GetReleasesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleasesItemInput)(nil)).Elem(), GetReleasesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleasesItemArrayInput)(nil)).Elem(), GetReleasesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleasesOrderByInput)(nil)).Elem(), GetReleasesOrderByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleasesOrderByArrayInput)(nil)).Elem(), GetReleasesOrderByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTimersItemInput)(nil)).Elem(), GetTimersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTimersItemArrayInput)(nil)).Elem(), GetTimersItemArray{})
	pulumi.RegisterOutputType(FunctionEnvOutput{})
	pulumi.RegisterOutputType(FunctionEnvArrayOutput{})
	pulumi.RegisterOutputType(FunctionNasStorageOutput{})
	pulumi.RegisterOutputType(FunctionNasStoragePtrOutput{})
	pulumi.RegisterOutputType(FunctionNasStorageNasConfigOutput{})
	pulumi.RegisterOutputType(FunctionNasStorageNasConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionSourceAccessConfigOutput{})
	pulumi.RegisterOutputType(FunctionSourceAccessConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionTlsConfigOutput{})
	pulumi.RegisterOutputType(FunctionTlsConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionTosMountConfigOutput{})
	pulumi.RegisterOutputType(FunctionTosMountConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionTosMountConfigCredentialsOutput{})
	pulumi.RegisterOutputType(FunctionTosMountConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(FunctionTosMountConfigMountPointOutput{})
	pulumi.RegisterOutputType(FunctionTosMountConfigMountPointArrayOutput{})
	pulumi.RegisterOutputType(FunctionVpcConfigOutput{})
	pulumi.RegisterOutputType(FunctionVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionsItemOutput{})
	pulumi.RegisterOutputType(FunctionsItemArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemEnvOutput{})
	pulumi.RegisterOutputType(FunctionsItemEnvArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemNasStorageOutput{})
	pulumi.RegisterOutputType(FunctionsItemNasStorageArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemNasStorageNasConfigOutput{})
	pulumi.RegisterOutputType(FunctionsItemNasStorageNasConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemTagOutput{})
	pulumi.RegisterOutputType(FunctionsItemTagArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemTlsConfigOutput{})
	pulumi.RegisterOutputType(FunctionsItemTlsConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemTosMountConfigOutput{})
	pulumi.RegisterOutputType(FunctionsItemTosMountConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemTosMountConfigCredentialOutput{})
	pulumi.RegisterOutputType(FunctionsItemTosMountConfigCredentialArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemTosMountConfigMountPointOutput{})
	pulumi.RegisterOutputType(FunctionsItemTosMountConfigMountPointArrayOutput{})
	pulumi.RegisterOutputType(FunctionsItemVpcConfigOutput{})
	pulumi.RegisterOutputType(FunctionsItemVpcConfigArrayOutput{})
	pulumi.RegisterOutputType(KafkaTriggerKafkaCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaTriggerKafkaCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaTriggersItemOutput{})
	pulumi.RegisterOutputType(KafkaTriggersItemArrayOutput{})
	pulumi.RegisterOutputType(ReleasesFilterOutput{})
	pulumi.RegisterOutputType(ReleasesFilterArrayOutput{})
	pulumi.RegisterOutputType(ReleasesItemOutput{})
	pulumi.RegisterOutputType(ReleasesItemArrayOutput{})
	pulumi.RegisterOutputType(ReleasesOrderByOutput{})
	pulumi.RegisterOutputType(ReleasesOrderByArrayOutput{})
	pulumi.RegisterOutputType(TimersItemOutput{})
	pulumi.RegisterOutputType(TimersItemArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemEnvOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemEnvArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemNasStorageOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemNasStorageArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemNasStorageNasConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemNasStorageNasConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTagOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTagArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTlsConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTlsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTosMountConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTosMountConfigArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTosMountConfigCredentialOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTosMountConfigCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTosMountConfigMountPointOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemTosMountConfigMountPointArrayOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemVpcConfigOutput{})
	pulumi.RegisterOutputType(GetFunctionsItemVpcConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaTriggersItemOutput{})
	pulumi.RegisterOutputType(GetKafkaTriggersItemArrayOutput{})
	pulumi.RegisterOutputType(GetReleasesFilterOutput{})
	pulumi.RegisterOutputType(GetReleasesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetReleasesItemOutput{})
	pulumi.RegisterOutputType(GetReleasesItemArrayOutput{})
	pulumi.RegisterOutputType(GetReleasesOrderByOutput{})
	pulumi.RegisterOutputType(GetReleasesOrderByArrayOutput{})
	pulumi.RegisterOutputType(GetTimersItemOutput{})
	pulumi.RegisterOutputType(GetTimersItemArrayOutput{})
}
