// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of dns records
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/dns"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dns.GetRecords(ctx, &dns.GetRecordsArgs{
//				Zid: 58857,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.dns.Records has been deprecated in favor of volcengine.dns.getRecords
func Records(ctx *pulumi.Context, args *RecordsArgs, opts ...pulumi.InvokeOption) (*RecordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv RecordsResult
	err := ctx.Invoke("volcengine:dns/records:Records", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Records.
type RecordsArgs struct {
	// Domain prefix of the DNS record.
	Host *string `pulumi:"host"`
	// Line of the DNS record.
	Line *string `pulumi:"line"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The matching mode for the Host parameter.
	SearchMode *string `pulumi:"searchMode"`
	// The Method to sort the returned list of DNS records.
	SearchOrder *string `pulumi:"searchOrder"`
	// Type of the DNS record.
	Type *string `pulumi:"type"`
	// Value of the DNS record.
	Value *string `pulumi:"value"`
	// The ID of the domain.
	Zid int `pulumi:"zid"`
}

// A collection of values returned by Records.
type RecordsResult struct {
	// The host record included in the DNS record.
	Host *string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The line code corresponding to the DNS record.
	Line       *string `pulumi:"line"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The collection of query.
	Records     []RecordsRecord `pulumi:"records"`
	SearchMode  *string         `pulumi:"searchMode"`
	SearchOrder *string         `pulumi:"searchOrder"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The type of the DNS record.
	Type *string `pulumi:"type"`
	// The record value contained in the DNS record.
	Value *string `pulumi:"value"`
	Zid   int     `pulumi:"zid"`
}

func RecordsOutput(ctx *pulumi.Context, args RecordsOutputArgs, opts ...pulumi.InvokeOption) RecordsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (RecordsResult, error) {
			args := v.(RecordsArgs)
			r, err := Records(ctx, &args, opts...)
			var s RecordsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(RecordsResultOutput)
}

// A collection of arguments for invoking Records.
type RecordsOutputArgs struct {
	// Domain prefix of the DNS record.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Line of the DNS record.
	Line pulumi.StringPtrInput `pulumi:"line"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The matching mode for the Host parameter.
	SearchMode pulumi.StringPtrInput `pulumi:"searchMode"`
	// The Method to sort the returned list of DNS records.
	SearchOrder pulumi.StringPtrInput `pulumi:"searchOrder"`
	// Type of the DNS record.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Value of the DNS record.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// The ID of the domain.
	Zid pulumi.IntInput `pulumi:"zid"`
}

func (RecordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordsArgs)(nil)).Elem()
}

// A collection of values returned by Records.
type RecordsResultOutput struct{ *pulumi.OutputState }

func (RecordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordsResult)(nil)).Elem()
}

func (o RecordsResultOutput) ToRecordsResultOutput() RecordsResultOutput {
	return o
}

func (o RecordsResultOutput) ToRecordsResultOutputWithContext(ctx context.Context) RecordsResultOutput {
	return o
}

// The host record included in the DNS record.
func (o RecordsResultOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordsResult) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o RecordsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RecordsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The line code corresponding to the DNS record.
func (o RecordsResultOutput) Line() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordsResult) *string { return v.Line }).(pulumi.StringPtrOutput)
}

func (o RecordsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o RecordsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o RecordsResultOutput) Records() RecordsRecordArrayOutput {
	return o.ApplyT(func(v RecordsResult) []RecordsRecord { return v.Records }).(RecordsRecordArrayOutput)
}

func (o RecordsResultOutput) SearchMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordsResult) *string { return v.SearchMode }).(pulumi.StringPtrOutput)
}

func (o RecordsResultOutput) SearchOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordsResult) *string { return v.SearchOrder }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o RecordsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v RecordsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The type of the DNS record.
func (o RecordsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The record value contained in the DNS record.
func (o RecordsResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordsResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o RecordsResultOutput) Zid() pulumi.IntOutput {
	return o.ApplyT(func(v RecordsResult) int { return v.Zid }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(RecordsResultOutput{})
}
