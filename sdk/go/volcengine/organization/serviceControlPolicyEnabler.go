// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage organization service control policy enabler
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organization.NewServiceControlPolicyEnabler(ctx, "foo", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ServiceControlPolicy enabler can be imported using the default_id (organization:service_control_policy_enable) , e.g.
//
// ```sh
// $ pulumi import volcengine:organization/serviceControlPolicyEnabler:ServiceControlPolicyEnabler default organization:service_control_policy_enable
// ```
type ServiceControlPolicyEnabler struct {
	pulumi.CustomResourceState
}

// NewServiceControlPolicyEnabler registers a new resource with the given unique name, arguments, and options.
func NewServiceControlPolicyEnabler(ctx *pulumi.Context,
	name string, args *ServiceControlPolicyEnablerArgs, opts ...pulumi.ResourceOption) (*ServiceControlPolicyEnabler, error) {
	if args == nil {
		args = &ServiceControlPolicyEnablerArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceControlPolicyEnabler
	err := ctx.RegisterResource("volcengine:organization/serviceControlPolicyEnabler:ServiceControlPolicyEnabler", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceControlPolicyEnabler gets an existing ServiceControlPolicyEnabler resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceControlPolicyEnabler(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceControlPolicyEnablerState, opts ...pulumi.ResourceOption) (*ServiceControlPolicyEnabler, error) {
	var resource ServiceControlPolicyEnabler
	err := ctx.ReadResource("volcengine:organization/serviceControlPolicyEnabler:ServiceControlPolicyEnabler", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceControlPolicyEnabler resources.
type serviceControlPolicyEnablerState struct {
}

type ServiceControlPolicyEnablerState struct {
}

func (ServiceControlPolicyEnablerState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceControlPolicyEnablerState)(nil)).Elem()
}

type serviceControlPolicyEnablerArgs struct {
}

// The set of arguments for constructing a ServiceControlPolicyEnabler resource.
type ServiceControlPolicyEnablerArgs struct {
}

func (ServiceControlPolicyEnablerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceControlPolicyEnablerArgs)(nil)).Elem()
}

type ServiceControlPolicyEnablerInput interface {
	pulumi.Input

	ToServiceControlPolicyEnablerOutput() ServiceControlPolicyEnablerOutput
	ToServiceControlPolicyEnablerOutputWithContext(ctx context.Context) ServiceControlPolicyEnablerOutput
}

func (*ServiceControlPolicyEnabler) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceControlPolicyEnabler)(nil)).Elem()
}

func (i *ServiceControlPolicyEnabler) ToServiceControlPolicyEnablerOutput() ServiceControlPolicyEnablerOutput {
	return i.ToServiceControlPolicyEnablerOutputWithContext(context.Background())
}

func (i *ServiceControlPolicyEnabler) ToServiceControlPolicyEnablerOutputWithContext(ctx context.Context) ServiceControlPolicyEnablerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceControlPolicyEnablerOutput)
}

// ServiceControlPolicyEnablerArrayInput is an input type that accepts ServiceControlPolicyEnablerArray and ServiceControlPolicyEnablerArrayOutput values.
// You can construct a concrete instance of `ServiceControlPolicyEnablerArrayInput` via:
//
//	ServiceControlPolicyEnablerArray{ ServiceControlPolicyEnablerArgs{...} }
type ServiceControlPolicyEnablerArrayInput interface {
	pulumi.Input

	ToServiceControlPolicyEnablerArrayOutput() ServiceControlPolicyEnablerArrayOutput
	ToServiceControlPolicyEnablerArrayOutputWithContext(context.Context) ServiceControlPolicyEnablerArrayOutput
}

type ServiceControlPolicyEnablerArray []ServiceControlPolicyEnablerInput

func (ServiceControlPolicyEnablerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceControlPolicyEnabler)(nil)).Elem()
}

func (i ServiceControlPolicyEnablerArray) ToServiceControlPolicyEnablerArrayOutput() ServiceControlPolicyEnablerArrayOutput {
	return i.ToServiceControlPolicyEnablerArrayOutputWithContext(context.Background())
}

func (i ServiceControlPolicyEnablerArray) ToServiceControlPolicyEnablerArrayOutputWithContext(ctx context.Context) ServiceControlPolicyEnablerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceControlPolicyEnablerArrayOutput)
}

// ServiceControlPolicyEnablerMapInput is an input type that accepts ServiceControlPolicyEnablerMap and ServiceControlPolicyEnablerMapOutput values.
// You can construct a concrete instance of `ServiceControlPolicyEnablerMapInput` via:
//
//	ServiceControlPolicyEnablerMap{ "key": ServiceControlPolicyEnablerArgs{...} }
type ServiceControlPolicyEnablerMapInput interface {
	pulumi.Input

	ToServiceControlPolicyEnablerMapOutput() ServiceControlPolicyEnablerMapOutput
	ToServiceControlPolicyEnablerMapOutputWithContext(context.Context) ServiceControlPolicyEnablerMapOutput
}

type ServiceControlPolicyEnablerMap map[string]ServiceControlPolicyEnablerInput

func (ServiceControlPolicyEnablerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceControlPolicyEnabler)(nil)).Elem()
}

func (i ServiceControlPolicyEnablerMap) ToServiceControlPolicyEnablerMapOutput() ServiceControlPolicyEnablerMapOutput {
	return i.ToServiceControlPolicyEnablerMapOutputWithContext(context.Background())
}

func (i ServiceControlPolicyEnablerMap) ToServiceControlPolicyEnablerMapOutputWithContext(ctx context.Context) ServiceControlPolicyEnablerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceControlPolicyEnablerMapOutput)
}

type ServiceControlPolicyEnablerOutput struct{ *pulumi.OutputState }

func (ServiceControlPolicyEnablerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceControlPolicyEnabler)(nil)).Elem()
}

func (o ServiceControlPolicyEnablerOutput) ToServiceControlPolicyEnablerOutput() ServiceControlPolicyEnablerOutput {
	return o
}

func (o ServiceControlPolicyEnablerOutput) ToServiceControlPolicyEnablerOutputWithContext(ctx context.Context) ServiceControlPolicyEnablerOutput {
	return o
}

type ServiceControlPolicyEnablerArrayOutput struct{ *pulumi.OutputState }

func (ServiceControlPolicyEnablerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceControlPolicyEnabler)(nil)).Elem()
}

func (o ServiceControlPolicyEnablerArrayOutput) ToServiceControlPolicyEnablerArrayOutput() ServiceControlPolicyEnablerArrayOutput {
	return o
}

func (o ServiceControlPolicyEnablerArrayOutput) ToServiceControlPolicyEnablerArrayOutputWithContext(ctx context.Context) ServiceControlPolicyEnablerArrayOutput {
	return o
}

func (o ServiceControlPolicyEnablerArrayOutput) Index(i pulumi.IntInput) ServiceControlPolicyEnablerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceControlPolicyEnabler {
		return vs[0].([]*ServiceControlPolicyEnabler)[vs[1].(int)]
	}).(ServiceControlPolicyEnablerOutput)
}

type ServiceControlPolicyEnablerMapOutput struct{ *pulumi.OutputState }

func (ServiceControlPolicyEnablerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceControlPolicyEnabler)(nil)).Elem()
}

func (o ServiceControlPolicyEnablerMapOutput) ToServiceControlPolicyEnablerMapOutput() ServiceControlPolicyEnablerMapOutput {
	return o
}

func (o ServiceControlPolicyEnablerMapOutput) ToServiceControlPolicyEnablerMapOutputWithContext(ctx context.Context) ServiceControlPolicyEnablerMapOutput {
	return o
}

func (o ServiceControlPolicyEnablerMapOutput) MapIndex(k pulumi.StringInput) ServiceControlPolicyEnablerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceControlPolicyEnabler {
		return vs[0].(map[string]*ServiceControlPolicyEnabler)[vs[1].(string)]
	}).(ServiceControlPolicyEnablerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceControlPolicyEnablerInput)(nil)).Elem(), &ServiceControlPolicyEnabler{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceControlPolicyEnablerArrayInput)(nil)).Elem(), ServiceControlPolicyEnablerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceControlPolicyEnablerMapInput)(nil)).Elem(), ServiceControlPolicyEnablerMap{})
	pulumi.RegisterOutputType(ServiceControlPolicyEnablerOutput{})
	pulumi.RegisterOutputType(ServiceControlPolicyEnablerArrayOutput{})
	pulumi.RegisterOutputType(ServiceControlPolicyEnablerMapOutput{})
}
