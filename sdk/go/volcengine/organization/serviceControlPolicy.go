// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage organization service control policy
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organization.NewServiceControlPolicy(ctx, "foo", &organization.ServiceControlPolicyArgs{
//				Description: pulumi.String("tftest1"),
//				PolicyName:  pulumi.String("tfpolicy11"),
//				Statement:   pulumi.String("{\"Statement\":[{\"Effect\":\"Deny\",\"Action\":[\"ecs:RunInstances\"],\"Resource\":[\"*\"]}]}"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = organization.NewServiceControlPolicy(ctx, "foo2", &organization.ServiceControlPolicyArgs{
//				PolicyName: pulumi.String("tfpolicy21"),
//				Statement:  pulumi.String("{\"Statement\":[{\"Effect\":\"Deny\",\"Action\":[\"ecs:DeleteInstance\"],\"Resource\":[\"*\"]}]}"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Service Control Policy can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:organization/serviceControlPolicy:ServiceControlPolicy default 1000001
//
// ```
type ServiceControlPolicy struct {
	pulumi.CustomResourceState

	// The create time of the Policy.
	CreateDate pulumi.StringOutput `pulumi:"createDate"`
	// The description of the Policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the Policy.
	PolicyName pulumi.StringOutput `pulumi:"policyName"`
	// The type of the Policy.
	PolicyType pulumi.StringOutput `pulumi:"policyType"`
	// The statement of the Policy.
	Statement pulumi.StringOutput `pulumi:"statement"`
	// The update time of the Policy.
	UpdateDate pulumi.StringOutput `pulumi:"updateDate"`
}

// NewServiceControlPolicy registers a new resource with the given unique name, arguments, and options.
func NewServiceControlPolicy(ctx *pulumi.Context,
	name string, args *ServiceControlPolicyArgs, opts ...pulumi.ResourceOption) (*ServiceControlPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyName == nil {
		return nil, errors.New("invalid value for required argument 'PolicyName'")
	}
	if args.Statement == nil {
		return nil, errors.New("invalid value for required argument 'Statement'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceControlPolicy
	err := ctx.RegisterResource("volcengine:organization/serviceControlPolicy:ServiceControlPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceControlPolicy gets an existing ServiceControlPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceControlPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceControlPolicyState, opts ...pulumi.ResourceOption) (*ServiceControlPolicy, error) {
	var resource ServiceControlPolicy
	err := ctx.ReadResource("volcengine:organization/serviceControlPolicy:ServiceControlPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceControlPolicy resources.
type serviceControlPolicyState struct {
	// The create time of the Policy.
	CreateDate *string `pulumi:"createDate"`
	// The description of the Policy.
	Description *string `pulumi:"description"`
	// The name of the Policy.
	PolicyName *string `pulumi:"policyName"`
	// The type of the Policy.
	PolicyType *string `pulumi:"policyType"`
	// The statement of the Policy.
	Statement *string `pulumi:"statement"`
	// The update time of the Policy.
	UpdateDate *string `pulumi:"updateDate"`
}

type ServiceControlPolicyState struct {
	// The create time of the Policy.
	CreateDate pulumi.StringPtrInput
	// The description of the Policy.
	Description pulumi.StringPtrInput
	// The name of the Policy.
	PolicyName pulumi.StringPtrInput
	// The type of the Policy.
	PolicyType pulumi.StringPtrInput
	// The statement of the Policy.
	Statement pulumi.StringPtrInput
	// The update time of the Policy.
	UpdateDate pulumi.StringPtrInput
}

func (ServiceControlPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceControlPolicyState)(nil)).Elem()
}

type serviceControlPolicyArgs struct {
	// The description of the Policy.
	Description *string `pulumi:"description"`
	// The name of the Policy.
	PolicyName string `pulumi:"policyName"`
	// The statement of the Policy.
	Statement string `pulumi:"statement"`
}

// The set of arguments for constructing a ServiceControlPolicy resource.
type ServiceControlPolicyArgs struct {
	// The description of the Policy.
	Description pulumi.StringPtrInput
	// The name of the Policy.
	PolicyName pulumi.StringInput
	// The statement of the Policy.
	Statement pulumi.StringInput
}

func (ServiceControlPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceControlPolicyArgs)(nil)).Elem()
}

type ServiceControlPolicyInput interface {
	pulumi.Input

	ToServiceControlPolicyOutput() ServiceControlPolicyOutput
	ToServiceControlPolicyOutputWithContext(ctx context.Context) ServiceControlPolicyOutput
}

func (*ServiceControlPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceControlPolicy)(nil)).Elem()
}

func (i *ServiceControlPolicy) ToServiceControlPolicyOutput() ServiceControlPolicyOutput {
	return i.ToServiceControlPolicyOutputWithContext(context.Background())
}

func (i *ServiceControlPolicy) ToServiceControlPolicyOutputWithContext(ctx context.Context) ServiceControlPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceControlPolicyOutput)
}

// ServiceControlPolicyArrayInput is an input type that accepts ServiceControlPolicyArray and ServiceControlPolicyArrayOutput values.
// You can construct a concrete instance of `ServiceControlPolicyArrayInput` via:
//
//	ServiceControlPolicyArray{ ServiceControlPolicyArgs{...} }
type ServiceControlPolicyArrayInput interface {
	pulumi.Input

	ToServiceControlPolicyArrayOutput() ServiceControlPolicyArrayOutput
	ToServiceControlPolicyArrayOutputWithContext(context.Context) ServiceControlPolicyArrayOutput
}

type ServiceControlPolicyArray []ServiceControlPolicyInput

func (ServiceControlPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceControlPolicy)(nil)).Elem()
}

func (i ServiceControlPolicyArray) ToServiceControlPolicyArrayOutput() ServiceControlPolicyArrayOutput {
	return i.ToServiceControlPolicyArrayOutputWithContext(context.Background())
}

func (i ServiceControlPolicyArray) ToServiceControlPolicyArrayOutputWithContext(ctx context.Context) ServiceControlPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceControlPolicyArrayOutput)
}

// ServiceControlPolicyMapInput is an input type that accepts ServiceControlPolicyMap and ServiceControlPolicyMapOutput values.
// You can construct a concrete instance of `ServiceControlPolicyMapInput` via:
//
//	ServiceControlPolicyMap{ "key": ServiceControlPolicyArgs{...} }
type ServiceControlPolicyMapInput interface {
	pulumi.Input

	ToServiceControlPolicyMapOutput() ServiceControlPolicyMapOutput
	ToServiceControlPolicyMapOutputWithContext(context.Context) ServiceControlPolicyMapOutput
}

type ServiceControlPolicyMap map[string]ServiceControlPolicyInput

func (ServiceControlPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceControlPolicy)(nil)).Elem()
}

func (i ServiceControlPolicyMap) ToServiceControlPolicyMapOutput() ServiceControlPolicyMapOutput {
	return i.ToServiceControlPolicyMapOutputWithContext(context.Background())
}

func (i ServiceControlPolicyMap) ToServiceControlPolicyMapOutputWithContext(ctx context.Context) ServiceControlPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceControlPolicyMapOutput)
}

type ServiceControlPolicyOutput struct{ *pulumi.OutputState }

func (ServiceControlPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceControlPolicy)(nil)).Elem()
}

func (o ServiceControlPolicyOutput) ToServiceControlPolicyOutput() ServiceControlPolicyOutput {
	return o
}

func (o ServiceControlPolicyOutput) ToServiceControlPolicyOutputWithContext(ctx context.Context) ServiceControlPolicyOutput {
	return o
}

// The create time of the Policy.
func (o ServiceControlPolicyOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceControlPolicy) pulumi.StringOutput { return v.CreateDate }).(pulumi.StringOutput)
}

// The description of the Policy.
func (o ServiceControlPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceControlPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Policy.
func (o ServiceControlPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceControlPolicy) pulumi.StringOutput { return v.PolicyName }).(pulumi.StringOutput)
}

// The type of the Policy.
func (o ServiceControlPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceControlPolicy) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

// The statement of the Policy.
func (o ServiceControlPolicyOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceControlPolicy) pulumi.StringOutput { return v.Statement }).(pulumi.StringOutput)
}

// The update time of the Policy.
func (o ServiceControlPolicyOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceControlPolicy) pulumi.StringOutput { return v.UpdateDate }).(pulumi.StringOutput)
}

type ServiceControlPolicyArrayOutput struct{ *pulumi.OutputState }

func (ServiceControlPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceControlPolicy)(nil)).Elem()
}

func (o ServiceControlPolicyArrayOutput) ToServiceControlPolicyArrayOutput() ServiceControlPolicyArrayOutput {
	return o
}

func (o ServiceControlPolicyArrayOutput) ToServiceControlPolicyArrayOutputWithContext(ctx context.Context) ServiceControlPolicyArrayOutput {
	return o
}

func (o ServiceControlPolicyArrayOutput) Index(i pulumi.IntInput) ServiceControlPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceControlPolicy {
		return vs[0].([]*ServiceControlPolicy)[vs[1].(int)]
	}).(ServiceControlPolicyOutput)
}

type ServiceControlPolicyMapOutput struct{ *pulumi.OutputState }

func (ServiceControlPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceControlPolicy)(nil)).Elem()
}

func (o ServiceControlPolicyMapOutput) ToServiceControlPolicyMapOutput() ServiceControlPolicyMapOutput {
	return o
}

func (o ServiceControlPolicyMapOutput) ToServiceControlPolicyMapOutputWithContext(ctx context.Context) ServiceControlPolicyMapOutput {
	return o
}

func (o ServiceControlPolicyMapOutput) MapIndex(k pulumi.StringInput) ServiceControlPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceControlPolicy {
		return vs[0].(map[string]*ServiceControlPolicy)[vs[1].(string)]
	}).(ServiceControlPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceControlPolicyInput)(nil)).Elem(), &ServiceControlPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceControlPolicyArrayInput)(nil)).Elem(), ServiceControlPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceControlPolicyMapInput)(nil)).Elem(), ServiceControlPolicyMap{})
	pulumi.RegisterOutputType(ServiceControlPolicyOutput{})
	pulumi.RegisterOutputType(ServiceControlPolicyArrayOutput{})
	pulumi.RegisterOutputType(ServiceControlPolicyMapOutput{})
}
