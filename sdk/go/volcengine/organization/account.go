// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage organization account
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooUnit, err := organization.NewUnit(ctx, "fooUnit", &organization.UnitArgs{
//				ParentId:    pulumi.String("730671013833632****"),
//				Description: pulumi.String("acc-test"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = organization.NewAccount(ctx, "fooAccount", &organization.AccountArgs{
//				AccountName: pulumi.String("acc-test-account"),
//				ShowName:    pulumi.String("acc-test-account"),
//				Description: pulumi.String("acc-test"),
//				OrgUnitId:   fooUnit.ID(),
//				Tags: organization.AccountTagArray{
//					&organization.AccountTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OrganizationAccount can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:organization/account:Account default resource_id
//
// ```
type Account struct {
	pulumi.CustomResourceState

	// The name of the account.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// The description of the account.
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the iam role.
	IamRole pulumi.StringOutput `pulumi:"iamRole"`
	// The id of the organization.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// The id of the organization unit. Default is root organization.
	OrgUnitId pulumi.StringOutput `pulumi:"orgUnitId"`
	// The name of the organization unit.
	OrgUnitName pulumi.StringOutput `pulumi:"orgUnitName"`
	// The id of the organization verification.
	OrgVerificationId pulumi.StringOutput `pulumi:"orgVerificationId"`
	// The owner id of the account.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// The show name of the account.
	ShowName pulumi.StringOutput `pulumi:"showName"`
	// Tags.
	Tags AccountTagArrayOutput `pulumi:"tags"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.ShowName == nil {
		return nil, errors.New("invalid value for required argument 'ShowName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Account
	err := ctx.RegisterResource("volcengine:organization/account:Account", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	var resource Account
	err := ctx.ReadResource("volcengine:organization/account:Account", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type accountState struct {
	// The name of the account.
	AccountName *string `pulumi:"accountName"`
	// The description of the account.
	Description *string `pulumi:"description"`
	// The name of the iam role.
	IamRole *string `pulumi:"iamRole"`
	// The id of the organization.
	OrgId *string `pulumi:"orgId"`
	// The id of the organization unit. Default is root organization.
	OrgUnitId *string `pulumi:"orgUnitId"`
	// The name of the organization unit.
	OrgUnitName *string `pulumi:"orgUnitName"`
	// The id of the organization verification.
	OrgVerificationId *string `pulumi:"orgVerificationId"`
	// The owner id of the account.
	Owner *string `pulumi:"owner"`
	// The show name of the account.
	ShowName *string `pulumi:"showName"`
	// Tags.
	Tags []AccountTag `pulumi:"tags"`
}

type AccountState struct {
	// The name of the account.
	AccountName pulumi.StringPtrInput
	// The description of the account.
	Description pulumi.StringPtrInput
	// The name of the iam role.
	IamRole pulumi.StringPtrInput
	// The id of the organization.
	OrgId pulumi.StringPtrInput
	// The id of the organization unit. Default is root organization.
	OrgUnitId pulumi.StringPtrInput
	// The name of the organization unit.
	OrgUnitName pulumi.StringPtrInput
	// The id of the organization verification.
	OrgVerificationId pulumi.StringPtrInput
	// The owner id of the account.
	Owner pulumi.StringPtrInput
	// The show name of the account.
	ShowName pulumi.StringPtrInput
	// Tags.
	Tags AccountTagArrayInput
}

func (AccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountState)(nil)).Elem()
}

type accountArgs struct {
	// The name of the account.
	AccountName string `pulumi:"accountName"`
	// The description of the account.
	Description *string `pulumi:"description"`
	// The id of the organization unit. Default is root organization.
	OrgUnitId *string `pulumi:"orgUnitId"`
	// The show name of the account.
	ShowName string `pulumi:"showName"`
	// Tags.
	Tags []AccountTag `pulumi:"tags"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	// The name of the account.
	AccountName pulumi.StringInput
	// The description of the account.
	Description pulumi.StringPtrInput
	// The id of the organization unit. Default is root organization.
	OrgUnitId pulumi.StringPtrInput
	// The show name of the account.
	ShowName pulumi.StringInput
	// Tags.
	Tags AccountTagArrayInput
}

func (AccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountArgs)(nil)).Elem()
}

type AccountInput interface {
	pulumi.Input

	ToAccountOutput() AccountOutput
	ToAccountOutputWithContext(ctx context.Context) AccountOutput
}

func (*Account) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (i *Account) ToAccountOutput() AccountOutput {
	return i.ToAccountOutputWithContext(context.Background())
}

func (i *Account) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOutput)
}

// AccountArrayInput is an input type that accepts AccountArray and AccountArrayOutput values.
// You can construct a concrete instance of `AccountArrayInput` via:
//
//	AccountArray{ AccountArgs{...} }
type AccountArrayInput interface {
	pulumi.Input

	ToAccountArrayOutput() AccountArrayOutput
	ToAccountArrayOutputWithContext(context.Context) AccountArrayOutput
}

type AccountArray []AccountInput

func (AccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (i AccountArray) ToAccountArrayOutput() AccountArrayOutput {
	return i.ToAccountArrayOutputWithContext(context.Background())
}

func (i AccountArray) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountArrayOutput)
}

// AccountMapInput is an input type that accepts AccountMap and AccountMapOutput values.
// You can construct a concrete instance of `AccountMapInput` via:
//
//	AccountMap{ "key": AccountArgs{...} }
type AccountMapInput interface {
	pulumi.Input

	ToAccountMapOutput() AccountMapOutput
	ToAccountMapOutputWithContext(context.Context) AccountMapOutput
}

type AccountMap map[string]AccountInput

func (AccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (i AccountMap) ToAccountMapOutput() AccountMapOutput {
	return i.ToAccountMapOutputWithContext(context.Background())
}

func (i AccountMap) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountMapOutput)
}

type AccountOutput struct{ *pulumi.OutputState }

func (AccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (o AccountOutput) ToAccountOutput() AccountOutput {
	return o
}

func (o AccountOutput) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return o
}

// The name of the account.
func (o AccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// The description of the account.
func (o AccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the iam role.
func (o AccountOutput) IamRole() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.IamRole }).(pulumi.StringOutput)
}

// The id of the organization.
func (o AccountOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// The id of the organization unit. Default is root organization.
func (o AccountOutput) OrgUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.OrgUnitId }).(pulumi.StringOutput)
}

// The name of the organization unit.
func (o AccountOutput) OrgUnitName() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.OrgUnitName }).(pulumi.StringOutput)
}

// The id of the organization verification.
func (o AccountOutput) OrgVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.OrgVerificationId }).(pulumi.StringOutput)
}

// The owner id of the account.
func (o AccountOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// The show name of the account.
func (o AccountOutput) ShowName() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.ShowName }).(pulumi.StringOutput)
}

// Tags.
func (o AccountOutput) Tags() AccountTagArrayOutput {
	return o.ApplyT(func(v *Account) AccountTagArrayOutput { return v.Tags }).(AccountTagArrayOutput)
}

type AccountArrayOutput struct{ *pulumi.OutputState }

func (AccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (o AccountArrayOutput) ToAccountArrayOutput() AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) Index(i pulumi.IntInput) AccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Account {
		return vs[0].([]*Account)[vs[1].(int)]
	}).(AccountOutput)
}

type AccountMapOutput struct{ *pulumi.OutputState }

func (AccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (o AccountMapOutput) ToAccountMapOutput() AccountMapOutput {
	return o
}

func (o AccountMapOutput) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return o
}

func (o AccountMapOutput) MapIndex(k pulumi.StringInput) AccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Account {
		return vs[0].(map[string]*Account)[vs[1].(string)]
	}).(AccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountInput)(nil)).Elem(), &Account{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountArrayInput)(nil)).Elem(), AccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountMapInput)(nil)).Elem(), AccountMap{})
	pulumi.RegisterOutputType(AccountOutput{})
	pulumi.RegisterOutputType(AccountArrayOutput{})
	pulumi.RegisterOutputType(AccountMapOutput{})
}
