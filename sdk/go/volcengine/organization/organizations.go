// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of organizations
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organization.Organizations(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func Organizations(ctx *pulumi.Context, args *OrganizationsArgs, opts ...pulumi.InvokeOption) (*OrganizationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv OrganizationsResult
	err := ctx.Invoke("volcengine:organization/organizations:Organizations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Organizations.
type OrganizationsArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by Organizations.
type OrganizationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	NameRegex *string `pulumi:"nameRegex"`
	// The collection of query.
	Organizations []OrganizationsOrganization `pulumi:"organizations"`
	OutputFile    *string                     `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func OrganizationsOutput(ctx *pulumi.Context, args OrganizationsOutputArgs, opts ...pulumi.InvokeOption) OrganizationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (OrganizationsResult, error) {
			args := v.(OrganizationsArgs)
			r, err := Organizations(ctx, &args, opts...)
			var s OrganizationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(OrganizationsResultOutput)
}

// A collection of arguments for invoking Organizations.
type OrganizationsOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (OrganizationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsArgs)(nil)).Elem()
}

// A collection of values returned by Organizations.
type OrganizationsResultOutput struct{ *pulumi.OutputState }

func (OrganizationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsResult)(nil)).Elem()
}

func (o OrganizationsResultOutput) ToOrganizationsResultOutput() OrganizationsResultOutput {
	return o
}

func (o OrganizationsResultOutput) ToOrganizationsResultOutputWithContext(ctx context.Context) OrganizationsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o OrganizationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o OrganizationsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o OrganizationsResultOutput) Organizations() OrganizationsOrganizationArrayOutput {
	return o.ApplyT(func(v OrganizationsResult) []OrganizationsOrganization { return v.Organizations }).(OrganizationsOrganizationArrayOutput)
}

func (o OrganizationsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o OrganizationsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v OrganizationsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(OrganizationsResultOutput{})
}
