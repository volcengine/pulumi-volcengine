// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of organization accounts
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organization.GetAccounts(ctx, &organization.GetAccountsArgs{
//				Search: pulumi.StringRef("210061****"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.organization.Accounts has been deprecated in favor of volcengine.organization.getAccounts
func Accounts(ctx *pulumi.Context, args *AccountsArgs, opts ...pulumi.InvokeOption) (*AccountsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv AccountsResult
	err := ctx.Invoke("volcengine:organization/accounts:Accounts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Accounts.
type AccountsArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// The id of the organization unit.
	OrgUnitId *string `pulumi:"orgUnitId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The id or the show name of the account. This field supports fuzzy query.
	Search *string `pulumi:"search"`
	// The id of the verification.
	VerificationId *string `pulumi:"verificationId"`
}

// A collection of values returned by Accounts.
type AccountsResult struct {
	// The collection of query.
	Accounts []AccountsAccount `pulumi:"accounts"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	NameRegex *string `pulumi:"nameRegex"`
	// The id of the organization unit.
	OrgUnitId  *string `pulumi:"orgUnitId"`
	OutputFile *string `pulumi:"outputFile"`
	Search     *string `pulumi:"search"`
	// The total count of query.
	TotalCount     int     `pulumi:"totalCount"`
	VerificationId *string `pulumi:"verificationId"`
}

func AccountsOutput(ctx *pulumi.Context, args AccountsOutputArgs, opts ...pulumi.InvokeOption) AccountsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AccountsResult, error) {
			args := v.(AccountsArgs)
			r, err := Accounts(ctx, &args, opts...)
			var s AccountsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AccountsResultOutput)
}

// A collection of arguments for invoking Accounts.
type AccountsOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// The id of the organization unit.
	OrgUnitId pulumi.StringPtrInput `pulumi:"orgUnitId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The id or the show name of the account. This field supports fuzzy query.
	Search pulumi.StringPtrInput `pulumi:"search"`
	// The id of the verification.
	VerificationId pulumi.StringPtrInput `pulumi:"verificationId"`
}

func (AccountsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsArgs)(nil)).Elem()
}

// A collection of values returned by Accounts.
type AccountsResultOutput struct{ *pulumi.OutputState }

func (AccountsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsResult)(nil)).Elem()
}

func (o AccountsResultOutput) ToAccountsResultOutput() AccountsResultOutput {
	return o
}

func (o AccountsResultOutput) ToAccountsResultOutputWithContext(ctx context.Context) AccountsResultOutput {
	return o
}

// The collection of query.
func (o AccountsResultOutput) Accounts() AccountsAccountArrayOutput {
	return o.ApplyT(func(v AccountsResult) []AccountsAccount { return v.Accounts }).(AccountsAccountArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o AccountsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o AccountsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// The id of the organization unit.
func (o AccountsResultOutput) OrgUnitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountsResult) *string { return v.OrgUnitId }).(pulumi.StringPtrOutput)
}

func (o AccountsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o AccountsResultOutput) Search() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountsResult) *string { return v.Search }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o AccountsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AccountsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o AccountsResultOutput) VerificationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountsResult) *string { return v.VerificationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountsResultOutput{})
}
