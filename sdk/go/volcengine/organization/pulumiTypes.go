// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AccountTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// AccountTagInput is an input type that accepts AccountTagArgs and AccountTagOutput values.
// You can construct a concrete instance of `AccountTagInput` via:
//
//	AccountTagArgs{...}
type AccountTagInput interface {
	pulumi.Input

	ToAccountTagOutput() AccountTagOutput
	ToAccountTagOutputWithContext(context.Context) AccountTagOutput
}

type AccountTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AccountTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountTag)(nil)).Elem()
}

func (i AccountTagArgs) ToAccountTagOutput() AccountTagOutput {
	return i.ToAccountTagOutputWithContext(context.Background())
}

func (i AccountTagArgs) ToAccountTagOutputWithContext(ctx context.Context) AccountTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTagOutput)
}

// AccountTagArrayInput is an input type that accepts AccountTagArray and AccountTagArrayOutput values.
// You can construct a concrete instance of `AccountTagArrayInput` via:
//
//	AccountTagArray{ AccountTagArgs{...} }
type AccountTagArrayInput interface {
	pulumi.Input

	ToAccountTagArrayOutput() AccountTagArrayOutput
	ToAccountTagArrayOutputWithContext(context.Context) AccountTagArrayOutput
}

type AccountTagArray []AccountTagInput

func (AccountTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountTag)(nil)).Elem()
}

func (i AccountTagArray) ToAccountTagArrayOutput() AccountTagArrayOutput {
	return i.ToAccountTagArrayOutputWithContext(context.Background())
}

func (i AccountTagArray) ToAccountTagArrayOutputWithContext(ctx context.Context) AccountTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountTagArrayOutput)
}

type AccountTagOutput struct{ *pulumi.OutputState }

func (AccountTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountTag)(nil)).Elem()
}

func (o AccountTagOutput) ToAccountTagOutput() AccountTagOutput {
	return o
}

func (o AccountTagOutput) ToAccountTagOutputWithContext(ctx context.Context) AccountTagOutput {
	return o
}

// The Key of Tags.
func (o AccountTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AccountTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o AccountTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AccountTag) string { return v.Value }).(pulumi.StringOutput)
}

type AccountTagArrayOutput struct{ *pulumi.OutputState }

func (AccountTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountTag)(nil)).Elem()
}

func (o AccountTagArrayOutput) ToAccountTagArrayOutput() AccountTagArrayOutput {
	return o
}

func (o AccountTagArrayOutput) ToAccountTagArrayOutputWithContext(ctx context.Context) AccountTagArrayOutput {
	return o
}

func (o AccountTagArrayOutput) Index(i pulumi.IntInput) AccountTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountTag {
		return vs[0].([]AccountTag)[vs[1].(int)]
	}).(AccountTagOutput)
}

type AccountsAccount struct {
	// The id of the account.
	AccountId string `pulumi:"accountId"`
	// The name of the account.
	AccountName string `pulumi:"accountName"`
	// Whether to allow the account enable console. `0` means allowed, `1` means not allowed.
	AllowConsole int `pulumi:"allowConsole"`
	// Whether to allow exit the organization. `0` means allowed, `1` means not allowed.
	AllowExit int `pulumi:"allowExit"`
	// The created time of the account.
	CreatedTime string `pulumi:"createdTime"`
	// The delete uk of the account.
	DeleteUk string `pulumi:"deleteUk"`
	// The deleted time of the account.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of the account.
	Description string `pulumi:"description"`
	// The name of the iam role.
	IamRole string `pulumi:"iamRole"`
	// The id of the account.
	Id string `pulumi:"id"`
	// Whether the account is owner. `0` means not owner, `1` means owner.
	IsOwner int `pulumi:"isOwner"`
	// The join type of the account. `0` means create, `1` means invitation.
	JoinType int `pulumi:"joinType"`
	// The id of the organization.
	OrgId string `pulumi:"orgId"`
	// The type of the organization. `1` means business organization.
	OrgType int `pulumi:"orgType"`
	// The id of the organization unit.
	OrgUnitId string `pulumi:"orgUnitId"`
	// The name of the organization unit.
	OrgUnitName string `pulumi:"orgUnitName"`
	// The id of the organization verification.
	OrgVerificationId string `pulumi:"orgVerificationId"`
	// The owner id of the account.
	Owner string `pulumi:"owner"`
	// The show name of the account.
	ShowName string `pulumi:"showName"`
	// Tags.
	Tags []AccountsAccountTag `pulumi:"tags"`
	// The updated time of the account.
	UpdatedTime string `pulumi:"updatedTime"`
}

// AccountsAccountInput is an input type that accepts AccountsAccountArgs and AccountsAccountOutput values.
// You can construct a concrete instance of `AccountsAccountInput` via:
//
//	AccountsAccountArgs{...}
type AccountsAccountInput interface {
	pulumi.Input

	ToAccountsAccountOutput() AccountsAccountOutput
	ToAccountsAccountOutputWithContext(context.Context) AccountsAccountOutput
}

type AccountsAccountArgs struct {
	// The id of the account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The name of the account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Whether to allow the account enable console. `0` means allowed, `1` means not allowed.
	AllowConsole pulumi.IntInput `pulumi:"allowConsole"`
	// Whether to allow exit the organization. `0` means allowed, `1` means not allowed.
	AllowExit pulumi.IntInput `pulumi:"allowExit"`
	// The created time of the account.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// The delete uk of the account.
	DeleteUk pulumi.StringInput `pulumi:"deleteUk"`
	// The deleted time of the account.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of the account.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the iam role.
	IamRole pulumi.StringInput `pulumi:"iamRole"`
	// The id of the account.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the account is owner. `0` means not owner, `1` means owner.
	IsOwner pulumi.IntInput `pulumi:"isOwner"`
	// The join type of the account. `0` means create, `1` means invitation.
	JoinType pulumi.IntInput `pulumi:"joinType"`
	// The id of the organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The type of the organization. `1` means business organization.
	OrgType pulumi.IntInput `pulumi:"orgType"`
	// The id of the organization unit.
	OrgUnitId pulumi.StringInput `pulumi:"orgUnitId"`
	// The name of the organization unit.
	OrgUnitName pulumi.StringInput `pulumi:"orgUnitName"`
	// The id of the organization verification.
	OrgVerificationId pulumi.StringInput `pulumi:"orgVerificationId"`
	// The owner id of the account.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The show name of the account.
	ShowName pulumi.StringInput `pulumi:"showName"`
	// Tags.
	Tags AccountsAccountTagArrayInput `pulumi:"tags"`
	// The updated time of the account.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
}

func (AccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccount)(nil)).Elem()
}

func (i AccountsAccountArgs) ToAccountsAccountOutput() AccountsAccountOutput {
	return i.ToAccountsAccountOutputWithContext(context.Background())
}

func (i AccountsAccountArgs) ToAccountsAccountOutputWithContext(ctx context.Context) AccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountOutput)
}

// AccountsAccountArrayInput is an input type that accepts AccountsAccountArray and AccountsAccountArrayOutput values.
// You can construct a concrete instance of `AccountsAccountArrayInput` via:
//
//	AccountsAccountArray{ AccountsAccountArgs{...} }
type AccountsAccountArrayInput interface {
	pulumi.Input

	ToAccountsAccountArrayOutput() AccountsAccountArrayOutput
	ToAccountsAccountArrayOutputWithContext(context.Context) AccountsAccountArrayOutput
}

type AccountsAccountArray []AccountsAccountInput

func (AccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccount)(nil)).Elem()
}

func (i AccountsAccountArray) ToAccountsAccountArrayOutput() AccountsAccountArrayOutput {
	return i.ToAccountsAccountArrayOutputWithContext(context.Background())
}

func (i AccountsAccountArray) ToAccountsAccountArrayOutputWithContext(ctx context.Context) AccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountArrayOutput)
}

type AccountsAccountOutput struct{ *pulumi.OutputState }

func (AccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccount)(nil)).Elem()
}

func (o AccountsAccountOutput) ToAccountsAccountOutput() AccountsAccountOutput {
	return o
}

func (o AccountsAccountOutput) ToAccountsAccountOutputWithContext(ctx context.Context) AccountsAccountOutput {
	return o
}

// The id of the account.
func (o AccountsAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.AccountId }).(pulumi.StringOutput)
}

// The name of the account.
func (o AccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// Whether to allow the account enable console. `0` means allowed, `1` means not allowed.
func (o AccountsAccountOutput) AllowConsole() pulumi.IntOutput {
	return o.ApplyT(func(v AccountsAccount) int { return v.AllowConsole }).(pulumi.IntOutput)
}

// Whether to allow exit the organization. `0` means allowed, `1` means not allowed.
func (o AccountsAccountOutput) AllowExit() pulumi.IntOutput {
	return o.ApplyT(func(v AccountsAccount) int { return v.AllowExit }).(pulumi.IntOutput)
}

// The created time of the account.
func (o AccountsAccountOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// The delete uk of the account.
func (o AccountsAccountOutput) DeleteUk() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.DeleteUk }).(pulumi.StringOutput)
}

// The deleted time of the account.
func (o AccountsAccountOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the account.
func (o AccountsAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the iam role.
func (o AccountsAccountOutput) IamRole() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.IamRole }).(pulumi.StringOutput)
}

// The id of the account.
func (o AccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the account is owner. `0` means not owner, `1` means owner.
func (o AccountsAccountOutput) IsOwner() pulumi.IntOutput {
	return o.ApplyT(func(v AccountsAccount) int { return v.IsOwner }).(pulumi.IntOutput)
}

// The join type of the account. `0` means create, `1` means invitation.
func (o AccountsAccountOutput) JoinType() pulumi.IntOutput {
	return o.ApplyT(func(v AccountsAccount) int { return v.JoinType }).(pulumi.IntOutput)
}

// The id of the organization.
func (o AccountsAccountOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.OrgId }).(pulumi.StringOutput)
}

// The type of the organization. `1` means business organization.
func (o AccountsAccountOutput) OrgType() pulumi.IntOutput {
	return o.ApplyT(func(v AccountsAccount) int { return v.OrgType }).(pulumi.IntOutput)
}

// The id of the organization unit.
func (o AccountsAccountOutput) OrgUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.OrgUnitId }).(pulumi.StringOutput)
}

// The name of the organization unit.
func (o AccountsAccountOutput) OrgUnitName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.OrgUnitName }).(pulumi.StringOutput)
}

// The id of the organization verification.
func (o AccountsAccountOutput) OrgVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.OrgVerificationId }).(pulumi.StringOutput)
}

// The owner id of the account.
func (o AccountsAccountOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.Owner }).(pulumi.StringOutput)
}

// The show name of the account.
func (o AccountsAccountOutput) ShowName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.ShowName }).(pulumi.StringOutput)
}

// Tags.
func (o AccountsAccountOutput) Tags() AccountsAccountTagArrayOutput {
	return o.ApplyT(func(v AccountsAccount) []AccountsAccountTag { return v.Tags }).(AccountsAccountTagArrayOutput)
}

// The updated time of the account.
func (o AccountsAccountOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

type AccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (AccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccount)(nil)).Elem()
}

func (o AccountsAccountArrayOutput) ToAccountsAccountArrayOutput() AccountsAccountArrayOutput {
	return o
}

func (o AccountsAccountArrayOutput) ToAccountsAccountArrayOutputWithContext(ctx context.Context) AccountsAccountArrayOutput {
	return o
}

func (o AccountsAccountArrayOutput) Index(i pulumi.IntInput) AccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountsAccount {
		return vs[0].([]AccountsAccount)[vs[1].(int)]
	}).(AccountsAccountOutput)
}

type AccountsAccountTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// AccountsAccountTagInput is an input type that accepts AccountsAccountTagArgs and AccountsAccountTagOutput values.
// You can construct a concrete instance of `AccountsAccountTagInput` via:
//
//	AccountsAccountTagArgs{...}
type AccountsAccountTagInput interface {
	pulumi.Input

	ToAccountsAccountTagOutput() AccountsAccountTagOutput
	ToAccountsAccountTagOutputWithContext(context.Context) AccountsAccountTagOutput
}

type AccountsAccountTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AccountsAccountTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccountTag)(nil)).Elem()
}

func (i AccountsAccountTagArgs) ToAccountsAccountTagOutput() AccountsAccountTagOutput {
	return i.ToAccountsAccountTagOutputWithContext(context.Background())
}

func (i AccountsAccountTagArgs) ToAccountsAccountTagOutputWithContext(ctx context.Context) AccountsAccountTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountTagOutput)
}

// AccountsAccountTagArrayInput is an input type that accepts AccountsAccountTagArray and AccountsAccountTagArrayOutput values.
// You can construct a concrete instance of `AccountsAccountTagArrayInput` via:
//
//	AccountsAccountTagArray{ AccountsAccountTagArgs{...} }
type AccountsAccountTagArrayInput interface {
	pulumi.Input

	ToAccountsAccountTagArrayOutput() AccountsAccountTagArrayOutput
	ToAccountsAccountTagArrayOutputWithContext(context.Context) AccountsAccountTagArrayOutput
}

type AccountsAccountTagArray []AccountsAccountTagInput

func (AccountsAccountTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccountTag)(nil)).Elem()
}

func (i AccountsAccountTagArray) ToAccountsAccountTagArrayOutput() AccountsAccountTagArrayOutput {
	return i.ToAccountsAccountTagArrayOutputWithContext(context.Background())
}

func (i AccountsAccountTagArray) ToAccountsAccountTagArrayOutputWithContext(ctx context.Context) AccountsAccountTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountTagArrayOutput)
}

type AccountsAccountTagOutput struct{ *pulumi.OutputState }

func (AccountsAccountTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccountTag)(nil)).Elem()
}

func (o AccountsAccountTagOutput) ToAccountsAccountTagOutput() AccountsAccountTagOutput {
	return o
}

func (o AccountsAccountTagOutput) ToAccountsAccountTagOutputWithContext(ctx context.Context) AccountsAccountTagOutput {
	return o
}

// The Key of Tags.
func (o AccountsAccountTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccountTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o AccountsAccountTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccountTag) string { return v.Value }).(pulumi.StringOutput)
}

type AccountsAccountTagArrayOutput struct{ *pulumi.OutputState }

func (AccountsAccountTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccountTag)(nil)).Elem()
}

func (o AccountsAccountTagArrayOutput) ToAccountsAccountTagArrayOutput() AccountsAccountTagArrayOutput {
	return o
}

func (o AccountsAccountTagArrayOutput) ToAccountsAccountTagArrayOutputWithContext(ctx context.Context) AccountsAccountTagArrayOutput {
	return o
}

func (o AccountsAccountTagArrayOutput) Index(i pulumi.IntInput) AccountsAccountTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountsAccountTag {
		return vs[0].([]AccountsAccountTag)[vs[1].(int)]
	}).(AccountsAccountTagOutput)
}

type OrganizationsOrganization struct {
	// The account id of the organization owner.
	AccountId int `pulumi:"accountId"`
	// The account name of the organization owner.
	AccountName string `pulumi:"accountName"`
	// The created time of the organization.
	CreatedTime string `pulumi:"createdTime"`
	// The delete uk of the organization.
	DeleteUk string `pulumi:"deleteUk"`
	// The deleted time of the organization.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of the organization.
	Description string `pulumi:"description"`
	// The id of the organization.
	Id string `pulumi:"id"`
	// The main name of the organization owner.
	MainName string `pulumi:"mainName"`
	// The name of the organization.
	Name string `pulumi:"name"`
	// The owner id of the organization.
	Owner string `pulumi:"owner"`
	// The status of the organization.
	Status int `pulumi:"status"`
	// The type of the organization.
	Type int `pulumi:"type"`
	// The updated time of the organization.
	UpdatedTime string `pulumi:"updatedTime"`
}

// OrganizationsOrganizationInput is an input type that accepts OrganizationsOrganizationArgs and OrganizationsOrganizationOutput values.
// You can construct a concrete instance of `OrganizationsOrganizationInput` via:
//
//	OrganizationsOrganizationArgs{...}
type OrganizationsOrganizationInput interface {
	pulumi.Input

	ToOrganizationsOrganizationOutput() OrganizationsOrganizationOutput
	ToOrganizationsOrganizationOutputWithContext(context.Context) OrganizationsOrganizationOutput
}

type OrganizationsOrganizationArgs struct {
	// The account id of the organization owner.
	AccountId pulumi.IntInput `pulumi:"accountId"`
	// The account name of the organization owner.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The created time of the organization.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// The delete uk of the organization.
	DeleteUk pulumi.StringInput `pulumi:"deleteUk"`
	// The deleted time of the organization.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of the organization.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the organization.
	Id pulumi.StringInput `pulumi:"id"`
	// The main name of the organization owner.
	MainName pulumi.StringInput `pulumi:"mainName"`
	// The name of the organization.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner id of the organization.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The status of the organization.
	Status pulumi.IntInput `pulumi:"status"`
	// The type of the organization.
	Type pulumi.IntInput `pulumi:"type"`
	// The updated time of the organization.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
}

func (OrganizationsOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsOrganization)(nil)).Elem()
}

func (i OrganizationsOrganizationArgs) ToOrganizationsOrganizationOutput() OrganizationsOrganizationOutput {
	return i.ToOrganizationsOrganizationOutputWithContext(context.Background())
}

func (i OrganizationsOrganizationArgs) ToOrganizationsOrganizationOutputWithContext(ctx context.Context) OrganizationsOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsOrganizationOutput)
}

// OrganizationsOrganizationArrayInput is an input type that accepts OrganizationsOrganizationArray and OrganizationsOrganizationArrayOutput values.
// You can construct a concrete instance of `OrganizationsOrganizationArrayInput` via:
//
//	OrganizationsOrganizationArray{ OrganizationsOrganizationArgs{...} }
type OrganizationsOrganizationArrayInput interface {
	pulumi.Input

	ToOrganizationsOrganizationArrayOutput() OrganizationsOrganizationArrayOutput
	ToOrganizationsOrganizationArrayOutputWithContext(context.Context) OrganizationsOrganizationArrayOutput
}

type OrganizationsOrganizationArray []OrganizationsOrganizationInput

func (OrganizationsOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationsOrganization)(nil)).Elem()
}

func (i OrganizationsOrganizationArray) ToOrganizationsOrganizationArrayOutput() OrganizationsOrganizationArrayOutput {
	return i.ToOrganizationsOrganizationArrayOutputWithContext(context.Background())
}

func (i OrganizationsOrganizationArray) ToOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) OrganizationsOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsOrganizationArrayOutput)
}

type OrganizationsOrganizationOutput struct{ *pulumi.OutputState }

func (OrganizationsOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationsOrganization)(nil)).Elem()
}

func (o OrganizationsOrganizationOutput) ToOrganizationsOrganizationOutput() OrganizationsOrganizationOutput {
	return o
}

func (o OrganizationsOrganizationOutput) ToOrganizationsOrganizationOutputWithContext(ctx context.Context) OrganizationsOrganizationOutput {
	return o
}

// The account id of the organization owner.
func (o OrganizationsOrganizationOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v OrganizationsOrganization) int { return v.AccountId }).(pulumi.IntOutput)
}

// The account name of the organization owner.
func (o OrganizationsOrganizationOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.AccountName }).(pulumi.StringOutput)
}

// The created time of the organization.
func (o OrganizationsOrganizationOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// The delete uk of the organization.
func (o OrganizationsOrganizationOutput) DeleteUk() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.DeleteUk }).(pulumi.StringOutput)
}

// The deleted time of the organization.
func (o OrganizationsOrganizationOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the organization.
func (o OrganizationsOrganizationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the organization.
func (o OrganizationsOrganizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.Id }).(pulumi.StringOutput)
}

// The main name of the organization owner.
func (o OrganizationsOrganizationOutput) MainName() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.MainName }).(pulumi.StringOutput)
}

// The name of the organization.
func (o OrganizationsOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.Name }).(pulumi.StringOutput)
}

// The owner id of the organization.
func (o OrganizationsOrganizationOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.Owner }).(pulumi.StringOutput)
}

// The status of the organization.
func (o OrganizationsOrganizationOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v OrganizationsOrganization) int { return v.Status }).(pulumi.IntOutput)
}

// The type of the organization.
func (o OrganizationsOrganizationOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v OrganizationsOrganization) int { return v.Type }).(pulumi.IntOutput)
}

// The updated time of the organization.
func (o OrganizationsOrganizationOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationsOrganization) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

type OrganizationsOrganizationArrayOutput struct{ *pulumi.OutputState }

func (OrganizationsOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationsOrganization)(nil)).Elem()
}

func (o OrganizationsOrganizationArrayOutput) ToOrganizationsOrganizationArrayOutput() OrganizationsOrganizationArrayOutput {
	return o
}

func (o OrganizationsOrganizationArrayOutput) ToOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) OrganizationsOrganizationArrayOutput {
	return o
}

func (o OrganizationsOrganizationArrayOutput) Index(i pulumi.IntInput) OrganizationsOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationsOrganization {
		return vs[0].([]OrganizationsOrganization)[vs[1].(int)]
	}).(OrganizationsOrganizationOutput)
}

type ServiceControlPoliciesPolicy struct {
	// The create time of the Policy.
	CreateDate string `pulumi:"createDate"`
	// The description of the Policy.
	Description string `pulumi:"description"`
	// The ID of the Policy.
	Id string `pulumi:"id"`
	// The name of the Policy.
	PolicyName string `pulumi:"policyName"`
	// The type of policy. The value can be System or Custom.
	PolicyType string `pulumi:"policyType"`
	// The statement of the Policy.
	Statement string `pulumi:"statement"`
	// The update time of the Policy.
	UpdateDate string `pulumi:"updateDate"`
}

// ServiceControlPoliciesPolicyInput is an input type that accepts ServiceControlPoliciesPolicyArgs and ServiceControlPoliciesPolicyOutput values.
// You can construct a concrete instance of `ServiceControlPoliciesPolicyInput` via:
//
//	ServiceControlPoliciesPolicyArgs{...}
type ServiceControlPoliciesPolicyInput interface {
	pulumi.Input

	ToServiceControlPoliciesPolicyOutput() ServiceControlPoliciesPolicyOutput
	ToServiceControlPoliciesPolicyOutputWithContext(context.Context) ServiceControlPoliciesPolicyOutput
}

type ServiceControlPoliciesPolicyArgs struct {
	// The create time of the Policy.
	CreateDate pulumi.StringInput `pulumi:"createDate"`
	// The description of the Policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// The type of policy. The value can be System or Custom.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// The statement of the Policy.
	Statement pulumi.StringInput `pulumi:"statement"`
	// The update time of the Policy.
	UpdateDate pulumi.StringInput `pulumi:"updateDate"`
}

func (ServiceControlPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceControlPoliciesPolicy)(nil)).Elem()
}

func (i ServiceControlPoliciesPolicyArgs) ToServiceControlPoliciesPolicyOutput() ServiceControlPoliciesPolicyOutput {
	return i.ToServiceControlPoliciesPolicyOutputWithContext(context.Background())
}

func (i ServiceControlPoliciesPolicyArgs) ToServiceControlPoliciesPolicyOutputWithContext(ctx context.Context) ServiceControlPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceControlPoliciesPolicyOutput)
}

// ServiceControlPoliciesPolicyArrayInput is an input type that accepts ServiceControlPoliciesPolicyArray and ServiceControlPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `ServiceControlPoliciesPolicyArrayInput` via:
//
//	ServiceControlPoliciesPolicyArray{ ServiceControlPoliciesPolicyArgs{...} }
type ServiceControlPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToServiceControlPoliciesPolicyArrayOutput() ServiceControlPoliciesPolicyArrayOutput
	ToServiceControlPoliciesPolicyArrayOutputWithContext(context.Context) ServiceControlPoliciesPolicyArrayOutput
}

type ServiceControlPoliciesPolicyArray []ServiceControlPoliciesPolicyInput

func (ServiceControlPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceControlPoliciesPolicy)(nil)).Elem()
}

func (i ServiceControlPoliciesPolicyArray) ToServiceControlPoliciesPolicyArrayOutput() ServiceControlPoliciesPolicyArrayOutput {
	return i.ToServiceControlPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i ServiceControlPoliciesPolicyArray) ToServiceControlPoliciesPolicyArrayOutputWithContext(ctx context.Context) ServiceControlPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceControlPoliciesPolicyArrayOutput)
}

type ServiceControlPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (ServiceControlPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceControlPoliciesPolicy)(nil)).Elem()
}

func (o ServiceControlPoliciesPolicyOutput) ToServiceControlPoliciesPolicyOutput() ServiceControlPoliciesPolicyOutput {
	return o
}

func (o ServiceControlPoliciesPolicyOutput) ToServiceControlPoliciesPolicyOutputWithContext(ctx context.Context) ServiceControlPoliciesPolicyOutput {
	return o
}

// The create time of the Policy.
func (o ServiceControlPoliciesPolicyOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceControlPoliciesPolicy) string { return v.CreateDate }).(pulumi.StringOutput)
}

// The description of the Policy.
func (o ServiceControlPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceControlPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Policy.
func (o ServiceControlPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceControlPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Policy.
func (o ServiceControlPoliciesPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceControlPoliciesPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

// The type of policy. The value can be System or Custom.
func (o ServiceControlPoliciesPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceControlPoliciesPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// The statement of the Policy.
func (o ServiceControlPoliciesPolicyOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceControlPoliciesPolicy) string { return v.Statement }).(pulumi.StringOutput)
}

// The update time of the Policy.
func (o ServiceControlPoliciesPolicyOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceControlPoliciesPolicy) string { return v.UpdateDate }).(pulumi.StringOutput)
}

type ServiceControlPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (ServiceControlPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceControlPoliciesPolicy)(nil)).Elem()
}

func (o ServiceControlPoliciesPolicyArrayOutput) ToServiceControlPoliciesPolicyArrayOutput() ServiceControlPoliciesPolicyArrayOutput {
	return o
}

func (o ServiceControlPoliciesPolicyArrayOutput) ToServiceControlPoliciesPolicyArrayOutputWithContext(ctx context.Context) ServiceControlPoliciesPolicyArrayOutput {
	return o
}

func (o ServiceControlPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) ServiceControlPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceControlPoliciesPolicy {
		return vs[0].([]ServiceControlPoliciesPolicy)[vs[1].(int)]
	}).(ServiceControlPoliciesPolicyOutput)
}

type UnitsUnit struct {
	// The created time of the organization unit.
	CreatedTime string `pulumi:"createdTime"`
	// Delete marker.
	DeleteUk string `pulumi:"deleteUk"`
	// The deleted time of the organization unit.
	DeletedTime string `pulumi:"deletedTime"`
	// The depth of the organization unit.
	Depth int `pulumi:"depth"`
	// The description of the organization unit.
	Description string `pulumi:"description"`
	// The id of the organization unit.
	Id string `pulumi:"id"`
	// The name of the organization unit.
	Name string `pulumi:"name"`
	// The id of the organization.
	OrgId string `pulumi:"orgId"`
	// The organization type.
	OrgType int `pulumi:"orgType"`
	// The owner of the organization unit.
	Owner string `pulumi:"owner"`
	// Parent Unit ID.
	ParentId string `pulumi:"parentId"`
	// The updated time of the organization unit.
	UpdatedTime string `pulumi:"updatedTime"`
}

// UnitsUnitInput is an input type that accepts UnitsUnitArgs and UnitsUnitOutput values.
// You can construct a concrete instance of `UnitsUnitInput` via:
//
//	UnitsUnitArgs{...}
type UnitsUnitInput interface {
	pulumi.Input

	ToUnitsUnitOutput() UnitsUnitOutput
	ToUnitsUnitOutputWithContext(context.Context) UnitsUnitOutput
}

type UnitsUnitArgs struct {
	// The created time of the organization unit.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// Delete marker.
	DeleteUk pulumi.StringInput `pulumi:"deleteUk"`
	// The deleted time of the organization unit.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The depth of the organization unit.
	Depth pulumi.IntInput `pulumi:"depth"`
	// The description of the organization unit.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the organization unit.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the organization unit.
	Name pulumi.StringInput `pulumi:"name"`
	// The id of the organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The organization type.
	OrgType pulumi.IntInput `pulumi:"orgType"`
	// The owner of the organization unit.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Parent Unit ID.
	ParentId pulumi.StringInput `pulumi:"parentId"`
	// The updated time of the organization unit.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
}

func (UnitsUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UnitsUnit)(nil)).Elem()
}

func (i UnitsUnitArgs) ToUnitsUnitOutput() UnitsUnitOutput {
	return i.ToUnitsUnitOutputWithContext(context.Background())
}

func (i UnitsUnitArgs) ToUnitsUnitOutputWithContext(ctx context.Context) UnitsUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnitsUnitOutput)
}

// UnitsUnitArrayInput is an input type that accepts UnitsUnitArray and UnitsUnitArrayOutput values.
// You can construct a concrete instance of `UnitsUnitArrayInput` via:
//
//	UnitsUnitArray{ UnitsUnitArgs{...} }
type UnitsUnitArrayInput interface {
	pulumi.Input

	ToUnitsUnitArrayOutput() UnitsUnitArrayOutput
	ToUnitsUnitArrayOutputWithContext(context.Context) UnitsUnitArrayOutput
}

type UnitsUnitArray []UnitsUnitInput

func (UnitsUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnitsUnit)(nil)).Elem()
}

func (i UnitsUnitArray) ToUnitsUnitArrayOutput() UnitsUnitArrayOutput {
	return i.ToUnitsUnitArrayOutputWithContext(context.Background())
}

func (i UnitsUnitArray) ToUnitsUnitArrayOutputWithContext(ctx context.Context) UnitsUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UnitsUnitArrayOutput)
}

type UnitsUnitOutput struct{ *pulumi.OutputState }

func (UnitsUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UnitsUnit)(nil)).Elem()
}

func (o UnitsUnitOutput) ToUnitsUnitOutput() UnitsUnitOutput {
	return o
}

func (o UnitsUnitOutput) ToUnitsUnitOutputWithContext(ctx context.Context) UnitsUnitOutput {
	return o
}

// The created time of the organization unit.
func (o UnitsUnitOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Delete marker.
func (o UnitsUnitOutput) DeleteUk() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.DeleteUk }).(pulumi.StringOutput)
}

// The deleted time of the organization unit.
func (o UnitsUnitOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The depth of the organization unit.
func (o UnitsUnitOutput) Depth() pulumi.IntOutput {
	return o.ApplyT(func(v UnitsUnit) int { return v.Depth }).(pulumi.IntOutput)
}

// The description of the organization unit.
func (o UnitsUnitOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the organization unit.
func (o UnitsUnitOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the organization unit.
func (o UnitsUnitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization.
func (o UnitsUnitOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.OrgId }).(pulumi.StringOutput)
}

// The organization type.
func (o UnitsUnitOutput) OrgType() pulumi.IntOutput {
	return o.ApplyT(func(v UnitsUnit) int { return v.OrgType }).(pulumi.IntOutput)
}

// The owner of the organization unit.
func (o UnitsUnitOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.Owner }).(pulumi.StringOutput)
}

// Parent Unit ID.
func (o UnitsUnitOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.ParentId }).(pulumi.StringOutput)
}

// The updated time of the organization unit.
func (o UnitsUnitOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v UnitsUnit) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

type UnitsUnitArrayOutput struct{ *pulumi.OutputState }

func (UnitsUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UnitsUnit)(nil)).Elem()
}

func (o UnitsUnitArrayOutput) ToUnitsUnitArrayOutput() UnitsUnitArrayOutput {
	return o
}

func (o UnitsUnitArrayOutput) ToUnitsUnitArrayOutputWithContext(ctx context.Context) UnitsUnitArrayOutput {
	return o
}

func (o UnitsUnitArrayOutput) Index(i pulumi.IntInput) UnitsUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UnitsUnit {
		return vs[0].([]UnitsUnit)[vs[1].(int)]
	}).(UnitsUnitOutput)
}

type GetAccountsAccount struct {
	// The id of the account.
	AccountId string `pulumi:"accountId"`
	// The name of the account.
	AccountName string `pulumi:"accountName"`
	// Whether to allow the account enable console. `0` means allowed, `1` means not allowed.
	AllowConsole int `pulumi:"allowConsole"`
	// Whether to allow exit the organization. `0` means allowed, `1` means not allowed.
	AllowExit int `pulumi:"allowExit"`
	// The created time of the account.
	CreatedTime string `pulumi:"createdTime"`
	// The delete uk of the account.
	DeleteUk string `pulumi:"deleteUk"`
	// The deleted time of the account.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of the account.
	Description string `pulumi:"description"`
	// The name of the iam role.
	IamRole string `pulumi:"iamRole"`
	// The id of the account.
	Id string `pulumi:"id"`
	// Whether the account is owner. `0` means not owner, `1` means owner.
	IsOwner int `pulumi:"isOwner"`
	// The join type of the account. `0` means create, `1` means invitation.
	JoinType int `pulumi:"joinType"`
	// The id of the organization.
	OrgId string `pulumi:"orgId"`
	// The type of the organization. `1` means business organization.
	OrgType int `pulumi:"orgType"`
	// The id of the organization unit.
	OrgUnitId string `pulumi:"orgUnitId"`
	// The name of the organization unit.
	OrgUnitName string `pulumi:"orgUnitName"`
	// The id of the organization verification.
	OrgVerificationId string `pulumi:"orgVerificationId"`
	// The owner id of the account.
	Owner string `pulumi:"owner"`
	// The show name of the account.
	ShowName string `pulumi:"showName"`
	// Tags.
	Tags []GetAccountsAccountTag `pulumi:"tags"`
	// The updated time of the account.
	UpdatedTime string `pulumi:"updatedTime"`
}

// GetAccountsAccountInput is an input type that accepts GetAccountsAccountArgs and GetAccountsAccountOutput values.
// You can construct a concrete instance of `GetAccountsAccountInput` via:
//
//	GetAccountsAccountArgs{...}
type GetAccountsAccountInput interface {
	pulumi.Input

	ToGetAccountsAccountOutput() GetAccountsAccountOutput
	ToGetAccountsAccountOutputWithContext(context.Context) GetAccountsAccountOutput
}

type GetAccountsAccountArgs struct {
	// The id of the account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The name of the account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Whether to allow the account enable console. `0` means allowed, `1` means not allowed.
	AllowConsole pulumi.IntInput `pulumi:"allowConsole"`
	// Whether to allow exit the organization. `0` means allowed, `1` means not allowed.
	AllowExit pulumi.IntInput `pulumi:"allowExit"`
	// The created time of the account.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// The delete uk of the account.
	DeleteUk pulumi.StringInput `pulumi:"deleteUk"`
	// The deleted time of the account.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of the account.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the iam role.
	IamRole pulumi.StringInput `pulumi:"iamRole"`
	// The id of the account.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the account is owner. `0` means not owner, `1` means owner.
	IsOwner pulumi.IntInput `pulumi:"isOwner"`
	// The join type of the account. `0` means create, `1` means invitation.
	JoinType pulumi.IntInput `pulumi:"joinType"`
	// The id of the organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The type of the organization. `1` means business organization.
	OrgType pulumi.IntInput `pulumi:"orgType"`
	// The id of the organization unit.
	OrgUnitId pulumi.StringInput `pulumi:"orgUnitId"`
	// The name of the organization unit.
	OrgUnitName pulumi.StringInput `pulumi:"orgUnitName"`
	// The id of the organization verification.
	OrgVerificationId pulumi.StringInput `pulumi:"orgVerificationId"`
	// The owner id of the account.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The show name of the account.
	ShowName pulumi.StringInput `pulumi:"showName"`
	// Tags.
	Tags GetAccountsAccountTagArrayInput `pulumi:"tags"`
	// The updated time of the account.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
}

func (GetAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return i.ToGetAccountsAccountOutputWithContext(context.Background())
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountOutput)
}

// GetAccountsAccountArrayInput is an input type that accepts GetAccountsAccountArray and GetAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountArrayInput` via:
//
//	GetAccountsAccountArray{ GetAccountsAccountArgs{...} }
type GetAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput
	ToGetAccountsAccountArrayOutputWithContext(context.Context) GetAccountsAccountArrayOutput
}

type GetAccountsAccountArray []GetAccountsAccountInput

func (GetAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return i.ToGetAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountArrayOutput)
}

type GetAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return o
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return o
}

// The id of the account.
func (o GetAccountsAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountId }).(pulumi.StringOutput)
}

// The name of the account.
func (o GetAccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// Whether to allow the account enable console. `0` means allowed, `1` means not allowed.
func (o GetAccountsAccountOutput) AllowConsole() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountsAccount) int { return v.AllowConsole }).(pulumi.IntOutput)
}

// Whether to allow exit the organization. `0` means allowed, `1` means not allowed.
func (o GetAccountsAccountOutput) AllowExit() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountsAccount) int { return v.AllowExit }).(pulumi.IntOutput)
}

// The created time of the account.
func (o GetAccountsAccountOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// The delete uk of the account.
func (o GetAccountsAccountOutput) DeleteUk() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.DeleteUk }).(pulumi.StringOutput)
}

// The deleted time of the account.
func (o GetAccountsAccountOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the account.
func (o GetAccountsAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the iam role.
func (o GetAccountsAccountOutput) IamRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.IamRole }).(pulumi.StringOutput)
}

// The id of the account.
func (o GetAccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the account is owner. `0` means not owner, `1` means owner.
func (o GetAccountsAccountOutput) IsOwner() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountsAccount) int { return v.IsOwner }).(pulumi.IntOutput)
}

// The join type of the account. `0` means create, `1` means invitation.
func (o GetAccountsAccountOutput) JoinType() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountsAccount) int { return v.JoinType }).(pulumi.IntOutput)
}

// The id of the organization.
func (o GetAccountsAccountOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.OrgId }).(pulumi.StringOutput)
}

// The type of the organization. `1` means business organization.
func (o GetAccountsAccountOutput) OrgType() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountsAccount) int { return v.OrgType }).(pulumi.IntOutput)
}

// The id of the organization unit.
func (o GetAccountsAccountOutput) OrgUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.OrgUnitId }).(pulumi.StringOutput)
}

// The name of the organization unit.
func (o GetAccountsAccountOutput) OrgUnitName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.OrgUnitName }).(pulumi.StringOutput)
}

// The id of the organization verification.
func (o GetAccountsAccountOutput) OrgVerificationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.OrgVerificationId }).(pulumi.StringOutput)
}

// The owner id of the account.
func (o GetAccountsAccountOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Owner }).(pulumi.StringOutput)
}

// The show name of the account.
func (o GetAccountsAccountOutput) ShowName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.ShowName }).(pulumi.StringOutput)
}

// Tags.
func (o GetAccountsAccountOutput) Tags() GetAccountsAccountTagArrayOutput {
	return o.ApplyT(func(v GetAccountsAccount) []GetAccountsAccountTag { return v.Tags }).(GetAccountsAccountTagArrayOutput)
}

// The updated time of the account.
func (o GetAccountsAccountOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

type GetAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccount {
		return vs[0].([]GetAccountsAccount)[vs[1].(int)]
	}).(GetAccountsAccountOutput)
}

type GetAccountsAccountTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetAccountsAccountTagInput is an input type that accepts GetAccountsAccountTagArgs and GetAccountsAccountTagOutput values.
// You can construct a concrete instance of `GetAccountsAccountTagInput` via:
//
//	GetAccountsAccountTagArgs{...}
type GetAccountsAccountTagInput interface {
	pulumi.Input

	ToGetAccountsAccountTagOutput() GetAccountsAccountTagOutput
	ToGetAccountsAccountTagOutputWithContext(context.Context) GetAccountsAccountTagOutput
}

type GetAccountsAccountTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAccountsAccountTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccountTag)(nil)).Elem()
}

func (i GetAccountsAccountTagArgs) ToGetAccountsAccountTagOutput() GetAccountsAccountTagOutput {
	return i.ToGetAccountsAccountTagOutputWithContext(context.Background())
}

func (i GetAccountsAccountTagArgs) ToGetAccountsAccountTagOutputWithContext(ctx context.Context) GetAccountsAccountTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountTagOutput)
}

// GetAccountsAccountTagArrayInput is an input type that accepts GetAccountsAccountTagArray and GetAccountsAccountTagArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountTagArrayInput` via:
//
//	GetAccountsAccountTagArray{ GetAccountsAccountTagArgs{...} }
type GetAccountsAccountTagArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountTagArrayOutput() GetAccountsAccountTagArrayOutput
	ToGetAccountsAccountTagArrayOutputWithContext(context.Context) GetAccountsAccountTagArrayOutput
}

type GetAccountsAccountTagArray []GetAccountsAccountTagInput

func (GetAccountsAccountTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccountTag)(nil)).Elem()
}

func (i GetAccountsAccountTagArray) ToGetAccountsAccountTagArrayOutput() GetAccountsAccountTagArrayOutput {
	return i.ToGetAccountsAccountTagArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountTagArray) ToGetAccountsAccountTagArrayOutputWithContext(ctx context.Context) GetAccountsAccountTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountTagArrayOutput)
}

type GetAccountsAccountTagOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccountTag)(nil)).Elem()
}

func (o GetAccountsAccountTagOutput) ToGetAccountsAccountTagOutput() GetAccountsAccountTagOutput {
	return o
}

func (o GetAccountsAccountTagOutput) ToGetAccountsAccountTagOutputWithContext(ctx context.Context) GetAccountsAccountTagOutput {
	return o
}

// The Key of Tags.
func (o GetAccountsAccountTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetAccountsAccountTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetAccountsAccountTagArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccountTag)(nil)).Elem()
}

func (o GetAccountsAccountTagArrayOutput) ToGetAccountsAccountTagArrayOutput() GetAccountsAccountTagArrayOutput {
	return o
}

func (o GetAccountsAccountTagArrayOutput) ToGetAccountsAccountTagArrayOutputWithContext(ctx context.Context) GetAccountsAccountTagArrayOutput {
	return o
}

func (o GetAccountsAccountTagArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccountTag {
		return vs[0].([]GetAccountsAccountTag)[vs[1].(int)]
	}).(GetAccountsAccountTagOutput)
}

type GetOrganizationsOrganization struct {
	// The account id of the organization owner.
	AccountId int `pulumi:"accountId"`
	// The account name of the organization owner.
	AccountName string `pulumi:"accountName"`
	// The created time of the organization.
	CreatedTime string `pulumi:"createdTime"`
	// The delete uk of the organization.
	DeleteUk string `pulumi:"deleteUk"`
	// The deleted time of the organization.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of the organization.
	Description string `pulumi:"description"`
	// The id of the organization.
	Id string `pulumi:"id"`
	// The main name of the organization owner.
	MainName string `pulumi:"mainName"`
	// The name of the organization.
	Name string `pulumi:"name"`
	// The owner id of the organization.
	Owner string `pulumi:"owner"`
	// The status of the organization.
	Status int `pulumi:"status"`
	// The type of the organization.
	Type int `pulumi:"type"`
	// The updated time of the organization.
	UpdatedTime string `pulumi:"updatedTime"`
}

// GetOrganizationsOrganizationInput is an input type that accepts GetOrganizationsOrganizationArgs and GetOrganizationsOrganizationOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationInput` via:
//
//	GetOrganizationsOrganizationArgs{...}
type GetOrganizationsOrganizationInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput
	ToGetOrganizationsOrganizationOutputWithContext(context.Context) GetOrganizationsOrganizationOutput
}

type GetOrganizationsOrganizationArgs struct {
	// The account id of the organization owner.
	AccountId pulumi.IntInput `pulumi:"accountId"`
	// The account name of the organization owner.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The created time of the organization.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// The delete uk of the organization.
	DeleteUk pulumi.StringInput `pulumi:"deleteUk"`
	// The deleted time of the organization.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of the organization.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the organization.
	Id pulumi.StringInput `pulumi:"id"`
	// The main name of the organization owner.
	MainName pulumi.StringInput `pulumi:"mainName"`
	// The name of the organization.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner id of the organization.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The status of the organization.
	Status pulumi.IntInput `pulumi:"status"`
	// The type of the organization.
	Type pulumi.IntInput `pulumi:"type"`
	// The updated time of the organization.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
}

func (GetOrganizationsOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return i.ToGetOrganizationsOrganizationOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationOutput)
}

// GetOrganizationsOrganizationArrayInput is an input type that accepts GetOrganizationsOrganizationArray and GetOrganizationsOrganizationArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationArrayInput` via:
//
//	GetOrganizationsOrganizationArray{ GetOrganizationsOrganizationArgs{...} }
type GetOrganizationsOrganizationArrayInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput
	ToGetOrganizationsOrganizationArrayOutputWithContext(context.Context) GetOrganizationsOrganizationArrayOutput
}

type GetOrganizationsOrganizationArray []GetOrganizationsOrganizationInput

func (GetOrganizationsOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return i.ToGetOrganizationsOrganizationArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationArrayOutput)
}

type GetOrganizationsOrganizationOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return o
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return o
}

// The account id of the organization owner.
func (o GetOrganizationsOrganizationOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) int { return v.AccountId }).(pulumi.IntOutput)
}

// The account name of the organization owner.
func (o GetOrganizationsOrganizationOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.AccountName }).(pulumi.StringOutput)
}

// The created time of the organization.
func (o GetOrganizationsOrganizationOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// The delete uk of the organization.
func (o GetOrganizationsOrganizationOutput) DeleteUk() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.DeleteUk }).(pulumi.StringOutput)
}

// The deleted time of the organization.
func (o GetOrganizationsOrganizationOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the organization.
func (o GetOrganizationsOrganizationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the organization.
func (o GetOrganizationsOrganizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Id }).(pulumi.StringOutput)
}

// The main name of the organization owner.
func (o GetOrganizationsOrganizationOutput) MainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.MainName }).(pulumi.StringOutput)
}

// The name of the organization.
func (o GetOrganizationsOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Name }).(pulumi.StringOutput)
}

// The owner id of the organization.
func (o GetOrganizationsOrganizationOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Owner }).(pulumi.StringOutput)
}

// The status of the organization.
func (o GetOrganizationsOrganizationOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) int { return v.Status }).(pulumi.IntOutput)
}

// The type of the organization.
func (o GetOrganizationsOrganizationOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) int { return v.Type }).(pulumi.IntOutput)
}

// The updated time of the organization.
func (o GetOrganizationsOrganizationOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

type GetOrganizationsOrganizationArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) Index(i pulumi.IntInput) GetOrganizationsOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsOrganization {
		return vs[0].([]GetOrganizationsOrganization)[vs[1].(int)]
	}).(GetOrganizationsOrganizationOutput)
}

type GetServiceControlPoliciesPolicy struct {
	// The create time of the Policy.
	CreateDate string `pulumi:"createDate"`
	// The description of the Policy.
	Description string `pulumi:"description"`
	// The ID of the Policy.
	Id string `pulumi:"id"`
	// The name of the Policy.
	PolicyName string `pulumi:"policyName"`
	// The type of policy. The value can be System or Custom.
	PolicyType string `pulumi:"policyType"`
	// The statement of the Policy.
	Statement string `pulumi:"statement"`
	// The update time of the Policy.
	UpdateDate string `pulumi:"updateDate"`
}

// GetServiceControlPoliciesPolicyInput is an input type that accepts GetServiceControlPoliciesPolicyArgs and GetServiceControlPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetServiceControlPoliciesPolicyInput` via:
//
//	GetServiceControlPoliciesPolicyArgs{...}
type GetServiceControlPoliciesPolicyInput interface {
	pulumi.Input

	ToGetServiceControlPoliciesPolicyOutput() GetServiceControlPoliciesPolicyOutput
	ToGetServiceControlPoliciesPolicyOutputWithContext(context.Context) GetServiceControlPoliciesPolicyOutput
}

type GetServiceControlPoliciesPolicyArgs struct {
	// The create time of the Policy.
	CreateDate pulumi.StringInput `pulumi:"createDate"`
	// The description of the Policy.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// The type of policy. The value can be System or Custom.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// The statement of the Policy.
	Statement pulumi.StringInput `pulumi:"statement"`
	// The update time of the Policy.
	UpdateDate pulumi.StringInput `pulumi:"updateDate"`
}

func (GetServiceControlPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceControlPoliciesPolicy)(nil)).Elem()
}

func (i GetServiceControlPoliciesPolicyArgs) ToGetServiceControlPoliciesPolicyOutput() GetServiceControlPoliciesPolicyOutput {
	return i.ToGetServiceControlPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetServiceControlPoliciesPolicyArgs) ToGetServiceControlPoliciesPolicyOutputWithContext(ctx context.Context) GetServiceControlPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceControlPoliciesPolicyOutput)
}

// GetServiceControlPoliciesPolicyArrayInput is an input type that accepts GetServiceControlPoliciesPolicyArray and GetServiceControlPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetServiceControlPoliciesPolicyArrayInput` via:
//
//	GetServiceControlPoliciesPolicyArray{ GetServiceControlPoliciesPolicyArgs{...} }
type GetServiceControlPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetServiceControlPoliciesPolicyArrayOutput() GetServiceControlPoliciesPolicyArrayOutput
	ToGetServiceControlPoliciesPolicyArrayOutputWithContext(context.Context) GetServiceControlPoliciesPolicyArrayOutput
}

type GetServiceControlPoliciesPolicyArray []GetServiceControlPoliciesPolicyInput

func (GetServiceControlPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceControlPoliciesPolicy)(nil)).Elem()
}

func (i GetServiceControlPoliciesPolicyArray) ToGetServiceControlPoliciesPolicyArrayOutput() GetServiceControlPoliciesPolicyArrayOutput {
	return i.ToGetServiceControlPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetServiceControlPoliciesPolicyArray) ToGetServiceControlPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetServiceControlPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceControlPoliciesPolicyArrayOutput)
}

type GetServiceControlPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetServiceControlPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceControlPoliciesPolicy)(nil)).Elem()
}

func (o GetServiceControlPoliciesPolicyOutput) ToGetServiceControlPoliciesPolicyOutput() GetServiceControlPoliciesPolicyOutput {
	return o
}

func (o GetServiceControlPoliciesPolicyOutput) ToGetServiceControlPoliciesPolicyOutputWithContext(ctx context.Context) GetServiceControlPoliciesPolicyOutput {
	return o
}

// The create time of the Policy.
func (o GetServiceControlPoliciesPolicyOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceControlPoliciesPolicy) string { return v.CreateDate }).(pulumi.StringOutput)
}

// The description of the Policy.
func (o GetServiceControlPoliciesPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceControlPoliciesPolicy) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Policy.
func (o GetServiceControlPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceControlPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Policy.
func (o GetServiceControlPoliciesPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceControlPoliciesPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

// The type of policy. The value can be System or Custom.
func (o GetServiceControlPoliciesPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceControlPoliciesPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// The statement of the Policy.
func (o GetServiceControlPoliciesPolicyOutput) Statement() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceControlPoliciesPolicy) string { return v.Statement }).(pulumi.StringOutput)
}

// The update time of the Policy.
func (o GetServiceControlPoliciesPolicyOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceControlPoliciesPolicy) string { return v.UpdateDate }).(pulumi.StringOutput)
}

type GetServiceControlPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetServiceControlPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceControlPoliciesPolicy)(nil)).Elem()
}

func (o GetServiceControlPoliciesPolicyArrayOutput) ToGetServiceControlPoliciesPolicyArrayOutput() GetServiceControlPoliciesPolicyArrayOutput {
	return o
}

func (o GetServiceControlPoliciesPolicyArrayOutput) ToGetServiceControlPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetServiceControlPoliciesPolicyArrayOutput {
	return o
}

func (o GetServiceControlPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetServiceControlPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceControlPoliciesPolicy {
		return vs[0].([]GetServiceControlPoliciesPolicy)[vs[1].(int)]
	}).(GetServiceControlPoliciesPolicyOutput)
}

type GetUnitsUnit struct {
	// The created time of the organization unit.
	CreatedTime string `pulumi:"createdTime"`
	// Delete marker.
	DeleteUk string `pulumi:"deleteUk"`
	// The deleted time of the organization unit.
	DeletedTime string `pulumi:"deletedTime"`
	// The depth of the organization unit.
	Depth int `pulumi:"depth"`
	// The description of the organization unit.
	Description string `pulumi:"description"`
	// The id of the organization unit.
	Id string `pulumi:"id"`
	// The name of the organization unit.
	Name string `pulumi:"name"`
	// The id of the organization.
	OrgId string `pulumi:"orgId"`
	// The organization type.
	OrgType int `pulumi:"orgType"`
	// The owner of the organization unit.
	Owner string `pulumi:"owner"`
	// Parent Unit ID.
	ParentId string `pulumi:"parentId"`
	// The updated time of the organization unit.
	UpdatedTime string `pulumi:"updatedTime"`
}

// GetUnitsUnitInput is an input type that accepts GetUnitsUnitArgs and GetUnitsUnitOutput values.
// You can construct a concrete instance of `GetUnitsUnitInput` via:
//
//	GetUnitsUnitArgs{...}
type GetUnitsUnitInput interface {
	pulumi.Input

	ToGetUnitsUnitOutput() GetUnitsUnitOutput
	ToGetUnitsUnitOutputWithContext(context.Context) GetUnitsUnitOutput
}

type GetUnitsUnitArgs struct {
	// The created time of the organization unit.
	CreatedTime pulumi.StringInput `pulumi:"createdTime"`
	// Delete marker.
	DeleteUk pulumi.StringInput `pulumi:"deleteUk"`
	// The deleted time of the organization unit.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The depth of the organization unit.
	Depth pulumi.IntInput `pulumi:"depth"`
	// The description of the organization unit.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the organization unit.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the organization unit.
	Name pulumi.StringInput `pulumi:"name"`
	// The id of the organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// The organization type.
	OrgType pulumi.IntInput `pulumi:"orgType"`
	// The owner of the organization unit.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Parent Unit ID.
	ParentId pulumi.StringInput `pulumi:"parentId"`
	// The updated time of the organization unit.
	UpdatedTime pulumi.StringInput `pulumi:"updatedTime"`
}

func (GetUnitsUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnitsUnit)(nil)).Elem()
}

func (i GetUnitsUnitArgs) ToGetUnitsUnitOutput() GetUnitsUnitOutput {
	return i.ToGetUnitsUnitOutputWithContext(context.Background())
}

func (i GetUnitsUnitArgs) ToGetUnitsUnitOutputWithContext(ctx context.Context) GetUnitsUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnitsUnitOutput)
}

// GetUnitsUnitArrayInput is an input type that accepts GetUnitsUnitArray and GetUnitsUnitArrayOutput values.
// You can construct a concrete instance of `GetUnitsUnitArrayInput` via:
//
//	GetUnitsUnitArray{ GetUnitsUnitArgs{...} }
type GetUnitsUnitArrayInput interface {
	pulumi.Input

	ToGetUnitsUnitArrayOutput() GetUnitsUnitArrayOutput
	ToGetUnitsUnitArrayOutputWithContext(context.Context) GetUnitsUnitArrayOutput
}

type GetUnitsUnitArray []GetUnitsUnitInput

func (GetUnitsUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnitsUnit)(nil)).Elem()
}

func (i GetUnitsUnitArray) ToGetUnitsUnitArrayOutput() GetUnitsUnitArrayOutput {
	return i.ToGetUnitsUnitArrayOutputWithContext(context.Background())
}

func (i GetUnitsUnitArray) ToGetUnitsUnitArrayOutputWithContext(ctx context.Context) GetUnitsUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUnitsUnitArrayOutput)
}

type GetUnitsUnitOutput struct{ *pulumi.OutputState }

func (GetUnitsUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUnitsUnit)(nil)).Elem()
}

func (o GetUnitsUnitOutput) ToGetUnitsUnitOutput() GetUnitsUnitOutput {
	return o
}

func (o GetUnitsUnitOutput) ToGetUnitsUnitOutputWithContext(ctx context.Context) GetUnitsUnitOutput {
	return o
}

// The created time of the organization unit.
func (o GetUnitsUnitOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// Delete marker.
func (o GetUnitsUnitOutput) DeleteUk() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.DeleteUk }).(pulumi.StringOutput)
}

// The deleted time of the organization unit.
func (o GetUnitsUnitOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The depth of the organization unit.
func (o GetUnitsUnitOutput) Depth() pulumi.IntOutput {
	return o.ApplyT(func(v GetUnitsUnit) int { return v.Depth }).(pulumi.IntOutput)
}

// The description of the organization unit.
func (o GetUnitsUnitOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the organization unit.
func (o GetUnitsUnitOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the organization unit.
func (o GetUnitsUnitOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.Name }).(pulumi.StringOutput)
}

// The id of the organization.
func (o GetUnitsUnitOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.OrgId }).(pulumi.StringOutput)
}

// The organization type.
func (o GetUnitsUnitOutput) OrgType() pulumi.IntOutput {
	return o.ApplyT(func(v GetUnitsUnit) int { return v.OrgType }).(pulumi.IntOutput)
}

// The owner of the organization unit.
func (o GetUnitsUnitOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.Owner }).(pulumi.StringOutput)
}

// Parent Unit ID.
func (o GetUnitsUnitOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.ParentId }).(pulumi.StringOutput)
}

// The updated time of the organization unit.
func (o GetUnitsUnitOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetUnitsUnit) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

type GetUnitsUnitArrayOutput struct{ *pulumi.OutputState }

func (GetUnitsUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUnitsUnit)(nil)).Elem()
}

func (o GetUnitsUnitArrayOutput) ToGetUnitsUnitArrayOutput() GetUnitsUnitArrayOutput {
	return o
}

func (o GetUnitsUnitArrayOutput) ToGetUnitsUnitArrayOutputWithContext(ctx context.Context) GetUnitsUnitArrayOutput {
	return o
}

func (o GetUnitsUnitArrayOutput) Index(i pulumi.IntInput) GetUnitsUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUnitsUnit {
		return vs[0].([]GetUnitsUnit)[vs[1].(int)]
	}).(GetUnitsUnitOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountTagInput)(nil)).Elem(), AccountTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountTagArrayInput)(nil)).Elem(), AccountTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountInput)(nil)).Elem(), AccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountArrayInput)(nil)).Elem(), AccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountTagInput)(nil)).Elem(), AccountsAccountTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountTagArrayInput)(nil)).Elem(), AccountsAccountTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationsOrganizationInput)(nil)).Elem(), OrganizationsOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationsOrganizationArrayInput)(nil)).Elem(), OrganizationsOrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceControlPoliciesPolicyInput)(nil)).Elem(), ServiceControlPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceControlPoliciesPolicyArrayInput)(nil)).Elem(), ServiceControlPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UnitsUnitInput)(nil)).Elem(), UnitsUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UnitsUnitArrayInput)(nil)).Elem(), UnitsUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountInput)(nil)).Elem(), GetAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountArrayInput)(nil)).Elem(), GetAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountTagInput)(nil)).Elem(), GetAccountsAccountTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountTagArrayInput)(nil)).Elem(), GetAccountsAccountTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationInput)(nil)).Elem(), GetOrganizationsOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationArrayInput)(nil)).Elem(), GetOrganizationsOrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceControlPoliciesPolicyInput)(nil)).Elem(), GetServiceControlPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceControlPoliciesPolicyArrayInput)(nil)).Elem(), GetServiceControlPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnitsUnitInput)(nil)).Elem(), GetUnitsUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUnitsUnitArrayInput)(nil)).Elem(), GetUnitsUnitArray{})
	pulumi.RegisterOutputType(AccountTagOutput{})
	pulumi.RegisterOutputType(AccountTagArrayOutput{})
	pulumi.RegisterOutputType(AccountsAccountOutput{})
	pulumi.RegisterOutputType(AccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(AccountsAccountTagOutput{})
	pulumi.RegisterOutputType(AccountsAccountTagArrayOutput{})
	pulumi.RegisterOutputType(OrganizationsOrganizationOutput{})
	pulumi.RegisterOutputType(OrganizationsOrganizationArrayOutput{})
	pulumi.RegisterOutputType(ServiceControlPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(ServiceControlPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(UnitsUnitOutput{})
	pulumi.RegisterOutputType(UnitsUnitArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountTagOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountTagArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationArrayOutput{})
	pulumi.RegisterOutputType(GetServiceControlPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetServiceControlPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetUnitsUnitOutput{})
	pulumi.RegisterOutputType(GetUnitsUnitArrayOutput{})
}
