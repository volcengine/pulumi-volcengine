// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage organization
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organization.NewOrganization(ctx, "foo", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Organization can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:organization/organization:Organization default resource_id
// ```
type Organization struct {
	pulumi.CustomResourceState

	// The account id of the organization owner.
	AccountId pulumi.IntOutput `pulumi:"accountId"`
	// The account name of the organization owner.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// The created time of the organization.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// The delete uk of the organization.
	DeleteUk pulumi.StringOutput `pulumi:"deleteUk"`
	// The deleted time of the organization.
	DeletedTime pulumi.StringOutput `pulumi:"deletedTime"`
	// The description of the organization.
	Description pulumi.StringOutput `pulumi:"description"`
	// The main name of the organization owner.
	MainName pulumi.StringOutput `pulumi:"mainName"`
	// The name of the organization.
	Name pulumi.StringOutput `pulumi:"name"`
	// The owner id of the organization.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// The status of the organization.
	Status pulumi.IntOutput `pulumi:"status"`
	// The type of the organization.
	Type pulumi.IntOutput `pulumi:"type"`
	// The updated time of the organization.
	UpdatedTime pulumi.StringOutput `pulumi:"updatedTime"`
}

// NewOrganization registers a new resource with the given unique name, arguments, and options.
func NewOrganization(ctx *pulumi.Context,
	name string, args *OrganizationArgs, opts ...pulumi.ResourceOption) (*Organization, error) {
	if args == nil {
		args = &OrganizationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Organization
	err := ctx.RegisterResource("volcengine:organization/organization:Organization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganization gets an existing Organization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationState, opts ...pulumi.ResourceOption) (*Organization, error) {
	var resource Organization
	err := ctx.ReadResource("volcengine:organization/organization:Organization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Organization resources.
type organizationState struct {
	// The account id of the organization owner.
	AccountId *int `pulumi:"accountId"`
	// The account name of the organization owner.
	AccountName *string `pulumi:"accountName"`
	// The created time of the organization.
	CreatedTime *string `pulumi:"createdTime"`
	// The delete uk of the organization.
	DeleteUk *string `pulumi:"deleteUk"`
	// The deleted time of the organization.
	DeletedTime *string `pulumi:"deletedTime"`
	// The description of the organization.
	Description *string `pulumi:"description"`
	// The main name of the organization owner.
	MainName *string `pulumi:"mainName"`
	// The name of the organization.
	Name *string `pulumi:"name"`
	// The owner id of the organization.
	Owner *string `pulumi:"owner"`
	// The status of the organization.
	Status *int `pulumi:"status"`
	// The type of the organization.
	Type *int `pulumi:"type"`
	// The updated time of the organization.
	UpdatedTime *string `pulumi:"updatedTime"`
}

type OrganizationState struct {
	// The account id of the organization owner.
	AccountId pulumi.IntPtrInput
	// The account name of the organization owner.
	AccountName pulumi.StringPtrInput
	// The created time of the organization.
	CreatedTime pulumi.StringPtrInput
	// The delete uk of the organization.
	DeleteUk pulumi.StringPtrInput
	// The deleted time of the organization.
	DeletedTime pulumi.StringPtrInput
	// The description of the organization.
	Description pulumi.StringPtrInput
	// The main name of the organization owner.
	MainName pulumi.StringPtrInput
	// The name of the organization.
	Name pulumi.StringPtrInput
	// The owner id of the organization.
	Owner pulumi.StringPtrInput
	// The status of the organization.
	Status pulumi.IntPtrInput
	// The type of the organization.
	Type pulumi.IntPtrInput
	// The updated time of the organization.
	UpdatedTime pulumi.StringPtrInput
}

func (OrganizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationState)(nil)).Elem()
}

type organizationArgs struct {
}

// The set of arguments for constructing a Organization resource.
type OrganizationArgs struct {
}

func (OrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationArgs)(nil)).Elem()
}

type OrganizationInput interface {
	pulumi.Input

	ToOrganizationOutput() OrganizationOutput
	ToOrganizationOutputWithContext(ctx context.Context) OrganizationOutput
}

func (*Organization) ElementType() reflect.Type {
	return reflect.TypeOf((**Organization)(nil)).Elem()
}

func (i *Organization) ToOrganizationOutput() OrganizationOutput {
	return i.ToOrganizationOutputWithContext(context.Background())
}

func (i *Organization) ToOrganizationOutputWithContext(ctx context.Context) OrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationOutput)
}

// OrganizationArrayInput is an input type that accepts OrganizationArray and OrganizationArrayOutput values.
// You can construct a concrete instance of `OrganizationArrayInput` via:
//
//	OrganizationArray{ OrganizationArgs{...} }
type OrganizationArrayInput interface {
	pulumi.Input

	ToOrganizationArrayOutput() OrganizationArrayOutput
	ToOrganizationArrayOutputWithContext(context.Context) OrganizationArrayOutput
}

type OrganizationArray []OrganizationInput

func (OrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Organization)(nil)).Elem()
}

func (i OrganizationArray) ToOrganizationArrayOutput() OrganizationArrayOutput {
	return i.ToOrganizationArrayOutputWithContext(context.Background())
}

func (i OrganizationArray) ToOrganizationArrayOutputWithContext(ctx context.Context) OrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationArrayOutput)
}

// OrganizationMapInput is an input type that accepts OrganizationMap and OrganizationMapOutput values.
// You can construct a concrete instance of `OrganizationMapInput` via:
//
//	OrganizationMap{ "key": OrganizationArgs{...} }
type OrganizationMapInput interface {
	pulumi.Input

	ToOrganizationMapOutput() OrganizationMapOutput
	ToOrganizationMapOutputWithContext(context.Context) OrganizationMapOutput
}

type OrganizationMap map[string]OrganizationInput

func (OrganizationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Organization)(nil)).Elem()
}

func (i OrganizationMap) ToOrganizationMapOutput() OrganizationMapOutput {
	return i.ToOrganizationMapOutputWithContext(context.Background())
}

func (i OrganizationMap) ToOrganizationMapOutputWithContext(ctx context.Context) OrganizationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationMapOutput)
}

type OrganizationOutput struct{ *pulumi.OutputState }

func (OrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Organization)(nil)).Elem()
}

func (o OrganizationOutput) ToOrganizationOutput() OrganizationOutput {
	return o
}

func (o OrganizationOutput) ToOrganizationOutputWithContext(ctx context.Context) OrganizationOutput {
	return o
}

// The account id of the organization owner.
func (o OrganizationOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v *Organization) pulumi.IntOutput { return v.AccountId }).(pulumi.IntOutput)
}

// The account name of the organization owner.
func (o OrganizationOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// The created time of the organization.
func (o OrganizationOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// The delete uk of the organization.
func (o OrganizationOutput) DeleteUk() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.DeleteUk }).(pulumi.StringOutput)
}

// The deleted time of the organization.
func (o OrganizationOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the organization.
func (o OrganizationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The main name of the organization owner.
func (o OrganizationOutput) MainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.MainName }).(pulumi.StringOutput)
}

// The name of the organization.
func (o OrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The owner id of the organization.
func (o OrganizationOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// The status of the organization.
func (o OrganizationOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v *Organization) pulumi.IntOutput { return v.Status }).(pulumi.IntOutput)
}

// The type of the organization.
func (o OrganizationOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v *Organization) pulumi.IntOutput { return v.Type }).(pulumi.IntOutput)
}

// The updated time of the organization.
func (o OrganizationOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Organization) pulumi.StringOutput { return v.UpdatedTime }).(pulumi.StringOutput)
}

type OrganizationArrayOutput struct{ *pulumi.OutputState }

func (OrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Organization)(nil)).Elem()
}

func (o OrganizationArrayOutput) ToOrganizationArrayOutput() OrganizationArrayOutput {
	return o
}

func (o OrganizationArrayOutput) ToOrganizationArrayOutputWithContext(ctx context.Context) OrganizationArrayOutput {
	return o
}

func (o OrganizationArrayOutput) Index(i pulumi.IntInput) OrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Organization {
		return vs[0].([]*Organization)[vs[1].(int)]
	}).(OrganizationOutput)
}

type OrganizationMapOutput struct{ *pulumi.OutputState }

func (OrganizationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Organization)(nil)).Elem()
}

func (o OrganizationMapOutput) ToOrganizationMapOutput() OrganizationMapOutput {
	return o
}

func (o OrganizationMapOutput) ToOrganizationMapOutputWithContext(ctx context.Context) OrganizationMapOutput {
	return o
}

func (o OrganizationMapOutput) MapIndex(k pulumi.StringInput) OrganizationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Organization {
		return vs[0].(map[string]*Organization)[vs[1].(string)]
	}).(OrganizationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationInput)(nil)).Elem(), &Organization{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationArrayInput)(nil)).Elem(), OrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationMapInput)(nil)).Elem(), OrganizationMap{})
	pulumi.RegisterOutputType(OrganizationOutput{})
	pulumi.RegisterOutputType(OrganizationArrayOutput{})
	pulumi.RegisterOutputType(OrganizationMapOutput{})
}
