// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage redis parameter group
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/redis"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.NewParameterGroup(ctx, "foo", &redis.ParameterGroupArgs{
//				Description:   pulumi.String("tf-test-description"),
//				EngineVersion: pulumi.String("5.0"),
//				ParamValues: redis.ParameterGroupParamValueArray{
//					&redis.ParameterGroupParamValueArgs{
//						Name:  pulumi.String("active-defrag-cycle-max"),
//						Value: pulumi.String("30"),
//					},
//					&redis.ParameterGroupParamValueArgs{
//						Name:  pulumi.String("active-defrag-cycle-min"),
//						Value: pulumi.String("15"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ParameterGroup can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:redis/parameterGroup:ParameterGroup default resource_id
// ```
type ParameterGroup struct {
	pulumi.CustomResourceState

	// The remarks information of the parameter template should not exceed 200 characters in length.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ParamValues ParameterGroupParamValueArrayOutput `pulumi:"paramValues"`
}

// NewParameterGroup registers a new resource with the given unique name, arguments, and options.
func NewParameterGroup(ctx *pulumi.Context,
	name string, args *ParameterGroupArgs, opts ...pulumi.ResourceOption) (*ParameterGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	if args.ParamValues == nil {
		return nil, errors.New("invalid value for required argument 'ParamValues'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ParameterGroup
	err := ctx.RegisterResource("volcengine:redis/parameterGroup:ParameterGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetParameterGroup gets an existing ParameterGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetParameterGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ParameterGroupState, opts ...pulumi.ResourceOption) (*ParameterGroup, error) {
	var resource ParameterGroup
	err := ctx.ReadResource("volcengine:redis/parameterGroup:ParameterGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ParameterGroup resources.
type parameterGroupState struct {
	// The remarks information of the parameter template should not exceed 200 characters in length.
	Description *string `pulumi:"description"`
	// The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
	EngineVersion *string `pulumi:"engineVersion"`
	// Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
	Name *string `pulumi:"name"`
	// The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ParamValues []ParameterGroupParamValue `pulumi:"paramValues"`
}

type ParameterGroupState struct {
	// The remarks information of the parameter template should not exceed 200 characters in length.
	Description pulumi.StringPtrInput
	// The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
	EngineVersion pulumi.StringPtrInput
	// Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
	Name pulumi.StringPtrInput
	// The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ParamValues ParameterGroupParamValueArrayInput
}

func (ParameterGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterGroupState)(nil)).Elem()
}

type parameterGroupArgs struct {
	// The remarks information of the parameter template should not exceed 200 characters in length.
	Description *string `pulumi:"description"`
	// The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
	EngineVersion string `pulumi:"engineVersion"`
	// Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
	Name *string `pulumi:"name"`
	// The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ParamValues []ParameterGroupParamValue `pulumi:"paramValues"`
}

// The set of arguments for constructing a ParameterGroup resource.
type ParameterGroupArgs struct {
	// The remarks information of the parameter template should not exceed 200 characters in length.
	Description pulumi.StringPtrInput
	// The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
	EngineVersion pulumi.StringInput
	// Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
	Name pulumi.StringPtrInput
	// The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ParamValues ParameterGroupParamValueArrayInput
}

func (ParameterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterGroupArgs)(nil)).Elem()
}

type ParameterGroupInput interface {
	pulumi.Input

	ToParameterGroupOutput() ParameterGroupOutput
	ToParameterGroupOutputWithContext(ctx context.Context) ParameterGroupOutput
}

func (*ParameterGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterGroup)(nil)).Elem()
}

func (i *ParameterGroup) ToParameterGroupOutput() ParameterGroupOutput {
	return i.ToParameterGroupOutputWithContext(context.Background())
}

func (i *ParameterGroup) ToParameterGroupOutputWithContext(ctx context.Context) ParameterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupOutput)
}

// ParameterGroupArrayInput is an input type that accepts ParameterGroupArray and ParameterGroupArrayOutput values.
// You can construct a concrete instance of `ParameterGroupArrayInput` via:
//
//	ParameterGroupArray{ ParameterGroupArgs{...} }
type ParameterGroupArrayInput interface {
	pulumi.Input

	ToParameterGroupArrayOutput() ParameterGroupArrayOutput
	ToParameterGroupArrayOutputWithContext(context.Context) ParameterGroupArrayOutput
}

type ParameterGroupArray []ParameterGroupInput

func (ParameterGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ParameterGroup)(nil)).Elem()
}

func (i ParameterGroupArray) ToParameterGroupArrayOutput() ParameterGroupArrayOutput {
	return i.ToParameterGroupArrayOutputWithContext(context.Background())
}

func (i ParameterGroupArray) ToParameterGroupArrayOutputWithContext(ctx context.Context) ParameterGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupArrayOutput)
}

// ParameterGroupMapInput is an input type that accepts ParameterGroupMap and ParameterGroupMapOutput values.
// You can construct a concrete instance of `ParameterGroupMapInput` via:
//
//	ParameterGroupMap{ "key": ParameterGroupArgs{...} }
type ParameterGroupMapInput interface {
	pulumi.Input

	ToParameterGroupMapOutput() ParameterGroupMapOutput
	ToParameterGroupMapOutputWithContext(context.Context) ParameterGroupMapOutput
}

type ParameterGroupMap map[string]ParameterGroupInput

func (ParameterGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ParameterGroup)(nil)).Elem()
}

func (i ParameterGroupMap) ToParameterGroupMapOutput() ParameterGroupMapOutput {
	return i.ToParameterGroupMapOutputWithContext(context.Background())
}

func (i ParameterGroupMap) ToParameterGroupMapOutputWithContext(ctx context.Context) ParameterGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupMapOutput)
}

type ParameterGroupOutput struct{ *pulumi.OutputState }

func (ParameterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterGroup)(nil)).Elem()
}

func (o ParameterGroupOutput) ToParameterGroupOutput() ParameterGroupOutput {
	return o
}

func (o ParameterGroupOutput) ToParameterGroupOutputWithContext(ctx context.Context) ParameterGroupOutput {
	return o
}

// The remarks information of the parameter template should not exceed 200 characters in length.
func (o ParameterGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
func (o ParameterGroupOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterGroup) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
func (o ParameterGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o ParameterGroupOutput) ParamValues() ParameterGroupParamValueArrayOutput {
	return o.ApplyT(func(v *ParameterGroup) ParameterGroupParamValueArrayOutput { return v.ParamValues }).(ParameterGroupParamValueArrayOutput)
}

type ParameterGroupArrayOutput struct{ *pulumi.OutputState }

func (ParameterGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ParameterGroup)(nil)).Elem()
}

func (o ParameterGroupArrayOutput) ToParameterGroupArrayOutput() ParameterGroupArrayOutput {
	return o
}

func (o ParameterGroupArrayOutput) ToParameterGroupArrayOutputWithContext(ctx context.Context) ParameterGroupArrayOutput {
	return o
}

func (o ParameterGroupArrayOutput) Index(i pulumi.IntInput) ParameterGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ParameterGroup {
		return vs[0].([]*ParameterGroup)[vs[1].(int)]
	}).(ParameterGroupOutput)
}

type ParameterGroupMapOutput struct{ *pulumi.OutputState }

func (ParameterGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ParameterGroup)(nil)).Elem()
}

func (o ParameterGroupMapOutput) ToParameterGroupMapOutput() ParameterGroupMapOutput {
	return o
}

func (o ParameterGroupMapOutput) ToParameterGroupMapOutputWithContext(ctx context.Context) ParameterGroupMapOutput {
	return o
}

func (o ParameterGroupMapOutput) MapIndex(k pulumi.StringInput) ParameterGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ParameterGroup {
		return vs[0].(map[string]*ParameterGroup)[vs[1].(string)]
	}).(ParameterGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupInput)(nil)).Elem(), &ParameterGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupArrayInput)(nil)).Elem(), ParameterGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupMapInput)(nil)).Elem(), ParameterGroupMap{})
	pulumi.RegisterOutputType(ParameterGroupOutput{})
	pulumi.RegisterOutputType(ParameterGroupArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupMapOutput{})
}
