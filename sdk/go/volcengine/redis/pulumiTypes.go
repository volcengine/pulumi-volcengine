// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AccountsAccount struct {
	// The name of the redis account.
	AccountName string `pulumi:"accountName"`
	// The description of the redis account.
	Description string `pulumi:"description"`
	// The id of the Redis instance.
	InstanceId string `pulumi:"instanceId"`
	// The role info.
	RoleName string `pulumi:"roleName"`
}

// AccountsAccountInput is an input type that accepts AccountsAccountArgs and AccountsAccountOutput values.
// You can construct a concrete instance of `AccountsAccountInput` via:
//
//	AccountsAccountArgs{...}
type AccountsAccountInput interface {
	pulumi.Input

	ToAccountsAccountOutput() AccountsAccountOutput
	ToAccountsAccountOutputWithContext(context.Context) AccountsAccountOutput
}

type AccountsAccountArgs struct {
	// The name of the redis account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The description of the redis account.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the Redis instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The role info.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (AccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccount)(nil)).Elem()
}

func (i AccountsAccountArgs) ToAccountsAccountOutput() AccountsAccountOutput {
	return i.ToAccountsAccountOutputWithContext(context.Background())
}

func (i AccountsAccountArgs) ToAccountsAccountOutputWithContext(ctx context.Context) AccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountOutput)
}

// AccountsAccountArrayInput is an input type that accepts AccountsAccountArray and AccountsAccountArrayOutput values.
// You can construct a concrete instance of `AccountsAccountArrayInput` via:
//
//	AccountsAccountArray{ AccountsAccountArgs{...} }
type AccountsAccountArrayInput interface {
	pulumi.Input

	ToAccountsAccountArrayOutput() AccountsAccountArrayOutput
	ToAccountsAccountArrayOutputWithContext(context.Context) AccountsAccountArrayOutput
}

type AccountsAccountArray []AccountsAccountInput

func (AccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccount)(nil)).Elem()
}

func (i AccountsAccountArray) ToAccountsAccountArrayOutput() AccountsAccountArrayOutput {
	return i.ToAccountsAccountArrayOutputWithContext(context.Background())
}

func (i AccountsAccountArray) ToAccountsAccountArrayOutputWithContext(ctx context.Context) AccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountArrayOutput)
}

type AccountsAccountOutput struct{ *pulumi.OutputState }

func (AccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccount)(nil)).Elem()
}

func (o AccountsAccountOutput) ToAccountsAccountOutput() AccountsAccountOutput {
	return o
}

func (o AccountsAccountOutput) ToAccountsAccountOutputWithContext(ctx context.Context) AccountsAccountOutput {
	return o
}

// The name of the redis account.
func (o AccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The description of the redis account.
func (o AccountsAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the Redis instance.
func (o AccountsAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The role info.
func (o AccountsAccountOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.RoleName }).(pulumi.StringOutput)
}

type AccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (AccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccount)(nil)).Elem()
}

func (o AccountsAccountArrayOutput) ToAccountsAccountArrayOutput() AccountsAccountArrayOutput {
	return o
}

func (o AccountsAccountArrayOutput) ToAccountsAccountArrayOutputWithContext(ctx context.Context) AccountsAccountArrayOutput {
	return o
}

func (o AccountsAccountArrayOutput) Index(i pulumi.IntInput) AccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountsAccount {
		return vs[0].([]AccountsAccount)[vs[1].(int)]
	}).(AccountsAccountOutput)
}

type AllowListAssociatedInstance struct {
	// Id of instance.
	InstanceId *string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName *string `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc *string `pulumi:"vpc"`
}

// AllowListAssociatedInstanceInput is an input type that accepts AllowListAssociatedInstanceArgs and AllowListAssociatedInstanceOutput values.
// You can construct a concrete instance of `AllowListAssociatedInstanceInput` via:
//
//	AllowListAssociatedInstanceArgs{...}
type AllowListAssociatedInstanceInput interface {
	pulumi.Input

	ToAllowListAssociatedInstanceOutput() AllowListAssociatedInstanceOutput
	ToAllowListAssociatedInstanceOutputWithContext(context.Context) AllowListAssociatedInstanceOutput
}

type AllowListAssociatedInstanceArgs struct {
	// Id of instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
}

func (AllowListAssociatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowListAssociatedInstanceArgs) ToAllowListAssociatedInstanceOutput() AllowListAssociatedInstanceOutput {
	return i.ToAllowListAssociatedInstanceOutputWithContext(context.Background())
}

func (i AllowListAssociatedInstanceArgs) ToAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowListAssociatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListAssociatedInstanceOutput)
}

// AllowListAssociatedInstanceArrayInput is an input type that accepts AllowListAssociatedInstanceArray and AllowListAssociatedInstanceArrayOutput values.
// You can construct a concrete instance of `AllowListAssociatedInstanceArrayInput` via:
//
//	AllowListAssociatedInstanceArray{ AllowListAssociatedInstanceArgs{...} }
type AllowListAssociatedInstanceArrayInput interface {
	pulumi.Input

	ToAllowListAssociatedInstanceArrayOutput() AllowListAssociatedInstanceArrayOutput
	ToAllowListAssociatedInstanceArrayOutputWithContext(context.Context) AllowListAssociatedInstanceArrayOutput
}

type AllowListAssociatedInstanceArray []AllowListAssociatedInstanceInput

func (AllowListAssociatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowListAssociatedInstanceArray) ToAllowListAssociatedInstanceArrayOutput() AllowListAssociatedInstanceArrayOutput {
	return i.ToAllowListAssociatedInstanceArrayOutputWithContext(context.Background())
}

func (i AllowListAssociatedInstanceArray) ToAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowListAssociatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListAssociatedInstanceArrayOutput)
}

type AllowListAssociatedInstanceOutput struct{ *pulumi.OutputState }

func (AllowListAssociatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowListAssociatedInstanceOutput) ToAllowListAssociatedInstanceOutput() AllowListAssociatedInstanceOutput {
	return o
}

func (o AllowListAssociatedInstanceOutput) ToAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowListAssociatedInstanceOutput {
	return o
}

// Id of instance.
func (o AllowListAssociatedInstanceOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListAssociatedInstance) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Name of instance.
func (o AllowListAssociatedInstanceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListAssociatedInstance) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Id of virtual private cloud.
func (o AllowListAssociatedInstanceOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListAssociatedInstance) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

type AllowListAssociatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (AllowListAssociatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowListAssociatedInstanceArrayOutput) ToAllowListAssociatedInstanceArrayOutput() AllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowListAssociatedInstanceArrayOutput) ToAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowListAssociatedInstanceArrayOutput) Index(i pulumi.IntInput) AllowListAssociatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowListAssociatedInstance {
		return vs[0].([]AllowListAssociatedInstance)[vs[1].(int)]
	}).(AllowListAssociatedInstanceOutput)
}

type AllowListSecurityGroupBindInfo struct {
	// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
	BindMode *string `pulumi:"bindMode"`
	// The list of ips in the associated security group has been linked.
	IpLists []string `pulumi:"ipLists"`
	// The associated security group ID.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// The name of the associated security group.
	SecurityGroupName *string `pulumi:"securityGroupName"`
}

// AllowListSecurityGroupBindInfoInput is an input type that accepts AllowListSecurityGroupBindInfoArgs and AllowListSecurityGroupBindInfoOutput values.
// You can construct a concrete instance of `AllowListSecurityGroupBindInfoInput` via:
//
//	AllowListSecurityGroupBindInfoArgs{...}
type AllowListSecurityGroupBindInfoInput interface {
	pulumi.Input

	ToAllowListSecurityGroupBindInfoOutput() AllowListSecurityGroupBindInfoOutput
	ToAllowListSecurityGroupBindInfoOutputWithContext(context.Context) AllowListSecurityGroupBindInfoOutput
}

type AllowListSecurityGroupBindInfoArgs struct {
	// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
	BindMode pulumi.StringPtrInput `pulumi:"bindMode"`
	// The list of ips in the associated security group has been linked.
	IpLists pulumi.StringArrayInput `pulumi:"ipLists"`
	// The associated security group ID.
	SecurityGroupId pulumi.StringPtrInput `pulumi:"securityGroupId"`
	// The name of the associated security group.
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
}

func (AllowListSecurityGroupBindInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (i AllowListSecurityGroupBindInfoArgs) ToAllowListSecurityGroupBindInfoOutput() AllowListSecurityGroupBindInfoOutput {
	return i.ToAllowListSecurityGroupBindInfoOutputWithContext(context.Background())
}

func (i AllowListSecurityGroupBindInfoArgs) ToAllowListSecurityGroupBindInfoOutputWithContext(ctx context.Context) AllowListSecurityGroupBindInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListSecurityGroupBindInfoOutput)
}

// AllowListSecurityGroupBindInfoArrayInput is an input type that accepts AllowListSecurityGroupBindInfoArray and AllowListSecurityGroupBindInfoArrayOutput values.
// You can construct a concrete instance of `AllowListSecurityGroupBindInfoArrayInput` via:
//
//	AllowListSecurityGroupBindInfoArray{ AllowListSecurityGroupBindInfoArgs{...} }
type AllowListSecurityGroupBindInfoArrayInput interface {
	pulumi.Input

	ToAllowListSecurityGroupBindInfoArrayOutput() AllowListSecurityGroupBindInfoArrayOutput
	ToAllowListSecurityGroupBindInfoArrayOutputWithContext(context.Context) AllowListSecurityGroupBindInfoArrayOutput
}

type AllowListSecurityGroupBindInfoArray []AllowListSecurityGroupBindInfoInput

func (AllowListSecurityGroupBindInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (i AllowListSecurityGroupBindInfoArray) ToAllowListSecurityGroupBindInfoArrayOutput() AllowListSecurityGroupBindInfoArrayOutput {
	return i.ToAllowListSecurityGroupBindInfoArrayOutputWithContext(context.Background())
}

func (i AllowListSecurityGroupBindInfoArray) ToAllowListSecurityGroupBindInfoArrayOutputWithContext(ctx context.Context) AllowListSecurityGroupBindInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListSecurityGroupBindInfoArrayOutput)
}

type AllowListSecurityGroupBindInfoOutput struct{ *pulumi.OutputState }

func (AllowListSecurityGroupBindInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (o AllowListSecurityGroupBindInfoOutput) ToAllowListSecurityGroupBindInfoOutput() AllowListSecurityGroupBindInfoOutput {
	return o
}

func (o AllowListSecurityGroupBindInfoOutput) ToAllowListSecurityGroupBindInfoOutputWithContext(ctx context.Context) AllowListSecurityGroupBindInfoOutput {
	return o
}

// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
func (o AllowListSecurityGroupBindInfoOutput) BindMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListSecurityGroupBindInfo) *string { return v.BindMode }).(pulumi.StringPtrOutput)
}

// The list of ips in the associated security group has been linked.
func (o AllowListSecurityGroupBindInfoOutput) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AllowListSecurityGroupBindInfo) []string { return v.IpLists }).(pulumi.StringArrayOutput)
}

// The associated security group ID.
func (o AllowListSecurityGroupBindInfoOutput) SecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListSecurityGroupBindInfo) *string { return v.SecurityGroupId }).(pulumi.StringPtrOutput)
}

// The name of the associated security group.
func (o AllowListSecurityGroupBindInfoOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListSecurityGroupBindInfo) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

type AllowListSecurityGroupBindInfoArrayOutput struct{ *pulumi.OutputState }

func (AllowListSecurityGroupBindInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (o AllowListSecurityGroupBindInfoArrayOutput) ToAllowListSecurityGroupBindInfoArrayOutput() AllowListSecurityGroupBindInfoArrayOutput {
	return o
}

func (o AllowListSecurityGroupBindInfoArrayOutput) ToAllowListSecurityGroupBindInfoArrayOutputWithContext(ctx context.Context) AllowListSecurityGroupBindInfoArrayOutput {
	return o
}

func (o AllowListSecurityGroupBindInfoArrayOutput) Index(i pulumi.IntInput) AllowListSecurityGroupBindInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowListSecurityGroupBindInfo {
		return vs[0].([]AllowListSecurityGroupBindInfo)[vs[1].(int)]
	}).(AllowListSecurityGroupBindInfoOutput)
}

type AllowListsAllowList struct {
	// The type of the whitelist.
	AllowListCategory string `pulumi:"allowListCategory"`
	// Description of allow list.
	AllowListDesc string `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId string `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum int `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName string `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType string `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists []string `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum int `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances []AllowListsAllowListAssociatedInstance `pulumi:"associatedInstances"`
	// The name of the project to which the white list belongs.
	ProjectName string `pulumi:"projectName"`
	// The current whitelist is the list of security group information that has been associated.
	SecurityGroupBindInfos []AllowListsAllowListSecurityGroupBindInfo `pulumi:"securityGroupBindInfos"`
}

// AllowListsAllowListInput is an input type that accepts AllowListsAllowListArgs and AllowListsAllowListOutput values.
// You can construct a concrete instance of `AllowListsAllowListInput` via:
//
//	AllowListsAllowListArgs{...}
type AllowListsAllowListInput interface {
	pulumi.Input

	ToAllowListsAllowListOutput() AllowListsAllowListOutput
	ToAllowListsAllowListOutputWithContext(context.Context) AllowListsAllowListOutput
}

type AllowListsAllowListArgs struct {
	// The type of the whitelist.
	AllowListCategory pulumi.StringInput `pulumi:"allowListCategory"`
	// Description of allow list.
	AllowListDesc pulumi.StringInput `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId pulumi.StringInput `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum pulumi.IntInput `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName pulumi.StringInput `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType pulumi.StringInput `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum pulumi.IntInput `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances AllowListsAllowListAssociatedInstanceArrayInput `pulumi:"associatedInstances"`
	// The name of the project to which the white list belongs.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The current whitelist is the list of security group information that has been associated.
	SecurityGroupBindInfos AllowListsAllowListSecurityGroupBindInfoArrayInput `pulumi:"securityGroupBindInfos"`
}

func (AllowListsAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowList)(nil)).Elem()
}

func (i AllowListsAllowListArgs) ToAllowListsAllowListOutput() AllowListsAllowListOutput {
	return i.ToAllowListsAllowListOutputWithContext(context.Background())
}

func (i AllowListsAllowListArgs) ToAllowListsAllowListOutputWithContext(ctx context.Context) AllowListsAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListOutput)
}

// AllowListsAllowListArrayInput is an input type that accepts AllowListsAllowListArray and AllowListsAllowListArrayOutput values.
// You can construct a concrete instance of `AllowListsAllowListArrayInput` via:
//
//	AllowListsAllowListArray{ AllowListsAllowListArgs{...} }
type AllowListsAllowListArrayInput interface {
	pulumi.Input

	ToAllowListsAllowListArrayOutput() AllowListsAllowListArrayOutput
	ToAllowListsAllowListArrayOutputWithContext(context.Context) AllowListsAllowListArrayOutput
}

type AllowListsAllowListArray []AllowListsAllowListInput

func (AllowListsAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowList)(nil)).Elem()
}

func (i AllowListsAllowListArray) ToAllowListsAllowListArrayOutput() AllowListsAllowListArrayOutput {
	return i.ToAllowListsAllowListArrayOutputWithContext(context.Background())
}

func (i AllowListsAllowListArray) ToAllowListsAllowListArrayOutputWithContext(ctx context.Context) AllowListsAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListArrayOutput)
}

type AllowListsAllowListOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowList)(nil)).Elem()
}

func (o AllowListsAllowListOutput) ToAllowListsAllowListOutput() AllowListsAllowListOutput {
	return o
}

func (o AllowListsAllowListOutput) ToAllowListsAllowListOutputWithContext(ctx context.Context) AllowListsAllowListOutput {
	return o
}

// The type of the whitelist.
func (o AllowListsAllowListOutput) AllowListCategory() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListCategory }).(pulumi.StringOutput)
}

// Description of allow list.
func (o AllowListsAllowListOutput) AllowListDesc() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListDesc }).(pulumi.StringOutput)
}

// Id of allow list.
func (o AllowListsAllowListOutput) AllowListId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListId }).(pulumi.StringOutput)
}

// The IP number of allow list.
func (o AllowListsAllowListOutput) AllowListIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v AllowListsAllowList) int { return v.AllowListIpNum }).(pulumi.IntOutput)
}

// Name of allow list.
func (o AllowListsAllowListOutput) AllowListName() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListName }).(pulumi.StringOutput)
}

// Type of allow list.
func (o AllowListsAllowListOutput) AllowListType() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListType }).(pulumi.StringOutput)
}

// Ip list of allow list.
func (o AllowListsAllowListOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AllowListsAllowList) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The number of instance that associated to allow list.
func (o AllowListsAllowListOutput) AssociatedInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v AllowListsAllowList) int { return v.AssociatedInstanceNum }).(pulumi.IntOutput)
}

// Instances associated by this allow list.
func (o AllowListsAllowListOutput) AssociatedInstances() AllowListsAllowListAssociatedInstanceArrayOutput {
	return o.ApplyT(func(v AllowListsAllowList) []AllowListsAllowListAssociatedInstance { return v.AssociatedInstances }).(AllowListsAllowListAssociatedInstanceArrayOutput)
}

// The name of the project to which the white list belongs.
func (o AllowListsAllowListOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The current whitelist is the list of security group information that has been associated.
func (o AllowListsAllowListOutput) SecurityGroupBindInfos() AllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return o.ApplyT(func(v AllowListsAllowList) []AllowListsAllowListSecurityGroupBindInfo {
		return v.SecurityGroupBindInfos
	}).(AllowListsAllowListSecurityGroupBindInfoArrayOutput)
}

type AllowListsAllowListArrayOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowList)(nil)).Elem()
}

func (o AllowListsAllowListArrayOutput) ToAllowListsAllowListArrayOutput() AllowListsAllowListArrayOutput {
	return o
}

func (o AllowListsAllowListArrayOutput) ToAllowListsAllowListArrayOutputWithContext(ctx context.Context) AllowListsAllowListArrayOutput {
	return o
}

func (o AllowListsAllowListArrayOutput) Index(i pulumi.IntInput) AllowListsAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowListsAllowList {
		return vs[0].([]AllowListsAllowList)[vs[1].(int)]
	}).(AllowListsAllowListOutput)
}

type AllowListsAllowListAssociatedInstance struct {
	// The Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc string `pulumi:"vpc"`
}

// AllowListsAllowListAssociatedInstanceInput is an input type that accepts AllowListsAllowListAssociatedInstanceArgs and AllowListsAllowListAssociatedInstanceOutput values.
// You can construct a concrete instance of `AllowListsAllowListAssociatedInstanceInput` via:
//
//	AllowListsAllowListAssociatedInstanceArgs{...}
type AllowListsAllowListAssociatedInstanceInput interface {
	pulumi.Input

	ToAllowListsAllowListAssociatedInstanceOutput() AllowListsAllowListAssociatedInstanceOutput
	ToAllowListsAllowListAssociatedInstanceOutputWithContext(context.Context) AllowListsAllowListAssociatedInstanceOutput
}

type AllowListsAllowListAssociatedInstanceArgs struct {
	// The Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (AllowListsAllowListAssociatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowListsAllowListAssociatedInstanceArgs) ToAllowListsAllowListAssociatedInstanceOutput() AllowListsAllowListAssociatedInstanceOutput {
	return i.ToAllowListsAllowListAssociatedInstanceOutputWithContext(context.Background())
}

func (i AllowListsAllowListAssociatedInstanceArgs) ToAllowListsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowListsAllowListAssociatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListAssociatedInstanceOutput)
}

// AllowListsAllowListAssociatedInstanceArrayInput is an input type that accepts AllowListsAllowListAssociatedInstanceArray and AllowListsAllowListAssociatedInstanceArrayOutput values.
// You can construct a concrete instance of `AllowListsAllowListAssociatedInstanceArrayInput` via:
//
//	AllowListsAllowListAssociatedInstanceArray{ AllowListsAllowListAssociatedInstanceArgs{...} }
type AllowListsAllowListAssociatedInstanceArrayInput interface {
	pulumi.Input

	ToAllowListsAllowListAssociatedInstanceArrayOutput() AllowListsAllowListAssociatedInstanceArrayOutput
	ToAllowListsAllowListAssociatedInstanceArrayOutputWithContext(context.Context) AllowListsAllowListAssociatedInstanceArrayOutput
}

type AllowListsAllowListAssociatedInstanceArray []AllowListsAllowListAssociatedInstanceInput

func (AllowListsAllowListAssociatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowListsAllowListAssociatedInstanceArray) ToAllowListsAllowListAssociatedInstanceArrayOutput() AllowListsAllowListAssociatedInstanceArrayOutput {
	return i.ToAllowListsAllowListAssociatedInstanceArrayOutputWithContext(context.Background())
}

func (i AllowListsAllowListAssociatedInstanceArray) ToAllowListsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowListsAllowListAssociatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListAssociatedInstanceArrayOutput)
}

type AllowListsAllowListAssociatedInstanceOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListAssociatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowListsAllowListAssociatedInstanceOutput) ToAllowListsAllowListAssociatedInstanceOutput() AllowListsAllowListAssociatedInstanceOutput {
	return o
}

func (o AllowListsAllowListAssociatedInstanceOutput) ToAllowListsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowListsAllowListAssociatedInstanceOutput {
	return o
}

// The Id of instance.
func (o AllowListsAllowListAssociatedInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListAssociatedInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o AllowListsAllowListAssociatedInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListAssociatedInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Id of virtual private cloud.
func (o AllowListsAllowListAssociatedInstanceOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListAssociatedInstance) string { return v.Vpc }).(pulumi.StringOutput)
}

type AllowListsAllowListAssociatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListAssociatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowListsAllowListAssociatedInstanceArrayOutput) ToAllowListsAllowListAssociatedInstanceArrayOutput() AllowListsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowListsAllowListAssociatedInstanceArrayOutput) ToAllowListsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowListsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowListsAllowListAssociatedInstanceArrayOutput) Index(i pulumi.IntInput) AllowListsAllowListAssociatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowListsAllowListAssociatedInstance {
		return vs[0].([]AllowListsAllowListAssociatedInstance)[vs[1].(int)]
	}).(AllowListsAllowListAssociatedInstanceOutput)
}

type AllowListsAllowListSecurityGroupBindInfo struct {
	// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
	BindMode string `pulumi:"bindMode"`
	// The list of ips in the associated security group has been linked.
	IpLists []string `pulumi:"ipLists"`
	// The associated security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the associated security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// AllowListsAllowListSecurityGroupBindInfoInput is an input type that accepts AllowListsAllowListSecurityGroupBindInfoArgs and AllowListsAllowListSecurityGroupBindInfoOutput values.
// You can construct a concrete instance of `AllowListsAllowListSecurityGroupBindInfoInput` via:
//
//	AllowListsAllowListSecurityGroupBindInfoArgs{...}
type AllowListsAllowListSecurityGroupBindInfoInput interface {
	pulumi.Input

	ToAllowListsAllowListSecurityGroupBindInfoOutput() AllowListsAllowListSecurityGroupBindInfoOutput
	ToAllowListsAllowListSecurityGroupBindInfoOutputWithContext(context.Context) AllowListsAllowListSecurityGroupBindInfoOutput
}

type AllowListsAllowListSecurityGroupBindInfoArgs struct {
	// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
	BindMode pulumi.StringInput `pulumi:"bindMode"`
	// The list of ips in the associated security group has been linked.
	IpLists pulumi.StringArrayInput `pulumi:"ipLists"`
	// The associated security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the associated security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (AllowListsAllowListSecurityGroupBindInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (i AllowListsAllowListSecurityGroupBindInfoArgs) ToAllowListsAllowListSecurityGroupBindInfoOutput() AllowListsAllowListSecurityGroupBindInfoOutput {
	return i.ToAllowListsAllowListSecurityGroupBindInfoOutputWithContext(context.Background())
}

func (i AllowListsAllowListSecurityGroupBindInfoArgs) ToAllowListsAllowListSecurityGroupBindInfoOutputWithContext(ctx context.Context) AllowListsAllowListSecurityGroupBindInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListSecurityGroupBindInfoOutput)
}

// AllowListsAllowListSecurityGroupBindInfoArrayInput is an input type that accepts AllowListsAllowListSecurityGroupBindInfoArray and AllowListsAllowListSecurityGroupBindInfoArrayOutput values.
// You can construct a concrete instance of `AllowListsAllowListSecurityGroupBindInfoArrayInput` via:
//
//	AllowListsAllowListSecurityGroupBindInfoArray{ AllowListsAllowListSecurityGroupBindInfoArgs{...} }
type AllowListsAllowListSecurityGroupBindInfoArrayInput interface {
	pulumi.Input

	ToAllowListsAllowListSecurityGroupBindInfoArrayOutput() AllowListsAllowListSecurityGroupBindInfoArrayOutput
	ToAllowListsAllowListSecurityGroupBindInfoArrayOutputWithContext(context.Context) AllowListsAllowListSecurityGroupBindInfoArrayOutput
}

type AllowListsAllowListSecurityGroupBindInfoArray []AllowListsAllowListSecurityGroupBindInfoInput

func (AllowListsAllowListSecurityGroupBindInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (i AllowListsAllowListSecurityGroupBindInfoArray) ToAllowListsAllowListSecurityGroupBindInfoArrayOutput() AllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return i.ToAllowListsAllowListSecurityGroupBindInfoArrayOutputWithContext(context.Background())
}

func (i AllowListsAllowListSecurityGroupBindInfoArray) ToAllowListsAllowListSecurityGroupBindInfoArrayOutputWithContext(ctx context.Context) AllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListSecurityGroupBindInfoArrayOutput)
}

type AllowListsAllowListSecurityGroupBindInfoOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListSecurityGroupBindInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (o AllowListsAllowListSecurityGroupBindInfoOutput) ToAllowListsAllowListSecurityGroupBindInfoOutput() AllowListsAllowListSecurityGroupBindInfoOutput {
	return o
}

func (o AllowListsAllowListSecurityGroupBindInfoOutput) ToAllowListsAllowListSecurityGroupBindInfoOutputWithContext(ctx context.Context) AllowListsAllowListSecurityGroupBindInfoOutput {
	return o
}

// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
func (o AllowListsAllowListSecurityGroupBindInfoOutput) BindMode() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListSecurityGroupBindInfo) string { return v.BindMode }).(pulumi.StringOutput)
}

// The list of ips in the associated security group has been linked.
func (o AllowListsAllowListSecurityGroupBindInfoOutput) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AllowListsAllowListSecurityGroupBindInfo) []string { return v.IpLists }).(pulumi.StringArrayOutput)
}

// The associated security group ID.
func (o AllowListsAllowListSecurityGroupBindInfoOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListSecurityGroupBindInfo) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the associated security group.
func (o AllowListsAllowListSecurityGroupBindInfoOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListSecurityGroupBindInfo) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type AllowListsAllowListSecurityGroupBindInfoArrayOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListSecurityGroupBindInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (o AllowListsAllowListSecurityGroupBindInfoArrayOutput) ToAllowListsAllowListSecurityGroupBindInfoArrayOutput() AllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return o
}

func (o AllowListsAllowListSecurityGroupBindInfoArrayOutput) ToAllowListsAllowListSecurityGroupBindInfoArrayOutputWithContext(ctx context.Context) AllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return o
}

func (o AllowListsAllowListSecurityGroupBindInfoArrayOutput) Index(i pulumi.IntInput) AllowListsAllowListSecurityGroupBindInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowListsAllowListSecurityGroupBindInfo {
		return vs[0].([]AllowListsAllowListSecurityGroupBindInfo)[vs[1].(int)]
	}).(AllowListsAllowListSecurityGroupBindInfoOutput)
}

type BackupBackupPointDownloadUrl struct {
	// The private network download address for RDB files.
	PrivateDownloadUrl *string `pulumi:"privateDownloadUrl"`
	// The public network download address for RDB files.
	PublicDownloadUrl *string `pulumi:"publicDownloadUrl"`
	// RDB file size, unit: Byte.
	RdbFileSize *int `pulumi:"rdbFileSize"`
	// The shard ID where the RDB file is located.
	ShardId *string `pulumi:"shardId"`
}

// BackupBackupPointDownloadUrlInput is an input type that accepts BackupBackupPointDownloadUrlArgs and BackupBackupPointDownloadUrlOutput values.
// You can construct a concrete instance of `BackupBackupPointDownloadUrlInput` via:
//
//	BackupBackupPointDownloadUrlArgs{...}
type BackupBackupPointDownloadUrlInput interface {
	pulumi.Input

	ToBackupBackupPointDownloadUrlOutput() BackupBackupPointDownloadUrlOutput
	ToBackupBackupPointDownloadUrlOutputWithContext(context.Context) BackupBackupPointDownloadUrlOutput
}

type BackupBackupPointDownloadUrlArgs struct {
	// The private network download address for RDB files.
	PrivateDownloadUrl pulumi.StringPtrInput `pulumi:"privateDownloadUrl"`
	// The public network download address for RDB files.
	PublicDownloadUrl pulumi.StringPtrInput `pulumi:"publicDownloadUrl"`
	// RDB file size, unit: Byte.
	RdbFileSize pulumi.IntPtrInput `pulumi:"rdbFileSize"`
	// The shard ID where the RDB file is located.
	ShardId pulumi.StringPtrInput `pulumi:"shardId"`
}

func (BackupBackupPointDownloadUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupBackupPointDownloadUrl)(nil)).Elem()
}

func (i BackupBackupPointDownloadUrlArgs) ToBackupBackupPointDownloadUrlOutput() BackupBackupPointDownloadUrlOutput {
	return i.ToBackupBackupPointDownloadUrlOutputWithContext(context.Background())
}

func (i BackupBackupPointDownloadUrlArgs) ToBackupBackupPointDownloadUrlOutputWithContext(ctx context.Context) BackupBackupPointDownloadUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupBackupPointDownloadUrlOutput)
}

// BackupBackupPointDownloadUrlArrayInput is an input type that accepts BackupBackupPointDownloadUrlArray and BackupBackupPointDownloadUrlArrayOutput values.
// You can construct a concrete instance of `BackupBackupPointDownloadUrlArrayInput` via:
//
//	BackupBackupPointDownloadUrlArray{ BackupBackupPointDownloadUrlArgs{...} }
type BackupBackupPointDownloadUrlArrayInput interface {
	pulumi.Input

	ToBackupBackupPointDownloadUrlArrayOutput() BackupBackupPointDownloadUrlArrayOutput
	ToBackupBackupPointDownloadUrlArrayOutputWithContext(context.Context) BackupBackupPointDownloadUrlArrayOutput
}

type BackupBackupPointDownloadUrlArray []BackupBackupPointDownloadUrlInput

func (BackupBackupPointDownloadUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupBackupPointDownloadUrl)(nil)).Elem()
}

func (i BackupBackupPointDownloadUrlArray) ToBackupBackupPointDownloadUrlArrayOutput() BackupBackupPointDownloadUrlArrayOutput {
	return i.ToBackupBackupPointDownloadUrlArrayOutputWithContext(context.Background())
}

func (i BackupBackupPointDownloadUrlArray) ToBackupBackupPointDownloadUrlArrayOutputWithContext(ctx context.Context) BackupBackupPointDownloadUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupBackupPointDownloadUrlArrayOutput)
}

type BackupBackupPointDownloadUrlOutput struct{ *pulumi.OutputState }

func (BackupBackupPointDownloadUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupBackupPointDownloadUrl)(nil)).Elem()
}

func (o BackupBackupPointDownloadUrlOutput) ToBackupBackupPointDownloadUrlOutput() BackupBackupPointDownloadUrlOutput {
	return o
}

func (o BackupBackupPointDownloadUrlOutput) ToBackupBackupPointDownloadUrlOutputWithContext(ctx context.Context) BackupBackupPointDownloadUrlOutput {
	return o
}

// The private network download address for RDB files.
func (o BackupBackupPointDownloadUrlOutput) PrivateDownloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupBackupPointDownloadUrl) *string { return v.PrivateDownloadUrl }).(pulumi.StringPtrOutput)
}

// The public network download address for RDB files.
func (o BackupBackupPointDownloadUrlOutput) PublicDownloadUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupBackupPointDownloadUrl) *string { return v.PublicDownloadUrl }).(pulumi.StringPtrOutput)
}

// RDB file size, unit: Byte.
func (o BackupBackupPointDownloadUrlOutput) RdbFileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupBackupPointDownloadUrl) *int { return v.RdbFileSize }).(pulumi.IntPtrOutput)
}

// The shard ID where the RDB file is located.
func (o BackupBackupPointDownloadUrlOutput) ShardId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupBackupPointDownloadUrl) *string { return v.ShardId }).(pulumi.StringPtrOutput)
}

type BackupBackupPointDownloadUrlArrayOutput struct{ *pulumi.OutputState }

func (BackupBackupPointDownloadUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupBackupPointDownloadUrl)(nil)).Elem()
}

func (o BackupBackupPointDownloadUrlArrayOutput) ToBackupBackupPointDownloadUrlArrayOutput() BackupBackupPointDownloadUrlArrayOutput {
	return o
}

func (o BackupBackupPointDownloadUrlArrayOutput) ToBackupBackupPointDownloadUrlArrayOutputWithContext(ctx context.Context) BackupBackupPointDownloadUrlArrayOutput {
	return o
}

func (o BackupBackupPointDownloadUrlArrayOutput) Index(i pulumi.IntInput) BackupBackupPointDownloadUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupBackupPointDownloadUrl {
		return vs[0].([]BackupBackupPointDownloadUrl)[vs[1].(int)]
	}).(BackupBackupPointDownloadUrlOutput)
}

type BackupInstanceInfo struct {
	// Id of account.
	AccountId *int `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType *string `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType *string `pulumi:"chargeType"`
	// The status of the deletion protection function of the instance.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// Engine version of instance.
	EngineVersion *string `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime *string `pulumi:"expiredTime"`
	// Id of instance to create backup.
	InstanceId *string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName *string `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime *string `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType *string `pulumi:"networkType"`
	// Id of region.
	RegionId *string `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas *int `pulumi:"replicas"`
	// Capacity of shard.
	ShardCapacity *int `pulumi:"shardCapacity"`
	// The number of shards in the instance.
	ShardNumber *int `pulumi:"shardNumber"`
	// Total capacity of instance.
	TotalCapacity *int `pulumi:"totalCapacity"`
	// The private network ID of the instance.
	VpcId *string `pulumi:"vpcId"`
	// List of id of zone.
	ZoneIds []string `pulumi:"zoneIds"`
}

// BackupInstanceInfoInput is an input type that accepts BackupInstanceInfoArgs and BackupInstanceInfoOutput values.
// You can construct a concrete instance of `BackupInstanceInfoInput` via:
//
//	BackupInstanceInfoArgs{...}
type BackupInstanceInfoInput interface {
	pulumi.Input

	ToBackupInstanceInfoOutput() BackupInstanceInfoOutput
	ToBackupInstanceInfoOutputWithContext(context.Context) BackupInstanceInfoOutput
}

type BackupInstanceInfoArgs struct {
	// Id of account.
	AccountId pulumi.IntPtrInput `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	// The status of the deletion protection function of the instance.
	DeletionProtection pulumi.StringPtrInput `pulumi:"deletionProtection"`
	// Engine version of instance.
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime pulumi.StringPtrInput `pulumi:"expiredTime"`
	// Id of instance to create backup.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime pulumi.StringPtrInput `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// Id of region.
	RegionId pulumi.StringPtrInput `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Capacity of shard.
	ShardCapacity pulumi.IntPtrInput `pulumi:"shardCapacity"`
	// The number of shards in the instance.
	ShardNumber pulumi.IntPtrInput `pulumi:"shardNumber"`
	// Total capacity of instance.
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// The private network ID of the instance.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// List of id of zone.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (BackupInstanceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceInfo)(nil)).Elem()
}

func (i BackupInstanceInfoArgs) ToBackupInstanceInfoOutput() BackupInstanceInfoOutput {
	return i.ToBackupInstanceInfoOutputWithContext(context.Background())
}

func (i BackupInstanceInfoArgs) ToBackupInstanceInfoOutputWithContext(ctx context.Context) BackupInstanceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceInfoOutput)
}

// BackupInstanceInfoArrayInput is an input type that accepts BackupInstanceInfoArray and BackupInstanceInfoArrayOutput values.
// You can construct a concrete instance of `BackupInstanceInfoArrayInput` via:
//
//	BackupInstanceInfoArray{ BackupInstanceInfoArgs{...} }
type BackupInstanceInfoArrayInput interface {
	pulumi.Input

	ToBackupInstanceInfoArrayOutput() BackupInstanceInfoArrayOutput
	ToBackupInstanceInfoArrayOutputWithContext(context.Context) BackupInstanceInfoArrayOutput
}

type BackupInstanceInfoArray []BackupInstanceInfoInput

func (BackupInstanceInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupInstanceInfo)(nil)).Elem()
}

func (i BackupInstanceInfoArray) ToBackupInstanceInfoArrayOutput() BackupInstanceInfoArrayOutput {
	return i.ToBackupInstanceInfoArrayOutputWithContext(context.Background())
}

func (i BackupInstanceInfoArray) ToBackupInstanceInfoArrayOutputWithContext(ctx context.Context) BackupInstanceInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceInfoArrayOutput)
}

type BackupInstanceInfoOutput struct{ *pulumi.OutputState }

func (BackupInstanceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceInfo)(nil)).Elem()
}

func (o BackupInstanceInfoOutput) ToBackupInstanceInfoOutput() BackupInstanceInfoOutput {
	return o
}

func (o BackupInstanceInfoOutput) ToBackupInstanceInfoOutputWithContext(ctx context.Context) BackupInstanceInfoOutput {
	return o
}

// Id of account.
func (o BackupInstanceInfoOutput) AccountId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *int { return v.AccountId }).(pulumi.IntPtrOutput)
}

// Arch type of instance(Standard/Cluster).
func (o BackupInstanceInfoOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// Charge type of instance(Postpaid/Prepaid).
func (o BackupInstanceInfoOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// The status of the deletion protection function of the instance.
func (o BackupInstanceInfoOutput) DeletionProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.DeletionProtection }).(pulumi.StringPtrOutput)
}

// Engine version of instance.
func (o BackupInstanceInfoOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// Expired time of instance.
func (o BackupInstanceInfoOutput) ExpiredTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.ExpiredTime }).(pulumi.StringPtrOutput)
}

// Id of instance to create backup.
func (o BackupInstanceInfoOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Name of instance.
func (o BackupInstanceInfoOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The maintainable period (in UTC) of the instance.
func (o BackupInstanceInfoOutput) MaintenanceTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.MaintenanceTime }).(pulumi.StringPtrOutput)
}

// Network type of instance.
func (o BackupInstanceInfoOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// Id of region.
func (o BackupInstanceInfoOutput) RegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.RegionId }).(pulumi.StringPtrOutput)
}

// Count of replica in which shard.
func (o BackupInstanceInfoOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Capacity of shard.
func (o BackupInstanceInfoOutput) ShardCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *int { return v.ShardCapacity }).(pulumi.IntPtrOutput)
}

// The number of shards in the instance.
func (o BackupInstanceInfoOutput) ShardNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *int { return v.ShardNumber }).(pulumi.IntPtrOutput)
}

// Total capacity of instance.
func (o BackupInstanceInfoOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// The private network ID of the instance.
func (o BackupInstanceInfoOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceInfo) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// List of id of zone.
func (o BackupInstanceInfoOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupInstanceInfo) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type BackupInstanceInfoArrayOutput struct{ *pulumi.OutputState }

func (BackupInstanceInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupInstanceInfo)(nil)).Elem()
}

func (o BackupInstanceInfoArrayOutput) ToBackupInstanceInfoArrayOutput() BackupInstanceInfoArrayOutput {
	return o
}

func (o BackupInstanceInfoArrayOutput) ToBackupInstanceInfoArrayOutputWithContext(ctx context.Context) BackupInstanceInfoArrayOutput {
	return o
}

func (o BackupInstanceInfoArrayOutput) Index(i pulumi.IntInput) BackupInstanceInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupInstanceInfo {
		return vs[0].([]BackupInstanceInfo)[vs[1].(int)]
	}).(BackupInstanceInfoOutput)
}

type BackupsBackup struct {
	// The download address information of the backup file to which the current backup point belongs.
	BackupPointDownloadUrls []BackupsBackupBackupPointDownloadUrl `pulumi:"backupPointDownloadUrls"`
	// The id of backup point.
	BackupPointId string `pulumi:"backupPointId"`
	// Backup strategy.
	BackupStrategy string `pulumi:"backupStrategy"`
	// Backup type.
	BackupType string `pulumi:"backupType"`
	// Query end time.
	EndTime string `pulumi:"endTime"`
	// (**Deprecated**) Replaced by instance_info. Information of instance.
	//
	// Deprecated: Replaced by instance_info.
	InstanceDetails []BackupsBackupInstanceDetail `pulumi:"instanceDetails"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Information of instance.
	InstanceInfos []BackupsBackupInstanceInfo `pulumi:"instanceInfos"`
	// Back up the project to which it belongs.
	ProjectName string `pulumi:"projectName"`
	// Size in MiB.
	Size int `pulumi:"size"`
	// Query start time.
	StartTime string `pulumi:"startTime"`
	// Status of backup (Creating/Available/Unavailable/Deleting).
	Status string `pulumi:"status"`
	// Backup retention days.
	Ttl int `pulumi:"ttl"`
}

// BackupsBackupInput is an input type that accepts BackupsBackupArgs and BackupsBackupOutput values.
// You can construct a concrete instance of `BackupsBackupInput` via:
//
//	BackupsBackupArgs{...}
type BackupsBackupInput interface {
	pulumi.Input

	ToBackupsBackupOutput() BackupsBackupOutput
	ToBackupsBackupOutputWithContext(context.Context) BackupsBackupOutput
}

type BackupsBackupArgs struct {
	// The download address information of the backup file to which the current backup point belongs.
	BackupPointDownloadUrls BackupsBackupBackupPointDownloadUrlArrayInput `pulumi:"backupPointDownloadUrls"`
	// The id of backup point.
	BackupPointId pulumi.StringInput `pulumi:"backupPointId"`
	// Backup strategy.
	BackupStrategy pulumi.StringInput `pulumi:"backupStrategy"`
	// Backup type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// Query end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// (**Deprecated**) Replaced by instance_info. Information of instance.
	//
	// Deprecated: Replaced by instance_info.
	InstanceDetails BackupsBackupInstanceDetailArrayInput `pulumi:"instanceDetails"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Information of instance.
	InstanceInfos BackupsBackupInstanceInfoArrayInput `pulumi:"instanceInfos"`
	// Back up the project to which it belongs.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Size in MiB.
	Size pulumi.IntInput `pulumi:"size"`
	// Query start time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Status of backup (Creating/Available/Unavailable/Deleting).
	Status pulumi.StringInput `pulumi:"status"`
	// Backup retention days.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (BackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackup)(nil)).Elem()
}

func (i BackupsBackupArgs) ToBackupsBackupOutput() BackupsBackupOutput {
	return i.ToBackupsBackupOutputWithContext(context.Background())
}

func (i BackupsBackupArgs) ToBackupsBackupOutputWithContext(ctx context.Context) BackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupOutput)
}

// BackupsBackupArrayInput is an input type that accepts BackupsBackupArray and BackupsBackupArrayOutput values.
// You can construct a concrete instance of `BackupsBackupArrayInput` via:
//
//	BackupsBackupArray{ BackupsBackupArgs{...} }
type BackupsBackupArrayInput interface {
	pulumi.Input

	ToBackupsBackupArrayOutput() BackupsBackupArrayOutput
	ToBackupsBackupArrayOutputWithContext(context.Context) BackupsBackupArrayOutput
}

type BackupsBackupArray []BackupsBackupInput

func (BackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackup)(nil)).Elem()
}

func (i BackupsBackupArray) ToBackupsBackupArrayOutput() BackupsBackupArrayOutput {
	return i.ToBackupsBackupArrayOutputWithContext(context.Background())
}

func (i BackupsBackupArray) ToBackupsBackupArrayOutputWithContext(ctx context.Context) BackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupArrayOutput)
}

type BackupsBackupOutput struct{ *pulumi.OutputState }

func (BackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackup)(nil)).Elem()
}

func (o BackupsBackupOutput) ToBackupsBackupOutput() BackupsBackupOutput {
	return o
}

func (o BackupsBackupOutput) ToBackupsBackupOutputWithContext(ctx context.Context) BackupsBackupOutput {
	return o
}

// The download address information of the backup file to which the current backup point belongs.
func (o BackupsBackupOutput) BackupPointDownloadUrls() BackupsBackupBackupPointDownloadUrlArrayOutput {
	return o.ApplyT(func(v BackupsBackup) []BackupsBackupBackupPointDownloadUrl { return v.BackupPointDownloadUrls }).(BackupsBackupBackupPointDownloadUrlArrayOutput)
}

// The id of backup point.
func (o BackupsBackupOutput) BackupPointId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupPointId }).(pulumi.StringOutput)
}

// Backup strategy.
func (o BackupsBackupOutput) BackupStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupStrategy }).(pulumi.StringOutput)
}

// Backup type.
func (o BackupsBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupType }).(pulumi.StringOutput)
}

// Query end time.
func (o BackupsBackupOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.EndTime }).(pulumi.StringOutput)
}

// (**Deprecated**) Replaced by instance_info. Information of instance.
//
// Deprecated: Replaced by instance_info.
func (o BackupsBackupOutput) InstanceDetails() BackupsBackupInstanceDetailArrayOutput {
	return o.ApplyT(func(v BackupsBackup) []BackupsBackupInstanceDetail { return v.InstanceDetails }).(BackupsBackupInstanceDetailArrayOutput)
}

// Id of instance.
func (o BackupsBackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Information of instance.
func (o BackupsBackupOutput) InstanceInfos() BackupsBackupInstanceInfoArrayOutput {
	return o.ApplyT(func(v BackupsBackup) []BackupsBackupInstanceInfo { return v.InstanceInfos }).(BackupsBackupInstanceInfoArrayOutput)
}

// Back up the project to which it belongs.
func (o BackupsBackupOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Size in MiB.
func (o BackupsBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackup) int { return v.Size }).(pulumi.IntOutput)
}

// Query start time.
func (o BackupsBackupOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.StartTime }).(pulumi.StringOutput)
}

// Status of backup (Creating/Available/Unavailable/Deleting).
func (o BackupsBackupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.Status }).(pulumi.StringOutput)
}

// Backup retention days.
func (o BackupsBackupOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackup) int { return v.Ttl }).(pulumi.IntOutput)
}

type BackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackup)(nil)).Elem()
}

func (o BackupsBackupArrayOutput) ToBackupsBackupArrayOutput() BackupsBackupArrayOutput {
	return o
}

func (o BackupsBackupArrayOutput) ToBackupsBackupArrayOutputWithContext(ctx context.Context) BackupsBackupArrayOutput {
	return o
}

func (o BackupsBackupArrayOutput) Index(i pulumi.IntInput) BackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackup {
		return vs[0].([]BackupsBackup)[vs[1].(int)]
	}).(BackupsBackupOutput)
}

type BackupsBackupBackupPointDownloadUrl struct {
	// The private network download address for RDB files.
	PrivateDownloadUrl string `pulumi:"privateDownloadUrl"`
	// The public network download address for RDB files.
	PublicDownloadUrl string `pulumi:"publicDownloadUrl"`
	// RDB file size, unit: Byte.
	RdbFileSize int `pulumi:"rdbFileSize"`
	// The shard ID where the RDB file is located.
	ShardId string `pulumi:"shardId"`
}

// BackupsBackupBackupPointDownloadUrlInput is an input type that accepts BackupsBackupBackupPointDownloadUrlArgs and BackupsBackupBackupPointDownloadUrlOutput values.
// You can construct a concrete instance of `BackupsBackupBackupPointDownloadUrlInput` via:
//
//	BackupsBackupBackupPointDownloadUrlArgs{...}
type BackupsBackupBackupPointDownloadUrlInput interface {
	pulumi.Input

	ToBackupsBackupBackupPointDownloadUrlOutput() BackupsBackupBackupPointDownloadUrlOutput
	ToBackupsBackupBackupPointDownloadUrlOutputWithContext(context.Context) BackupsBackupBackupPointDownloadUrlOutput
}

type BackupsBackupBackupPointDownloadUrlArgs struct {
	// The private network download address for RDB files.
	PrivateDownloadUrl pulumi.StringInput `pulumi:"privateDownloadUrl"`
	// The public network download address for RDB files.
	PublicDownloadUrl pulumi.StringInput `pulumi:"publicDownloadUrl"`
	// RDB file size, unit: Byte.
	RdbFileSize pulumi.IntInput `pulumi:"rdbFileSize"`
	// The shard ID where the RDB file is located.
	ShardId pulumi.StringInput `pulumi:"shardId"`
}

func (BackupsBackupBackupPointDownloadUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupBackupPointDownloadUrl)(nil)).Elem()
}

func (i BackupsBackupBackupPointDownloadUrlArgs) ToBackupsBackupBackupPointDownloadUrlOutput() BackupsBackupBackupPointDownloadUrlOutput {
	return i.ToBackupsBackupBackupPointDownloadUrlOutputWithContext(context.Background())
}

func (i BackupsBackupBackupPointDownloadUrlArgs) ToBackupsBackupBackupPointDownloadUrlOutputWithContext(ctx context.Context) BackupsBackupBackupPointDownloadUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupBackupPointDownloadUrlOutput)
}

// BackupsBackupBackupPointDownloadUrlArrayInput is an input type that accepts BackupsBackupBackupPointDownloadUrlArray and BackupsBackupBackupPointDownloadUrlArrayOutput values.
// You can construct a concrete instance of `BackupsBackupBackupPointDownloadUrlArrayInput` via:
//
//	BackupsBackupBackupPointDownloadUrlArray{ BackupsBackupBackupPointDownloadUrlArgs{...} }
type BackupsBackupBackupPointDownloadUrlArrayInput interface {
	pulumi.Input

	ToBackupsBackupBackupPointDownloadUrlArrayOutput() BackupsBackupBackupPointDownloadUrlArrayOutput
	ToBackupsBackupBackupPointDownloadUrlArrayOutputWithContext(context.Context) BackupsBackupBackupPointDownloadUrlArrayOutput
}

type BackupsBackupBackupPointDownloadUrlArray []BackupsBackupBackupPointDownloadUrlInput

func (BackupsBackupBackupPointDownloadUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupBackupPointDownloadUrl)(nil)).Elem()
}

func (i BackupsBackupBackupPointDownloadUrlArray) ToBackupsBackupBackupPointDownloadUrlArrayOutput() BackupsBackupBackupPointDownloadUrlArrayOutput {
	return i.ToBackupsBackupBackupPointDownloadUrlArrayOutputWithContext(context.Background())
}

func (i BackupsBackupBackupPointDownloadUrlArray) ToBackupsBackupBackupPointDownloadUrlArrayOutputWithContext(ctx context.Context) BackupsBackupBackupPointDownloadUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupBackupPointDownloadUrlArrayOutput)
}

type BackupsBackupBackupPointDownloadUrlOutput struct{ *pulumi.OutputState }

func (BackupsBackupBackupPointDownloadUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupBackupPointDownloadUrl)(nil)).Elem()
}

func (o BackupsBackupBackupPointDownloadUrlOutput) ToBackupsBackupBackupPointDownloadUrlOutput() BackupsBackupBackupPointDownloadUrlOutput {
	return o
}

func (o BackupsBackupBackupPointDownloadUrlOutput) ToBackupsBackupBackupPointDownloadUrlOutputWithContext(ctx context.Context) BackupsBackupBackupPointDownloadUrlOutput {
	return o
}

// The private network download address for RDB files.
func (o BackupsBackupBackupPointDownloadUrlOutput) PrivateDownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupBackupPointDownloadUrl) string { return v.PrivateDownloadUrl }).(pulumi.StringOutput)
}

// The public network download address for RDB files.
func (o BackupsBackupBackupPointDownloadUrlOutput) PublicDownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupBackupPointDownloadUrl) string { return v.PublicDownloadUrl }).(pulumi.StringOutput)
}

// RDB file size, unit: Byte.
func (o BackupsBackupBackupPointDownloadUrlOutput) RdbFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupBackupPointDownloadUrl) int { return v.RdbFileSize }).(pulumi.IntOutput)
}

// The shard ID where the RDB file is located.
func (o BackupsBackupBackupPointDownloadUrlOutput) ShardId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupBackupPointDownloadUrl) string { return v.ShardId }).(pulumi.StringOutput)
}

type BackupsBackupBackupPointDownloadUrlArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupBackupPointDownloadUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupBackupPointDownloadUrl)(nil)).Elem()
}

func (o BackupsBackupBackupPointDownloadUrlArrayOutput) ToBackupsBackupBackupPointDownloadUrlArrayOutput() BackupsBackupBackupPointDownloadUrlArrayOutput {
	return o
}

func (o BackupsBackupBackupPointDownloadUrlArrayOutput) ToBackupsBackupBackupPointDownloadUrlArrayOutputWithContext(ctx context.Context) BackupsBackupBackupPointDownloadUrlArrayOutput {
	return o
}

func (o BackupsBackupBackupPointDownloadUrlArrayOutput) Index(i pulumi.IntInput) BackupsBackupBackupPointDownloadUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackupBackupPointDownloadUrl {
		return vs[0].([]BackupsBackupBackupPointDownloadUrl)[vs[1].(int)]
	}).(BackupsBackupBackupPointDownloadUrlOutput)
}

type BackupsBackupInstanceDetail struct {
	// Id of account.
	AccountId int `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType string `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType string `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion string `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime string `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType string `pulumi:"networkType"`
	// Back up the project to which it belongs.
	ProjectName string `pulumi:"projectName"`
	// Id of region.
	RegionId string `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas int `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu int `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity int `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount int `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity int `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity int `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos []BackupsBackupInstanceDetailVpcInfo `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds []string `pulumi:"zoneIds"`
}

// BackupsBackupInstanceDetailInput is an input type that accepts BackupsBackupInstanceDetailArgs and BackupsBackupInstanceDetailOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceDetailInput` via:
//
//	BackupsBackupInstanceDetailArgs{...}
type BackupsBackupInstanceDetailInput interface {
	pulumi.Input

	ToBackupsBackupInstanceDetailOutput() BackupsBackupInstanceDetailOutput
	ToBackupsBackupInstanceDetailOutputWithContext(context.Context) BackupsBackupInstanceDetailOutput
}

type BackupsBackupInstanceDetailArgs struct {
	// Id of account.
	AccountId pulumi.IntInput `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType pulumi.StringInput `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Back up the project to which it belongs.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Id of region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas pulumi.IntInput `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu pulumi.IntInput `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity pulumi.IntInput `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount pulumi.IntInput `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity pulumi.IntInput `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity pulumi.IntInput `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos BackupsBackupInstanceDetailVpcInfoArrayInput `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (BackupsBackupInstanceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceDetail)(nil)).Elem()
}

func (i BackupsBackupInstanceDetailArgs) ToBackupsBackupInstanceDetailOutput() BackupsBackupInstanceDetailOutput {
	return i.ToBackupsBackupInstanceDetailOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceDetailArgs) ToBackupsBackupInstanceDetailOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceDetailOutput)
}

// BackupsBackupInstanceDetailArrayInput is an input type that accepts BackupsBackupInstanceDetailArray and BackupsBackupInstanceDetailArrayOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceDetailArrayInput` via:
//
//	BackupsBackupInstanceDetailArray{ BackupsBackupInstanceDetailArgs{...} }
type BackupsBackupInstanceDetailArrayInput interface {
	pulumi.Input

	ToBackupsBackupInstanceDetailArrayOutput() BackupsBackupInstanceDetailArrayOutput
	ToBackupsBackupInstanceDetailArrayOutputWithContext(context.Context) BackupsBackupInstanceDetailArrayOutput
}

type BackupsBackupInstanceDetailArray []BackupsBackupInstanceDetailInput

func (BackupsBackupInstanceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceDetail)(nil)).Elem()
}

func (i BackupsBackupInstanceDetailArray) ToBackupsBackupInstanceDetailArrayOutput() BackupsBackupInstanceDetailArrayOutput {
	return i.ToBackupsBackupInstanceDetailArrayOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceDetailArray) ToBackupsBackupInstanceDetailArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceDetailArrayOutput)
}

type BackupsBackupInstanceDetailOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceDetail)(nil)).Elem()
}

func (o BackupsBackupInstanceDetailOutput) ToBackupsBackupInstanceDetailOutput() BackupsBackupInstanceDetailOutput {
	return o
}

func (o BackupsBackupInstanceDetailOutput) ToBackupsBackupInstanceDetailOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailOutput {
	return o
}

// Id of account.
func (o BackupsBackupInstanceDetailOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.AccountId }).(pulumi.IntOutput)
}

// Arch type of instance(Standard/Cluster).
func (o BackupsBackupInstanceDetailOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.ArchType }).(pulumi.StringOutput)
}

// Charge type of instance(Postpaid/Prepaid).
func (o BackupsBackupInstanceDetailOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Engine version of instance.
func (o BackupsBackupInstanceDetailOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Expired time of instance.
func (o BackupsBackupInstanceDetailOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Id of instance.
func (o BackupsBackupInstanceDetailOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o BackupsBackupInstanceDetailOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maintainable period (in UTC) of the instance.
func (o BackupsBackupInstanceDetailOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// Network type of instance.
func (o BackupsBackupInstanceDetailOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Back up the project to which it belongs.
func (o BackupsBackupInstanceDetailOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Id of region.
func (o BackupsBackupInstanceDetailOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.RegionId }).(pulumi.StringOutput)
}

// Count of replica in which shard.
func (o BackupsBackupInstanceDetailOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.Replicas }).(pulumi.IntOutput)
}

// Count of cpu cores of instance.
func (o BackupsBackupInstanceDetailOutput) ServerCpu() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.ServerCpu }).(pulumi.IntOutput)
}

// Capacity of shard.
func (o BackupsBackupInstanceDetailOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

// Count of shard.
func (o BackupsBackupInstanceDetailOutput) ShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.ShardCount }).(pulumi.IntOutput)
}

// Total capacity of instance.
func (o BackupsBackupInstanceDetailOutput) TotalCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.TotalCapacity }).(pulumi.IntOutput)
}

// Capacity used of this instance.
func (o BackupsBackupInstanceDetailOutput) UsedCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.UsedCapacity }).(pulumi.IntOutput)
}

// Information of vpc.
func (o BackupsBackupInstanceDetailOutput) VpcInfos() BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) []BackupsBackupInstanceDetailVpcInfo { return v.VpcInfos }).(BackupsBackupInstanceDetailVpcInfoArrayOutput)
}

// List of id of zone.
func (o BackupsBackupInstanceDetailOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type BackupsBackupInstanceDetailArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceDetail)(nil)).Elem()
}

func (o BackupsBackupInstanceDetailArrayOutput) ToBackupsBackupInstanceDetailArrayOutput() BackupsBackupInstanceDetailArrayOutput {
	return o
}

func (o BackupsBackupInstanceDetailArrayOutput) ToBackupsBackupInstanceDetailArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailArrayOutput {
	return o
}

func (o BackupsBackupInstanceDetailArrayOutput) Index(i pulumi.IntInput) BackupsBackupInstanceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackupInstanceDetail {
		return vs[0].([]BackupsBackupInstanceDetail)[vs[1].(int)]
	}).(BackupsBackupInstanceDetailOutput)
}

type BackupsBackupInstanceDetailVpcInfo struct {
	// Id of vpc.
	Id string `pulumi:"id"`
	// Name of vpc.
	Name string `pulumi:"name"`
}

// BackupsBackupInstanceDetailVpcInfoInput is an input type that accepts BackupsBackupInstanceDetailVpcInfoArgs and BackupsBackupInstanceDetailVpcInfoOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceDetailVpcInfoInput` via:
//
//	BackupsBackupInstanceDetailVpcInfoArgs{...}
type BackupsBackupInstanceDetailVpcInfoInput interface {
	pulumi.Input

	ToBackupsBackupInstanceDetailVpcInfoOutput() BackupsBackupInstanceDetailVpcInfoOutput
	ToBackupsBackupInstanceDetailVpcInfoOutputWithContext(context.Context) BackupsBackupInstanceDetailVpcInfoOutput
}

type BackupsBackupInstanceDetailVpcInfoArgs struct {
	// Id of vpc.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of vpc.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BackupsBackupInstanceDetailVpcInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i BackupsBackupInstanceDetailVpcInfoArgs) ToBackupsBackupInstanceDetailVpcInfoOutput() BackupsBackupInstanceDetailVpcInfoOutput {
	return i.ToBackupsBackupInstanceDetailVpcInfoOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceDetailVpcInfoArgs) ToBackupsBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailVpcInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceDetailVpcInfoOutput)
}

// BackupsBackupInstanceDetailVpcInfoArrayInput is an input type that accepts BackupsBackupInstanceDetailVpcInfoArray and BackupsBackupInstanceDetailVpcInfoArrayOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceDetailVpcInfoArrayInput` via:
//
//	BackupsBackupInstanceDetailVpcInfoArray{ BackupsBackupInstanceDetailVpcInfoArgs{...} }
type BackupsBackupInstanceDetailVpcInfoArrayInput interface {
	pulumi.Input

	ToBackupsBackupInstanceDetailVpcInfoArrayOutput() BackupsBackupInstanceDetailVpcInfoArrayOutput
	ToBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Context) BackupsBackupInstanceDetailVpcInfoArrayOutput
}

type BackupsBackupInstanceDetailVpcInfoArray []BackupsBackupInstanceDetailVpcInfoInput

func (BackupsBackupInstanceDetailVpcInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i BackupsBackupInstanceDetailVpcInfoArray) ToBackupsBackupInstanceDetailVpcInfoArrayOutput() BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return i.ToBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceDetailVpcInfoArray) ToBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceDetailVpcInfoArrayOutput)
}

type BackupsBackupInstanceDetailVpcInfoOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceDetailVpcInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o BackupsBackupInstanceDetailVpcInfoOutput) ToBackupsBackupInstanceDetailVpcInfoOutput() BackupsBackupInstanceDetailVpcInfoOutput {
	return o
}

func (o BackupsBackupInstanceDetailVpcInfoOutput) ToBackupsBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailVpcInfoOutput {
	return o
}

// Id of vpc.
func (o BackupsBackupInstanceDetailVpcInfoOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetailVpcInfo) string { return v.Id }).(pulumi.StringOutput)
}

// Name of vpc.
func (o BackupsBackupInstanceDetailVpcInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetailVpcInfo) string { return v.Name }).(pulumi.StringOutput)
}

type BackupsBackupInstanceDetailVpcInfoArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceDetailVpcInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o BackupsBackupInstanceDetailVpcInfoArrayOutput) ToBackupsBackupInstanceDetailVpcInfoArrayOutput() BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o BackupsBackupInstanceDetailVpcInfoArrayOutput) ToBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o BackupsBackupInstanceDetailVpcInfoArrayOutput) Index(i pulumi.IntInput) BackupsBackupInstanceDetailVpcInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackupInstanceDetailVpcInfo {
		return vs[0].([]BackupsBackupInstanceDetailVpcInfo)[vs[1].(int)]
	}).(BackupsBackupInstanceDetailVpcInfoOutput)
}

type BackupsBackupInstanceInfo struct {
	// Id of account.
	AccountId int `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType string `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType string `pulumi:"chargeType"`
	// The status of the deletion protection function of the instance.
	DeletionProtection string `pulumi:"deletionProtection"`
	// Engine version of instance.
	EngineVersion string `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime string `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType string `pulumi:"networkType"`
	// Id of region.
	RegionId string `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas int `pulumi:"replicas"`
	// Capacity of shard.
	ShardCapacity int `pulumi:"shardCapacity"`
	// The number of shards in the instance.
	ShardNumber int `pulumi:"shardNumber"`
	// Total capacity of instance.
	TotalCapacity int `pulumi:"totalCapacity"`
	// The private network ID of the instance.
	VpcId string `pulumi:"vpcId"`
	// List of id of zone.
	ZoneIds []string `pulumi:"zoneIds"`
}

// BackupsBackupInstanceInfoInput is an input type that accepts BackupsBackupInstanceInfoArgs and BackupsBackupInstanceInfoOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceInfoInput` via:
//
//	BackupsBackupInstanceInfoArgs{...}
type BackupsBackupInstanceInfoInput interface {
	pulumi.Input

	ToBackupsBackupInstanceInfoOutput() BackupsBackupInstanceInfoOutput
	ToBackupsBackupInstanceInfoOutputWithContext(context.Context) BackupsBackupInstanceInfoOutput
}

type BackupsBackupInstanceInfoArgs struct {
	// Id of account.
	AccountId pulumi.IntInput `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType pulumi.StringInput `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The status of the deletion protection function of the instance.
	DeletionProtection pulumi.StringInput `pulumi:"deletionProtection"`
	// Engine version of instance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Id of region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas pulumi.IntInput `pulumi:"replicas"`
	// Capacity of shard.
	ShardCapacity pulumi.IntInput `pulumi:"shardCapacity"`
	// The number of shards in the instance.
	ShardNumber pulumi.IntInput `pulumi:"shardNumber"`
	// Total capacity of instance.
	TotalCapacity pulumi.IntInput `pulumi:"totalCapacity"`
	// The private network ID of the instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// List of id of zone.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (BackupsBackupInstanceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceInfo)(nil)).Elem()
}

func (i BackupsBackupInstanceInfoArgs) ToBackupsBackupInstanceInfoOutput() BackupsBackupInstanceInfoOutput {
	return i.ToBackupsBackupInstanceInfoOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceInfoArgs) ToBackupsBackupInstanceInfoOutputWithContext(ctx context.Context) BackupsBackupInstanceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceInfoOutput)
}

// BackupsBackupInstanceInfoArrayInput is an input type that accepts BackupsBackupInstanceInfoArray and BackupsBackupInstanceInfoArrayOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceInfoArrayInput` via:
//
//	BackupsBackupInstanceInfoArray{ BackupsBackupInstanceInfoArgs{...} }
type BackupsBackupInstanceInfoArrayInput interface {
	pulumi.Input

	ToBackupsBackupInstanceInfoArrayOutput() BackupsBackupInstanceInfoArrayOutput
	ToBackupsBackupInstanceInfoArrayOutputWithContext(context.Context) BackupsBackupInstanceInfoArrayOutput
}

type BackupsBackupInstanceInfoArray []BackupsBackupInstanceInfoInput

func (BackupsBackupInstanceInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceInfo)(nil)).Elem()
}

func (i BackupsBackupInstanceInfoArray) ToBackupsBackupInstanceInfoArrayOutput() BackupsBackupInstanceInfoArrayOutput {
	return i.ToBackupsBackupInstanceInfoArrayOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceInfoArray) ToBackupsBackupInstanceInfoArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceInfoArrayOutput)
}

type BackupsBackupInstanceInfoOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceInfo)(nil)).Elem()
}

func (o BackupsBackupInstanceInfoOutput) ToBackupsBackupInstanceInfoOutput() BackupsBackupInstanceInfoOutput {
	return o
}

func (o BackupsBackupInstanceInfoOutput) ToBackupsBackupInstanceInfoOutputWithContext(ctx context.Context) BackupsBackupInstanceInfoOutput {
	return o
}

// Id of account.
func (o BackupsBackupInstanceInfoOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) int { return v.AccountId }).(pulumi.IntOutput)
}

// Arch type of instance(Standard/Cluster).
func (o BackupsBackupInstanceInfoOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.ArchType }).(pulumi.StringOutput)
}

// Charge type of instance(Postpaid/Prepaid).
func (o BackupsBackupInstanceInfoOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The status of the deletion protection function of the instance.
func (o BackupsBackupInstanceInfoOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// Engine version of instance.
func (o BackupsBackupInstanceInfoOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Expired time of instance.
func (o BackupsBackupInstanceInfoOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Id of instance.
func (o BackupsBackupInstanceInfoOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o BackupsBackupInstanceInfoOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maintainable period (in UTC) of the instance.
func (o BackupsBackupInstanceInfoOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// Network type of instance.
func (o BackupsBackupInstanceInfoOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Id of region.
func (o BackupsBackupInstanceInfoOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.RegionId }).(pulumi.StringOutput)
}

// Count of replica in which shard.
func (o BackupsBackupInstanceInfoOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) int { return v.Replicas }).(pulumi.IntOutput)
}

// Capacity of shard.
func (o BackupsBackupInstanceInfoOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

// The number of shards in the instance.
func (o BackupsBackupInstanceInfoOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) int { return v.ShardNumber }).(pulumi.IntOutput)
}

// Total capacity of instance.
func (o BackupsBackupInstanceInfoOutput) TotalCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) int { return v.TotalCapacity }).(pulumi.IntOutput)
}

// The private network ID of the instance.
func (o BackupsBackupInstanceInfoOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) string { return v.VpcId }).(pulumi.StringOutput)
}

// List of id of zone.
func (o BackupsBackupInstanceInfoOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupsBackupInstanceInfo) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type BackupsBackupInstanceInfoArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceInfo)(nil)).Elem()
}

func (o BackupsBackupInstanceInfoArrayOutput) ToBackupsBackupInstanceInfoArrayOutput() BackupsBackupInstanceInfoArrayOutput {
	return o
}

func (o BackupsBackupInstanceInfoArrayOutput) ToBackupsBackupInstanceInfoArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceInfoArrayOutput {
	return o
}

func (o BackupsBackupInstanceInfoArrayOutput) Index(i pulumi.IntInput) BackupsBackupInstanceInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackupInstanceInfo {
		return vs[0].([]BackupsBackupInstanceInfo)[vs[1].(int)]
	}).(BackupsBackupInstanceInfoOutput)
}

type BigKeysBigKey struct {
	// The name of the database to which the big Key belongs.
	DbName string `pulumi:"dbName"`
	// The name of the big Key.
	KeyInfo string `pulumi:"keyInfo"`
	// Specify the data type used to filter the query results of hot keys.
	KeyType string `pulumi:"keyType"`
	// The number of elements contained in the large Key.
	ValueLen string `pulumi:"valueLen"`
	// The memory usage of large keys, unit: Byte.
	ValueSize string `pulumi:"valueSize"`
}

// BigKeysBigKeyInput is an input type that accepts BigKeysBigKeyArgs and BigKeysBigKeyOutput values.
// You can construct a concrete instance of `BigKeysBigKeyInput` via:
//
//	BigKeysBigKeyArgs{...}
type BigKeysBigKeyInput interface {
	pulumi.Input

	ToBigKeysBigKeyOutput() BigKeysBigKeyOutput
	ToBigKeysBigKeyOutputWithContext(context.Context) BigKeysBigKeyOutput
}

type BigKeysBigKeyArgs struct {
	// The name of the database to which the big Key belongs.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// The name of the big Key.
	KeyInfo pulumi.StringInput `pulumi:"keyInfo"`
	// Specify the data type used to filter the query results of hot keys.
	KeyType pulumi.StringInput `pulumi:"keyType"`
	// The number of elements contained in the large Key.
	ValueLen pulumi.StringInput `pulumi:"valueLen"`
	// The memory usage of large keys, unit: Byte.
	ValueSize pulumi.StringInput `pulumi:"valueSize"`
}

func (BigKeysBigKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BigKeysBigKey)(nil)).Elem()
}

func (i BigKeysBigKeyArgs) ToBigKeysBigKeyOutput() BigKeysBigKeyOutput {
	return i.ToBigKeysBigKeyOutputWithContext(context.Background())
}

func (i BigKeysBigKeyArgs) ToBigKeysBigKeyOutputWithContext(ctx context.Context) BigKeysBigKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigKeysBigKeyOutput)
}

// BigKeysBigKeyArrayInput is an input type that accepts BigKeysBigKeyArray and BigKeysBigKeyArrayOutput values.
// You can construct a concrete instance of `BigKeysBigKeyArrayInput` via:
//
//	BigKeysBigKeyArray{ BigKeysBigKeyArgs{...} }
type BigKeysBigKeyArrayInput interface {
	pulumi.Input

	ToBigKeysBigKeyArrayOutput() BigKeysBigKeyArrayOutput
	ToBigKeysBigKeyArrayOutputWithContext(context.Context) BigKeysBigKeyArrayOutput
}

type BigKeysBigKeyArray []BigKeysBigKeyInput

func (BigKeysBigKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BigKeysBigKey)(nil)).Elem()
}

func (i BigKeysBigKeyArray) ToBigKeysBigKeyArrayOutput() BigKeysBigKeyArrayOutput {
	return i.ToBigKeysBigKeyArrayOutputWithContext(context.Background())
}

func (i BigKeysBigKeyArray) ToBigKeysBigKeyArrayOutputWithContext(ctx context.Context) BigKeysBigKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigKeysBigKeyArrayOutput)
}

type BigKeysBigKeyOutput struct{ *pulumi.OutputState }

func (BigKeysBigKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BigKeysBigKey)(nil)).Elem()
}

func (o BigKeysBigKeyOutput) ToBigKeysBigKeyOutput() BigKeysBigKeyOutput {
	return o
}

func (o BigKeysBigKeyOutput) ToBigKeysBigKeyOutputWithContext(ctx context.Context) BigKeysBigKeyOutput {
	return o
}

// The name of the database to which the big Key belongs.
func (o BigKeysBigKeyOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v BigKeysBigKey) string { return v.DbName }).(pulumi.StringOutput)
}

// The name of the big Key.
func (o BigKeysBigKeyOutput) KeyInfo() pulumi.StringOutput {
	return o.ApplyT(func(v BigKeysBigKey) string { return v.KeyInfo }).(pulumi.StringOutput)
}

// Specify the data type used to filter the query results of hot keys.
func (o BigKeysBigKeyOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v BigKeysBigKey) string { return v.KeyType }).(pulumi.StringOutput)
}

// The number of elements contained in the large Key.
func (o BigKeysBigKeyOutput) ValueLen() pulumi.StringOutput {
	return o.ApplyT(func(v BigKeysBigKey) string { return v.ValueLen }).(pulumi.StringOutput)
}

// The memory usage of large keys, unit: Byte.
func (o BigKeysBigKeyOutput) ValueSize() pulumi.StringOutput {
	return o.ApplyT(func(v BigKeysBigKey) string { return v.ValueSize }).(pulumi.StringOutput)
}

type BigKeysBigKeyArrayOutput struct{ *pulumi.OutputState }

func (BigKeysBigKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BigKeysBigKey)(nil)).Elem()
}

func (o BigKeysBigKeyArrayOutput) ToBigKeysBigKeyArrayOutput() BigKeysBigKeyArrayOutput {
	return o
}

func (o BigKeysBigKeyArrayOutput) ToBigKeysBigKeyArrayOutputWithContext(ctx context.Context) BigKeysBigKeyArrayOutput {
	return o
}

func (o BigKeysBigKeyArrayOutput) Index(i pulumi.IntInput) BigKeysBigKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BigKeysBigKey {
		return vs[0].([]BigKeysBigKey)[vs[1].(int)]
	}).(BigKeysBigKeyOutput)
}

type InstanceConfigureNode struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az string `pulumi:"az"`
}

// InstanceConfigureNodeInput is an input type that accepts InstanceConfigureNodeArgs and InstanceConfigureNodeOutput values.
// You can construct a concrete instance of `InstanceConfigureNodeInput` via:
//
//	InstanceConfigureNodeArgs{...}
type InstanceConfigureNodeInput interface {
	pulumi.Input

	ToInstanceConfigureNodeOutput() InstanceConfigureNodeOutput
	ToInstanceConfigureNodeOutputWithContext(context.Context) InstanceConfigureNodeOutput
}

type InstanceConfigureNodeArgs struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az pulumi.StringInput `pulumi:"az"`
}

func (InstanceConfigureNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigureNode)(nil)).Elem()
}

func (i InstanceConfigureNodeArgs) ToInstanceConfigureNodeOutput() InstanceConfigureNodeOutput {
	return i.ToInstanceConfigureNodeOutputWithContext(context.Background())
}

func (i InstanceConfigureNodeArgs) ToInstanceConfigureNodeOutputWithContext(ctx context.Context) InstanceConfigureNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigureNodeOutput)
}

// InstanceConfigureNodeArrayInput is an input type that accepts InstanceConfigureNodeArray and InstanceConfigureNodeArrayOutput values.
// You can construct a concrete instance of `InstanceConfigureNodeArrayInput` via:
//
//	InstanceConfigureNodeArray{ InstanceConfigureNodeArgs{...} }
type InstanceConfigureNodeArrayInput interface {
	pulumi.Input

	ToInstanceConfigureNodeArrayOutput() InstanceConfigureNodeArrayOutput
	ToInstanceConfigureNodeArrayOutputWithContext(context.Context) InstanceConfigureNodeArrayOutput
}

type InstanceConfigureNodeArray []InstanceConfigureNodeInput

func (InstanceConfigureNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfigureNode)(nil)).Elem()
}

func (i InstanceConfigureNodeArray) ToInstanceConfigureNodeArrayOutput() InstanceConfigureNodeArrayOutput {
	return i.ToInstanceConfigureNodeArrayOutputWithContext(context.Background())
}

func (i InstanceConfigureNodeArray) ToInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) InstanceConfigureNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigureNodeArrayOutput)
}

type InstanceConfigureNodeOutput struct{ *pulumi.OutputState }

func (InstanceConfigureNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigureNode)(nil)).Elem()
}

func (o InstanceConfigureNodeOutput) ToInstanceConfigureNodeOutput() InstanceConfigureNodeOutput {
	return o
}

func (o InstanceConfigureNodeOutput) ToInstanceConfigureNodeOutputWithContext(ctx context.Context) InstanceConfigureNodeOutput {
	return o
}

// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
func (o InstanceConfigureNodeOutput) Az() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceConfigureNode) string { return v.Az }).(pulumi.StringOutput)
}

type InstanceConfigureNodeArrayOutput struct{ *pulumi.OutputState }

func (InstanceConfigureNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfigureNode)(nil)).Elem()
}

func (o InstanceConfigureNodeArrayOutput) ToInstanceConfigureNodeArrayOutput() InstanceConfigureNodeArrayOutput {
	return o
}

func (o InstanceConfigureNodeArrayOutput) ToInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) InstanceConfigureNodeArrayOutput {
	return o
}

func (o InstanceConfigureNodeArrayOutput) Index(i pulumi.IntInput) InstanceConfigureNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceConfigureNode {
		return vs[0].([]InstanceConfigureNode)[vs[1].(int)]
	}).(InstanceConfigureNodeOutput)
}

type InstanceParamValue struct {
	// The name of configuration parameter.
	Name string `pulumi:"name"`
	// The value of configuration parameter.
	Value string `pulumi:"value"`
}

// InstanceParamValueInput is an input type that accepts InstanceParamValueArgs and InstanceParamValueOutput values.
// You can construct a concrete instance of `InstanceParamValueInput` via:
//
//	InstanceParamValueArgs{...}
type InstanceParamValueInput interface {
	pulumi.Input

	ToInstanceParamValueOutput() InstanceParamValueOutput
	ToInstanceParamValueOutputWithContext(context.Context) InstanceParamValueOutput
}

type InstanceParamValueArgs struct {
	// The name of configuration parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of configuration parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceParamValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParamValue)(nil)).Elem()
}

func (i InstanceParamValueArgs) ToInstanceParamValueOutput() InstanceParamValueOutput {
	return i.ToInstanceParamValueOutputWithContext(context.Background())
}

func (i InstanceParamValueArgs) ToInstanceParamValueOutputWithContext(ctx context.Context) InstanceParamValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParamValueOutput)
}

// InstanceParamValueArrayInput is an input type that accepts InstanceParamValueArray and InstanceParamValueArrayOutput values.
// You can construct a concrete instance of `InstanceParamValueArrayInput` via:
//
//	InstanceParamValueArray{ InstanceParamValueArgs{...} }
type InstanceParamValueArrayInput interface {
	pulumi.Input

	ToInstanceParamValueArrayOutput() InstanceParamValueArrayOutput
	ToInstanceParamValueArrayOutputWithContext(context.Context) InstanceParamValueArrayOutput
}

type InstanceParamValueArray []InstanceParamValueInput

func (InstanceParamValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParamValue)(nil)).Elem()
}

func (i InstanceParamValueArray) ToInstanceParamValueArrayOutput() InstanceParamValueArrayOutput {
	return i.ToInstanceParamValueArrayOutputWithContext(context.Background())
}

func (i InstanceParamValueArray) ToInstanceParamValueArrayOutputWithContext(ctx context.Context) InstanceParamValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParamValueArrayOutput)
}

type InstanceParamValueOutput struct{ *pulumi.OutputState }

func (InstanceParamValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParamValue)(nil)).Elem()
}

func (o InstanceParamValueOutput) ToInstanceParamValueOutput() InstanceParamValueOutput {
	return o
}

func (o InstanceParamValueOutput) ToInstanceParamValueOutputWithContext(ctx context.Context) InstanceParamValueOutput {
	return o
}

// The name of configuration parameter.
func (o InstanceParamValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParamValue) string { return v.Name }).(pulumi.StringOutput)
}

// The value of configuration parameter.
func (o InstanceParamValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParamValue) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceParamValueArrayOutput struct{ *pulumi.OutputState }

func (InstanceParamValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParamValue)(nil)).Elem()
}

func (o InstanceParamValueArrayOutput) ToInstanceParamValueArrayOutput() InstanceParamValueArrayOutput {
	return o
}

func (o InstanceParamValueArrayOutput) ToInstanceParamValueArrayOutputWithContext(ctx context.Context) InstanceParamValueArrayOutput {
	return o
}

func (o InstanceParamValueArrayOutput) Index(i pulumi.IntInput) InstanceParamValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceParamValue {
		return vs[0].([]InstanceParamValue)[vs[1].(int)]
	}).(InstanceParamValueOutput)
}

type InstanceSpecsInstanceSpec struct {
	// The architecture type of the Redis instance.
	ArchType string `pulumi:"archType"`
	// The type of Redis instance.
	InstanceClass *string `pulumi:"instanceClass"`
	// The list of the number of nodes allowed to be used per shard. The number of nodes allowed for different instance types varies.
	NodeNumbers []int `pulumi:"nodeNumbers"`
	// The List of capacity specifications for a single shard.
	ShardCapacitySpecs []InstanceSpecsInstanceSpecShardCapacitySpec `pulumi:"shardCapacitySpecs"`
	// The list of shards that the instance is allowed to use. The number of shards allowed for use varies among different instance architecture types.
	ShardNumbers []int `pulumi:"shardNumbers"`
}

// InstanceSpecsInstanceSpecInput is an input type that accepts InstanceSpecsInstanceSpecArgs and InstanceSpecsInstanceSpecOutput values.
// You can construct a concrete instance of `InstanceSpecsInstanceSpecInput` via:
//
//	InstanceSpecsInstanceSpecArgs{...}
type InstanceSpecsInstanceSpecInput interface {
	pulumi.Input

	ToInstanceSpecsInstanceSpecOutput() InstanceSpecsInstanceSpecOutput
	ToInstanceSpecsInstanceSpecOutputWithContext(context.Context) InstanceSpecsInstanceSpecOutput
}

type InstanceSpecsInstanceSpecArgs struct {
	// The architecture type of the Redis instance.
	ArchType pulumi.StringInput `pulumi:"archType"`
	// The type of Redis instance.
	InstanceClass pulumi.StringPtrInput `pulumi:"instanceClass"`
	// The list of the number of nodes allowed to be used per shard. The number of nodes allowed for different instance types varies.
	NodeNumbers pulumi.IntArrayInput `pulumi:"nodeNumbers"`
	// The List of capacity specifications for a single shard.
	ShardCapacitySpecs InstanceSpecsInstanceSpecShardCapacitySpecArrayInput `pulumi:"shardCapacitySpecs"`
	// The list of shards that the instance is allowed to use. The number of shards allowed for use varies among different instance architecture types.
	ShardNumbers pulumi.IntArrayInput `pulumi:"shardNumbers"`
}

func (InstanceSpecsInstanceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSpecsInstanceSpec)(nil)).Elem()
}

func (i InstanceSpecsInstanceSpecArgs) ToInstanceSpecsInstanceSpecOutput() InstanceSpecsInstanceSpecOutput {
	return i.ToInstanceSpecsInstanceSpecOutputWithContext(context.Background())
}

func (i InstanceSpecsInstanceSpecArgs) ToInstanceSpecsInstanceSpecOutputWithContext(ctx context.Context) InstanceSpecsInstanceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsInstanceSpecOutput)
}

// InstanceSpecsInstanceSpecArrayInput is an input type that accepts InstanceSpecsInstanceSpecArray and InstanceSpecsInstanceSpecArrayOutput values.
// You can construct a concrete instance of `InstanceSpecsInstanceSpecArrayInput` via:
//
//	InstanceSpecsInstanceSpecArray{ InstanceSpecsInstanceSpecArgs{...} }
type InstanceSpecsInstanceSpecArrayInput interface {
	pulumi.Input

	ToInstanceSpecsInstanceSpecArrayOutput() InstanceSpecsInstanceSpecArrayOutput
	ToInstanceSpecsInstanceSpecArrayOutputWithContext(context.Context) InstanceSpecsInstanceSpecArrayOutput
}

type InstanceSpecsInstanceSpecArray []InstanceSpecsInstanceSpecInput

func (InstanceSpecsInstanceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSpecsInstanceSpec)(nil)).Elem()
}

func (i InstanceSpecsInstanceSpecArray) ToInstanceSpecsInstanceSpecArrayOutput() InstanceSpecsInstanceSpecArrayOutput {
	return i.ToInstanceSpecsInstanceSpecArrayOutputWithContext(context.Background())
}

func (i InstanceSpecsInstanceSpecArray) ToInstanceSpecsInstanceSpecArrayOutputWithContext(ctx context.Context) InstanceSpecsInstanceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsInstanceSpecArrayOutput)
}

type InstanceSpecsInstanceSpecOutput struct{ *pulumi.OutputState }

func (InstanceSpecsInstanceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSpecsInstanceSpec)(nil)).Elem()
}

func (o InstanceSpecsInstanceSpecOutput) ToInstanceSpecsInstanceSpecOutput() InstanceSpecsInstanceSpecOutput {
	return o
}

func (o InstanceSpecsInstanceSpecOutput) ToInstanceSpecsInstanceSpecOutputWithContext(ctx context.Context) InstanceSpecsInstanceSpecOutput {
	return o
}

// The architecture type of the Redis instance.
func (o InstanceSpecsInstanceSpecOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpec) string { return v.ArchType }).(pulumi.StringOutput)
}

// The type of Redis instance.
func (o InstanceSpecsInstanceSpecOutput) InstanceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpec) *string { return v.InstanceClass }).(pulumi.StringPtrOutput)
}

// The list of the number of nodes allowed to be used per shard. The number of nodes allowed for different instance types varies.
func (o InstanceSpecsInstanceSpecOutput) NodeNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpec) []int { return v.NodeNumbers }).(pulumi.IntArrayOutput)
}

// The List of capacity specifications for a single shard.
func (o InstanceSpecsInstanceSpecOutput) ShardCapacitySpecs() InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpec) []InstanceSpecsInstanceSpecShardCapacitySpec {
		return v.ShardCapacitySpecs
	}).(InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput)
}

// The list of shards that the instance is allowed to use. The number of shards allowed for use varies among different instance architecture types.
func (o InstanceSpecsInstanceSpecOutput) ShardNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpec) []int { return v.ShardNumbers }).(pulumi.IntArrayOutput)
}

type InstanceSpecsInstanceSpecArrayOutput struct{ *pulumi.OutputState }

func (InstanceSpecsInstanceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSpecsInstanceSpec)(nil)).Elem()
}

func (o InstanceSpecsInstanceSpecArrayOutput) ToInstanceSpecsInstanceSpecArrayOutput() InstanceSpecsInstanceSpecArrayOutput {
	return o
}

func (o InstanceSpecsInstanceSpecArrayOutput) ToInstanceSpecsInstanceSpecArrayOutputWithContext(ctx context.Context) InstanceSpecsInstanceSpecArrayOutput {
	return o
}

func (o InstanceSpecsInstanceSpecArrayOutput) Index(i pulumi.IntInput) InstanceSpecsInstanceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSpecsInstanceSpec {
		return vs[0].([]InstanceSpecsInstanceSpec)[vs[1].(int)]
	}).(InstanceSpecsInstanceSpecOutput)
}

type InstanceSpecsInstanceSpecShardCapacitySpec struct {
	// The default bandwidth of the instance under the current memory capacity.
	DefaultBandwidthPerShard int `pulumi:"defaultBandwidthPerShard"`
	// The upper limit of bandwidth that an instance is allowed to modify under the current memory capacity.
	MaxAdditionalBandwidthPerShard int `pulumi:"maxAdditionalBandwidthPerShard"`
	// The default maximum number of connections for a single shard.
	MaxConnectionsPerShard int `pulumi:"maxConnectionsPerShard"`
	// Single-shard memory capacity.
	ShardCapacity int `pulumi:"shardCapacity"`
}

// InstanceSpecsInstanceSpecShardCapacitySpecInput is an input type that accepts InstanceSpecsInstanceSpecShardCapacitySpecArgs and InstanceSpecsInstanceSpecShardCapacitySpecOutput values.
// You can construct a concrete instance of `InstanceSpecsInstanceSpecShardCapacitySpecInput` via:
//
//	InstanceSpecsInstanceSpecShardCapacitySpecArgs{...}
type InstanceSpecsInstanceSpecShardCapacitySpecInput interface {
	pulumi.Input

	ToInstanceSpecsInstanceSpecShardCapacitySpecOutput() InstanceSpecsInstanceSpecShardCapacitySpecOutput
	ToInstanceSpecsInstanceSpecShardCapacitySpecOutputWithContext(context.Context) InstanceSpecsInstanceSpecShardCapacitySpecOutput
}

type InstanceSpecsInstanceSpecShardCapacitySpecArgs struct {
	// The default bandwidth of the instance under the current memory capacity.
	DefaultBandwidthPerShard pulumi.IntInput `pulumi:"defaultBandwidthPerShard"`
	// The upper limit of bandwidth that an instance is allowed to modify under the current memory capacity.
	MaxAdditionalBandwidthPerShard pulumi.IntInput `pulumi:"maxAdditionalBandwidthPerShard"`
	// The default maximum number of connections for a single shard.
	MaxConnectionsPerShard pulumi.IntInput `pulumi:"maxConnectionsPerShard"`
	// Single-shard memory capacity.
	ShardCapacity pulumi.IntInput `pulumi:"shardCapacity"`
}

func (InstanceSpecsInstanceSpecShardCapacitySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSpecsInstanceSpecShardCapacitySpec)(nil)).Elem()
}

func (i InstanceSpecsInstanceSpecShardCapacitySpecArgs) ToInstanceSpecsInstanceSpecShardCapacitySpecOutput() InstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return i.ToInstanceSpecsInstanceSpecShardCapacitySpecOutputWithContext(context.Background())
}

func (i InstanceSpecsInstanceSpecShardCapacitySpecArgs) ToInstanceSpecsInstanceSpecShardCapacitySpecOutputWithContext(ctx context.Context) InstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsInstanceSpecShardCapacitySpecOutput)
}

// InstanceSpecsInstanceSpecShardCapacitySpecArrayInput is an input type that accepts InstanceSpecsInstanceSpecShardCapacitySpecArray and InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput values.
// You can construct a concrete instance of `InstanceSpecsInstanceSpecShardCapacitySpecArrayInput` via:
//
//	InstanceSpecsInstanceSpecShardCapacitySpecArray{ InstanceSpecsInstanceSpecShardCapacitySpecArgs{...} }
type InstanceSpecsInstanceSpecShardCapacitySpecArrayInput interface {
	pulumi.Input

	ToInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput() InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput
	ToInstanceSpecsInstanceSpecShardCapacitySpecArrayOutputWithContext(context.Context) InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput
}

type InstanceSpecsInstanceSpecShardCapacitySpecArray []InstanceSpecsInstanceSpecShardCapacitySpecInput

func (InstanceSpecsInstanceSpecShardCapacitySpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSpecsInstanceSpecShardCapacitySpec)(nil)).Elem()
}

func (i InstanceSpecsInstanceSpecShardCapacitySpecArray) ToInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput() InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return i.ToInstanceSpecsInstanceSpecShardCapacitySpecArrayOutputWithContext(context.Background())
}

func (i InstanceSpecsInstanceSpecShardCapacitySpecArray) ToInstanceSpecsInstanceSpecShardCapacitySpecArrayOutputWithContext(ctx context.Context) InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput)
}

type InstanceSpecsInstanceSpecShardCapacitySpecOutput struct{ *pulumi.OutputState }

func (InstanceSpecsInstanceSpecShardCapacitySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSpecsInstanceSpecShardCapacitySpec)(nil)).Elem()
}

func (o InstanceSpecsInstanceSpecShardCapacitySpecOutput) ToInstanceSpecsInstanceSpecShardCapacitySpecOutput() InstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return o
}

func (o InstanceSpecsInstanceSpecShardCapacitySpecOutput) ToInstanceSpecsInstanceSpecShardCapacitySpecOutputWithContext(ctx context.Context) InstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return o
}

// The default bandwidth of the instance under the current memory capacity.
func (o InstanceSpecsInstanceSpecShardCapacitySpecOutput) DefaultBandwidthPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpecShardCapacitySpec) int { return v.DefaultBandwidthPerShard }).(pulumi.IntOutput)
}

// The upper limit of bandwidth that an instance is allowed to modify under the current memory capacity.
func (o InstanceSpecsInstanceSpecShardCapacitySpecOutput) MaxAdditionalBandwidthPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpecShardCapacitySpec) int { return v.MaxAdditionalBandwidthPerShard }).(pulumi.IntOutput)
}

// The default maximum number of connections for a single shard.
func (o InstanceSpecsInstanceSpecShardCapacitySpecOutput) MaxConnectionsPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpecShardCapacitySpec) int { return v.MaxConnectionsPerShard }).(pulumi.IntOutput)
}

// Single-shard memory capacity.
func (o InstanceSpecsInstanceSpecShardCapacitySpecOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceSpecsInstanceSpecShardCapacitySpec) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

type InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput struct{ *pulumi.OutputState }

func (InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSpecsInstanceSpecShardCapacitySpec)(nil)).Elem()
}

func (o InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput) ToInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput() InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return o
}

func (o InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput) ToInstanceSpecsInstanceSpecShardCapacitySpecArrayOutputWithContext(ctx context.Context) InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return o
}

func (o InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput) Index(i pulumi.IntInput) InstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSpecsInstanceSpecShardCapacitySpec {
		return vs[0].([]InstanceSpecsInstanceSpecShardCapacitySpec)[vs[1].(int)]
	}).(InstanceSpecsInstanceSpecShardCapacitySpecOutput)
}

type InstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstanceTagInput is an input type that accepts InstanceTagArgs and InstanceTagOutput values.
// You can construct a concrete instance of `InstanceTagInput` via:
//
//	InstanceTagArgs{...}
type InstanceTagInput interface {
	pulumi.Input

	ToInstanceTagOutput() InstanceTagOutput
	ToInstanceTagOutputWithContext(context.Context) InstanceTagOutput
}

type InstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (i InstanceTagArgs) ToInstanceTagOutput() InstanceTagOutput {
	return i.ToInstanceTagOutputWithContext(context.Background())
}

func (i InstanceTagArgs) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagOutput)
}

// InstanceTagArrayInput is an input type that accepts InstanceTagArray and InstanceTagArrayOutput values.
// You can construct a concrete instance of `InstanceTagArrayInput` via:
//
//	InstanceTagArray{ InstanceTagArgs{...} }
type InstanceTagArrayInput interface {
	pulumi.Input

	ToInstanceTagArrayOutput() InstanceTagArrayOutput
	ToInstanceTagArrayOutputWithContext(context.Context) InstanceTagArrayOutput
}

type InstanceTagArray []InstanceTagInput

func (InstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (i InstanceTagArray) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return i.ToInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstanceTagArray) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagArrayOutput)
}

type InstanceTagOutput struct{ *pulumi.OutputState }

func (InstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (o InstanceTagOutput) ToInstanceTagOutput() InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return o
}

// The Key of Tags.
func (o InstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) Index(i pulumi.IntInput) InstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTag {
		return vs[0].([]InstanceTag)[vs[1].(int)]
	}).(InstanceTagOutput)
}

type InstancesInstance struct {
	// The additional bandwidth of a single shard, that is, the extra bandwidth that needs to be added on top of the default bandwidth, unit: MB/s.
	AdditionalBandwidthPerShard int `pulumi:"additionalBandwidthPerShard"`
	// The list of backup plans.
	BackupPlan InstancesInstanceBackupPlan `pulumi:"backupPlan"`
	// The memory capacity information.
	Capacity InstancesInstanceCapacity `pulumi:"capacity"`
	// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
	ChargeType string `pulumi:"chargeType"`
	// Set the list of available zones to which the node belongs.
	ConfigureNodes []InstancesInstanceConfigureNode `pulumi:"configureNodes"`
	// The creation time of the redis instance.
	CreateTime string `pulumi:"createTime"`
	// The data storage form of the instance.
	DataLayout string `pulumi:"dataLayout"`
	// The default bandwidth of a single shard in the instance. Both the read bandwidth (i.e., the downlink bandwidth) and the write bandwidth (i.e., the uplink bandwidth) are of this value. Unit: MB/s.
	DefaultBandwidthPerShard int `pulumi:"defaultBandwidthPerShard"`
	// whether enable deletion protection.
	DeletionProtection string `pulumi:"deletionProtection"`
	// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
	EngineVersion string `pulumi:"engineVersion"`
	// The expire time of the redis instance, valid when charge type is `PrePaid`.
	ExpiredTime string `pulumi:"expiredTime"`
	// The id of the redis instance.
	Id string `pulumi:"id"`
	// The type of the instance.
	InstanceClass string `pulumi:"instanceClass"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId string `pulumi:"instanceId"`
	// The name of redis instance to query. This field supports fuzzy queries.
	InstanceName string `pulumi:"instanceName"`
	// A detailed list of all Shard shards in the instance.
	InstanceShards []InstancesInstanceInstanceShard `pulumi:"instanceShards"`
	// The maintainable time of the redis instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// The current maximum number of connections in a single shard for the instance of the instance.
	MaxConnections int `pulumi:"maxConnections"`
	// Set the availability zone deployment scheme for the instance. The value range is as follows:
	// disabled: Single availability zone deployment scheme.
	// enabled: Multi-availability zone deployment scheme.
	// Description:
	// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
	MultiAz string `pulumi:"multiAz"`
	// The list of redis instance node IDs.
	NodeIds []string `pulumi:"nodeIds"`
	// The number of nodes in each shard.
	NodeNumber int `pulumi:"nodeNumber"`
	// The list of params.
	Params []InstancesInstanceParam `pulumi:"params"`
	// The project name of redis instance to query.
	ProjectName string `pulumi:"projectName"`
	// The region id of the redis instance.
	RegionId string `pulumi:"regionId"`
	// A detailed list of all Server nodes in the shard.
	ServerNodes []InstancesInstanceServerNode `pulumi:"serverNodes"`
	// (**Deprecated**) Replaced by shard_capacity_v2. The memory capacity of each shard. Unit: GiB.
	//
	// Deprecated: Replaced by shard_capacity_v2.
	ShardCapacity float64 `pulumi:"shardCapacity"`
	// The memory capacity of each shard in the instance.
	ShardCapacityV2 int `pulumi:"shardCapacityV2"`
	// The ID of the shard.
	ShardId string `pulumi:"shardId"`
	// The number of shards in the redis instance.
	ShardNumber int `pulumi:"shardNumber"`
	// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
	ShardedCluster int `pulumi:"shardedCluster"`
	// The status of redis instance to query.
	Status string `pulumi:"status"`
	// The subnet id of the redis instance.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []InstancesInstanceTag `pulumi:"tags"`
	// The list of connection information.
	VisitAddrs []InstancesInstanceVisitAddr `pulumi:"visitAddrs"`
	// Whether to enable password-free access when connecting to an instance through a private network.
	VpcAuthMode string `pulumi:"vpcAuthMode"`
	// The vpc id of redis instance to query. This field supports fuzzy queries.
	VpcId string `pulumi:"vpcId"`
	// The list of zone ID which the redis instance belongs.
	ZoneIds []string `pulumi:"zoneIds"`
}

// InstancesInstanceInput is an input type that accepts InstancesInstanceArgs and InstancesInstanceOutput values.
// You can construct a concrete instance of `InstancesInstanceInput` via:
//
//	InstancesInstanceArgs{...}
type InstancesInstanceInput interface {
	pulumi.Input

	ToInstancesInstanceOutput() InstancesInstanceOutput
	ToInstancesInstanceOutputWithContext(context.Context) InstancesInstanceOutput
}

type InstancesInstanceArgs struct {
	// The additional bandwidth of a single shard, that is, the extra bandwidth that needs to be added on top of the default bandwidth, unit: MB/s.
	AdditionalBandwidthPerShard pulumi.IntInput `pulumi:"additionalBandwidthPerShard"`
	// The list of backup plans.
	BackupPlan InstancesInstanceBackupPlanInput `pulumi:"backupPlan"`
	// The memory capacity information.
	Capacity InstancesInstanceCapacityInput `pulumi:"capacity"`
	// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Set the list of available zones to which the node belongs.
	ConfigureNodes InstancesInstanceConfigureNodeArrayInput `pulumi:"configureNodes"`
	// The creation time of the redis instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The data storage form of the instance.
	DataLayout pulumi.StringInput `pulumi:"dataLayout"`
	// The default bandwidth of a single shard in the instance. Both the read bandwidth (i.e., the downlink bandwidth) and the write bandwidth (i.e., the uplink bandwidth) are of this value. Unit: MB/s.
	DefaultBandwidthPerShard pulumi.IntInput `pulumi:"defaultBandwidthPerShard"`
	// whether enable deletion protection.
	DeletionProtection pulumi.StringInput `pulumi:"deletionProtection"`
	// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// The expire time of the redis instance, valid when charge type is `PrePaid`.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The id of the redis instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The type of the instance.
	InstanceClass pulumi.StringInput `pulumi:"instanceClass"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of redis instance to query. This field supports fuzzy queries.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// A detailed list of all Shard shards in the instance.
	InstanceShards InstancesInstanceInstanceShardArrayInput `pulumi:"instanceShards"`
	// The maintainable time of the redis instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// The current maximum number of connections in a single shard for the instance of the instance.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Set the availability zone deployment scheme for the instance. The value range is as follows:
	// disabled: Single availability zone deployment scheme.
	// enabled: Multi-availability zone deployment scheme.
	// Description:
	// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
	MultiAz pulumi.StringInput `pulumi:"multiAz"`
	// The list of redis instance node IDs.
	NodeIds pulumi.StringArrayInput `pulumi:"nodeIds"`
	// The number of nodes in each shard.
	NodeNumber pulumi.IntInput `pulumi:"nodeNumber"`
	// The list of params.
	Params InstancesInstanceParamArrayInput `pulumi:"params"`
	// The project name of redis instance to query.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The region id of the redis instance.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// A detailed list of all Server nodes in the shard.
	ServerNodes InstancesInstanceServerNodeArrayInput `pulumi:"serverNodes"`
	// (**Deprecated**) Replaced by shard_capacity_v2. The memory capacity of each shard. Unit: GiB.
	//
	// Deprecated: Replaced by shard_capacity_v2.
	ShardCapacity pulumi.Float64Input `pulumi:"shardCapacity"`
	// The memory capacity of each shard in the instance.
	ShardCapacityV2 pulumi.IntInput `pulumi:"shardCapacityV2"`
	// The ID of the shard.
	ShardId pulumi.StringInput `pulumi:"shardId"`
	// The number of shards in the redis instance.
	ShardNumber pulumi.IntInput `pulumi:"shardNumber"`
	// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
	ShardedCluster pulumi.IntInput `pulumi:"shardedCluster"`
	// The status of redis instance to query.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet id of the redis instance.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags InstancesInstanceTagArrayInput `pulumi:"tags"`
	// The list of connection information.
	VisitAddrs InstancesInstanceVisitAddrArrayInput `pulumi:"visitAddrs"`
	// Whether to enable password-free access when connecting to an instance through a private network.
	VpcAuthMode pulumi.StringInput `pulumi:"vpcAuthMode"`
	// The vpc id of redis instance to query. This field supports fuzzy queries.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The list of zone ID which the redis instance belongs.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (InstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstance)(nil)).Elem()
}

func (i InstancesInstanceArgs) ToInstancesInstanceOutput() InstancesInstanceOutput {
	return i.ToInstancesInstanceOutputWithContext(context.Background())
}

func (i InstancesInstanceArgs) ToInstancesInstanceOutputWithContext(ctx context.Context) InstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceOutput)
}

// InstancesInstanceArrayInput is an input type that accepts InstancesInstanceArray and InstancesInstanceArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceArrayInput` via:
//
//	InstancesInstanceArray{ InstancesInstanceArgs{...} }
type InstancesInstanceArrayInput interface {
	pulumi.Input

	ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput
	ToInstancesInstanceArrayOutputWithContext(context.Context) InstancesInstanceArrayOutput
}

type InstancesInstanceArray []InstancesInstanceInput

func (InstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstance)(nil)).Elem()
}

func (i InstancesInstanceArray) ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput {
	return i.ToInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceArray) ToInstancesInstanceArrayOutputWithContext(ctx context.Context) InstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceArrayOutput)
}

type InstancesInstanceOutput struct{ *pulumi.OutputState }

func (InstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstance)(nil)).Elem()
}

func (o InstancesInstanceOutput) ToInstancesInstanceOutput() InstancesInstanceOutput {
	return o
}

func (o InstancesInstanceOutput) ToInstancesInstanceOutputWithContext(ctx context.Context) InstancesInstanceOutput {
	return o
}

// The additional bandwidth of a single shard, that is, the extra bandwidth that needs to be added on top of the default bandwidth, unit: MB/s.
func (o InstancesInstanceOutput) AdditionalBandwidthPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.AdditionalBandwidthPerShard }).(pulumi.IntOutput)
}

// The list of backup plans.
func (o InstancesInstanceOutput) BackupPlan() InstancesInstanceBackupPlanOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceBackupPlan { return v.BackupPlan }).(InstancesInstanceBackupPlanOutput)
}

// The memory capacity information.
func (o InstancesInstanceOutput) Capacity() InstancesInstanceCapacityOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceCapacity { return v.Capacity }).(InstancesInstanceCapacityOutput)
}

// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
func (o InstancesInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Set the list of available zones to which the node belongs.
func (o InstancesInstanceOutput) ConfigureNodes() InstancesInstanceConfigureNodeArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceConfigureNode { return v.ConfigureNodes }).(InstancesInstanceConfigureNodeArrayOutput)
}

// The creation time of the redis instance.
func (o InstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The data storage form of the instance.
func (o InstancesInstanceOutput) DataLayout() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.DataLayout }).(pulumi.StringOutput)
}

// The default bandwidth of a single shard in the instance. Both the read bandwidth (i.e., the downlink bandwidth) and the write bandwidth (i.e., the uplink bandwidth) are of this value. Unit: MB/s.
func (o InstancesInstanceOutput) DefaultBandwidthPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.DefaultBandwidthPerShard }).(pulumi.IntOutput)
}

// whether enable deletion protection.
func (o InstancesInstanceOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
func (o InstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The expire time of the redis instance, valid when charge type is `PrePaid`.
func (o InstancesInstanceOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The id of the redis instance.
func (o InstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the instance.
func (o InstancesInstanceOutput) InstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceClass }).(pulumi.StringOutput)
}

// The id of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// A detailed list of all Shard shards in the instance.
func (o InstancesInstanceOutput) InstanceShards() InstancesInstanceInstanceShardArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceInstanceShard { return v.InstanceShards }).(InstancesInstanceInstanceShardArrayOutput)
}

// The maintainable time of the redis instance.
func (o InstancesInstanceOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// The current maximum number of connections in a single shard for the instance of the instance.
func (o InstancesInstanceOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Set the availability zone deployment scheme for the instance. The value range is as follows:
// disabled: Single availability zone deployment scheme.
// enabled: Multi-availability zone deployment scheme.
// Description:
// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
func (o InstancesInstanceOutput) MultiAz() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.MultiAz }).(pulumi.StringOutput)
}

// The list of redis instance node IDs.
func (o InstancesInstanceOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// The number of nodes in each shard.
func (o InstancesInstanceOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.NodeNumber }).(pulumi.IntOutput)
}

// The list of params.
func (o InstancesInstanceOutput) Params() InstancesInstanceParamArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceParam { return v.Params }).(InstancesInstanceParamArrayOutput)
}

// The project name of redis instance to query.
func (o InstancesInstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The region id of the redis instance.
func (o InstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// A detailed list of all Server nodes in the shard.
func (o InstancesInstanceOutput) ServerNodes() InstancesInstanceServerNodeArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceServerNode { return v.ServerNodes }).(InstancesInstanceServerNodeArrayOutput)
}

// (**Deprecated**) Replaced by shard_capacity_v2. The memory capacity of each shard. Unit: GiB.
//
// Deprecated: Replaced by shard_capacity_v2.
func (o InstancesInstanceOutput) ShardCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v InstancesInstance) float64 { return v.ShardCapacity }).(pulumi.Float64Output)
}

// The memory capacity of each shard in the instance.
func (o InstancesInstanceOutput) ShardCapacityV2() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.ShardCapacityV2 }).(pulumi.IntOutput)
}

// The ID of the shard.
func (o InstancesInstanceOutput) ShardId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ShardId }).(pulumi.StringOutput)
}

// The number of shards in the redis instance.
func (o InstancesInstanceOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.ShardNumber }).(pulumi.IntOutput)
}

// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
func (o InstancesInstanceOutput) ShardedCluster() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.ShardedCluster }).(pulumi.IntOutput)
}

// The status of redis instance to query.
func (o InstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet id of the redis instance.
func (o InstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o InstancesInstanceOutput) Tags() InstancesInstanceTagArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceTag { return v.Tags }).(InstancesInstanceTagArrayOutput)
}

// The list of connection information.
func (o InstancesInstanceOutput) VisitAddrs() InstancesInstanceVisitAddrArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceVisitAddr { return v.VisitAddrs }).(InstancesInstanceVisitAddrArrayOutput)
}

// Whether to enable password-free access when connecting to an instance through a private network.
func (o InstancesInstanceOutput) VpcAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.VpcAuthMode }).(pulumi.StringOutput)
}

// The vpc id of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The list of zone ID which the redis instance belongs.
func (o InstancesInstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type InstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstance)(nil)).Elem()
}

func (o InstancesInstanceArrayOutput) ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput {
	return o
}

func (o InstancesInstanceArrayOutput) ToInstancesInstanceArrayOutputWithContext(ctx context.Context) InstancesInstanceArrayOutput {
	return o
}

func (o InstancesInstanceArrayOutput) Index(i pulumi.IntInput) InstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstance {
		return vs[0].([]InstancesInstance)[vs[1].(int)]
	}).(InstancesInstanceOutput)
}

type InstancesInstanceBackupPlan struct {
	// Whether enable auto backup.
	Active bool `pulumi:"active"`
	// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	BackupHour int `pulumi:"backupHour"`
	// The backup type.
	BackupType string `pulumi:"backupType"`
	// The expected time for the next backup to be performed.
	ExpectNextBackupTime string `pulumi:"expectNextBackupTime"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId string `pulumi:"instanceId"`
	// The last time the backup policy was modified.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	Periods []int `pulumi:"periods"`
	// The number of days to keep backups, the default is 7 days.
	Ttl int `pulumi:"ttl"`
}

// InstancesInstanceBackupPlanInput is an input type that accepts InstancesInstanceBackupPlanArgs and InstancesInstanceBackupPlanOutput values.
// You can construct a concrete instance of `InstancesInstanceBackupPlanInput` via:
//
//	InstancesInstanceBackupPlanArgs{...}
type InstancesInstanceBackupPlanInput interface {
	pulumi.Input

	ToInstancesInstanceBackupPlanOutput() InstancesInstanceBackupPlanOutput
	ToInstancesInstanceBackupPlanOutputWithContext(context.Context) InstancesInstanceBackupPlanOutput
}

type InstancesInstanceBackupPlanArgs struct {
	// Whether enable auto backup.
	Active pulumi.BoolInput `pulumi:"active"`
	// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	BackupHour pulumi.IntInput `pulumi:"backupHour"`
	// The backup type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The expected time for the next backup to be performed.
	ExpectNextBackupTime pulumi.StringInput `pulumi:"expectNextBackupTime"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The last time the backup policy was modified.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	Periods pulumi.IntArrayInput `pulumi:"periods"`
	// The number of days to keep backups, the default is 7 days.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (InstancesInstanceBackupPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceBackupPlan)(nil)).Elem()
}

func (i InstancesInstanceBackupPlanArgs) ToInstancesInstanceBackupPlanOutput() InstancesInstanceBackupPlanOutput {
	return i.ToInstancesInstanceBackupPlanOutputWithContext(context.Background())
}

func (i InstancesInstanceBackupPlanArgs) ToInstancesInstanceBackupPlanOutputWithContext(ctx context.Context) InstancesInstanceBackupPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceBackupPlanOutput)
}

type InstancesInstanceBackupPlanOutput struct{ *pulumi.OutputState }

func (InstancesInstanceBackupPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceBackupPlan)(nil)).Elem()
}

func (o InstancesInstanceBackupPlanOutput) ToInstancesInstanceBackupPlanOutput() InstancesInstanceBackupPlanOutput {
	return o
}

func (o InstancesInstanceBackupPlanOutput) ToInstancesInstanceBackupPlanOutputWithContext(ctx context.Context) InstancesInstanceBackupPlanOutput {
	return o
}

// Whether enable auto backup.
func (o InstancesInstanceBackupPlanOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) bool { return v.Active }).(pulumi.BoolOutput)
}

// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
func (o InstancesInstanceBackupPlanOutput) BackupHour() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) int { return v.BackupHour }).(pulumi.IntOutput)
}

// The backup type.
func (o InstancesInstanceBackupPlanOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) string { return v.BackupType }).(pulumi.StringOutput)
}

// The expected time for the next backup to be performed.
func (o InstancesInstanceBackupPlanOutput) ExpectNextBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) string { return v.ExpectNextBackupTime }).(pulumi.StringOutput)
}

// The id of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceBackupPlanOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The last time the backup policy was modified.
func (o InstancesInstanceBackupPlanOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
func (o InstancesInstanceBackupPlanOutput) Periods() pulumi.IntArrayOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) []int { return v.Periods }).(pulumi.IntArrayOutput)
}

// The number of days to keep backups, the default is 7 days.
func (o InstancesInstanceBackupPlanOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) int { return v.Ttl }).(pulumi.IntOutput)
}

type InstancesInstanceCapacity struct {
	// The total memory capacity of the redis instance. Unit: MiB.
	Total int `pulumi:"total"`
	// The used memory capacity of the redis instance. Unit: MiB.
	Used int `pulumi:"used"`
}

// InstancesInstanceCapacityInput is an input type that accepts InstancesInstanceCapacityArgs and InstancesInstanceCapacityOutput values.
// You can construct a concrete instance of `InstancesInstanceCapacityInput` via:
//
//	InstancesInstanceCapacityArgs{...}
type InstancesInstanceCapacityInput interface {
	pulumi.Input

	ToInstancesInstanceCapacityOutput() InstancesInstanceCapacityOutput
	ToInstancesInstanceCapacityOutputWithContext(context.Context) InstancesInstanceCapacityOutput
}

type InstancesInstanceCapacityArgs struct {
	// The total memory capacity of the redis instance. Unit: MiB.
	Total pulumi.IntInput `pulumi:"total"`
	// The used memory capacity of the redis instance. Unit: MiB.
	Used pulumi.IntInput `pulumi:"used"`
}

func (InstancesInstanceCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceCapacity)(nil)).Elem()
}

func (i InstancesInstanceCapacityArgs) ToInstancesInstanceCapacityOutput() InstancesInstanceCapacityOutput {
	return i.ToInstancesInstanceCapacityOutputWithContext(context.Background())
}

func (i InstancesInstanceCapacityArgs) ToInstancesInstanceCapacityOutputWithContext(ctx context.Context) InstancesInstanceCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceCapacityOutput)
}

type InstancesInstanceCapacityOutput struct{ *pulumi.OutputState }

func (InstancesInstanceCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceCapacity)(nil)).Elem()
}

func (o InstancesInstanceCapacityOutput) ToInstancesInstanceCapacityOutput() InstancesInstanceCapacityOutput {
	return o
}

func (o InstancesInstanceCapacityOutput) ToInstancesInstanceCapacityOutputWithContext(ctx context.Context) InstancesInstanceCapacityOutput {
	return o
}

// The total memory capacity of the redis instance. Unit: MiB.
func (o InstancesInstanceCapacityOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceCapacity) int { return v.Total }).(pulumi.IntOutput)
}

// The used memory capacity of the redis instance. Unit: MiB.
func (o InstancesInstanceCapacityOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceCapacity) int { return v.Used }).(pulumi.IntOutput)
}

type InstancesInstanceConfigureNode struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az string `pulumi:"az"`
}

// InstancesInstanceConfigureNodeInput is an input type that accepts InstancesInstanceConfigureNodeArgs and InstancesInstanceConfigureNodeOutput values.
// You can construct a concrete instance of `InstancesInstanceConfigureNodeInput` via:
//
//	InstancesInstanceConfigureNodeArgs{...}
type InstancesInstanceConfigureNodeInput interface {
	pulumi.Input

	ToInstancesInstanceConfigureNodeOutput() InstancesInstanceConfigureNodeOutput
	ToInstancesInstanceConfigureNodeOutputWithContext(context.Context) InstancesInstanceConfigureNodeOutput
}

type InstancesInstanceConfigureNodeArgs struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az pulumi.StringInput `pulumi:"az"`
}

func (InstancesInstanceConfigureNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceConfigureNode)(nil)).Elem()
}

func (i InstancesInstanceConfigureNodeArgs) ToInstancesInstanceConfigureNodeOutput() InstancesInstanceConfigureNodeOutput {
	return i.ToInstancesInstanceConfigureNodeOutputWithContext(context.Background())
}

func (i InstancesInstanceConfigureNodeArgs) ToInstancesInstanceConfigureNodeOutputWithContext(ctx context.Context) InstancesInstanceConfigureNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceConfigureNodeOutput)
}

// InstancesInstanceConfigureNodeArrayInput is an input type that accepts InstancesInstanceConfigureNodeArray and InstancesInstanceConfigureNodeArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceConfigureNodeArrayInput` via:
//
//	InstancesInstanceConfigureNodeArray{ InstancesInstanceConfigureNodeArgs{...} }
type InstancesInstanceConfigureNodeArrayInput interface {
	pulumi.Input

	ToInstancesInstanceConfigureNodeArrayOutput() InstancesInstanceConfigureNodeArrayOutput
	ToInstancesInstanceConfigureNodeArrayOutputWithContext(context.Context) InstancesInstanceConfigureNodeArrayOutput
}

type InstancesInstanceConfigureNodeArray []InstancesInstanceConfigureNodeInput

func (InstancesInstanceConfigureNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceConfigureNode)(nil)).Elem()
}

func (i InstancesInstanceConfigureNodeArray) ToInstancesInstanceConfigureNodeArrayOutput() InstancesInstanceConfigureNodeArrayOutput {
	return i.ToInstancesInstanceConfigureNodeArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceConfigureNodeArray) ToInstancesInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceConfigureNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceConfigureNodeArrayOutput)
}

type InstancesInstanceConfigureNodeOutput struct{ *pulumi.OutputState }

func (InstancesInstanceConfigureNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceConfigureNode)(nil)).Elem()
}

func (o InstancesInstanceConfigureNodeOutput) ToInstancesInstanceConfigureNodeOutput() InstancesInstanceConfigureNodeOutput {
	return o
}

func (o InstancesInstanceConfigureNodeOutput) ToInstancesInstanceConfigureNodeOutputWithContext(ctx context.Context) InstancesInstanceConfigureNodeOutput {
	return o
}

// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
func (o InstancesInstanceConfigureNodeOutput) Az() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceConfigureNode) string { return v.Az }).(pulumi.StringOutput)
}

type InstancesInstanceConfigureNodeArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceConfigureNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceConfigureNode)(nil)).Elem()
}

func (o InstancesInstanceConfigureNodeArrayOutput) ToInstancesInstanceConfigureNodeArrayOutput() InstancesInstanceConfigureNodeArrayOutput {
	return o
}

func (o InstancesInstanceConfigureNodeArrayOutput) ToInstancesInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceConfigureNodeArrayOutput {
	return o
}

func (o InstancesInstanceConfigureNodeArrayOutput) Index(i pulumi.IntInput) InstancesInstanceConfigureNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceConfigureNode {
		return vs[0].([]InstancesInstanceConfigureNode)[vs[1].(int)]
	}).(InstancesInstanceConfigureNodeOutput)
}

type InstancesInstanceInstanceShard struct {
	// The number of nodes in each shard.
	NodeNumber int `pulumi:"nodeNumber"`
	// A detailed list of all Server nodes in the shard.
	ServerNodes []InstancesInstanceInstanceShardServerNode `pulumi:"serverNodes"`
	// The ID of the shard.
	ShardId string `pulumi:"shardId"`
}

// InstancesInstanceInstanceShardInput is an input type that accepts InstancesInstanceInstanceShardArgs and InstancesInstanceInstanceShardOutput values.
// You can construct a concrete instance of `InstancesInstanceInstanceShardInput` via:
//
//	InstancesInstanceInstanceShardArgs{...}
type InstancesInstanceInstanceShardInput interface {
	pulumi.Input

	ToInstancesInstanceInstanceShardOutput() InstancesInstanceInstanceShardOutput
	ToInstancesInstanceInstanceShardOutputWithContext(context.Context) InstancesInstanceInstanceShardOutput
}

type InstancesInstanceInstanceShardArgs struct {
	// The number of nodes in each shard.
	NodeNumber pulumi.IntInput `pulumi:"nodeNumber"`
	// A detailed list of all Server nodes in the shard.
	ServerNodes InstancesInstanceInstanceShardServerNodeArrayInput `pulumi:"serverNodes"`
	// The ID of the shard.
	ShardId pulumi.StringInput `pulumi:"shardId"`
}

func (InstancesInstanceInstanceShardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceInstanceShard)(nil)).Elem()
}

func (i InstancesInstanceInstanceShardArgs) ToInstancesInstanceInstanceShardOutput() InstancesInstanceInstanceShardOutput {
	return i.ToInstancesInstanceInstanceShardOutputWithContext(context.Background())
}

func (i InstancesInstanceInstanceShardArgs) ToInstancesInstanceInstanceShardOutputWithContext(ctx context.Context) InstancesInstanceInstanceShardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceInstanceShardOutput)
}

// InstancesInstanceInstanceShardArrayInput is an input type that accepts InstancesInstanceInstanceShardArray and InstancesInstanceInstanceShardArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceInstanceShardArrayInput` via:
//
//	InstancesInstanceInstanceShardArray{ InstancesInstanceInstanceShardArgs{...} }
type InstancesInstanceInstanceShardArrayInput interface {
	pulumi.Input

	ToInstancesInstanceInstanceShardArrayOutput() InstancesInstanceInstanceShardArrayOutput
	ToInstancesInstanceInstanceShardArrayOutputWithContext(context.Context) InstancesInstanceInstanceShardArrayOutput
}

type InstancesInstanceInstanceShardArray []InstancesInstanceInstanceShardInput

func (InstancesInstanceInstanceShardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceInstanceShard)(nil)).Elem()
}

func (i InstancesInstanceInstanceShardArray) ToInstancesInstanceInstanceShardArrayOutput() InstancesInstanceInstanceShardArrayOutput {
	return i.ToInstancesInstanceInstanceShardArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceInstanceShardArray) ToInstancesInstanceInstanceShardArrayOutputWithContext(ctx context.Context) InstancesInstanceInstanceShardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceInstanceShardArrayOutput)
}

type InstancesInstanceInstanceShardOutput struct{ *pulumi.OutputState }

func (InstancesInstanceInstanceShardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceInstanceShard)(nil)).Elem()
}

func (o InstancesInstanceInstanceShardOutput) ToInstancesInstanceInstanceShardOutput() InstancesInstanceInstanceShardOutput {
	return o
}

func (o InstancesInstanceInstanceShardOutput) ToInstancesInstanceInstanceShardOutputWithContext(ctx context.Context) InstancesInstanceInstanceShardOutput {
	return o
}

// The number of nodes in each shard.
func (o InstancesInstanceInstanceShardOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceInstanceShard) int { return v.NodeNumber }).(pulumi.IntOutput)
}

// A detailed list of all Server nodes in the shard.
func (o InstancesInstanceInstanceShardOutput) ServerNodes() InstancesInstanceInstanceShardServerNodeArrayOutput {
	return o.ApplyT(func(v InstancesInstanceInstanceShard) []InstancesInstanceInstanceShardServerNode {
		return v.ServerNodes
	}).(InstancesInstanceInstanceShardServerNodeArrayOutput)
}

// The ID of the shard.
func (o InstancesInstanceInstanceShardOutput) ShardId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceInstanceShard) string { return v.ShardId }).(pulumi.StringOutput)
}

type InstancesInstanceInstanceShardArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceInstanceShardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceInstanceShard)(nil)).Elem()
}

func (o InstancesInstanceInstanceShardArrayOutput) ToInstancesInstanceInstanceShardArrayOutput() InstancesInstanceInstanceShardArrayOutput {
	return o
}

func (o InstancesInstanceInstanceShardArrayOutput) ToInstancesInstanceInstanceShardArrayOutputWithContext(ctx context.Context) InstancesInstanceInstanceShardArrayOutput {
	return o
}

func (o InstancesInstanceInstanceShardArrayOutput) Index(i pulumi.IntInput) InstancesInstanceInstanceShardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceInstanceShard {
		return vs[0].([]InstancesInstanceInstanceShard)[vs[1].(int)]
	}).(InstancesInstanceInstanceShardOutput)
}

type InstancesInstanceInstanceShardServerNode struct {
	// The current role of the node.
	CurrentRole string `pulumi:"currentRole"`
	// The ID of node.
	NodeId string `pulumi:"nodeId"`
	// The status of redis instance to query.
	Status string `pulumi:"status"`
	// The zone id of redis instance to query. This field supports fuzzy queries.
	ZoneId string `pulumi:"zoneId"`
}

// InstancesInstanceInstanceShardServerNodeInput is an input type that accepts InstancesInstanceInstanceShardServerNodeArgs and InstancesInstanceInstanceShardServerNodeOutput values.
// You can construct a concrete instance of `InstancesInstanceInstanceShardServerNodeInput` via:
//
//	InstancesInstanceInstanceShardServerNodeArgs{...}
type InstancesInstanceInstanceShardServerNodeInput interface {
	pulumi.Input

	ToInstancesInstanceInstanceShardServerNodeOutput() InstancesInstanceInstanceShardServerNodeOutput
	ToInstancesInstanceInstanceShardServerNodeOutputWithContext(context.Context) InstancesInstanceInstanceShardServerNodeOutput
}

type InstancesInstanceInstanceShardServerNodeArgs struct {
	// The current role of the node.
	CurrentRole pulumi.StringInput `pulumi:"currentRole"`
	// The ID of node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The status of redis instance to query.
	Status pulumi.StringInput `pulumi:"status"`
	// The zone id of redis instance to query. This field supports fuzzy queries.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (InstancesInstanceInstanceShardServerNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceInstanceShardServerNode)(nil)).Elem()
}

func (i InstancesInstanceInstanceShardServerNodeArgs) ToInstancesInstanceInstanceShardServerNodeOutput() InstancesInstanceInstanceShardServerNodeOutput {
	return i.ToInstancesInstanceInstanceShardServerNodeOutputWithContext(context.Background())
}

func (i InstancesInstanceInstanceShardServerNodeArgs) ToInstancesInstanceInstanceShardServerNodeOutputWithContext(ctx context.Context) InstancesInstanceInstanceShardServerNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceInstanceShardServerNodeOutput)
}

// InstancesInstanceInstanceShardServerNodeArrayInput is an input type that accepts InstancesInstanceInstanceShardServerNodeArray and InstancesInstanceInstanceShardServerNodeArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceInstanceShardServerNodeArrayInput` via:
//
//	InstancesInstanceInstanceShardServerNodeArray{ InstancesInstanceInstanceShardServerNodeArgs{...} }
type InstancesInstanceInstanceShardServerNodeArrayInput interface {
	pulumi.Input

	ToInstancesInstanceInstanceShardServerNodeArrayOutput() InstancesInstanceInstanceShardServerNodeArrayOutput
	ToInstancesInstanceInstanceShardServerNodeArrayOutputWithContext(context.Context) InstancesInstanceInstanceShardServerNodeArrayOutput
}

type InstancesInstanceInstanceShardServerNodeArray []InstancesInstanceInstanceShardServerNodeInput

func (InstancesInstanceInstanceShardServerNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceInstanceShardServerNode)(nil)).Elem()
}

func (i InstancesInstanceInstanceShardServerNodeArray) ToInstancesInstanceInstanceShardServerNodeArrayOutput() InstancesInstanceInstanceShardServerNodeArrayOutput {
	return i.ToInstancesInstanceInstanceShardServerNodeArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceInstanceShardServerNodeArray) ToInstancesInstanceInstanceShardServerNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceInstanceShardServerNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceInstanceShardServerNodeArrayOutput)
}

type InstancesInstanceInstanceShardServerNodeOutput struct{ *pulumi.OutputState }

func (InstancesInstanceInstanceShardServerNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceInstanceShardServerNode)(nil)).Elem()
}

func (o InstancesInstanceInstanceShardServerNodeOutput) ToInstancesInstanceInstanceShardServerNodeOutput() InstancesInstanceInstanceShardServerNodeOutput {
	return o
}

func (o InstancesInstanceInstanceShardServerNodeOutput) ToInstancesInstanceInstanceShardServerNodeOutputWithContext(ctx context.Context) InstancesInstanceInstanceShardServerNodeOutput {
	return o
}

// The current role of the node.
func (o InstancesInstanceInstanceShardServerNodeOutput) CurrentRole() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceInstanceShardServerNode) string { return v.CurrentRole }).(pulumi.StringOutput)
}

// The ID of node.
func (o InstancesInstanceInstanceShardServerNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceInstanceShardServerNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// The status of redis instance to query.
func (o InstancesInstanceInstanceShardServerNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceInstanceShardServerNode) string { return v.Status }).(pulumi.StringOutput)
}

// The zone id of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceInstanceShardServerNodeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceInstanceShardServerNode) string { return v.ZoneId }).(pulumi.StringOutput)
}

type InstancesInstanceInstanceShardServerNodeArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceInstanceShardServerNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceInstanceShardServerNode)(nil)).Elem()
}

func (o InstancesInstanceInstanceShardServerNodeArrayOutput) ToInstancesInstanceInstanceShardServerNodeArrayOutput() InstancesInstanceInstanceShardServerNodeArrayOutput {
	return o
}

func (o InstancesInstanceInstanceShardServerNodeArrayOutput) ToInstancesInstanceInstanceShardServerNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceInstanceShardServerNodeArrayOutput {
	return o
}

func (o InstancesInstanceInstanceShardServerNodeArrayOutput) Index(i pulumi.IntInput) InstancesInstanceInstanceShardServerNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceInstanceShardServerNode {
		return vs[0].([]InstancesInstanceInstanceShardServerNode)[vs[1].(int)]
	}).(InstancesInstanceInstanceShardServerNodeOutput)
}

type InstancesInstanceParam struct {
	// Current value of the configuration parameter.
	CurrentValue string `pulumi:"currentValue"`
	// Default value of the configuration parameter.
	DefaultValue string `pulumi:"defaultValue"`
	// The description of this option item.
	Description string `pulumi:"description"`
	// Whether the current redis instance supports editing this parameter.
	EditableForInstance bool `pulumi:"editableForInstance"`
	// Whether need to reboot the redis instance when modifying this parameter.
	NeedReboot bool `pulumi:"needReboot"`
	// The list of options. Valid when the configuration parameter type is `Radio`.
	Options []InstancesInstanceParamOption `pulumi:"options"`
	// The name of the configuration parameter.
	ParamName string `pulumi:"paramName"`
	// The valid value range of the numeric type configuration parameter.
	Range string `pulumi:"range"`
	// The type of the configuration parameter.
	Type string `pulumi:"type"`
	// The unit of the numeric type configuration parameter.
	Unit string `pulumi:"unit"`
}

// InstancesInstanceParamInput is an input type that accepts InstancesInstanceParamArgs and InstancesInstanceParamOutput values.
// You can construct a concrete instance of `InstancesInstanceParamInput` via:
//
//	InstancesInstanceParamArgs{...}
type InstancesInstanceParamInput interface {
	pulumi.Input

	ToInstancesInstanceParamOutput() InstancesInstanceParamOutput
	ToInstancesInstanceParamOutputWithContext(context.Context) InstancesInstanceParamOutput
}

type InstancesInstanceParamArgs struct {
	// Current value of the configuration parameter.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// Default value of the configuration parameter.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// The description of this option item.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the current redis instance supports editing this parameter.
	EditableForInstance pulumi.BoolInput `pulumi:"editableForInstance"`
	// Whether need to reboot the redis instance when modifying this parameter.
	NeedReboot pulumi.BoolInput `pulumi:"needReboot"`
	// The list of options. Valid when the configuration parameter type is `Radio`.
	Options InstancesInstanceParamOptionArrayInput `pulumi:"options"`
	// The name of the configuration parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The valid value range of the numeric type configuration parameter.
	Range pulumi.StringInput `pulumi:"range"`
	// The type of the configuration parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The unit of the numeric type configuration parameter.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (InstancesInstanceParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceParam)(nil)).Elem()
}

func (i InstancesInstanceParamArgs) ToInstancesInstanceParamOutput() InstancesInstanceParamOutput {
	return i.ToInstancesInstanceParamOutputWithContext(context.Background())
}

func (i InstancesInstanceParamArgs) ToInstancesInstanceParamOutputWithContext(ctx context.Context) InstancesInstanceParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceParamOutput)
}

// InstancesInstanceParamArrayInput is an input type that accepts InstancesInstanceParamArray and InstancesInstanceParamArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceParamArrayInput` via:
//
//	InstancesInstanceParamArray{ InstancesInstanceParamArgs{...} }
type InstancesInstanceParamArrayInput interface {
	pulumi.Input

	ToInstancesInstanceParamArrayOutput() InstancesInstanceParamArrayOutput
	ToInstancesInstanceParamArrayOutputWithContext(context.Context) InstancesInstanceParamArrayOutput
}

type InstancesInstanceParamArray []InstancesInstanceParamInput

func (InstancesInstanceParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceParam)(nil)).Elem()
}

func (i InstancesInstanceParamArray) ToInstancesInstanceParamArrayOutput() InstancesInstanceParamArrayOutput {
	return i.ToInstancesInstanceParamArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceParamArray) ToInstancesInstanceParamArrayOutputWithContext(ctx context.Context) InstancesInstanceParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceParamArrayOutput)
}

type InstancesInstanceParamOutput struct{ *pulumi.OutputState }

func (InstancesInstanceParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceParam)(nil)).Elem()
}

func (o InstancesInstanceParamOutput) ToInstancesInstanceParamOutput() InstancesInstanceParamOutput {
	return o
}

func (o InstancesInstanceParamOutput) ToInstancesInstanceParamOutputWithContext(ctx context.Context) InstancesInstanceParamOutput {
	return o
}

// Current value of the configuration parameter.
func (o InstancesInstanceParamOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// Default value of the configuration parameter.
func (o InstancesInstanceParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// The description of this option item.
func (o InstancesInstanceParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the current redis instance supports editing this parameter.
func (o InstancesInstanceParamOutput) EditableForInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceParam) bool { return v.EditableForInstance }).(pulumi.BoolOutput)
}

// Whether need to reboot the redis instance when modifying this parameter.
func (o InstancesInstanceParamOutput) NeedReboot() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceParam) bool { return v.NeedReboot }).(pulumi.BoolOutput)
}

// The list of options. Valid when the configuration parameter type is `Radio`.
func (o InstancesInstanceParamOutput) Options() InstancesInstanceParamOptionArrayOutput {
	return o.ApplyT(func(v InstancesInstanceParam) []InstancesInstanceParamOption { return v.Options }).(InstancesInstanceParamOptionArrayOutput)
}

// The name of the configuration parameter.
func (o InstancesInstanceParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// The valid value range of the numeric type configuration parameter.
func (o InstancesInstanceParamOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.Range }).(pulumi.StringOutput)
}

// The type of the configuration parameter.
func (o InstancesInstanceParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.Type }).(pulumi.StringOutput)
}

// The unit of the numeric type configuration parameter.
func (o InstancesInstanceParamOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.Unit }).(pulumi.StringOutput)
}

type InstancesInstanceParamArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceParam)(nil)).Elem()
}

func (o InstancesInstanceParamArrayOutput) ToInstancesInstanceParamArrayOutput() InstancesInstanceParamArrayOutput {
	return o
}

func (o InstancesInstanceParamArrayOutput) ToInstancesInstanceParamArrayOutputWithContext(ctx context.Context) InstancesInstanceParamArrayOutput {
	return o
}

func (o InstancesInstanceParamArrayOutput) Index(i pulumi.IntInput) InstancesInstanceParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceParam {
		return vs[0].([]InstancesInstanceParam)[vs[1].(int)]
	}).(InstancesInstanceParamOutput)
}

type InstancesInstanceParamOption struct {
	// The description of this option item.
	Description string `pulumi:"description"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstancesInstanceParamOptionInput is an input type that accepts InstancesInstanceParamOptionArgs and InstancesInstanceParamOptionOutput values.
// You can construct a concrete instance of `InstancesInstanceParamOptionInput` via:
//
//	InstancesInstanceParamOptionArgs{...}
type InstancesInstanceParamOptionInput interface {
	pulumi.Input

	ToInstancesInstanceParamOptionOutput() InstancesInstanceParamOptionOutput
	ToInstancesInstanceParamOptionOutputWithContext(context.Context) InstancesInstanceParamOptionOutput
}

type InstancesInstanceParamOptionArgs struct {
	// The description of this option item.
	Description pulumi.StringInput `pulumi:"description"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstancesInstanceParamOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceParamOption)(nil)).Elem()
}

func (i InstancesInstanceParamOptionArgs) ToInstancesInstanceParamOptionOutput() InstancesInstanceParamOptionOutput {
	return i.ToInstancesInstanceParamOptionOutputWithContext(context.Background())
}

func (i InstancesInstanceParamOptionArgs) ToInstancesInstanceParamOptionOutputWithContext(ctx context.Context) InstancesInstanceParamOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceParamOptionOutput)
}

// InstancesInstanceParamOptionArrayInput is an input type that accepts InstancesInstanceParamOptionArray and InstancesInstanceParamOptionArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceParamOptionArrayInput` via:
//
//	InstancesInstanceParamOptionArray{ InstancesInstanceParamOptionArgs{...} }
type InstancesInstanceParamOptionArrayInput interface {
	pulumi.Input

	ToInstancesInstanceParamOptionArrayOutput() InstancesInstanceParamOptionArrayOutput
	ToInstancesInstanceParamOptionArrayOutputWithContext(context.Context) InstancesInstanceParamOptionArrayOutput
}

type InstancesInstanceParamOptionArray []InstancesInstanceParamOptionInput

func (InstancesInstanceParamOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceParamOption)(nil)).Elem()
}

func (i InstancesInstanceParamOptionArray) ToInstancesInstanceParamOptionArrayOutput() InstancesInstanceParamOptionArrayOutput {
	return i.ToInstancesInstanceParamOptionArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceParamOptionArray) ToInstancesInstanceParamOptionArrayOutputWithContext(ctx context.Context) InstancesInstanceParamOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceParamOptionArrayOutput)
}

type InstancesInstanceParamOptionOutput struct{ *pulumi.OutputState }

func (InstancesInstanceParamOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceParamOption)(nil)).Elem()
}

func (o InstancesInstanceParamOptionOutput) ToInstancesInstanceParamOptionOutput() InstancesInstanceParamOptionOutput {
	return o
}

func (o InstancesInstanceParamOptionOutput) ToInstancesInstanceParamOptionOutputWithContext(ctx context.Context) InstancesInstanceParamOptionOutput {
	return o
}

// The description of this option item.
func (o InstancesInstanceParamOptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParamOption) string { return v.Description }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstancesInstanceParamOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParamOption) string { return v.Value }).(pulumi.StringOutput)
}

type InstancesInstanceParamOptionArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceParamOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceParamOption)(nil)).Elem()
}

func (o InstancesInstanceParamOptionArrayOutput) ToInstancesInstanceParamOptionArrayOutput() InstancesInstanceParamOptionArrayOutput {
	return o
}

func (o InstancesInstanceParamOptionArrayOutput) ToInstancesInstanceParamOptionArrayOutputWithContext(ctx context.Context) InstancesInstanceParamOptionArrayOutput {
	return o
}

func (o InstancesInstanceParamOptionArrayOutput) Index(i pulumi.IntInput) InstancesInstanceParamOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceParamOption {
		return vs[0].([]InstancesInstanceParamOption)[vs[1].(int)]
	}).(InstancesInstanceParamOptionOutput)
}

type InstancesInstanceServerNode struct {
	// The current role of the node.
	CurrentRole string `pulumi:"currentRole"`
	// The ID of node.
	NodeId string `pulumi:"nodeId"`
	// The status of redis instance to query.
	Status string `pulumi:"status"`
	// The zone id of redis instance to query. This field supports fuzzy queries.
	ZoneId string `pulumi:"zoneId"`
}

// InstancesInstanceServerNodeInput is an input type that accepts InstancesInstanceServerNodeArgs and InstancesInstanceServerNodeOutput values.
// You can construct a concrete instance of `InstancesInstanceServerNodeInput` via:
//
//	InstancesInstanceServerNodeArgs{...}
type InstancesInstanceServerNodeInput interface {
	pulumi.Input

	ToInstancesInstanceServerNodeOutput() InstancesInstanceServerNodeOutput
	ToInstancesInstanceServerNodeOutputWithContext(context.Context) InstancesInstanceServerNodeOutput
}

type InstancesInstanceServerNodeArgs struct {
	// The current role of the node.
	CurrentRole pulumi.StringInput `pulumi:"currentRole"`
	// The ID of node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The status of redis instance to query.
	Status pulumi.StringInput `pulumi:"status"`
	// The zone id of redis instance to query. This field supports fuzzy queries.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (InstancesInstanceServerNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceServerNode)(nil)).Elem()
}

func (i InstancesInstanceServerNodeArgs) ToInstancesInstanceServerNodeOutput() InstancesInstanceServerNodeOutput {
	return i.ToInstancesInstanceServerNodeOutputWithContext(context.Background())
}

func (i InstancesInstanceServerNodeArgs) ToInstancesInstanceServerNodeOutputWithContext(ctx context.Context) InstancesInstanceServerNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceServerNodeOutput)
}

// InstancesInstanceServerNodeArrayInput is an input type that accepts InstancesInstanceServerNodeArray and InstancesInstanceServerNodeArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceServerNodeArrayInput` via:
//
//	InstancesInstanceServerNodeArray{ InstancesInstanceServerNodeArgs{...} }
type InstancesInstanceServerNodeArrayInput interface {
	pulumi.Input

	ToInstancesInstanceServerNodeArrayOutput() InstancesInstanceServerNodeArrayOutput
	ToInstancesInstanceServerNodeArrayOutputWithContext(context.Context) InstancesInstanceServerNodeArrayOutput
}

type InstancesInstanceServerNodeArray []InstancesInstanceServerNodeInput

func (InstancesInstanceServerNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceServerNode)(nil)).Elem()
}

func (i InstancesInstanceServerNodeArray) ToInstancesInstanceServerNodeArrayOutput() InstancesInstanceServerNodeArrayOutput {
	return i.ToInstancesInstanceServerNodeArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceServerNodeArray) ToInstancesInstanceServerNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceServerNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceServerNodeArrayOutput)
}

type InstancesInstanceServerNodeOutput struct{ *pulumi.OutputState }

func (InstancesInstanceServerNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceServerNode)(nil)).Elem()
}

func (o InstancesInstanceServerNodeOutput) ToInstancesInstanceServerNodeOutput() InstancesInstanceServerNodeOutput {
	return o
}

func (o InstancesInstanceServerNodeOutput) ToInstancesInstanceServerNodeOutputWithContext(ctx context.Context) InstancesInstanceServerNodeOutput {
	return o
}

// The current role of the node.
func (o InstancesInstanceServerNodeOutput) CurrentRole() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceServerNode) string { return v.CurrentRole }).(pulumi.StringOutput)
}

// The ID of node.
func (o InstancesInstanceServerNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceServerNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// The status of redis instance to query.
func (o InstancesInstanceServerNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceServerNode) string { return v.Status }).(pulumi.StringOutput)
}

// The zone id of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceServerNodeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceServerNode) string { return v.ZoneId }).(pulumi.StringOutput)
}

type InstancesInstanceServerNodeArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceServerNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceServerNode)(nil)).Elem()
}

func (o InstancesInstanceServerNodeArrayOutput) ToInstancesInstanceServerNodeArrayOutput() InstancesInstanceServerNodeArrayOutput {
	return o
}

func (o InstancesInstanceServerNodeArrayOutput) ToInstancesInstanceServerNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceServerNodeArrayOutput {
	return o
}

func (o InstancesInstanceServerNodeArrayOutput) Index(i pulumi.IntInput) InstancesInstanceServerNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceServerNode {
		return vs[0].([]InstancesInstanceServerNode)[vs[1].(int)]
	}).(InstancesInstanceServerNodeOutput)
}

type InstancesInstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstancesInstanceTagInput is an input type that accepts InstancesInstanceTagArgs and InstancesInstanceTagOutput values.
// You can construct a concrete instance of `InstancesInstanceTagInput` via:
//
//	InstancesInstanceTagArgs{...}
type InstancesInstanceTagInput interface {
	pulumi.Input

	ToInstancesInstanceTagOutput() InstancesInstanceTagOutput
	ToInstancesInstanceTagOutputWithContext(context.Context) InstancesInstanceTagOutput
}

type InstancesInstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstancesInstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceTag)(nil)).Elem()
}

func (i InstancesInstanceTagArgs) ToInstancesInstanceTagOutput() InstancesInstanceTagOutput {
	return i.ToInstancesInstanceTagOutputWithContext(context.Background())
}

func (i InstancesInstanceTagArgs) ToInstancesInstanceTagOutputWithContext(ctx context.Context) InstancesInstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceTagOutput)
}

// InstancesInstanceTagArrayInput is an input type that accepts InstancesInstanceTagArray and InstancesInstanceTagArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceTagArrayInput` via:
//
//	InstancesInstanceTagArray{ InstancesInstanceTagArgs{...} }
type InstancesInstanceTagArrayInput interface {
	pulumi.Input

	ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput
	ToInstancesInstanceTagArrayOutputWithContext(context.Context) InstancesInstanceTagArrayOutput
}

type InstancesInstanceTagArray []InstancesInstanceTagInput

func (InstancesInstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceTag)(nil)).Elem()
}

func (i InstancesInstanceTagArray) ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput {
	return i.ToInstancesInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceTagArray) ToInstancesInstanceTagArrayOutputWithContext(ctx context.Context) InstancesInstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceTagArrayOutput)
}

type InstancesInstanceTagOutput struct{ *pulumi.OutputState }

func (InstancesInstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceTag)(nil)).Elem()
}

func (o InstancesInstanceTagOutput) ToInstancesInstanceTagOutput() InstancesInstanceTagOutput {
	return o
}

func (o InstancesInstanceTagOutput) ToInstancesInstanceTagOutputWithContext(ctx context.Context) InstancesInstanceTagOutput {
	return o
}

// The Key of Tags.
func (o InstancesInstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstancesInstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstancesInstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceTag)(nil)).Elem()
}

func (o InstancesInstanceTagArrayOutput) ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput {
	return o
}

func (o InstancesInstanceTagArrayOutput) ToInstancesInstanceTagArrayOutputWithContext(ctx context.Context) InstancesInstanceTagArrayOutput {
	return o
}

func (o InstancesInstanceTagArrayOutput) Index(i pulumi.IntInput) InstancesInstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceTag {
		return vs[0].([]InstancesInstanceTag)[vs[1].(int)]
	}).(InstancesInstanceTagOutput)
}

type InstancesInstanceVisitAddr struct {
	// The connection address type.
	AddrType string `pulumi:"addrType"`
	// The connection address.
	Address string `pulumi:"address"`
	// The EIP ID bound to the instance's public network address.
	EipId string `pulumi:"eipId"`
	// The connection port.
	Port string `pulumi:"port"`
	// The ipv4 address of the connection address.
	Vip string `pulumi:"vip"`
	// The ipv6 address of the connection address.
	VipV6 string `pulumi:"vipV6"`
}

// InstancesInstanceVisitAddrInput is an input type that accepts InstancesInstanceVisitAddrArgs and InstancesInstanceVisitAddrOutput values.
// You can construct a concrete instance of `InstancesInstanceVisitAddrInput` via:
//
//	InstancesInstanceVisitAddrArgs{...}
type InstancesInstanceVisitAddrInput interface {
	pulumi.Input

	ToInstancesInstanceVisitAddrOutput() InstancesInstanceVisitAddrOutput
	ToInstancesInstanceVisitAddrOutputWithContext(context.Context) InstancesInstanceVisitAddrOutput
}

type InstancesInstanceVisitAddrArgs struct {
	// The connection address type.
	AddrType pulumi.StringInput `pulumi:"addrType"`
	// The connection address.
	Address pulumi.StringInput `pulumi:"address"`
	// The EIP ID bound to the instance's public network address.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// The connection port.
	Port pulumi.StringInput `pulumi:"port"`
	// The ipv4 address of the connection address.
	Vip pulumi.StringInput `pulumi:"vip"`
	// The ipv6 address of the connection address.
	VipV6 pulumi.StringInput `pulumi:"vipV6"`
}

func (InstancesInstanceVisitAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceVisitAddr)(nil)).Elem()
}

func (i InstancesInstanceVisitAddrArgs) ToInstancesInstanceVisitAddrOutput() InstancesInstanceVisitAddrOutput {
	return i.ToInstancesInstanceVisitAddrOutputWithContext(context.Background())
}

func (i InstancesInstanceVisitAddrArgs) ToInstancesInstanceVisitAddrOutputWithContext(ctx context.Context) InstancesInstanceVisitAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceVisitAddrOutput)
}

// InstancesInstanceVisitAddrArrayInput is an input type that accepts InstancesInstanceVisitAddrArray and InstancesInstanceVisitAddrArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceVisitAddrArrayInput` via:
//
//	InstancesInstanceVisitAddrArray{ InstancesInstanceVisitAddrArgs{...} }
type InstancesInstanceVisitAddrArrayInput interface {
	pulumi.Input

	ToInstancesInstanceVisitAddrArrayOutput() InstancesInstanceVisitAddrArrayOutput
	ToInstancesInstanceVisitAddrArrayOutputWithContext(context.Context) InstancesInstanceVisitAddrArrayOutput
}

type InstancesInstanceVisitAddrArray []InstancesInstanceVisitAddrInput

func (InstancesInstanceVisitAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceVisitAddr)(nil)).Elem()
}

func (i InstancesInstanceVisitAddrArray) ToInstancesInstanceVisitAddrArrayOutput() InstancesInstanceVisitAddrArrayOutput {
	return i.ToInstancesInstanceVisitAddrArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceVisitAddrArray) ToInstancesInstanceVisitAddrArrayOutputWithContext(ctx context.Context) InstancesInstanceVisitAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceVisitAddrArrayOutput)
}

type InstancesInstanceVisitAddrOutput struct{ *pulumi.OutputState }

func (InstancesInstanceVisitAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceVisitAddr)(nil)).Elem()
}

func (o InstancesInstanceVisitAddrOutput) ToInstancesInstanceVisitAddrOutput() InstancesInstanceVisitAddrOutput {
	return o
}

func (o InstancesInstanceVisitAddrOutput) ToInstancesInstanceVisitAddrOutputWithContext(ctx context.Context) InstancesInstanceVisitAddrOutput {
	return o
}

// The connection address type.
func (o InstancesInstanceVisitAddrOutput) AddrType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.AddrType }).(pulumi.StringOutput)
}

// The connection address.
func (o InstancesInstanceVisitAddrOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.Address }).(pulumi.StringOutput)
}

// The EIP ID bound to the instance's public network address.
func (o InstancesInstanceVisitAddrOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.EipId }).(pulumi.StringOutput)
}

// The connection port.
func (o InstancesInstanceVisitAddrOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.Port }).(pulumi.StringOutput)
}

// The ipv4 address of the connection address.
func (o InstancesInstanceVisitAddrOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.Vip }).(pulumi.StringOutput)
}

// The ipv6 address of the connection address.
func (o InstancesInstanceVisitAddrOutput) VipV6() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.VipV6 }).(pulumi.StringOutput)
}

type InstancesInstanceVisitAddrArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceVisitAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceVisitAddr)(nil)).Elem()
}

func (o InstancesInstanceVisitAddrArrayOutput) ToInstancesInstanceVisitAddrArrayOutput() InstancesInstanceVisitAddrArrayOutput {
	return o
}

func (o InstancesInstanceVisitAddrArrayOutput) ToInstancesInstanceVisitAddrArrayOutputWithContext(ctx context.Context) InstancesInstanceVisitAddrArrayOutput {
	return o
}

func (o InstancesInstanceVisitAddrArrayOutput) Index(i pulumi.IntInput) InstancesInstanceVisitAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceVisitAddr {
		return vs[0].([]InstancesInstanceVisitAddr)[vs[1].(int)]
	}).(InstancesInstanceVisitAddrOutput)
}

type InstancesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstancesTagInput is an input type that accepts InstancesTagArgs and InstancesTagOutput values.
// You can construct a concrete instance of `InstancesTagInput` via:
//
//	InstancesTagArgs{...}
type InstancesTagInput interface {
	pulumi.Input

	ToInstancesTagOutput() InstancesTagOutput
	ToInstancesTagOutputWithContext(context.Context) InstancesTagOutput
}

type InstancesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstancesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTag)(nil)).Elem()
}

func (i InstancesTagArgs) ToInstancesTagOutput() InstancesTagOutput {
	return i.ToInstancesTagOutputWithContext(context.Background())
}

func (i InstancesTagArgs) ToInstancesTagOutputWithContext(ctx context.Context) InstancesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTagOutput)
}

// InstancesTagArrayInput is an input type that accepts InstancesTagArray and InstancesTagArrayOutput values.
// You can construct a concrete instance of `InstancesTagArrayInput` via:
//
//	InstancesTagArray{ InstancesTagArgs{...} }
type InstancesTagArrayInput interface {
	pulumi.Input

	ToInstancesTagArrayOutput() InstancesTagArrayOutput
	ToInstancesTagArrayOutputWithContext(context.Context) InstancesTagArrayOutput
}

type InstancesTagArray []InstancesTagInput

func (InstancesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTag)(nil)).Elem()
}

func (i InstancesTagArray) ToInstancesTagArrayOutput() InstancesTagArrayOutput {
	return i.ToInstancesTagArrayOutputWithContext(context.Background())
}

func (i InstancesTagArray) ToInstancesTagArrayOutputWithContext(ctx context.Context) InstancesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTagArrayOutput)
}

type InstancesTagOutput struct{ *pulumi.OutputState }

func (InstancesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTag)(nil)).Elem()
}

func (o InstancesTagOutput) ToInstancesTagOutput() InstancesTagOutput {
	return o
}

func (o InstancesTagOutput) ToInstancesTagOutputWithContext(ctx context.Context) InstancesTagOutput {
	return o
}

// The Key of Tags.
func (o InstancesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstancesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstancesTagArrayOutput struct{ *pulumi.OutputState }

func (InstancesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTag)(nil)).Elem()
}

func (o InstancesTagArrayOutput) ToInstancesTagArrayOutput() InstancesTagArrayOutput {
	return o
}

func (o InstancesTagArrayOutput) ToInstancesTagArrayOutputWithContext(ctx context.Context) InstancesTagArrayOutput {
	return o
}

func (o InstancesTagArrayOutput) Index(i pulumi.IntInput) InstancesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesTag {
		return vs[0].([]InstancesTag)[vs[1].(int)]
	}).(InstancesTagOutput)
}

type ParameterGroupParamValue struct {
	// The parameter names that need to be included in the parameter template.
	Name string `pulumi:"name"`
	// The parameter values set for the corresponding parameters.
	Value string `pulumi:"value"`
}

// ParameterGroupParamValueInput is an input type that accepts ParameterGroupParamValueArgs and ParameterGroupParamValueOutput values.
// You can construct a concrete instance of `ParameterGroupParamValueInput` via:
//
//	ParameterGroupParamValueArgs{...}
type ParameterGroupParamValueInput interface {
	pulumi.Input

	ToParameterGroupParamValueOutput() ParameterGroupParamValueOutput
	ToParameterGroupParamValueOutputWithContext(context.Context) ParameterGroupParamValueOutput
}

type ParameterGroupParamValueArgs struct {
	// The parameter names that need to be included in the parameter template.
	Name pulumi.StringInput `pulumi:"name"`
	// The parameter values set for the corresponding parameters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ParameterGroupParamValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupParamValue)(nil)).Elem()
}

func (i ParameterGroupParamValueArgs) ToParameterGroupParamValueOutput() ParameterGroupParamValueOutput {
	return i.ToParameterGroupParamValueOutputWithContext(context.Background())
}

func (i ParameterGroupParamValueArgs) ToParameterGroupParamValueOutputWithContext(ctx context.Context) ParameterGroupParamValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupParamValueOutput)
}

// ParameterGroupParamValueArrayInput is an input type that accepts ParameterGroupParamValueArray and ParameterGroupParamValueArrayOutput values.
// You can construct a concrete instance of `ParameterGroupParamValueArrayInput` via:
//
//	ParameterGroupParamValueArray{ ParameterGroupParamValueArgs{...} }
type ParameterGroupParamValueArrayInput interface {
	pulumi.Input

	ToParameterGroupParamValueArrayOutput() ParameterGroupParamValueArrayOutput
	ToParameterGroupParamValueArrayOutputWithContext(context.Context) ParameterGroupParamValueArrayOutput
}

type ParameterGroupParamValueArray []ParameterGroupParamValueInput

func (ParameterGroupParamValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupParamValue)(nil)).Elem()
}

func (i ParameterGroupParamValueArray) ToParameterGroupParamValueArrayOutput() ParameterGroupParamValueArrayOutput {
	return i.ToParameterGroupParamValueArrayOutputWithContext(context.Background())
}

func (i ParameterGroupParamValueArray) ToParameterGroupParamValueArrayOutputWithContext(ctx context.Context) ParameterGroupParamValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupParamValueArrayOutput)
}

type ParameterGroupParamValueOutput struct{ *pulumi.OutputState }

func (ParameterGroupParamValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupParamValue)(nil)).Elem()
}

func (o ParameterGroupParamValueOutput) ToParameterGroupParamValueOutput() ParameterGroupParamValueOutput {
	return o
}

func (o ParameterGroupParamValueOutput) ToParameterGroupParamValueOutputWithContext(ctx context.Context) ParameterGroupParamValueOutput {
	return o
}

// The parameter names that need to be included in the parameter template.
func (o ParameterGroupParamValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupParamValue) string { return v.Name }).(pulumi.StringOutput)
}

// The parameter values set for the corresponding parameters.
func (o ParameterGroupParamValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupParamValue) string { return v.Value }).(pulumi.StringOutput)
}

type ParameterGroupParamValueArrayOutput struct{ *pulumi.OutputState }

func (ParameterGroupParamValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupParamValue)(nil)).Elem()
}

func (o ParameterGroupParamValueArrayOutput) ToParameterGroupParamValueArrayOutput() ParameterGroupParamValueArrayOutput {
	return o
}

func (o ParameterGroupParamValueArrayOutput) ToParameterGroupParamValueArrayOutputWithContext(ctx context.Context) ParameterGroupParamValueArrayOutput {
	return o
}

func (o ParameterGroupParamValueArrayOutput) Index(i pulumi.IntInput) ParameterGroupParamValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterGroupParamValue {
		return vs[0].([]ParameterGroupParamValue)[vs[1].(int)]
	}).(ParameterGroupParamValueOutput)
}

type ParameterGroupsParameterGroup struct {
	// The creation time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
	CreateTime string `pulumi:"createTime"`
	// Whether it is the default parameter template.
	Default bool `pulumi:"default"`
	// The description the Optional parameters.
	Description string `pulumi:"description"`
	// The Redis database version applicable to the parameter template.
	EngineVersion string `pulumi:"engineVersion"`
	// The name of the parameter template.
	Name string `pulumi:"name"`
	// The ID of the parameter template.
	ParameterGroupId string `pulumi:"parameterGroupId"`
	// The number of parameters contained in the parameter template.
	ParameterNum int `pulumi:"parameterNum"`
	// The list of parameter information contained in the parameter template.
	Parameters []ParameterGroupsParameterGroupParameter `pulumi:"parameters"`
	// The source of creating the parameter template.
	Source string `pulumi:"source"`
	// The last update time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
	UpdateTime string `pulumi:"updateTime"`
}

// ParameterGroupsParameterGroupInput is an input type that accepts ParameterGroupsParameterGroupArgs and ParameterGroupsParameterGroupOutput values.
// You can construct a concrete instance of `ParameterGroupsParameterGroupInput` via:
//
//	ParameterGroupsParameterGroupArgs{...}
type ParameterGroupsParameterGroupInput interface {
	pulumi.Input

	ToParameterGroupsParameterGroupOutput() ParameterGroupsParameterGroupOutput
	ToParameterGroupsParameterGroupOutputWithContext(context.Context) ParameterGroupsParameterGroupOutput
}

type ParameterGroupsParameterGroupArgs struct {
	// The creation time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Whether it is the default parameter template.
	Default pulumi.BoolInput `pulumi:"default"`
	// The description the Optional parameters.
	Description pulumi.StringInput `pulumi:"description"`
	// The Redis database version applicable to the parameter template.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// The name of the parameter template.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the parameter template.
	ParameterGroupId pulumi.StringInput `pulumi:"parameterGroupId"`
	// The number of parameters contained in the parameter template.
	ParameterNum pulumi.IntInput `pulumi:"parameterNum"`
	// The list of parameter information contained in the parameter template.
	Parameters ParameterGroupsParameterGroupParameterArrayInput `pulumi:"parameters"`
	// The source of creating the parameter template.
	Source pulumi.StringInput `pulumi:"source"`
	// The last update time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (ParameterGroupsParameterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupsParameterGroup)(nil)).Elem()
}

func (i ParameterGroupsParameterGroupArgs) ToParameterGroupsParameterGroupOutput() ParameterGroupsParameterGroupOutput {
	return i.ToParameterGroupsParameterGroupOutputWithContext(context.Background())
}

func (i ParameterGroupsParameterGroupArgs) ToParameterGroupsParameterGroupOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupsParameterGroupOutput)
}

// ParameterGroupsParameterGroupArrayInput is an input type that accepts ParameterGroupsParameterGroupArray and ParameterGroupsParameterGroupArrayOutput values.
// You can construct a concrete instance of `ParameterGroupsParameterGroupArrayInput` via:
//
//	ParameterGroupsParameterGroupArray{ ParameterGroupsParameterGroupArgs{...} }
type ParameterGroupsParameterGroupArrayInput interface {
	pulumi.Input

	ToParameterGroupsParameterGroupArrayOutput() ParameterGroupsParameterGroupArrayOutput
	ToParameterGroupsParameterGroupArrayOutputWithContext(context.Context) ParameterGroupsParameterGroupArrayOutput
}

type ParameterGroupsParameterGroupArray []ParameterGroupsParameterGroupInput

func (ParameterGroupsParameterGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupsParameterGroup)(nil)).Elem()
}

func (i ParameterGroupsParameterGroupArray) ToParameterGroupsParameterGroupArrayOutput() ParameterGroupsParameterGroupArrayOutput {
	return i.ToParameterGroupsParameterGroupArrayOutputWithContext(context.Background())
}

func (i ParameterGroupsParameterGroupArray) ToParameterGroupsParameterGroupArrayOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupsParameterGroupArrayOutput)
}

type ParameterGroupsParameterGroupOutput struct{ *pulumi.OutputState }

func (ParameterGroupsParameterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupsParameterGroup)(nil)).Elem()
}

func (o ParameterGroupsParameterGroupOutput) ToParameterGroupsParameterGroupOutput() ParameterGroupsParameterGroupOutput {
	return o
}

func (o ParameterGroupsParameterGroupOutput) ToParameterGroupsParameterGroupOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupOutput {
	return o
}

// The creation time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
func (o ParameterGroupsParameterGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether it is the default parameter template.
func (o ParameterGroupsParameterGroupOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) bool { return v.Default }).(pulumi.BoolOutput)
}

// The description the Optional parameters.
func (o ParameterGroupsParameterGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The Redis database version applicable to the parameter template.
func (o ParameterGroupsParameterGroupOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The name of the parameter template.
func (o ParameterGroupsParameterGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the parameter template.
func (o ParameterGroupsParameterGroupOutput) ParameterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) string { return v.ParameterGroupId }).(pulumi.StringOutput)
}

// The number of parameters contained in the parameter template.
func (o ParameterGroupsParameterGroupOutput) ParameterNum() pulumi.IntOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) int { return v.ParameterNum }).(pulumi.IntOutput)
}

// The list of parameter information contained in the parameter template.
func (o ParameterGroupsParameterGroupOutput) Parameters() ParameterGroupsParameterGroupParameterArrayOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) []ParameterGroupsParameterGroupParameter { return v.Parameters }).(ParameterGroupsParameterGroupParameterArrayOutput)
}

// The source of creating the parameter template.
func (o ParameterGroupsParameterGroupOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) string { return v.Source }).(pulumi.StringOutput)
}

// The last update time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
func (o ParameterGroupsParameterGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroup) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type ParameterGroupsParameterGroupArrayOutput struct{ *pulumi.OutputState }

func (ParameterGroupsParameterGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupsParameterGroup)(nil)).Elem()
}

func (o ParameterGroupsParameterGroupArrayOutput) ToParameterGroupsParameterGroupArrayOutput() ParameterGroupsParameterGroupArrayOutput {
	return o
}

func (o ParameterGroupsParameterGroupArrayOutput) ToParameterGroupsParameterGroupArrayOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupArrayOutput {
	return o
}

func (o ParameterGroupsParameterGroupArrayOutput) Index(i pulumi.IntInput) ParameterGroupsParameterGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterGroupsParameterGroup {
		return vs[0].([]ParameterGroupsParameterGroup)[vs[1].(int)]
	}).(ParameterGroupsParameterGroupOutput)
}

type ParameterGroupsParameterGroupParameter struct {
	// The current running value of the parameter.
	CurrentValue string `pulumi:"currentValue"`
	// The description the Optional parameters.
	Description string `pulumi:"description"`
	// Whether to restart the instance to take effect after modifying this parameter.
	NeedReboot bool `pulumi:"needReboot"`
	// The optional list of selector type parameters.
	Options []ParameterGroupsParameterGroupParameterOption `pulumi:"options"`
	// The name of parameter.
	ParamName string `pulumi:"paramName"`
	// The value range of numerical type parameters.
	Range string `pulumi:"range"`
	// The type of the parameter.
	Type string `pulumi:"type"`
	// The unit of the numerical type parameter.
	Unit string `pulumi:"unit"`
}

// ParameterGroupsParameterGroupParameterInput is an input type that accepts ParameterGroupsParameterGroupParameterArgs and ParameterGroupsParameterGroupParameterOutput values.
// You can construct a concrete instance of `ParameterGroupsParameterGroupParameterInput` via:
//
//	ParameterGroupsParameterGroupParameterArgs{...}
type ParameterGroupsParameterGroupParameterInput interface {
	pulumi.Input

	ToParameterGroupsParameterGroupParameterOutput() ParameterGroupsParameterGroupParameterOutput
	ToParameterGroupsParameterGroupParameterOutputWithContext(context.Context) ParameterGroupsParameterGroupParameterOutput
}

type ParameterGroupsParameterGroupParameterArgs struct {
	// The current running value of the parameter.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// The description the Optional parameters.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether to restart the instance to take effect after modifying this parameter.
	NeedReboot pulumi.BoolInput `pulumi:"needReboot"`
	// The optional list of selector type parameters.
	Options ParameterGroupsParameterGroupParameterOptionArrayInput `pulumi:"options"`
	// The name of parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The value range of numerical type parameters.
	Range pulumi.StringInput `pulumi:"range"`
	// The type of the parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The unit of the numerical type parameter.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (ParameterGroupsParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupsParameterGroupParameter)(nil)).Elem()
}

func (i ParameterGroupsParameterGroupParameterArgs) ToParameterGroupsParameterGroupParameterOutput() ParameterGroupsParameterGroupParameterOutput {
	return i.ToParameterGroupsParameterGroupParameterOutputWithContext(context.Background())
}

func (i ParameterGroupsParameterGroupParameterArgs) ToParameterGroupsParameterGroupParameterOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupsParameterGroupParameterOutput)
}

// ParameterGroupsParameterGroupParameterArrayInput is an input type that accepts ParameterGroupsParameterGroupParameterArray and ParameterGroupsParameterGroupParameterArrayOutput values.
// You can construct a concrete instance of `ParameterGroupsParameterGroupParameterArrayInput` via:
//
//	ParameterGroupsParameterGroupParameterArray{ ParameterGroupsParameterGroupParameterArgs{...} }
type ParameterGroupsParameterGroupParameterArrayInput interface {
	pulumi.Input

	ToParameterGroupsParameterGroupParameterArrayOutput() ParameterGroupsParameterGroupParameterArrayOutput
	ToParameterGroupsParameterGroupParameterArrayOutputWithContext(context.Context) ParameterGroupsParameterGroupParameterArrayOutput
}

type ParameterGroupsParameterGroupParameterArray []ParameterGroupsParameterGroupParameterInput

func (ParameterGroupsParameterGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupsParameterGroupParameter)(nil)).Elem()
}

func (i ParameterGroupsParameterGroupParameterArray) ToParameterGroupsParameterGroupParameterArrayOutput() ParameterGroupsParameterGroupParameterArrayOutput {
	return i.ToParameterGroupsParameterGroupParameterArrayOutputWithContext(context.Background())
}

func (i ParameterGroupsParameterGroupParameterArray) ToParameterGroupsParameterGroupParameterArrayOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupsParameterGroupParameterArrayOutput)
}

type ParameterGroupsParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (ParameterGroupsParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupsParameterGroupParameter)(nil)).Elem()
}

func (o ParameterGroupsParameterGroupParameterOutput) ToParameterGroupsParameterGroupParameterOutput() ParameterGroupsParameterGroupParameterOutput {
	return o
}

func (o ParameterGroupsParameterGroupParameterOutput) ToParameterGroupsParameterGroupParameterOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupParameterOutput {
	return o
}

// The current running value of the parameter.
func (o ParameterGroupsParameterGroupParameterOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameter) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// The description the Optional parameters.
func (o ParameterGroupsParameterGroupParameterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameter) string { return v.Description }).(pulumi.StringOutput)
}

// Whether to restart the instance to take effect after modifying this parameter.
func (o ParameterGroupsParameterGroupParameterOutput) NeedReboot() pulumi.BoolOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameter) bool { return v.NeedReboot }).(pulumi.BoolOutput)
}

// The optional list of selector type parameters.
func (o ParameterGroupsParameterGroupParameterOutput) Options() ParameterGroupsParameterGroupParameterOptionArrayOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameter) []ParameterGroupsParameterGroupParameterOption {
		return v.Options
	}).(ParameterGroupsParameterGroupParameterOptionArrayOutput)
}

// The name of parameter.
func (o ParameterGroupsParameterGroupParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// The value range of numerical type parameters.
func (o ParameterGroupsParameterGroupParameterOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameter) string { return v.Range }).(pulumi.StringOutput)
}

// The type of the parameter.
func (o ParameterGroupsParameterGroupParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The unit of the numerical type parameter.
func (o ParameterGroupsParameterGroupParameterOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameter) string { return v.Unit }).(pulumi.StringOutput)
}

type ParameterGroupsParameterGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (ParameterGroupsParameterGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupsParameterGroupParameter)(nil)).Elem()
}

func (o ParameterGroupsParameterGroupParameterArrayOutput) ToParameterGroupsParameterGroupParameterArrayOutput() ParameterGroupsParameterGroupParameterArrayOutput {
	return o
}

func (o ParameterGroupsParameterGroupParameterArrayOutput) ToParameterGroupsParameterGroupParameterArrayOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupParameterArrayOutput {
	return o
}

func (o ParameterGroupsParameterGroupParameterArrayOutput) Index(i pulumi.IntInput) ParameterGroupsParameterGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterGroupsParameterGroupParameter {
		return vs[0].([]ParameterGroupsParameterGroupParameter)[vs[1].(int)]
	}).(ParameterGroupsParameterGroupParameterOutput)
}

type ParameterGroupsParameterGroupParameterOption struct {
	// The description the Optional parameters.
	Description string `pulumi:"description"`
	// Optional selector type parameters.
	Value string `pulumi:"value"`
}

// ParameterGroupsParameterGroupParameterOptionInput is an input type that accepts ParameterGroupsParameterGroupParameterOptionArgs and ParameterGroupsParameterGroupParameterOptionOutput values.
// You can construct a concrete instance of `ParameterGroupsParameterGroupParameterOptionInput` via:
//
//	ParameterGroupsParameterGroupParameterOptionArgs{...}
type ParameterGroupsParameterGroupParameterOptionInput interface {
	pulumi.Input

	ToParameterGroupsParameterGroupParameterOptionOutput() ParameterGroupsParameterGroupParameterOptionOutput
	ToParameterGroupsParameterGroupParameterOptionOutputWithContext(context.Context) ParameterGroupsParameterGroupParameterOptionOutput
}

type ParameterGroupsParameterGroupParameterOptionArgs struct {
	// The description the Optional parameters.
	Description pulumi.StringInput `pulumi:"description"`
	// Optional selector type parameters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ParameterGroupsParameterGroupParameterOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupsParameterGroupParameterOption)(nil)).Elem()
}

func (i ParameterGroupsParameterGroupParameterOptionArgs) ToParameterGroupsParameterGroupParameterOptionOutput() ParameterGroupsParameterGroupParameterOptionOutput {
	return i.ToParameterGroupsParameterGroupParameterOptionOutputWithContext(context.Background())
}

func (i ParameterGroupsParameterGroupParameterOptionArgs) ToParameterGroupsParameterGroupParameterOptionOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupParameterOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupsParameterGroupParameterOptionOutput)
}

// ParameterGroupsParameterGroupParameterOptionArrayInput is an input type that accepts ParameterGroupsParameterGroupParameterOptionArray and ParameterGroupsParameterGroupParameterOptionArrayOutput values.
// You can construct a concrete instance of `ParameterGroupsParameterGroupParameterOptionArrayInput` via:
//
//	ParameterGroupsParameterGroupParameterOptionArray{ ParameterGroupsParameterGroupParameterOptionArgs{...} }
type ParameterGroupsParameterGroupParameterOptionArrayInput interface {
	pulumi.Input

	ToParameterGroupsParameterGroupParameterOptionArrayOutput() ParameterGroupsParameterGroupParameterOptionArrayOutput
	ToParameterGroupsParameterGroupParameterOptionArrayOutputWithContext(context.Context) ParameterGroupsParameterGroupParameterOptionArrayOutput
}

type ParameterGroupsParameterGroupParameterOptionArray []ParameterGroupsParameterGroupParameterOptionInput

func (ParameterGroupsParameterGroupParameterOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupsParameterGroupParameterOption)(nil)).Elem()
}

func (i ParameterGroupsParameterGroupParameterOptionArray) ToParameterGroupsParameterGroupParameterOptionArrayOutput() ParameterGroupsParameterGroupParameterOptionArrayOutput {
	return i.ToParameterGroupsParameterGroupParameterOptionArrayOutputWithContext(context.Background())
}

func (i ParameterGroupsParameterGroupParameterOptionArray) ToParameterGroupsParameterGroupParameterOptionArrayOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupParameterOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupsParameterGroupParameterOptionArrayOutput)
}

type ParameterGroupsParameterGroupParameterOptionOutput struct{ *pulumi.OutputState }

func (ParameterGroupsParameterGroupParameterOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupsParameterGroupParameterOption)(nil)).Elem()
}

func (o ParameterGroupsParameterGroupParameterOptionOutput) ToParameterGroupsParameterGroupParameterOptionOutput() ParameterGroupsParameterGroupParameterOptionOutput {
	return o
}

func (o ParameterGroupsParameterGroupParameterOptionOutput) ToParameterGroupsParameterGroupParameterOptionOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupParameterOptionOutput {
	return o
}

// The description the Optional parameters.
func (o ParameterGroupsParameterGroupParameterOptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameterOption) string { return v.Description }).(pulumi.StringOutput)
}

// Optional selector type parameters.
func (o ParameterGroupsParameterGroupParameterOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsParameterGroupParameterOption) string { return v.Value }).(pulumi.StringOutput)
}

type ParameterGroupsParameterGroupParameterOptionArrayOutput struct{ *pulumi.OutputState }

func (ParameterGroupsParameterGroupParameterOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupsParameterGroupParameterOption)(nil)).Elem()
}

func (o ParameterGroupsParameterGroupParameterOptionArrayOutput) ToParameterGroupsParameterGroupParameterOptionArrayOutput() ParameterGroupsParameterGroupParameterOptionArrayOutput {
	return o
}

func (o ParameterGroupsParameterGroupParameterOptionArrayOutput) ToParameterGroupsParameterGroupParameterOptionArrayOutputWithContext(ctx context.Context) ParameterGroupsParameterGroupParameterOptionArrayOutput {
	return o
}

func (o ParameterGroupsParameterGroupParameterOptionArrayOutput) Index(i pulumi.IntInput) ParameterGroupsParameterGroupParameterOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterGroupsParameterGroupParameterOption {
		return vs[0].([]ParameterGroupsParameterGroupParameterOption)[vs[1].(int)]
	}).(ParameterGroupsParameterGroupParameterOptionOutput)
}

type PitrTimeWindowsPeriod struct {
	// Recoverable end time (UTC time) supported when restoring data by point in time.
	EndTime string `pulumi:"endTime"`
	// The instance id.
	InstanceId string `pulumi:"instanceId"`
	// The recoverable start time (in UTC time) supported when restoring data by point in time.
	StartTime string `pulumi:"startTime"`
}

// PitrTimeWindowsPeriodInput is an input type that accepts PitrTimeWindowsPeriodArgs and PitrTimeWindowsPeriodOutput values.
// You can construct a concrete instance of `PitrTimeWindowsPeriodInput` via:
//
//	PitrTimeWindowsPeriodArgs{...}
type PitrTimeWindowsPeriodInput interface {
	pulumi.Input

	ToPitrTimeWindowsPeriodOutput() PitrTimeWindowsPeriodOutput
	ToPitrTimeWindowsPeriodOutputWithContext(context.Context) PitrTimeWindowsPeriodOutput
}

type PitrTimeWindowsPeriodArgs struct {
	// Recoverable end time (UTC time) supported when restoring data by point in time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The recoverable start time (in UTC time) supported when restoring data by point in time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (PitrTimeWindowsPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PitrTimeWindowsPeriod)(nil)).Elem()
}

func (i PitrTimeWindowsPeriodArgs) ToPitrTimeWindowsPeriodOutput() PitrTimeWindowsPeriodOutput {
	return i.ToPitrTimeWindowsPeriodOutputWithContext(context.Background())
}

func (i PitrTimeWindowsPeriodArgs) ToPitrTimeWindowsPeriodOutputWithContext(ctx context.Context) PitrTimeWindowsPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PitrTimeWindowsPeriodOutput)
}

// PitrTimeWindowsPeriodArrayInput is an input type that accepts PitrTimeWindowsPeriodArray and PitrTimeWindowsPeriodArrayOutput values.
// You can construct a concrete instance of `PitrTimeWindowsPeriodArrayInput` via:
//
//	PitrTimeWindowsPeriodArray{ PitrTimeWindowsPeriodArgs{...} }
type PitrTimeWindowsPeriodArrayInput interface {
	pulumi.Input

	ToPitrTimeWindowsPeriodArrayOutput() PitrTimeWindowsPeriodArrayOutput
	ToPitrTimeWindowsPeriodArrayOutputWithContext(context.Context) PitrTimeWindowsPeriodArrayOutput
}

type PitrTimeWindowsPeriodArray []PitrTimeWindowsPeriodInput

func (PitrTimeWindowsPeriodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PitrTimeWindowsPeriod)(nil)).Elem()
}

func (i PitrTimeWindowsPeriodArray) ToPitrTimeWindowsPeriodArrayOutput() PitrTimeWindowsPeriodArrayOutput {
	return i.ToPitrTimeWindowsPeriodArrayOutputWithContext(context.Background())
}

func (i PitrTimeWindowsPeriodArray) ToPitrTimeWindowsPeriodArrayOutputWithContext(ctx context.Context) PitrTimeWindowsPeriodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PitrTimeWindowsPeriodArrayOutput)
}

type PitrTimeWindowsPeriodOutput struct{ *pulumi.OutputState }

func (PitrTimeWindowsPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PitrTimeWindowsPeriod)(nil)).Elem()
}

func (o PitrTimeWindowsPeriodOutput) ToPitrTimeWindowsPeriodOutput() PitrTimeWindowsPeriodOutput {
	return o
}

func (o PitrTimeWindowsPeriodOutput) ToPitrTimeWindowsPeriodOutputWithContext(ctx context.Context) PitrTimeWindowsPeriodOutput {
	return o
}

// Recoverable end time (UTC time) supported when restoring data by point in time.
func (o PitrTimeWindowsPeriodOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v PitrTimeWindowsPeriod) string { return v.EndTime }).(pulumi.StringOutput)
}

// The instance id.
func (o PitrTimeWindowsPeriodOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v PitrTimeWindowsPeriod) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The recoverable start time (in UTC time) supported when restoring data by point in time.
func (o PitrTimeWindowsPeriodOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v PitrTimeWindowsPeriod) string { return v.StartTime }).(pulumi.StringOutput)
}

type PitrTimeWindowsPeriodArrayOutput struct{ *pulumi.OutputState }

func (PitrTimeWindowsPeriodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PitrTimeWindowsPeriod)(nil)).Elem()
}

func (o PitrTimeWindowsPeriodArrayOutput) ToPitrTimeWindowsPeriodArrayOutput() PitrTimeWindowsPeriodArrayOutput {
	return o
}

func (o PitrTimeWindowsPeriodArrayOutput) ToPitrTimeWindowsPeriodArrayOutputWithContext(ctx context.Context) PitrTimeWindowsPeriodArrayOutput {
	return o
}

func (o PitrTimeWindowsPeriodArrayOutput) Index(i pulumi.IntInput) PitrTimeWindowsPeriodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PitrTimeWindowsPeriod {
		return vs[0].([]PitrTimeWindowsPeriod)[vs[1].(int)]
	}).(PitrTimeWindowsPeriodOutput)
}

type PlannedEventsPlannedEvent struct {
	// Event operation name.
	ActionName string `pulumi:"actionName"`
	// Whether the current event is allowed to be cancelled for execution.
	CanCancel bool `pulumi:"canCancel"`
	// Whether the execution time of the current event can be changed.
	CanModifyTime bool `pulumi:"canModifyTime"`
	// The ID of Event.
	EventId string `pulumi:"eventId"`
	// The ID of instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The latest execution time at which changes are allowed for the current event.
	MaxEndTime string `pulumi:"maxEndTime"`
	// The latest execution time of the event plan. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
	PlanEndTime string `pulumi:"planEndTime"`
	// The earliest planned execution time of the event. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
	PlanStartTime string `pulumi:"planStartTime"`
	// The status of event.
	Status string `pulumi:"status"`
	// The type of event.
	Type string `pulumi:"type"`
}

// PlannedEventsPlannedEventInput is an input type that accepts PlannedEventsPlannedEventArgs and PlannedEventsPlannedEventOutput values.
// You can construct a concrete instance of `PlannedEventsPlannedEventInput` via:
//
//	PlannedEventsPlannedEventArgs{...}
type PlannedEventsPlannedEventInput interface {
	pulumi.Input

	ToPlannedEventsPlannedEventOutput() PlannedEventsPlannedEventOutput
	ToPlannedEventsPlannedEventOutputWithContext(context.Context) PlannedEventsPlannedEventOutput
}

type PlannedEventsPlannedEventArgs struct {
	// Event operation name.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// Whether the current event is allowed to be cancelled for execution.
	CanCancel pulumi.BoolInput `pulumi:"canCancel"`
	// Whether the execution time of the current event can be changed.
	CanModifyTime pulumi.BoolInput `pulumi:"canModifyTime"`
	// The ID of Event.
	EventId pulumi.StringInput `pulumi:"eventId"`
	// The ID of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The latest execution time at which changes are allowed for the current event.
	MaxEndTime pulumi.StringInput `pulumi:"maxEndTime"`
	// The latest execution time of the event plan. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
	PlanEndTime pulumi.StringInput `pulumi:"planEndTime"`
	// The earliest planned execution time of the event. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
	PlanStartTime pulumi.StringInput `pulumi:"planStartTime"`
	// The status of event.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of event.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PlannedEventsPlannedEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlannedEventsPlannedEvent)(nil)).Elem()
}

func (i PlannedEventsPlannedEventArgs) ToPlannedEventsPlannedEventOutput() PlannedEventsPlannedEventOutput {
	return i.ToPlannedEventsPlannedEventOutputWithContext(context.Background())
}

func (i PlannedEventsPlannedEventArgs) ToPlannedEventsPlannedEventOutputWithContext(ctx context.Context) PlannedEventsPlannedEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlannedEventsPlannedEventOutput)
}

// PlannedEventsPlannedEventArrayInput is an input type that accepts PlannedEventsPlannedEventArray and PlannedEventsPlannedEventArrayOutput values.
// You can construct a concrete instance of `PlannedEventsPlannedEventArrayInput` via:
//
//	PlannedEventsPlannedEventArray{ PlannedEventsPlannedEventArgs{...} }
type PlannedEventsPlannedEventArrayInput interface {
	pulumi.Input

	ToPlannedEventsPlannedEventArrayOutput() PlannedEventsPlannedEventArrayOutput
	ToPlannedEventsPlannedEventArrayOutputWithContext(context.Context) PlannedEventsPlannedEventArrayOutput
}

type PlannedEventsPlannedEventArray []PlannedEventsPlannedEventInput

func (PlannedEventsPlannedEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlannedEventsPlannedEvent)(nil)).Elem()
}

func (i PlannedEventsPlannedEventArray) ToPlannedEventsPlannedEventArrayOutput() PlannedEventsPlannedEventArrayOutput {
	return i.ToPlannedEventsPlannedEventArrayOutputWithContext(context.Background())
}

func (i PlannedEventsPlannedEventArray) ToPlannedEventsPlannedEventArrayOutputWithContext(ctx context.Context) PlannedEventsPlannedEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlannedEventsPlannedEventArrayOutput)
}

type PlannedEventsPlannedEventOutput struct{ *pulumi.OutputState }

func (PlannedEventsPlannedEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlannedEventsPlannedEvent)(nil)).Elem()
}

func (o PlannedEventsPlannedEventOutput) ToPlannedEventsPlannedEventOutput() PlannedEventsPlannedEventOutput {
	return o
}

func (o PlannedEventsPlannedEventOutput) ToPlannedEventsPlannedEventOutputWithContext(ctx context.Context) PlannedEventsPlannedEventOutput {
	return o
}

// Event operation name.
func (o PlannedEventsPlannedEventOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.ActionName }).(pulumi.StringOutput)
}

// Whether the current event is allowed to be cancelled for execution.
func (o PlannedEventsPlannedEventOutput) CanCancel() pulumi.BoolOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) bool { return v.CanCancel }).(pulumi.BoolOutput)
}

// Whether the execution time of the current event can be changed.
func (o PlannedEventsPlannedEventOutput) CanModifyTime() pulumi.BoolOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) bool { return v.CanModifyTime }).(pulumi.BoolOutput)
}

// The ID of Event.
func (o PlannedEventsPlannedEventOutput) EventId() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.EventId }).(pulumi.StringOutput)
}

// The ID of instance.
func (o PlannedEventsPlannedEventOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of instance.
func (o PlannedEventsPlannedEventOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The latest execution time at which changes are allowed for the current event.
func (o PlannedEventsPlannedEventOutput) MaxEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.MaxEndTime }).(pulumi.StringOutput)
}

// The latest execution time of the event plan. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
func (o PlannedEventsPlannedEventOutput) PlanEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.PlanEndTime }).(pulumi.StringOutput)
}

// The earliest planned execution time of the event. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
func (o PlannedEventsPlannedEventOutput) PlanStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.PlanStartTime }).(pulumi.StringOutput)
}

// The status of event.
func (o PlannedEventsPlannedEventOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.Status }).(pulumi.StringOutput)
}

// The type of event.
func (o PlannedEventsPlannedEventOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PlannedEventsPlannedEvent) string { return v.Type }).(pulumi.StringOutput)
}

type PlannedEventsPlannedEventArrayOutput struct{ *pulumi.OutputState }

func (PlannedEventsPlannedEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PlannedEventsPlannedEvent)(nil)).Elem()
}

func (o PlannedEventsPlannedEventArrayOutput) ToPlannedEventsPlannedEventArrayOutput() PlannedEventsPlannedEventArrayOutput {
	return o
}

func (o PlannedEventsPlannedEventArrayOutput) ToPlannedEventsPlannedEventArrayOutputWithContext(ctx context.Context) PlannedEventsPlannedEventArrayOutput {
	return o
}

func (o PlannedEventsPlannedEventArrayOutput) Index(i pulumi.IntInput) PlannedEventsPlannedEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PlannedEventsPlannedEvent {
		return vs[0].([]PlannedEventsPlannedEvent)[vs[1].(int)]
	}).(PlannedEventsPlannedEventOutput)
}

type RegionsRegion struct {
	// Target region info.
	RegionId string `pulumi:"regionId"`
	// The name of region.
	RegionName string `pulumi:"regionName"`
}

// RegionsRegionInput is an input type that accepts RegionsRegionArgs and RegionsRegionOutput values.
// You can construct a concrete instance of `RegionsRegionInput` via:
//
//	RegionsRegionArgs{...}
type RegionsRegionInput interface {
	pulumi.Input

	ToRegionsRegionOutput() RegionsRegionOutput
	ToRegionsRegionOutputWithContext(context.Context) RegionsRegionOutput
}

type RegionsRegionArgs struct {
	// Target region info.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The name of region.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (RegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionsRegion)(nil)).Elem()
}

func (i RegionsRegionArgs) ToRegionsRegionOutput() RegionsRegionOutput {
	return i.ToRegionsRegionOutputWithContext(context.Background())
}

func (i RegionsRegionArgs) ToRegionsRegionOutputWithContext(ctx context.Context) RegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionsRegionOutput)
}

// RegionsRegionArrayInput is an input type that accepts RegionsRegionArray and RegionsRegionArrayOutput values.
// You can construct a concrete instance of `RegionsRegionArrayInput` via:
//
//	RegionsRegionArray{ RegionsRegionArgs{...} }
type RegionsRegionArrayInput interface {
	pulumi.Input

	ToRegionsRegionArrayOutput() RegionsRegionArrayOutput
	ToRegionsRegionArrayOutputWithContext(context.Context) RegionsRegionArrayOutput
}

type RegionsRegionArray []RegionsRegionInput

func (RegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionsRegion)(nil)).Elem()
}

func (i RegionsRegionArray) ToRegionsRegionArrayOutput() RegionsRegionArrayOutput {
	return i.ToRegionsRegionArrayOutputWithContext(context.Background())
}

func (i RegionsRegionArray) ToRegionsRegionArrayOutputWithContext(ctx context.Context) RegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionsRegionArrayOutput)
}

type RegionsRegionOutput struct{ *pulumi.OutputState }

func (RegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionsRegion)(nil)).Elem()
}

func (o RegionsRegionOutput) ToRegionsRegionOutput() RegionsRegionOutput {
	return o
}

func (o RegionsRegionOutput) ToRegionsRegionOutputWithContext(ctx context.Context) RegionsRegionOutput {
	return o
}

// Target region info.
func (o RegionsRegionOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v RegionsRegion) string { return v.RegionId }).(pulumi.StringOutput)
}

// The name of region.
func (o RegionsRegionOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v RegionsRegion) string { return v.RegionName }).(pulumi.StringOutput)
}

type RegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (RegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionsRegion)(nil)).Elem()
}

func (o RegionsRegionArrayOutput) ToRegionsRegionArrayOutput() RegionsRegionArrayOutput {
	return o
}

func (o RegionsRegionArrayOutput) ToRegionsRegionArrayOutputWithContext(ctx context.Context) RegionsRegionArrayOutput {
	return o
}

func (o RegionsRegionArrayOutput) Index(i pulumi.IntInput) RegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionsRegion {
		return vs[0].([]RegionsRegion)[vs[1].(int)]
	}).(RegionsRegionOutput)
}

type ZonesZone struct {
	// The id of the zone.
	Id string `pulumi:"id"`
	// The id of the zone.
	ZoneId string `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName string `pulumi:"zoneName"`
	// The status of the zone.
	ZoneStatus int `pulumi:"zoneStatus"`
}

// ZonesZoneInput is an input type that accepts ZonesZoneArgs and ZonesZoneOutput values.
// You can construct a concrete instance of `ZonesZoneInput` via:
//
//	ZonesZoneArgs{...}
type ZonesZoneInput interface {
	pulumi.Input

	ToZonesZoneOutput() ZonesZoneOutput
	ToZonesZoneOutputWithContext(context.Context) ZonesZoneOutput
}

type ZonesZoneArgs struct {
	// The id of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
	// The status of the zone.
	ZoneStatus pulumi.IntInput `pulumi:"zoneStatus"`
}

func (ZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesZone)(nil)).Elem()
}

func (i ZonesZoneArgs) ToZonesZoneOutput() ZonesZoneOutput {
	return i.ToZonesZoneOutputWithContext(context.Background())
}

func (i ZonesZoneArgs) ToZonesZoneOutputWithContext(ctx context.Context) ZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesZoneOutput)
}

// ZonesZoneArrayInput is an input type that accepts ZonesZoneArray and ZonesZoneArrayOutput values.
// You can construct a concrete instance of `ZonesZoneArrayInput` via:
//
//	ZonesZoneArray{ ZonesZoneArgs{...} }
type ZonesZoneArrayInput interface {
	pulumi.Input

	ToZonesZoneArrayOutput() ZonesZoneArrayOutput
	ToZonesZoneArrayOutputWithContext(context.Context) ZonesZoneArrayOutput
}

type ZonesZoneArray []ZonesZoneInput

func (ZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesZone)(nil)).Elem()
}

func (i ZonesZoneArray) ToZonesZoneArrayOutput() ZonesZoneArrayOutput {
	return i.ToZonesZoneArrayOutputWithContext(context.Background())
}

func (i ZonesZoneArray) ToZonesZoneArrayOutputWithContext(ctx context.Context) ZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesZoneArrayOutput)
}

type ZonesZoneOutput struct{ *pulumi.OutputState }

func (ZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesZone)(nil)).Elem()
}

func (o ZonesZoneOutput) ToZonesZoneOutput() ZonesZoneOutput {
	return o
}

func (o ZonesZoneOutput) ToZonesZoneOutputWithContext(ctx context.Context) ZonesZoneOutput {
	return o
}

// The id of the zone.
func (o ZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the zone.
func (o ZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The name of the zone.
func (o ZonesZoneOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesZone) string { return v.ZoneName }).(pulumi.StringOutput)
}

// The status of the zone.
func (o ZonesZoneOutput) ZoneStatus() pulumi.IntOutput {
	return o.ApplyT(func(v ZonesZone) int { return v.ZoneStatus }).(pulumi.IntOutput)
}

type ZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (ZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesZone)(nil)).Elem()
}

func (o ZonesZoneArrayOutput) ToZonesZoneArrayOutput() ZonesZoneArrayOutput {
	return o
}

func (o ZonesZoneArrayOutput) ToZonesZoneArrayOutputWithContext(ctx context.Context) ZonesZoneArrayOutput {
	return o
}

func (o ZonesZoneArrayOutput) Index(i pulumi.IntInput) ZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZonesZone {
		return vs[0].([]ZonesZone)[vs[1].(int)]
	}).(ZonesZoneOutput)
}

type GetAccountsAccount struct {
	// The name of the redis account.
	AccountName string `pulumi:"accountName"`
	// The description of the redis account.
	Description string `pulumi:"description"`
	// The id of the Redis instance.
	InstanceId string `pulumi:"instanceId"`
	// The role info.
	RoleName string `pulumi:"roleName"`
}

// GetAccountsAccountInput is an input type that accepts GetAccountsAccountArgs and GetAccountsAccountOutput values.
// You can construct a concrete instance of `GetAccountsAccountInput` via:
//
//	GetAccountsAccountArgs{...}
type GetAccountsAccountInput interface {
	pulumi.Input

	ToGetAccountsAccountOutput() GetAccountsAccountOutput
	ToGetAccountsAccountOutputWithContext(context.Context) GetAccountsAccountOutput
}

type GetAccountsAccountArgs struct {
	// The name of the redis account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The description of the redis account.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the Redis instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The role info.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return i.ToGetAccountsAccountOutputWithContext(context.Background())
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountOutput)
}

// GetAccountsAccountArrayInput is an input type that accepts GetAccountsAccountArray and GetAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountArrayInput` via:
//
//	GetAccountsAccountArray{ GetAccountsAccountArgs{...} }
type GetAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput
	ToGetAccountsAccountArrayOutputWithContext(context.Context) GetAccountsAccountArrayOutput
}

type GetAccountsAccountArray []GetAccountsAccountInput

func (GetAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return i.ToGetAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountArrayOutput)
}

type GetAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return o
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return o
}

// The name of the redis account.
func (o GetAccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The description of the redis account.
func (o GetAccountsAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the Redis instance.
func (o GetAccountsAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The role info.
func (o GetAccountsAccountOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccount {
		return vs[0].([]GetAccountsAccount)[vs[1].(int)]
	}).(GetAccountsAccountOutput)
}

type GetAllowListsAllowList struct {
	// The type of the whitelist.
	AllowListCategory string `pulumi:"allowListCategory"`
	// Description of allow list.
	AllowListDesc string `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId string `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum int `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName string `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType string `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists []string `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum int `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances []GetAllowListsAllowListAssociatedInstance `pulumi:"associatedInstances"`
	// The name of the project to which the white list belongs.
	ProjectName string `pulumi:"projectName"`
	// The current whitelist is the list of security group information that has been associated.
	SecurityGroupBindInfos []GetAllowListsAllowListSecurityGroupBindInfo `pulumi:"securityGroupBindInfos"`
}

// GetAllowListsAllowListInput is an input type that accepts GetAllowListsAllowListArgs and GetAllowListsAllowListOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListInput` via:
//
//	GetAllowListsAllowListArgs{...}
type GetAllowListsAllowListInput interface {
	pulumi.Input

	ToGetAllowListsAllowListOutput() GetAllowListsAllowListOutput
	ToGetAllowListsAllowListOutputWithContext(context.Context) GetAllowListsAllowListOutput
}

type GetAllowListsAllowListArgs struct {
	// The type of the whitelist.
	AllowListCategory pulumi.StringInput `pulumi:"allowListCategory"`
	// Description of allow list.
	AllowListDesc pulumi.StringInput `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId pulumi.StringInput `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum pulumi.IntInput `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName pulumi.StringInput `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType pulumi.StringInput `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum pulumi.IntInput `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances GetAllowListsAllowListAssociatedInstanceArrayInput `pulumi:"associatedInstances"`
	// The name of the project to which the white list belongs.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The current whitelist is the list of security group information that has been associated.
	SecurityGroupBindInfos GetAllowListsAllowListSecurityGroupBindInfoArrayInput `pulumi:"securityGroupBindInfos"`
}

func (GetAllowListsAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowList)(nil)).Elem()
}

func (i GetAllowListsAllowListArgs) ToGetAllowListsAllowListOutput() GetAllowListsAllowListOutput {
	return i.ToGetAllowListsAllowListOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListArgs) ToGetAllowListsAllowListOutputWithContext(ctx context.Context) GetAllowListsAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListOutput)
}

// GetAllowListsAllowListArrayInput is an input type that accepts GetAllowListsAllowListArray and GetAllowListsAllowListArrayOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListArrayInput` via:
//
//	GetAllowListsAllowListArray{ GetAllowListsAllowListArgs{...} }
type GetAllowListsAllowListArrayInput interface {
	pulumi.Input

	ToGetAllowListsAllowListArrayOutput() GetAllowListsAllowListArrayOutput
	ToGetAllowListsAllowListArrayOutputWithContext(context.Context) GetAllowListsAllowListArrayOutput
}

type GetAllowListsAllowListArray []GetAllowListsAllowListInput

func (GetAllowListsAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowList)(nil)).Elem()
}

func (i GetAllowListsAllowListArray) ToGetAllowListsAllowListArrayOutput() GetAllowListsAllowListArrayOutput {
	return i.ToGetAllowListsAllowListArrayOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListArray) ToGetAllowListsAllowListArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListArrayOutput)
}

type GetAllowListsAllowListOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowList)(nil)).Elem()
}

func (o GetAllowListsAllowListOutput) ToGetAllowListsAllowListOutput() GetAllowListsAllowListOutput {
	return o
}

func (o GetAllowListsAllowListOutput) ToGetAllowListsAllowListOutputWithContext(ctx context.Context) GetAllowListsAllowListOutput {
	return o
}

// The type of the whitelist.
func (o GetAllowListsAllowListOutput) AllowListCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListCategory }).(pulumi.StringOutput)
}

// Description of allow list.
func (o GetAllowListsAllowListOutput) AllowListDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListDesc }).(pulumi.StringOutput)
}

// Id of allow list.
func (o GetAllowListsAllowListOutput) AllowListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListId }).(pulumi.StringOutput)
}

// The IP number of allow list.
func (o GetAllowListsAllowListOutput) AllowListIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) int { return v.AllowListIpNum }).(pulumi.IntOutput)
}

// Name of allow list.
func (o GetAllowListsAllowListOutput) AllowListName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListName }).(pulumi.StringOutput)
}

// Type of allow list.
func (o GetAllowListsAllowListOutput) AllowListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListType }).(pulumi.StringOutput)
}

// Ip list of allow list.
func (o GetAllowListsAllowListOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The number of instance that associated to allow list.
func (o GetAllowListsAllowListOutput) AssociatedInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) int { return v.AssociatedInstanceNum }).(pulumi.IntOutput)
}

// Instances associated by this allow list.
func (o GetAllowListsAllowListOutput) AssociatedInstances() GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) []GetAllowListsAllowListAssociatedInstance {
		return v.AssociatedInstances
	}).(GetAllowListsAllowListAssociatedInstanceArrayOutput)
}

// The name of the project to which the white list belongs.
func (o GetAllowListsAllowListOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The current whitelist is the list of security group information that has been associated.
func (o GetAllowListsAllowListOutput) SecurityGroupBindInfos() GetAllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) []GetAllowListsAllowListSecurityGroupBindInfo {
		return v.SecurityGroupBindInfos
	}).(GetAllowListsAllowListSecurityGroupBindInfoArrayOutput)
}

type GetAllowListsAllowListArrayOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowList)(nil)).Elem()
}

func (o GetAllowListsAllowListArrayOutput) ToGetAllowListsAllowListArrayOutput() GetAllowListsAllowListArrayOutput {
	return o
}

func (o GetAllowListsAllowListArrayOutput) ToGetAllowListsAllowListArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListArrayOutput {
	return o
}

func (o GetAllowListsAllowListArrayOutput) Index(i pulumi.IntInput) GetAllowListsAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAllowListsAllowList {
		return vs[0].([]GetAllowListsAllowList)[vs[1].(int)]
	}).(GetAllowListsAllowListOutput)
}

type GetAllowListsAllowListAssociatedInstance struct {
	// The Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc string `pulumi:"vpc"`
}

// GetAllowListsAllowListAssociatedInstanceInput is an input type that accepts GetAllowListsAllowListAssociatedInstanceArgs and GetAllowListsAllowListAssociatedInstanceOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListAssociatedInstanceInput` via:
//
//	GetAllowListsAllowListAssociatedInstanceArgs{...}
type GetAllowListsAllowListAssociatedInstanceInput interface {
	pulumi.Input

	ToGetAllowListsAllowListAssociatedInstanceOutput() GetAllowListsAllowListAssociatedInstanceOutput
	ToGetAllowListsAllowListAssociatedInstanceOutputWithContext(context.Context) GetAllowListsAllowListAssociatedInstanceOutput
}

type GetAllowListsAllowListAssociatedInstanceArgs struct {
	// The Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetAllowListsAllowListAssociatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (i GetAllowListsAllowListAssociatedInstanceArgs) ToGetAllowListsAllowListAssociatedInstanceOutput() GetAllowListsAllowListAssociatedInstanceOutput {
	return i.ToGetAllowListsAllowListAssociatedInstanceOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListAssociatedInstanceArgs) ToGetAllowListsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) GetAllowListsAllowListAssociatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListAssociatedInstanceOutput)
}

// GetAllowListsAllowListAssociatedInstanceArrayInput is an input type that accepts GetAllowListsAllowListAssociatedInstanceArray and GetAllowListsAllowListAssociatedInstanceArrayOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListAssociatedInstanceArrayInput` via:
//
//	GetAllowListsAllowListAssociatedInstanceArray{ GetAllowListsAllowListAssociatedInstanceArgs{...} }
type GetAllowListsAllowListAssociatedInstanceArrayInput interface {
	pulumi.Input

	ToGetAllowListsAllowListAssociatedInstanceArrayOutput() GetAllowListsAllowListAssociatedInstanceArrayOutput
	ToGetAllowListsAllowListAssociatedInstanceArrayOutputWithContext(context.Context) GetAllowListsAllowListAssociatedInstanceArrayOutput
}

type GetAllowListsAllowListAssociatedInstanceArray []GetAllowListsAllowListAssociatedInstanceInput

func (GetAllowListsAllowListAssociatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (i GetAllowListsAllowListAssociatedInstanceArray) ToGetAllowListsAllowListAssociatedInstanceArrayOutput() GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return i.ToGetAllowListsAllowListAssociatedInstanceArrayOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListAssociatedInstanceArray) ToGetAllowListsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListAssociatedInstanceArrayOutput)
}

type GetAllowListsAllowListAssociatedInstanceOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListAssociatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (o GetAllowListsAllowListAssociatedInstanceOutput) ToGetAllowListsAllowListAssociatedInstanceOutput() GetAllowListsAllowListAssociatedInstanceOutput {
	return o
}

func (o GetAllowListsAllowListAssociatedInstanceOutput) ToGetAllowListsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) GetAllowListsAllowListAssociatedInstanceOutput {
	return o
}

// The Id of instance.
func (o GetAllowListsAllowListAssociatedInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListAssociatedInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o GetAllowListsAllowListAssociatedInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListAssociatedInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Id of virtual private cloud.
func (o GetAllowListsAllowListAssociatedInstanceOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListAssociatedInstance) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetAllowListsAllowListAssociatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListAssociatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (o GetAllowListsAllowListAssociatedInstanceArrayOutput) ToGetAllowListsAllowListAssociatedInstanceArrayOutput() GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o GetAllowListsAllowListAssociatedInstanceArrayOutput) ToGetAllowListsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o GetAllowListsAllowListAssociatedInstanceArrayOutput) Index(i pulumi.IntInput) GetAllowListsAllowListAssociatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAllowListsAllowListAssociatedInstance {
		return vs[0].([]GetAllowListsAllowListAssociatedInstance)[vs[1].(int)]
	}).(GetAllowListsAllowListAssociatedInstanceOutput)
}

type GetAllowListsAllowListSecurityGroupBindInfo struct {
	// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
	BindMode string `pulumi:"bindMode"`
	// The list of ips in the associated security group has been linked.
	IpLists []string `pulumi:"ipLists"`
	// The associated security group ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The name of the associated security group.
	SecurityGroupName string `pulumi:"securityGroupName"`
}

// GetAllowListsAllowListSecurityGroupBindInfoInput is an input type that accepts GetAllowListsAllowListSecurityGroupBindInfoArgs and GetAllowListsAllowListSecurityGroupBindInfoOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListSecurityGroupBindInfoInput` via:
//
//	GetAllowListsAllowListSecurityGroupBindInfoArgs{...}
type GetAllowListsAllowListSecurityGroupBindInfoInput interface {
	pulumi.Input

	ToGetAllowListsAllowListSecurityGroupBindInfoOutput() GetAllowListsAllowListSecurityGroupBindInfoOutput
	ToGetAllowListsAllowListSecurityGroupBindInfoOutputWithContext(context.Context) GetAllowListsAllowListSecurityGroupBindInfoOutput
}

type GetAllowListsAllowListSecurityGroupBindInfoArgs struct {
	// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
	BindMode pulumi.StringInput `pulumi:"bindMode"`
	// The list of ips in the associated security group has been linked.
	IpLists pulumi.StringArrayInput `pulumi:"ipLists"`
	// The associated security group ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The name of the associated security group.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
}

func (GetAllowListsAllowListSecurityGroupBindInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (i GetAllowListsAllowListSecurityGroupBindInfoArgs) ToGetAllowListsAllowListSecurityGroupBindInfoOutput() GetAllowListsAllowListSecurityGroupBindInfoOutput {
	return i.ToGetAllowListsAllowListSecurityGroupBindInfoOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListSecurityGroupBindInfoArgs) ToGetAllowListsAllowListSecurityGroupBindInfoOutputWithContext(ctx context.Context) GetAllowListsAllowListSecurityGroupBindInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListSecurityGroupBindInfoOutput)
}

// GetAllowListsAllowListSecurityGroupBindInfoArrayInput is an input type that accepts GetAllowListsAllowListSecurityGroupBindInfoArray and GetAllowListsAllowListSecurityGroupBindInfoArrayOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListSecurityGroupBindInfoArrayInput` via:
//
//	GetAllowListsAllowListSecurityGroupBindInfoArray{ GetAllowListsAllowListSecurityGroupBindInfoArgs{...} }
type GetAllowListsAllowListSecurityGroupBindInfoArrayInput interface {
	pulumi.Input

	ToGetAllowListsAllowListSecurityGroupBindInfoArrayOutput() GetAllowListsAllowListSecurityGroupBindInfoArrayOutput
	ToGetAllowListsAllowListSecurityGroupBindInfoArrayOutputWithContext(context.Context) GetAllowListsAllowListSecurityGroupBindInfoArrayOutput
}

type GetAllowListsAllowListSecurityGroupBindInfoArray []GetAllowListsAllowListSecurityGroupBindInfoInput

func (GetAllowListsAllowListSecurityGroupBindInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (i GetAllowListsAllowListSecurityGroupBindInfoArray) ToGetAllowListsAllowListSecurityGroupBindInfoArrayOutput() GetAllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return i.ToGetAllowListsAllowListSecurityGroupBindInfoArrayOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListSecurityGroupBindInfoArray) ToGetAllowListsAllowListSecurityGroupBindInfoArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListSecurityGroupBindInfoArrayOutput)
}

type GetAllowListsAllowListSecurityGroupBindInfoOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListSecurityGroupBindInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (o GetAllowListsAllowListSecurityGroupBindInfoOutput) ToGetAllowListsAllowListSecurityGroupBindInfoOutput() GetAllowListsAllowListSecurityGroupBindInfoOutput {
	return o
}

func (o GetAllowListsAllowListSecurityGroupBindInfoOutput) ToGetAllowListsAllowListSecurityGroupBindInfoOutputWithContext(ctx context.Context) GetAllowListsAllowListSecurityGroupBindInfoOutput {
	return o
}

// Security group association mode. The value range is as follows: IngressDirectionIp: The input direction IP, which is the IP involved in the TCP protocol and ALL protocol in the source address of the secure group input direction to access the database. If the source address is configured as a secure group, it will be ignored. AssociateEcsIp: Associate ECS IP, which allows cloud servers within the security group to access the database. Currently, only the IP information of the main network card is supported for import.
func (o GetAllowListsAllowListSecurityGroupBindInfoOutput) BindMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListSecurityGroupBindInfo) string { return v.BindMode }).(pulumi.StringOutput)
}

// The list of ips in the associated security group has been linked.
func (o GetAllowListsAllowListSecurityGroupBindInfoOutput) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAllowListsAllowListSecurityGroupBindInfo) []string { return v.IpLists }).(pulumi.StringArrayOutput)
}

// The associated security group ID.
func (o GetAllowListsAllowListSecurityGroupBindInfoOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListSecurityGroupBindInfo) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The name of the associated security group.
func (o GetAllowListsAllowListSecurityGroupBindInfoOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListSecurityGroupBindInfo) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

type GetAllowListsAllowListSecurityGroupBindInfoArrayOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListSecurityGroupBindInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowListSecurityGroupBindInfo)(nil)).Elem()
}

func (o GetAllowListsAllowListSecurityGroupBindInfoArrayOutput) ToGetAllowListsAllowListSecurityGroupBindInfoArrayOutput() GetAllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return o
}

func (o GetAllowListsAllowListSecurityGroupBindInfoArrayOutput) ToGetAllowListsAllowListSecurityGroupBindInfoArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListSecurityGroupBindInfoArrayOutput {
	return o
}

func (o GetAllowListsAllowListSecurityGroupBindInfoArrayOutput) Index(i pulumi.IntInput) GetAllowListsAllowListSecurityGroupBindInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAllowListsAllowListSecurityGroupBindInfo {
		return vs[0].([]GetAllowListsAllowListSecurityGroupBindInfo)[vs[1].(int)]
	}).(GetAllowListsAllowListSecurityGroupBindInfoOutput)
}

type GetBackupsBackup struct {
	// The download address information of the backup file to which the current backup point belongs.
	BackupPointDownloadUrls []GetBackupsBackupBackupPointDownloadUrl `pulumi:"backupPointDownloadUrls"`
	// The id of backup point.
	BackupPointId string `pulumi:"backupPointId"`
	// Backup strategy.
	BackupStrategy string `pulumi:"backupStrategy"`
	// Backup type.
	BackupType string `pulumi:"backupType"`
	// Query end time.
	EndTime string `pulumi:"endTime"`
	// (**Deprecated**) Replaced by instance_info. Information of instance.
	//
	// Deprecated: Replaced by instance_info.
	InstanceDetails []GetBackupsBackupInstanceDetail `pulumi:"instanceDetails"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Information of instance.
	InstanceInfos []GetBackupsBackupInstanceInfo `pulumi:"instanceInfos"`
	// Back up the project to which it belongs.
	ProjectName string `pulumi:"projectName"`
	// Size in MiB.
	Size int `pulumi:"size"`
	// Query start time.
	StartTime string `pulumi:"startTime"`
	// Status of backup (Creating/Available/Unavailable/Deleting).
	Status string `pulumi:"status"`
	// Backup retention days.
	Ttl int `pulumi:"ttl"`
}

// GetBackupsBackupInput is an input type that accepts GetBackupsBackupArgs and GetBackupsBackupOutput values.
// You can construct a concrete instance of `GetBackupsBackupInput` via:
//
//	GetBackupsBackupArgs{...}
type GetBackupsBackupInput interface {
	pulumi.Input

	ToGetBackupsBackupOutput() GetBackupsBackupOutput
	ToGetBackupsBackupOutputWithContext(context.Context) GetBackupsBackupOutput
}

type GetBackupsBackupArgs struct {
	// The download address information of the backup file to which the current backup point belongs.
	BackupPointDownloadUrls GetBackupsBackupBackupPointDownloadUrlArrayInput `pulumi:"backupPointDownloadUrls"`
	// The id of backup point.
	BackupPointId pulumi.StringInput `pulumi:"backupPointId"`
	// Backup strategy.
	BackupStrategy pulumi.StringInput `pulumi:"backupStrategy"`
	// Backup type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// Query end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// (**Deprecated**) Replaced by instance_info. Information of instance.
	//
	// Deprecated: Replaced by instance_info.
	InstanceDetails GetBackupsBackupInstanceDetailArrayInput `pulumi:"instanceDetails"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Information of instance.
	InstanceInfos GetBackupsBackupInstanceInfoArrayInput `pulumi:"instanceInfos"`
	// Back up the project to which it belongs.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Size in MiB.
	Size pulumi.IntInput `pulumi:"size"`
	// Query start time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Status of backup (Creating/Available/Unavailable/Deleting).
	Status pulumi.StringInput `pulumi:"status"`
	// Backup retention days.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackup)(nil)).Elem()
}

func (i GetBackupsBackupArgs) ToGetBackupsBackupOutput() GetBackupsBackupOutput {
	return i.ToGetBackupsBackupOutputWithContext(context.Background())
}

func (i GetBackupsBackupArgs) ToGetBackupsBackupOutputWithContext(ctx context.Context) GetBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupOutput)
}

// GetBackupsBackupArrayInput is an input type that accepts GetBackupsBackupArray and GetBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupArrayInput` via:
//
//	GetBackupsBackupArray{ GetBackupsBackupArgs{...} }
type GetBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput
	ToGetBackupsBackupArrayOutputWithContext(context.Context) GetBackupsBackupArrayOutput
}

type GetBackupsBackupArray []GetBackupsBackupInput

func (GetBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackup)(nil)).Elem()
}

func (i GetBackupsBackupArray) ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput {
	return i.ToGetBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupArray) ToGetBackupsBackupArrayOutputWithContext(ctx context.Context) GetBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupArrayOutput)
}

type GetBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackup)(nil)).Elem()
}

func (o GetBackupsBackupOutput) ToGetBackupsBackupOutput() GetBackupsBackupOutput {
	return o
}

func (o GetBackupsBackupOutput) ToGetBackupsBackupOutputWithContext(ctx context.Context) GetBackupsBackupOutput {
	return o
}

// The download address information of the backup file to which the current backup point belongs.
func (o GetBackupsBackupOutput) BackupPointDownloadUrls() GetBackupsBackupBackupPointDownloadUrlArrayOutput {
	return o.ApplyT(func(v GetBackupsBackup) []GetBackupsBackupBackupPointDownloadUrl { return v.BackupPointDownloadUrls }).(GetBackupsBackupBackupPointDownloadUrlArrayOutput)
}

// The id of backup point.
func (o GetBackupsBackupOutput) BackupPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupPointId }).(pulumi.StringOutput)
}

// Backup strategy.
func (o GetBackupsBackupOutput) BackupStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupStrategy }).(pulumi.StringOutput)
}

// Backup type.
func (o GetBackupsBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupType }).(pulumi.StringOutput)
}

// Query end time.
func (o GetBackupsBackupOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.EndTime }).(pulumi.StringOutput)
}

// (**Deprecated**) Replaced by instance_info. Information of instance.
//
// Deprecated: Replaced by instance_info.
func (o GetBackupsBackupOutput) InstanceDetails() GetBackupsBackupInstanceDetailArrayOutput {
	return o.ApplyT(func(v GetBackupsBackup) []GetBackupsBackupInstanceDetail { return v.InstanceDetails }).(GetBackupsBackupInstanceDetailArrayOutput)
}

// Id of instance.
func (o GetBackupsBackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Information of instance.
func (o GetBackupsBackupOutput) InstanceInfos() GetBackupsBackupInstanceInfoArrayOutput {
	return o.ApplyT(func(v GetBackupsBackup) []GetBackupsBackupInstanceInfo { return v.InstanceInfos }).(GetBackupsBackupInstanceInfoArrayOutput)
}

// Back up the project to which it belongs.
func (o GetBackupsBackupOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Size in MiB.
func (o GetBackupsBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackup) int { return v.Size }).(pulumi.IntOutput)
}

// Query start time.
func (o GetBackupsBackupOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.StartTime }).(pulumi.StringOutput)
}

// Status of backup (Creating/Available/Unavailable/Deleting).
func (o GetBackupsBackupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.Status }).(pulumi.StringOutput)
}

// Backup retention days.
func (o GetBackupsBackupOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackup) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackup)(nil)).Elem()
}

func (o GetBackupsBackupArrayOutput) ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput {
	return o
}

func (o GetBackupsBackupArrayOutput) ToGetBackupsBackupArrayOutputWithContext(ctx context.Context) GetBackupsBackupArrayOutput {
	return o
}

func (o GetBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackup {
		return vs[0].([]GetBackupsBackup)[vs[1].(int)]
	}).(GetBackupsBackupOutput)
}

type GetBackupsBackupBackupPointDownloadUrl struct {
	// The private network download address for RDB files.
	PrivateDownloadUrl string `pulumi:"privateDownloadUrl"`
	// The public network download address for RDB files.
	PublicDownloadUrl string `pulumi:"publicDownloadUrl"`
	// RDB file size, unit: Byte.
	RdbFileSize int `pulumi:"rdbFileSize"`
	// The shard ID where the RDB file is located.
	ShardId string `pulumi:"shardId"`
}

// GetBackupsBackupBackupPointDownloadUrlInput is an input type that accepts GetBackupsBackupBackupPointDownloadUrlArgs and GetBackupsBackupBackupPointDownloadUrlOutput values.
// You can construct a concrete instance of `GetBackupsBackupBackupPointDownloadUrlInput` via:
//
//	GetBackupsBackupBackupPointDownloadUrlArgs{...}
type GetBackupsBackupBackupPointDownloadUrlInput interface {
	pulumi.Input

	ToGetBackupsBackupBackupPointDownloadUrlOutput() GetBackupsBackupBackupPointDownloadUrlOutput
	ToGetBackupsBackupBackupPointDownloadUrlOutputWithContext(context.Context) GetBackupsBackupBackupPointDownloadUrlOutput
}

type GetBackupsBackupBackupPointDownloadUrlArgs struct {
	// The private network download address for RDB files.
	PrivateDownloadUrl pulumi.StringInput `pulumi:"privateDownloadUrl"`
	// The public network download address for RDB files.
	PublicDownloadUrl pulumi.StringInput `pulumi:"publicDownloadUrl"`
	// RDB file size, unit: Byte.
	RdbFileSize pulumi.IntInput `pulumi:"rdbFileSize"`
	// The shard ID where the RDB file is located.
	ShardId pulumi.StringInput `pulumi:"shardId"`
}

func (GetBackupsBackupBackupPointDownloadUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupBackupPointDownloadUrl)(nil)).Elem()
}

func (i GetBackupsBackupBackupPointDownloadUrlArgs) ToGetBackupsBackupBackupPointDownloadUrlOutput() GetBackupsBackupBackupPointDownloadUrlOutput {
	return i.ToGetBackupsBackupBackupPointDownloadUrlOutputWithContext(context.Background())
}

func (i GetBackupsBackupBackupPointDownloadUrlArgs) ToGetBackupsBackupBackupPointDownloadUrlOutputWithContext(ctx context.Context) GetBackupsBackupBackupPointDownloadUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupBackupPointDownloadUrlOutput)
}

// GetBackupsBackupBackupPointDownloadUrlArrayInput is an input type that accepts GetBackupsBackupBackupPointDownloadUrlArray and GetBackupsBackupBackupPointDownloadUrlArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupBackupPointDownloadUrlArrayInput` via:
//
//	GetBackupsBackupBackupPointDownloadUrlArray{ GetBackupsBackupBackupPointDownloadUrlArgs{...} }
type GetBackupsBackupBackupPointDownloadUrlArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupBackupPointDownloadUrlArrayOutput() GetBackupsBackupBackupPointDownloadUrlArrayOutput
	ToGetBackupsBackupBackupPointDownloadUrlArrayOutputWithContext(context.Context) GetBackupsBackupBackupPointDownloadUrlArrayOutput
}

type GetBackupsBackupBackupPointDownloadUrlArray []GetBackupsBackupBackupPointDownloadUrlInput

func (GetBackupsBackupBackupPointDownloadUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupBackupPointDownloadUrl)(nil)).Elem()
}

func (i GetBackupsBackupBackupPointDownloadUrlArray) ToGetBackupsBackupBackupPointDownloadUrlArrayOutput() GetBackupsBackupBackupPointDownloadUrlArrayOutput {
	return i.ToGetBackupsBackupBackupPointDownloadUrlArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupBackupPointDownloadUrlArray) ToGetBackupsBackupBackupPointDownloadUrlArrayOutputWithContext(ctx context.Context) GetBackupsBackupBackupPointDownloadUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupBackupPointDownloadUrlArrayOutput)
}

type GetBackupsBackupBackupPointDownloadUrlOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupBackupPointDownloadUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupBackupPointDownloadUrl)(nil)).Elem()
}

func (o GetBackupsBackupBackupPointDownloadUrlOutput) ToGetBackupsBackupBackupPointDownloadUrlOutput() GetBackupsBackupBackupPointDownloadUrlOutput {
	return o
}

func (o GetBackupsBackupBackupPointDownloadUrlOutput) ToGetBackupsBackupBackupPointDownloadUrlOutputWithContext(ctx context.Context) GetBackupsBackupBackupPointDownloadUrlOutput {
	return o
}

// The private network download address for RDB files.
func (o GetBackupsBackupBackupPointDownloadUrlOutput) PrivateDownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPointDownloadUrl) string { return v.PrivateDownloadUrl }).(pulumi.StringOutput)
}

// The public network download address for RDB files.
func (o GetBackupsBackupBackupPointDownloadUrlOutput) PublicDownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPointDownloadUrl) string { return v.PublicDownloadUrl }).(pulumi.StringOutput)
}

// RDB file size, unit: Byte.
func (o GetBackupsBackupBackupPointDownloadUrlOutput) RdbFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPointDownloadUrl) int { return v.RdbFileSize }).(pulumi.IntOutput)
}

// The shard ID where the RDB file is located.
func (o GetBackupsBackupBackupPointDownloadUrlOutput) ShardId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPointDownloadUrl) string { return v.ShardId }).(pulumi.StringOutput)
}

type GetBackupsBackupBackupPointDownloadUrlArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupBackupPointDownloadUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupBackupPointDownloadUrl)(nil)).Elem()
}

func (o GetBackupsBackupBackupPointDownloadUrlArrayOutput) ToGetBackupsBackupBackupPointDownloadUrlArrayOutput() GetBackupsBackupBackupPointDownloadUrlArrayOutput {
	return o
}

func (o GetBackupsBackupBackupPointDownloadUrlArrayOutput) ToGetBackupsBackupBackupPointDownloadUrlArrayOutputWithContext(ctx context.Context) GetBackupsBackupBackupPointDownloadUrlArrayOutput {
	return o
}

func (o GetBackupsBackupBackupPointDownloadUrlArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupBackupPointDownloadUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupBackupPointDownloadUrl {
		return vs[0].([]GetBackupsBackupBackupPointDownloadUrl)[vs[1].(int)]
	}).(GetBackupsBackupBackupPointDownloadUrlOutput)
}

type GetBackupsBackupInstanceDetail struct {
	// Id of account.
	AccountId int `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType string `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType string `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion string `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime string `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType string `pulumi:"networkType"`
	// Back up the project to which it belongs.
	ProjectName string `pulumi:"projectName"`
	// Id of region.
	RegionId string `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas int `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu int `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity int `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount int `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity int `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity int `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos []GetBackupsBackupInstanceDetailVpcInfo `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds []string `pulumi:"zoneIds"`
}

// GetBackupsBackupInstanceDetailInput is an input type that accepts GetBackupsBackupInstanceDetailArgs and GetBackupsBackupInstanceDetailOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceDetailInput` via:
//
//	GetBackupsBackupInstanceDetailArgs{...}
type GetBackupsBackupInstanceDetailInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceDetailOutput() GetBackupsBackupInstanceDetailOutput
	ToGetBackupsBackupInstanceDetailOutputWithContext(context.Context) GetBackupsBackupInstanceDetailOutput
}

type GetBackupsBackupInstanceDetailArgs struct {
	// Id of account.
	AccountId pulumi.IntInput `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType pulumi.StringInput `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Back up the project to which it belongs.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Id of region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas pulumi.IntInput `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu pulumi.IntInput `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity pulumi.IntInput `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount pulumi.IntInput `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity pulumi.IntInput `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity pulumi.IntInput `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos GetBackupsBackupInstanceDetailVpcInfoArrayInput `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (GetBackupsBackupInstanceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceDetail)(nil)).Elem()
}

func (i GetBackupsBackupInstanceDetailArgs) ToGetBackupsBackupInstanceDetailOutput() GetBackupsBackupInstanceDetailOutput {
	return i.ToGetBackupsBackupInstanceDetailOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceDetailArgs) ToGetBackupsBackupInstanceDetailOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceDetailOutput)
}

// GetBackupsBackupInstanceDetailArrayInput is an input type that accepts GetBackupsBackupInstanceDetailArray and GetBackupsBackupInstanceDetailArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceDetailArrayInput` via:
//
//	GetBackupsBackupInstanceDetailArray{ GetBackupsBackupInstanceDetailArgs{...} }
type GetBackupsBackupInstanceDetailArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceDetailArrayOutput() GetBackupsBackupInstanceDetailArrayOutput
	ToGetBackupsBackupInstanceDetailArrayOutputWithContext(context.Context) GetBackupsBackupInstanceDetailArrayOutput
}

type GetBackupsBackupInstanceDetailArray []GetBackupsBackupInstanceDetailInput

func (GetBackupsBackupInstanceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceDetail)(nil)).Elem()
}

func (i GetBackupsBackupInstanceDetailArray) ToGetBackupsBackupInstanceDetailArrayOutput() GetBackupsBackupInstanceDetailArrayOutput {
	return i.ToGetBackupsBackupInstanceDetailArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceDetailArray) ToGetBackupsBackupInstanceDetailArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceDetailArrayOutput)
}

type GetBackupsBackupInstanceDetailOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceDetail)(nil)).Elem()
}

func (o GetBackupsBackupInstanceDetailOutput) ToGetBackupsBackupInstanceDetailOutput() GetBackupsBackupInstanceDetailOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailOutput) ToGetBackupsBackupInstanceDetailOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailOutput {
	return o
}

// Id of account.
func (o GetBackupsBackupInstanceDetailOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.AccountId }).(pulumi.IntOutput)
}

// Arch type of instance(Standard/Cluster).
func (o GetBackupsBackupInstanceDetailOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.ArchType }).(pulumi.StringOutput)
}

// Charge type of instance(Postpaid/Prepaid).
func (o GetBackupsBackupInstanceDetailOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Engine version of instance.
func (o GetBackupsBackupInstanceDetailOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Expired time of instance.
func (o GetBackupsBackupInstanceDetailOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Id of instance.
func (o GetBackupsBackupInstanceDetailOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o GetBackupsBackupInstanceDetailOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maintainable period (in UTC) of the instance.
func (o GetBackupsBackupInstanceDetailOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// Network type of instance.
func (o GetBackupsBackupInstanceDetailOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Back up the project to which it belongs.
func (o GetBackupsBackupInstanceDetailOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Id of region.
func (o GetBackupsBackupInstanceDetailOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.RegionId }).(pulumi.StringOutput)
}

// Count of replica in which shard.
func (o GetBackupsBackupInstanceDetailOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.Replicas }).(pulumi.IntOutput)
}

// Count of cpu cores of instance.
func (o GetBackupsBackupInstanceDetailOutput) ServerCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.ServerCpu }).(pulumi.IntOutput)
}

// Capacity of shard.
func (o GetBackupsBackupInstanceDetailOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

// Count of shard.
func (o GetBackupsBackupInstanceDetailOutput) ShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.ShardCount }).(pulumi.IntOutput)
}

// Total capacity of instance.
func (o GetBackupsBackupInstanceDetailOutput) TotalCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.TotalCapacity }).(pulumi.IntOutput)
}

// Capacity used of this instance.
func (o GetBackupsBackupInstanceDetailOutput) UsedCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.UsedCapacity }).(pulumi.IntOutput)
}

// Information of vpc.
func (o GetBackupsBackupInstanceDetailOutput) VpcInfos() GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) []GetBackupsBackupInstanceDetailVpcInfo { return v.VpcInfos }).(GetBackupsBackupInstanceDetailVpcInfoArrayOutput)
}

// List of id of zone.
func (o GetBackupsBackupInstanceDetailOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type GetBackupsBackupInstanceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceDetail)(nil)).Elem()
}

func (o GetBackupsBackupInstanceDetailArrayOutput) ToGetBackupsBackupInstanceDetailArrayOutput() GetBackupsBackupInstanceDetailArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailArrayOutput) ToGetBackupsBackupInstanceDetailArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupInstanceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupInstanceDetail {
		return vs[0].([]GetBackupsBackupInstanceDetail)[vs[1].(int)]
	}).(GetBackupsBackupInstanceDetailOutput)
}

type GetBackupsBackupInstanceDetailVpcInfo struct {
	// Id of vpc.
	Id string `pulumi:"id"`
	// Name of vpc.
	Name string `pulumi:"name"`
}

// GetBackupsBackupInstanceDetailVpcInfoInput is an input type that accepts GetBackupsBackupInstanceDetailVpcInfoArgs and GetBackupsBackupInstanceDetailVpcInfoOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceDetailVpcInfoInput` via:
//
//	GetBackupsBackupInstanceDetailVpcInfoArgs{...}
type GetBackupsBackupInstanceDetailVpcInfoInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceDetailVpcInfoOutput() GetBackupsBackupInstanceDetailVpcInfoOutput
	ToGetBackupsBackupInstanceDetailVpcInfoOutputWithContext(context.Context) GetBackupsBackupInstanceDetailVpcInfoOutput
}

type GetBackupsBackupInstanceDetailVpcInfoArgs struct {
	// Id of vpc.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of vpc.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBackupsBackupInstanceDetailVpcInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i GetBackupsBackupInstanceDetailVpcInfoArgs) ToGetBackupsBackupInstanceDetailVpcInfoOutput() GetBackupsBackupInstanceDetailVpcInfoOutput {
	return i.ToGetBackupsBackupInstanceDetailVpcInfoOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceDetailVpcInfoArgs) ToGetBackupsBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailVpcInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceDetailVpcInfoOutput)
}

// GetBackupsBackupInstanceDetailVpcInfoArrayInput is an input type that accepts GetBackupsBackupInstanceDetailVpcInfoArray and GetBackupsBackupInstanceDetailVpcInfoArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceDetailVpcInfoArrayInput` via:
//
//	GetBackupsBackupInstanceDetailVpcInfoArray{ GetBackupsBackupInstanceDetailVpcInfoArgs{...} }
type GetBackupsBackupInstanceDetailVpcInfoArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceDetailVpcInfoArrayOutput() GetBackupsBackupInstanceDetailVpcInfoArrayOutput
	ToGetBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Context) GetBackupsBackupInstanceDetailVpcInfoArrayOutput
}

type GetBackupsBackupInstanceDetailVpcInfoArray []GetBackupsBackupInstanceDetailVpcInfoInput

func (GetBackupsBackupInstanceDetailVpcInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i GetBackupsBackupInstanceDetailVpcInfoArray) ToGetBackupsBackupInstanceDetailVpcInfoArrayOutput() GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return i.ToGetBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceDetailVpcInfoArray) ToGetBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceDetailVpcInfoArrayOutput)
}

type GetBackupsBackupInstanceDetailVpcInfoOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceDetailVpcInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o GetBackupsBackupInstanceDetailVpcInfoOutput) ToGetBackupsBackupInstanceDetailVpcInfoOutput() GetBackupsBackupInstanceDetailVpcInfoOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailVpcInfoOutput) ToGetBackupsBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailVpcInfoOutput {
	return o
}

// Id of vpc.
func (o GetBackupsBackupInstanceDetailVpcInfoOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetailVpcInfo) string { return v.Id }).(pulumi.StringOutput)
}

// Name of vpc.
func (o GetBackupsBackupInstanceDetailVpcInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetailVpcInfo) string { return v.Name }).(pulumi.StringOutput)
}

type GetBackupsBackupInstanceDetailVpcInfoArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceDetailVpcInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o GetBackupsBackupInstanceDetailVpcInfoArrayOutput) ToGetBackupsBackupInstanceDetailVpcInfoArrayOutput() GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailVpcInfoArrayOutput) ToGetBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailVpcInfoArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupInstanceDetailVpcInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupInstanceDetailVpcInfo {
		return vs[0].([]GetBackupsBackupInstanceDetailVpcInfo)[vs[1].(int)]
	}).(GetBackupsBackupInstanceDetailVpcInfoOutput)
}

type GetBackupsBackupInstanceInfo struct {
	// Id of account.
	AccountId int `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType string `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType string `pulumi:"chargeType"`
	// The status of the deletion protection function of the instance.
	DeletionProtection string `pulumi:"deletionProtection"`
	// Engine version of instance.
	EngineVersion string `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime string `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType string `pulumi:"networkType"`
	// Id of region.
	RegionId string `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas int `pulumi:"replicas"`
	// Capacity of shard.
	ShardCapacity int `pulumi:"shardCapacity"`
	// The number of shards in the instance.
	ShardNumber int `pulumi:"shardNumber"`
	// Total capacity of instance.
	TotalCapacity int `pulumi:"totalCapacity"`
	// The private network ID of the instance.
	VpcId string `pulumi:"vpcId"`
	// List of id of zone.
	ZoneIds []string `pulumi:"zoneIds"`
}

// GetBackupsBackupInstanceInfoInput is an input type that accepts GetBackupsBackupInstanceInfoArgs and GetBackupsBackupInstanceInfoOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceInfoInput` via:
//
//	GetBackupsBackupInstanceInfoArgs{...}
type GetBackupsBackupInstanceInfoInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceInfoOutput() GetBackupsBackupInstanceInfoOutput
	ToGetBackupsBackupInstanceInfoOutputWithContext(context.Context) GetBackupsBackupInstanceInfoOutput
}

type GetBackupsBackupInstanceInfoArgs struct {
	// Id of account.
	AccountId pulumi.IntInput `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType pulumi.StringInput `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The status of the deletion protection function of the instance.
	DeletionProtection pulumi.StringInput `pulumi:"deletionProtection"`
	// Engine version of instance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Id of region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas pulumi.IntInput `pulumi:"replicas"`
	// Capacity of shard.
	ShardCapacity pulumi.IntInput `pulumi:"shardCapacity"`
	// The number of shards in the instance.
	ShardNumber pulumi.IntInput `pulumi:"shardNumber"`
	// Total capacity of instance.
	TotalCapacity pulumi.IntInput `pulumi:"totalCapacity"`
	// The private network ID of the instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// List of id of zone.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (GetBackupsBackupInstanceInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceInfo)(nil)).Elem()
}

func (i GetBackupsBackupInstanceInfoArgs) ToGetBackupsBackupInstanceInfoOutput() GetBackupsBackupInstanceInfoOutput {
	return i.ToGetBackupsBackupInstanceInfoOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceInfoArgs) ToGetBackupsBackupInstanceInfoOutputWithContext(ctx context.Context) GetBackupsBackupInstanceInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceInfoOutput)
}

// GetBackupsBackupInstanceInfoArrayInput is an input type that accepts GetBackupsBackupInstanceInfoArray and GetBackupsBackupInstanceInfoArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceInfoArrayInput` via:
//
//	GetBackupsBackupInstanceInfoArray{ GetBackupsBackupInstanceInfoArgs{...} }
type GetBackupsBackupInstanceInfoArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceInfoArrayOutput() GetBackupsBackupInstanceInfoArrayOutput
	ToGetBackupsBackupInstanceInfoArrayOutputWithContext(context.Context) GetBackupsBackupInstanceInfoArrayOutput
}

type GetBackupsBackupInstanceInfoArray []GetBackupsBackupInstanceInfoInput

func (GetBackupsBackupInstanceInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceInfo)(nil)).Elem()
}

func (i GetBackupsBackupInstanceInfoArray) ToGetBackupsBackupInstanceInfoArrayOutput() GetBackupsBackupInstanceInfoArrayOutput {
	return i.ToGetBackupsBackupInstanceInfoArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceInfoArray) ToGetBackupsBackupInstanceInfoArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceInfoArrayOutput)
}

type GetBackupsBackupInstanceInfoOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceInfo)(nil)).Elem()
}

func (o GetBackupsBackupInstanceInfoOutput) ToGetBackupsBackupInstanceInfoOutput() GetBackupsBackupInstanceInfoOutput {
	return o
}

func (o GetBackupsBackupInstanceInfoOutput) ToGetBackupsBackupInstanceInfoOutputWithContext(ctx context.Context) GetBackupsBackupInstanceInfoOutput {
	return o
}

// Id of account.
func (o GetBackupsBackupInstanceInfoOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) int { return v.AccountId }).(pulumi.IntOutput)
}

// Arch type of instance(Standard/Cluster).
func (o GetBackupsBackupInstanceInfoOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.ArchType }).(pulumi.StringOutput)
}

// Charge type of instance(Postpaid/Prepaid).
func (o GetBackupsBackupInstanceInfoOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The status of the deletion protection function of the instance.
func (o GetBackupsBackupInstanceInfoOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// Engine version of instance.
func (o GetBackupsBackupInstanceInfoOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Expired time of instance.
func (o GetBackupsBackupInstanceInfoOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Id of instance.
func (o GetBackupsBackupInstanceInfoOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o GetBackupsBackupInstanceInfoOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maintainable period (in UTC) of the instance.
func (o GetBackupsBackupInstanceInfoOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// Network type of instance.
func (o GetBackupsBackupInstanceInfoOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Id of region.
func (o GetBackupsBackupInstanceInfoOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.RegionId }).(pulumi.StringOutput)
}

// Count of replica in which shard.
func (o GetBackupsBackupInstanceInfoOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) int { return v.Replicas }).(pulumi.IntOutput)
}

// Capacity of shard.
func (o GetBackupsBackupInstanceInfoOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

// The number of shards in the instance.
func (o GetBackupsBackupInstanceInfoOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) int { return v.ShardNumber }).(pulumi.IntOutput)
}

// Total capacity of instance.
func (o GetBackupsBackupInstanceInfoOutput) TotalCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) int { return v.TotalCapacity }).(pulumi.IntOutput)
}

// The private network ID of the instance.
func (o GetBackupsBackupInstanceInfoOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) string { return v.VpcId }).(pulumi.StringOutput)
}

// List of id of zone.
func (o GetBackupsBackupInstanceInfoOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceInfo) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type GetBackupsBackupInstanceInfoArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceInfo)(nil)).Elem()
}

func (o GetBackupsBackupInstanceInfoArrayOutput) ToGetBackupsBackupInstanceInfoArrayOutput() GetBackupsBackupInstanceInfoArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceInfoArrayOutput) ToGetBackupsBackupInstanceInfoArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceInfoArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceInfoArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupInstanceInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupInstanceInfo {
		return vs[0].([]GetBackupsBackupInstanceInfo)[vs[1].(int)]
	}).(GetBackupsBackupInstanceInfoOutput)
}

type GetBigKeysBigKey struct {
	// The name of the database to which the big Key belongs.
	DbName string `pulumi:"dbName"`
	// The name of the big Key.
	KeyInfo string `pulumi:"keyInfo"`
	// Specify the data type used to filter the query results of hot keys.
	KeyType string `pulumi:"keyType"`
	// The number of elements contained in the large Key.
	ValueLen string `pulumi:"valueLen"`
	// The memory usage of large keys, unit: Byte.
	ValueSize string `pulumi:"valueSize"`
}

// GetBigKeysBigKeyInput is an input type that accepts GetBigKeysBigKeyArgs and GetBigKeysBigKeyOutput values.
// You can construct a concrete instance of `GetBigKeysBigKeyInput` via:
//
//	GetBigKeysBigKeyArgs{...}
type GetBigKeysBigKeyInput interface {
	pulumi.Input

	ToGetBigKeysBigKeyOutput() GetBigKeysBigKeyOutput
	ToGetBigKeysBigKeyOutputWithContext(context.Context) GetBigKeysBigKeyOutput
}

type GetBigKeysBigKeyArgs struct {
	// The name of the database to which the big Key belongs.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// The name of the big Key.
	KeyInfo pulumi.StringInput `pulumi:"keyInfo"`
	// Specify the data type used to filter the query results of hot keys.
	KeyType pulumi.StringInput `pulumi:"keyType"`
	// The number of elements contained in the large Key.
	ValueLen pulumi.StringInput `pulumi:"valueLen"`
	// The memory usage of large keys, unit: Byte.
	ValueSize pulumi.StringInput `pulumi:"valueSize"`
}

func (GetBigKeysBigKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBigKeysBigKey)(nil)).Elem()
}

func (i GetBigKeysBigKeyArgs) ToGetBigKeysBigKeyOutput() GetBigKeysBigKeyOutput {
	return i.ToGetBigKeysBigKeyOutputWithContext(context.Background())
}

func (i GetBigKeysBigKeyArgs) ToGetBigKeysBigKeyOutputWithContext(ctx context.Context) GetBigKeysBigKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBigKeysBigKeyOutput)
}

// GetBigKeysBigKeyArrayInput is an input type that accepts GetBigKeysBigKeyArray and GetBigKeysBigKeyArrayOutput values.
// You can construct a concrete instance of `GetBigKeysBigKeyArrayInput` via:
//
//	GetBigKeysBigKeyArray{ GetBigKeysBigKeyArgs{...} }
type GetBigKeysBigKeyArrayInput interface {
	pulumi.Input

	ToGetBigKeysBigKeyArrayOutput() GetBigKeysBigKeyArrayOutput
	ToGetBigKeysBigKeyArrayOutputWithContext(context.Context) GetBigKeysBigKeyArrayOutput
}

type GetBigKeysBigKeyArray []GetBigKeysBigKeyInput

func (GetBigKeysBigKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBigKeysBigKey)(nil)).Elem()
}

func (i GetBigKeysBigKeyArray) ToGetBigKeysBigKeyArrayOutput() GetBigKeysBigKeyArrayOutput {
	return i.ToGetBigKeysBigKeyArrayOutputWithContext(context.Background())
}

func (i GetBigKeysBigKeyArray) ToGetBigKeysBigKeyArrayOutputWithContext(ctx context.Context) GetBigKeysBigKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBigKeysBigKeyArrayOutput)
}

type GetBigKeysBigKeyOutput struct{ *pulumi.OutputState }

func (GetBigKeysBigKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBigKeysBigKey)(nil)).Elem()
}

func (o GetBigKeysBigKeyOutput) ToGetBigKeysBigKeyOutput() GetBigKeysBigKeyOutput {
	return o
}

func (o GetBigKeysBigKeyOutput) ToGetBigKeysBigKeyOutputWithContext(ctx context.Context) GetBigKeysBigKeyOutput {
	return o
}

// The name of the database to which the big Key belongs.
func (o GetBigKeysBigKeyOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigKeysBigKey) string { return v.DbName }).(pulumi.StringOutput)
}

// The name of the big Key.
func (o GetBigKeysBigKeyOutput) KeyInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigKeysBigKey) string { return v.KeyInfo }).(pulumi.StringOutput)
}

// Specify the data type used to filter the query results of hot keys.
func (o GetBigKeysBigKeyOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigKeysBigKey) string { return v.KeyType }).(pulumi.StringOutput)
}

// The number of elements contained in the large Key.
func (o GetBigKeysBigKeyOutput) ValueLen() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigKeysBigKey) string { return v.ValueLen }).(pulumi.StringOutput)
}

// The memory usage of large keys, unit: Byte.
func (o GetBigKeysBigKeyOutput) ValueSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigKeysBigKey) string { return v.ValueSize }).(pulumi.StringOutput)
}

type GetBigKeysBigKeyArrayOutput struct{ *pulumi.OutputState }

func (GetBigKeysBigKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBigKeysBigKey)(nil)).Elem()
}

func (o GetBigKeysBigKeyArrayOutput) ToGetBigKeysBigKeyArrayOutput() GetBigKeysBigKeyArrayOutput {
	return o
}

func (o GetBigKeysBigKeyArrayOutput) ToGetBigKeysBigKeyArrayOutputWithContext(ctx context.Context) GetBigKeysBigKeyArrayOutput {
	return o
}

func (o GetBigKeysBigKeyArrayOutput) Index(i pulumi.IntInput) GetBigKeysBigKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBigKeysBigKey {
		return vs[0].([]GetBigKeysBigKey)[vs[1].(int)]
	}).(GetBigKeysBigKeyOutput)
}

type GetInstanceSpecsInstanceSpec struct {
	// The architecture type of the Redis instance.
	ArchType string `pulumi:"archType"`
	// The type of Redis instance.
	InstanceClass *string `pulumi:"instanceClass"`
	// The list of the number of nodes allowed to be used per shard. The number of nodes allowed for different instance types varies.
	NodeNumbers []int `pulumi:"nodeNumbers"`
	// The List of capacity specifications for a single shard.
	ShardCapacitySpecs []GetInstanceSpecsInstanceSpecShardCapacitySpec `pulumi:"shardCapacitySpecs"`
	// The list of shards that the instance is allowed to use. The number of shards allowed for use varies among different instance architecture types.
	ShardNumbers []int `pulumi:"shardNumbers"`
}

// GetInstanceSpecsInstanceSpecInput is an input type that accepts GetInstanceSpecsInstanceSpecArgs and GetInstanceSpecsInstanceSpecOutput values.
// You can construct a concrete instance of `GetInstanceSpecsInstanceSpecInput` via:
//
//	GetInstanceSpecsInstanceSpecArgs{...}
type GetInstanceSpecsInstanceSpecInput interface {
	pulumi.Input

	ToGetInstanceSpecsInstanceSpecOutput() GetInstanceSpecsInstanceSpecOutput
	ToGetInstanceSpecsInstanceSpecOutputWithContext(context.Context) GetInstanceSpecsInstanceSpecOutput
}

type GetInstanceSpecsInstanceSpecArgs struct {
	// The architecture type of the Redis instance.
	ArchType pulumi.StringInput `pulumi:"archType"`
	// The type of Redis instance.
	InstanceClass pulumi.StringPtrInput `pulumi:"instanceClass"`
	// The list of the number of nodes allowed to be used per shard. The number of nodes allowed for different instance types varies.
	NodeNumbers pulumi.IntArrayInput `pulumi:"nodeNumbers"`
	// The List of capacity specifications for a single shard.
	ShardCapacitySpecs GetInstanceSpecsInstanceSpecShardCapacitySpecArrayInput `pulumi:"shardCapacitySpecs"`
	// The list of shards that the instance is allowed to use. The number of shards allowed for use varies among different instance architecture types.
	ShardNumbers pulumi.IntArrayInput `pulumi:"shardNumbers"`
}

func (GetInstanceSpecsInstanceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSpecsInstanceSpec)(nil)).Elem()
}

func (i GetInstanceSpecsInstanceSpecArgs) ToGetInstanceSpecsInstanceSpecOutput() GetInstanceSpecsInstanceSpecOutput {
	return i.ToGetInstanceSpecsInstanceSpecOutputWithContext(context.Background())
}

func (i GetInstanceSpecsInstanceSpecArgs) ToGetInstanceSpecsInstanceSpecOutputWithContext(ctx context.Context) GetInstanceSpecsInstanceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSpecsInstanceSpecOutput)
}

// GetInstanceSpecsInstanceSpecArrayInput is an input type that accepts GetInstanceSpecsInstanceSpecArray and GetInstanceSpecsInstanceSpecArrayOutput values.
// You can construct a concrete instance of `GetInstanceSpecsInstanceSpecArrayInput` via:
//
//	GetInstanceSpecsInstanceSpecArray{ GetInstanceSpecsInstanceSpecArgs{...} }
type GetInstanceSpecsInstanceSpecArrayInput interface {
	pulumi.Input

	ToGetInstanceSpecsInstanceSpecArrayOutput() GetInstanceSpecsInstanceSpecArrayOutput
	ToGetInstanceSpecsInstanceSpecArrayOutputWithContext(context.Context) GetInstanceSpecsInstanceSpecArrayOutput
}

type GetInstanceSpecsInstanceSpecArray []GetInstanceSpecsInstanceSpecInput

func (GetInstanceSpecsInstanceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSpecsInstanceSpec)(nil)).Elem()
}

func (i GetInstanceSpecsInstanceSpecArray) ToGetInstanceSpecsInstanceSpecArrayOutput() GetInstanceSpecsInstanceSpecArrayOutput {
	return i.ToGetInstanceSpecsInstanceSpecArrayOutputWithContext(context.Background())
}

func (i GetInstanceSpecsInstanceSpecArray) ToGetInstanceSpecsInstanceSpecArrayOutputWithContext(ctx context.Context) GetInstanceSpecsInstanceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSpecsInstanceSpecArrayOutput)
}

type GetInstanceSpecsInstanceSpecOutput struct{ *pulumi.OutputState }

func (GetInstanceSpecsInstanceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSpecsInstanceSpec)(nil)).Elem()
}

func (o GetInstanceSpecsInstanceSpecOutput) ToGetInstanceSpecsInstanceSpecOutput() GetInstanceSpecsInstanceSpecOutput {
	return o
}

func (o GetInstanceSpecsInstanceSpecOutput) ToGetInstanceSpecsInstanceSpecOutputWithContext(ctx context.Context) GetInstanceSpecsInstanceSpecOutput {
	return o
}

// The architecture type of the Redis instance.
func (o GetInstanceSpecsInstanceSpecOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpec) string { return v.ArchType }).(pulumi.StringOutput)
}

// The type of Redis instance.
func (o GetInstanceSpecsInstanceSpecOutput) InstanceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpec) *string { return v.InstanceClass }).(pulumi.StringPtrOutput)
}

// The list of the number of nodes allowed to be used per shard. The number of nodes allowed for different instance types varies.
func (o GetInstanceSpecsInstanceSpecOutput) NodeNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpec) []int { return v.NodeNumbers }).(pulumi.IntArrayOutput)
}

// The List of capacity specifications for a single shard.
func (o GetInstanceSpecsInstanceSpecOutput) ShardCapacitySpecs() GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpec) []GetInstanceSpecsInstanceSpecShardCapacitySpec {
		return v.ShardCapacitySpecs
	}).(GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput)
}

// The list of shards that the instance is allowed to use. The number of shards allowed for use varies among different instance architecture types.
func (o GetInstanceSpecsInstanceSpecOutput) ShardNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpec) []int { return v.ShardNumbers }).(pulumi.IntArrayOutput)
}

type GetInstanceSpecsInstanceSpecArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceSpecsInstanceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSpecsInstanceSpec)(nil)).Elem()
}

func (o GetInstanceSpecsInstanceSpecArrayOutput) ToGetInstanceSpecsInstanceSpecArrayOutput() GetInstanceSpecsInstanceSpecArrayOutput {
	return o
}

func (o GetInstanceSpecsInstanceSpecArrayOutput) ToGetInstanceSpecsInstanceSpecArrayOutputWithContext(ctx context.Context) GetInstanceSpecsInstanceSpecArrayOutput {
	return o
}

func (o GetInstanceSpecsInstanceSpecArrayOutput) Index(i pulumi.IntInput) GetInstanceSpecsInstanceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceSpecsInstanceSpec {
		return vs[0].([]GetInstanceSpecsInstanceSpec)[vs[1].(int)]
	}).(GetInstanceSpecsInstanceSpecOutput)
}

type GetInstanceSpecsInstanceSpecShardCapacitySpec struct {
	// The default bandwidth of the instance under the current memory capacity.
	DefaultBandwidthPerShard int `pulumi:"defaultBandwidthPerShard"`
	// The upper limit of bandwidth that an instance is allowed to modify under the current memory capacity.
	MaxAdditionalBandwidthPerShard int `pulumi:"maxAdditionalBandwidthPerShard"`
	// The default maximum number of connections for a single shard.
	MaxConnectionsPerShard int `pulumi:"maxConnectionsPerShard"`
	// Single-shard memory capacity.
	ShardCapacity int `pulumi:"shardCapacity"`
}

// GetInstanceSpecsInstanceSpecShardCapacitySpecInput is an input type that accepts GetInstanceSpecsInstanceSpecShardCapacitySpecArgs and GetInstanceSpecsInstanceSpecShardCapacitySpecOutput values.
// You can construct a concrete instance of `GetInstanceSpecsInstanceSpecShardCapacitySpecInput` via:
//
//	GetInstanceSpecsInstanceSpecShardCapacitySpecArgs{...}
type GetInstanceSpecsInstanceSpecShardCapacitySpecInput interface {
	pulumi.Input

	ToGetInstanceSpecsInstanceSpecShardCapacitySpecOutput() GetInstanceSpecsInstanceSpecShardCapacitySpecOutput
	ToGetInstanceSpecsInstanceSpecShardCapacitySpecOutputWithContext(context.Context) GetInstanceSpecsInstanceSpecShardCapacitySpecOutput
}

type GetInstanceSpecsInstanceSpecShardCapacitySpecArgs struct {
	// The default bandwidth of the instance under the current memory capacity.
	DefaultBandwidthPerShard pulumi.IntInput `pulumi:"defaultBandwidthPerShard"`
	// The upper limit of bandwidth that an instance is allowed to modify under the current memory capacity.
	MaxAdditionalBandwidthPerShard pulumi.IntInput `pulumi:"maxAdditionalBandwidthPerShard"`
	// The default maximum number of connections for a single shard.
	MaxConnectionsPerShard pulumi.IntInput `pulumi:"maxConnectionsPerShard"`
	// Single-shard memory capacity.
	ShardCapacity pulumi.IntInput `pulumi:"shardCapacity"`
}

func (GetInstanceSpecsInstanceSpecShardCapacitySpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSpecsInstanceSpecShardCapacitySpec)(nil)).Elem()
}

func (i GetInstanceSpecsInstanceSpecShardCapacitySpecArgs) ToGetInstanceSpecsInstanceSpecShardCapacitySpecOutput() GetInstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return i.ToGetInstanceSpecsInstanceSpecShardCapacitySpecOutputWithContext(context.Background())
}

func (i GetInstanceSpecsInstanceSpecShardCapacitySpecArgs) ToGetInstanceSpecsInstanceSpecShardCapacitySpecOutputWithContext(ctx context.Context) GetInstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSpecsInstanceSpecShardCapacitySpecOutput)
}

// GetInstanceSpecsInstanceSpecShardCapacitySpecArrayInput is an input type that accepts GetInstanceSpecsInstanceSpecShardCapacitySpecArray and GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput values.
// You can construct a concrete instance of `GetInstanceSpecsInstanceSpecShardCapacitySpecArrayInput` via:
//
//	GetInstanceSpecsInstanceSpecShardCapacitySpecArray{ GetInstanceSpecsInstanceSpecShardCapacitySpecArgs{...} }
type GetInstanceSpecsInstanceSpecShardCapacitySpecArrayInput interface {
	pulumi.Input

	ToGetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput() GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput
	ToGetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutputWithContext(context.Context) GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput
}

type GetInstanceSpecsInstanceSpecShardCapacitySpecArray []GetInstanceSpecsInstanceSpecShardCapacitySpecInput

func (GetInstanceSpecsInstanceSpecShardCapacitySpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSpecsInstanceSpecShardCapacitySpec)(nil)).Elem()
}

func (i GetInstanceSpecsInstanceSpecShardCapacitySpecArray) ToGetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput() GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return i.ToGetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutputWithContext(context.Background())
}

func (i GetInstanceSpecsInstanceSpecShardCapacitySpecArray) ToGetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutputWithContext(ctx context.Context) GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput)
}

type GetInstanceSpecsInstanceSpecShardCapacitySpecOutput struct{ *pulumi.OutputState }

func (GetInstanceSpecsInstanceSpecShardCapacitySpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSpecsInstanceSpecShardCapacitySpec)(nil)).Elem()
}

func (o GetInstanceSpecsInstanceSpecShardCapacitySpecOutput) ToGetInstanceSpecsInstanceSpecShardCapacitySpecOutput() GetInstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return o
}

func (o GetInstanceSpecsInstanceSpecShardCapacitySpecOutput) ToGetInstanceSpecsInstanceSpecShardCapacitySpecOutputWithContext(ctx context.Context) GetInstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return o
}

// The default bandwidth of the instance under the current memory capacity.
func (o GetInstanceSpecsInstanceSpecShardCapacitySpecOutput) DefaultBandwidthPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpecShardCapacitySpec) int { return v.DefaultBandwidthPerShard }).(pulumi.IntOutput)
}

// The upper limit of bandwidth that an instance is allowed to modify under the current memory capacity.
func (o GetInstanceSpecsInstanceSpecShardCapacitySpecOutput) MaxAdditionalBandwidthPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpecShardCapacitySpec) int { return v.MaxAdditionalBandwidthPerShard }).(pulumi.IntOutput)
}

// The default maximum number of connections for a single shard.
func (o GetInstanceSpecsInstanceSpecShardCapacitySpecOutput) MaxConnectionsPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpecShardCapacitySpec) int { return v.MaxConnectionsPerShard }).(pulumi.IntOutput)
}

// Single-shard memory capacity.
func (o GetInstanceSpecsInstanceSpecShardCapacitySpecOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSpecsInstanceSpecShardCapacitySpec) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

type GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSpecsInstanceSpecShardCapacitySpec)(nil)).Elem()
}

func (o GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput) ToGetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput() GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return o
}

func (o GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput) ToGetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutputWithContext(ctx context.Context) GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput {
	return o
}

func (o GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput) Index(i pulumi.IntInput) GetInstanceSpecsInstanceSpecShardCapacitySpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceSpecsInstanceSpecShardCapacitySpec {
		return vs[0].([]GetInstanceSpecsInstanceSpecShardCapacitySpec)[vs[1].(int)]
	}).(GetInstanceSpecsInstanceSpecShardCapacitySpecOutput)
}

type GetInstancesInstance struct {
	// The additional bandwidth of a single shard, that is, the extra bandwidth that needs to be added on top of the default bandwidth, unit: MB/s.
	AdditionalBandwidthPerShard int `pulumi:"additionalBandwidthPerShard"`
	// The list of backup plans.
	BackupPlan GetInstancesInstanceBackupPlan `pulumi:"backupPlan"`
	// The memory capacity information.
	Capacity GetInstancesInstanceCapacity `pulumi:"capacity"`
	// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
	ChargeType string `pulumi:"chargeType"`
	// Set the list of available zones to which the node belongs.
	ConfigureNodes []GetInstancesInstanceConfigureNode `pulumi:"configureNodes"`
	// The creation time of the redis instance.
	CreateTime string `pulumi:"createTime"`
	// The data storage form of the instance.
	DataLayout string `pulumi:"dataLayout"`
	// The default bandwidth of a single shard in the instance. Both the read bandwidth (i.e., the downlink bandwidth) and the write bandwidth (i.e., the uplink bandwidth) are of this value. Unit: MB/s.
	DefaultBandwidthPerShard int `pulumi:"defaultBandwidthPerShard"`
	// whether enable deletion protection.
	DeletionProtection string `pulumi:"deletionProtection"`
	// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
	EngineVersion string `pulumi:"engineVersion"`
	// The expire time of the redis instance, valid when charge type is `PrePaid`.
	ExpiredTime string `pulumi:"expiredTime"`
	// The id of the redis instance.
	Id string `pulumi:"id"`
	// The type of the instance.
	InstanceClass string `pulumi:"instanceClass"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId string `pulumi:"instanceId"`
	// The name of redis instance to query. This field supports fuzzy queries.
	InstanceName string `pulumi:"instanceName"`
	// A detailed list of all Shard shards in the instance.
	InstanceShards []GetInstancesInstanceInstanceShard `pulumi:"instanceShards"`
	// The maintainable time of the redis instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// The current maximum number of connections in a single shard for the instance of the instance.
	MaxConnections int `pulumi:"maxConnections"`
	// Set the availability zone deployment scheme for the instance. The value range is as follows:
	// disabled: Single availability zone deployment scheme.
	// enabled: Multi-availability zone deployment scheme.
	// Description:
	// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
	MultiAz string `pulumi:"multiAz"`
	// The list of redis instance node IDs.
	NodeIds []string `pulumi:"nodeIds"`
	// The number of nodes in each shard.
	NodeNumber int `pulumi:"nodeNumber"`
	// The list of params.
	Params []GetInstancesInstanceParam `pulumi:"params"`
	// The project name of redis instance to query.
	ProjectName string `pulumi:"projectName"`
	// The region id of the redis instance.
	RegionId string `pulumi:"regionId"`
	// A detailed list of all Server nodes in the shard.
	ServerNodes []GetInstancesInstanceServerNode `pulumi:"serverNodes"`
	// (**Deprecated**) Replaced by shard_capacity_v2. The memory capacity of each shard. Unit: GiB.
	//
	// Deprecated: Replaced by shard_capacity_v2.
	ShardCapacity float64 `pulumi:"shardCapacity"`
	// The memory capacity of each shard in the instance.
	ShardCapacityV2 int `pulumi:"shardCapacityV2"`
	// The ID of the shard.
	ShardId string `pulumi:"shardId"`
	// The number of shards in the redis instance.
	ShardNumber int `pulumi:"shardNumber"`
	// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
	ShardedCluster int `pulumi:"shardedCluster"`
	// The status of redis instance to query.
	Status string `pulumi:"status"`
	// The subnet id of the redis instance.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []GetInstancesInstanceTag `pulumi:"tags"`
	// The list of connection information.
	VisitAddrs []GetInstancesInstanceVisitAddr `pulumi:"visitAddrs"`
	// Whether to enable password-free access when connecting to an instance through a private network.
	VpcAuthMode string `pulumi:"vpcAuthMode"`
	// The vpc id of redis instance to query. This field supports fuzzy queries.
	VpcId string `pulumi:"vpcId"`
	// The list of zone ID which the redis instance belongs.
	ZoneIds []string `pulumi:"zoneIds"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The additional bandwidth of a single shard, that is, the extra bandwidth that needs to be added on top of the default bandwidth, unit: MB/s.
	AdditionalBandwidthPerShard pulumi.IntInput `pulumi:"additionalBandwidthPerShard"`
	// The list of backup plans.
	BackupPlan GetInstancesInstanceBackupPlanInput `pulumi:"backupPlan"`
	// The memory capacity information.
	Capacity GetInstancesInstanceCapacityInput `pulumi:"capacity"`
	// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Set the list of available zones to which the node belongs.
	ConfigureNodes GetInstancesInstanceConfigureNodeArrayInput `pulumi:"configureNodes"`
	// The creation time of the redis instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The data storage form of the instance.
	DataLayout pulumi.StringInput `pulumi:"dataLayout"`
	// The default bandwidth of a single shard in the instance. Both the read bandwidth (i.e., the downlink bandwidth) and the write bandwidth (i.e., the uplink bandwidth) are of this value. Unit: MB/s.
	DefaultBandwidthPerShard pulumi.IntInput `pulumi:"defaultBandwidthPerShard"`
	// whether enable deletion protection.
	DeletionProtection pulumi.StringInput `pulumi:"deletionProtection"`
	// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// The expire time of the redis instance, valid when charge type is `PrePaid`.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The id of the redis instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The type of the instance.
	InstanceClass pulumi.StringInput `pulumi:"instanceClass"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of redis instance to query. This field supports fuzzy queries.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// A detailed list of all Shard shards in the instance.
	InstanceShards GetInstancesInstanceInstanceShardArrayInput `pulumi:"instanceShards"`
	// The maintainable time of the redis instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// The current maximum number of connections in a single shard for the instance of the instance.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// Set the availability zone deployment scheme for the instance. The value range is as follows:
	// disabled: Single availability zone deployment scheme.
	// enabled: Multi-availability zone deployment scheme.
	// Description:
	// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
	MultiAz pulumi.StringInput `pulumi:"multiAz"`
	// The list of redis instance node IDs.
	NodeIds pulumi.StringArrayInput `pulumi:"nodeIds"`
	// The number of nodes in each shard.
	NodeNumber pulumi.IntInput `pulumi:"nodeNumber"`
	// The list of params.
	Params GetInstancesInstanceParamArrayInput `pulumi:"params"`
	// The project name of redis instance to query.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The region id of the redis instance.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// A detailed list of all Server nodes in the shard.
	ServerNodes GetInstancesInstanceServerNodeArrayInput `pulumi:"serverNodes"`
	// (**Deprecated**) Replaced by shard_capacity_v2. The memory capacity of each shard. Unit: GiB.
	//
	// Deprecated: Replaced by shard_capacity_v2.
	ShardCapacity pulumi.Float64Input `pulumi:"shardCapacity"`
	// The memory capacity of each shard in the instance.
	ShardCapacityV2 pulumi.IntInput `pulumi:"shardCapacityV2"`
	// The ID of the shard.
	ShardId pulumi.StringInput `pulumi:"shardId"`
	// The number of shards in the redis instance.
	ShardNumber pulumi.IntInput `pulumi:"shardNumber"`
	// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
	ShardedCluster pulumi.IntInput `pulumi:"shardedCluster"`
	// The status of redis instance to query.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet id of the redis instance.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags GetInstancesInstanceTagArrayInput `pulumi:"tags"`
	// The list of connection information.
	VisitAddrs GetInstancesInstanceVisitAddrArrayInput `pulumi:"visitAddrs"`
	// Whether to enable password-free access when connecting to an instance through a private network.
	VpcAuthMode pulumi.StringInput `pulumi:"vpcAuthMode"`
	// The vpc id of redis instance to query. This field supports fuzzy queries.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The list of zone ID which the redis instance belongs.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The additional bandwidth of a single shard, that is, the extra bandwidth that needs to be added on top of the default bandwidth, unit: MB/s.
func (o GetInstancesInstanceOutput) AdditionalBandwidthPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.AdditionalBandwidthPerShard }).(pulumi.IntOutput)
}

// The list of backup plans.
func (o GetInstancesInstanceOutput) BackupPlan() GetInstancesInstanceBackupPlanOutput {
	return o.ApplyT(func(v GetInstancesInstance) GetInstancesInstanceBackupPlan { return v.BackupPlan }).(GetInstancesInstanceBackupPlanOutput)
}

// The memory capacity information.
func (o GetInstancesInstanceOutput) Capacity() GetInstancesInstanceCapacityOutput {
	return o.ApplyT(func(v GetInstancesInstance) GetInstancesInstanceCapacity { return v.Capacity }).(GetInstancesInstanceCapacityOutput)
}

// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
func (o GetInstancesInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Set the list of available zones to which the node belongs.
func (o GetInstancesInstanceOutput) ConfigureNodes() GetInstancesInstanceConfigureNodeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceConfigureNode { return v.ConfigureNodes }).(GetInstancesInstanceConfigureNodeArrayOutput)
}

// The creation time of the redis instance.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The data storage form of the instance.
func (o GetInstancesInstanceOutput) DataLayout() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DataLayout }).(pulumi.StringOutput)
}

// The default bandwidth of a single shard in the instance. Both the read bandwidth (i.e., the downlink bandwidth) and the write bandwidth (i.e., the uplink bandwidth) are of this value. Unit: MB/s.
func (o GetInstancesInstanceOutput) DefaultBandwidthPerShard() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.DefaultBandwidthPerShard }).(pulumi.IntOutput)
}

// whether enable deletion protection.
func (o GetInstancesInstanceOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
func (o GetInstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The expire time of the redis instance, valid when charge type is `PrePaid`.
func (o GetInstancesInstanceOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The id of the redis instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the instance.
func (o GetInstancesInstanceOutput) InstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceClass }).(pulumi.StringOutput)
}

// The id of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// A detailed list of all Shard shards in the instance.
func (o GetInstancesInstanceOutput) InstanceShards() GetInstancesInstanceInstanceShardArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceInstanceShard { return v.InstanceShards }).(GetInstancesInstanceInstanceShardArrayOutput)
}

// The maintainable time of the redis instance.
func (o GetInstancesInstanceOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// The current maximum number of connections in a single shard for the instance of the instance.
func (o GetInstancesInstanceOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// Set the availability zone deployment scheme for the instance. The value range is as follows:
// disabled: Single availability zone deployment scheme.
// enabled: Multi-availability zone deployment scheme.
// Description:
// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
func (o GetInstancesInstanceOutput) MultiAz() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MultiAz }).(pulumi.StringOutput)
}

// The list of redis instance node IDs.
func (o GetInstancesInstanceOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// The number of nodes in each shard.
func (o GetInstancesInstanceOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.NodeNumber }).(pulumi.IntOutput)
}

// The list of params.
func (o GetInstancesInstanceOutput) Params() GetInstancesInstanceParamArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceParam { return v.Params }).(GetInstancesInstanceParamArrayOutput)
}

// The project name of redis instance to query.
func (o GetInstancesInstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The region id of the redis instance.
func (o GetInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// A detailed list of all Server nodes in the shard.
func (o GetInstancesInstanceOutput) ServerNodes() GetInstancesInstanceServerNodeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceServerNode { return v.ServerNodes }).(GetInstancesInstanceServerNodeArrayOutput)
}

// (**Deprecated**) Replaced by shard_capacity_v2. The memory capacity of each shard. Unit: GiB.
//
// Deprecated: Replaced by shard_capacity_v2.
func (o GetInstancesInstanceOutput) ShardCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstancesInstance) float64 { return v.ShardCapacity }).(pulumi.Float64Output)
}

// The memory capacity of each shard in the instance.
func (o GetInstancesInstanceOutput) ShardCapacityV2() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ShardCapacityV2 }).(pulumi.IntOutput)
}

// The ID of the shard.
func (o GetInstancesInstanceOutput) ShardId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ShardId }).(pulumi.StringOutput)
}

// The number of shards in the redis instance.
func (o GetInstancesInstanceOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ShardNumber }).(pulumi.IntOutput)
}

// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
func (o GetInstancesInstanceOutput) ShardedCluster() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ShardedCluster }).(pulumi.IntOutput)
}

// The status of redis instance to query.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet id of the redis instance.
func (o GetInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o GetInstancesInstanceOutput) Tags() GetInstancesInstanceTagArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceTag { return v.Tags }).(GetInstancesInstanceTagArrayOutput)
}

// The list of connection information.
func (o GetInstancesInstanceOutput) VisitAddrs() GetInstancesInstanceVisitAddrArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceVisitAddr { return v.VisitAddrs }).(GetInstancesInstanceVisitAddrArrayOutput)
}

// Whether to enable password-free access when connecting to an instance through a private network.
func (o GetInstancesInstanceOutput) VpcAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcAuthMode }).(pulumi.StringOutput)
}

// The vpc id of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The list of zone ID which the redis instance belongs.
func (o GetInstancesInstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceBackupPlan struct {
	// Whether enable auto backup.
	Active bool `pulumi:"active"`
	// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	BackupHour int `pulumi:"backupHour"`
	// The backup type.
	BackupType string `pulumi:"backupType"`
	// The expected time for the next backup to be performed.
	ExpectNextBackupTime string `pulumi:"expectNextBackupTime"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId string `pulumi:"instanceId"`
	// The last time the backup policy was modified.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	Periods []int `pulumi:"periods"`
	// The number of days to keep backups, the default is 7 days.
	Ttl int `pulumi:"ttl"`
}

// GetInstancesInstanceBackupPlanInput is an input type that accepts GetInstancesInstanceBackupPlanArgs and GetInstancesInstanceBackupPlanOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupPlanInput` via:
//
//	GetInstancesInstanceBackupPlanArgs{...}
type GetInstancesInstanceBackupPlanInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupPlanOutput() GetInstancesInstanceBackupPlanOutput
	ToGetInstancesInstanceBackupPlanOutputWithContext(context.Context) GetInstancesInstanceBackupPlanOutput
}

type GetInstancesInstanceBackupPlanArgs struct {
	// Whether enable auto backup.
	Active pulumi.BoolInput `pulumi:"active"`
	// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	BackupHour pulumi.IntInput `pulumi:"backupHour"`
	// The backup type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The expected time for the next backup to be performed.
	ExpectNextBackupTime pulumi.StringInput `pulumi:"expectNextBackupTime"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The last time the backup policy was modified.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	Periods pulumi.IntArrayInput `pulumi:"periods"`
	// The number of days to keep backups, the default is 7 days.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetInstancesInstanceBackupPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupPlan)(nil)).Elem()
}

func (i GetInstancesInstanceBackupPlanArgs) ToGetInstancesInstanceBackupPlanOutput() GetInstancesInstanceBackupPlanOutput {
	return i.ToGetInstancesInstanceBackupPlanOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupPlanArgs) ToGetInstancesInstanceBackupPlanOutputWithContext(ctx context.Context) GetInstancesInstanceBackupPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupPlanOutput)
}

type GetInstancesInstanceBackupPlanOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupPlan)(nil)).Elem()
}

func (o GetInstancesInstanceBackupPlanOutput) ToGetInstancesInstanceBackupPlanOutput() GetInstancesInstanceBackupPlanOutput {
	return o
}

func (o GetInstancesInstanceBackupPlanOutput) ToGetInstancesInstanceBackupPlanOutputWithContext(ctx context.Context) GetInstancesInstanceBackupPlanOutput {
	return o
}

// Whether enable auto backup.
func (o GetInstancesInstanceBackupPlanOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) bool { return v.Active }).(pulumi.BoolOutput)
}

// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
func (o GetInstancesInstanceBackupPlanOutput) BackupHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) int { return v.BackupHour }).(pulumi.IntOutput)
}

// The backup type.
func (o GetInstancesInstanceBackupPlanOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) string { return v.BackupType }).(pulumi.StringOutput)
}

// The expected time for the next backup to be performed.
func (o GetInstancesInstanceBackupPlanOutput) ExpectNextBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) string { return v.ExpectNextBackupTime }).(pulumi.StringOutput)
}

// The id of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceBackupPlanOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The last time the backup policy was modified.
func (o GetInstancesInstanceBackupPlanOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
func (o GetInstancesInstanceBackupPlanOutput) Periods() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) []int { return v.Periods }).(pulumi.IntArrayOutput)
}

// The number of days to keep backups, the default is 7 days.
func (o GetInstancesInstanceBackupPlanOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetInstancesInstanceCapacity struct {
	// The total memory capacity of the redis instance. Unit: MiB.
	Total int `pulumi:"total"`
	// The used memory capacity of the redis instance. Unit: MiB.
	Used int `pulumi:"used"`
}

// GetInstancesInstanceCapacityInput is an input type that accepts GetInstancesInstanceCapacityArgs and GetInstancesInstanceCapacityOutput values.
// You can construct a concrete instance of `GetInstancesInstanceCapacityInput` via:
//
//	GetInstancesInstanceCapacityArgs{...}
type GetInstancesInstanceCapacityInput interface {
	pulumi.Input

	ToGetInstancesInstanceCapacityOutput() GetInstancesInstanceCapacityOutput
	ToGetInstancesInstanceCapacityOutputWithContext(context.Context) GetInstancesInstanceCapacityOutput
}

type GetInstancesInstanceCapacityArgs struct {
	// The total memory capacity of the redis instance. Unit: MiB.
	Total pulumi.IntInput `pulumi:"total"`
	// The used memory capacity of the redis instance. Unit: MiB.
	Used pulumi.IntInput `pulumi:"used"`
}

func (GetInstancesInstanceCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceCapacity)(nil)).Elem()
}

func (i GetInstancesInstanceCapacityArgs) ToGetInstancesInstanceCapacityOutput() GetInstancesInstanceCapacityOutput {
	return i.ToGetInstancesInstanceCapacityOutputWithContext(context.Background())
}

func (i GetInstancesInstanceCapacityArgs) ToGetInstancesInstanceCapacityOutputWithContext(ctx context.Context) GetInstancesInstanceCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceCapacityOutput)
}

type GetInstancesInstanceCapacityOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceCapacity)(nil)).Elem()
}

func (o GetInstancesInstanceCapacityOutput) ToGetInstancesInstanceCapacityOutput() GetInstancesInstanceCapacityOutput {
	return o
}

func (o GetInstancesInstanceCapacityOutput) ToGetInstancesInstanceCapacityOutputWithContext(ctx context.Context) GetInstancesInstanceCapacityOutput {
	return o
}

// The total memory capacity of the redis instance. Unit: MiB.
func (o GetInstancesInstanceCapacityOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceCapacity) int { return v.Total }).(pulumi.IntOutput)
}

// The used memory capacity of the redis instance. Unit: MiB.
func (o GetInstancesInstanceCapacityOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceCapacity) int { return v.Used }).(pulumi.IntOutput)
}

type GetInstancesInstanceConfigureNode struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az string `pulumi:"az"`
}

// GetInstancesInstanceConfigureNodeInput is an input type that accepts GetInstancesInstanceConfigureNodeArgs and GetInstancesInstanceConfigureNodeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigureNodeInput` via:
//
//	GetInstancesInstanceConfigureNodeArgs{...}
type GetInstancesInstanceConfigureNodeInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigureNodeOutput() GetInstancesInstanceConfigureNodeOutput
	ToGetInstancesInstanceConfigureNodeOutputWithContext(context.Context) GetInstancesInstanceConfigureNodeOutput
}

type GetInstancesInstanceConfigureNodeArgs struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az pulumi.StringInput `pulumi:"az"`
}

func (GetInstancesInstanceConfigureNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigureNode)(nil)).Elem()
}

func (i GetInstancesInstanceConfigureNodeArgs) ToGetInstancesInstanceConfigureNodeOutput() GetInstancesInstanceConfigureNodeOutput {
	return i.ToGetInstancesInstanceConfigureNodeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigureNodeArgs) ToGetInstancesInstanceConfigureNodeOutputWithContext(ctx context.Context) GetInstancesInstanceConfigureNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigureNodeOutput)
}

// GetInstancesInstanceConfigureNodeArrayInput is an input type that accepts GetInstancesInstanceConfigureNodeArray and GetInstancesInstanceConfigureNodeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigureNodeArrayInput` via:
//
//	GetInstancesInstanceConfigureNodeArray{ GetInstancesInstanceConfigureNodeArgs{...} }
type GetInstancesInstanceConfigureNodeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigureNodeArrayOutput() GetInstancesInstanceConfigureNodeArrayOutput
	ToGetInstancesInstanceConfigureNodeArrayOutputWithContext(context.Context) GetInstancesInstanceConfigureNodeArrayOutput
}

type GetInstancesInstanceConfigureNodeArray []GetInstancesInstanceConfigureNodeInput

func (GetInstancesInstanceConfigureNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigureNode)(nil)).Elem()
}

func (i GetInstancesInstanceConfigureNodeArray) ToGetInstancesInstanceConfigureNodeArrayOutput() GetInstancesInstanceConfigureNodeArrayOutput {
	return i.ToGetInstancesInstanceConfigureNodeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigureNodeArray) ToGetInstancesInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigureNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigureNodeArrayOutput)
}

type GetInstancesInstanceConfigureNodeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigureNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigureNode)(nil)).Elem()
}

func (o GetInstancesInstanceConfigureNodeOutput) ToGetInstancesInstanceConfigureNodeOutput() GetInstancesInstanceConfigureNodeOutput {
	return o
}

func (o GetInstancesInstanceConfigureNodeOutput) ToGetInstancesInstanceConfigureNodeOutputWithContext(ctx context.Context) GetInstancesInstanceConfigureNodeOutput {
	return o
}

// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
func (o GetInstancesInstanceConfigureNodeOutput) Az() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigureNode) string { return v.Az }).(pulumi.StringOutput)
}

type GetInstancesInstanceConfigureNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigureNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigureNode)(nil)).Elem()
}

func (o GetInstancesInstanceConfigureNodeArrayOutput) ToGetInstancesInstanceConfigureNodeArrayOutput() GetInstancesInstanceConfigureNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigureNodeArrayOutput) ToGetInstancesInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigureNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigureNodeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigureNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigureNode {
		return vs[0].([]GetInstancesInstanceConfigureNode)[vs[1].(int)]
	}).(GetInstancesInstanceConfigureNodeOutput)
}

type GetInstancesInstanceInstanceShard struct {
	// The number of nodes in each shard.
	NodeNumber int `pulumi:"nodeNumber"`
	// A detailed list of all Server nodes in the shard.
	ServerNodes []GetInstancesInstanceInstanceShardServerNode `pulumi:"serverNodes"`
	// The ID of the shard.
	ShardId string `pulumi:"shardId"`
}

// GetInstancesInstanceInstanceShardInput is an input type that accepts GetInstancesInstanceInstanceShardArgs and GetInstancesInstanceInstanceShardOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInstanceShardInput` via:
//
//	GetInstancesInstanceInstanceShardArgs{...}
type GetInstancesInstanceInstanceShardInput interface {
	pulumi.Input

	ToGetInstancesInstanceInstanceShardOutput() GetInstancesInstanceInstanceShardOutput
	ToGetInstancesInstanceInstanceShardOutputWithContext(context.Context) GetInstancesInstanceInstanceShardOutput
}

type GetInstancesInstanceInstanceShardArgs struct {
	// The number of nodes in each shard.
	NodeNumber pulumi.IntInput `pulumi:"nodeNumber"`
	// A detailed list of all Server nodes in the shard.
	ServerNodes GetInstancesInstanceInstanceShardServerNodeArrayInput `pulumi:"serverNodes"`
	// The ID of the shard.
	ShardId pulumi.StringInput `pulumi:"shardId"`
}

func (GetInstancesInstanceInstanceShardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceInstanceShard)(nil)).Elem()
}

func (i GetInstancesInstanceInstanceShardArgs) ToGetInstancesInstanceInstanceShardOutput() GetInstancesInstanceInstanceShardOutput {
	return i.ToGetInstancesInstanceInstanceShardOutputWithContext(context.Background())
}

func (i GetInstancesInstanceInstanceShardArgs) ToGetInstancesInstanceInstanceShardOutputWithContext(ctx context.Context) GetInstancesInstanceInstanceShardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceInstanceShardOutput)
}

// GetInstancesInstanceInstanceShardArrayInput is an input type that accepts GetInstancesInstanceInstanceShardArray and GetInstancesInstanceInstanceShardArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInstanceShardArrayInput` via:
//
//	GetInstancesInstanceInstanceShardArray{ GetInstancesInstanceInstanceShardArgs{...} }
type GetInstancesInstanceInstanceShardArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceInstanceShardArrayOutput() GetInstancesInstanceInstanceShardArrayOutput
	ToGetInstancesInstanceInstanceShardArrayOutputWithContext(context.Context) GetInstancesInstanceInstanceShardArrayOutput
}

type GetInstancesInstanceInstanceShardArray []GetInstancesInstanceInstanceShardInput

func (GetInstancesInstanceInstanceShardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceInstanceShard)(nil)).Elem()
}

func (i GetInstancesInstanceInstanceShardArray) ToGetInstancesInstanceInstanceShardArrayOutput() GetInstancesInstanceInstanceShardArrayOutput {
	return i.ToGetInstancesInstanceInstanceShardArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceInstanceShardArray) ToGetInstancesInstanceInstanceShardArrayOutputWithContext(ctx context.Context) GetInstancesInstanceInstanceShardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceInstanceShardArrayOutput)
}

type GetInstancesInstanceInstanceShardOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceInstanceShardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceInstanceShard)(nil)).Elem()
}

func (o GetInstancesInstanceInstanceShardOutput) ToGetInstancesInstanceInstanceShardOutput() GetInstancesInstanceInstanceShardOutput {
	return o
}

func (o GetInstancesInstanceInstanceShardOutput) ToGetInstancesInstanceInstanceShardOutputWithContext(ctx context.Context) GetInstancesInstanceInstanceShardOutput {
	return o
}

// The number of nodes in each shard.
func (o GetInstancesInstanceInstanceShardOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceInstanceShard) int { return v.NodeNumber }).(pulumi.IntOutput)
}

// A detailed list of all Server nodes in the shard.
func (o GetInstancesInstanceInstanceShardOutput) ServerNodes() GetInstancesInstanceInstanceShardServerNodeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceInstanceShard) []GetInstancesInstanceInstanceShardServerNode {
		return v.ServerNodes
	}).(GetInstancesInstanceInstanceShardServerNodeArrayOutput)
}

// The ID of the shard.
func (o GetInstancesInstanceInstanceShardOutput) ShardId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceInstanceShard) string { return v.ShardId }).(pulumi.StringOutput)
}

type GetInstancesInstanceInstanceShardArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceInstanceShardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceInstanceShard)(nil)).Elem()
}

func (o GetInstancesInstanceInstanceShardArrayOutput) ToGetInstancesInstanceInstanceShardArrayOutput() GetInstancesInstanceInstanceShardArrayOutput {
	return o
}

func (o GetInstancesInstanceInstanceShardArrayOutput) ToGetInstancesInstanceInstanceShardArrayOutputWithContext(ctx context.Context) GetInstancesInstanceInstanceShardArrayOutput {
	return o
}

func (o GetInstancesInstanceInstanceShardArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceInstanceShardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceInstanceShard {
		return vs[0].([]GetInstancesInstanceInstanceShard)[vs[1].(int)]
	}).(GetInstancesInstanceInstanceShardOutput)
}

type GetInstancesInstanceInstanceShardServerNode struct {
	// The current role of the node.
	CurrentRole string `pulumi:"currentRole"`
	// The ID of node.
	NodeId string `pulumi:"nodeId"`
	// The status of redis instance to query.
	Status string `pulumi:"status"`
	// The zone id of redis instance to query. This field supports fuzzy queries.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstancesInstanceInstanceShardServerNodeInput is an input type that accepts GetInstancesInstanceInstanceShardServerNodeArgs and GetInstancesInstanceInstanceShardServerNodeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInstanceShardServerNodeInput` via:
//
//	GetInstancesInstanceInstanceShardServerNodeArgs{...}
type GetInstancesInstanceInstanceShardServerNodeInput interface {
	pulumi.Input

	ToGetInstancesInstanceInstanceShardServerNodeOutput() GetInstancesInstanceInstanceShardServerNodeOutput
	ToGetInstancesInstanceInstanceShardServerNodeOutputWithContext(context.Context) GetInstancesInstanceInstanceShardServerNodeOutput
}

type GetInstancesInstanceInstanceShardServerNodeArgs struct {
	// The current role of the node.
	CurrentRole pulumi.StringInput `pulumi:"currentRole"`
	// The ID of node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The status of redis instance to query.
	Status pulumi.StringInput `pulumi:"status"`
	// The zone id of redis instance to query. This field supports fuzzy queries.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceInstanceShardServerNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceInstanceShardServerNode)(nil)).Elem()
}

func (i GetInstancesInstanceInstanceShardServerNodeArgs) ToGetInstancesInstanceInstanceShardServerNodeOutput() GetInstancesInstanceInstanceShardServerNodeOutput {
	return i.ToGetInstancesInstanceInstanceShardServerNodeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceInstanceShardServerNodeArgs) ToGetInstancesInstanceInstanceShardServerNodeOutputWithContext(ctx context.Context) GetInstancesInstanceInstanceShardServerNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceInstanceShardServerNodeOutput)
}

// GetInstancesInstanceInstanceShardServerNodeArrayInput is an input type that accepts GetInstancesInstanceInstanceShardServerNodeArray and GetInstancesInstanceInstanceShardServerNodeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInstanceShardServerNodeArrayInput` via:
//
//	GetInstancesInstanceInstanceShardServerNodeArray{ GetInstancesInstanceInstanceShardServerNodeArgs{...} }
type GetInstancesInstanceInstanceShardServerNodeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceInstanceShardServerNodeArrayOutput() GetInstancesInstanceInstanceShardServerNodeArrayOutput
	ToGetInstancesInstanceInstanceShardServerNodeArrayOutputWithContext(context.Context) GetInstancesInstanceInstanceShardServerNodeArrayOutput
}

type GetInstancesInstanceInstanceShardServerNodeArray []GetInstancesInstanceInstanceShardServerNodeInput

func (GetInstancesInstanceInstanceShardServerNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceInstanceShardServerNode)(nil)).Elem()
}

func (i GetInstancesInstanceInstanceShardServerNodeArray) ToGetInstancesInstanceInstanceShardServerNodeArrayOutput() GetInstancesInstanceInstanceShardServerNodeArrayOutput {
	return i.ToGetInstancesInstanceInstanceShardServerNodeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceInstanceShardServerNodeArray) ToGetInstancesInstanceInstanceShardServerNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceInstanceShardServerNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceInstanceShardServerNodeArrayOutput)
}

type GetInstancesInstanceInstanceShardServerNodeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceInstanceShardServerNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceInstanceShardServerNode)(nil)).Elem()
}

func (o GetInstancesInstanceInstanceShardServerNodeOutput) ToGetInstancesInstanceInstanceShardServerNodeOutput() GetInstancesInstanceInstanceShardServerNodeOutput {
	return o
}

func (o GetInstancesInstanceInstanceShardServerNodeOutput) ToGetInstancesInstanceInstanceShardServerNodeOutputWithContext(ctx context.Context) GetInstancesInstanceInstanceShardServerNodeOutput {
	return o
}

// The current role of the node.
func (o GetInstancesInstanceInstanceShardServerNodeOutput) CurrentRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceInstanceShardServerNode) string { return v.CurrentRole }).(pulumi.StringOutput)
}

// The ID of node.
func (o GetInstancesInstanceInstanceShardServerNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceInstanceShardServerNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// The status of redis instance to query.
func (o GetInstancesInstanceInstanceShardServerNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceInstanceShardServerNode) string { return v.Status }).(pulumi.StringOutput)
}

// The zone id of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceInstanceShardServerNodeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceInstanceShardServerNode) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstancesInstanceInstanceShardServerNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceInstanceShardServerNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceInstanceShardServerNode)(nil)).Elem()
}

func (o GetInstancesInstanceInstanceShardServerNodeArrayOutput) ToGetInstancesInstanceInstanceShardServerNodeArrayOutput() GetInstancesInstanceInstanceShardServerNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceInstanceShardServerNodeArrayOutput) ToGetInstancesInstanceInstanceShardServerNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceInstanceShardServerNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceInstanceShardServerNodeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceInstanceShardServerNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceInstanceShardServerNode {
		return vs[0].([]GetInstancesInstanceInstanceShardServerNode)[vs[1].(int)]
	}).(GetInstancesInstanceInstanceShardServerNodeOutput)
}

type GetInstancesInstanceParam struct {
	// Current value of the configuration parameter.
	CurrentValue string `pulumi:"currentValue"`
	// Default value of the configuration parameter.
	DefaultValue string `pulumi:"defaultValue"`
	// The description of this option item.
	Description string `pulumi:"description"`
	// Whether the current redis instance supports editing this parameter.
	EditableForInstance bool `pulumi:"editableForInstance"`
	// Whether need to reboot the redis instance when modifying this parameter.
	NeedReboot bool `pulumi:"needReboot"`
	// The list of options. Valid when the configuration parameter type is `Radio`.
	Options []GetInstancesInstanceParamOption `pulumi:"options"`
	// The name of the configuration parameter.
	ParamName string `pulumi:"paramName"`
	// The valid value range of the numeric type configuration parameter.
	Range string `pulumi:"range"`
	// The type of the configuration parameter.
	Type string `pulumi:"type"`
	// The unit of the numeric type configuration parameter.
	Unit string `pulumi:"unit"`
}

// GetInstancesInstanceParamInput is an input type that accepts GetInstancesInstanceParamArgs and GetInstancesInstanceParamOutput values.
// You can construct a concrete instance of `GetInstancesInstanceParamInput` via:
//
//	GetInstancesInstanceParamArgs{...}
type GetInstancesInstanceParamInput interface {
	pulumi.Input

	ToGetInstancesInstanceParamOutput() GetInstancesInstanceParamOutput
	ToGetInstancesInstanceParamOutputWithContext(context.Context) GetInstancesInstanceParamOutput
}

type GetInstancesInstanceParamArgs struct {
	// Current value of the configuration parameter.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// Default value of the configuration parameter.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// The description of this option item.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the current redis instance supports editing this parameter.
	EditableForInstance pulumi.BoolInput `pulumi:"editableForInstance"`
	// Whether need to reboot the redis instance when modifying this parameter.
	NeedReboot pulumi.BoolInput `pulumi:"needReboot"`
	// The list of options. Valid when the configuration parameter type is `Radio`.
	Options GetInstancesInstanceParamOptionArrayInput `pulumi:"options"`
	// The name of the configuration parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The valid value range of the numeric type configuration parameter.
	Range pulumi.StringInput `pulumi:"range"`
	// The type of the configuration parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The unit of the numeric type configuration parameter.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetInstancesInstanceParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceParam)(nil)).Elem()
}

func (i GetInstancesInstanceParamArgs) ToGetInstancesInstanceParamOutput() GetInstancesInstanceParamOutput {
	return i.ToGetInstancesInstanceParamOutputWithContext(context.Background())
}

func (i GetInstancesInstanceParamArgs) ToGetInstancesInstanceParamOutputWithContext(ctx context.Context) GetInstancesInstanceParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceParamOutput)
}

// GetInstancesInstanceParamArrayInput is an input type that accepts GetInstancesInstanceParamArray and GetInstancesInstanceParamArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceParamArrayInput` via:
//
//	GetInstancesInstanceParamArray{ GetInstancesInstanceParamArgs{...} }
type GetInstancesInstanceParamArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceParamArrayOutput() GetInstancesInstanceParamArrayOutput
	ToGetInstancesInstanceParamArrayOutputWithContext(context.Context) GetInstancesInstanceParamArrayOutput
}

type GetInstancesInstanceParamArray []GetInstancesInstanceParamInput

func (GetInstancesInstanceParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceParam)(nil)).Elem()
}

func (i GetInstancesInstanceParamArray) ToGetInstancesInstanceParamArrayOutput() GetInstancesInstanceParamArrayOutput {
	return i.ToGetInstancesInstanceParamArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceParamArray) ToGetInstancesInstanceParamArrayOutputWithContext(ctx context.Context) GetInstancesInstanceParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceParamArrayOutput)
}

type GetInstancesInstanceParamOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceParam)(nil)).Elem()
}

func (o GetInstancesInstanceParamOutput) ToGetInstancesInstanceParamOutput() GetInstancesInstanceParamOutput {
	return o
}

func (o GetInstancesInstanceParamOutput) ToGetInstancesInstanceParamOutputWithContext(ctx context.Context) GetInstancesInstanceParamOutput {
	return o
}

// Current value of the configuration parameter.
func (o GetInstancesInstanceParamOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// Default value of the configuration parameter.
func (o GetInstancesInstanceParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// The description of this option item.
func (o GetInstancesInstanceParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the current redis instance supports editing this parameter.
func (o GetInstancesInstanceParamOutput) EditableForInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) bool { return v.EditableForInstance }).(pulumi.BoolOutput)
}

// Whether need to reboot the redis instance when modifying this parameter.
func (o GetInstancesInstanceParamOutput) NeedReboot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) bool { return v.NeedReboot }).(pulumi.BoolOutput)
}

// The list of options. Valid when the configuration parameter type is `Radio`.
func (o GetInstancesInstanceParamOutput) Options() GetInstancesInstanceParamOptionArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) []GetInstancesInstanceParamOption { return v.Options }).(GetInstancesInstanceParamOptionArrayOutput)
}

// The name of the configuration parameter.
func (o GetInstancesInstanceParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// The valid value range of the numeric type configuration parameter.
func (o GetInstancesInstanceParamOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.Range }).(pulumi.StringOutput)
}

// The type of the configuration parameter.
func (o GetInstancesInstanceParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.Type }).(pulumi.StringOutput)
}

// The unit of the numeric type configuration parameter.
func (o GetInstancesInstanceParamOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.Unit }).(pulumi.StringOutput)
}

type GetInstancesInstanceParamArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceParam)(nil)).Elem()
}

func (o GetInstancesInstanceParamArrayOutput) ToGetInstancesInstanceParamArrayOutput() GetInstancesInstanceParamArrayOutput {
	return o
}

func (o GetInstancesInstanceParamArrayOutput) ToGetInstancesInstanceParamArrayOutputWithContext(ctx context.Context) GetInstancesInstanceParamArrayOutput {
	return o
}

func (o GetInstancesInstanceParamArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceParam {
		return vs[0].([]GetInstancesInstanceParam)[vs[1].(int)]
	}).(GetInstancesInstanceParamOutput)
}

type GetInstancesInstanceParamOption struct {
	// The description of this option item.
	Description string `pulumi:"description"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetInstancesInstanceParamOptionInput is an input type that accepts GetInstancesInstanceParamOptionArgs and GetInstancesInstanceParamOptionOutput values.
// You can construct a concrete instance of `GetInstancesInstanceParamOptionInput` via:
//
//	GetInstancesInstanceParamOptionArgs{...}
type GetInstancesInstanceParamOptionInput interface {
	pulumi.Input

	ToGetInstancesInstanceParamOptionOutput() GetInstancesInstanceParamOptionOutput
	ToGetInstancesInstanceParamOptionOutputWithContext(context.Context) GetInstancesInstanceParamOptionOutput
}

type GetInstancesInstanceParamOptionArgs struct {
	// The description of this option item.
	Description pulumi.StringInput `pulumi:"description"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstancesInstanceParamOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceParamOption)(nil)).Elem()
}

func (i GetInstancesInstanceParamOptionArgs) ToGetInstancesInstanceParamOptionOutput() GetInstancesInstanceParamOptionOutput {
	return i.ToGetInstancesInstanceParamOptionOutputWithContext(context.Background())
}

func (i GetInstancesInstanceParamOptionArgs) ToGetInstancesInstanceParamOptionOutputWithContext(ctx context.Context) GetInstancesInstanceParamOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceParamOptionOutput)
}

// GetInstancesInstanceParamOptionArrayInput is an input type that accepts GetInstancesInstanceParamOptionArray and GetInstancesInstanceParamOptionArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceParamOptionArrayInput` via:
//
//	GetInstancesInstanceParamOptionArray{ GetInstancesInstanceParamOptionArgs{...} }
type GetInstancesInstanceParamOptionArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceParamOptionArrayOutput() GetInstancesInstanceParamOptionArrayOutput
	ToGetInstancesInstanceParamOptionArrayOutputWithContext(context.Context) GetInstancesInstanceParamOptionArrayOutput
}

type GetInstancesInstanceParamOptionArray []GetInstancesInstanceParamOptionInput

func (GetInstancesInstanceParamOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceParamOption)(nil)).Elem()
}

func (i GetInstancesInstanceParamOptionArray) ToGetInstancesInstanceParamOptionArrayOutput() GetInstancesInstanceParamOptionArrayOutput {
	return i.ToGetInstancesInstanceParamOptionArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceParamOptionArray) ToGetInstancesInstanceParamOptionArrayOutputWithContext(ctx context.Context) GetInstancesInstanceParamOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceParamOptionArrayOutput)
}

type GetInstancesInstanceParamOptionOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceParamOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceParamOption)(nil)).Elem()
}

func (o GetInstancesInstanceParamOptionOutput) ToGetInstancesInstanceParamOptionOutput() GetInstancesInstanceParamOptionOutput {
	return o
}

func (o GetInstancesInstanceParamOptionOutput) ToGetInstancesInstanceParamOptionOutputWithContext(ctx context.Context) GetInstancesInstanceParamOptionOutput {
	return o
}

// The description of this option item.
func (o GetInstancesInstanceParamOptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParamOption) string { return v.Description }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetInstancesInstanceParamOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParamOption) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstancesInstanceParamOptionArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceParamOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceParamOption)(nil)).Elem()
}

func (o GetInstancesInstanceParamOptionArrayOutput) ToGetInstancesInstanceParamOptionArrayOutput() GetInstancesInstanceParamOptionArrayOutput {
	return o
}

func (o GetInstancesInstanceParamOptionArrayOutput) ToGetInstancesInstanceParamOptionArrayOutputWithContext(ctx context.Context) GetInstancesInstanceParamOptionArrayOutput {
	return o
}

func (o GetInstancesInstanceParamOptionArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceParamOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceParamOption {
		return vs[0].([]GetInstancesInstanceParamOption)[vs[1].(int)]
	}).(GetInstancesInstanceParamOptionOutput)
}

type GetInstancesInstanceServerNode struct {
	// The current role of the node.
	CurrentRole string `pulumi:"currentRole"`
	// The ID of node.
	NodeId string `pulumi:"nodeId"`
	// The status of redis instance to query.
	Status string `pulumi:"status"`
	// The zone id of redis instance to query. This field supports fuzzy queries.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstancesInstanceServerNodeInput is an input type that accepts GetInstancesInstanceServerNodeArgs and GetInstancesInstanceServerNodeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceServerNodeInput` via:
//
//	GetInstancesInstanceServerNodeArgs{...}
type GetInstancesInstanceServerNodeInput interface {
	pulumi.Input

	ToGetInstancesInstanceServerNodeOutput() GetInstancesInstanceServerNodeOutput
	ToGetInstancesInstanceServerNodeOutputWithContext(context.Context) GetInstancesInstanceServerNodeOutput
}

type GetInstancesInstanceServerNodeArgs struct {
	// The current role of the node.
	CurrentRole pulumi.StringInput `pulumi:"currentRole"`
	// The ID of node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// The status of redis instance to query.
	Status pulumi.StringInput `pulumi:"status"`
	// The zone id of redis instance to query. This field supports fuzzy queries.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceServerNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceServerNode)(nil)).Elem()
}

func (i GetInstancesInstanceServerNodeArgs) ToGetInstancesInstanceServerNodeOutput() GetInstancesInstanceServerNodeOutput {
	return i.ToGetInstancesInstanceServerNodeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceServerNodeArgs) ToGetInstancesInstanceServerNodeOutputWithContext(ctx context.Context) GetInstancesInstanceServerNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceServerNodeOutput)
}

// GetInstancesInstanceServerNodeArrayInput is an input type that accepts GetInstancesInstanceServerNodeArray and GetInstancesInstanceServerNodeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceServerNodeArrayInput` via:
//
//	GetInstancesInstanceServerNodeArray{ GetInstancesInstanceServerNodeArgs{...} }
type GetInstancesInstanceServerNodeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceServerNodeArrayOutput() GetInstancesInstanceServerNodeArrayOutput
	ToGetInstancesInstanceServerNodeArrayOutputWithContext(context.Context) GetInstancesInstanceServerNodeArrayOutput
}

type GetInstancesInstanceServerNodeArray []GetInstancesInstanceServerNodeInput

func (GetInstancesInstanceServerNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceServerNode)(nil)).Elem()
}

func (i GetInstancesInstanceServerNodeArray) ToGetInstancesInstanceServerNodeArrayOutput() GetInstancesInstanceServerNodeArrayOutput {
	return i.ToGetInstancesInstanceServerNodeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceServerNodeArray) ToGetInstancesInstanceServerNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceServerNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceServerNodeArrayOutput)
}

type GetInstancesInstanceServerNodeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceServerNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceServerNode)(nil)).Elem()
}

func (o GetInstancesInstanceServerNodeOutput) ToGetInstancesInstanceServerNodeOutput() GetInstancesInstanceServerNodeOutput {
	return o
}

func (o GetInstancesInstanceServerNodeOutput) ToGetInstancesInstanceServerNodeOutputWithContext(ctx context.Context) GetInstancesInstanceServerNodeOutput {
	return o
}

// The current role of the node.
func (o GetInstancesInstanceServerNodeOutput) CurrentRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceServerNode) string { return v.CurrentRole }).(pulumi.StringOutput)
}

// The ID of node.
func (o GetInstancesInstanceServerNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceServerNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// The status of redis instance to query.
func (o GetInstancesInstanceServerNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceServerNode) string { return v.Status }).(pulumi.StringOutput)
}

// The zone id of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceServerNodeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceServerNode) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstancesInstanceServerNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceServerNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceServerNode)(nil)).Elem()
}

func (o GetInstancesInstanceServerNodeArrayOutput) ToGetInstancesInstanceServerNodeArrayOutput() GetInstancesInstanceServerNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceServerNodeArrayOutput) ToGetInstancesInstanceServerNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceServerNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceServerNodeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceServerNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceServerNode {
		return vs[0].([]GetInstancesInstanceServerNode)[vs[1].(int)]
	}).(GetInstancesInstanceServerNodeOutput)
}

type GetInstancesInstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetInstancesInstanceTagInput is an input type that accepts GetInstancesInstanceTagArgs and GetInstancesInstanceTagOutput values.
// You can construct a concrete instance of `GetInstancesInstanceTagInput` via:
//
//	GetInstancesInstanceTagArgs{...}
type GetInstancesInstanceTagInput interface {
	pulumi.Input

	ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput
	ToGetInstancesInstanceTagOutputWithContext(context.Context) GetInstancesInstanceTagOutput
}

type GetInstancesInstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstancesInstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceTag)(nil)).Elem()
}

func (i GetInstancesInstanceTagArgs) ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput {
	return i.ToGetInstancesInstanceTagOutputWithContext(context.Background())
}

func (i GetInstancesInstanceTagArgs) ToGetInstancesInstanceTagOutputWithContext(ctx context.Context) GetInstancesInstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceTagOutput)
}

// GetInstancesInstanceTagArrayInput is an input type that accepts GetInstancesInstanceTagArray and GetInstancesInstanceTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceTagArrayInput` via:
//
//	GetInstancesInstanceTagArray{ GetInstancesInstanceTagArgs{...} }
type GetInstancesInstanceTagArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput
	ToGetInstancesInstanceTagArrayOutputWithContext(context.Context) GetInstancesInstanceTagArrayOutput
}

type GetInstancesInstanceTagArray []GetInstancesInstanceTagInput

func (GetInstancesInstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceTag)(nil)).Elem()
}

func (i GetInstancesInstanceTagArray) ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput {
	return i.ToGetInstancesInstanceTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceTagArray) ToGetInstancesInstanceTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceTagArrayOutput)
}

type GetInstancesInstanceTagOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceTag)(nil)).Elem()
}

func (o GetInstancesInstanceTagOutput) ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput {
	return o
}

func (o GetInstancesInstanceTagOutput) ToGetInstancesInstanceTagOutputWithContext(ctx context.Context) GetInstancesInstanceTagOutput {
	return o
}

// The Key of Tags.
func (o GetInstancesInstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetInstancesInstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstancesInstanceTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceTag)(nil)).Elem()
}

func (o GetInstancesInstanceTagArrayOutput) ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput {
	return o
}

func (o GetInstancesInstanceTagArrayOutput) ToGetInstancesInstanceTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceTagArrayOutput {
	return o
}

func (o GetInstancesInstanceTagArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceTag {
		return vs[0].([]GetInstancesInstanceTag)[vs[1].(int)]
	}).(GetInstancesInstanceTagOutput)
}

type GetInstancesInstanceVisitAddr struct {
	// The connection address type.
	AddrType string `pulumi:"addrType"`
	// The connection address.
	Address string `pulumi:"address"`
	// The EIP ID bound to the instance's public network address.
	EipId string `pulumi:"eipId"`
	// The connection port.
	Port string `pulumi:"port"`
	// The ipv4 address of the connection address.
	Vip string `pulumi:"vip"`
	// The ipv6 address of the connection address.
	VipV6 string `pulumi:"vipV6"`
}

// GetInstancesInstanceVisitAddrInput is an input type that accepts GetInstancesInstanceVisitAddrArgs and GetInstancesInstanceVisitAddrOutput values.
// You can construct a concrete instance of `GetInstancesInstanceVisitAddrInput` via:
//
//	GetInstancesInstanceVisitAddrArgs{...}
type GetInstancesInstanceVisitAddrInput interface {
	pulumi.Input

	ToGetInstancesInstanceVisitAddrOutput() GetInstancesInstanceVisitAddrOutput
	ToGetInstancesInstanceVisitAddrOutputWithContext(context.Context) GetInstancesInstanceVisitAddrOutput
}

type GetInstancesInstanceVisitAddrArgs struct {
	// The connection address type.
	AddrType pulumi.StringInput `pulumi:"addrType"`
	// The connection address.
	Address pulumi.StringInput `pulumi:"address"`
	// The EIP ID bound to the instance's public network address.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// The connection port.
	Port pulumi.StringInput `pulumi:"port"`
	// The ipv4 address of the connection address.
	Vip pulumi.StringInput `pulumi:"vip"`
	// The ipv6 address of the connection address.
	VipV6 pulumi.StringInput `pulumi:"vipV6"`
}

func (GetInstancesInstanceVisitAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceVisitAddr)(nil)).Elem()
}

func (i GetInstancesInstanceVisitAddrArgs) ToGetInstancesInstanceVisitAddrOutput() GetInstancesInstanceVisitAddrOutput {
	return i.ToGetInstancesInstanceVisitAddrOutputWithContext(context.Background())
}

func (i GetInstancesInstanceVisitAddrArgs) ToGetInstancesInstanceVisitAddrOutputWithContext(ctx context.Context) GetInstancesInstanceVisitAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceVisitAddrOutput)
}

// GetInstancesInstanceVisitAddrArrayInput is an input type that accepts GetInstancesInstanceVisitAddrArray and GetInstancesInstanceVisitAddrArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceVisitAddrArrayInput` via:
//
//	GetInstancesInstanceVisitAddrArray{ GetInstancesInstanceVisitAddrArgs{...} }
type GetInstancesInstanceVisitAddrArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceVisitAddrArrayOutput() GetInstancesInstanceVisitAddrArrayOutput
	ToGetInstancesInstanceVisitAddrArrayOutputWithContext(context.Context) GetInstancesInstanceVisitAddrArrayOutput
}

type GetInstancesInstanceVisitAddrArray []GetInstancesInstanceVisitAddrInput

func (GetInstancesInstanceVisitAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceVisitAddr)(nil)).Elem()
}

func (i GetInstancesInstanceVisitAddrArray) ToGetInstancesInstanceVisitAddrArrayOutput() GetInstancesInstanceVisitAddrArrayOutput {
	return i.ToGetInstancesInstanceVisitAddrArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceVisitAddrArray) ToGetInstancesInstanceVisitAddrArrayOutputWithContext(ctx context.Context) GetInstancesInstanceVisitAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceVisitAddrArrayOutput)
}

type GetInstancesInstanceVisitAddrOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceVisitAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceVisitAddr)(nil)).Elem()
}

func (o GetInstancesInstanceVisitAddrOutput) ToGetInstancesInstanceVisitAddrOutput() GetInstancesInstanceVisitAddrOutput {
	return o
}

func (o GetInstancesInstanceVisitAddrOutput) ToGetInstancesInstanceVisitAddrOutputWithContext(ctx context.Context) GetInstancesInstanceVisitAddrOutput {
	return o
}

// The connection address type.
func (o GetInstancesInstanceVisitAddrOutput) AddrType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.AddrType }).(pulumi.StringOutput)
}

// The connection address.
func (o GetInstancesInstanceVisitAddrOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.Address }).(pulumi.StringOutput)
}

// The EIP ID bound to the instance's public network address.
func (o GetInstancesInstanceVisitAddrOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.EipId }).(pulumi.StringOutput)
}

// The connection port.
func (o GetInstancesInstanceVisitAddrOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.Port }).(pulumi.StringOutput)
}

// The ipv4 address of the connection address.
func (o GetInstancesInstanceVisitAddrOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.Vip }).(pulumi.StringOutput)
}

// The ipv6 address of the connection address.
func (o GetInstancesInstanceVisitAddrOutput) VipV6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.VipV6 }).(pulumi.StringOutput)
}

type GetInstancesInstanceVisitAddrArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceVisitAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceVisitAddr)(nil)).Elem()
}

func (o GetInstancesInstanceVisitAddrArrayOutput) ToGetInstancesInstanceVisitAddrArrayOutput() GetInstancesInstanceVisitAddrArrayOutput {
	return o
}

func (o GetInstancesInstanceVisitAddrArrayOutput) ToGetInstancesInstanceVisitAddrArrayOutputWithContext(ctx context.Context) GetInstancesInstanceVisitAddrArrayOutput {
	return o
}

func (o GetInstancesInstanceVisitAddrArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceVisitAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceVisitAddr {
		return vs[0].([]GetInstancesInstanceVisitAddr)[vs[1].(int)]
	}).(GetInstancesInstanceVisitAddrOutput)
}

type GetInstancesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetInstancesTagInput is an input type that accepts GetInstancesTagArgs and GetInstancesTagOutput values.
// You can construct a concrete instance of `GetInstancesTagInput` via:
//
//	GetInstancesTagArgs{...}
type GetInstancesTagInput interface {
	pulumi.Input

	ToGetInstancesTagOutput() GetInstancesTagOutput
	ToGetInstancesTagOutputWithContext(context.Context) GetInstancesTagOutput
}

type GetInstancesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstancesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesTag)(nil)).Elem()
}

func (i GetInstancesTagArgs) ToGetInstancesTagOutput() GetInstancesTagOutput {
	return i.ToGetInstancesTagOutputWithContext(context.Background())
}

func (i GetInstancesTagArgs) ToGetInstancesTagOutputWithContext(ctx context.Context) GetInstancesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesTagOutput)
}

// GetInstancesTagArrayInput is an input type that accepts GetInstancesTagArray and GetInstancesTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesTagArrayInput` via:
//
//	GetInstancesTagArray{ GetInstancesTagArgs{...} }
type GetInstancesTagArrayInput interface {
	pulumi.Input

	ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput
	ToGetInstancesTagArrayOutputWithContext(context.Context) GetInstancesTagArrayOutput
}

type GetInstancesTagArray []GetInstancesTagInput

func (GetInstancesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesTag)(nil)).Elem()
}

func (i GetInstancesTagArray) ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput {
	return i.ToGetInstancesTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesTagArray) ToGetInstancesTagArrayOutputWithContext(ctx context.Context) GetInstancesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesTagArrayOutput)
}

type GetInstancesTagOutput struct{ *pulumi.OutputState }

func (GetInstancesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesTag)(nil)).Elem()
}

func (o GetInstancesTagOutput) ToGetInstancesTagOutput() GetInstancesTagOutput {
	return o
}

func (o GetInstancesTagOutput) ToGetInstancesTagOutputWithContext(ctx context.Context) GetInstancesTagOutput {
	return o
}

// The Key of Tags.
func (o GetInstancesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetInstancesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstancesTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesTag)(nil)).Elem()
}

func (o GetInstancesTagArrayOutput) ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput {
	return o
}

func (o GetInstancesTagArrayOutput) ToGetInstancesTagArrayOutputWithContext(ctx context.Context) GetInstancesTagArrayOutput {
	return o
}

func (o GetInstancesTagArrayOutput) Index(i pulumi.IntInput) GetInstancesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesTag {
		return vs[0].([]GetInstancesTag)[vs[1].(int)]
	}).(GetInstancesTagOutput)
}

type GetParameterGroupsParameterGroup struct {
	// The creation time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
	CreateTime string `pulumi:"createTime"`
	// Whether it is the default parameter template.
	Default bool `pulumi:"default"`
	// The description the Optional parameters.
	Description string `pulumi:"description"`
	// The Redis database version applicable to the parameter template.
	EngineVersion string `pulumi:"engineVersion"`
	// The name of the parameter template.
	Name string `pulumi:"name"`
	// The ID of the parameter template.
	ParameterGroupId string `pulumi:"parameterGroupId"`
	// The number of parameters contained in the parameter template.
	ParameterNum int `pulumi:"parameterNum"`
	// The list of parameter information contained in the parameter template.
	Parameters []GetParameterGroupsParameterGroupParameter `pulumi:"parameters"`
	// The source of creating the parameter template.
	Source string `pulumi:"source"`
	// The last update time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
	UpdateTime string `pulumi:"updateTime"`
}

// GetParameterGroupsParameterGroupInput is an input type that accepts GetParameterGroupsParameterGroupArgs and GetParameterGroupsParameterGroupOutput values.
// You can construct a concrete instance of `GetParameterGroupsParameterGroupInput` via:
//
//	GetParameterGroupsParameterGroupArgs{...}
type GetParameterGroupsParameterGroupInput interface {
	pulumi.Input

	ToGetParameterGroupsParameterGroupOutput() GetParameterGroupsParameterGroupOutput
	ToGetParameterGroupsParameterGroupOutputWithContext(context.Context) GetParameterGroupsParameterGroupOutput
}

type GetParameterGroupsParameterGroupArgs struct {
	// The creation time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Whether it is the default parameter template.
	Default pulumi.BoolInput `pulumi:"default"`
	// The description the Optional parameters.
	Description pulumi.StringInput `pulumi:"description"`
	// The Redis database version applicable to the parameter template.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// The name of the parameter template.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the parameter template.
	ParameterGroupId pulumi.StringInput `pulumi:"parameterGroupId"`
	// The number of parameters contained in the parameter template.
	ParameterNum pulumi.IntInput `pulumi:"parameterNum"`
	// The list of parameter information contained in the parameter template.
	Parameters GetParameterGroupsParameterGroupParameterArrayInput `pulumi:"parameters"`
	// The source of creating the parameter template.
	Source pulumi.StringInput `pulumi:"source"`
	// The last update time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetParameterGroupsParameterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterGroupsParameterGroup)(nil)).Elem()
}

func (i GetParameterGroupsParameterGroupArgs) ToGetParameterGroupsParameterGroupOutput() GetParameterGroupsParameterGroupOutput {
	return i.ToGetParameterGroupsParameterGroupOutputWithContext(context.Background())
}

func (i GetParameterGroupsParameterGroupArgs) ToGetParameterGroupsParameterGroupOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParameterGroupsParameterGroupOutput)
}

// GetParameterGroupsParameterGroupArrayInput is an input type that accepts GetParameterGroupsParameterGroupArray and GetParameterGroupsParameterGroupArrayOutput values.
// You can construct a concrete instance of `GetParameterGroupsParameterGroupArrayInput` via:
//
//	GetParameterGroupsParameterGroupArray{ GetParameterGroupsParameterGroupArgs{...} }
type GetParameterGroupsParameterGroupArrayInput interface {
	pulumi.Input

	ToGetParameterGroupsParameterGroupArrayOutput() GetParameterGroupsParameterGroupArrayOutput
	ToGetParameterGroupsParameterGroupArrayOutputWithContext(context.Context) GetParameterGroupsParameterGroupArrayOutput
}

type GetParameterGroupsParameterGroupArray []GetParameterGroupsParameterGroupInput

func (GetParameterGroupsParameterGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParameterGroupsParameterGroup)(nil)).Elem()
}

func (i GetParameterGroupsParameterGroupArray) ToGetParameterGroupsParameterGroupArrayOutput() GetParameterGroupsParameterGroupArrayOutput {
	return i.ToGetParameterGroupsParameterGroupArrayOutputWithContext(context.Background())
}

func (i GetParameterGroupsParameterGroupArray) ToGetParameterGroupsParameterGroupArrayOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParameterGroupsParameterGroupArrayOutput)
}

type GetParameterGroupsParameterGroupOutput struct{ *pulumi.OutputState }

func (GetParameterGroupsParameterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterGroupsParameterGroup)(nil)).Elem()
}

func (o GetParameterGroupsParameterGroupOutput) ToGetParameterGroupsParameterGroupOutput() GetParameterGroupsParameterGroupOutput {
	return o
}

func (o GetParameterGroupsParameterGroupOutput) ToGetParameterGroupsParameterGroupOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupOutput {
	return o
}

// The creation time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
func (o GetParameterGroupsParameterGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether it is the default parameter template.
func (o GetParameterGroupsParameterGroupOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) bool { return v.Default }).(pulumi.BoolOutput)
}

// The description the Optional parameters.
func (o GetParameterGroupsParameterGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The Redis database version applicable to the parameter template.
func (o GetParameterGroupsParameterGroupOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The name of the parameter template.
func (o GetParameterGroupsParameterGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the parameter template.
func (o GetParameterGroupsParameterGroupOutput) ParameterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) string { return v.ParameterGroupId }).(pulumi.StringOutput)
}

// The number of parameters contained in the parameter template.
func (o GetParameterGroupsParameterGroupOutput) ParameterNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) int { return v.ParameterNum }).(pulumi.IntOutput)
}

// The list of parameter information contained in the parameter template.
func (o GetParameterGroupsParameterGroupOutput) Parameters() GetParameterGroupsParameterGroupParameterArrayOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) []GetParameterGroupsParameterGroupParameter {
		return v.Parameters
	}).(GetParameterGroupsParameterGroupParameterArrayOutput)
}

// The source of creating the parameter template.
func (o GetParameterGroupsParameterGroupOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) string { return v.Source }).(pulumi.StringOutput)
}

// The last update time of the parameter template, in the format of yyyy-MM-ddTHH:mm:ssZ (UTC).
func (o GetParameterGroupsParameterGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroup) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetParameterGroupsParameterGroupArrayOutput struct{ *pulumi.OutputState }

func (GetParameterGroupsParameterGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParameterGroupsParameterGroup)(nil)).Elem()
}

func (o GetParameterGroupsParameterGroupArrayOutput) ToGetParameterGroupsParameterGroupArrayOutput() GetParameterGroupsParameterGroupArrayOutput {
	return o
}

func (o GetParameterGroupsParameterGroupArrayOutput) ToGetParameterGroupsParameterGroupArrayOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupArrayOutput {
	return o
}

func (o GetParameterGroupsParameterGroupArrayOutput) Index(i pulumi.IntInput) GetParameterGroupsParameterGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetParameterGroupsParameterGroup {
		return vs[0].([]GetParameterGroupsParameterGroup)[vs[1].(int)]
	}).(GetParameterGroupsParameterGroupOutput)
}

type GetParameterGroupsParameterGroupParameter struct {
	// The current running value of the parameter.
	CurrentValue string `pulumi:"currentValue"`
	// The description the Optional parameters.
	Description string `pulumi:"description"`
	// Whether to restart the instance to take effect after modifying this parameter.
	NeedReboot bool `pulumi:"needReboot"`
	// The optional list of selector type parameters.
	Options []GetParameterGroupsParameterGroupParameterOption `pulumi:"options"`
	// The name of parameter.
	ParamName string `pulumi:"paramName"`
	// The value range of numerical type parameters.
	Range string `pulumi:"range"`
	// The type of the parameter.
	Type string `pulumi:"type"`
	// The unit of the numerical type parameter.
	Unit string `pulumi:"unit"`
}

// GetParameterGroupsParameterGroupParameterInput is an input type that accepts GetParameterGroupsParameterGroupParameterArgs and GetParameterGroupsParameterGroupParameterOutput values.
// You can construct a concrete instance of `GetParameterGroupsParameterGroupParameterInput` via:
//
//	GetParameterGroupsParameterGroupParameterArgs{...}
type GetParameterGroupsParameterGroupParameterInput interface {
	pulumi.Input

	ToGetParameterGroupsParameterGroupParameterOutput() GetParameterGroupsParameterGroupParameterOutput
	ToGetParameterGroupsParameterGroupParameterOutputWithContext(context.Context) GetParameterGroupsParameterGroupParameterOutput
}

type GetParameterGroupsParameterGroupParameterArgs struct {
	// The current running value of the parameter.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// The description the Optional parameters.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether to restart the instance to take effect after modifying this parameter.
	NeedReboot pulumi.BoolInput `pulumi:"needReboot"`
	// The optional list of selector type parameters.
	Options GetParameterGroupsParameterGroupParameterOptionArrayInput `pulumi:"options"`
	// The name of parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The value range of numerical type parameters.
	Range pulumi.StringInput `pulumi:"range"`
	// The type of the parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The unit of the numerical type parameter.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetParameterGroupsParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterGroupsParameterGroupParameter)(nil)).Elem()
}

func (i GetParameterGroupsParameterGroupParameterArgs) ToGetParameterGroupsParameterGroupParameterOutput() GetParameterGroupsParameterGroupParameterOutput {
	return i.ToGetParameterGroupsParameterGroupParameterOutputWithContext(context.Background())
}

func (i GetParameterGroupsParameterGroupParameterArgs) ToGetParameterGroupsParameterGroupParameterOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParameterGroupsParameterGroupParameterOutput)
}

// GetParameterGroupsParameterGroupParameterArrayInput is an input type that accepts GetParameterGroupsParameterGroupParameterArray and GetParameterGroupsParameterGroupParameterArrayOutput values.
// You can construct a concrete instance of `GetParameterGroupsParameterGroupParameterArrayInput` via:
//
//	GetParameterGroupsParameterGroupParameterArray{ GetParameterGroupsParameterGroupParameterArgs{...} }
type GetParameterGroupsParameterGroupParameterArrayInput interface {
	pulumi.Input

	ToGetParameterGroupsParameterGroupParameterArrayOutput() GetParameterGroupsParameterGroupParameterArrayOutput
	ToGetParameterGroupsParameterGroupParameterArrayOutputWithContext(context.Context) GetParameterGroupsParameterGroupParameterArrayOutput
}

type GetParameterGroupsParameterGroupParameterArray []GetParameterGroupsParameterGroupParameterInput

func (GetParameterGroupsParameterGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParameterGroupsParameterGroupParameter)(nil)).Elem()
}

func (i GetParameterGroupsParameterGroupParameterArray) ToGetParameterGroupsParameterGroupParameterArrayOutput() GetParameterGroupsParameterGroupParameterArrayOutput {
	return i.ToGetParameterGroupsParameterGroupParameterArrayOutputWithContext(context.Background())
}

func (i GetParameterGroupsParameterGroupParameterArray) ToGetParameterGroupsParameterGroupParameterArrayOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParameterGroupsParameterGroupParameterArrayOutput)
}

type GetParameterGroupsParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (GetParameterGroupsParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterGroupsParameterGroupParameter)(nil)).Elem()
}

func (o GetParameterGroupsParameterGroupParameterOutput) ToGetParameterGroupsParameterGroupParameterOutput() GetParameterGroupsParameterGroupParameterOutput {
	return o
}

func (o GetParameterGroupsParameterGroupParameterOutput) ToGetParameterGroupsParameterGroupParameterOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupParameterOutput {
	return o
}

// The current running value of the parameter.
func (o GetParameterGroupsParameterGroupParameterOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameter) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// The description the Optional parameters.
func (o GetParameterGroupsParameterGroupParameterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameter) string { return v.Description }).(pulumi.StringOutput)
}

// Whether to restart the instance to take effect after modifying this parameter.
func (o GetParameterGroupsParameterGroupParameterOutput) NeedReboot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameter) bool { return v.NeedReboot }).(pulumi.BoolOutput)
}

// The optional list of selector type parameters.
func (o GetParameterGroupsParameterGroupParameterOutput) Options() GetParameterGroupsParameterGroupParameterOptionArrayOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameter) []GetParameterGroupsParameterGroupParameterOption {
		return v.Options
	}).(GetParameterGroupsParameterGroupParameterOptionArrayOutput)
}

// The name of parameter.
func (o GetParameterGroupsParameterGroupParameterOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameter) string { return v.ParamName }).(pulumi.StringOutput)
}

// The value range of numerical type parameters.
func (o GetParameterGroupsParameterGroupParameterOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameter) string { return v.Range }).(pulumi.StringOutput)
}

// The type of the parameter.
func (o GetParameterGroupsParameterGroupParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The unit of the numerical type parameter.
func (o GetParameterGroupsParameterGroupParameterOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameter) string { return v.Unit }).(pulumi.StringOutput)
}

type GetParameterGroupsParameterGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (GetParameterGroupsParameterGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParameterGroupsParameterGroupParameter)(nil)).Elem()
}

func (o GetParameterGroupsParameterGroupParameterArrayOutput) ToGetParameterGroupsParameterGroupParameterArrayOutput() GetParameterGroupsParameterGroupParameterArrayOutput {
	return o
}

func (o GetParameterGroupsParameterGroupParameterArrayOutput) ToGetParameterGroupsParameterGroupParameterArrayOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupParameterArrayOutput {
	return o
}

func (o GetParameterGroupsParameterGroupParameterArrayOutput) Index(i pulumi.IntInput) GetParameterGroupsParameterGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetParameterGroupsParameterGroupParameter {
		return vs[0].([]GetParameterGroupsParameterGroupParameter)[vs[1].(int)]
	}).(GetParameterGroupsParameterGroupParameterOutput)
}

type GetParameterGroupsParameterGroupParameterOption struct {
	// The description the Optional parameters.
	Description string `pulumi:"description"`
	// Optional selector type parameters.
	Value string `pulumi:"value"`
}

// GetParameterGroupsParameterGroupParameterOptionInput is an input type that accepts GetParameterGroupsParameterGroupParameterOptionArgs and GetParameterGroupsParameterGroupParameterOptionOutput values.
// You can construct a concrete instance of `GetParameterGroupsParameterGroupParameterOptionInput` via:
//
//	GetParameterGroupsParameterGroupParameterOptionArgs{...}
type GetParameterGroupsParameterGroupParameterOptionInput interface {
	pulumi.Input

	ToGetParameterGroupsParameterGroupParameterOptionOutput() GetParameterGroupsParameterGroupParameterOptionOutput
	ToGetParameterGroupsParameterGroupParameterOptionOutputWithContext(context.Context) GetParameterGroupsParameterGroupParameterOptionOutput
}

type GetParameterGroupsParameterGroupParameterOptionArgs struct {
	// The description the Optional parameters.
	Description pulumi.StringInput `pulumi:"description"`
	// Optional selector type parameters.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetParameterGroupsParameterGroupParameterOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterGroupsParameterGroupParameterOption)(nil)).Elem()
}

func (i GetParameterGroupsParameterGroupParameterOptionArgs) ToGetParameterGroupsParameterGroupParameterOptionOutput() GetParameterGroupsParameterGroupParameterOptionOutput {
	return i.ToGetParameterGroupsParameterGroupParameterOptionOutputWithContext(context.Background())
}

func (i GetParameterGroupsParameterGroupParameterOptionArgs) ToGetParameterGroupsParameterGroupParameterOptionOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupParameterOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParameterGroupsParameterGroupParameterOptionOutput)
}

// GetParameterGroupsParameterGroupParameterOptionArrayInput is an input type that accepts GetParameterGroupsParameterGroupParameterOptionArray and GetParameterGroupsParameterGroupParameterOptionArrayOutput values.
// You can construct a concrete instance of `GetParameterGroupsParameterGroupParameterOptionArrayInput` via:
//
//	GetParameterGroupsParameterGroupParameterOptionArray{ GetParameterGroupsParameterGroupParameterOptionArgs{...} }
type GetParameterGroupsParameterGroupParameterOptionArrayInput interface {
	pulumi.Input

	ToGetParameterGroupsParameterGroupParameterOptionArrayOutput() GetParameterGroupsParameterGroupParameterOptionArrayOutput
	ToGetParameterGroupsParameterGroupParameterOptionArrayOutputWithContext(context.Context) GetParameterGroupsParameterGroupParameterOptionArrayOutput
}

type GetParameterGroupsParameterGroupParameterOptionArray []GetParameterGroupsParameterGroupParameterOptionInput

func (GetParameterGroupsParameterGroupParameterOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParameterGroupsParameterGroupParameterOption)(nil)).Elem()
}

func (i GetParameterGroupsParameterGroupParameterOptionArray) ToGetParameterGroupsParameterGroupParameterOptionArrayOutput() GetParameterGroupsParameterGroupParameterOptionArrayOutput {
	return i.ToGetParameterGroupsParameterGroupParameterOptionArrayOutputWithContext(context.Background())
}

func (i GetParameterGroupsParameterGroupParameterOptionArray) ToGetParameterGroupsParameterGroupParameterOptionArrayOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupParameterOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetParameterGroupsParameterGroupParameterOptionArrayOutput)
}

type GetParameterGroupsParameterGroupParameterOptionOutput struct{ *pulumi.OutputState }

func (GetParameterGroupsParameterGroupParameterOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterGroupsParameterGroupParameterOption)(nil)).Elem()
}

func (o GetParameterGroupsParameterGroupParameterOptionOutput) ToGetParameterGroupsParameterGroupParameterOptionOutput() GetParameterGroupsParameterGroupParameterOptionOutput {
	return o
}

func (o GetParameterGroupsParameterGroupParameterOptionOutput) ToGetParameterGroupsParameterGroupParameterOptionOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupParameterOptionOutput {
	return o
}

// The description the Optional parameters.
func (o GetParameterGroupsParameterGroupParameterOptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameterOption) string { return v.Description }).(pulumi.StringOutput)
}

// Optional selector type parameters.
func (o GetParameterGroupsParameterGroupParameterOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsParameterGroupParameterOption) string { return v.Value }).(pulumi.StringOutput)
}

type GetParameterGroupsParameterGroupParameterOptionArrayOutput struct{ *pulumi.OutputState }

func (GetParameterGroupsParameterGroupParameterOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetParameterGroupsParameterGroupParameterOption)(nil)).Elem()
}

func (o GetParameterGroupsParameterGroupParameterOptionArrayOutput) ToGetParameterGroupsParameterGroupParameterOptionArrayOutput() GetParameterGroupsParameterGroupParameterOptionArrayOutput {
	return o
}

func (o GetParameterGroupsParameterGroupParameterOptionArrayOutput) ToGetParameterGroupsParameterGroupParameterOptionArrayOutputWithContext(ctx context.Context) GetParameterGroupsParameterGroupParameterOptionArrayOutput {
	return o
}

func (o GetParameterGroupsParameterGroupParameterOptionArrayOutput) Index(i pulumi.IntInput) GetParameterGroupsParameterGroupParameterOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetParameterGroupsParameterGroupParameterOption {
		return vs[0].([]GetParameterGroupsParameterGroupParameterOption)[vs[1].(int)]
	}).(GetParameterGroupsParameterGroupParameterOptionOutput)
}

type GetPitrTimeWindowsPeriod struct {
	// Recoverable end time (UTC time) supported when restoring data by point in time.
	EndTime string `pulumi:"endTime"`
	// The instance id.
	InstanceId string `pulumi:"instanceId"`
	// The recoverable start time (in UTC time) supported when restoring data by point in time.
	StartTime string `pulumi:"startTime"`
}

// GetPitrTimeWindowsPeriodInput is an input type that accepts GetPitrTimeWindowsPeriodArgs and GetPitrTimeWindowsPeriodOutput values.
// You can construct a concrete instance of `GetPitrTimeWindowsPeriodInput` via:
//
//	GetPitrTimeWindowsPeriodArgs{...}
type GetPitrTimeWindowsPeriodInput interface {
	pulumi.Input

	ToGetPitrTimeWindowsPeriodOutput() GetPitrTimeWindowsPeriodOutput
	ToGetPitrTimeWindowsPeriodOutputWithContext(context.Context) GetPitrTimeWindowsPeriodOutput
}

type GetPitrTimeWindowsPeriodArgs struct {
	// Recoverable end time (UTC time) supported when restoring data by point in time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The recoverable start time (in UTC time) supported when restoring data by point in time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetPitrTimeWindowsPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPitrTimeWindowsPeriod)(nil)).Elem()
}

func (i GetPitrTimeWindowsPeriodArgs) ToGetPitrTimeWindowsPeriodOutput() GetPitrTimeWindowsPeriodOutput {
	return i.ToGetPitrTimeWindowsPeriodOutputWithContext(context.Background())
}

func (i GetPitrTimeWindowsPeriodArgs) ToGetPitrTimeWindowsPeriodOutputWithContext(ctx context.Context) GetPitrTimeWindowsPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPitrTimeWindowsPeriodOutput)
}

// GetPitrTimeWindowsPeriodArrayInput is an input type that accepts GetPitrTimeWindowsPeriodArray and GetPitrTimeWindowsPeriodArrayOutput values.
// You can construct a concrete instance of `GetPitrTimeWindowsPeriodArrayInput` via:
//
//	GetPitrTimeWindowsPeriodArray{ GetPitrTimeWindowsPeriodArgs{...} }
type GetPitrTimeWindowsPeriodArrayInput interface {
	pulumi.Input

	ToGetPitrTimeWindowsPeriodArrayOutput() GetPitrTimeWindowsPeriodArrayOutput
	ToGetPitrTimeWindowsPeriodArrayOutputWithContext(context.Context) GetPitrTimeWindowsPeriodArrayOutput
}

type GetPitrTimeWindowsPeriodArray []GetPitrTimeWindowsPeriodInput

func (GetPitrTimeWindowsPeriodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPitrTimeWindowsPeriod)(nil)).Elem()
}

func (i GetPitrTimeWindowsPeriodArray) ToGetPitrTimeWindowsPeriodArrayOutput() GetPitrTimeWindowsPeriodArrayOutput {
	return i.ToGetPitrTimeWindowsPeriodArrayOutputWithContext(context.Background())
}

func (i GetPitrTimeWindowsPeriodArray) ToGetPitrTimeWindowsPeriodArrayOutputWithContext(ctx context.Context) GetPitrTimeWindowsPeriodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPitrTimeWindowsPeriodArrayOutput)
}

type GetPitrTimeWindowsPeriodOutput struct{ *pulumi.OutputState }

func (GetPitrTimeWindowsPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPitrTimeWindowsPeriod)(nil)).Elem()
}

func (o GetPitrTimeWindowsPeriodOutput) ToGetPitrTimeWindowsPeriodOutput() GetPitrTimeWindowsPeriodOutput {
	return o
}

func (o GetPitrTimeWindowsPeriodOutput) ToGetPitrTimeWindowsPeriodOutputWithContext(ctx context.Context) GetPitrTimeWindowsPeriodOutput {
	return o
}

// Recoverable end time (UTC time) supported when restoring data by point in time.
func (o GetPitrTimeWindowsPeriodOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPitrTimeWindowsPeriod) string { return v.EndTime }).(pulumi.StringOutput)
}

// The instance id.
func (o GetPitrTimeWindowsPeriodOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPitrTimeWindowsPeriod) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The recoverable start time (in UTC time) supported when restoring data by point in time.
func (o GetPitrTimeWindowsPeriodOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPitrTimeWindowsPeriod) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetPitrTimeWindowsPeriodArrayOutput struct{ *pulumi.OutputState }

func (GetPitrTimeWindowsPeriodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPitrTimeWindowsPeriod)(nil)).Elem()
}

func (o GetPitrTimeWindowsPeriodArrayOutput) ToGetPitrTimeWindowsPeriodArrayOutput() GetPitrTimeWindowsPeriodArrayOutput {
	return o
}

func (o GetPitrTimeWindowsPeriodArrayOutput) ToGetPitrTimeWindowsPeriodArrayOutputWithContext(ctx context.Context) GetPitrTimeWindowsPeriodArrayOutput {
	return o
}

func (o GetPitrTimeWindowsPeriodArrayOutput) Index(i pulumi.IntInput) GetPitrTimeWindowsPeriodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPitrTimeWindowsPeriod {
		return vs[0].([]GetPitrTimeWindowsPeriod)[vs[1].(int)]
	}).(GetPitrTimeWindowsPeriodOutput)
}

type GetPlannedEventsPlannedEvent struct {
	// Event operation name.
	ActionName string `pulumi:"actionName"`
	// Whether the current event is allowed to be cancelled for execution.
	CanCancel bool `pulumi:"canCancel"`
	// Whether the execution time of the current event can be changed.
	CanModifyTime bool `pulumi:"canModifyTime"`
	// The ID of Event.
	EventId string `pulumi:"eventId"`
	// The ID of instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The latest execution time at which changes are allowed for the current event.
	MaxEndTime string `pulumi:"maxEndTime"`
	// The latest execution time of the event plan. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
	PlanEndTime string `pulumi:"planEndTime"`
	// The earliest planned execution time of the event. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
	PlanStartTime string `pulumi:"planStartTime"`
	// The status of event.
	Status string `pulumi:"status"`
	// The type of event.
	Type string `pulumi:"type"`
}

// GetPlannedEventsPlannedEventInput is an input type that accepts GetPlannedEventsPlannedEventArgs and GetPlannedEventsPlannedEventOutput values.
// You can construct a concrete instance of `GetPlannedEventsPlannedEventInput` via:
//
//	GetPlannedEventsPlannedEventArgs{...}
type GetPlannedEventsPlannedEventInput interface {
	pulumi.Input

	ToGetPlannedEventsPlannedEventOutput() GetPlannedEventsPlannedEventOutput
	ToGetPlannedEventsPlannedEventOutputWithContext(context.Context) GetPlannedEventsPlannedEventOutput
}

type GetPlannedEventsPlannedEventArgs struct {
	// Event operation name.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// Whether the current event is allowed to be cancelled for execution.
	CanCancel pulumi.BoolInput `pulumi:"canCancel"`
	// Whether the execution time of the current event can be changed.
	CanModifyTime pulumi.BoolInput `pulumi:"canModifyTime"`
	// The ID of Event.
	EventId pulumi.StringInput `pulumi:"eventId"`
	// The ID of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The latest execution time at which changes are allowed for the current event.
	MaxEndTime pulumi.StringInput `pulumi:"maxEndTime"`
	// The latest execution time of the event plan. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
	PlanEndTime pulumi.StringInput `pulumi:"planEndTime"`
	// The earliest planned execution time of the event. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
	PlanStartTime pulumi.StringInput `pulumi:"planStartTime"`
	// The status of event.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of event.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPlannedEventsPlannedEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlannedEventsPlannedEvent)(nil)).Elem()
}

func (i GetPlannedEventsPlannedEventArgs) ToGetPlannedEventsPlannedEventOutput() GetPlannedEventsPlannedEventOutput {
	return i.ToGetPlannedEventsPlannedEventOutputWithContext(context.Background())
}

func (i GetPlannedEventsPlannedEventArgs) ToGetPlannedEventsPlannedEventOutputWithContext(ctx context.Context) GetPlannedEventsPlannedEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlannedEventsPlannedEventOutput)
}

// GetPlannedEventsPlannedEventArrayInput is an input type that accepts GetPlannedEventsPlannedEventArray and GetPlannedEventsPlannedEventArrayOutput values.
// You can construct a concrete instance of `GetPlannedEventsPlannedEventArrayInput` via:
//
//	GetPlannedEventsPlannedEventArray{ GetPlannedEventsPlannedEventArgs{...} }
type GetPlannedEventsPlannedEventArrayInput interface {
	pulumi.Input

	ToGetPlannedEventsPlannedEventArrayOutput() GetPlannedEventsPlannedEventArrayOutput
	ToGetPlannedEventsPlannedEventArrayOutputWithContext(context.Context) GetPlannedEventsPlannedEventArrayOutput
}

type GetPlannedEventsPlannedEventArray []GetPlannedEventsPlannedEventInput

func (GetPlannedEventsPlannedEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlannedEventsPlannedEvent)(nil)).Elem()
}

func (i GetPlannedEventsPlannedEventArray) ToGetPlannedEventsPlannedEventArrayOutput() GetPlannedEventsPlannedEventArrayOutput {
	return i.ToGetPlannedEventsPlannedEventArrayOutputWithContext(context.Background())
}

func (i GetPlannedEventsPlannedEventArray) ToGetPlannedEventsPlannedEventArrayOutputWithContext(ctx context.Context) GetPlannedEventsPlannedEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlannedEventsPlannedEventArrayOutput)
}

type GetPlannedEventsPlannedEventOutput struct{ *pulumi.OutputState }

func (GetPlannedEventsPlannedEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlannedEventsPlannedEvent)(nil)).Elem()
}

func (o GetPlannedEventsPlannedEventOutput) ToGetPlannedEventsPlannedEventOutput() GetPlannedEventsPlannedEventOutput {
	return o
}

func (o GetPlannedEventsPlannedEventOutput) ToGetPlannedEventsPlannedEventOutputWithContext(ctx context.Context) GetPlannedEventsPlannedEventOutput {
	return o
}

// Event operation name.
func (o GetPlannedEventsPlannedEventOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.ActionName }).(pulumi.StringOutput)
}

// Whether the current event is allowed to be cancelled for execution.
func (o GetPlannedEventsPlannedEventOutput) CanCancel() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) bool { return v.CanCancel }).(pulumi.BoolOutput)
}

// Whether the execution time of the current event can be changed.
func (o GetPlannedEventsPlannedEventOutput) CanModifyTime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) bool { return v.CanModifyTime }).(pulumi.BoolOutput)
}

// The ID of Event.
func (o GetPlannedEventsPlannedEventOutput) EventId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.EventId }).(pulumi.StringOutput)
}

// The ID of instance.
func (o GetPlannedEventsPlannedEventOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of instance.
func (o GetPlannedEventsPlannedEventOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The latest execution time at which changes are allowed for the current event.
func (o GetPlannedEventsPlannedEventOutput) MaxEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.MaxEndTime }).(pulumi.StringOutput)
}

// The latest execution time of the event plan. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
func (o GetPlannedEventsPlannedEventOutput) PlanEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.PlanEndTime }).(pulumi.StringOutput)
}

// The earliest planned execution time of the event. The format is yyyy-MM-ddTHH:mm:ssZ (UTC).
func (o GetPlannedEventsPlannedEventOutput) PlanStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.PlanStartTime }).(pulumi.StringOutput)
}

// The status of event.
func (o GetPlannedEventsPlannedEventOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.Status }).(pulumi.StringOutput)
}

// The type of event.
func (o GetPlannedEventsPlannedEventOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlannedEventsPlannedEvent) string { return v.Type }).(pulumi.StringOutput)
}

type GetPlannedEventsPlannedEventArrayOutput struct{ *pulumi.OutputState }

func (GetPlannedEventsPlannedEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlannedEventsPlannedEvent)(nil)).Elem()
}

func (o GetPlannedEventsPlannedEventArrayOutput) ToGetPlannedEventsPlannedEventArrayOutput() GetPlannedEventsPlannedEventArrayOutput {
	return o
}

func (o GetPlannedEventsPlannedEventArrayOutput) ToGetPlannedEventsPlannedEventArrayOutputWithContext(ctx context.Context) GetPlannedEventsPlannedEventArrayOutput {
	return o
}

func (o GetPlannedEventsPlannedEventArrayOutput) Index(i pulumi.IntInput) GetPlannedEventsPlannedEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPlannedEventsPlannedEvent {
		return vs[0].([]GetPlannedEventsPlannedEvent)[vs[1].(int)]
	}).(GetPlannedEventsPlannedEventOutput)
}

type GetRegionsRegion struct {
	// Target region info.
	RegionId string `pulumi:"regionId"`
	// The name of region.
	RegionName string `pulumi:"regionName"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//	GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// Target region info.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The name of region.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//	GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// Target region info.
func (o GetRegionsRegionOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionId }).(pulumi.StringOutput)
}

// The name of region.
func (o GetRegionsRegionOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetZonesZone struct {
	// The id of the zone.
	Id string `pulumi:"id"`
	// The id of the zone.
	ZoneId string `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName string `pulumi:"zoneName"`
	// The status of the zone.
	ZoneStatus int `pulumi:"zoneStatus"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//	GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// The id of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
	// The status of the zone.
	ZoneStatus pulumi.IntInput `pulumi:"zoneStatus"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//	GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// The id of the zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the zone.
func (o GetZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The name of the zone.
func (o GetZonesZoneOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneName }).(pulumi.StringOutput)
}

// The status of the zone.
func (o GetZonesZoneOutput) ZoneStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetZonesZone) int { return v.ZoneStatus }).(pulumi.IntOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountInput)(nil)).Elem(), AccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountArrayInput)(nil)).Elem(), AccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListAssociatedInstanceInput)(nil)).Elem(), AllowListAssociatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListAssociatedInstanceArrayInput)(nil)).Elem(), AllowListAssociatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListSecurityGroupBindInfoInput)(nil)).Elem(), AllowListSecurityGroupBindInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListSecurityGroupBindInfoArrayInput)(nil)).Elem(), AllowListSecurityGroupBindInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListInput)(nil)).Elem(), AllowListsAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListArrayInput)(nil)).Elem(), AllowListsAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListAssociatedInstanceInput)(nil)).Elem(), AllowListsAllowListAssociatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListAssociatedInstanceArrayInput)(nil)).Elem(), AllowListsAllowListAssociatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListSecurityGroupBindInfoInput)(nil)).Elem(), AllowListsAllowListSecurityGroupBindInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListSecurityGroupBindInfoArrayInput)(nil)).Elem(), AllowListsAllowListSecurityGroupBindInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupBackupPointDownloadUrlInput)(nil)).Elem(), BackupBackupPointDownloadUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupBackupPointDownloadUrlArrayInput)(nil)).Elem(), BackupBackupPointDownloadUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstanceInfoInput)(nil)).Elem(), BackupInstanceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstanceInfoArrayInput)(nil)).Elem(), BackupInstanceInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInput)(nil)).Elem(), BackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupArrayInput)(nil)).Elem(), BackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupBackupPointDownloadUrlInput)(nil)).Elem(), BackupsBackupBackupPointDownloadUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupBackupPointDownloadUrlArrayInput)(nil)).Elem(), BackupsBackupBackupPointDownloadUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceDetailInput)(nil)).Elem(), BackupsBackupInstanceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceDetailArrayInput)(nil)).Elem(), BackupsBackupInstanceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceDetailVpcInfoInput)(nil)).Elem(), BackupsBackupInstanceDetailVpcInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceDetailVpcInfoArrayInput)(nil)).Elem(), BackupsBackupInstanceDetailVpcInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceInfoInput)(nil)).Elem(), BackupsBackupInstanceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceInfoArrayInput)(nil)).Elem(), BackupsBackupInstanceInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BigKeysBigKeyInput)(nil)).Elem(), BigKeysBigKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BigKeysBigKeyArrayInput)(nil)).Elem(), BigKeysBigKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigureNodeInput)(nil)).Elem(), InstanceConfigureNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigureNodeArrayInput)(nil)).Elem(), InstanceConfigureNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParamValueInput)(nil)).Elem(), InstanceParamValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParamValueArrayInput)(nil)).Elem(), InstanceParamValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSpecsInstanceSpecInput)(nil)).Elem(), InstanceSpecsInstanceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSpecsInstanceSpecArrayInput)(nil)).Elem(), InstanceSpecsInstanceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSpecsInstanceSpecShardCapacitySpecInput)(nil)).Elem(), InstanceSpecsInstanceSpecShardCapacitySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSpecsInstanceSpecShardCapacitySpecArrayInput)(nil)).Elem(), InstanceSpecsInstanceSpecShardCapacitySpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagInput)(nil)).Elem(), InstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagArrayInput)(nil)).Elem(), InstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceInput)(nil)).Elem(), InstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceArrayInput)(nil)).Elem(), InstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceBackupPlanInput)(nil)).Elem(), InstancesInstanceBackupPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceCapacityInput)(nil)).Elem(), InstancesInstanceCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceConfigureNodeInput)(nil)).Elem(), InstancesInstanceConfigureNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceConfigureNodeArrayInput)(nil)).Elem(), InstancesInstanceConfigureNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceInstanceShardInput)(nil)).Elem(), InstancesInstanceInstanceShardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceInstanceShardArrayInput)(nil)).Elem(), InstancesInstanceInstanceShardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceInstanceShardServerNodeInput)(nil)).Elem(), InstancesInstanceInstanceShardServerNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceInstanceShardServerNodeArrayInput)(nil)).Elem(), InstancesInstanceInstanceShardServerNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceParamInput)(nil)).Elem(), InstancesInstanceParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceParamArrayInput)(nil)).Elem(), InstancesInstanceParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceParamOptionInput)(nil)).Elem(), InstancesInstanceParamOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceParamOptionArrayInput)(nil)).Elem(), InstancesInstanceParamOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceServerNodeInput)(nil)).Elem(), InstancesInstanceServerNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceServerNodeArrayInput)(nil)).Elem(), InstancesInstanceServerNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceTagInput)(nil)).Elem(), InstancesInstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceTagArrayInput)(nil)).Elem(), InstancesInstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceVisitAddrInput)(nil)).Elem(), InstancesInstanceVisitAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceVisitAddrArrayInput)(nil)).Elem(), InstancesInstanceVisitAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTagInput)(nil)).Elem(), InstancesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTagArrayInput)(nil)).Elem(), InstancesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupParamValueInput)(nil)).Elem(), ParameterGroupParamValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupParamValueArrayInput)(nil)).Elem(), ParameterGroupParamValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupsParameterGroupInput)(nil)).Elem(), ParameterGroupsParameterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupsParameterGroupArrayInput)(nil)).Elem(), ParameterGroupsParameterGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupsParameterGroupParameterInput)(nil)).Elem(), ParameterGroupsParameterGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupsParameterGroupParameterArrayInput)(nil)).Elem(), ParameterGroupsParameterGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupsParameterGroupParameterOptionInput)(nil)).Elem(), ParameterGroupsParameterGroupParameterOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupsParameterGroupParameterOptionArrayInput)(nil)).Elem(), ParameterGroupsParameterGroupParameterOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PitrTimeWindowsPeriodInput)(nil)).Elem(), PitrTimeWindowsPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PitrTimeWindowsPeriodArrayInput)(nil)).Elem(), PitrTimeWindowsPeriodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlannedEventsPlannedEventInput)(nil)).Elem(), PlannedEventsPlannedEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlannedEventsPlannedEventArrayInput)(nil)).Elem(), PlannedEventsPlannedEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionsRegionInput)(nil)).Elem(), RegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionsRegionArrayInput)(nil)).Elem(), RegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesZoneInput)(nil)).Elem(), ZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesZoneArrayInput)(nil)).Elem(), ZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountInput)(nil)).Elem(), GetAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountArrayInput)(nil)).Elem(), GetAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListInput)(nil)).Elem(), GetAllowListsAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListArrayInput)(nil)).Elem(), GetAllowListsAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListAssociatedInstanceInput)(nil)).Elem(), GetAllowListsAllowListAssociatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListAssociatedInstanceArrayInput)(nil)).Elem(), GetAllowListsAllowListAssociatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListSecurityGroupBindInfoInput)(nil)).Elem(), GetAllowListsAllowListSecurityGroupBindInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListSecurityGroupBindInfoArrayInput)(nil)).Elem(), GetAllowListsAllowListSecurityGroupBindInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInput)(nil)).Elem(), GetBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupArrayInput)(nil)).Elem(), GetBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupBackupPointDownloadUrlInput)(nil)).Elem(), GetBackupsBackupBackupPointDownloadUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupBackupPointDownloadUrlArrayInput)(nil)).Elem(), GetBackupsBackupBackupPointDownloadUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceDetailInput)(nil)).Elem(), GetBackupsBackupInstanceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceDetailArrayInput)(nil)).Elem(), GetBackupsBackupInstanceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceDetailVpcInfoInput)(nil)).Elem(), GetBackupsBackupInstanceDetailVpcInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceDetailVpcInfoArrayInput)(nil)).Elem(), GetBackupsBackupInstanceDetailVpcInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceInfoInput)(nil)).Elem(), GetBackupsBackupInstanceInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceInfoArrayInput)(nil)).Elem(), GetBackupsBackupInstanceInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBigKeysBigKeyInput)(nil)).Elem(), GetBigKeysBigKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBigKeysBigKeyArrayInput)(nil)).Elem(), GetBigKeysBigKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSpecsInstanceSpecInput)(nil)).Elem(), GetInstanceSpecsInstanceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSpecsInstanceSpecArrayInput)(nil)).Elem(), GetInstanceSpecsInstanceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSpecsInstanceSpecShardCapacitySpecInput)(nil)).Elem(), GetInstanceSpecsInstanceSpecShardCapacitySpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceSpecsInstanceSpecShardCapacitySpecArrayInput)(nil)).Elem(), GetInstanceSpecsInstanceSpecShardCapacitySpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupPlanInput)(nil)).Elem(), GetInstancesInstanceBackupPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceCapacityInput)(nil)).Elem(), GetInstancesInstanceCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigureNodeInput)(nil)).Elem(), GetInstancesInstanceConfigureNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigureNodeArrayInput)(nil)).Elem(), GetInstancesInstanceConfigureNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInstanceShardInput)(nil)).Elem(), GetInstancesInstanceInstanceShardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInstanceShardArrayInput)(nil)).Elem(), GetInstancesInstanceInstanceShardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInstanceShardServerNodeInput)(nil)).Elem(), GetInstancesInstanceInstanceShardServerNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInstanceShardServerNodeArrayInput)(nil)).Elem(), GetInstancesInstanceInstanceShardServerNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceParamInput)(nil)).Elem(), GetInstancesInstanceParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceParamArrayInput)(nil)).Elem(), GetInstancesInstanceParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceParamOptionInput)(nil)).Elem(), GetInstancesInstanceParamOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceParamOptionArrayInput)(nil)).Elem(), GetInstancesInstanceParamOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceServerNodeInput)(nil)).Elem(), GetInstancesInstanceServerNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceServerNodeArrayInput)(nil)).Elem(), GetInstancesInstanceServerNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceTagInput)(nil)).Elem(), GetInstancesInstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceTagArrayInput)(nil)).Elem(), GetInstancesInstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceVisitAddrInput)(nil)).Elem(), GetInstancesInstanceVisitAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceVisitAddrArrayInput)(nil)).Elem(), GetInstancesInstanceVisitAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesTagInput)(nil)).Elem(), GetInstancesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesTagArrayInput)(nil)).Elem(), GetInstancesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParameterGroupsParameterGroupInput)(nil)).Elem(), GetParameterGroupsParameterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParameterGroupsParameterGroupArrayInput)(nil)).Elem(), GetParameterGroupsParameterGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParameterGroupsParameterGroupParameterInput)(nil)).Elem(), GetParameterGroupsParameterGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParameterGroupsParameterGroupParameterArrayInput)(nil)).Elem(), GetParameterGroupsParameterGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParameterGroupsParameterGroupParameterOptionInput)(nil)).Elem(), GetParameterGroupsParameterGroupParameterOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetParameterGroupsParameterGroupParameterOptionArrayInput)(nil)).Elem(), GetParameterGroupsParameterGroupParameterOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPitrTimeWindowsPeriodInput)(nil)).Elem(), GetPitrTimeWindowsPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPitrTimeWindowsPeriodArrayInput)(nil)).Elem(), GetPitrTimeWindowsPeriodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlannedEventsPlannedEventInput)(nil)).Elem(), GetPlannedEventsPlannedEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlannedEventsPlannedEventArrayInput)(nil)).Elem(), GetPlannedEventsPlannedEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterOutputType(AccountsAccountOutput{})
	pulumi.RegisterOutputType(AccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(AllowListAssociatedInstanceOutput{})
	pulumi.RegisterOutputType(AllowListAssociatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(AllowListSecurityGroupBindInfoOutput{})
	pulumi.RegisterOutputType(AllowListSecurityGroupBindInfoArrayOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListArrayOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListAssociatedInstanceOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListAssociatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListSecurityGroupBindInfoOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListSecurityGroupBindInfoArrayOutput{})
	pulumi.RegisterOutputType(BackupBackupPointDownloadUrlOutput{})
	pulumi.RegisterOutputType(BackupBackupPointDownloadUrlArrayOutput{})
	pulumi.RegisterOutputType(BackupInstanceInfoOutput{})
	pulumi.RegisterOutputType(BackupInstanceInfoArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupOutput{})
	pulumi.RegisterOutputType(BackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupBackupPointDownloadUrlOutput{})
	pulumi.RegisterOutputType(BackupsBackupBackupPointDownloadUrlArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceDetailOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceDetailArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceDetailVpcInfoOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceDetailVpcInfoArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceInfoOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceInfoArrayOutput{})
	pulumi.RegisterOutputType(BigKeysBigKeyOutput{})
	pulumi.RegisterOutputType(BigKeysBigKeyArrayOutput{})
	pulumi.RegisterOutputType(InstanceConfigureNodeOutput{})
	pulumi.RegisterOutputType(InstanceConfigureNodeArrayOutput{})
	pulumi.RegisterOutputType(InstanceParamValueOutput{})
	pulumi.RegisterOutputType(InstanceParamValueArrayOutput{})
	pulumi.RegisterOutputType(InstanceSpecsInstanceSpecOutput{})
	pulumi.RegisterOutputType(InstanceSpecsInstanceSpecArrayOutput{})
	pulumi.RegisterOutputType(InstanceSpecsInstanceSpecShardCapacitySpecOutput{})
	pulumi.RegisterOutputType(InstanceSpecsInstanceSpecShardCapacitySpecArrayOutput{})
	pulumi.RegisterOutputType(InstanceTagOutput{})
	pulumi.RegisterOutputType(InstanceTagArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceOutput{})
	pulumi.RegisterOutputType(InstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceBackupPlanOutput{})
	pulumi.RegisterOutputType(InstancesInstanceCapacityOutput{})
	pulumi.RegisterOutputType(InstancesInstanceConfigureNodeOutput{})
	pulumi.RegisterOutputType(InstancesInstanceConfigureNodeArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceInstanceShardOutput{})
	pulumi.RegisterOutputType(InstancesInstanceInstanceShardArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceInstanceShardServerNodeOutput{})
	pulumi.RegisterOutputType(InstancesInstanceInstanceShardServerNodeArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceParamOutput{})
	pulumi.RegisterOutputType(InstancesInstanceParamArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceParamOptionOutput{})
	pulumi.RegisterOutputType(InstancesInstanceParamOptionArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceServerNodeOutput{})
	pulumi.RegisterOutputType(InstancesInstanceServerNodeArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceTagOutput{})
	pulumi.RegisterOutputType(InstancesInstanceTagArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceVisitAddrOutput{})
	pulumi.RegisterOutputType(InstancesInstanceVisitAddrArrayOutput{})
	pulumi.RegisterOutputType(InstancesTagOutput{})
	pulumi.RegisterOutputType(InstancesTagArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupParamValueOutput{})
	pulumi.RegisterOutputType(ParameterGroupParamValueArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupsParameterGroupOutput{})
	pulumi.RegisterOutputType(ParameterGroupsParameterGroupArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupsParameterGroupParameterOutput{})
	pulumi.RegisterOutputType(ParameterGroupsParameterGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupsParameterGroupParameterOptionOutput{})
	pulumi.RegisterOutputType(ParameterGroupsParameterGroupParameterOptionArrayOutput{})
	pulumi.RegisterOutputType(PitrTimeWindowsPeriodOutput{})
	pulumi.RegisterOutputType(PitrTimeWindowsPeriodArrayOutput{})
	pulumi.RegisterOutputType(PlannedEventsPlannedEventOutput{})
	pulumi.RegisterOutputType(PlannedEventsPlannedEventArrayOutput{})
	pulumi.RegisterOutputType(RegionsRegionOutput{})
	pulumi.RegisterOutputType(RegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(ZonesZoneOutput{})
	pulumi.RegisterOutputType(ZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListArrayOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListAssociatedInstanceOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListAssociatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListSecurityGroupBindInfoOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListSecurityGroupBindInfoArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupBackupPointDownloadUrlOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupBackupPointDownloadUrlArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceDetailOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceDetailVpcInfoOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceDetailVpcInfoArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceInfoOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceInfoArrayOutput{})
	pulumi.RegisterOutputType(GetBigKeysBigKeyOutput{})
	pulumi.RegisterOutputType(GetBigKeysBigKeyArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceSpecsInstanceSpecOutput{})
	pulumi.RegisterOutputType(GetInstanceSpecsInstanceSpecArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceSpecsInstanceSpecShardCapacitySpecOutput{})
	pulumi.RegisterOutputType(GetInstanceSpecsInstanceSpecShardCapacitySpecArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupPlanOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceCapacityOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigureNodeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigureNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceInstanceShardOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceInstanceShardArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceInstanceShardServerNodeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceInstanceShardServerNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceParamOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceParamArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceParamOptionOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceParamOptionArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceServerNodeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceServerNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceTagOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceTagArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceVisitAddrOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceVisitAddrArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesTagOutput{})
	pulumi.RegisterOutputType(GetInstancesTagArrayOutput{})
	pulumi.RegisterOutputType(GetParameterGroupsParameterGroupOutput{})
	pulumi.RegisterOutputType(GetParameterGroupsParameterGroupArrayOutput{})
	pulumi.RegisterOutputType(GetParameterGroupsParameterGroupParameterOutput{})
	pulumi.RegisterOutputType(GetParameterGroupsParameterGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(GetParameterGroupsParameterGroupParameterOptionOutput{})
	pulumi.RegisterOutputType(GetParameterGroupsParameterGroupParameterOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPitrTimeWindowsPeriodOutput{})
	pulumi.RegisterOutputType(GetPitrTimeWindowsPeriodArrayOutput{})
	pulumi.RegisterOutputType(GetPlannedEventsPlannedEventOutput{})
	pulumi.RegisterOutputType(GetPlannedEventsPlannedEventArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
