// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AccountsAccount struct {
	// The name of the redis account.
	AccountName string `pulumi:"accountName"`
	// The description of the redis account.
	Description string `pulumi:"description"`
	// The id of the Redis instance.
	InstanceId string `pulumi:"instanceId"`
	// The role info.
	RoleName string `pulumi:"roleName"`
}

// AccountsAccountInput is an input type that accepts AccountsAccountArgs and AccountsAccountOutput values.
// You can construct a concrete instance of `AccountsAccountInput` via:
//
//	AccountsAccountArgs{...}
type AccountsAccountInput interface {
	pulumi.Input

	ToAccountsAccountOutput() AccountsAccountOutput
	ToAccountsAccountOutputWithContext(context.Context) AccountsAccountOutput
}

type AccountsAccountArgs struct {
	// The name of the redis account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The description of the redis account.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the Redis instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The role info.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (AccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccount)(nil)).Elem()
}

func (i AccountsAccountArgs) ToAccountsAccountOutput() AccountsAccountOutput {
	return i.ToAccountsAccountOutputWithContext(context.Background())
}

func (i AccountsAccountArgs) ToAccountsAccountOutputWithContext(ctx context.Context) AccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountOutput)
}

// AccountsAccountArrayInput is an input type that accepts AccountsAccountArray and AccountsAccountArrayOutput values.
// You can construct a concrete instance of `AccountsAccountArrayInput` via:
//
//	AccountsAccountArray{ AccountsAccountArgs{...} }
type AccountsAccountArrayInput interface {
	pulumi.Input

	ToAccountsAccountArrayOutput() AccountsAccountArrayOutput
	ToAccountsAccountArrayOutputWithContext(context.Context) AccountsAccountArrayOutput
}

type AccountsAccountArray []AccountsAccountInput

func (AccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccount)(nil)).Elem()
}

func (i AccountsAccountArray) ToAccountsAccountArrayOutput() AccountsAccountArrayOutput {
	return i.ToAccountsAccountArrayOutputWithContext(context.Background())
}

func (i AccountsAccountArray) ToAccountsAccountArrayOutputWithContext(ctx context.Context) AccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountArrayOutput)
}

type AccountsAccountOutput struct{ *pulumi.OutputState }

func (AccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccount)(nil)).Elem()
}

func (o AccountsAccountOutput) ToAccountsAccountOutput() AccountsAccountOutput {
	return o
}

func (o AccountsAccountOutput) ToAccountsAccountOutputWithContext(ctx context.Context) AccountsAccountOutput {
	return o
}

// The name of the redis account.
func (o AccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The description of the redis account.
func (o AccountsAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the Redis instance.
func (o AccountsAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The role info.
func (o AccountsAccountOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.RoleName }).(pulumi.StringOutput)
}

type AccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (AccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccount)(nil)).Elem()
}

func (o AccountsAccountArrayOutput) ToAccountsAccountArrayOutput() AccountsAccountArrayOutput {
	return o
}

func (o AccountsAccountArrayOutput) ToAccountsAccountArrayOutputWithContext(ctx context.Context) AccountsAccountArrayOutput {
	return o
}

func (o AccountsAccountArrayOutput) Index(i pulumi.IntInput) AccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountsAccount {
		return vs[0].([]AccountsAccount)[vs[1].(int)]
	}).(AccountsAccountOutput)
}

type AllowListAssociatedInstance struct {
	// Id of instance.
	InstanceId *string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName *string `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc *string `pulumi:"vpc"`
}

// AllowListAssociatedInstanceInput is an input type that accepts AllowListAssociatedInstanceArgs and AllowListAssociatedInstanceOutput values.
// You can construct a concrete instance of `AllowListAssociatedInstanceInput` via:
//
//	AllowListAssociatedInstanceArgs{...}
type AllowListAssociatedInstanceInput interface {
	pulumi.Input

	ToAllowListAssociatedInstanceOutput() AllowListAssociatedInstanceOutput
	ToAllowListAssociatedInstanceOutputWithContext(context.Context) AllowListAssociatedInstanceOutput
}

type AllowListAssociatedInstanceArgs struct {
	// Id of instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
}

func (AllowListAssociatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowListAssociatedInstanceArgs) ToAllowListAssociatedInstanceOutput() AllowListAssociatedInstanceOutput {
	return i.ToAllowListAssociatedInstanceOutputWithContext(context.Background())
}

func (i AllowListAssociatedInstanceArgs) ToAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowListAssociatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListAssociatedInstanceOutput)
}

// AllowListAssociatedInstanceArrayInput is an input type that accepts AllowListAssociatedInstanceArray and AllowListAssociatedInstanceArrayOutput values.
// You can construct a concrete instance of `AllowListAssociatedInstanceArrayInput` via:
//
//	AllowListAssociatedInstanceArray{ AllowListAssociatedInstanceArgs{...} }
type AllowListAssociatedInstanceArrayInput interface {
	pulumi.Input

	ToAllowListAssociatedInstanceArrayOutput() AllowListAssociatedInstanceArrayOutput
	ToAllowListAssociatedInstanceArrayOutputWithContext(context.Context) AllowListAssociatedInstanceArrayOutput
}

type AllowListAssociatedInstanceArray []AllowListAssociatedInstanceInput

func (AllowListAssociatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowListAssociatedInstanceArray) ToAllowListAssociatedInstanceArrayOutput() AllowListAssociatedInstanceArrayOutput {
	return i.ToAllowListAssociatedInstanceArrayOutputWithContext(context.Background())
}

func (i AllowListAssociatedInstanceArray) ToAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowListAssociatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListAssociatedInstanceArrayOutput)
}

type AllowListAssociatedInstanceOutput struct{ *pulumi.OutputState }

func (AllowListAssociatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowListAssociatedInstanceOutput) ToAllowListAssociatedInstanceOutput() AllowListAssociatedInstanceOutput {
	return o
}

func (o AllowListAssociatedInstanceOutput) ToAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowListAssociatedInstanceOutput {
	return o
}

// Id of instance.
func (o AllowListAssociatedInstanceOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListAssociatedInstance) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Name of instance.
func (o AllowListAssociatedInstanceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListAssociatedInstance) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Id of virtual private cloud.
func (o AllowListAssociatedInstanceOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListAssociatedInstance) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

type AllowListAssociatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (AllowListAssociatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowListAssociatedInstanceArrayOutput) ToAllowListAssociatedInstanceArrayOutput() AllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowListAssociatedInstanceArrayOutput) ToAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowListAssociatedInstanceArrayOutput) Index(i pulumi.IntInput) AllowListAssociatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowListAssociatedInstance {
		return vs[0].([]AllowListAssociatedInstance)[vs[1].(int)]
	}).(AllowListAssociatedInstanceOutput)
}

type AllowListsAllowList struct {
	// Description of allow list.
	AllowListDesc string `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId string `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum int `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName string `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType string `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists []string `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum int `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances []AllowListsAllowListAssociatedInstance `pulumi:"associatedInstances"`
}

// AllowListsAllowListInput is an input type that accepts AllowListsAllowListArgs and AllowListsAllowListOutput values.
// You can construct a concrete instance of `AllowListsAllowListInput` via:
//
//	AllowListsAllowListArgs{...}
type AllowListsAllowListInput interface {
	pulumi.Input

	ToAllowListsAllowListOutput() AllowListsAllowListOutput
	ToAllowListsAllowListOutputWithContext(context.Context) AllowListsAllowListOutput
}

type AllowListsAllowListArgs struct {
	// Description of allow list.
	AllowListDesc pulumi.StringInput `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId pulumi.StringInput `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum pulumi.IntInput `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName pulumi.StringInput `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType pulumi.StringInput `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum pulumi.IntInput `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances AllowListsAllowListAssociatedInstanceArrayInput `pulumi:"associatedInstances"`
}

func (AllowListsAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowList)(nil)).Elem()
}

func (i AllowListsAllowListArgs) ToAllowListsAllowListOutput() AllowListsAllowListOutput {
	return i.ToAllowListsAllowListOutputWithContext(context.Background())
}

func (i AllowListsAllowListArgs) ToAllowListsAllowListOutputWithContext(ctx context.Context) AllowListsAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListOutput)
}

// AllowListsAllowListArrayInput is an input type that accepts AllowListsAllowListArray and AllowListsAllowListArrayOutput values.
// You can construct a concrete instance of `AllowListsAllowListArrayInput` via:
//
//	AllowListsAllowListArray{ AllowListsAllowListArgs{...} }
type AllowListsAllowListArrayInput interface {
	pulumi.Input

	ToAllowListsAllowListArrayOutput() AllowListsAllowListArrayOutput
	ToAllowListsAllowListArrayOutputWithContext(context.Context) AllowListsAllowListArrayOutput
}

type AllowListsAllowListArray []AllowListsAllowListInput

func (AllowListsAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowList)(nil)).Elem()
}

func (i AllowListsAllowListArray) ToAllowListsAllowListArrayOutput() AllowListsAllowListArrayOutput {
	return i.ToAllowListsAllowListArrayOutputWithContext(context.Background())
}

func (i AllowListsAllowListArray) ToAllowListsAllowListArrayOutputWithContext(ctx context.Context) AllowListsAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListArrayOutput)
}

type AllowListsAllowListOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowList)(nil)).Elem()
}

func (o AllowListsAllowListOutput) ToAllowListsAllowListOutput() AllowListsAllowListOutput {
	return o
}

func (o AllowListsAllowListOutput) ToAllowListsAllowListOutputWithContext(ctx context.Context) AllowListsAllowListOutput {
	return o
}

// Description of allow list.
func (o AllowListsAllowListOutput) AllowListDesc() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListDesc }).(pulumi.StringOutput)
}

// Id of allow list.
func (o AllowListsAllowListOutput) AllowListId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListId }).(pulumi.StringOutput)
}

// The IP number of allow list.
func (o AllowListsAllowListOutput) AllowListIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v AllowListsAllowList) int { return v.AllowListIpNum }).(pulumi.IntOutput)
}

// Name of allow list.
func (o AllowListsAllowListOutput) AllowListName() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListName }).(pulumi.StringOutput)
}

// Type of allow list.
func (o AllowListsAllowListOutput) AllowListType() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowList) string { return v.AllowListType }).(pulumi.StringOutput)
}

// Ip list of allow list.
func (o AllowListsAllowListOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AllowListsAllowList) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The number of instance that associated to allow list.
func (o AllowListsAllowListOutput) AssociatedInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v AllowListsAllowList) int { return v.AssociatedInstanceNum }).(pulumi.IntOutput)
}

// Instances associated by this allow list.
func (o AllowListsAllowListOutput) AssociatedInstances() AllowListsAllowListAssociatedInstanceArrayOutput {
	return o.ApplyT(func(v AllowListsAllowList) []AllowListsAllowListAssociatedInstance { return v.AssociatedInstances }).(AllowListsAllowListAssociatedInstanceArrayOutput)
}

type AllowListsAllowListArrayOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowList)(nil)).Elem()
}

func (o AllowListsAllowListArrayOutput) ToAllowListsAllowListArrayOutput() AllowListsAllowListArrayOutput {
	return o
}

func (o AllowListsAllowListArrayOutput) ToAllowListsAllowListArrayOutputWithContext(ctx context.Context) AllowListsAllowListArrayOutput {
	return o
}

func (o AllowListsAllowListArrayOutput) Index(i pulumi.IntInput) AllowListsAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowListsAllowList {
		return vs[0].([]AllowListsAllowList)[vs[1].(int)]
	}).(AllowListsAllowListOutput)
}

type AllowListsAllowListAssociatedInstance struct {
	// The Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc string `pulumi:"vpc"`
}

// AllowListsAllowListAssociatedInstanceInput is an input type that accepts AllowListsAllowListAssociatedInstanceArgs and AllowListsAllowListAssociatedInstanceOutput values.
// You can construct a concrete instance of `AllowListsAllowListAssociatedInstanceInput` via:
//
//	AllowListsAllowListAssociatedInstanceArgs{...}
type AllowListsAllowListAssociatedInstanceInput interface {
	pulumi.Input

	ToAllowListsAllowListAssociatedInstanceOutput() AllowListsAllowListAssociatedInstanceOutput
	ToAllowListsAllowListAssociatedInstanceOutputWithContext(context.Context) AllowListsAllowListAssociatedInstanceOutput
}

type AllowListsAllowListAssociatedInstanceArgs struct {
	// The Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (AllowListsAllowListAssociatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowListsAllowListAssociatedInstanceArgs) ToAllowListsAllowListAssociatedInstanceOutput() AllowListsAllowListAssociatedInstanceOutput {
	return i.ToAllowListsAllowListAssociatedInstanceOutputWithContext(context.Background())
}

func (i AllowListsAllowListAssociatedInstanceArgs) ToAllowListsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowListsAllowListAssociatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListAssociatedInstanceOutput)
}

// AllowListsAllowListAssociatedInstanceArrayInput is an input type that accepts AllowListsAllowListAssociatedInstanceArray and AllowListsAllowListAssociatedInstanceArrayOutput values.
// You can construct a concrete instance of `AllowListsAllowListAssociatedInstanceArrayInput` via:
//
//	AllowListsAllowListAssociatedInstanceArray{ AllowListsAllowListAssociatedInstanceArgs{...} }
type AllowListsAllowListAssociatedInstanceArrayInput interface {
	pulumi.Input

	ToAllowListsAllowListAssociatedInstanceArrayOutput() AllowListsAllowListAssociatedInstanceArrayOutput
	ToAllowListsAllowListAssociatedInstanceArrayOutputWithContext(context.Context) AllowListsAllowListAssociatedInstanceArrayOutput
}

type AllowListsAllowListAssociatedInstanceArray []AllowListsAllowListAssociatedInstanceInput

func (AllowListsAllowListAssociatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowListsAllowListAssociatedInstanceArray) ToAllowListsAllowListAssociatedInstanceArrayOutput() AllowListsAllowListAssociatedInstanceArrayOutput {
	return i.ToAllowListsAllowListAssociatedInstanceArrayOutputWithContext(context.Background())
}

func (i AllowListsAllowListAssociatedInstanceArray) ToAllowListsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowListsAllowListAssociatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListsAllowListAssociatedInstanceArrayOutput)
}

type AllowListsAllowListAssociatedInstanceOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListAssociatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowListsAllowListAssociatedInstanceOutput) ToAllowListsAllowListAssociatedInstanceOutput() AllowListsAllowListAssociatedInstanceOutput {
	return o
}

func (o AllowListsAllowListAssociatedInstanceOutput) ToAllowListsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowListsAllowListAssociatedInstanceOutput {
	return o
}

// The Id of instance.
func (o AllowListsAllowListAssociatedInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListAssociatedInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o AllowListsAllowListAssociatedInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListAssociatedInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Id of virtual private cloud.
func (o AllowListsAllowListAssociatedInstanceOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsAllowListAssociatedInstance) string { return v.Vpc }).(pulumi.StringOutput)
}

type AllowListsAllowListAssociatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (AllowListsAllowListAssociatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowListsAllowListAssociatedInstanceArrayOutput) ToAllowListsAllowListAssociatedInstanceArrayOutput() AllowListsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowListsAllowListAssociatedInstanceArrayOutput) ToAllowListsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowListsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowListsAllowListAssociatedInstanceArrayOutput) Index(i pulumi.IntInput) AllowListsAllowListAssociatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowListsAllowListAssociatedInstance {
		return vs[0].([]AllowListsAllowListAssociatedInstance)[vs[1].(int)]
	}).(AllowListsAllowListAssociatedInstanceOutput)
}

type BackupInstanceDetail struct {
	// Id of account.
	AccountId *int `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType *string `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType *string `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion *string `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime *string `pulumi:"expiredTime"`
	// Id of instance to create backup.
	InstanceId *string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName *string `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime *string `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType *string `pulumi:"networkType"`
	// Project name of instance.
	ProjectName *string `pulumi:"projectName"`
	// Id of region.
	RegionId *string `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas *int `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu *int `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity *int `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount *int `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity *int `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity *int `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos []BackupInstanceDetailVpcInfo `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds []string `pulumi:"zoneIds"`
}

// BackupInstanceDetailInput is an input type that accepts BackupInstanceDetailArgs and BackupInstanceDetailOutput values.
// You can construct a concrete instance of `BackupInstanceDetailInput` via:
//
//	BackupInstanceDetailArgs{...}
type BackupInstanceDetailInput interface {
	pulumi.Input

	ToBackupInstanceDetailOutput() BackupInstanceDetailOutput
	ToBackupInstanceDetailOutputWithContext(context.Context) BackupInstanceDetailOutput
}

type BackupInstanceDetailArgs struct {
	// Id of account.
	AccountId pulumi.IntPtrInput `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType pulumi.StringPtrInput `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime pulumi.StringPtrInput `pulumi:"expiredTime"`
	// Id of instance to create backup.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime pulumi.StringPtrInput `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType pulumi.StringPtrInput `pulumi:"networkType"`
	// Project name of instance.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Id of region.
	RegionId pulumi.StringPtrInput `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas pulumi.IntPtrInput `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu pulumi.IntPtrInput `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity pulumi.IntPtrInput `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount pulumi.IntPtrInput `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity pulumi.IntPtrInput `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity pulumi.IntPtrInput `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos BackupInstanceDetailVpcInfoArrayInput `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (BackupInstanceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceDetail)(nil)).Elem()
}

func (i BackupInstanceDetailArgs) ToBackupInstanceDetailOutput() BackupInstanceDetailOutput {
	return i.ToBackupInstanceDetailOutputWithContext(context.Background())
}

func (i BackupInstanceDetailArgs) ToBackupInstanceDetailOutputWithContext(ctx context.Context) BackupInstanceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceDetailOutput)
}

// BackupInstanceDetailArrayInput is an input type that accepts BackupInstanceDetailArray and BackupInstanceDetailArrayOutput values.
// You can construct a concrete instance of `BackupInstanceDetailArrayInput` via:
//
//	BackupInstanceDetailArray{ BackupInstanceDetailArgs{...} }
type BackupInstanceDetailArrayInput interface {
	pulumi.Input

	ToBackupInstanceDetailArrayOutput() BackupInstanceDetailArrayOutput
	ToBackupInstanceDetailArrayOutputWithContext(context.Context) BackupInstanceDetailArrayOutput
}

type BackupInstanceDetailArray []BackupInstanceDetailInput

func (BackupInstanceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupInstanceDetail)(nil)).Elem()
}

func (i BackupInstanceDetailArray) ToBackupInstanceDetailArrayOutput() BackupInstanceDetailArrayOutput {
	return i.ToBackupInstanceDetailArrayOutputWithContext(context.Background())
}

func (i BackupInstanceDetailArray) ToBackupInstanceDetailArrayOutputWithContext(ctx context.Context) BackupInstanceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceDetailArrayOutput)
}

type BackupInstanceDetailOutput struct{ *pulumi.OutputState }

func (BackupInstanceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceDetail)(nil)).Elem()
}

func (o BackupInstanceDetailOutput) ToBackupInstanceDetailOutput() BackupInstanceDetailOutput {
	return o
}

func (o BackupInstanceDetailOutput) ToBackupInstanceDetailOutputWithContext(ctx context.Context) BackupInstanceDetailOutput {
	return o
}

// Id of account.
func (o BackupInstanceDetailOutput) AccountId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *int { return v.AccountId }).(pulumi.IntPtrOutput)
}

// Arch type of instance(Standard/Cluster).
func (o BackupInstanceDetailOutput) ArchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.ArchType }).(pulumi.StringPtrOutput)
}

// Charge type of instance(Postpaid/Prepaid).
func (o BackupInstanceDetailOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// Engine version of instance.
func (o BackupInstanceDetailOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// Expired time of instance.
func (o BackupInstanceDetailOutput) ExpiredTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.ExpiredTime }).(pulumi.StringPtrOutput)
}

// Id of instance to create backup.
func (o BackupInstanceDetailOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Name of instance.
func (o BackupInstanceDetailOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The maintainable period (in UTC) of the instance.
func (o BackupInstanceDetailOutput) MaintenanceTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.MaintenanceTime }).(pulumi.StringPtrOutput)
}

// Network type of instance.
func (o BackupInstanceDetailOutput) NetworkType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.NetworkType }).(pulumi.StringPtrOutput)
}

// Project name of instance.
func (o BackupInstanceDetailOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Id of region.
func (o BackupInstanceDetailOutput) RegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *string { return v.RegionId }).(pulumi.StringPtrOutput)
}

// Count of replica in which shard.
func (o BackupInstanceDetailOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// Count of cpu cores of instance.
func (o BackupInstanceDetailOutput) ServerCpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *int { return v.ServerCpu }).(pulumi.IntPtrOutput)
}

// Capacity of shard.
func (o BackupInstanceDetailOutput) ShardCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *int { return v.ShardCapacity }).(pulumi.IntPtrOutput)
}

// Count of shard.
func (o BackupInstanceDetailOutput) ShardCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *int { return v.ShardCount }).(pulumi.IntPtrOutput)
}

// Total capacity of instance.
func (o BackupInstanceDetailOutput) TotalCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *int { return v.TotalCapacity }).(pulumi.IntPtrOutput)
}

// Capacity used of this instance.
func (o BackupInstanceDetailOutput) UsedCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetail) *int { return v.UsedCapacity }).(pulumi.IntPtrOutput)
}

// Information of vpc.
func (o BackupInstanceDetailOutput) VpcInfos() BackupInstanceDetailVpcInfoArrayOutput {
	return o.ApplyT(func(v BackupInstanceDetail) []BackupInstanceDetailVpcInfo { return v.VpcInfos }).(BackupInstanceDetailVpcInfoArrayOutput)
}

// List of id of zone.
func (o BackupInstanceDetailOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupInstanceDetail) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type BackupInstanceDetailArrayOutput struct{ *pulumi.OutputState }

func (BackupInstanceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupInstanceDetail)(nil)).Elem()
}

func (o BackupInstanceDetailArrayOutput) ToBackupInstanceDetailArrayOutput() BackupInstanceDetailArrayOutput {
	return o
}

func (o BackupInstanceDetailArrayOutput) ToBackupInstanceDetailArrayOutputWithContext(ctx context.Context) BackupInstanceDetailArrayOutput {
	return o
}

func (o BackupInstanceDetailArrayOutput) Index(i pulumi.IntInput) BackupInstanceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupInstanceDetail {
		return vs[0].([]BackupInstanceDetail)[vs[1].(int)]
	}).(BackupInstanceDetailOutput)
}

type BackupInstanceDetailVpcInfo struct {
	// Id of vpc.
	Id *string `pulumi:"id"`
	// Name of vpc.
	Name *string `pulumi:"name"`
}

// BackupInstanceDetailVpcInfoInput is an input type that accepts BackupInstanceDetailVpcInfoArgs and BackupInstanceDetailVpcInfoOutput values.
// You can construct a concrete instance of `BackupInstanceDetailVpcInfoInput` via:
//
//	BackupInstanceDetailVpcInfoArgs{...}
type BackupInstanceDetailVpcInfoInput interface {
	pulumi.Input

	ToBackupInstanceDetailVpcInfoOutput() BackupInstanceDetailVpcInfoOutput
	ToBackupInstanceDetailVpcInfoOutputWithContext(context.Context) BackupInstanceDetailVpcInfoOutput
}

type BackupInstanceDetailVpcInfoArgs struct {
	// Id of vpc.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of vpc.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BackupInstanceDetailVpcInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i BackupInstanceDetailVpcInfoArgs) ToBackupInstanceDetailVpcInfoOutput() BackupInstanceDetailVpcInfoOutput {
	return i.ToBackupInstanceDetailVpcInfoOutputWithContext(context.Background())
}

func (i BackupInstanceDetailVpcInfoArgs) ToBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) BackupInstanceDetailVpcInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceDetailVpcInfoOutput)
}

// BackupInstanceDetailVpcInfoArrayInput is an input type that accepts BackupInstanceDetailVpcInfoArray and BackupInstanceDetailVpcInfoArrayOutput values.
// You can construct a concrete instance of `BackupInstanceDetailVpcInfoArrayInput` via:
//
//	BackupInstanceDetailVpcInfoArray{ BackupInstanceDetailVpcInfoArgs{...} }
type BackupInstanceDetailVpcInfoArrayInput interface {
	pulumi.Input

	ToBackupInstanceDetailVpcInfoArrayOutput() BackupInstanceDetailVpcInfoArrayOutput
	ToBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Context) BackupInstanceDetailVpcInfoArrayOutput
}

type BackupInstanceDetailVpcInfoArray []BackupInstanceDetailVpcInfoInput

func (BackupInstanceDetailVpcInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i BackupInstanceDetailVpcInfoArray) ToBackupInstanceDetailVpcInfoArrayOutput() BackupInstanceDetailVpcInfoArrayOutput {
	return i.ToBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Background())
}

func (i BackupInstanceDetailVpcInfoArray) ToBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) BackupInstanceDetailVpcInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupInstanceDetailVpcInfoArrayOutput)
}

type BackupInstanceDetailVpcInfoOutput struct{ *pulumi.OutputState }

func (BackupInstanceDetailVpcInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o BackupInstanceDetailVpcInfoOutput) ToBackupInstanceDetailVpcInfoOutput() BackupInstanceDetailVpcInfoOutput {
	return o
}

func (o BackupInstanceDetailVpcInfoOutput) ToBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) BackupInstanceDetailVpcInfoOutput {
	return o
}

// Id of vpc.
func (o BackupInstanceDetailVpcInfoOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetailVpcInfo) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of vpc.
func (o BackupInstanceDetailVpcInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupInstanceDetailVpcInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BackupInstanceDetailVpcInfoArrayOutput struct{ *pulumi.OutputState }

func (BackupInstanceDetailVpcInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o BackupInstanceDetailVpcInfoArrayOutput) ToBackupInstanceDetailVpcInfoArrayOutput() BackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o BackupInstanceDetailVpcInfoArrayOutput) ToBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) BackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o BackupInstanceDetailVpcInfoArrayOutput) Index(i pulumi.IntInput) BackupInstanceDetailVpcInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupInstanceDetailVpcInfo {
		return vs[0].([]BackupInstanceDetailVpcInfo)[vs[1].(int)]
	}).(BackupInstanceDetailVpcInfoOutput)
}

type BackupsBackup struct {
	// The id of backup point.
	BackupPointId string `pulumi:"backupPointId"`
	// Backup strategy.
	BackupStrategy string `pulumi:"backupStrategy"`
	// Backup type.
	BackupType string `pulumi:"backupType"`
	// Query end time.
	EndTime string `pulumi:"endTime"`
	// Information of instance.
	InstanceDetails []BackupsBackupInstanceDetail `pulumi:"instanceDetails"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Size in MiB.
	Size int `pulumi:"size"`
	// Query start time.
	StartTime string `pulumi:"startTime"`
	// Status of backup (Creating/Available/Unavailable/Deleting).
	Status string `pulumi:"status"`
}

// BackupsBackupInput is an input type that accepts BackupsBackupArgs and BackupsBackupOutput values.
// You can construct a concrete instance of `BackupsBackupInput` via:
//
//	BackupsBackupArgs{...}
type BackupsBackupInput interface {
	pulumi.Input

	ToBackupsBackupOutput() BackupsBackupOutput
	ToBackupsBackupOutputWithContext(context.Context) BackupsBackupOutput
}

type BackupsBackupArgs struct {
	// The id of backup point.
	BackupPointId pulumi.StringInput `pulumi:"backupPointId"`
	// Backup strategy.
	BackupStrategy pulumi.StringInput `pulumi:"backupStrategy"`
	// Backup type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// Query end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Information of instance.
	InstanceDetails BackupsBackupInstanceDetailArrayInput `pulumi:"instanceDetails"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Size in MiB.
	Size pulumi.IntInput `pulumi:"size"`
	// Query start time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Status of backup (Creating/Available/Unavailable/Deleting).
	Status pulumi.StringInput `pulumi:"status"`
}

func (BackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackup)(nil)).Elem()
}

func (i BackupsBackupArgs) ToBackupsBackupOutput() BackupsBackupOutput {
	return i.ToBackupsBackupOutputWithContext(context.Background())
}

func (i BackupsBackupArgs) ToBackupsBackupOutputWithContext(ctx context.Context) BackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupOutput)
}

// BackupsBackupArrayInput is an input type that accepts BackupsBackupArray and BackupsBackupArrayOutput values.
// You can construct a concrete instance of `BackupsBackupArrayInput` via:
//
//	BackupsBackupArray{ BackupsBackupArgs{...} }
type BackupsBackupArrayInput interface {
	pulumi.Input

	ToBackupsBackupArrayOutput() BackupsBackupArrayOutput
	ToBackupsBackupArrayOutputWithContext(context.Context) BackupsBackupArrayOutput
}

type BackupsBackupArray []BackupsBackupInput

func (BackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackup)(nil)).Elem()
}

func (i BackupsBackupArray) ToBackupsBackupArrayOutput() BackupsBackupArrayOutput {
	return i.ToBackupsBackupArrayOutputWithContext(context.Background())
}

func (i BackupsBackupArray) ToBackupsBackupArrayOutputWithContext(ctx context.Context) BackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupArrayOutput)
}

type BackupsBackupOutput struct{ *pulumi.OutputState }

func (BackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackup)(nil)).Elem()
}

func (o BackupsBackupOutput) ToBackupsBackupOutput() BackupsBackupOutput {
	return o
}

func (o BackupsBackupOutput) ToBackupsBackupOutputWithContext(ctx context.Context) BackupsBackupOutput {
	return o
}

// The id of backup point.
func (o BackupsBackupOutput) BackupPointId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupPointId }).(pulumi.StringOutput)
}

// Backup strategy.
func (o BackupsBackupOutput) BackupStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupStrategy }).(pulumi.StringOutput)
}

// Backup type.
func (o BackupsBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupType }).(pulumi.StringOutput)
}

// Query end time.
func (o BackupsBackupOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.EndTime }).(pulumi.StringOutput)
}

// Information of instance.
func (o BackupsBackupOutput) InstanceDetails() BackupsBackupInstanceDetailArrayOutput {
	return o.ApplyT(func(v BackupsBackup) []BackupsBackupInstanceDetail { return v.InstanceDetails }).(BackupsBackupInstanceDetailArrayOutput)
}

// Id of instance.
func (o BackupsBackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Size in MiB.
func (o BackupsBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackup) int { return v.Size }).(pulumi.IntOutput)
}

// Query start time.
func (o BackupsBackupOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.StartTime }).(pulumi.StringOutput)
}

// Status of backup (Creating/Available/Unavailable/Deleting).
func (o BackupsBackupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.Status }).(pulumi.StringOutput)
}

type BackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackup)(nil)).Elem()
}

func (o BackupsBackupArrayOutput) ToBackupsBackupArrayOutput() BackupsBackupArrayOutput {
	return o
}

func (o BackupsBackupArrayOutput) ToBackupsBackupArrayOutputWithContext(ctx context.Context) BackupsBackupArrayOutput {
	return o
}

func (o BackupsBackupArrayOutput) Index(i pulumi.IntInput) BackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackup {
		return vs[0].([]BackupsBackup)[vs[1].(int)]
	}).(BackupsBackupOutput)
}

type BackupsBackupInstanceDetail struct {
	// Id of account.
	AccountId int `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType string `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType string `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion string `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime string `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType string `pulumi:"networkType"`
	// Project name of instance.
	ProjectName string `pulumi:"projectName"`
	// Id of region.
	RegionId string `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas int `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu int `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity int `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount int `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity int `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity int `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos []BackupsBackupInstanceDetailVpcInfo `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds []string `pulumi:"zoneIds"`
}

// BackupsBackupInstanceDetailInput is an input type that accepts BackupsBackupInstanceDetailArgs and BackupsBackupInstanceDetailOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceDetailInput` via:
//
//	BackupsBackupInstanceDetailArgs{...}
type BackupsBackupInstanceDetailInput interface {
	pulumi.Input

	ToBackupsBackupInstanceDetailOutput() BackupsBackupInstanceDetailOutput
	ToBackupsBackupInstanceDetailOutputWithContext(context.Context) BackupsBackupInstanceDetailOutput
}

type BackupsBackupInstanceDetailArgs struct {
	// Id of account.
	AccountId pulumi.IntInput `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType pulumi.StringInput `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Project name of instance.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Id of region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas pulumi.IntInput `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu pulumi.IntInput `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity pulumi.IntInput `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount pulumi.IntInput `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity pulumi.IntInput `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity pulumi.IntInput `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos BackupsBackupInstanceDetailVpcInfoArrayInput `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (BackupsBackupInstanceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceDetail)(nil)).Elem()
}

func (i BackupsBackupInstanceDetailArgs) ToBackupsBackupInstanceDetailOutput() BackupsBackupInstanceDetailOutput {
	return i.ToBackupsBackupInstanceDetailOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceDetailArgs) ToBackupsBackupInstanceDetailOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceDetailOutput)
}

// BackupsBackupInstanceDetailArrayInput is an input type that accepts BackupsBackupInstanceDetailArray and BackupsBackupInstanceDetailArrayOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceDetailArrayInput` via:
//
//	BackupsBackupInstanceDetailArray{ BackupsBackupInstanceDetailArgs{...} }
type BackupsBackupInstanceDetailArrayInput interface {
	pulumi.Input

	ToBackupsBackupInstanceDetailArrayOutput() BackupsBackupInstanceDetailArrayOutput
	ToBackupsBackupInstanceDetailArrayOutputWithContext(context.Context) BackupsBackupInstanceDetailArrayOutput
}

type BackupsBackupInstanceDetailArray []BackupsBackupInstanceDetailInput

func (BackupsBackupInstanceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceDetail)(nil)).Elem()
}

func (i BackupsBackupInstanceDetailArray) ToBackupsBackupInstanceDetailArrayOutput() BackupsBackupInstanceDetailArrayOutput {
	return i.ToBackupsBackupInstanceDetailArrayOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceDetailArray) ToBackupsBackupInstanceDetailArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceDetailArrayOutput)
}

type BackupsBackupInstanceDetailOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceDetail)(nil)).Elem()
}

func (o BackupsBackupInstanceDetailOutput) ToBackupsBackupInstanceDetailOutput() BackupsBackupInstanceDetailOutput {
	return o
}

func (o BackupsBackupInstanceDetailOutput) ToBackupsBackupInstanceDetailOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailOutput {
	return o
}

// Id of account.
func (o BackupsBackupInstanceDetailOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.AccountId }).(pulumi.IntOutput)
}

// Arch type of instance(Standard/Cluster).
func (o BackupsBackupInstanceDetailOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.ArchType }).(pulumi.StringOutput)
}

// Charge type of instance(Postpaid/Prepaid).
func (o BackupsBackupInstanceDetailOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Engine version of instance.
func (o BackupsBackupInstanceDetailOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Expired time of instance.
func (o BackupsBackupInstanceDetailOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Id of instance.
func (o BackupsBackupInstanceDetailOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o BackupsBackupInstanceDetailOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maintainable period (in UTC) of the instance.
func (o BackupsBackupInstanceDetailOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// Network type of instance.
func (o BackupsBackupInstanceDetailOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Project name of instance.
func (o BackupsBackupInstanceDetailOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Id of region.
func (o BackupsBackupInstanceDetailOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) string { return v.RegionId }).(pulumi.StringOutput)
}

// Count of replica in which shard.
func (o BackupsBackupInstanceDetailOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.Replicas }).(pulumi.IntOutput)
}

// Count of cpu cores of instance.
func (o BackupsBackupInstanceDetailOutput) ServerCpu() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.ServerCpu }).(pulumi.IntOutput)
}

// Capacity of shard.
func (o BackupsBackupInstanceDetailOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

// Count of shard.
func (o BackupsBackupInstanceDetailOutput) ShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.ShardCount }).(pulumi.IntOutput)
}

// Total capacity of instance.
func (o BackupsBackupInstanceDetailOutput) TotalCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.TotalCapacity }).(pulumi.IntOutput)
}

// Capacity used of this instance.
func (o BackupsBackupInstanceDetailOutput) UsedCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) int { return v.UsedCapacity }).(pulumi.IntOutput)
}

// Information of vpc.
func (o BackupsBackupInstanceDetailOutput) VpcInfos() BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) []BackupsBackupInstanceDetailVpcInfo { return v.VpcInfos }).(BackupsBackupInstanceDetailVpcInfoArrayOutput)
}

// List of id of zone.
func (o BackupsBackupInstanceDetailOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetail) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type BackupsBackupInstanceDetailArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceDetail)(nil)).Elem()
}

func (o BackupsBackupInstanceDetailArrayOutput) ToBackupsBackupInstanceDetailArrayOutput() BackupsBackupInstanceDetailArrayOutput {
	return o
}

func (o BackupsBackupInstanceDetailArrayOutput) ToBackupsBackupInstanceDetailArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailArrayOutput {
	return o
}

func (o BackupsBackupInstanceDetailArrayOutput) Index(i pulumi.IntInput) BackupsBackupInstanceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackupInstanceDetail {
		return vs[0].([]BackupsBackupInstanceDetail)[vs[1].(int)]
	}).(BackupsBackupInstanceDetailOutput)
}

type BackupsBackupInstanceDetailVpcInfo struct {
	// Id of vpc.
	Id string `pulumi:"id"`
	// Name of vpc.
	Name string `pulumi:"name"`
}

// BackupsBackupInstanceDetailVpcInfoInput is an input type that accepts BackupsBackupInstanceDetailVpcInfoArgs and BackupsBackupInstanceDetailVpcInfoOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceDetailVpcInfoInput` via:
//
//	BackupsBackupInstanceDetailVpcInfoArgs{...}
type BackupsBackupInstanceDetailVpcInfoInput interface {
	pulumi.Input

	ToBackupsBackupInstanceDetailVpcInfoOutput() BackupsBackupInstanceDetailVpcInfoOutput
	ToBackupsBackupInstanceDetailVpcInfoOutputWithContext(context.Context) BackupsBackupInstanceDetailVpcInfoOutput
}

type BackupsBackupInstanceDetailVpcInfoArgs struct {
	// Id of vpc.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of vpc.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BackupsBackupInstanceDetailVpcInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i BackupsBackupInstanceDetailVpcInfoArgs) ToBackupsBackupInstanceDetailVpcInfoOutput() BackupsBackupInstanceDetailVpcInfoOutput {
	return i.ToBackupsBackupInstanceDetailVpcInfoOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceDetailVpcInfoArgs) ToBackupsBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailVpcInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceDetailVpcInfoOutput)
}

// BackupsBackupInstanceDetailVpcInfoArrayInput is an input type that accepts BackupsBackupInstanceDetailVpcInfoArray and BackupsBackupInstanceDetailVpcInfoArrayOutput values.
// You can construct a concrete instance of `BackupsBackupInstanceDetailVpcInfoArrayInput` via:
//
//	BackupsBackupInstanceDetailVpcInfoArray{ BackupsBackupInstanceDetailVpcInfoArgs{...} }
type BackupsBackupInstanceDetailVpcInfoArrayInput interface {
	pulumi.Input

	ToBackupsBackupInstanceDetailVpcInfoArrayOutput() BackupsBackupInstanceDetailVpcInfoArrayOutput
	ToBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Context) BackupsBackupInstanceDetailVpcInfoArrayOutput
}

type BackupsBackupInstanceDetailVpcInfoArray []BackupsBackupInstanceDetailVpcInfoInput

func (BackupsBackupInstanceDetailVpcInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i BackupsBackupInstanceDetailVpcInfoArray) ToBackupsBackupInstanceDetailVpcInfoArrayOutput() BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return i.ToBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Background())
}

func (i BackupsBackupInstanceDetailVpcInfoArray) ToBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupInstanceDetailVpcInfoArrayOutput)
}

type BackupsBackupInstanceDetailVpcInfoOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceDetailVpcInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o BackupsBackupInstanceDetailVpcInfoOutput) ToBackupsBackupInstanceDetailVpcInfoOutput() BackupsBackupInstanceDetailVpcInfoOutput {
	return o
}

func (o BackupsBackupInstanceDetailVpcInfoOutput) ToBackupsBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailVpcInfoOutput {
	return o
}

// Id of vpc.
func (o BackupsBackupInstanceDetailVpcInfoOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetailVpcInfo) string { return v.Id }).(pulumi.StringOutput)
}

// Name of vpc.
func (o BackupsBackupInstanceDetailVpcInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupInstanceDetailVpcInfo) string { return v.Name }).(pulumi.StringOutput)
}

type BackupsBackupInstanceDetailVpcInfoArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupInstanceDetailVpcInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o BackupsBackupInstanceDetailVpcInfoArrayOutput) ToBackupsBackupInstanceDetailVpcInfoArrayOutput() BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o BackupsBackupInstanceDetailVpcInfoArrayOutput) ToBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) BackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o BackupsBackupInstanceDetailVpcInfoArrayOutput) Index(i pulumi.IntInput) BackupsBackupInstanceDetailVpcInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackupInstanceDetailVpcInfo {
		return vs[0].([]BackupsBackupInstanceDetailVpcInfo)[vs[1].(int)]
	}).(BackupsBackupInstanceDetailVpcInfoOutput)
}

type InstanceConfigureNode struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az string `pulumi:"az"`
}

// InstanceConfigureNodeInput is an input type that accepts InstanceConfigureNodeArgs and InstanceConfigureNodeOutput values.
// You can construct a concrete instance of `InstanceConfigureNodeInput` via:
//
//	InstanceConfigureNodeArgs{...}
type InstanceConfigureNodeInput interface {
	pulumi.Input

	ToInstanceConfigureNodeOutput() InstanceConfigureNodeOutput
	ToInstanceConfigureNodeOutputWithContext(context.Context) InstanceConfigureNodeOutput
}

type InstanceConfigureNodeArgs struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az pulumi.StringInput `pulumi:"az"`
}

func (InstanceConfigureNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigureNode)(nil)).Elem()
}

func (i InstanceConfigureNodeArgs) ToInstanceConfigureNodeOutput() InstanceConfigureNodeOutput {
	return i.ToInstanceConfigureNodeOutputWithContext(context.Background())
}

func (i InstanceConfigureNodeArgs) ToInstanceConfigureNodeOutputWithContext(ctx context.Context) InstanceConfigureNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigureNodeOutput)
}

// InstanceConfigureNodeArrayInput is an input type that accepts InstanceConfigureNodeArray and InstanceConfigureNodeArrayOutput values.
// You can construct a concrete instance of `InstanceConfigureNodeArrayInput` via:
//
//	InstanceConfigureNodeArray{ InstanceConfigureNodeArgs{...} }
type InstanceConfigureNodeArrayInput interface {
	pulumi.Input

	ToInstanceConfigureNodeArrayOutput() InstanceConfigureNodeArrayOutput
	ToInstanceConfigureNodeArrayOutputWithContext(context.Context) InstanceConfigureNodeArrayOutput
}

type InstanceConfigureNodeArray []InstanceConfigureNodeInput

func (InstanceConfigureNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfigureNode)(nil)).Elem()
}

func (i InstanceConfigureNodeArray) ToInstanceConfigureNodeArrayOutput() InstanceConfigureNodeArrayOutput {
	return i.ToInstanceConfigureNodeArrayOutputWithContext(context.Background())
}

func (i InstanceConfigureNodeArray) ToInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) InstanceConfigureNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConfigureNodeArrayOutput)
}

type InstanceConfigureNodeOutput struct{ *pulumi.OutputState }

func (InstanceConfigureNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConfigureNode)(nil)).Elem()
}

func (o InstanceConfigureNodeOutput) ToInstanceConfigureNodeOutput() InstanceConfigureNodeOutput {
	return o
}

func (o InstanceConfigureNodeOutput) ToInstanceConfigureNodeOutputWithContext(ctx context.Context) InstanceConfigureNodeOutput {
	return o
}

// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
func (o InstanceConfigureNodeOutput) Az() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceConfigureNode) string { return v.Az }).(pulumi.StringOutput)
}

type InstanceConfigureNodeArrayOutput struct{ *pulumi.OutputState }

func (InstanceConfigureNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceConfigureNode)(nil)).Elem()
}

func (o InstanceConfigureNodeArrayOutput) ToInstanceConfigureNodeArrayOutput() InstanceConfigureNodeArrayOutput {
	return o
}

func (o InstanceConfigureNodeArrayOutput) ToInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) InstanceConfigureNodeArrayOutput {
	return o
}

func (o InstanceConfigureNodeArrayOutput) Index(i pulumi.IntInput) InstanceConfigureNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceConfigureNode {
		return vs[0].([]InstanceConfigureNode)[vs[1].(int)]
	}).(InstanceConfigureNodeOutput)
}

type InstanceParamValue struct {
	// The name of configuration parameter.
	Name string `pulumi:"name"`
	// The value of configuration parameter.
	Value string `pulumi:"value"`
}

// InstanceParamValueInput is an input type that accepts InstanceParamValueArgs and InstanceParamValueOutput values.
// You can construct a concrete instance of `InstanceParamValueInput` via:
//
//	InstanceParamValueArgs{...}
type InstanceParamValueInput interface {
	pulumi.Input

	ToInstanceParamValueOutput() InstanceParamValueOutput
	ToInstanceParamValueOutputWithContext(context.Context) InstanceParamValueOutput
}

type InstanceParamValueArgs struct {
	// The name of configuration parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of configuration parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceParamValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParamValue)(nil)).Elem()
}

func (i InstanceParamValueArgs) ToInstanceParamValueOutput() InstanceParamValueOutput {
	return i.ToInstanceParamValueOutputWithContext(context.Background())
}

func (i InstanceParamValueArgs) ToInstanceParamValueOutputWithContext(ctx context.Context) InstanceParamValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParamValueOutput)
}

// InstanceParamValueArrayInput is an input type that accepts InstanceParamValueArray and InstanceParamValueArrayOutput values.
// You can construct a concrete instance of `InstanceParamValueArrayInput` via:
//
//	InstanceParamValueArray{ InstanceParamValueArgs{...} }
type InstanceParamValueArrayInput interface {
	pulumi.Input

	ToInstanceParamValueArrayOutput() InstanceParamValueArrayOutput
	ToInstanceParamValueArrayOutputWithContext(context.Context) InstanceParamValueArrayOutput
}

type InstanceParamValueArray []InstanceParamValueInput

func (InstanceParamValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParamValue)(nil)).Elem()
}

func (i InstanceParamValueArray) ToInstanceParamValueArrayOutput() InstanceParamValueArrayOutput {
	return i.ToInstanceParamValueArrayOutputWithContext(context.Background())
}

func (i InstanceParamValueArray) ToInstanceParamValueArrayOutputWithContext(ctx context.Context) InstanceParamValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceParamValueArrayOutput)
}

type InstanceParamValueOutput struct{ *pulumi.OutputState }

func (InstanceParamValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceParamValue)(nil)).Elem()
}

func (o InstanceParamValueOutput) ToInstanceParamValueOutput() InstanceParamValueOutput {
	return o
}

func (o InstanceParamValueOutput) ToInstanceParamValueOutputWithContext(ctx context.Context) InstanceParamValueOutput {
	return o
}

// The name of configuration parameter.
func (o InstanceParamValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParamValue) string { return v.Name }).(pulumi.StringOutput)
}

// The value of configuration parameter.
func (o InstanceParamValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceParamValue) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceParamValueArrayOutput struct{ *pulumi.OutputState }

func (InstanceParamValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceParamValue)(nil)).Elem()
}

func (o InstanceParamValueArrayOutput) ToInstanceParamValueArrayOutput() InstanceParamValueArrayOutput {
	return o
}

func (o InstanceParamValueArrayOutput) ToInstanceParamValueArrayOutputWithContext(ctx context.Context) InstanceParamValueArrayOutput {
	return o
}

func (o InstanceParamValueArrayOutput) Index(i pulumi.IntInput) InstanceParamValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceParamValue {
		return vs[0].([]InstanceParamValue)[vs[1].(int)]
	}).(InstanceParamValueOutput)
}

type InstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstanceTagInput is an input type that accepts InstanceTagArgs and InstanceTagOutput values.
// You can construct a concrete instance of `InstanceTagInput` via:
//
//	InstanceTagArgs{...}
type InstanceTagInput interface {
	pulumi.Input

	ToInstanceTagOutput() InstanceTagOutput
	ToInstanceTagOutputWithContext(context.Context) InstanceTagOutput
}

type InstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (i InstanceTagArgs) ToInstanceTagOutput() InstanceTagOutput {
	return i.ToInstanceTagOutputWithContext(context.Background())
}

func (i InstanceTagArgs) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagOutput)
}

// InstanceTagArrayInput is an input type that accepts InstanceTagArray and InstanceTagArrayOutput values.
// You can construct a concrete instance of `InstanceTagArrayInput` via:
//
//	InstanceTagArray{ InstanceTagArgs{...} }
type InstanceTagArrayInput interface {
	pulumi.Input

	ToInstanceTagArrayOutput() InstanceTagArrayOutput
	ToInstanceTagArrayOutputWithContext(context.Context) InstanceTagArrayOutput
}

type InstanceTagArray []InstanceTagInput

func (InstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (i InstanceTagArray) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return i.ToInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstanceTagArray) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagArrayOutput)
}

type InstanceTagOutput struct{ *pulumi.OutputState }

func (InstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (o InstanceTagOutput) ToInstanceTagOutput() InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return o
}

// The Key of Tags.
func (o InstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) Index(i pulumi.IntInput) InstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTag {
		return vs[0].([]InstanceTag)[vs[1].(int)]
	}).(InstanceTagOutput)
}

type InstancesInstance struct {
	// The list of backup plans.
	BackupPlan InstancesInstanceBackupPlan `pulumi:"backupPlan"`
	// The memory capacity information.
	Capacity InstancesInstanceCapacity `pulumi:"capacity"`
	// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
	ChargeType string `pulumi:"chargeType"`
	// Set the list of available zones to which the node belongs.
	ConfigureNodes []InstancesInstanceConfigureNode `pulumi:"configureNodes"`
	// The creation time of the redis instance.
	CreateTime string `pulumi:"createTime"`
	// whether enable deletion protection.
	DeletionProtection string `pulumi:"deletionProtection"`
	// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
	EngineVersion string `pulumi:"engineVersion"`
	// The expire time of the redis instance, valid when charge type is `PrePaid`.
	ExpiredTime string `pulumi:"expiredTime"`
	// The id of the redis instance.
	Id string `pulumi:"id"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId string `pulumi:"instanceId"`
	// The name of redis instance to query. This field supports fuzzy queries.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable time of the redis instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// Set the availability zone deployment scheme for the instance. The value range is as follows:
	// disabled: Single availability zone deployment scheme.
	// enabled: Multi-availability zone deployment scheme.
	// Description:
	// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
	MultiAz string `pulumi:"multiAz"`
	// The list of redis instance node IDs.
	NodeIds []string `pulumi:"nodeIds"`
	// The number of nodes in each shard.
	NodeNumber int `pulumi:"nodeNumber"`
	// The list of params.
	Params []InstancesInstanceParam `pulumi:"params"`
	// The project name of redis instance to query.
	ProjectName string `pulumi:"projectName"`
	// The region id of the redis instance.
	RegionId string `pulumi:"regionId"`
	// The memory capacity of each shard. Unit: GiB.
	ShardCapacity float64 `pulumi:"shardCapacity"`
	// The number of shards in the redis instance.
	ShardNumber int `pulumi:"shardNumber"`
	// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
	ShardedCluster int `pulumi:"shardedCluster"`
	// The status of redis instance to query.
	Status string `pulumi:"status"`
	// The subnet id of the redis instance.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []InstancesInstanceTag `pulumi:"tags"`
	// The list of connection information.
	VisitAddrs []InstancesInstanceVisitAddr `pulumi:"visitAddrs"`
	// Whether to enable password-free access when connecting to an instance through a private network.
	VpcAuthMode string `pulumi:"vpcAuthMode"`
	// The vpc id of redis instance to query. This field supports fuzzy queries.
	VpcId string `pulumi:"vpcId"`
	// The list of zone ID which the redis instance belongs.
	ZoneIds []string `pulumi:"zoneIds"`
}

// InstancesInstanceInput is an input type that accepts InstancesInstanceArgs and InstancesInstanceOutput values.
// You can construct a concrete instance of `InstancesInstanceInput` via:
//
//	InstancesInstanceArgs{...}
type InstancesInstanceInput interface {
	pulumi.Input

	ToInstancesInstanceOutput() InstancesInstanceOutput
	ToInstancesInstanceOutputWithContext(context.Context) InstancesInstanceOutput
}

type InstancesInstanceArgs struct {
	// The list of backup plans.
	BackupPlan InstancesInstanceBackupPlanInput `pulumi:"backupPlan"`
	// The memory capacity information.
	Capacity InstancesInstanceCapacityInput `pulumi:"capacity"`
	// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Set the list of available zones to which the node belongs.
	ConfigureNodes InstancesInstanceConfigureNodeArrayInput `pulumi:"configureNodes"`
	// The creation time of the redis instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// whether enable deletion protection.
	DeletionProtection pulumi.StringInput `pulumi:"deletionProtection"`
	// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// The expire time of the redis instance, valid when charge type is `PrePaid`.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The id of the redis instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of redis instance to query. This field supports fuzzy queries.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maintainable time of the redis instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// Set the availability zone deployment scheme for the instance. The value range is as follows:
	// disabled: Single availability zone deployment scheme.
	// enabled: Multi-availability zone deployment scheme.
	// Description:
	// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
	MultiAz pulumi.StringInput `pulumi:"multiAz"`
	// The list of redis instance node IDs.
	NodeIds pulumi.StringArrayInput `pulumi:"nodeIds"`
	// The number of nodes in each shard.
	NodeNumber pulumi.IntInput `pulumi:"nodeNumber"`
	// The list of params.
	Params InstancesInstanceParamArrayInput `pulumi:"params"`
	// The project name of redis instance to query.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The region id of the redis instance.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The memory capacity of each shard. Unit: GiB.
	ShardCapacity pulumi.Float64Input `pulumi:"shardCapacity"`
	// The number of shards in the redis instance.
	ShardNumber pulumi.IntInput `pulumi:"shardNumber"`
	// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
	ShardedCluster pulumi.IntInput `pulumi:"shardedCluster"`
	// The status of redis instance to query.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet id of the redis instance.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags InstancesInstanceTagArrayInput `pulumi:"tags"`
	// The list of connection information.
	VisitAddrs InstancesInstanceVisitAddrArrayInput `pulumi:"visitAddrs"`
	// Whether to enable password-free access when connecting to an instance through a private network.
	VpcAuthMode pulumi.StringInput `pulumi:"vpcAuthMode"`
	// The vpc id of redis instance to query. This field supports fuzzy queries.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The list of zone ID which the redis instance belongs.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (InstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstance)(nil)).Elem()
}

func (i InstancesInstanceArgs) ToInstancesInstanceOutput() InstancesInstanceOutput {
	return i.ToInstancesInstanceOutputWithContext(context.Background())
}

func (i InstancesInstanceArgs) ToInstancesInstanceOutputWithContext(ctx context.Context) InstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceOutput)
}

// InstancesInstanceArrayInput is an input type that accepts InstancesInstanceArray and InstancesInstanceArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceArrayInput` via:
//
//	InstancesInstanceArray{ InstancesInstanceArgs{...} }
type InstancesInstanceArrayInput interface {
	pulumi.Input

	ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput
	ToInstancesInstanceArrayOutputWithContext(context.Context) InstancesInstanceArrayOutput
}

type InstancesInstanceArray []InstancesInstanceInput

func (InstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstance)(nil)).Elem()
}

func (i InstancesInstanceArray) ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput {
	return i.ToInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceArray) ToInstancesInstanceArrayOutputWithContext(ctx context.Context) InstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceArrayOutput)
}

type InstancesInstanceOutput struct{ *pulumi.OutputState }

func (InstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstance)(nil)).Elem()
}

func (o InstancesInstanceOutput) ToInstancesInstanceOutput() InstancesInstanceOutput {
	return o
}

func (o InstancesInstanceOutput) ToInstancesInstanceOutputWithContext(ctx context.Context) InstancesInstanceOutput {
	return o
}

// The list of backup plans.
func (o InstancesInstanceOutput) BackupPlan() InstancesInstanceBackupPlanOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceBackupPlan { return v.BackupPlan }).(InstancesInstanceBackupPlanOutput)
}

// The memory capacity information.
func (o InstancesInstanceOutput) Capacity() InstancesInstanceCapacityOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceCapacity { return v.Capacity }).(InstancesInstanceCapacityOutput)
}

// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
func (o InstancesInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Set the list of available zones to which the node belongs.
func (o InstancesInstanceOutput) ConfigureNodes() InstancesInstanceConfigureNodeArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceConfigureNode { return v.ConfigureNodes }).(InstancesInstanceConfigureNodeArrayOutput)
}

// The creation time of the redis instance.
func (o InstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// whether enable deletion protection.
func (o InstancesInstanceOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
func (o InstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The expire time of the redis instance, valid when charge type is `PrePaid`.
func (o InstancesInstanceOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The id of the redis instance.
func (o InstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The id of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maintainable time of the redis instance.
func (o InstancesInstanceOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// Set the availability zone deployment scheme for the instance. The value range is as follows:
// disabled: Single availability zone deployment scheme.
// enabled: Multi-availability zone deployment scheme.
// Description:
// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
func (o InstancesInstanceOutput) MultiAz() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.MultiAz }).(pulumi.StringOutput)
}

// The list of redis instance node IDs.
func (o InstancesInstanceOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// The number of nodes in each shard.
func (o InstancesInstanceOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.NodeNumber }).(pulumi.IntOutput)
}

// The list of params.
func (o InstancesInstanceOutput) Params() InstancesInstanceParamArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceParam { return v.Params }).(InstancesInstanceParamArrayOutput)
}

// The project name of redis instance to query.
func (o InstancesInstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The region id of the redis instance.
func (o InstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// The memory capacity of each shard. Unit: GiB.
func (o InstancesInstanceOutput) ShardCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v InstancesInstance) float64 { return v.ShardCapacity }).(pulumi.Float64Output)
}

// The number of shards in the redis instance.
func (o InstancesInstanceOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.ShardNumber }).(pulumi.IntOutput)
}

// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
func (o InstancesInstanceOutput) ShardedCluster() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.ShardedCluster }).(pulumi.IntOutput)
}

// The status of redis instance to query.
func (o InstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet id of the redis instance.
func (o InstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o InstancesInstanceOutput) Tags() InstancesInstanceTagArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceTag { return v.Tags }).(InstancesInstanceTagArrayOutput)
}

// The list of connection information.
func (o InstancesInstanceOutput) VisitAddrs() InstancesInstanceVisitAddrArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceVisitAddr { return v.VisitAddrs }).(InstancesInstanceVisitAddrArrayOutput)
}

// Whether to enable password-free access when connecting to an instance through a private network.
func (o InstancesInstanceOutput) VpcAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.VpcAuthMode }).(pulumi.StringOutput)
}

// The vpc id of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The list of zone ID which the redis instance belongs.
func (o InstancesInstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type InstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstance)(nil)).Elem()
}

func (o InstancesInstanceArrayOutput) ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput {
	return o
}

func (o InstancesInstanceArrayOutput) ToInstancesInstanceArrayOutputWithContext(ctx context.Context) InstancesInstanceArrayOutput {
	return o
}

func (o InstancesInstanceArrayOutput) Index(i pulumi.IntInput) InstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstance {
		return vs[0].([]InstancesInstance)[vs[1].(int)]
	}).(InstancesInstanceOutput)
}

type InstancesInstanceBackupPlan struct {
	// Whether enable auto backup.
	Active bool `pulumi:"active"`
	// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	BackupHour int `pulumi:"backupHour"`
	// The backup type.
	BackupType string `pulumi:"backupType"`
	// The expected time for the next backup to be performed.
	ExpectNextBackupTime string `pulumi:"expectNextBackupTime"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId string `pulumi:"instanceId"`
	// The last time the backup policy was modified.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	Periods []int `pulumi:"periods"`
	// The number of days to keep backups, the default is 7 days.
	Ttl int `pulumi:"ttl"`
}

// InstancesInstanceBackupPlanInput is an input type that accepts InstancesInstanceBackupPlanArgs and InstancesInstanceBackupPlanOutput values.
// You can construct a concrete instance of `InstancesInstanceBackupPlanInput` via:
//
//	InstancesInstanceBackupPlanArgs{...}
type InstancesInstanceBackupPlanInput interface {
	pulumi.Input

	ToInstancesInstanceBackupPlanOutput() InstancesInstanceBackupPlanOutput
	ToInstancesInstanceBackupPlanOutputWithContext(context.Context) InstancesInstanceBackupPlanOutput
}

type InstancesInstanceBackupPlanArgs struct {
	// Whether enable auto backup.
	Active pulumi.BoolInput `pulumi:"active"`
	// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	BackupHour pulumi.IntInput `pulumi:"backupHour"`
	// The backup type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The expected time for the next backup to be performed.
	ExpectNextBackupTime pulumi.StringInput `pulumi:"expectNextBackupTime"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The last time the backup policy was modified.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	Periods pulumi.IntArrayInput `pulumi:"periods"`
	// The number of days to keep backups, the default is 7 days.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (InstancesInstanceBackupPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceBackupPlan)(nil)).Elem()
}

func (i InstancesInstanceBackupPlanArgs) ToInstancesInstanceBackupPlanOutput() InstancesInstanceBackupPlanOutput {
	return i.ToInstancesInstanceBackupPlanOutputWithContext(context.Background())
}

func (i InstancesInstanceBackupPlanArgs) ToInstancesInstanceBackupPlanOutputWithContext(ctx context.Context) InstancesInstanceBackupPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceBackupPlanOutput)
}

type InstancesInstanceBackupPlanOutput struct{ *pulumi.OutputState }

func (InstancesInstanceBackupPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceBackupPlan)(nil)).Elem()
}

func (o InstancesInstanceBackupPlanOutput) ToInstancesInstanceBackupPlanOutput() InstancesInstanceBackupPlanOutput {
	return o
}

func (o InstancesInstanceBackupPlanOutput) ToInstancesInstanceBackupPlanOutputWithContext(ctx context.Context) InstancesInstanceBackupPlanOutput {
	return o
}

// Whether enable auto backup.
func (o InstancesInstanceBackupPlanOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) bool { return v.Active }).(pulumi.BoolOutput)
}

// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
func (o InstancesInstanceBackupPlanOutput) BackupHour() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) int { return v.BackupHour }).(pulumi.IntOutput)
}

// The backup type.
func (o InstancesInstanceBackupPlanOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) string { return v.BackupType }).(pulumi.StringOutput)
}

// The expected time for the next backup to be performed.
func (o InstancesInstanceBackupPlanOutput) ExpectNextBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) string { return v.ExpectNextBackupTime }).(pulumi.StringOutput)
}

// The id of redis instance to query. This field supports fuzzy queries.
func (o InstancesInstanceBackupPlanOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The last time the backup policy was modified.
func (o InstancesInstanceBackupPlanOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
func (o InstancesInstanceBackupPlanOutput) Periods() pulumi.IntArrayOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) []int { return v.Periods }).(pulumi.IntArrayOutput)
}

// The number of days to keep backups, the default is 7 days.
func (o InstancesInstanceBackupPlanOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceBackupPlan) int { return v.Ttl }).(pulumi.IntOutput)
}

type InstancesInstanceCapacity struct {
	// The total memory capacity of the redis instance. Unit: MiB.
	Total int `pulumi:"total"`
	// The used memory capacity of the redis instance. Unit: MiB.
	Used int `pulumi:"used"`
}

// InstancesInstanceCapacityInput is an input type that accepts InstancesInstanceCapacityArgs and InstancesInstanceCapacityOutput values.
// You can construct a concrete instance of `InstancesInstanceCapacityInput` via:
//
//	InstancesInstanceCapacityArgs{...}
type InstancesInstanceCapacityInput interface {
	pulumi.Input

	ToInstancesInstanceCapacityOutput() InstancesInstanceCapacityOutput
	ToInstancesInstanceCapacityOutputWithContext(context.Context) InstancesInstanceCapacityOutput
}

type InstancesInstanceCapacityArgs struct {
	// The total memory capacity of the redis instance. Unit: MiB.
	Total pulumi.IntInput `pulumi:"total"`
	// The used memory capacity of the redis instance. Unit: MiB.
	Used pulumi.IntInput `pulumi:"used"`
}

func (InstancesInstanceCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceCapacity)(nil)).Elem()
}

func (i InstancesInstanceCapacityArgs) ToInstancesInstanceCapacityOutput() InstancesInstanceCapacityOutput {
	return i.ToInstancesInstanceCapacityOutputWithContext(context.Background())
}

func (i InstancesInstanceCapacityArgs) ToInstancesInstanceCapacityOutputWithContext(ctx context.Context) InstancesInstanceCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceCapacityOutput)
}

type InstancesInstanceCapacityOutput struct{ *pulumi.OutputState }

func (InstancesInstanceCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceCapacity)(nil)).Elem()
}

func (o InstancesInstanceCapacityOutput) ToInstancesInstanceCapacityOutput() InstancesInstanceCapacityOutput {
	return o
}

func (o InstancesInstanceCapacityOutput) ToInstancesInstanceCapacityOutputWithContext(ctx context.Context) InstancesInstanceCapacityOutput {
	return o
}

// The total memory capacity of the redis instance. Unit: MiB.
func (o InstancesInstanceCapacityOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceCapacity) int { return v.Total }).(pulumi.IntOutput)
}

// The used memory capacity of the redis instance. Unit: MiB.
func (o InstancesInstanceCapacityOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceCapacity) int { return v.Used }).(pulumi.IntOutput)
}

type InstancesInstanceConfigureNode struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az string `pulumi:"az"`
}

// InstancesInstanceConfigureNodeInput is an input type that accepts InstancesInstanceConfigureNodeArgs and InstancesInstanceConfigureNodeOutput values.
// You can construct a concrete instance of `InstancesInstanceConfigureNodeInput` via:
//
//	InstancesInstanceConfigureNodeArgs{...}
type InstancesInstanceConfigureNodeInput interface {
	pulumi.Input

	ToInstancesInstanceConfigureNodeOutput() InstancesInstanceConfigureNodeOutput
	ToInstancesInstanceConfigureNodeOutputWithContext(context.Context) InstancesInstanceConfigureNodeOutput
}

type InstancesInstanceConfigureNodeArgs struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az pulumi.StringInput `pulumi:"az"`
}

func (InstancesInstanceConfigureNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceConfigureNode)(nil)).Elem()
}

func (i InstancesInstanceConfigureNodeArgs) ToInstancesInstanceConfigureNodeOutput() InstancesInstanceConfigureNodeOutput {
	return i.ToInstancesInstanceConfigureNodeOutputWithContext(context.Background())
}

func (i InstancesInstanceConfigureNodeArgs) ToInstancesInstanceConfigureNodeOutputWithContext(ctx context.Context) InstancesInstanceConfigureNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceConfigureNodeOutput)
}

// InstancesInstanceConfigureNodeArrayInput is an input type that accepts InstancesInstanceConfigureNodeArray and InstancesInstanceConfigureNodeArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceConfigureNodeArrayInput` via:
//
//	InstancesInstanceConfigureNodeArray{ InstancesInstanceConfigureNodeArgs{...} }
type InstancesInstanceConfigureNodeArrayInput interface {
	pulumi.Input

	ToInstancesInstanceConfigureNodeArrayOutput() InstancesInstanceConfigureNodeArrayOutput
	ToInstancesInstanceConfigureNodeArrayOutputWithContext(context.Context) InstancesInstanceConfigureNodeArrayOutput
}

type InstancesInstanceConfigureNodeArray []InstancesInstanceConfigureNodeInput

func (InstancesInstanceConfigureNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceConfigureNode)(nil)).Elem()
}

func (i InstancesInstanceConfigureNodeArray) ToInstancesInstanceConfigureNodeArrayOutput() InstancesInstanceConfigureNodeArrayOutput {
	return i.ToInstancesInstanceConfigureNodeArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceConfigureNodeArray) ToInstancesInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceConfigureNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceConfigureNodeArrayOutput)
}

type InstancesInstanceConfigureNodeOutput struct{ *pulumi.OutputState }

func (InstancesInstanceConfigureNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceConfigureNode)(nil)).Elem()
}

func (o InstancesInstanceConfigureNodeOutput) ToInstancesInstanceConfigureNodeOutput() InstancesInstanceConfigureNodeOutput {
	return o
}

func (o InstancesInstanceConfigureNodeOutput) ToInstancesInstanceConfigureNodeOutputWithContext(ctx context.Context) InstancesInstanceConfigureNodeOutput {
	return o
}

// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
func (o InstancesInstanceConfigureNodeOutput) Az() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceConfigureNode) string { return v.Az }).(pulumi.StringOutput)
}

type InstancesInstanceConfigureNodeArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceConfigureNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceConfigureNode)(nil)).Elem()
}

func (o InstancesInstanceConfigureNodeArrayOutput) ToInstancesInstanceConfigureNodeArrayOutput() InstancesInstanceConfigureNodeArrayOutput {
	return o
}

func (o InstancesInstanceConfigureNodeArrayOutput) ToInstancesInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceConfigureNodeArrayOutput {
	return o
}

func (o InstancesInstanceConfigureNodeArrayOutput) Index(i pulumi.IntInput) InstancesInstanceConfigureNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceConfigureNode {
		return vs[0].([]InstancesInstanceConfigureNode)[vs[1].(int)]
	}).(InstancesInstanceConfigureNodeOutput)
}

type InstancesInstanceParam struct {
	// Current value of the configuration parameter.
	CurrentValue string `pulumi:"currentValue"`
	// Default value of the configuration parameter.
	DefaultValue string `pulumi:"defaultValue"`
	// The description of this option item.
	Description string `pulumi:"description"`
	// Whether the current redis instance supports editing this parameter.
	EditableForInstance bool `pulumi:"editableForInstance"`
	// Whether need to reboot the redis instance when modifying this parameter.
	NeedReboot bool `pulumi:"needReboot"`
	// The list of options. Valid when the configuration parameter type is `Radio`.
	Options []InstancesInstanceParamOption `pulumi:"options"`
	// The name of the configuration parameter.
	ParamName string `pulumi:"paramName"`
	// The valid value range of the numeric type configuration parameter.
	Range string `pulumi:"range"`
	// The type of the configuration parameter.
	Type string `pulumi:"type"`
	// The unit of the numeric type configuration parameter.
	Unit string `pulumi:"unit"`
}

// InstancesInstanceParamInput is an input type that accepts InstancesInstanceParamArgs and InstancesInstanceParamOutput values.
// You can construct a concrete instance of `InstancesInstanceParamInput` via:
//
//	InstancesInstanceParamArgs{...}
type InstancesInstanceParamInput interface {
	pulumi.Input

	ToInstancesInstanceParamOutput() InstancesInstanceParamOutput
	ToInstancesInstanceParamOutputWithContext(context.Context) InstancesInstanceParamOutput
}

type InstancesInstanceParamArgs struct {
	// Current value of the configuration parameter.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// Default value of the configuration parameter.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// The description of this option item.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the current redis instance supports editing this parameter.
	EditableForInstance pulumi.BoolInput `pulumi:"editableForInstance"`
	// Whether need to reboot the redis instance when modifying this parameter.
	NeedReboot pulumi.BoolInput `pulumi:"needReboot"`
	// The list of options. Valid when the configuration parameter type is `Radio`.
	Options InstancesInstanceParamOptionArrayInput `pulumi:"options"`
	// The name of the configuration parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The valid value range of the numeric type configuration parameter.
	Range pulumi.StringInput `pulumi:"range"`
	// The type of the configuration parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The unit of the numeric type configuration parameter.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (InstancesInstanceParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceParam)(nil)).Elem()
}

func (i InstancesInstanceParamArgs) ToInstancesInstanceParamOutput() InstancesInstanceParamOutput {
	return i.ToInstancesInstanceParamOutputWithContext(context.Background())
}

func (i InstancesInstanceParamArgs) ToInstancesInstanceParamOutputWithContext(ctx context.Context) InstancesInstanceParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceParamOutput)
}

// InstancesInstanceParamArrayInput is an input type that accepts InstancesInstanceParamArray and InstancesInstanceParamArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceParamArrayInput` via:
//
//	InstancesInstanceParamArray{ InstancesInstanceParamArgs{...} }
type InstancesInstanceParamArrayInput interface {
	pulumi.Input

	ToInstancesInstanceParamArrayOutput() InstancesInstanceParamArrayOutput
	ToInstancesInstanceParamArrayOutputWithContext(context.Context) InstancesInstanceParamArrayOutput
}

type InstancesInstanceParamArray []InstancesInstanceParamInput

func (InstancesInstanceParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceParam)(nil)).Elem()
}

func (i InstancesInstanceParamArray) ToInstancesInstanceParamArrayOutput() InstancesInstanceParamArrayOutput {
	return i.ToInstancesInstanceParamArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceParamArray) ToInstancesInstanceParamArrayOutputWithContext(ctx context.Context) InstancesInstanceParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceParamArrayOutput)
}

type InstancesInstanceParamOutput struct{ *pulumi.OutputState }

func (InstancesInstanceParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceParam)(nil)).Elem()
}

func (o InstancesInstanceParamOutput) ToInstancesInstanceParamOutput() InstancesInstanceParamOutput {
	return o
}

func (o InstancesInstanceParamOutput) ToInstancesInstanceParamOutputWithContext(ctx context.Context) InstancesInstanceParamOutput {
	return o
}

// Current value of the configuration parameter.
func (o InstancesInstanceParamOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// Default value of the configuration parameter.
func (o InstancesInstanceParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// The description of this option item.
func (o InstancesInstanceParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the current redis instance supports editing this parameter.
func (o InstancesInstanceParamOutput) EditableForInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceParam) bool { return v.EditableForInstance }).(pulumi.BoolOutput)
}

// Whether need to reboot the redis instance when modifying this parameter.
func (o InstancesInstanceParamOutput) NeedReboot() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceParam) bool { return v.NeedReboot }).(pulumi.BoolOutput)
}

// The list of options. Valid when the configuration parameter type is `Radio`.
func (o InstancesInstanceParamOutput) Options() InstancesInstanceParamOptionArrayOutput {
	return o.ApplyT(func(v InstancesInstanceParam) []InstancesInstanceParamOption { return v.Options }).(InstancesInstanceParamOptionArrayOutput)
}

// The name of the configuration parameter.
func (o InstancesInstanceParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// The valid value range of the numeric type configuration parameter.
func (o InstancesInstanceParamOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.Range }).(pulumi.StringOutput)
}

// The type of the configuration parameter.
func (o InstancesInstanceParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.Type }).(pulumi.StringOutput)
}

// The unit of the numeric type configuration parameter.
func (o InstancesInstanceParamOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParam) string { return v.Unit }).(pulumi.StringOutput)
}

type InstancesInstanceParamArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceParam)(nil)).Elem()
}

func (o InstancesInstanceParamArrayOutput) ToInstancesInstanceParamArrayOutput() InstancesInstanceParamArrayOutput {
	return o
}

func (o InstancesInstanceParamArrayOutput) ToInstancesInstanceParamArrayOutputWithContext(ctx context.Context) InstancesInstanceParamArrayOutput {
	return o
}

func (o InstancesInstanceParamArrayOutput) Index(i pulumi.IntInput) InstancesInstanceParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceParam {
		return vs[0].([]InstancesInstanceParam)[vs[1].(int)]
	}).(InstancesInstanceParamOutput)
}

type InstancesInstanceParamOption struct {
	// The description of this option item.
	Description string `pulumi:"description"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstancesInstanceParamOptionInput is an input type that accepts InstancesInstanceParamOptionArgs and InstancesInstanceParamOptionOutput values.
// You can construct a concrete instance of `InstancesInstanceParamOptionInput` via:
//
//	InstancesInstanceParamOptionArgs{...}
type InstancesInstanceParamOptionInput interface {
	pulumi.Input

	ToInstancesInstanceParamOptionOutput() InstancesInstanceParamOptionOutput
	ToInstancesInstanceParamOptionOutputWithContext(context.Context) InstancesInstanceParamOptionOutput
}

type InstancesInstanceParamOptionArgs struct {
	// The description of this option item.
	Description pulumi.StringInput `pulumi:"description"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstancesInstanceParamOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceParamOption)(nil)).Elem()
}

func (i InstancesInstanceParamOptionArgs) ToInstancesInstanceParamOptionOutput() InstancesInstanceParamOptionOutput {
	return i.ToInstancesInstanceParamOptionOutputWithContext(context.Background())
}

func (i InstancesInstanceParamOptionArgs) ToInstancesInstanceParamOptionOutputWithContext(ctx context.Context) InstancesInstanceParamOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceParamOptionOutput)
}

// InstancesInstanceParamOptionArrayInput is an input type that accepts InstancesInstanceParamOptionArray and InstancesInstanceParamOptionArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceParamOptionArrayInput` via:
//
//	InstancesInstanceParamOptionArray{ InstancesInstanceParamOptionArgs{...} }
type InstancesInstanceParamOptionArrayInput interface {
	pulumi.Input

	ToInstancesInstanceParamOptionArrayOutput() InstancesInstanceParamOptionArrayOutput
	ToInstancesInstanceParamOptionArrayOutputWithContext(context.Context) InstancesInstanceParamOptionArrayOutput
}

type InstancesInstanceParamOptionArray []InstancesInstanceParamOptionInput

func (InstancesInstanceParamOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceParamOption)(nil)).Elem()
}

func (i InstancesInstanceParamOptionArray) ToInstancesInstanceParamOptionArrayOutput() InstancesInstanceParamOptionArrayOutput {
	return i.ToInstancesInstanceParamOptionArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceParamOptionArray) ToInstancesInstanceParamOptionArrayOutputWithContext(ctx context.Context) InstancesInstanceParamOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceParamOptionArrayOutput)
}

type InstancesInstanceParamOptionOutput struct{ *pulumi.OutputState }

func (InstancesInstanceParamOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceParamOption)(nil)).Elem()
}

func (o InstancesInstanceParamOptionOutput) ToInstancesInstanceParamOptionOutput() InstancesInstanceParamOptionOutput {
	return o
}

func (o InstancesInstanceParamOptionOutput) ToInstancesInstanceParamOptionOutputWithContext(ctx context.Context) InstancesInstanceParamOptionOutput {
	return o
}

// The description of this option item.
func (o InstancesInstanceParamOptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParamOption) string { return v.Description }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstancesInstanceParamOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceParamOption) string { return v.Value }).(pulumi.StringOutput)
}

type InstancesInstanceParamOptionArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceParamOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceParamOption)(nil)).Elem()
}

func (o InstancesInstanceParamOptionArrayOutput) ToInstancesInstanceParamOptionArrayOutput() InstancesInstanceParamOptionArrayOutput {
	return o
}

func (o InstancesInstanceParamOptionArrayOutput) ToInstancesInstanceParamOptionArrayOutputWithContext(ctx context.Context) InstancesInstanceParamOptionArrayOutput {
	return o
}

func (o InstancesInstanceParamOptionArrayOutput) Index(i pulumi.IntInput) InstancesInstanceParamOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceParamOption {
		return vs[0].([]InstancesInstanceParamOption)[vs[1].(int)]
	}).(InstancesInstanceParamOptionOutput)
}

type InstancesInstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstancesInstanceTagInput is an input type that accepts InstancesInstanceTagArgs and InstancesInstanceTagOutput values.
// You can construct a concrete instance of `InstancesInstanceTagInput` via:
//
//	InstancesInstanceTagArgs{...}
type InstancesInstanceTagInput interface {
	pulumi.Input

	ToInstancesInstanceTagOutput() InstancesInstanceTagOutput
	ToInstancesInstanceTagOutputWithContext(context.Context) InstancesInstanceTagOutput
}

type InstancesInstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstancesInstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceTag)(nil)).Elem()
}

func (i InstancesInstanceTagArgs) ToInstancesInstanceTagOutput() InstancesInstanceTagOutput {
	return i.ToInstancesInstanceTagOutputWithContext(context.Background())
}

func (i InstancesInstanceTagArgs) ToInstancesInstanceTagOutputWithContext(ctx context.Context) InstancesInstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceTagOutput)
}

// InstancesInstanceTagArrayInput is an input type that accepts InstancesInstanceTagArray and InstancesInstanceTagArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceTagArrayInput` via:
//
//	InstancesInstanceTagArray{ InstancesInstanceTagArgs{...} }
type InstancesInstanceTagArrayInput interface {
	pulumi.Input

	ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput
	ToInstancesInstanceTagArrayOutputWithContext(context.Context) InstancesInstanceTagArrayOutput
}

type InstancesInstanceTagArray []InstancesInstanceTagInput

func (InstancesInstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceTag)(nil)).Elem()
}

func (i InstancesInstanceTagArray) ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput {
	return i.ToInstancesInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceTagArray) ToInstancesInstanceTagArrayOutputWithContext(ctx context.Context) InstancesInstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceTagArrayOutput)
}

type InstancesInstanceTagOutput struct{ *pulumi.OutputState }

func (InstancesInstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceTag)(nil)).Elem()
}

func (o InstancesInstanceTagOutput) ToInstancesInstanceTagOutput() InstancesInstanceTagOutput {
	return o
}

func (o InstancesInstanceTagOutput) ToInstancesInstanceTagOutputWithContext(ctx context.Context) InstancesInstanceTagOutput {
	return o
}

// The Key of Tags.
func (o InstancesInstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstancesInstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstancesInstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceTag)(nil)).Elem()
}

func (o InstancesInstanceTagArrayOutput) ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput {
	return o
}

func (o InstancesInstanceTagArrayOutput) ToInstancesInstanceTagArrayOutputWithContext(ctx context.Context) InstancesInstanceTagArrayOutput {
	return o
}

func (o InstancesInstanceTagArrayOutput) Index(i pulumi.IntInput) InstancesInstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceTag {
		return vs[0].([]InstancesInstanceTag)[vs[1].(int)]
	}).(InstancesInstanceTagOutput)
}

type InstancesInstanceVisitAddr struct {
	// The connection address type.
	AddrType string `pulumi:"addrType"`
	// The connection address.
	Address string `pulumi:"address"`
	// The EIP ID bound to the instance's public network address.
	EipId string `pulumi:"eipId"`
	// The connection port.
	Port string `pulumi:"port"`
	// The ipv4 address of the connection address.
	Vip string `pulumi:"vip"`
	// The ipv6 address of the connection address.
	VipV6 string `pulumi:"vipV6"`
}

// InstancesInstanceVisitAddrInput is an input type that accepts InstancesInstanceVisitAddrArgs and InstancesInstanceVisitAddrOutput values.
// You can construct a concrete instance of `InstancesInstanceVisitAddrInput` via:
//
//	InstancesInstanceVisitAddrArgs{...}
type InstancesInstanceVisitAddrInput interface {
	pulumi.Input

	ToInstancesInstanceVisitAddrOutput() InstancesInstanceVisitAddrOutput
	ToInstancesInstanceVisitAddrOutputWithContext(context.Context) InstancesInstanceVisitAddrOutput
}

type InstancesInstanceVisitAddrArgs struct {
	// The connection address type.
	AddrType pulumi.StringInput `pulumi:"addrType"`
	// The connection address.
	Address pulumi.StringInput `pulumi:"address"`
	// The EIP ID bound to the instance's public network address.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// The connection port.
	Port pulumi.StringInput `pulumi:"port"`
	// The ipv4 address of the connection address.
	Vip pulumi.StringInput `pulumi:"vip"`
	// The ipv6 address of the connection address.
	VipV6 pulumi.StringInput `pulumi:"vipV6"`
}

func (InstancesInstanceVisitAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceVisitAddr)(nil)).Elem()
}

func (i InstancesInstanceVisitAddrArgs) ToInstancesInstanceVisitAddrOutput() InstancesInstanceVisitAddrOutput {
	return i.ToInstancesInstanceVisitAddrOutputWithContext(context.Background())
}

func (i InstancesInstanceVisitAddrArgs) ToInstancesInstanceVisitAddrOutputWithContext(ctx context.Context) InstancesInstanceVisitAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceVisitAddrOutput)
}

// InstancesInstanceVisitAddrArrayInput is an input type that accepts InstancesInstanceVisitAddrArray and InstancesInstanceVisitAddrArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceVisitAddrArrayInput` via:
//
//	InstancesInstanceVisitAddrArray{ InstancesInstanceVisitAddrArgs{...} }
type InstancesInstanceVisitAddrArrayInput interface {
	pulumi.Input

	ToInstancesInstanceVisitAddrArrayOutput() InstancesInstanceVisitAddrArrayOutput
	ToInstancesInstanceVisitAddrArrayOutputWithContext(context.Context) InstancesInstanceVisitAddrArrayOutput
}

type InstancesInstanceVisitAddrArray []InstancesInstanceVisitAddrInput

func (InstancesInstanceVisitAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceVisitAddr)(nil)).Elem()
}

func (i InstancesInstanceVisitAddrArray) ToInstancesInstanceVisitAddrArrayOutput() InstancesInstanceVisitAddrArrayOutput {
	return i.ToInstancesInstanceVisitAddrArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceVisitAddrArray) ToInstancesInstanceVisitAddrArrayOutputWithContext(ctx context.Context) InstancesInstanceVisitAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceVisitAddrArrayOutput)
}

type InstancesInstanceVisitAddrOutput struct{ *pulumi.OutputState }

func (InstancesInstanceVisitAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceVisitAddr)(nil)).Elem()
}

func (o InstancesInstanceVisitAddrOutput) ToInstancesInstanceVisitAddrOutput() InstancesInstanceVisitAddrOutput {
	return o
}

func (o InstancesInstanceVisitAddrOutput) ToInstancesInstanceVisitAddrOutputWithContext(ctx context.Context) InstancesInstanceVisitAddrOutput {
	return o
}

// The connection address type.
func (o InstancesInstanceVisitAddrOutput) AddrType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.AddrType }).(pulumi.StringOutput)
}

// The connection address.
func (o InstancesInstanceVisitAddrOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.Address }).(pulumi.StringOutput)
}

// The EIP ID bound to the instance's public network address.
func (o InstancesInstanceVisitAddrOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.EipId }).(pulumi.StringOutput)
}

// The connection port.
func (o InstancesInstanceVisitAddrOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.Port }).(pulumi.StringOutput)
}

// The ipv4 address of the connection address.
func (o InstancesInstanceVisitAddrOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.Vip }).(pulumi.StringOutput)
}

// The ipv6 address of the connection address.
func (o InstancesInstanceVisitAddrOutput) VipV6() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceVisitAddr) string { return v.VipV6 }).(pulumi.StringOutput)
}

type InstancesInstanceVisitAddrArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceVisitAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceVisitAddr)(nil)).Elem()
}

func (o InstancesInstanceVisitAddrArrayOutput) ToInstancesInstanceVisitAddrArrayOutput() InstancesInstanceVisitAddrArrayOutput {
	return o
}

func (o InstancesInstanceVisitAddrArrayOutput) ToInstancesInstanceVisitAddrArrayOutputWithContext(ctx context.Context) InstancesInstanceVisitAddrArrayOutput {
	return o
}

func (o InstancesInstanceVisitAddrArrayOutput) Index(i pulumi.IntInput) InstancesInstanceVisitAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceVisitAddr {
		return vs[0].([]InstancesInstanceVisitAddr)[vs[1].(int)]
	}).(InstancesInstanceVisitAddrOutput)
}

type InstancesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstancesTagInput is an input type that accepts InstancesTagArgs and InstancesTagOutput values.
// You can construct a concrete instance of `InstancesTagInput` via:
//
//	InstancesTagArgs{...}
type InstancesTagInput interface {
	pulumi.Input

	ToInstancesTagOutput() InstancesTagOutput
	ToInstancesTagOutputWithContext(context.Context) InstancesTagOutput
}

type InstancesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstancesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTag)(nil)).Elem()
}

func (i InstancesTagArgs) ToInstancesTagOutput() InstancesTagOutput {
	return i.ToInstancesTagOutputWithContext(context.Background())
}

func (i InstancesTagArgs) ToInstancesTagOutputWithContext(ctx context.Context) InstancesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTagOutput)
}

// InstancesTagArrayInput is an input type that accepts InstancesTagArray and InstancesTagArrayOutput values.
// You can construct a concrete instance of `InstancesTagArrayInput` via:
//
//	InstancesTagArray{ InstancesTagArgs{...} }
type InstancesTagArrayInput interface {
	pulumi.Input

	ToInstancesTagArrayOutput() InstancesTagArrayOutput
	ToInstancesTagArrayOutputWithContext(context.Context) InstancesTagArrayOutput
}

type InstancesTagArray []InstancesTagInput

func (InstancesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTag)(nil)).Elem()
}

func (i InstancesTagArray) ToInstancesTagArrayOutput() InstancesTagArrayOutput {
	return i.ToInstancesTagArrayOutputWithContext(context.Background())
}

func (i InstancesTagArray) ToInstancesTagArrayOutputWithContext(ctx context.Context) InstancesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTagArrayOutput)
}

type InstancesTagOutput struct{ *pulumi.OutputState }

func (InstancesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTag)(nil)).Elem()
}

func (o InstancesTagOutput) ToInstancesTagOutput() InstancesTagOutput {
	return o
}

func (o InstancesTagOutput) ToInstancesTagOutputWithContext(ctx context.Context) InstancesTagOutput {
	return o
}

// The Key of Tags.
func (o InstancesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstancesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstancesTagArrayOutput struct{ *pulumi.OutputState }

func (InstancesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTag)(nil)).Elem()
}

func (o InstancesTagArrayOutput) ToInstancesTagArrayOutput() InstancesTagArrayOutput {
	return o
}

func (o InstancesTagArrayOutput) ToInstancesTagArrayOutputWithContext(ctx context.Context) InstancesTagArrayOutput {
	return o
}

func (o InstancesTagArrayOutput) Index(i pulumi.IntInput) InstancesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesTag {
		return vs[0].([]InstancesTag)[vs[1].(int)]
	}).(InstancesTagOutput)
}

type PitrTimeWindowsPeriod struct {
	// Recoverable end time (UTC time) supported when restoring data by point in time.
	EndTime string `pulumi:"endTime"`
	// The instance id.
	InstanceId string `pulumi:"instanceId"`
	// The recoverable start time (in UTC time) supported when restoring data by point in time.
	StartTime string `pulumi:"startTime"`
}

// PitrTimeWindowsPeriodInput is an input type that accepts PitrTimeWindowsPeriodArgs and PitrTimeWindowsPeriodOutput values.
// You can construct a concrete instance of `PitrTimeWindowsPeriodInput` via:
//
//	PitrTimeWindowsPeriodArgs{...}
type PitrTimeWindowsPeriodInput interface {
	pulumi.Input

	ToPitrTimeWindowsPeriodOutput() PitrTimeWindowsPeriodOutput
	ToPitrTimeWindowsPeriodOutputWithContext(context.Context) PitrTimeWindowsPeriodOutput
}

type PitrTimeWindowsPeriodArgs struct {
	// Recoverable end time (UTC time) supported when restoring data by point in time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The recoverable start time (in UTC time) supported when restoring data by point in time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (PitrTimeWindowsPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PitrTimeWindowsPeriod)(nil)).Elem()
}

func (i PitrTimeWindowsPeriodArgs) ToPitrTimeWindowsPeriodOutput() PitrTimeWindowsPeriodOutput {
	return i.ToPitrTimeWindowsPeriodOutputWithContext(context.Background())
}

func (i PitrTimeWindowsPeriodArgs) ToPitrTimeWindowsPeriodOutputWithContext(ctx context.Context) PitrTimeWindowsPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PitrTimeWindowsPeriodOutput)
}

// PitrTimeWindowsPeriodArrayInput is an input type that accepts PitrTimeWindowsPeriodArray and PitrTimeWindowsPeriodArrayOutput values.
// You can construct a concrete instance of `PitrTimeWindowsPeriodArrayInput` via:
//
//	PitrTimeWindowsPeriodArray{ PitrTimeWindowsPeriodArgs{...} }
type PitrTimeWindowsPeriodArrayInput interface {
	pulumi.Input

	ToPitrTimeWindowsPeriodArrayOutput() PitrTimeWindowsPeriodArrayOutput
	ToPitrTimeWindowsPeriodArrayOutputWithContext(context.Context) PitrTimeWindowsPeriodArrayOutput
}

type PitrTimeWindowsPeriodArray []PitrTimeWindowsPeriodInput

func (PitrTimeWindowsPeriodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PitrTimeWindowsPeriod)(nil)).Elem()
}

func (i PitrTimeWindowsPeriodArray) ToPitrTimeWindowsPeriodArrayOutput() PitrTimeWindowsPeriodArrayOutput {
	return i.ToPitrTimeWindowsPeriodArrayOutputWithContext(context.Background())
}

func (i PitrTimeWindowsPeriodArray) ToPitrTimeWindowsPeriodArrayOutputWithContext(ctx context.Context) PitrTimeWindowsPeriodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PitrTimeWindowsPeriodArrayOutput)
}

type PitrTimeWindowsPeriodOutput struct{ *pulumi.OutputState }

func (PitrTimeWindowsPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PitrTimeWindowsPeriod)(nil)).Elem()
}

func (o PitrTimeWindowsPeriodOutput) ToPitrTimeWindowsPeriodOutput() PitrTimeWindowsPeriodOutput {
	return o
}

func (o PitrTimeWindowsPeriodOutput) ToPitrTimeWindowsPeriodOutputWithContext(ctx context.Context) PitrTimeWindowsPeriodOutput {
	return o
}

// Recoverable end time (UTC time) supported when restoring data by point in time.
func (o PitrTimeWindowsPeriodOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v PitrTimeWindowsPeriod) string { return v.EndTime }).(pulumi.StringOutput)
}

// The instance id.
func (o PitrTimeWindowsPeriodOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v PitrTimeWindowsPeriod) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The recoverable start time (in UTC time) supported when restoring data by point in time.
func (o PitrTimeWindowsPeriodOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v PitrTimeWindowsPeriod) string { return v.StartTime }).(pulumi.StringOutput)
}

type PitrTimeWindowsPeriodArrayOutput struct{ *pulumi.OutputState }

func (PitrTimeWindowsPeriodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PitrTimeWindowsPeriod)(nil)).Elem()
}

func (o PitrTimeWindowsPeriodArrayOutput) ToPitrTimeWindowsPeriodArrayOutput() PitrTimeWindowsPeriodArrayOutput {
	return o
}

func (o PitrTimeWindowsPeriodArrayOutput) ToPitrTimeWindowsPeriodArrayOutputWithContext(ctx context.Context) PitrTimeWindowsPeriodArrayOutput {
	return o
}

func (o PitrTimeWindowsPeriodArrayOutput) Index(i pulumi.IntInput) PitrTimeWindowsPeriodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PitrTimeWindowsPeriod {
		return vs[0].([]PitrTimeWindowsPeriod)[vs[1].(int)]
	}).(PitrTimeWindowsPeriodOutput)
}

type RegionsRegion struct {
	// Target region info.
	RegionId string `pulumi:"regionId"`
	// The name of region.
	RegionName string `pulumi:"regionName"`
}

// RegionsRegionInput is an input type that accepts RegionsRegionArgs and RegionsRegionOutput values.
// You can construct a concrete instance of `RegionsRegionInput` via:
//
//	RegionsRegionArgs{...}
type RegionsRegionInput interface {
	pulumi.Input

	ToRegionsRegionOutput() RegionsRegionOutput
	ToRegionsRegionOutputWithContext(context.Context) RegionsRegionOutput
}

type RegionsRegionArgs struct {
	// Target region info.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The name of region.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (RegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionsRegion)(nil)).Elem()
}

func (i RegionsRegionArgs) ToRegionsRegionOutput() RegionsRegionOutput {
	return i.ToRegionsRegionOutputWithContext(context.Background())
}

func (i RegionsRegionArgs) ToRegionsRegionOutputWithContext(ctx context.Context) RegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionsRegionOutput)
}

// RegionsRegionArrayInput is an input type that accepts RegionsRegionArray and RegionsRegionArrayOutput values.
// You can construct a concrete instance of `RegionsRegionArrayInput` via:
//
//	RegionsRegionArray{ RegionsRegionArgs{...} }
type RegionsRegionArrayInput interface {
	pulumi.Input

	ToRegionsRegionArrayOutput() RegionsRegionArrayOutput
	ToRegionsRegionArrayOutputWithContext(context.Context) RegionsRegionArrayOutput
}

type RegionsRegionArray []RegionsRegionInput

func (RegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionsRegion)(nil)).Elem()
}

func (i RegionsRegionArray) ToRegionsRegionArrayOutput() RegionsRegionArrayOutput {
	return i.ToRegionsRegionArrayOutputWithContext(context.Background())
}

func (i RegionsRegionArray) ToRegionsRegionArrayOutputWithContext(ctx context.Context) RegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionsRegionArrayOutput)
}

type RegionsRegionOutput struct{ *pulumi.OutputState }

func (RegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionsRegion)(nil)).Elem()
}

func (o RegionsRegionOutput) ToRegionsRegionOutput() RegionsRegionOutput {
	return o
}

func (o RegionsRegionOutput) ToRegionsRegionOutputWithContext(ctx context.Context) RegionsRegionOutput {
	return o
}

// Target region info.
func (o RegionsRegionOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v RegionsRegion) string { return v.RegionId }).(pulumi.StringOutput)
}

// The name of region.
func (o RegionsRegionOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v RegionsRegion) string { return v.RegionName }).(pulumi.StringOutput)
}

type RegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (RegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionsRegion)(nil)).Elem()
}

func (o RegionsRegionArrayOutput) ToRegionsRegionArrayOutput() RegionsRegionArrayOutput {
	return o
}

func (o RegionsRegionArrayOutput) ToRegionsRegionArrayOutputWithContext(ctx context.Context) RegionsRegionArrayOutput {
	return o
}

func (o RegionsRegionArrayOutput) Index(i pulumi.IntInput) RegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionsRegion {
		return vs[0].([]RegionsRegion)[vs[1].(int)]
	}).(RegionsRegionOutput)
}

type ZonesZone struct {
	// The id of the zone.
	Id string `pulumi:"id"`
	// The id of the zone.
	ZoneId string `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName string `pulumi:"zoneName"`
}

// ZonesZoneInput is an input type that accepts ZonesZoneArgs and ZonesZoneOutput values.
// You can construct a concrete instance of `ZonesZoneInput` via:
//
//	ZonesZoneArgs{...}
type ZonesZoneInput interface {
	pulumi.Input

	ToZonesZoneOutput() ZonesZoneOutput
	ToZonesZoneOutputWithContext(context.Context) ZonesZoneOutput
}

type ZonesZoneArgs struct {
	// The id of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (ZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesZone)(nil)).Elem()
}

func (i ZonesZoneArgs) ToZonesZoneOutput() ZonesZoneOutput {
	return i.ToZonesZoneOutputWithContext(context.Background())
}

func (i ZonesZoneArgs) ToZonesZoneOutputWithContext(ctx context.Context) ZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesZoneOutput)
}

// ZonesZoneArrayInput is an input type that accepts ZonesZoneArray and ZonesZoneArrayOutput values.
// You can construct a concrete instance of `ZonesZoneArrayInput` via:
//
//	ZonesZoneArray{ ZonesZoneArgs{...} }
type ZonesZoneArrayInput interface {
	pulumi.Input

	ToZonesZoneArrayOutput() ZonesZoneArrayOutput
	ToZonesZoneArrayOutputWithContext(context.Context) ZonesZoneArrayOutput
}

type ZonesZoneArray []ZonesZoneInput

func (ZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesZone)(nil)).Elem()
}

func (i ZonesZoneArray) ToZonesZoneArrayOutput() ZonesZoneArrayOutput {
	return i.ToZonesZoneArrayOutputWithContext(context.Background())
}

func (i ZonesZoneArray) ToZonesZoneArrayOutputWithContext(ctx context.Context) ZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesZoneArrayOutput)
}

type ZonesZoneOutput struct{ *pulumi.OutputState }

func (ZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesZone)(nil)).Elem()
}

func (o ZonesZoneOutput) ToZonesZoneOutput() ZonesZoneOutput {
	return o
}

func (o ZonesZoneOutput) ToZonesZoneOutputWithContext(ctx context.Context) ZonesZoneOutput {
	return o
}

// The id of the zone.
func (o ZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the zone.
func (o ZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The name of the zone.
func (o ZonesZoneOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesZone) string { return v.ZoneName }).(pulumi.StringOutput)
}

type ZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (ZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesZone)(nil)).Elem()
}

func (o ZonesZoneArrayOutput) ToZonesZoneArrayOutput() ZonesZoneArrayOutput {
	return o
}

func (o ZonesZoneArrayOutput) ToZonesZoneArrayOutputWithContext(ctx context.Context) ZonesZoneArrayOutput {
	return o
}

func (o ZonesZoneArrayOutput) Index(i pulumi.IntInput) ZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZonesZone {
		return vs[0].([]ZonesZone)[vs[1].(int)]
	}).(ZonesZoneOutput)
}

type GetAccountsAccount struct {
	// The name of the redis account.
	AccountName string `pulumi:"accountName"`
	// The description of the redis account.
	Description string `pulumi:"description"`
	// The id of the Redis instance.
	InstanceId string `pulumi:"instanceId"`
	// The role info.
	RoleName string `pulumi:"roleName"`
}

// GetAccountsAccountInput is an input type that accepts GetAccountsAccountArgs and GetAccountsAccountOutput values.
// You can construct a concrete instance of `GetAccountsAccountInput` via:
//
//	GetAccountsAccountArgs{...}
type GetAccountsAccountInput interface {
	pulumi.Input

	ToGetAccountsAccountOutput() GetAccountsAccountOutput
	ToGetAccountsAccountOutputWithContext(context.Context) GetAccountsAccountOutput
}

type GetAccountsAccountArgs struct {
	// The name of the redis account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The description of the redis account.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the Redis instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The role info.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (GetAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return i.ToGetAccountsAccountOutputWithContext(context.Background())
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountOutput)
}

// GetAccountsAccountArrayInput is an input type that accepts GetAccountsAccountArray and GetAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountArrayInput` via:
//
//	GetAccountsAccountArray{ GetAccountsAccountArgs{...} }
type GetAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput
	ToGetAccountsAccountArrayOutputWithContext(context.Context) GetAccountsAccountArrayOutput
}

type GetAccountsAccountArray []GetAccountsAccountInput

func (GetAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return i.ToGetAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountArrayOutput)
}

type GetAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return o
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return o
}

// The name of the redis account.
func (o GetAccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The description of the redis account.
func (o GetAccountsAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the Redis instance.
func (o GetAccountsAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The role info.
func (o GetAccountsAccountOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.RoleName }).(pulumi.StringOutput)
}

type GetAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccount {
		return vs[0].([]GetAccountsAccount)[vs[1].(int)]
	}).(GetAccountsAccountOutput)
}

type GetAllowListsAllowList struct {
	// Description of allow list.
	AllowListDesc string `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId string `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum int `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName string `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType string `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists []string `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum int `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances []GetAllowListsAllowListAssociatedInstance `pulumi:"associatedInstances"`
}

// GetAllowListsAllowListInput is an input type that accepts GetAllowListsAllowListArgs and GetAllowListsAllowListOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListInput` via:
//
//	GetAllowListsAllowListArgs{...}
type GetAllowListsAllowListInput interface {
	pulumi.Input

	ToGetAllowListsAllowListOutput() GetAllowListsAllowListOutput
	ToGetAllowListsAllowListOutputWithContext(context.Context) GetAllowListsAllowListOutput
}

type GetAllowListsAllowListArgs struct {
	// Description of allow list.
	AllowListDesc pulumi.StringInput `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId pulumi.StringInput `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum pulumi.IntInput `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName pulumi.StringInput `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType pulumi.StringInput `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum pulumi.IntInput `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances GetAllowListsAllowListAssociatedInstanceArrayInput `pulumi:"associatedInstances"`
}

func (GetAllowListsAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowList)(nil)).Elem()
}

func (i GetAllowListsAllowListArgs) ToGetAllowListsAllowListOutput() GetAllowListsAllowListOutput {
	return i.ToGetAllowListsAllowListOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListArgs) ToGetAllowListsAllowListOutputWithContext(ctx context.Context) GetAllowListsAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListOutput)
}

// GetAllowListsAllowListArrayInput is an input type that accepts GetAllowListsAllowListArray and GetAllowListsAllowListArrayOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListArrayInput` via:
//
//	GetAllowListsAllowListArray{ GetAllowListsAllowListArgs{...} }
type GetAllowListsAllowListArrayInput interface {
	pulumi.Input

	ToGetAllowListsAllowListArrayOutput() GetAllowListsAllowListArrayOutput
	ToGetAllowListsAllowListArrayOutputWithContext(context.Context) GetAllowListsAllowListArrayOutput
}

type GetAllowListsAllowListArray []GetAllowListsAllowListInput

func (GetAllowListsAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowList)(nil)).Elem()
}

func (i GetAllowListsAllowListArray) ToGetAllowListsAllowListArrayOutput() GetAllowListsAllowListArrayOutput {
	return i.ToGetAllowListsAllowListArrayOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListArray) ToGetAllowListsAllowListArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListArrayOutput)
}

type GetAllowListsAllowListOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowList)(nil)).Elem()
}

func (o GetAllowListsAllowListOutput) ToGetAllowListsAllowListOutput() GetAllowListsAllowListOutput {
	return o
}

func (o GetAllowListsAllowListOutput) ToGetAllowListsAllowListOutputWithContext(ctx context.Context) GetAllowListsAllowListOutput {
	return o
}

// Description of allow list.
func (o GetAllowListsAllowListOutput) AllowListDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListDesc }).(pulumi.StringOutput)
}

// Id of allow list.
func (o GetAllowListsAllowListOutput) AllowListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListId }).(pulumi.StringOutput)
}

// The IP number of allow list.
func (o GetAllowListsAllowListOutput) AllowListIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) int { return v.AllowListIpNum }).(pulumi.IntOutput)
}

// Name of allow list.
func (o GetAllowListsAllowListOutput) AllowListName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListName }).(pulumi.StringOutput)
}

// Type of allow list.
func (o GetAllowListsAllowListOutput) AllowListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) string { return v.AllowListType }).(pulumi.StringOutput)
}

// Ip list of allow list.
func (o GetAllowListsAllowListOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The number of instance that associated to allow list.
func (o GetAllowListsAllowListOutput) AssociatedInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) int { return v.AssociatedInstanceNum }).(pulumi.IntOutput)
}

// Instances associated by this allow list.
func (o GetAllowListsAllowListOutput) AssociatedInstances() GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return o.ApplyT(func(v GetAllowListsAllowList) []GetAllowListsAllowListAssociatedInstance {
		return v.AssociatedInstances
	}).(GetAllowListsAllowListAssociatedInstanceArrayOutput)
}

type GetAllowListsAllowListArrayOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowList)(nil)).Elem()
}

func (o GetAllowListsAllowListArrayOutput) ToGetAllowListsAllowListArrayOutput() GetAllowListsAllowListArrayOutput {
	return o
}

func (o GetAllowListsAllowListArrayOutput) ToGetAllowListsAllowListArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListArrayOutput {
	return o
}

func (o GetAllowListsAllowListArrayOutput) Index(i pulumi.IntInput) GetAllowListsAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAllowListsAllowList {
		return vs[0].([]GetAllowListsAllowList)[vs[1].(int)]
	}).(GetAllowListsAllowListOutput)
}

type GetAllowListsAllowListAssociatedInstance struct {
	// The Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc string `pulumi:"vpc"`
}

// GetAllowListsAllowListAssociatedInstanceInput is an input type that accepts GetAllowListsAllowListAssociatedInstanceArgs and GetAllowListsAllowListAssociatedInstanceOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListAssociatedInstanceInput` via:
//
//	GetAllowListsAllowListAssociatedInstanceArgs{...}
type GetAllowListsAllowListAssociatedInstanceInput interface {
	pulumi.Input

	ToGetAllowListsAllowListAssociatedInstanceOutput() GetAllowListsAllowListAssociatedInstanceOutput
	ToGetAllowListsAllowListAssociatedInstanceOutputWithContext(context.Context) GetAllowListsAllowListAssociatedInstanceOutput
}

type GetAllowListsAllowListAssociatedInstanceArgs struct {
	// The Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// Id of virtual private cloud.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetAllowListsAllowListAssociatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (i GetAllowListsAllowListAssociatedInstanceArgs) ToGetAllowListsAllowListAssociatedInstanceOutput() GetAllowListsAllowListAssociatedInstanceOutput {
	return i.ToGetAllowListsAllowListAssociatedInstanceOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListAssociatedInstanceArgs) ToGetAllowListsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) GetAllowListsAllowListAssociatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListAssociatedInstanceOutput)
}

// GetAllowListsAllowListAssociatedInstanceArrayInput is an input type that accepts GetAllowListsAllowListAssociatedInstanceArray and GetAllowListsAllowListAssociatedInstanceArrayOutput values.
// You can construct a concrete instance of `GetAllowListsAllowListAssociatedInstanceArrayInput` via:
//
//	GetAllowListsAllowListAssociatedInstanceArray{ GetAllowListsAllowListAssociatedInstanceArgs{...} }
type GetAllowListsAllowListAssociatedInstanceArrayInput interface {
	pulumi.Input

	ToGetAllowListsAllowListAssociatedInstanceArrayOutput() GetAllowListsAllowListAssociatedInstanceArrayOutput
	ToGetAllowListsAllowListAssociatedInstanceArrayOutputWithContext(context.Context) GetAllowListsAllowListAssociatedInstanceArrayOutput
}

type GetAllowListsAllowListAssociatedInstanceArray []GetAllowListsAllowListAssociatedInstanceInput

func (GetAllowListsAllowListAssociatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (i GetAllowListsAllowListAssociatedInstanceArray) ToGetAllowListsAllowListAssociatedInstanceArrayOutput() GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return i.ToGetAllowListsAllowListAssociatedInstanceArrayOutputWithContext(context.Background())
}

func (i GetAllowListsAllowListAssociatedInstanceArray) ToGetAllowListsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowListsAllowListAssociatedInstanceArrayOutput)
}

type GetAllowListsAllowListAssociatedInstanceOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListAssociatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (o GetAllowListsAllowListAssociatedInstanceOutput) ToGetAllowListsAllowListAssociatedInstanceOutput() GetAllowListsAllowListAssociatedInstanceOutput {
	return o
}

func (o GetAllowListsAllowListAssociatedInstanceOutput) ToGetAllowListsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) GetAllowListsAllowListAssociatedInstanceOutput {
	return o
}

// The Id of instance.
func (o GetAllowListsAllowListAssociatedInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListAssociatedInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o GetAllowListsAllowListAssociatedInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListAssociatedInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// Id of virtual private cloud.
func (o GetAllowListsAllowListAssociatedInstanceOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowListsAllowListAssociatedInstance) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetAllowListsAllowListAssociatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetAllowListsAllowListAssociatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowListsAllowListAssociatedInstance)(nil)).Elem()
}

func (o GetAllowListsAllowListAssociatedInstanceArrayOutput) ToGetAllowListsAllowListAssociatedInstanceArrayOutput() GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o GetAllowListsAllowListAssociatedInstanceArrayOutput) ToGetAllowListsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) GetAllowListsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o GetAllowListsAllowListAssociatedInstanceArrayOutput) Index(i pulumi.IntInput) GetAllowListsAllowListAssociatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAllowListsAllowListAssociatedInstance {
		return vs[0].([]GetAllowListsAllowListAssociatedInstance)[vs[1].(int)]
	}).(GetAllowListsAllowListAssociatedInstanceOutput)
}

type GetBackupsBackup struct {
	// The id of backup point.
	BackupPointId string `pulumi:"backupPointId"`
	// Backup strategy.
	BackupStrategy string `pulumi:"backupStrategy"`
	// Backup type.
	BackupType string `pulumi:"backupType"`
	// Query end time.
	EndTime string `pulumi:"endTime"`
	// Information of instance.
	InstanceDetails []GetBackupsBackupInstanceDetail `pulumi:"instanceDetails"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Size in MiB.
	Size int `pulumi:"size"`
	// Query start time.
	StartTime string `pulumi:"startTime"`
	// Status of backup (Creating/Available/Unavailable/Deleting).
	Status string `pulumi:"status"`
}

// GetBackupsBackupInput is an input type that accepts GetBackupsBackupArgs and GetBackupsBackupOutput values.
// You can construct a concrete instance of `GetBackupsBackupInput` via:
//
//	GetBackupsBackupArgs{...}
type GetBackupsBackupInput interface {
	pulumi.Input

	ToGetBackupsBackupOutput() GetBackupsBackupOutput
	ToGetBackupsBackupOutputWithContext(context.Context) GetBackupsBackupOutput
}

type GetBackupsBackupArgs struct {
	// The id of backup point.
	BackupPointId pulumi.StringInput `pulumi:"backupPointId"`
	// Backup strategy.
	BackupStrategy pulumi.StringInput `pulumi:"backupStrategy"`
	// Backup type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// Query end time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Information of instance.
	InstanceDetails GetBackupsBackupInstanceDetailArrayInput `pulumi:"instanceDetails"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Size in MiB.
	Size pulumi.IntInput `pulumi:"size"`
	// Query start time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Status of backup (Creating/Available/Unavailable/Deleting).
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackup)(nil)).Elem()
}

func (i GetBackupsBackupArgs) ToGetBackupsBackupOutput() GetBackupsBackupOutput {
	return i.ToGetBackupsBackupOutputWithContext(context.Background())
}

func (i GetBackupsBackupArgs) ToGetBackupsBackupOutputWithContext(ctx context.Context) GetBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupOutput)
}

// GetBackupsBackupArrayInput is an input type that accepts GetBackupsBackupArray and GetBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupArrayInput` via:
//
//	GetBackupsBackupArray{ GetBackupsBackupArgs{...} }
type GetBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput
	ToGetBackupsBackupArrayOutputWithContext(context.Context) GetBackupsBackupArrayOutput
}

type GetBackupsBackupArray []GetBackupsBackupInput

func (GetBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackup)(nil)).Elem()
}

func (i GetBackupsBackupArray) ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput {
	return i.ToGetBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupArray) ToGetBackupsBackupArrayOutputWithContext(ctx context.Context) GetBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupArrayOutput)
}

type GetBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackup)(nil)).Elem()
}

func (o GetBackupsBackupOutput) ToGetBackupsBackupOutput() GetBackupsBackupOutput {
	return o
}

func (o GetBackupsBackupOutput) ToGetBackupsBackupOutputWithContext(ctx context.Context) GetBackupsBackupOutput {
	return o
}

// The id of backup point.
func (o GetBackupsBackupOutput) BackupPointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupPointId }).(pulumi.StringOutput)
}

// Backup strategy.
func (o GetBackupsBackupOutput) BackupStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupStrategy }).(pulumi.StringOutput)
}

// Backup type.
func (o GetBackupsBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupType }).(pulumi.StringOutput)
}

// Query end time.
func (o GetBackupsBackupOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.EndTime }).(pulumi.StringOutput)
}

// Information of instance.
func (o GetBackupsBackupOutput) InstanceDetails() GetBackupsBackupInstanceDetailArrayOutput {
	return o.ApplyT(func(v GetBackupsBackup) []GetBackupsBackupInstanceDetail { return v.InstanceDetails }).(GetBackupsBackupInstanceDetailArrayOutput)
}

// Id of instance.
func (o GetBackupsBackupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Size in MiB.
func (o GetBackupsBackupOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackup) int { return v.Size }).(pulumi.IntOutput)
}

// Query start time.
func (o GetBackupsBackupOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.StartTime }).(pulumi.StringOutput)
}

// Status of backup (Creating/Available/Unavailable/Deleting).
func (o GetBackupsBackupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.Status }).(pulumi.StringOutput)
}

type GetBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackup)(nil)).Elem()
}

func (o GetBackupsBackupArrayOutput) ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput {
	return o
}

func (o GetBackupsBackupArrayOutput) ToGetBackupsBackupArrayOutputWithContext(ctx context.Context) GetBackupsBackupArrayOutput {
	return o
}

func (o GetBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackup {
		return vs[0].([]GetBackupsBackup)[vs[1].(int)]
	}).(GetBackupsBackupOutput)
}

type GetBackupsBackupInstanceDetail struct {
	// Id of account.
	AccountId int `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType string `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType string `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion string `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime string `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// Name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType string `pulumi:"networkType"`
	// Project name of instance.
	ProjectName string `pulumi:"projectName"`
	// Id of region.
	RegionId string `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas int `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu int `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity int `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount int `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity int `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity int `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos []GetBackupsBackupInstanceDetailVpcInfo `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds []string `pulumi:"zoneIds"`
}

// GetBackupsBackupInstanceDetailInput is an input type that accepts GetBackupsBackupInstanceDetailArgs and GetBackupsBackupInstanceDetailOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceDetailInput` via:
//
//	GetBackupsBackupInstanceDetailArgs{...}
type GetBackupsBackupInstanceDetailInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceDetailOutput() GetBackupsBackupInstanceDetailOutput
	ToGetBackupsBackupInstanceDetailOutputWithContext(context.Context) GetBackupsBackupInstanceDetailOutput
}

type GetBackupsBackupInstanceDetailArgs struct {
	// Id of account.
	AccountId pulumi.IntInput `pulumi:"accountId"`
	// Arch type of instance(Standard/Cluster).
	ArchType pulumi.StringInput `pulumi:"archType"`
	// Charge type of instance(Postpaid/Prepaid).
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Engine version of instance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// Expired time of instance.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maintainable period (in UTC) of the instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// Network type of instance.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Project name of instance.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Id of region.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Count of replica in which shard.
	Replicas pulumi.IntInput `pulumi:"replicas"`
	// Count of cpu cores of instance.
	ServerCpu pulumi.IntInput `pulumi:"serverCpu"`
	// Capacity of shard.
	ShardCapacity pulumi.IntInput `pulumi:"shardCapacity"`
	// Count of shard.
	ShardCount pulumi.IntInput `pulumi:"shardCount"`
	// Total capacity of instance.
	TotalCapacity pulumi.IntInput `pulumi:"totalCapacity"`
	// Capacity used of this instance.
	UsedCapacity pulumi.IntInput `pulumi:"usedCapacity"`
	// Information of vpc.
	VpcInfos GetBackupsBackupInstanceDetailVpcInfoArrayInput `pulumi:"vpcInfos"`
	// List of id of zone.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (GetBackupsBackupInstanceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceDetail)(nil)).Elem()
}

func (i GetBackupsBackupInstanceDetailArgs) ToGetBackupsBackupInstanceDetailOutput() GetBackupsBackupInstanceDetailOutput {
	return i.ToGetBackupsBackupInstanceDetailOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceDetailArgs) ToGetBackupsBackupInstanceDetailOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceDetailOutput)
}

// GetBackupsBackupInstanceDetailArrayInput is an input type that accepts GetBackupsBackupInstanceDetailArray and GetBackupsBackupInstanceDetailArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceDetailArrayInput` via:
//
//	GetBackupsBackupInstanceDetailArray{ GetBackupsBackupInstanceDetailArgs{...} }
type GetBackupsBackupInstanceDetailArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceDetailArrayOutput() GetBackupsBackupInstanceDetailArrayOutput
	ToGetBackupsBackupInstanceDetailArrayOutputWithContext(context.Context) GetBackupsBackupInstanceDetailArrayOutput
}

type GetBackupsBackupInstanceDetailArray []GetBackupsBackupInstanceDetailInput

func (GetBackupsBackupInstanceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceDetail)(nil)).Elem()
}

func (i GetBackupsBackupInstanceDetailArray) ToGetBackupsBackupInstanceDetailArrayOutput() GetBackupsBackupInstanceDetailArrayOutput {
	return i.ToGetBackupsBackupInstanceDetailArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceDetailArray) ToGetBackupsBackupInstanceDetailArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceDetailArrayOutput)
}

type GetBackupsBackupInstanceDetailOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceDetail)(nil)).Elem()
}

func (o GetBackupsBackupInstanceDetailOutput) ToGetBackupsBackupInstanceDetailOutput() GetBackupsBackupInstanceDetailOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailOutput) ToGetBackupsBackupInstanceDetailOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailOutput {
	return o
}

// Id of account.
func (o GetBackupsBackupInstanceDetailOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.AccountId }).(pulumi.IntOutput)
}

// Arch type of instance(Standard/Cluster).
func (o GetBackupsBackupInstanceDetailOutput) ArchType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.ArchType }).(pulumi.StringOutput)
}

// Charge type of instance(Postpaid/Prepaid).
func (o GetBackupsBackupInstanceDetailOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Engine version of instance.
func (o GetBackupsBackupInstanceDetailOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// Expired time of instance.
func (o GetBackupsBackupInstanceDetailOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Id of instance.
func (o GetBackupsBackupInstanceDetailOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Name of instance.
func (o GetBackupsBackupInstanceDetailOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maintainable period (in UTC) of the instance.
func (o GetBackupsBackupInstanceDetailOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// Network type of instance.
func (o GetBackupsBackupInstanceDetailOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Project name of instance.
func (o GetBackupsBackupInstanceDetailOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Id of region.
func (o GetBackupsBackupInstanceDetailOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) string { return v.RegionId }).(pulumi.StringOutput)
}

// Count of replica in which shard.
func (o GetBackupsBackupInstanceDetailOutput) Replicas() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.Replicas }).(pulumi.IntOutput)
}

// Count of cpu cores of instance.
func (o GetBackupsBackupInstanceDetailOutput) ServerCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.ServerCpu }).(pulumi.IntOutput)
}

// Capacity of shard.
func (o GetBackupsBackupInstanceDetailOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

// Count of shard.
func (o GetBackupsBackupInstanceDetailOutput) ShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.ShardCount }).(pulumi.IntOutput)
}

// Total capacity of instance.
func (o GetBackupsBackupInstanceDetailOutput) TotalCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.TotalCapacity }).(pulumi.IntOutput)
}

// Capacity used of this instance.
func (o GetBackupsBackupInstanceDetailOutput) UsedCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) int { return v.UsedCapacity }).(pulumi.IntOutput)
}

// Information of vpc.
func (o GetBackupsBackupInstanceDetailOutput) VpcInfos() GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) []GetBackupsBackupInstanceDetailVpcInfo { return v.VpcInfos }).(GetBackupsBackupInstanceDetailVpcInfoArrayOutput)
}

// List of id of zone.
func (o GetBackupsBackupInstanceDetailOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetail) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type GetBackupsBackupInstanceDetailArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceDetail)(nil)).Elem()
}

func (o GetBackupsBackupInstanceDetailArrayOutput) ToGetBackupsBackupInstanceDetailArrayOutput() GetBackupsBackupInstanceDetailArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailArrayOutput) ToGetBackupsBackupInstanceDetailArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupInstanceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupInstanceDetail {
		return vs[0].([]GetBackupsBackupInstanceDetail)[vs[1].(int)]
	}).(GetBackupsBackupInstanceDetailOutput)
}

type GetBackupsBackupInstanceDetailVpcInfo struct {
	// Id of vpc.
	Id string `pulumi:"id"`
	// Name of vpc.
	Name string `pulumi:"name"`
}

// GetBackupsBackupInstanceDetailVpcInfoInput is an input type that accepts GetBackupsBackupInstanceDetailVpcInfoArgs and GetBackupsBackupInstanceDetailVpcInfoOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceDetailVpcInfoInput` via:
//
//	GetBackupsBackupInstanceDetailVpcInfoArgs{...}
type GetBackupsBackupInstanceDetailVpcInfoInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceDetailVpcInfoOutput() GetBackupsBackupInstanceDetailVpcInfoOutput
	ToGetBackupsBackupInstanceDetailVpcInfoOutputWithContext(context.Context) GetBackupsBackupInstanceDetailVpcInfoOutput
}

type GetBackupsBackupInstanceDetailVpcInfoArgs struct {
	// Id of vpc.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of vpc.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBackupsBackupInstanceDetailVpcInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i GetBackupsBackupInstanceDetailVpcInfoArgs) ToGetBackupsBackupInstanceDetailVpcInfoOutput() GetBackupsBackupInstanceDetailVpcInfoOutput {
	return i.ToGetBackupsBackupInstanceDetailVpcInfoOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceDetailVpcInfoArgs) ToGetBackupsBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailVpcInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceDetailVpcInfoOutput)
}

// GetBackupsBackupInstanceDetailVpcInfoArrayInput is an input type that accepts GetBackupsBackupInstanceDetailVpcInfoArray and GetBackupsBackupInstanceDetailVpcInfoArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupInstanceDetailVpcInfoArrayInput` via:
//
//	GetBackupsBackupInstanceDetailVpcInfoArray{ GetBackupsBackupInstanceDetailVpcInfoArgs{...} }
type GetBackupsBackupInstanceDetailVpcInfoArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupInstanceDetailVpcInfoArrayOutput() GetBackupsBackupInstanceDetailVpcInfoArrayOutput
	ToGetBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Context) GetBackupsBackupInstanceDetailVpcInfoArrayOutput
}

type GetBackupsBackupInstanceDetailVpcInfoArray []GetBackupsBackupInstanceDetailVpcInfoInput

func (GetBackupsBackupInstanceDetailVpcInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (i GetBackupsBackupInstanceDetailVpcInfoArray) ToGetBackupsBackupInstanceDetailVpcInfoArrayOutput() GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return i.ToGetBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupInstanceDetailVpcInfoArray) ToGetBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupInstanceDetailVpcInfoArrayOutput)
}

type GetBackupsBackupInstanceDetailVpcInfoOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceDetailVpcInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o GetBackupsBackupInstanceDetailVpcInfoOutput) ToGetBackupsBackupInstanceDetailVpcInfoOutput() GetBackupsBackupInstanceDetailVpcInfoOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailVpcInfoOutput) ToGetBackupsBackupInstanceDetailVpcInfoOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailVpcInfoOutput {
	return o
}

// Id of vpc.
func (o GetBackupsBackupInstanceDetailVpcInfoOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetailVpcInfo) string { return v.Id }).(pulumi.StringOutput)
}

// Name of vpc.
func (o GetBackupsBackupInstanceDetailVpcInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupInstanceDetailVpcInfo) string { return v.Name }).(pulumi.StringOutput)
}

type GetBackupsBackupInstanceDetailVpcInfoArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupInstanceDetailVpcInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupInstanceDetailVpcInfo)(nil)).Elem()
}

func (o GetBackupsBackupInstanceDetailVpcInfoArrayOutput) ToGetBackupsBackupInstanceDetailVpcInfoArrayOutput() GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailVpcInfoArrayOutput) ToGetBackupsBackupInstanceDetailVpcInfoArrayOutputWithContext(ctx context.Context) GetBackupsBackupInstanceDetailVpcInfoArrayOutput {
	return o
}

func (o GetBackupsBackupInstanceDetailVpcInfoArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupInstanceDetailVpcInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupInstanceDetailVpcInfo {
		return vs[0].([]GetBackupsBackupInstanceDetailVpcInfo)[vs[1].(int)]
	}).(GetBackupsBackupInstanceDetailVpcInfoOutput)
}

type GetInstancesInstance struct {
	// The list of backup plans.
	BackupPlan GetInstancesInstanceBackupPlan `pulumi:"backupPlan"`
	// The memory capacity information.
	Capacity GetInstancesInstanceCapacity `pulumi:"capacity"`
	// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
	ChargeType string `pulumi:"chargeType"`
	// Set the list of available zones to which the node belongs.
	ConfigureNodes []GetInstancesInstanceConfigureNode `pulumi:"configureNodes"`
	// The creation time of the redis instance.
	CreateTime string `pulumi:"createTime"`
	// whether enable deletion protection.
	DeletionProtection string `pulumi:"deletionProtection"`
	// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
	EngineVersion string `pulumi:"engineVersion"`
	// The expire time of the redis instance, valid when charge type is `PrePaid`.
	ExpiredTime string `pulumi:"expiredTime"`
	// The id of the redis instance.
	Id string `pulumi:"id"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId string `pulumi:"instanceId"`
	// The name of redis instance to query. This field supports fuzzy queries.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable time of the redis instance.
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// Set the availability zone deployment scheme for the instance. The value range is as follows:
	// disabled: Single availability zone deployment scheme.
	// enabled: Multi-availability zone deployment scheme.
	// Description:
	// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
	MultiAz string `pulumi:"multiAz"`
	// The list of redis instance node IDs.
	NodeIds []string `pulumi:"nodeIds"`
	// The number of nodes in each shard.
	NodeNumber int `pulumi:"nodeNumber"`
	// The list of params.
	Params []GetInstancesInstanceParam `pulumi:"params"`
	// The project name of redis instance to query.
	ProjectName string `pulumi:"projectName"`
	// The region id of the redis instance.
	RegionId string `pulumi:"regionId"`
	// The memory capacity of each shard. Unit: GiB.
	ShardCapacity float64 `pulumi:"shardCapacity"`
	// The number of shards in the redis instance.
	ShardNumber int `pulumi:"shardNumber"`
	// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
	ShardedCluster int `pulumi:"shardedCluster"`
	// The status of redis instance to query.
	Status string `pulumi:"status"`
	// The subnet id of the redis instance.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []GetInstancesInstanceTag `pulumi:"tags"`
	// The list of connection information.
	VisitAddrs []GetInstancesInstanceVisitAddr `pulumi:"visitAddrs"`
	// Whether to enable password-free access when connecting to an instance through a private network.
	VpcAuthMode string `pulumi:"vpcAuthMode"`
	// The vpc id of redis instance to query. This field supports fuzzy queries.
	VpcId string `pulumi:"vpcId"`
	// The list of zone ID which the redis instance belongs.
	ZoneIds []string `pulumi:"zoneIds"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The list of backup plans.
	BackupPlan GetInstancesInstanceBackupPlanInput `pulumi:"backupPlan"`
	// The memory capacity information.
	Capacity GetInstancesInstanceCapacityInput `pulumi:"capacity"`
	// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// Set the list of available zones to which the node belongs.
	ConfigureNodes GetInstancesInstanceConfigureNodeArrayInput `pulumi:"configureNodes"`
	// The creation time of the redis instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// whether enable deletion protection.
	DeletionProtection pulumi.StringInput `pulumi:"deletionProtection"`
	// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// The expire time of the redis instance, valid when charge type is `PrePaid`.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The id of the redis instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of redis instance to query. This field supports fuzzy queries.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The maintainable time of the redis instance.
	MaintenanceTime pulumi.StringInput `pulumi:"maintenanceTime"`
	// Set the availability zone deployment scheme for the instance. The value range is as follows:
	// disabled: Single availability zone deployment scheme.
	// enabled: Multi-availability zone deployment scheme.
	// Description:
	// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
	MultiAz pulumi.StringInput `pulumi:"multiAz"`
	// The list of redis instance node IDs.
	NodeIds pulumi.StringArrayInput `pulumi:"nodeIds"`
	// The number of nodes in each shard.
	NodeNumber pulumi.IntInput `pulumi:"nodeNumber"`
	// The list of params.
	Params GetInstancesInstanceParamArrayInput `pulumi:"params"`
	// The project name of redis instance to query.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The region id of the redis instance.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The memory capacity of each shard. Unit: GiB.
	ShardCapacity pulumi.Float64Input `pulumi:"shardCapacity"`
	// The number of shards in the redis instance.
	ShardNumber pulumi.IntInput `pulumi:"shardNumber"`
	// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
	ShardedCluster pulumi.IntInput `pulumi:"shardedCluster"`
	// The status of redis instance to query.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet id of the redis instance.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags GetInstancesInstanceTagArrayInput `pulumi:"tags"`
	// The list of connection information.
	VisitAddrs GetInstancesInstanceVisitAddrArrayInput `pulumi:"visitAddrs"`
	// Whether to enable password-free access when connecting to an instance through a private network.
	VpcAuthMode pulumi.StringInput `pulumi:"vpcAuthMode"`
	// The vpc id of redis instance to query. This field supports fuzzy queries.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The list of zone ID which the redis instance belongs.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The list of backup plans.
func (o GetInstancesInstanceOutput) BackupPlan() GetInstancesInstanceBackupPlanOutput {
	return o.ApplyT(func(v GetInstancesInstance) GetInstancesInstanceBackupPlan { return v.BackupPlan }).(GetInstancesInstanceBackupPlanOutput)
}

// The memory capacity information.
func (o GetInstancesInstanceOutput) Capacity() GetInstancesInstanceCapacityOutput {
	return o.ApplyT(func(v GetInstancesInstance) GetInstancesInstanceCapacity { return v.Capacity }).(GetInstancesInstanceCapacityOutput)
}

// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
func (o GetInstancesInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// Set the list of available zones to which the node belongs.
func (o GetInstancesInstanceOutput) ConfigureNodes() GetInstancesInstanceConfigureNodeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceConfigureNode { return v.ConfigureNodes }).(GetInstancesInstanceConfigureNodeArrayOutput)
}

// The creation time of the redis instance.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// whether enable deletion protection.
func (o GetInstancesInstanceOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
func (o GetInstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The expire time of the redis instance, valid when charge type is `PrePaid`.
func (o GetInstancesInstanceOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The id of the redis instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The id of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The maintainable time of the redis instance.
func (o GetInstancesInstanceOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// Set the availability zone deployment scheme for the instance. The value range is as follows:
// disabled: Single availability zone deployment scheme.
// enabled: Multi-availability zone deployment scheme.
// Description:
// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
func (o GetInstancesInstanceOutput) MultiAz() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MultiAz }).(pulumi.StringOutput)
}

// The list of redis instance node IDs.
func (o GetInstancesInstanceOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// The number of nodes in each shard.
func (o GetInstancesInstanceOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.NodeNumber }).(pulumi.IntOutput)
}

// The list of params.
func (o GetInstancesInstanceOutput) Params() GetInstancesInstanceParamArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceParam { return v.Params }).(GetInstancesInstanceParamArrayOutput)
}

// The project name of redis instance to query.
func (o GetInstancesInstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The region id of the redis instance.
func (o GetInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// The memory capacity of each shard. Unit: GiB.
func (o GetInstancesInstanceOutput) ShardCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstancesInstance) float64 { return v.ShardCapacity }).(pulumi.Float64Output)
}

// The number of shards in the redis instance.
func (o GetInstancesInstanceOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ShardNumber }).(pulumi.IntOutput)
}

// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
func (o GetInstancesInstanceOutput) ShardedCluster() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.ShardedCluster }).(pulumi.IntOutput)
}

// The status of redis instance to query.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet id of the redis instance.
func (o GetInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o GetInstancesInstanceOutput) Tags() GetInstancesInstanceTagArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceTag { return v.Tags }).(GetInstancesInstanceTagArrayOutput)
}

// The list of connection information.
func (o GetInstancesInstanceOutput) VisitAddrs() GetInstancesInstanceVisitAddrArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceVisitAddr { return v.VisitAddrs }).(GetInstancesInstanceVisitAddrArrayOutput)
}

// Whether to enable password-free access when connecting to an instance through a private network.
func (o GetInstancesInstanceOutput) VpcAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcAuthMode }).(pulumi.StringOutput)
}

// The vpc id of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The list of zone ID which the redis instance belongs.
func (o GetInstancesInstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceBackupPlan struct {
	// Whether enable auto backup.
	Active bool `pulumi:"active"`
	// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	BackupHour int `pulumi:"backupHour"`
	// The backup type.
	BackupType string `pulumi:"backupType"`
	// The expected time for the next backup to be performed.
	ExpectNextBackupTime string `pulumi:"expectNextBackupTime"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId string `pulumi:"instanceId"`
	// The last time the backup policy was modified.
	LastUpdateTime string `pulumi:"lastUpdateTime"`
	// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	Periods []int `pulumi:"periods"`
	// The number of days to keep backups, the default is 7 days.
	Ttl int `pulumi:"ttl"`
}

// GetInstancesInstanceBackupPlanInput is an input type that accepts GetInstancesInstanceBackupPlanArgs and GetInstancesInstanceBackupPlanOutput values.
// You can construct a concrete instance of `GetInstancesInstanceBackupPlanInput` via:
//
//	GetInstancesInstanceBackupPlanArgs{...}
type GetInstancesInstanceBackupPlanInput interface {
	pulumi.Input

	ToGetInstancesInstanceBackupPlanOutput() GetInstancesInstanceBackupPlanOutput
	ToGetInstancesInstanceBackupPlanOutputWithContext(context.Context) GetInstancesInstanceBackupPlanOutput
}

type GetInstancesInstanceBackupPlanArgs struct {
	// Whether enable auto backup.
	Active pulumi.BoolInput `pulumi:"active"`
	// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	BackupHour pulumi.IntInput `pulumi:"backupHour"`
	// The backup type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The expected time for the next backup to be performed.
	ExpectNextBackupTime pulumi.StringInput `pulumi:"expectNextBackupTime"`
	// The id of redis instance to query. This field supports fuzzy queries.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The last time the backup policy was modified.
	LastUpdateTime pulumi.StringInput `pulumi:"lastUpdateTime"`
	// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	Periods pulumi.IntArrayInput `pulumi:"periods"`
	// The number of days to keep backups, the default is 7 days.
	Ttl pulumi.IntInput `pulumi:"ttl"`
}

func (GetInstancesInstanceBackupPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupPlan)(nil)).Elem()
}

func (i GetInstancesInstanceBackupPlanArgs) ToGetInstancesInstanceBackupPlanOutput() GetInstancesInstanceBackupPlanOutput {
	return i.ToGetInstancesInstanceBackupPlanOutputWithContext(context.Background())
}

func (i GetInstancesInstanceBackupPlanArgs) ToGetInstancesInstanceBackupPlanOutputWithContext(ctx context.Context) GetInstancesInstanceBackupPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceBackupPlanOutput)
}

type GetInstancesInstanceBackupPlanOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceBackupPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceBackupPlan)(nil)).Elem()
}

func (o GetInstancesInstanceBackupPlanOutput) ToGetInstancesInstanceBackupPlanOutput() GetInstancesInstanceBackupPlanOutput {
	return o
}

func (o GetInstancesInstanceBackupPlanOutput) ToGetInstancesInstanceBackupPlanOutputWithContext(ctx context.Context) GetInstancesInstanceBackupPlanOutput {
	return o
}

// Whether enable auto backup.
func (o GetInstancesInstanceBackupPlanOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) bool { return v.Active }).(pulumi.BoolOutput)
}

// The time period to start performing the backup. The value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
func (o GetInstancesInstanceBackupPlanOutput) BackupHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) int { return v.BackupHour }).(pulumi.IntOutput)
}

// The backup type.
func (o GetInstancesInstanceBackupPlanOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) string { return v.BackupType }).(pulumi.StringOutput)
}

// The expected time for the next backup to be performed.
func (o GetInstancesInstanceBackupPlanOutput) ExpectNextBackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) string { return v.ExpectNextBackupTime }).(pulumi.StringOutput)
}

// The id of redis instance to query. This field supports fuzzy queries.
func (o GetInstancesInstanceBackupPlanOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The last time the backup policy was modified.
func (o GetInstancesInstanceBackupPlanOutput) LastUpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) string { return v.LastUpdateTime }).(pulumi.StringOutput)
}

// The backup cycle. The value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
func (o GetInstancesInstanceBackupPlanOutput) Periods() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) []int { return v.Periods }).(pulumi.IntArrayOutput)
}

// The number of days to keep backups, the default is 7 days.
func (o GetInstancesInstanceBackupPlanOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceBackupPlan) int { return v.Ttl }).(pulumi.IntOutput)
}

type GetInstancesInstanceCapacity struct {
	// The total memory capacity of the redis instance. Unit: MiB.
	Total int `pulumi:"total"`
	// The used memory capacity of the redis instance. Unit: MiB.
	Used int `pulumi:"used"`
}

// GetInstancesInstanceCapacityInput is an input type that accepts GetInstancesInstanceCapacityArgs and GetInstancesInstanceCapacityOutput values.
// You can construct a concrete instance of `GetInstancesInstanceCapacityInput` via:
//
//	GetInstancesInstanceCapacityArgs{...}
type GetInstancesInstanceCapacityInput interface {
	pulumi.Input

	ToGetInstancesInstanceCapacityOutput() GetInstancesInstanceCapacityOutput
	ToGetInstancesInstanceCapacityOutputWithContext(context.Context) GetInstancesInstanceCapacityOutput
}

type GetInstancesInstanceCapacityArgs struct {
	// The total memory capacity of the redis instance. Unit: MiB.
	Total pulumi.IntInput `pulumi:"total"`
	// The used memory capacity of the redis instance. Unit: MiB.
	Used pulumi.IntInput `pulumi:"used"`
}

func (GetInstancesInstanceCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceCapacity)(nil)).Elem()
}

func (i GetInstancesInstanceCapacityArgs) ToGetInstancesInstanceCapacityOutput() GetInstancesInstanceCapacityOutput {
	return i.ToGetInstancesInstanceCapacityOutputWithContext(context.Background())
}

func (i GetInstancesInstanceCapacityArgs) ToGetInstancesInstanceCapacityOutputWithContext(ctx context.Context) GetInstancesInstanceCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceCapacityOutput)
}

type GetInstancesInstanceCapacityOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceCapacity)(nil)).Elem()
}

func (o GetInstancesInstanceCapacityOutput) ToGetInstancesInstanceCapacityOutput() GetInstancesInstanceCapacityOutput {
	return o
}

func (o GetInstancesInstanceCapacityOutput) ToGetInstancesInstanceCapacityOutputWithContext(ctx context.Context) GetInstancesInstanceCapacityOutput {
	return o
}

// The total memory capacity of the redis instance. Unit: MiB.
func (o GetInstancesInstanceCapacityOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceCapacity) int { return v.Total }).(pulumi.IntOutput)
}

// The used memory capacity of the redis instance. Unit: MiB.
func (o GetInstancesInstanceCapacityOutput) Used() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceCapacity) int { return v.Used }).(pulumi.IntOutput)
}

type GetInstancesInstanceConfigureNode struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az string `pulumi:"az"`
}

// GetInstancesInstanceConfigureNodeInput is an input type that accepts GetInstancesInstanceConfigureNodeArgs and GetInstancesInstanceConfigureNodeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigureNodeInput` via:
//
//	GetInstancesInstanceConfigureNodeArgs{...}
type GetInstancesInstanceConfigureNodeInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigureNodeOutput() GetInstancesInstanceConfigureNodeOutput
	ToGetInstancesInstanceConfigureNodeOutputWithContext(context.Context) GetInstancesInstanceConfigureNodeOutput
}

type GetInstancesInstanceConfigureNodeArgs struct {
	// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
	// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
	Az pulumi.StringInput `pulumi:"az"`
}

func (GetInstancesInstanceConfigureNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigureNode)(nil)).Elem()
}

func (i GetInstancesInstanceConfigureNodeArgs) ToGetInstancesInstanceConfigureNodeOutput() GetInstancesInstanceConfigureNodeOutput {
	return i.ToGetInstancesInstanceConfigureNodeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigureNodeArgs) ToGetInstancesInstanceConfigureNodeOutputWithContext(ctx context.Context) GetInstancesInstanceConfigureNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigureNodeOutput)
}

// GetInstancesInstanceConfigureNodeArrayInput is an input type that accepts GetInstancesInstanceConfigureNodeArray and GetInstancesInstanceConfigureNodeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceConfigureNodeArrayInput` via:
//
//	GetInstancesInstanceConfigureNodeArray{ GetInstancesInstanceConfigureNodeArgs{...} }
type GetInstancesInstanceConfigureNodeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceConfigureNodeArrayOutput() GetInstancesInstanceConfigureNodeArrayOutput
	ToGetInstancesInstanceConfigureNodeArrayOutputWithContext(context.Context) GetInstancesInstanceConfigureNodeArrayOutput
}

type GetInstancesInstanceConfigureNodeArray []GetInstancesInstanceConfigureNodeInput

func (GetInstancesInstanceConfigureNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigureNode)(nil)).Elem()
}

func (i GetInstancesInstanceConfigureNodeArray) ToGetInstancesInstanceConfigureNodeArrayOutput() GetInstancesInstanceConfigureNodeArrayOutput {
	return i.ToGetInstancesInstanceConfigureNodeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceConfigureNodeArray) ToGetInstancesInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigureNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceConfigureNodeArrayOutput)
}

type GetInstancesInstanceConfigureNodeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigureNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceConfigureNode)(nil)).Elem()
}

func (o GetInstancesInstanceConfigureNodeOutput) ToGetInstancesInstanceConfigureNodeOutput() GetInstancesInstanceConfigureNodeOutput {
	return o
}

func (o GetInstancesInstanceConfigureNodeOutput) ToGetInstancesInstanceConfigureNodeOutputWithContext(ctx context.Context) GetInstancesInstanceConfigureNodeOutput {
	return o
}

// Set the availability zone to which the node belongs. The number of nodes of an instance (i.e., NodeNumber) and the availability zone deployment scheme (i.e., the value of the MultiAZ parameter) will affect the filling of the current parameter. Among them:
// When a new instance is a single-node instance (i.e., the value of NodeNumber is 1), only a single availability zone deployment scheme is allowed (i.e., the value of MultiAZ must be disabled). At this time, only one availability zone needs to be passed in AZ, and all nodes in the instance will be deployed in this availability zone. When creating a new instance as a primary-standby instance (that is, when the value of NodeNumber is greater than or equal to 2), the number of availability zones passed in must be equal to the number of nodes in a single shard (that is, the value of the NodeNumber parameter), and the value of AZ must comply with the multi-availability zone deployment scheme rules. The specific rules are as follows: If the primary-standby instance selects the multi-availability zone deployment scheme (that is, the value of MultiAZ is enabled), then at least two different availability zone IDs must be passed in in AZ, and the first availability zone is the availability zone where the primary node is located. If the primary and standby instances choose a single availability zone deployment scheme (that is, the value of MultiAZ is disabled), then the availability zones passed in for each node must be the same.
func (o GetInstancesInstanceConfigureNodeOutput) Az() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceConfigureNode) string { return v.Az }).(pulumi.StringOutput)
}

type GetInstancesInstanceConfigureNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceConfigureNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceConfigureNode)(nil)).Elem()
}

func (o GetInstancesInstanceConfigureNodeArrayOutput) ToGetInstancesInstanceConfigureNodeArrayOutput() GetInstancesInstanceConfigureNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigureNodeArrayOutput) ToGetInstancesInstanceConfigureNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceConfigureNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceConfigureNodeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceConfigureNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceConfigureNode {
		return vs[0].([]GetInstancesInstanceConfigureNode)[vs[1].(int)]
	}).(GetInstancesInstanceConfigureNodeOutput)
}

type GetInstancesInstanceParam struct {
	// Current value of the configuration parameter.
	CurrentValue string `pulumi:"currentValue"`
	// Default value of the configuration parameter.
	DefaultValue string `pulumi:"defaultValue"`
	// The description of this option item.
	Description string `pulumi:"description"`
	// Whether the current redis instance supports editing this parameter.
	EditableForInstance bool `pulumi:"editableForInstance"`
	// Whether need to reboot the redis instance when modifying this parameter.
	NeedReboot bool `pulumi:"needReboot"`
	// The list of options. Valid when the configuration parameter type is `Radio`.
	Options []GetInstancesInstanceParamOption `pulumi:"options"`
	// The name of the configuration parameter.
	ParamName string `pulumi:"paramName"`
	// The valid value range of the numeric type configuration parameter.
	Range string `pulumi:"range"`
	// The type of the configuration parameter.
	Type string `pulumi:"type"`
	// The unit of the numeric type configuration parameter.
	Unit string `pulumi:"unit"`
}

// GetInstancesInstanceParamInput is an input type that accepts GetInstancesInstanceParamArgs and GetInstancesInstanceParamOutput values.
// You can construct a concrete instance of `GetInstancesInstanceParamInput` via:
//
//	GetInstancesInstanceParamArgs{...}
type GetInstancesInstanceParamInput interface {
	pulumi.Input

	ToGetInstancesInstanceParamOutput() GetInstancesInstanceParamOutput
	ToGetInstancesInstanceParamOutputWithContext(context.Context) GetInstancesInstanceParamOutput
}

type GetInstancesInstanceParamArgs struct {
	// Current value of the configuration parameter.
	CurrentValue pulumi.StringInput `pulumi:"currentValue"`
	// Default value of the configuration parameter.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// The description of this option item.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the current redis instance supports editing this parameter.
	EditableForInstance pulumi.BoolInput `pulumi:"editableForInstance"`
	// Whether need to reboot the redis instance when modifying this parameter.
	NeedReboot pulumi.BoolInput `pulumi:"needReboot"`
	// The list of options. Valid when the configuration parameter type is `Radio`.
	Options GetInstancesInstanceParamOptionArrayInput `pulumi:"options"`
	// The name of the configuration parameter.
	ParamName pulumi.StringInput `pulumi:"paramName"`
	// The valid value range of the numeric type configuration parameter.
	Range pulumi.StringInput `pulumi:"range"`
	// The type of the configuration parameter.
	Type pulumi.StringInput `pulumi:"type"`
	// The unit of the numeric type configuration parameter.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetInstancesInstanceParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceParam)(nil)).Elem()
}

func (i GetInstancesInstanceParamArgs) ToGetInstancesInstanceParamOutput() GetInstancesInstanceParamOutput {
	return i.ToGetInstancesInstanceParamOutputWithContext(context.Background())
}

func (i GetInstancesInstanceParamArgs) ToGetInstancesInstanceParamOutputWithContext(ctx context.Context) GetInstancesInstanceParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceParamOutput)
}

// GetInstancesInstanceParamArrayInput is an input type that accepts GetInstancesInstanceParamArray and GetInstancesInstanceParamArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceParamArrayInput` via:
//
//	GetInstancesInstanceParamArray{ GetInstancesInstanceParamArgs{...} }
type GetInstancesInstanceParamArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceParamArrayOutput() GetInstancesInstanceParamArrayOutput
	ToGetInstancesInstanceParamArrayOutputWithContext(context.Context) GetInstancesInstanceParamArrayOutput
}

type GetInstancesInstanceParamArray []GetInstancesInstanceParamInput

func (GetInstancesInstanceParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceParam)(nil)).Elem()
}

func (i GetInstancesInstanceParamArray) ToGetInstancesInstanceParamArrayOutput() GetInstancesInstanceParamArrayOutput {
	return i.ToGetInstancesInstanceParamArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceParamArray) ToGetInstancesInstanceParamArrayOutputWithContext(ctx context.Context) GetInstancesInstanceParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceParamArrayOutput)
}

type GetInstancesInstanceParamOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceParam)(nil)).Elem()
}

func (o GetInstancesInstanceParamOutput) ToGetInstancesInstanceParamOutput() GetInstancesInstanceParamOutput {
	return o
}

func (o GetInstancesInstanceParamOutput) ToGetInstancesInstanceParamOutputWithContext(ctx context.Context) GetInstancesInstanceParamOutput {
	return o
}

// Current value of the configuration parameter.
func (o GetInstancesInstanceParamOutput) CurrentValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.CurrentValue }).(pulumi.StringOutput)
}

// Default value of the configuration parameter.
func (o GetInstancesInstanceParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// The description of this option item.
func (o GetInstancesInstanceParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the current redis instance supports editing this parameter.
func (o GetInstancesInstanceParamOutput) EditableForInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) bool { return v.EditableForInstance }).(pulumi.BoolOutput)
}

// Whether need to reboot the redis instance when modifying this parameter.
func (o GetInstancesInstanceParamOutput) NeedReboot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) bool { return v.NeedReboot }).(pulumi.BoolOutput)
}

// The list of options. Valid when the configuration parameter type is `Radio`.
func (o GetInstancesInstanceParamOutput) Options() GetInstancesInstanceParamOptionArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) []GetInstancesInstanceParamOption { return v.Options }).(GetInstancesInstanceParamOptionArrayOutput)
}

// The name of the configuration parameter.
func (o GetInstancesInstanceParamOutput) ParamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.ParamName }).(pulumi.StringOutput)
}

// The valid value range of the numeric type configuration parameter.
func (o GetInstancesInstanceParamOutput) Range() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.Range }).(pulumi.StringOutput)
}

// The type of the configuration parameter.
func (o GetInstancesInstanceParamOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.Type }).(pulumi.StringOutput)
}

// The unit of the numeric type configuration parameter.
func (o GetInstancesInstanceParamOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParam) string { return v.Unit }).(pulumi.StringOutput)
}

type GetInstancesInstanceParamArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceParam)(nil)).Elem()
}

func (o GetInstancesInstanceParamArrayOutput) ToGetInstancesInstanceParamArrayOutput() GetInstancesInstanceParamArrayOutput {
	return o
}

func (o GetInstancesInstanceParamArrayOutput) ToGetInstancesInstanceParamArrayOutputWithContext(ctx context.Context) GetInstancesInstanceParamArrayOutput {
	return o
}

func (o GetInstancesInstanceParamArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceParam {
		return vs[0].([]GetInstancesInstanceParam)[vs[1].(int)]
	}).(GetInstancesInstanceParamOutput)
}

type GetInstancesInstanceParamOption struct {
	// The description of this option item.
	Description string `pulumi:"description"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetInstancesInstanceParamOptionInput is an input type that accepts GetInstancesInstanceParamOptionArgs and GetInstancesInstanceParamOptionOutput values.
// You can construct a concrete instance of `GetInstancesInstanceParamOptionInput` via:
//
//	GetInstancesInstanceParamOptionArgs{...}
type GetInstancesInstanceParamOptionInput interface {
	pulumi.Input

	ToGetInstancesInstanceParamOptionOutput() GetInstancesInstanceParamOptionOutput
	ToGetInstancesInstanceParamOptionOutputWithContext(context.Context) GetInstancesInstanceParamOptionOutput
}

type GetInstancesInstanceParamOptionArgs struct {
	// The description of this option item.
	Description pulumi.StringInput `pulumi:"description"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstancesInstanceParamOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceParamOption)(nil)).Elem()
}

func (i GetInstancesInstanceParamOptionArgs) ToGetInstancesInstanceParamOptionOutput() GetInstancesInstanceParamOptionOutput {
	return i.ToGetInstancesInstanceParamOptionOutputWithContext(context.Background())
}

func (i GetInstancesInstanceParamOptionArgs) ToGetInstancesInstanceParamOptionOutputWithContext(ctx context.Context) GetInstancesInstanceParamOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceParamOptionOutput)
}

// GetInstancesInstanceParamOptionArrayInput is an input type that accepts GetInstancesInstanceParamOptionArray and GetInstancesInstanceParamOptionArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceParamOptionArrayInput` via:
//
//	GetInstancesInstanceParamOptionArray{ GetInstancesInstanceParamOptionArgs{...} }
type GetInstancesInstanceParamOptionArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceParamOptionArrayOutput() GetInstancesInstanceParamOptionArrayOutput
	ToGetInstancesInstanceParamOptionArrayOutputWithContext(context.Context) GetInstancesInstanceParamOptionArrayOutput
}

type GetInstancesInstanceParamOptionArray []GetInstancesInstanceParamOptionInput

func (GetInstancesInstanceParamOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceParamOption)(nil)).Elem()
}

func (i GetInstancesInstanceParamOptionArray) ToGetInstancesInstanceParamOptionArrayOutput() GetInstancesInstanceParamOptionArrayOutput {
	return i.ToGetInstancesInstanceParamOptionArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceParamOptionArray) ToGetInstancesInstanceParamOptionArrayOutputWithContext(ctx context.Context) GetInstancesInstanceParamOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceParamOptionArrayOutput)
}

type GetInstancesInstanceParamOptionOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceParamOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceParamOption)(nil)).Elem()
}

func (o GetInstancesInstanceParamOptionOutput) ToGetInstancesInstanceParamOptionOutput() GetInstancesInstanceParamOptionOutput {
	return o
}

func (o GetInstancesInstanceParamOptionOutput) ToGetInstancesInstanceParamOptionOutputWithContext(ctx context.Context) GetInstancesInstanceParamOptionOutput {
	return o
}

// The description of this option item.
func (o GetInstancesInstanceParamOptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParamOption) string { return v.Description }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetInstancesInstanceParamOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceParamOption) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstancesInstanceParamOptionArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceParamOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceParamOption)(nil)).Elem()
}

func (o GetInstancesInstanceParamOptionArrayOutput) ToGetInstancesInstanceParamOptionArrayOutput() GetInstancesInstanceParamOptionArrayOutput {
	return o
}

func (o GetInstancesInstanceParamOptionArrayOutput) ToGetInstancesInstanceParamOptionArrayOutputWithContext(ctx context.Context) GetInstancesInstanceParamOptionArrayOutput {
	return o
}

func (o GetInstancesInstanceParamOptionArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceParamOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceParamOption {
		return vs[0].([]GetInstancesInstanceParamOption)[vs[1].(int)]
	}).(GetInstancesInstanceParamOptionOutput)
}

type GetInstancesInstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetInstancesInstanceTagInput is an input type that accepts GetInstancesInstanceTagArgs and GetInstancesInstanceTagOutput values.
// You can construct a concrete instance of `GetInstancesInstanceTagInput` via:
//
//	GetInstancesInstanceTagArgs{...}
type GetInstancesInstanceTagInput interface {
	pulumi.Input

	ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput
	ToGetInstancesInstanceTagOutputWithContext(context.Context) GetInstancesInstanceTagOutput
}

type GetInstancesInstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstancesInstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceTag)(nil)).Elem()
}

func (i GetInstancesInstanceTagArgs) ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput {
	return i.ToGetInstancesInstanceTagOutputWithContext(context.Background())
}

func (i GetInstancesInstanceTagArgs) ToGetInstancesInstanceTagOutputWithContext(ctx context.Context) GetInstancesInstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceTagOutput)
}

// GetInstancesInstanceTagArrayInput is an input type that accepts GetInstancesInstanceTagArray and GetInstancesInstanceTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceTagArrayInput` via:
//
//	GetInstancesInstanceTagArray{ GetInstancesInstanceTagArgs{...} }
type GetInstancesInstanceTagArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput
	ToGetInstancesInstanceTagArrayOutputWithContext(context.Context) GetInstancesInstanceTagArrayOutput
}

type GetInstancesInstanceTagArray []GetInstancesInstanceTagInput

func (GetInstancesInstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceTag)(nil)).Elem()
}

func (i GetInstancesInstanceTagArray) ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput {
	return i.ToGetInstancesInstanceTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceTagArray) ToGetInstancesInstanceTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceTagArrayOutput)
}

type GetInstancesInstanceTagOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceTag)(nil)).Elem()
}

func (o GetInstancesInstanceTagOutput) ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput {
	return o
}

func (o GetInstancesInstanceTagOutput) ToGetInstancesInstanceTagOutputWithContext(ctx context.Context) GetInstancesInstanceTagOutput {
	return o
}

// The Key of Tags.
func (o GetInstancesInstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetInstancesInstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstancesInstanceTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceTag)(nil)).Elem()
}

func (o GetInstancesInstanceTagArrayOutput) ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput {
	return o
}

func (o GetInstancesInstanceTagArrayOutput) ToGetInstancesInstanceTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceTagArrayOutput {
	return o
}

func (o GetInstancesInstanceTagArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceTag {
		return vs[0].([]GetInstancesInstanceTag)[vs[1].(int)]
	}).(GetInstancesInstanceTagOutput)
}

type GetInstancesInstanceVisitAddr struct {
	// The connection address type.
	AddrType string `pulumi:"addrType"`
	// The connection address.
	Address string `pulumi:"address"`
	// The EIP ID bound to the instance's public network address.
	EipId string `pulumi:"eipId"`
	// The connection port.
	Port string `pulumi:"port"`
	// The ipv4 address of the connection address.
	Vip string `pulumi:"vip"`
	// The ipv6 address of the connection address.
	VipV6 string `pulumi:"vipV6"`
}

// GetInstancesInstanceVisitAddrInput is an input type that accepts GetInstancesInstanceVisitAddrArgs and GetInstancesInstanceVisitAddrOutput values.
// You can construct a concrete instance of `GetInstancesInstanceVisitAddrInput` via:
//
//	GetInstancesInstanceVisitAddrArgs{...}
type GetInstancesInstanceVisitAddrInput interface {
	pulumi.Input

	ToGetInstancesInstanceVisitAddrOutput() GetInstancesInstanceVisitAddrOutput
	ToGetInstancesInstanceVisitAddrOutputWithContext(context.Context) GetInstancesInstanceVisitAddrOutput
}

type GetInstancesInstanceVisitAddrArgs struct {
	// The connection address type.
	AddrType pulumi.StringInput `pulumi:"addrType"`
	// The connection address.
	Address pulumi.StringInput `pulumi:"address"`
	// The EIP ID bound to the instance's public network address.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// The connection port.
	Port pulumi.StringInput `pulumi:"port"`
	// The ipv4 address of the connection address.
	Vip pulumi.StringInput `pulumi:"vip"`
	// The ipv6 address of the connection address.
	VipV6 pulumi.StringInput `pulumi:"vipV6"`
}

func (GetInstancesInstanceVisitAddrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceVisitAddr)(nil)).Elem()
}

func (i GetInstancesInstanceVisitAddrArgs) ToGetInstancesInstanceVisitAddrOutput() GetInstancesInstanceVisitAddrOutput {
	return i.ToGetInstancesInstanceVisitAddrOutputWithContext(context.Background())
}

func (i GetInstancesInstanceVisitAddrArgs) ToGetInstancesInstanceVisitAddrOutputWithContext(ctx context.Context) GetInstancesInstanceVisitAddrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceVisitAddrOutput)
}

// GetInstancesInstanceVisitAddrArrayInput is an input type that accepts GetInstancesInstanceVisitAddrArray and GetInstancesInstanceVisitAddrArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceVisitAddrArrayInput` via:
//
//	GetInstancesInstanceVisitAddrArray{ GetInstancesInstanceVisitAddrArgs{...} }
type GetInstancesInstanceVisitAddrArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceVisitAddrArrayOutput() GetInstancesInstanceVisitAddrArrayOutput
	ToGetInstancesInstanceVisitAddrArrayOutputWithContext(context.Context) GetInstancesInstanceVisitAddrArrayOutput
}

type GetInstancesInstanceVisitAddrArray []GetInstancesInstanceVisitAddrInput

func (GetInstancesInstanceVisitAddrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceVisitAddr)(nil)).Elem()
}

func (i GetInstancesInstanceVisitAddrArray) ToGetInstancesInstanceVisitAddrArrayOutput() GetInstancesInstanceVisitAddrArrayOutput {
	return i.ToGetInstancesInstanceVisitAddrArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceVisitAddrArray) ToGetInstancesInstanceVisitAddrArrayOutputWithContext(ctx context.Context) GetInstancesInstanceVisitAddrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceVisitAddrArrayOutput)
}

type GetInstancesInstanceVisitAddrOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceVisitAddrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceVisitAddr)(nil)).Elem()
}

func (o GetInstancesInstanceVisitAddrOutput) ToGetInstancesInstanceVisitAddrOutput() GetInstancesInstanceVisitAddrOutput {
	return o
}

func (o GetInstancesInstanceVisitAddrOutput) ToGetInstancesInstanceVisitAddrOutputWithContext(ctx context.Context) GetInstancesInstanceVisitAddrOutput {
	return o
}

// The connection address type.
func (o GetInstancesInstanceVisitAddrOutput) AddrType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.AddrType }).(pulumi.StringOutput)
}

// The connection address.
func (o GetInstancesInstanceVisitAddrOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.Address }).(pulumi.StringOutput)
}

// The EIP ID bound to the instance's public network address.
func (o GetInstancesInstanceVisitAddrOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.EipId }).(pulumi.StringOutput)
}

// The connection port.
func (o GetInstancesInstanceVisitAddrOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.Port }).(pulumi.StringOutput)
}

// The ipv4 address of the connection address.
func (o GetInstancesInstanceVisitAddrOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.Vip }).(pulumi.StringOutput)
}

// The ipv6 address of the connection address.
func (o GetInstancesInstanceVisitAddrOutput) VipV6() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceVisitAddr) string { return v.VipV6 }).(pulumi.StringOutput)
}

type GetInstancesInstanceVisitAddrArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceVisitAddrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceVisitAddr)(nil)).Elem()
}

func (o GetInstancesInstanceVisitAddrArrayOutput) ToGetInstancesInstanceVisitAddrArrayOutput() GetInstancesInstanceVisitAddrArrayOutput {
	return o
}

func (o GetInstancesInstanceVisitAddrArrayOutput) ToGetInstancesInstanceVisitAddrArrayOutputWithContext(ctx context.Context) GetInstancesInstanceVisitAddrArrayOutput {
	return o
}

func (o GetInstancesInstanceVisitAddrArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceVisitAddrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceVisitAddr {
		return vs[0].([]GetInstancesInstanceVisitAddr)[vs[1].(int)]
	}).(GetInstancesInstanceVisitAddrOutput)
}

type GetInstancesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetInstancesTagInput is an input type that accepts GetInstancesTagArgs and GetInstancesTagOutput values.
// You can construct a concrete instance of `GetInstancesTagInput` via:
//
//	GetInstancesTagArgs{...}
type GetInstancesTagInput interface {
	pulumi.Input

	ToGetInstancesTagOutput() GetInstancesTagOutput
	ToGetInstancesTagOutputWithContext(context.Context) GetInstancesTagOutput
}

type GetInstancesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstancesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesTag)(nil)).Elem()
}

func (i GetInstancesTagArgs) ToGetInstancesTagOutput() GetInstancesTagOutput {
	return i.ToGetInstancesTagOutputWithContext(context.Background())
}

func (i GetInstancesTagArgs) ToGetInstancesTagOutputWithContext(ctx context.Context) GetInstancesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesTagOutput)
}

// GetInstancesTagArrayInput is an input type that accepts GetInstancesTagArray and GetInstancesTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesTagArrayInput` via:
//
//	GetInstancesTagArray{ GetInstancesTagArgs{...} }
type GetInstancesTagArrayInput interface {
	pulumi.Input

	ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput
	ToGetInstancesTagArrayOutputWithContext(context.Context) GetInstancesTagArrayOutput
}

type GetInstancesTagArray []GetInstancesTagInput

func (GetInstancesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesTag)(nil)).Elem()
}

func (i GetInstancesTagArray) ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput {
	return i.ToGetInstancesTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesTagArray) ToGetInstancesTagArrayOutputWithContext(ctx context.Context) GetInstancesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesTagArrayOutput)
}

type GetInstancesTagOutput struct{ *pulumi.OutputState }

func (GetInstancesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesTag)(nil)).Elem()
}

func (o GetInstancesTagOutput) ToGetInstancesTagOutput() GetInstancesTagOutput {
	return o
}

func (o GetInstancesTagOutput) ToGetInstancesTagOutputWithContext(ctx context.Context) GetInstancesTagOutput {
	return o
}

// The Key of Tags.
func (o GetInstancesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetInstancesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstancesTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesTag)(nil)).Elem()
}

func (o GetInstancesTagArrayOutput) ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput {
	return o
}

func (o GetInstancesTagArrayOutput) ToGetInstancesTagArrayOutputWithContext(ctx context.Context) GetInstancesTagArrayOutput {
	return o
}

func (o GetInstancesTagArrayOutput) Index(i pulumi.IntInput) GetInstancesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesTag {
		return vs[0].([]GetInstancesTag)[vs[1].(int)]
	}).(GetInstancesTagOutput)
}

type GetPitrTimeWindowsPeriod struct {
	// Recoverable end time (UTC time) supported when restoring data by point in time.
	EndTime string `pulumi:"endTime"`
	// The instance id.
	InstanceId string `pulumi:"instanceId"`
	// The recoverable start time (in UTC time) supported when restoring data by point in time.
	StartTime string `pulumi:"startTime"`
}

// GetPitrTimeWindowsPeriodInput is an input type that accepts GetPitrTimeWindowsPeriodArgs and GetPitrTimeWindowsPeriodOutput values.
// You can construct a concrete instance of `GetPitrTimeWindowsPeriodInput` via:
//
//	GetPitrTimeWindowsPeriodArgs{...}
type GetPitrTimeWindowsPeriodInput interface {
	pulumi.Input

	ToGetPitrTimeWindowsPeriodOutput() GetPitrTimeWindowsPeriodOutput
	ToGetPitrTimeWindowsPeriodOutputWithContext(context.Context) GetPitrTimeWindowsPeriodOutput
}

type GetPitrTimeWindowsPeriodArgs struct {
	// Recoverable end time (UTC time) supported when restoring data by point in time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The instance id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The recoverable start time (in UTC time) supported when restoring data by point in time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetPitrTimeWindowsPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPitrTimeWindowsPeriod)(nil)).Elem()
}

func (i GetPitrTimeWindowsPeriodArgs) ToGetPitrTimeWindowsPeriodOutput() GetPitrTimeWindowsPeriodOutput {
	return i.ToGetPitrTimeWindowsPeriodOutputWithContext(context.Background())
}

func (i GetPitrTimeWindowsPeriodArgs) ToGetPitrTimeWindowsPeriodOutputWithContext(ctx context.Context) GetPitrTimeWindowsPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPitrTimeWindowsPeriodOutput)
}

// GetPitrTimeWindowsPeriodArrayInput is an input type that accepts GetPitrTimeWindowsPeriodArray and GetPitrTimeWindowsPeriodArrayOutput values.
// You can construct a concrete instance of `GetPitrTimeWindowsPeriodArrayInput` via:
//
//	GetPitrTimeWindowsPeriodArray{ GetPitrTimeWindowsPeriodArgs{...} }
type GetPitrTimeWindowsPeriodArrayInput interface {
	pulumi.Input

	ToGetPitrTimeWindowsPeriodArrayOutput() GetPitrTimeWindowsPeriodArrayOutput
	ToGetPitrTimeWindowsPeriodArrayOutputWithContext(context.Context) GetPitrTimeWindowsPeriodArrayOutput
}

type GetPitrTimeWindowsPeriodArray []GetPitrTimeWindowsPeriodInput

func (GetPitrTimeWindowsPeriodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPitrTimeWindowsPeriod)(nil)).Elem()
}

func (i GetPitrTimeWindowsPeriodArray) ToGetPitrTimeWindowsPeriodArrayOutput() GetPitrTimeWindowsPeriodArrayOutput {
	return i.ToGetPitrTimeWindowsPeriodArrayOutputWithContext(context.Background())
}

func (i GetPitrTimeWindowsPeriodArray) ToGetPitrTimeWindowsPeriodArrayOutputWithContext(ctx context.Context) GetPitrTimeWindowsPeriodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPitrTimeWindowsPeriodArrayOutput)
}

type GetPitrTimeWindowsPeriodOutput struct{ *pulumi.OutputState }

func (GetPitrTimeWindowsPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPitrTimeWindowsPeriod)(nil)).Elem()
}

func (o GetPitrTimeWindowsPeriodOutput) ToGetPitrTimeWindowsPeriodOutput() GetPitrTimeWindowsPeriodOutput {
	return o
}

func (o GetPitrTimeWindowsPeriodOutput) ToGetPitrTimeWindowsPeriodOutputWithContext(ctx context.Context) GetPitrTimeWindowsPeriodOutput {
	return o
}

// Recoverable end time (UTC time) supported when restoring data by point in time.
func (o GetPitrTimeWindowsPeriodOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPitrTimeWindowsPeriod) string { return v.EndTime }).(pulumi.StringOutput)
}

// The instance id.
func (o GetPitrTimeWindowsPeriodOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPitrTimeWindowsPeriod) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The recoverable start time (in UTC time) supported when restoring data by point in time.
func (o GetPitrTimeWindowsPeriodOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPitrTimeWindowsPeriod) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetPitrTimeWindowsPeriodArrayOutput struct{ *pulumi.OutputState }

func (GetPitrTimeWindowsPeriodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPitrTimeWindowsPeriod)(nil)).Elem()
}

func (o GetPitrTimeWindowsPeriodArrayOutput) ToGetPitrTimeWindowsPeriodArrayOutput() GetPitrTimeWindowsPeriodArrayOutput {
	return o
}

func (o GetPitrTimeWindowsPeriodArrayOutput) ToGetPitrTimeWindowsPeriodArrayOutputWithContext(ctx context.Context) GetPitrTimeWindowsPeriodArrayOutput {
	return o
}

func (o GetPitrTimeWindowsPeriodArrayOutput) Index(i pulumi.IntInput) GetPitrTimeWindowsPeriodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPitrTimeWindowsPeriod {
		return vs[0].([]GetPitrTimeWindowsPeriod)[vs[1].(int)]
	}).(GetPitrTimeWindowsPeriodOutput)
}

type GetRegionsRegion struct {
	// Target region info.
	RegionId string `pulumi:"regionId"`
	// The name of region.
	RegionName string `pulumi:"regionName"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//	GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// Target region info.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The name of region.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//	GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// Target region info.
func (o GetRegionsRegionOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionId }).(pulumi.StringOutput)
}

// The name of region.
func (o GetRegionsRegionOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.RegionName }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetZonesZone struct {
	// The id of the zone.
	Id string `pulumi:"id"`
	// The id of the zone.
	ZoneId string `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName string `pulumi:"zoneName"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//	GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// The id of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
	// The name of the zone.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//	GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// The id of the zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the zone.
func (o GetZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

// The name of the zone.
func (o GetZonesZoneOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneName }).(pulumi.StringOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountInput)(nil)).Elem(), AccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountArrayInput)(nil)).Elem(), AccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListAssociatedInstanceInput)(nil)).Elem(), AllowListAssociatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListAssociatedInstanceArrayInput)(nil)).Elem(), AllowListAssociatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListInput)(nil)).Elem(), AllowListsAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListArrayInput)(nil)).Elem(), AllowListsAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListAssociatedInstanceInput)(nil)).Elem(), AllowListsAllowListAssociatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListsAllowListAssociatedInstanceArrayInput)(nil)).Elem(), AllowListsAllowListAssociatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstanceDetailInput)(nil)).Elem(), BackupInstanceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstanceDetailArrayInput)(nil)).Elem(), BackupInstanceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstanceDetailVpcInfoInput)(nil)).Elem(), BackupInstanceDetailVpcInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupInstanceDetailVpcInfoArrayInput)(nil)).Elem(), BackupInstanceDetailVpcInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInput)(nil)).Elem(), BackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupArrayInput)(nil)).Elem(), BackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceDetailInput)(nil)).Elem(), BackupsBackupInstanceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceDetailArrayInput)(nil)).Elem(), BackupsBackupInstanceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceDetailVpcInfoInput)(nil)).Elem(), BackupsBackupInstanceDetailVpcInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInstanceDetailVpcInfoArrayInput)(nil)).Elem(), BackupsBackupInstanceDetailVpcInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigureNodeInput)(nil)).Elem(), InstanceConfigureNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConfigureNodeArrayInput)(nil)).Elem(), InstanceConfigureNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParamValueInput)(nil)).Elem(), InstanceParamValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceParamValueArrayInput)(nil)).Elem(), InstanceParamValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagInput)(nil)).Elem(), InstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagArrayInput)(nil)).Elem(), InstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceInput)(nil)).Elem(), InstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceArrayInput)(nil)).Elem(), InstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceBackupPlanInput)(nil)).Elem(), InstancesInstanceBackupPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceCapacityInput)(nil)).Elem(), InstancesInstanceCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceConfigureNodeInput)(nil)).Elem(), InstancesInstanceConfigureNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceConfigureNodeArrayInput)(nil)).Elem(), InstancesInstanceConfigureNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceParamInput)(nil)).Elem(), InstancesInstanceParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceParamArrayInput)(nil)).Elem(), InstancesInstanceParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceParamOptionInput)(nil)).Elem(), InstancesInstanceParamOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceParamOptionArrayInput)(nil)).Elem(), InstancesInstanceParamOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceTagInput)(nil)).Elem(), InstancesInstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceTagArrayInput)(nil)).Elem(), InstancesInstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceVisitAddrInput)(nil)).Elem(), InstancesInstanceVisitAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceVisitAddrArrayInput)(nil)).Elem(), InstancesInstanceVisitAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTagInput)(nil)).Elem(), InstancesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTagArrayInput)(nil)).Elem(), InstancesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PitrTimeWindowsPeriodInput)(nil)).Elem(), PitrTimeWindowsPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PitrTimeWindowsPeriodArrayInput)(nil)).Elem(), PitrTimeWindowsPeriodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionsRegionInput)(nil)).Elem(), RegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegionsRegionArrayInput)(nil)).Elem(), RegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesZoneInput)(nil)).Elem(), ZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesZoneArrayInput)(nil)).Elem(), ZonesZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountInput)(nil)).Elem(), GetAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountArrayInput)(nil)).Elem(), GetAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListInput)(nil)).Elem(), GetAllowListsAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListArrayInput)(nil)).Elem(), GetAllowListsAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListAssociatedInstanceInput)(nil)).Elem(), GetAllowListsAllowListAssociatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowListsAllowListAssociatedInstanceArrayInput)(nil)).Elem(), GetAllowListsAllowListAssociatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInput)(nil)).Elem(), GetBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupArrayInput)(nil)).Elem(), GetBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceDetailInput)(nil)).Elem(), GetBackupsBackupInstanceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceDetailArrayInput)(nil)).Elem(), GetBackupsBackupInstanceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceDetailVpcInfoInput)(nil)).Elem(), GetBackupsBackupInstanceDetailVpcInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInstanceDetailVpcInfoArrayInput)(nil)).Elem(), GetBackupsBackupInstanceDetailVpcInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceBackupPlanInput)(nil)).Elem(), GetInstancesInstanceBackupPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceCapacityInput)(nil)).Elem(), GetInstancesInstanceCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigureNodeInput)(nil)).Elem(), GetInstancesInstanceConfigureNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceConfigureNodeArrayInput)(nil)).Elem(), GetInstancesInstanceConfigureNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceParamInput)(nil)).Elem(), GetInstancesInstanceParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceParamArrayInput)(nil)).Elem(), GetInstancesInstanceParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceParamOptionInput)(nil)).Elem(), GetInstancesInstanceParamOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceParamOptionArrayInput)(nil)).Elem(), GetInstancesInstanceParamOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceTagInput)(nil)).Elem(), GetInstancesInstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceTagArrayInput)(nil)).Elem(), GetInstancesInstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceVisitAddrInput)(nil)).Elem(), GetInstancesInstanceVisitAddrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceVisitAddrArrayInput)(nil)).Elem(), GetInstancesInstanceVisitAddrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesTagInput)(nil)).Elem(), GetInstancesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesTagArrayInput)(nil)).Elem(), GetInstancesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPitrTimeWindowsPeriodInput)(nil)).Elem(), GetPitrTimeWindowsPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPitrTimeWindowsPeriodArrayInput)(nil)).Elem(), GetPitrTimeWindowsPeriodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneInput)(nil)).Elem(), GetZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesZoneArrayInput)(nil)).Elem(), GetZonesZoneArray{})
	pulumi.RegisterOutputType(AccountsAccountOutput{})
	pulumi.RegisterOutputType(AccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(AllowListAssociatedInstanceOutput{})
	pulumi.RegisterOutputType(AllowListAssociatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListArrayOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListAssociatedInstanceOutput{})
	pulumi.RegisterOutputType(AllowListsAllowListAssociatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(BackupInstanceDetailOutput{})
	pulumi.RegisterOutputType(BackupInstanceDetailArrayOutput{})
	pulumi.RegisterOutputType(BackupInstanceDetailVpcInfoOutput{})
	pulumi.RegisterOutputType(BackupInstanceDetailVpcInfoArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupOutput{})
	pulumi.RegisterOutputType(BackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceDetailOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceDetailArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceDetailVpcInfoOutput{})
	pulumi.RegisterOutputType(BackupsBackupInstanceDetailVpcInfoArrayOutput{})
	pulumi.RegisterOutputType(InstanceConfigureNodeOutput{})
	pulumi.RegisterOutputType(InstanceConfigureNodeArrayOutput{})
	pulumi.RegisterOutputType(InstanceParamValueOutput{})
	pulumi.RegisterOutputType(InstanceParamValueArrayOutput{})
	pulumi.RegisterOutputType(InstanceTagOutput{})
	pulumi.RegisterOutputType(InstanceTagArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceOutput{})
	pulumi.RegisterOutputType(InstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceBackupPlanOutput{})
	pulumi.RegisterOutputType(InstancesInstanceCapacityOutput{})
	pulumi.RegisterOutputType(InstancesInstanceConfigureNodeOutput{})
	pulumi.RegisterOutputType(InstancesInstanceConfigureNodeArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceParamOutput{})
	pulumi.RegisterOutputType(InstancesInstanceParamArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceParamOptionOutput{})
	pulumi.RegisterOutputType(InstancesInstanceParamOptionArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceTagOutput{})
	pulumi.RegisterOutputType(InstancesInstanceTagArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceVisitAddrOutput{})
	pulumi.RegisterOutputType(InstancesInstanceVisitAddrArrayOutput{})
	pulumi.RegisterOutputType(InstancesTagOutput{})
	pulumi.RegisterOutputType(InstancesTagArrayOutput{})
	pulumi.RegisterOutputType(PitrTimeWindowsPeriodOutput{})
	pulumi.RegisterOutputType(PitrTimeWindowsPeriodArrayOutput{})
	pulumi.RegisterOutputType(RegionsRegionOutput{})
	pulumi.RegisterOutputType(RegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(ZonesZoneOutput{})
	pulumi.RegisterOutputType(ZonesZoneArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListArrayOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListAssociatedInstanceOutput{})
	pulumi.RegisterOutputType(GetAllowListsAllowListAssociatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceDetailOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceDetailArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceDetailVpcInfoOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupInstanceDetailVpcInfoArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceBackupPlanOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceCapacityOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigureNodeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceConfigureNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceParamOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceParamArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceParamOptionOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceParamOptionArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceTagOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceTagArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceVisitAddrOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceVisitAddrArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesTagOutput{})
	pulumi.RegisterOutputType(GetInstancesTagArrayOutput{})
	pulumi.RegisterOutputType(GetPitrTimeWindowsPeriodOutput{})
	pulumi.RegisterOutputType(GetPitrTimeWindowsPeriodArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
