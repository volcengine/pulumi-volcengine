// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of redis parameter groups
//
// Deprecated: volcengine.redis.ParameterGroups has been deprecated in favor of volcengine.redis.getParameterGroups
func ParameterGroups(ctx *pulumi.Context, args *ParameterGroupsArgs, opts ...pulumi.InvokeOption) (*ParameterGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ParameterGroupsResult
	err := ctx.Invoke("volcengine:redis/parameterGroups:ParameterGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ParameterGroups.
type ParameterGroupsArgs struct {
	// The Redis database version applicable to the parameter template.
	EngineVersion *string `pulumi:"engineVersion"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The source of creating the parameter template.
	Source *string `pulumi:"source"`
}

// A collection of values returned by ParameterGroups.
type ParameterGroupsResult struct {
	// The database version applicable to the parameter template.
	EngineVersion *string `pulumi:"engineVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The details of the parameter template.
	ParameterGroups []ParameterGroupsParameterGroup `pulumi:"parameterGroups"`
	// The source of creating the parameter template.
	Source *string `pulumi:"source"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func ParameterGroupsOutput(ctx *pulumi.Context, args ParameterGroupsOutputArgs, opts ...pulumi.InvokeOption) ParameterGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ParameterGroupsResult, error) {
			args := v.(ParameterGroupsArgs)
			r, err := ParameterGroups(ctx, &args, opts...)
			var s ParameterGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ParameterGroupsResultOutput)
}

// A collection of arguments for invoking ParameterGroups.
type ParameterGroupsOutputArgs struct {
	// The Redis database version applicable to the parameter template.
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The source of creating the parameter template.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (ParameterGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupsArgs)(nil)).Elem()
}

// A collection of values returned by ParameterGroups.
type ParameterGroupsResultOutput struct{ *pulumi.OutputState }

func (ParameterGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupsResult)(nil)).Elem()
}

func (o ParameterGroupsResultOutput) ToParameterGroupsResultOutput() ParameterGroupsResultOutput {
	return o
}

func (o ParameterGroupsResultOutput) ToParameterGroupsResultOutputWithContext(ctx context.Context) ParameterGroupsResultOutput {
	return o
}

// The database version applicable to the parameter template.
func (o ParameterGroupsResultOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupsResult) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ParameterGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ParameterGroupsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o ParameterGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The details of the parameter template.
func (o ParameterGroupsResultOutput) ParameterGroups() ParameterGroupsParameterGroupArrayOutput {
	return o.ApplyT(func(v ParameterGroupsResult) []ParameterGroupsParameterGroup { return v.ParameterGroups }).(ParameterGroupsParameterGroupArrayOutput)
}

// The source of creating the parameter template.
func (o ParameterGroupsResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupsResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o ParameterGroupsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v ParameterGroupsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(ParameterGroupsResultOutput{})
}
