// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of redis parameter groups
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/redis"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.GetParameterGroups(ctx, &redis.GetParameterGroupsArgs{
//				EngineVersion: pulumi.StringRef("5.0"),
//				Source:        pulumi.StringRef("User"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetParameterGroups(ctx *pulumi.Context, args *GetParameterGroupsArgs, opts ...pulumi.InvokeOption) (*GetParameterGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetParameterGroupsResult
	err := ctx.Invoke("volcengine:redis/getParameterGroups:getParameterGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParameterGroups.
type GetParameterGroupsArgs struct {
	// The Redis database version applicable to the parameter template.
	EngineVersion *string `pulumi:"engineVersion"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The source of creating the parameter template.
	Source *string `pulumi:"source"`
}

// A collection of values returned by getParameterGroups.
type GetParameterGroupsResult struct {
	// The database version applicable to the parameter template.
	EngineVersion *string `pulumi:"engineVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The details of the parameter template.
	ParameterGroups []GetParameterGroupsParameterGroup `pulumi:"parameterGroups"`
	// The source of creating the parameter template.
	Source *string `pulumi:"source"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetParameterGroupsOutput(ctx *pulumi.Context, args GetParameterGroupsOutputArgs, opts ...pulumi.InvokeOption) GetParameterGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetParameterGroupsResult, error) {
			args := v.(GetParameterGroupsArgs)
			r, err := GetParameterGroups(ctx, &args, opts...)
			var s GetParameterGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetParameterGroupsResultOutput)
}

// A collection of arguments for invoking getParameterGroups.
type GetParameterGroupsOutputArgs struct {
	// The Redis database version applicable to the parameter template.
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The source of creating the parameter template.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (GetParameterGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getParameterGroups.
type GetParameterGroupsResultOutput struct{ *pulumi.OutputState }

func (GetParameterGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetParameterGroupsResult)(nil)).Elem()
}

func (o GetParameterGroupsResultOutput) ToGetParameterGroupsResultOutput() GetParameterGroupsResultOutput {
	return o
}

func (o GetParameterGroupsResultOutput) ToGetParameterGroupsResultOutputWithContext(ctx context.Context) GetParameterGroupsResultOutput {
	return o
}

// The database version applicable to the parameter template.
func (o GetParameterGroupsResultOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetParameterGroupsResult) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetParameterGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetParameterGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetParameterGroupsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetParameterGroupsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetParameterGroupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetParameterGroupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The details of the parameter template.
func (o GetParameterGroupsResultOutput) ParameterGroups() GetParameterGroupsParameterGroupArrayOutput {
	return o.ApplyT(func(v GetParameterGroupsResult) []GetParameterGroupsParameterGroup { return v.ParameterGroups }).(GetParameterGroupsParameterGroupArrayOutput)
}

// The source of creating the parameter template.
func (o GetParameterGroupsResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetParameterGroupsResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetParameterGroupsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetParameterGroupsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetParameterGroupsResultOutput{})
}
