// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage redis allow list
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/redis"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.NewAllowList(ctx, "foo", &redis.AllowListArgs{
//				AllowLists: pulumi.StringArray{
//					pulumi.String("0.0.0.0/0"),
//					pulumi.String("192.168.0.0/24"),
//					pulumi.String("192.168.1.1"),
//					pulumi.String("192.168.2.22"),
//				},
//				AllowListDesc: pulumi.String("renxin terraform测试白xxxxxxx"),
//				AllowListName: pulumi.String("rx_test_tf_allowlist_create"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Redis AllowList can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:redis/allowList:AllowList default acl-cn03wk541s55c376xxxx
//
// ```
type AllowList struct {
	pulumi.CustomResourceState

	// Description of allow list.
	AllowListDesc pulumi.StringPtrOutput `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId pulumi.StringOutput `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum pulumi.IntOutput `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName pulumi.StringOutput `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType pulumi.StringOutput `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists pulumi.StringArrayOutput `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum pulumi.IntOutput `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances AllowListAssociatedInstanceArrayOutput `pulumi:"associatedInstances"`
}

// NewAllowList registers a new resource with the given unique name, arguments, and options.
func NewAllowList(ctx *pulumi.Context,
	name string, args *AllowListArgs, opts ...pulumi.ResourceOption) (*AllowList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllowListName == nil {
		return nil, errors.New("invalid value for required argument 'AllowListName'")
	}
	if args.AllowLists == nil {
		return nil, errors.New("invalid value for required argument 'AllowLists'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AllowList
	err := ctx.RegisterResource("volcengine:redis/allowList:AllowList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAllowList gets an existing AllowList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAllowList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AllowListState, opts ...pulumi.ResourceOption) (*AllowList, error) {
	var resource AllowList
	err := ctx.ReadResource("volcengine:redis/allowList:AllowList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AllowList resources.
type allowListState struct {
	// Description of allow list.
	AllowListDesc *string `pulumi:"allowListDesc"`
	// Id of allow list.
	AllowListId *string `pulumi:"allowListId"`
	// The IP number of allow list.
	AllowListIpNum *int `pulumi:"allowListIpNum"`
	// Name of allow list.
	AllowListName *string `pulumi:"allowListName"`
	// Type of allow list.
	AllowListType *string `pulumi:"allowListType"`
	// Ip list of allow list.
	AllowLists []string `pulumi:"allowLists"`
	// The number of instance that associated to allow list.
	AssociatedInstanceNum *int `pulumi:"associatedInstanceNum"`
	// Instances associated by this allow list.
	AssociatedInstances []AllowListAssociatedInstance `pulumi:"associatedInstances"`
}

type AllowListState struct {
	// Description of allow list.
	AllowListDesc pulumi.StringPtrInput
	// Id of allow list.
	AllowListId pulumi.StringPtrInput
	// The IP number of allow list.
	AllowListIpNum pulumi.IntPtrInput
	// Name of allow list.
	AllowListName pulumi.StringPtrInput
	// Type of allow list.
	AllowListType pulumi.StringPtrInput
	// Ip list of allow list.
	AllowLists pulumi.StringArrayInput
	// The number of instance that associated to allow list.
	AssociatedInstanceNum pulumi.IntPtrInput
	// Instances associated by this allow list.
	AssociatedInstances AllowListAssociatedInstanceArrayInput
}

func (AllowListState) ElementType() reflect.Type {
	return reflect.TypeOf((*allowListState)(nil)).Elem()
}

type allowListArgs struct {
	// Description of allow list.
	AllowListDesc *string `pulumi:"allowListDesc"`
	// Name of allow list.
	AllowListName string `pulumi:"allowListName"`
	// Ip list of allow list.
	AllowLists []string `pulumi:"allowLists"`
}

// The set of arguments for constructing a AllowList resource.
type AllowListArgs struct {
	// Description of allow list.
	AllowListDesc pulumi.StringPtrInput
	// Name of allow list.
	AllowListName pulumi.StringInput
	// Ip list of allow list.
	AllowLists pulumi.StringArrayInput
}

func (AllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*allowListArgs)(nil)).Elem()
}

type AllowListInput interface {
	pulumi.Input

	ToAllowListOutput() AllowListOutput
	ToAllowListOutputWithContext(ctx context.Context) AllowListOutput
}

func (*AllowList) ElementType() reflect.Type {
	return reflect.TypeOf((**AllowList)(nil)).Elem()
}

func (i *AllowList) ToAllowListOutput() AllowListOutput {
	return i.ToAllowListOutputWithContext(context.Background())
}

func (i *AllowList) ToAllowListOutputWithContext(ctx context.Context) AllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListOutput)
}

// AllowListArrayInput is an input type that accepts AllowListArray and AllowListArrayOutput values.
// You can construct a concrete instance of `AllowListArrayInput` via:
//
//	AllowListArray{ AllowListArgs{...} }
type AllowListArrayInput interface {
	pulumi.Input

	ToAllowListArrayOutput() AllowListArrayOutput
	ToAllowListArrayOutputWithContext(context.Context) AllowListArrayOutput
}

type AllowListArray []AllowListInput

func (AllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AllowList)(nil)).Elem()
}

func (i AllowListArray) ToAllowListArrayOutput() AllowListArrayOutput {
	return i.ToAllowListArrayOutputWithContext(context.Background())
}

func (i AllowListArray) ToAllowListArrayOutputWithContext(ctx context.Context) AllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListArrayOutput)
}

// AllowListMapInput is an input type that accepts AllowListMap and AllowListMapOutput values.
// You can construct a concrete instance of `AllowListMapInput` via:
//
//	AllowListMap{ "key": AllowListArgs{...} }
type AllowListMapInput interface {
	pulumi.Input

	ToAllowListMapOutput() AllowListMapOutput
	ToAllowListMapOutputWithContext(context.Context) AllowListMapOutput
}

type AllowListMap map[string]AllowListInput

func (AllowListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AllowList)(nil)).Elem()
}

func (i AllowListMap) ToAllowListMapOutput() AllowListMapOutput {
	return i.ToAllowListMapOutputWithContext(context.Background())
}

func (i AllowListMap) ToAllowListMapOutputWithContext(ctx context.Context) AllowListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowListMapOutput)
}

type AllowListOutput struct{ *pulumi.OutputState }

func (AllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AllowList)(nil)).Elem()
}

func (o AllowListOutput) ToAllowListOutput() AllowListOutput {
	return o
}

func (o AllowListOutput) ToAllowListOutputWithContext(ctx context.Context) AllowListOutput {
	return o
}

// Description of allow list.
func (o AllowListOutput) AllowListDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AllowList) pulumi.StringPtrOutput { return v.AllowListDesc }).(pulumi.StringPtrOutput)
}

// Id of allow list.
func (o AllowListOutput) AllowListId() pulumi.StringOutput {
	return o.ApplyT(func(v *AllowList) pulumi.StringOutput { return v.AllowListId }).(pulumi.StringOutput)
}

// The IP number of allow list.
func (o AllowListOutput) AllowListIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v *AllowList) pulumi.IntOutput { return v.AllowListIpNum }).(pulumi.IntOutput)
}

// Name of allow list.
func (o AllowListOutput) AllowListName() pulumi.StringOutput {
	return o.ApplyT(func(v *AllowList) pulumi.StringOutput { return v.AllowListName }).(pulumi.StringOutput)
}

// Type of allow list.
func (o AllowListOutput) AllowListType() pulumi.StringOutput {
	return o.ApplyT(func(v *AllowList) pulumi.StringOutput { return v.AllowListType }).(pulumi.StringOutput)
}

// Ip list of allow list.
func (o AllowListOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AllowList) pulumi.StringArrayOutput { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The number of instance that associated to allow list.
func (o AllowListOutput) AssociatedInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v *AllowList) pulumi.IntOutput { return v.AssociatedInstanceNum }).(pulumi.IntOutput)
}

// Instances associated by this allow list.
func (o AllowListOutput) AssociatedInstances() AllowListAssociatedInstanceArrayOutput {
	return o.ApplyT(func(v *AllowList) AllowListAssociatedInstanceArrayOutput { return v.AssociatedInstances }).(AllowListAssociatedInstanceArrayOutput)
}

type AllowListArrayOutput struct{ *pulumi.OutputState }

func (AllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AllowList)(nil)).Elem()
}

func (o AllowListArrayOutput) ToAllowListArrayOutput() AllowListArrayOutput {
	return o
}

func (o AllowListArrayOutput) ToAllowListArrayOutputWithContext(ctx context.Context) AllowListArrayOutput {
	return o
}

func (o AllowListArrayOutput) Index(i pulumi.IntInput) AllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AllowList {
		return vs[0].([]*AllowList)[vs[1].(int)]
	}).(AllowListOutput)
}

type AllowListMapOutput struct{ *pulumi.OutputState }

func (AllowListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AllowList)(nil)).Elem()
}

func (o AllowListMapOutput) ToAllowListMapOutput() AllowListMapOutput {
	return o
}

func (o AllowListMapOutput) ToAllowListMapOutputWithContext(ctx context.Context) AllowListMapOutput {
	return o
}

func (o AllowListMapOutput) MapIndex(k pulumi.StringInput) AllowListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AllowList {
		return vs[0].(map[string]*AllowList)[vs[1].(string)]
	}).(AllowListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListInput)(nil)).Elem(), &AllowList{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListArrayInput)(nil)).Elem(), AllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowListMapInput)(nil)).Elem(), AllowListMap{})
	pulumi.RegisterOutputType(AllowListOutput{})
	pulumi.RegisterOutputType(AllowListArrayOutput{})
	pulumi.RegisterOutputType(AllowListMapOutput{})
}
