// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of redis backups
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/redis"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.Backups(ctx, &redis.BackupsArgs{
//				BackupStrategyLists: []string{
//					"ManualBackup",
//				},
//				InstanceId: "redis-cnlfvrv4qye6u4lpa",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func Backups(ctx *pulumi.Context, args *BackupsArgs, opts ...pulumi.InvokeOption) (*BackupsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv BackupsResult
	err := ctx.Invoke("volcengine:redis/backups:Backups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Backups.
type BackupsArgs struct {
	// The list of backup strategy, support AutomatedBackup and ManualBackup.
	BackupStrategyLists []string `pulumi:"backupStrategyLists"`
	// Query end time.
	EndTime *string `pulumi:"endTime"`
	// Id of instance.
	InstanceId string `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Query start time.
	StartTime *string `pulumi:"startTime"`
}

// A collection of values returned by Backups.
type BackupsResult struct {
	BackupStrategyLists []string `pulumi:"backupStrategyLists"`
	// Information of backups.
	Backups []BackupsBackup `pulumi:"backups"`
	// End time of backup.
	EndTime *string `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Id of instance.
	InstanceId string  `pulumi:"instanceId"`
	OutputFile *string `pulumi:"outputFile"`
	// Start time of backup.
	StartTime *string `pulumi:"startTime"`
	// The total count of backup query.
	TotalCount int `pulumi:"totalCount"`
}

func BackupsOutput(ctx *pulumi.Context, args BackupsOutputArgs, opts ...pulumi.InvokeOption) BackupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (BackupsResult, error) {
			args := v.(BackupsArgs)
			r, err := Backups(ctx, &args, opts...)
			var s BackupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(BackupsResultOutput)
}

// A collection of arguments for invoking Backups.
type BackupsOutputArgs struct {
	// The list of backup strategy, support AutomatedBackup and ManualBackup.
	BackupStrategyLists pulumi.StringArrayInput `pulumi:"backupStrategyLists"`
	// Query end time.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Query start time.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (BackupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsArgs)(nil)).Elem()
}

// A collection of values returned by Backups.
type BackupsResultOutput struct{ *pulumi.OutputState }

func (BackupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsResult)(nil)).Elem()
}

func (o BackupsResultOutput) ToBackupsResultOutput() BackupsResultOutput {
	return o
}

func (o BackupsResultOutput) ToBackupsResultOutputWithContext(ctx context.Context) BackupsResultOutput {
	return o
}

func (o BackupsResultOutput) BackupStrategyLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupsResult) []string { return v.BackupStrategyLists }).(pulumi.StringArrayOutput)
}

// Information of backups.
func (o BackupsResultOutput) Backups() BackupsBackupArrayOutput {
	return o.ApplyT(func(v BackupsResult) []BackupsBackup { return v.Backups }).(BackupsBackupArrayOutput)
}

// End time of backup.
func (o BackupsResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupsResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o BackupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Id of instance.
func (o BackupsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o BackupsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// Start time of backup.
func (o BackupsResultOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupsResult) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The total count of backup query.
func (o BackupsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(BackupsResultOutput{})
}
