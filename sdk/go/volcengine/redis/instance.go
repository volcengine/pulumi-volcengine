// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/redis"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.NewInstance(ctx, "foo", &redis.InstanceArgs{
//				ApplyImmediately: pulumi.Bool(true),
//				BackupActive:     pulumi.Bool(true),
//				BackupHour:       pulumi.Int(4),
//				BackupPeriods: pulumi.IntArray{
//					pulumi.Int(1),
//					pulumi.Int(2),
//					pulumi.Int(3),
//				},
//				ChargeType:         pulumi.String("PostPaid"),
//				CreateBackup:       pulumi.Bool(false),
//				DeletionProtection: pulumi.String("disabled"),
//				EngineVersion:      pulumi.String("5.0"),
//				InstanceName:       pulumi.String("tf-test"),
//				NodeNumber:         pulumi.Int(2),
//				ParamValues: redis.InstanceParamValueArray{
//					&redis.InstanceParamValueArgs{
//						Name:  pulumi.String("active-defrag-cycle-min"),
//						Value: pulumi.String("5"),
//					},
//					&redis.InstanceParamValueArgs{
//						Name:  pulumi.String("active-defrag-cycle-max"),
//						Value: pulumi.String("28"),
//					},
//				},
//				Password:       pulumi.String("1qaz!QAZ12"),
//				Port:           pulumi.Int(6381),
//				ProjectName:    pulumi.String("default"),
//				ShardCapacity:  pulumi.Int(1024),
//				ShardNumber:    pulumi.Int(2),
//				ShardedCluster: pulumi.Int(1),
//				SubnetId:       pulumi.String("subnet-13g7c3lot0lc03n6nu4wj****"),
//				Tags: redis.InstanceTagArray{
//					&redis.InstanceTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//					&redis.InstanceTagArgs{
//						Key:   pulumi.String("k3"),
//						Value: pulumi.String("v3"),
//					},
//				},
//				VpcAuthMode: pulumi.String("close"),
//				ZoneIds: pulumi.StringArray{
//					pulumi.String("cn-beijing-a"),
//					pulumi.String("cn-beijing-b"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// redis instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:redis/instance:Instance default redis-n769ewmjjqyqh5dv
//
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
	ApplyImmediately pulumi.BoolPtrOutput `pulumi:"applyImmediately"`
	// Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupActive pulumi.BoolOutput `pulumi:"backupActive"`
	// The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupHour pulumi.IntOutput `pulumi:"backupHour"`
	// The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupPeriods pulumi.IntArrayOutput `pulumi:"backupPeriods"`
	// The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringPtrOutput `pulumi:"chargeType"`
	// Whether to create a final backup when modify the instance configuration or destroy the redis instance.
	CreateBackup pulumi.BoolPtrOutput `pulumi:"createBackup"`
	// Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
	DeletionProtection pulumi.StringPtrOutput `pulumi:"deletionProtection"`
	// The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// The name of the redis instance.
	InstanceName pulumi.StringPtrOutput `pulumi:"instanceName"`
	// The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
	NodeNumber pulumi.IntOutput `pulumi:"nodeNumber"`
	// The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
	ParamValues InstanceParamValueArrayOutput `pulumi:"paramValues"`
	// The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	Password pulumi.StringOutput `pulumi:"password"`
	// The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
	Port pulumi.IntPtrOutput `pulumi:"port"`
	// The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PurchaseMonths pulumi.IntPtrOutput `pulumi:"purchaseMonths"`
	// The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
	ShardCapacity pulumi.IntOutput `pulumi:"shardCapacity"`
	// The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
	ShardNumber pulumi.IntOutput `pulumi:"shardNumber"`
	// Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
	ShardedCluster pulumi.IntOutput `pulumi:"shardedCluster"`
	// The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Tags.
	Tags InstanceTagArrayOutput `pulumi:"tags"`
	// Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
	VpcAuthMode pulumi.StringOutput `pulumi:"vpcAuthMode"`
	// The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
	ZoneIds pulumi.StringArrayOutput `pulumi:"zoneIds"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	if args.NodeNumber == nil {
		return nil, errors.New("invalid value for required argument 'NodeNumber'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.ShardCapacity == nil {
		return nil, errors.New("invalid value for required argument 'ShardCapacity'")
	}
	if args.ShardedCluster == nil {
		return nil, errors.New("invalid value for required argument 'ShardedCluster'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.ZoneIds == nil {
		return nil, errors.New("invalid value for required argument 'ZoneIds'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("volcengine:redis/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("volcengine:redis/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupActive *bool `pulumi:"backupActive"`
	// The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupHour *int `pulumi:"backupHour"`
	// The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupPeriods []int `pulumi:"backupPeriods"`
	// The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
	ChargeType *string `pulumi:"chargeType"`
	// Whether to create a final backup when modify the instance configuration or destroy the redis instance.
	CreateBackup *bool `pulumi:"createBackup"`
	// Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
	DeletionProtection *string `pulumi:"deletionProtection"`
	// The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
	EngineVersion *string `pulumi:"engineVersion"`
	// The name of the redis instance.
	InstanceName *string `pulumi:"instanceName"`
	// The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
	NodeNumber *int `pulumi:"nodeNumber"`
	// The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
	ParamValues []InstanceParamValue `pulumi:"paramValues"`
	// The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	Password *string `pulumi:"password"`
	// The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
	Port *int `pulumi:"port"`
	// The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
	ProjectName *string `pulumi:"projectName"`
	// The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PurchaseMonths *int `pulumi:"purchaseMonths"`
	// The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
	ShardCapacity *int `pulumi:"shardCapacity"`
	// The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
	ShardNumber *int `pulumi:"shardNumber"`
	// Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
	ShardedCluster *int `pulumi:"shardedCluster"`
	// The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
	SubnetId *string `pulumi:"subnetId"`
	// Tags.
	Tags []InstanceTag `pulumi:"tags"`
	// Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
	VpcAuthMode *string `pulumi:"vpcAuthMode"`
	// The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
	ZoneIds []string `pulumi:"zoneIds"`
}

type InstanceState struct {
	// Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
	ApplyImmediately pulumi.BoolPtrInput
	// Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrInput
	// Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupActive pulumi.BoolPtrInput
	// The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupHour pulumi.IntPtrInput
	// The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupPeriods pulumi.IntArrayInput
	// The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringPtrInput
	// Whether to create a final backup when modify the instance configuration or destroy the redis instance.
	CreateBackup pulumi.BoolPtrInput
	// Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
	DeletionProtection pulumi.StringPtrInput
	// The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
	EngineVersion pulumi.StringPtrInput
	// The name of the redis instance.
	InstanceName pulumi.StringPtrInput
	// The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
	NodeNumber pulumi.IntPtrInput
	// The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
	ParamValues InstanceParamValueArrayInput
	// The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	Password pulumi.StringPtrInput
	// The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
	Port pulumi.IntPtrInput
	// The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
	ProjectName pulumi.StringPtrInput
	// The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PurchaseMonths pulumi.IntPtrInput
	// The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
	ShardCapacity pulumi.IntPtrInput
	// The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
	ShardNumber pulumi.IntPtrInput
	// Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
	ShardedCluster pulumi.IntPtrInput
	// The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
	SubnetId pulumi.StringPtrInput
	// Tags.
	Tags InstanceTagArrayInput
	// Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
	VpcAuthMode pulumi.StringPtrInput
	// The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
	ZoneIds pulumi.StringArrayInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupActive *bool `pulumi:"backupActive"`
	// The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupHour *int `pulumi:"backupHour"`
	// The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupPeriods []int `pulumi:"backupPeriods"`
	// The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
	ChargeType *string `pulumi:"chargeType"`
	// Whether to create a final backup when modify the instance configuration or destroy the redis instance.
	CreateBackup *bool `pulumi:"createBackup"`
	// Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
	DeletionProtection *string `pulumi:"deletionProtection"`
	// The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
	EngineVersion string `pulumi:"engineVersion"`
	// The name of the redis instance.
	InstanceName *string `pulumi:"instanceName"`
	// The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
	NodeNumber int `pulumi:"nodeNumber"`
	// The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
	ParamValues []InstanceParamValue `pulumi:"paramValues"`
	// The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	Password string `pulumi:"password"`
	// The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
	Port *int `pulumi:"port"`
	// The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
	ProjectName *string `pulumi:"projectName"`
	// The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PurchaseMonths *int `pulumi:"purchaseMonths"`
	// The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
	ShardCapacity int `pulumi:"shardCapacity"`
	// The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
	ShardNumber *int `pulumi:"shardNumber"`
	// Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
	ShardedCluster int `pulumi:"shardedCluster"`
	// The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []InstanceTag `pulumi:"tags"`
	// Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
	VpcAuthMode *string `pulumi:"vpcAuthMode"`
	// The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
	ZoneIds []string `pulumi:"zoneIds"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
	ApplyImmediately pulumi.BoolPtrInput
	// Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrInput
	// Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupActive pulumi.BoolPtrInput
	// The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupHour pulumi.IntPtrInput
	// The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
	// This field is valid and required when updating the backup plan of primary and secondary instance.
	BackupPeriods pulumi.IntArrayInput
	// The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringPtrInput
	// Whether to create a final backup when modify the instance configuration or destroy the redis instance.
	CreateBackup pulumi.BoolPtrInput
	// Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
	DeletionProtection pulumi.StringPtrInput
	// The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
	EngineVersion pulumi.StringInput
	// The name of the redis instance.
	InstanceName pulumi.StringPtrInput
	// The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
	NodeNumber pulumi.IntInput
	// The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
	ParamValues InstanceParamValueArrayInput
	// The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	Password pulumi.StringInput
	// The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
	Port pulumi.IntPtrInput
	// The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
	ProjectName pulumi.StringPtrInput
	// The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PurchaseMonths pulumi.IntPtrInput
	// The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
	ShardCapacity pulumi.IntInput
	// The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
	ShardNumber pulumi.IntPtrInput
	// Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
	ShardedCluster pulumi.IntInput
	// The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
	SubnetId pulumi.StringInput
	// Tags.
	Tags InstanceTagArrayInput
	// Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
	VpcAuthMode pulumi.StringPtrInput
	// The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
	ZoneIds pulumi.StringArrayInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
func (o InstanceOutput) ApplyImmediately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.ApplyImmediately }).(pulumi.BoolPtrOutput)
}

// Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false.
// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
func (o InstanceOutput) BackupActive() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.BackupActive }).(pulumi.BoolOutput)
}

// The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on.
// This field is valid and required when updating the backup plan of primary and secondary instance.
func (o InstanceOutput) BackupHour() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.BackupHour }).(pulumi.IntOutput)
}

// The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on.
// This field is valid and required when updating the backup plan of primary and secondary instance.
func (o InstanceOutput) BackupPeriods() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntArrayOutput { return v.BackupPeriods }).(pulumi.IntArrayOutput)
}

// The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
func (o InstanceOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// Whether to create a final backup when modify the instance configuration or destroy the redis instance.
func (o InstanceOutput) CreateBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.CreateBackup }).(pulumi.BoolPtrOutput)
}

// Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
func (o InstanceOutput) DeletionProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.DeletionProtection }).(pulumi.StringPtrOutput)
}

// The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
func (o InstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// The name of the redis instance.
func (o InstanceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
func (o InstanceOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.NodeNumber }).(pulumi.IntOutput)
}

// The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
func (o InstanceOutput) ParamValues() InstanceParamValueArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceParamValueArrayOutput { return v.ParamValues }).(InstanceParamValueArrayOutput)
}

// The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
func (o InstanceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

// The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
func (o InstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`.
// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) PurchaseMonths() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.PurchaseMonths }).(pulumi.IntPtrOutput)
}

// The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
func (o InstanceOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.ShardCapacity }).(pulumi.IntOutput)
}

// The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
func (o InstanceOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.ShardNumber }).(pulumi.IntOutput)
}

// Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
func (o InstanceOutput) ShardedCluster() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.ShardedCluster }).(pulumi.IntOutput)
}

// The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o InstanceOutput) Tags() InstanceTagArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceTagArrayOutput { return v.Tags }).(InstanceTagArrayOutput)
}

// Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
func (o InstanceOutput) VpcAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcAuthMode }).(pulumi.StringOutput)
}

// The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
func (o InstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
