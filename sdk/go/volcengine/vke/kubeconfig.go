// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vke

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage vke kubeconfig
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vke"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vke.NewKubeconfig(ctx, "foo", &vke.KubeconfigArgs{
//				ClusterId: pulumi.String("cce7hb97qtofmj1oi4udg"),
//				Type:      pulumi.String("Private"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VkeKubeconfig can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:vke/kubeconfig:Kubeconfig default kce8simvqtofl0l6u4qd0
//
// ```
type Kubeconfig struct {
	pulumi.CustomResourceState

	// The cluster id of the Kubeconfig.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The type of the Kubeconfig, the value of type should be Public or Private.
	Type pulumi.StringOutput `pulumi:"type"`
	// The ValidDuration of the Kubeconfig, the range of the ValidDuration is 1 hour to 43800 hour.
	ValidDuration pulumi.IntPtrOutput `pulumi:"validDuration"`
}

// NewKubeconfig registers a new resource with the given unique name, arguments, and options.
func NewKubeconfig(ctx *pulumi.Context,
	name string, args *KubeconfigArgs, opts ...pulumi.ResourceOption) (*Kubeconfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Kubeconfig
	err := ctx.RegisterResource("volcengine:vke/kubeconfig:Kubeconfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubeconfig gets an existing Kubeconfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubeconfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubeconfigState, opts ...pulumi.ResourceOption) (*Kubeconfig, error) {
	var resource Kubeconfig
	err := ctx.ReadResource("volcengine:vke/kubeconfig:Kubeconfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Kubeconfig resources.
type kubeconfigState struct {
	// The cluster id of the Kubeconfig.
	ClusterId *string `pulumi:"clusterId"`
	// The type of the Kubeconfig, the value of type should be Public or Private.
	Type *string `pulumi:"type"`
	// The ValidDuration of the Kubeconfig, the range of the ValidDuration is 1 hour to 43800 hour.
	ValidDuration *int `pulumi:"validDuration"`
}

type KubeconfigState struct {
	// The cluster id of the Kubeconfig.
	ClusterId pulumi.StringPtrInput
	// The type of the Kubeconfig, the value of type should be Public or Private.
	Type pulumi.StringPtrInput
	// The ValidDuration of the Kubeconfig, the range of the ValidDuration is 1 hour to 43800 hour.
	ValidDuration pulumi.IntPtrInput
}

func (KubeconfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubeconfigState)(nil)).Elem()
}

type kubeconfigArgs struct {
	// The cluster id of the Kubeconfig.
	ClusterId string `pulumi:"clusterId"`
	// The type of the Kubeconfig, the value of type should be Public or Private.
	Type string `pulumi:"type"`
	// The ValidDuration of the Kubeconfig, the range of the ValidDuration is 1 hour to 43800 hour.
	ValidDuration *int `pulumi:"validDuration"`
}

// The set of arguments for constructing a Kubeconfig resource.
type KubeconfigArgs struct {
	// The cluster id of the Kubeconfig.
	ClusterId pulumi.StringInput
	// The type of the Kubeconfig, the value of type should be Public or Private.
	Type pulumi.StringInput
	// The ValidDuration of the Kubeconfig, the range of the ValidDuration is 1 hour to 43800 hour.
	ValidDuration pulumi.IntPtrInput
}

func (KubeconfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubeconfigArgs)(nil)).Elem()
}

type KubeconfigInput interface {
	pulumi.Input

	ToKubeconfigOutput() KubeconfigOutput
	ToKubeconfigOutputWithContext(ctx context.Context) KubeconfigOutput
}

func (*Kubeconfig) ElementType() reflect.Type {
	return reflect.TypeOf((**Kubeconfig)(nil)).Elem()
}

func (i *Kubeconfig) ToKubeconfigOutput() KubeconfigOutput {
	return i.ToKubeconfigOutputWithContext(context.Background())
}

func (i *Kubeconfig) ToKubeconfigOutputWithContext(ctx context.Context) KubeconfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigOutput)
}

// KubeconfigArrayInput is an input type that accepts KubeconfigArray and KubeconfigArrayOutput values.
// You can construct a concrete instance of `KubeconfigArrayInput` via:
//
//	KubeconfigArray{ KubeconfigArgs{...} }
type KubeconfigArrayInput interface {
	pulumi.Input

	ToKubeconfigArrayOutput() KubeconfigArrayOutput
	ToKubeconfigArrayOutputWithContext(context.Context) KubeconfigArrayOutput
}

type KubeconfigArray []KubeconfigInput

func (KubeconfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Kubeconfig)(nil)).Elem()
}

func (i KubeconfigArray) ToKubeconfigArrayOutput() KubeconfigArrayOutput {
	return i.ToKubeconfigArrayOutputWithContext(context.Background())
}

func (i KubeconfigArray) ToKubeconfigArrayOutputWithContext(ctx context.Context) KubeconfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigArrayOutput)
}

// KubeconfigMapInput is an input type that accepts KubeconfigMap and KubeconfigMapOutput values.
// You can construct a concrete instance of `KubeconfigMapInput` via:
//
//	KubeconfigMap{ "key": KubeconfigArgs{...} }
type KubeconfigMapInput interface {
	pulumi.Input

	ToKubeconfigMapOutput() KubeconfigMapOutput
	ToKubeconfigMapOutputWithContext(context.Context) KubeconfigMapOutput
}

type KubeconfigMap map[string]KubeconfigInput

func (KubeconfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Kubeconfig)(nil)).Elem()
}

func (i KubeconfigMap) ToKubeconfigMapOutput() KubeconfigMapOutput {
	return i.ToKubeconfigMapOutputWithContext(context.Background())
}

func (i KubeconfigMap) ToKubeconfigMapOutputWithContext(ctx context.Context) KubeconfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeconfigMapOutput)
}

type KubeconfigOutput struct{ *pulumi.OutputState }

func (KubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Kubeconfig)(nil)).Elem()
}

func (o KubeconfigOutput) ToKubeconfigOutput() KubeconfigOutput {
	return o
}

func (o KubeconfigOutput) ToKubeconfigOutputWithContext(ctx context.Context) KubeconfigOutput {
	return o
}

// The cluster id of the Kubeconfig.
func (o KubeconfigOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *Kubeconfig) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The type of the Kubeconfig, the value of type should be Public or Private.
func (o KubeconfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Kubeconfig) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The ValidDuration of the Kubeconfig, the range of the ValidDuration is 1 hour to 43800 hour.
func (o KubeconfigOutput) ValidDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Kubeconfig) pulumi.IntPtrOutput { return v.ValidDuration }).(pulumi.IntPtrOutput)
}

type KubeconfigArrayOutput struct{ *pulumi.OutputState }

func (KubeconfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Kubeconfig)(nil)).Elem()
}

func (o KubeconfigArrayOutput) ToKubeconfigArrayOutput() KubeconfigArrayOutput {
	return o
}

func (o KubeconfigArrayOutput) ToKubeconfigArrayOutputWithContext(ctx context.Context) KubeconfigArrayOutput {
	return o
}

func (o KubeconfigArrayOutput) Index(i pulumi.IntInput) KubeconfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Kubeconfig {
		return vs[0].([]*Kubeconfig)[vs[1].(int)]
	}).(KubeconfigOutput)
}

type KubeconfigMapOutput struct{ *pulumi.OutputState }

func (KubeconfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Kubeconfig)(nil)).Elem()
}

func (o KubeconfigMapOutput) ToKubeconfigMapOutput() KubeconfigMapOutput {
	return o
}

func (o KubeconfigMapOutput) ToKubeconfigMapOutputWithContext(ctx context.Context) KubeconfigMapOutput {
	return o
}

func (o KubeconfigMapOutput) MapIndex(k pulumi.StringInput) KubeconfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Kubeconfig {
		return vs[0].(map[string]*Kubeconfig)[vs[1].(string)]
	}).(KubeconfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigInput)(nil)).Elem(), &Kubeconfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigArrayInput)(nil)).Elem(), KubeconfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeconfigMapInput)(nil)).Elem(), KubeconfigMap{})
	pulumi.RegisterOutputType(KubeconfigOutput{})
	pulumi.RegisterOutputType(KubeconfigArrayOutput{})
	pulumi.RegisterOutputType(KubeconfigMapOutput{})
}
