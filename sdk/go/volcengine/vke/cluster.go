// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vke

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage vke cluster
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vke"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vke.NewCluster(ctx, "foo", &vke.ClusterArgs{
//				ClusterConfig: &vke.ClusterClusterConfigArgs{
//					ApiServerPublicAccessConfig: &vke.ClusterClusterConfigApiServerPublicAccessConfigArgs{
//						PublicAccessNetworkConfig: &vke.ClusterClusterConfigApiServerPublicAccessConfigPublicAccessNetworkConfigArgs{
//							Bandwidth:   pulumi.Int(1),
//							BillingType: pulumi.String("PostPaidByBandwidth"),
//						},
//					},
//					ApiServerPublicAccessEnabled:       pulumi.Bool(true),
//					ResourcePublicAccessDefaultEnabled: pulumi.Bool(true),
//					SubnetIds: pulumi.StringArray{
//						pulumi.String("subnet-rrqvkt2nq1hcv0x57ccqf3x"),
//					},
//				},
//				DeleteProtectionEnabled: pulumi.Bool(false),
//				Description:             pulumi.String("created by terraform"),
//				LoggingConfig: &vke.ClusterLoggingConfigArgs{
//					LogSetups: vke.ClusterLoggingConfigLogSetupArray{
//						&vke.ClusterLoggingConfigLogSetupArgs{
//							Enabled: pulumi.Bool(false),
//							LogTtl:  pulumi.Int(30),
//							LogType: pulumi.String("Audit"),
//						},
//					},
//				},
//				PodsConfig: &vke.ClusterPodsConfigArgs{
//					PodNetworkMode: pulumi.String("VpcCniShared"),
//					VpcCniConfig: &vke.ClusterPodsConfigVpcCniConfigArgs{
//						SubnetIds: pulumi.StringArray{
//							pulumi.String("subnet-rrqvkt2nq1hcv0x57ccqf3x"),
//							pulumi.String("subnet-miklcqh75vcw5smt1amo4ik5"),
//							pulumi.String("subnet-13g0x0ytpm0hs3n6nu5j591lv"),
//						},
//					},
//				},
//				ServicesConfig: &vke.ClusterServicesConfigArgs{
//					ServiceCidrsv4s: pulumi.StringArray{
//						pulumi.String("172.30.0.0/18"),
//					},
//				},
//				Tags: vke.ClusterTagArray{
//					&vke.ClusterTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VkeCluster can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:vke/cluster:Cluster default cc9l74mvqtofjnoj5****
//
// ```
type Cluster struct {
	pulumi.CustomResourceState

	// ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
	ClientToken pulumi.StringPtrOutput `pulumi:"clientToken"`
	// The config of the cluster.
	ClusterConfig ClusterClusterConfigOutput `pulumi:"clusterConfig"`
	// The delete protection of the cluster, the value is `true` or `false`.
	DeleteProtectionEnabled pulumi.BoolPtrOutput `pulumi:"deleteProtectionEnabled"`
	// The description of the cluster.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Eip allocation Id.
	EipAllocationId pulumi.StringOutput `pulumi:"eipAllocationId"`
	// Kubeconfig data with private network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
	KubeconfigPrivate pulumi.StringOutput `pulumi:"kubeconfigPrivate"`
	// Kubeconfig data with public network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
	KubeconfigPublic pulumi.StringOutput `pulumi:"kubeconfigPublic"`
	// The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
	KubernetesVersion pulumi.StringOutput `pulumi:"kubernetesVersion"`
	// Cluster log configuration information.
	LoggingConfig ClusterLoggingConfigPtrOutput `pulumi:"loggingConfig"`
	// The name of the cluster.
	Name pulumi.StringOutput `pulumi:"name"`
	// The config of the pods.
	PodsConfig ClusterPodsConfigOutput `pulumi:"podsConfig"`
	// The config of the services.
	ServicesConfig ClusterServicesConfigOutput `pulumi:"servicesConfig"`
	// Tags.
	Tags ClusterTagArrayOutput `pulumi:"tags"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterConfig == nil {
		return nil, errors.New("invalid value for required argument 'ClusterConfig'")
	}
	if args.PodsConfig == nil {
		return nil, errors.New("invalid value for required argument 'PodsConfig'")
	}
	if args.ServicesConfig == nil {
		return nil, errors.New("invalid value for required argument 'ServicesConfig'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Cluster
	err := ctx.RegisterResource("volcengine:vke/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("volcengine:vke/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
	ClientToken *string `pulumi:"clientToken"`
	// The config of the cluster.
	ClusterConfig *ClusterClusterConfig `pulumi:"clusterConfig"`
	// The delete protection of the cluster, the value is `true` or `false`.
	DeleteProtectionEnabled *bool `pulumi:"deleteProtectionEnabled"`
	// The description of the cluster.
	Description *string `pulumi:"description"`
	// Eip allocation Id.
	EipAllocationId *string `pulumi:"eipAllocationId"`
	// Kubeconfig data with private network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
	KubeconfigPrivate *string `pulumi:"kubeconfigPrivate"`
	// Kubeconfig data with public network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
	KubeconfigPublic *string `pulumi:"kubeconfigPublic"`
	// The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Cluster log configuration information.
	LoggingConfig *ClusterLoggingConfig `pulumi:"loggingConfig"`
	// The name of the cluster.
	Name *string `pulumi:"name"`
	// The config of the pods.
	PodsConfig *ClusterPodsConfig `pulumi:"podsConfig"`
	// The config of the services.
	ServicesConfig *ClusterServicesConfig `pulumi:"servicesConfig"`
	// Tags.
	Tags []ClusterTag `pulumi:"tags"`
}

type ClusterState struct {
	// ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
	ClientToken pulumi.StringPtrInput
	// The config of the cluster.
	ClusterConfig ClusterClusterConfigPtrInput
	// The delete protection of the cluster, the value is `true` or `false`.
	DeleteProtectionEnabled pulumi.BoolPtrInput
	// The description of the cluster.
	Description pulumi.StringPtrInput
	// Eip allocation Id.
	EipAllocationId pulumi.StringPtrInput
	// Kubeconfig data with private network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
	KubeconfigPrivate pulumi.StringPtrInput
	// Kubeconfig data with public network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
	KubeconfigPublic pulumi.StringPtrInput
	// The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
	KubernetesVersion pulumi.StringPtrInput
	// Cluster log configuration information.
	LoggingConfig ClusterLoggingConfigPtrInput
	// The name of the cluster.
	Name pulumi.StringPtrInput
	// The config of the pods.
	PodsConfig ClusterPodsConfigPtrInput
	// The config of the services.
	ServicesConfig ClusterServicesConfigPtrInput
	// Tags.
	Tags ClusterTagArrayInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
	ClientToken *string `pulumi:"clientToken"`
	// The config of the cluster.
	ClusterConfig ClusterClusterConfig `pulumi:"clusterConfig"`
	// The delete protection of the cluster, the value is `true` or `false`.
	DeleteProtectionEnabled *bool `pulumi:"deleteProtectionEnabled"`
	// The description of the cluster.
	Description *string `pulumi:"description"`
	// The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Cluster log configuration information.
	LoggingConfig *ClusterLoggingConfig `pulumi:"loggingConfig"`
	// The name of the cluster.
	Name *string `pulumi:"name"`
	// The config of the pods.
	PodsConfig ClusterPodsConfig `pulumi:"podsConfig"`
	// The config of the services.
	ServicesConfig ClusterServicesConfig `pulumi:"servicesConfig"`
	// Tags.
	Tags []ClusterTag `pulumi:"tags"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
	ClientToken pulumi.StringPtrInput
	// The config of the cluster.
	ClusterConfig ClusterClusterConfigInput
	// The delete protection of the cluster, the value is `true` or `false`.
	DeleteProtectionEnabled pulumi.BoolPtrInput
	// The description of the cluster.
	Description pulumi.StringPtrInput
	// The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
	KubernetesVersion pulumi.StringPtrInput
	// Cluster log configuration information.
	LoggingConfig ClusterLoggingConfigPtrInput
	// The name of the cluster.
	Name pulumi.StringPtrInput
	// The config of the pods.
	PodsConfig ClusterPodsConfigInput
	// The config of the services.
	ServicesConfig ClusterServicesConfigInput
	// Tags.
	Tags ClusterTagArrayInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
func (o ClusterOutput) ClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.ClientToken }).(pulumi.StringPtrOutput)
}

// The config of the cluster.
func (o ClusterOutput) ClusterConfig() ClusterClusterConfigOutput {
	return o.ApplyT(func(v *Cluster) ClusterClusterConfigOutput { return v.ClusterConfig }).(ClusterClusterConfigOutput)
}

// The delete protection of the cluster, the value is `true` or `false`.
func (o ClusterOutput) DeleteProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.DeleteProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// The description of the cluster.
func (o ClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Eip allocation Id.
func (o ClusterOutput) EipAllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EipAllocationId }).(pulumi.StringOutput)
}

// Kubeconfig data with private network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
func (o ClusterOutput) KubeconfigPrivate() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.KubeconfigPrivate }).(pulumi.StringOutput)
}

// Kubeconfig data with public network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
func (o ClusterOutput) KubeconfigPublic() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.KubeconfigPublic }).(pulumi.StringOutput)
}

// The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
func (o ClusterOutput) KubernetesVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.KubernetesVersion }).(pulumi.StringOutput)
}

// Cluster log configuration information.
func (o ClusterOutput) LoggingConfig() ClusterLoggingConfigPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterLoggingConfigPtrOutput { return v.LoggingConfig }).(ClusterLoggingConfigPtrOutput)
}

// The name of the cluster.
func (o ClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The config of the pods.
func (o ClusterOutput) PodsConfig() ClusterPodsConfigOutput {
	return o.ApplyT(func(v *Cluster) ClusterPodsConfigOutput { return v.PodsConfig }).(ClusterPodsConfigOutput)
}

// The config of the services.
func (o ClusterOutput) ServicesConfig() ClusterServicesConfigOutput {
	return o.ApplyT(func(v *Cluster) ClusterServicesConfigOutput { return v.ServicesConfig }).(ClusterServicesConfigOutput)
}

// Tags.
func (o ClusterOutput) Tags() ClusterTagArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterTagArrayOutput { return v.Tags }).(ClusterTagArrayOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
