// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vke

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of vke clusters
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vke"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-project1"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-subnet-test-2"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String("cn-beijing-a"),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
//				VpcId:             fooVpc.ID(),
//				SecurityGroupName: pulumi.String("acc-test-security-group2"),
//			})
//			if err != nil {
//				return err
//			}
//			fooCluster, err := vke.NewCluster(ctx, "fooCluster", &vke.ClusterArgs{
//				Description:             pulumi.String("created by terraform"),
//				DeleteProtectionEnabled: pulumi.Bool(false),
//				ClusterConfig: &vke.ClusterClusterConfigArgs{
//					SubnetIds: pulumi.StringArray{
//						fooSubnet.ID(),
//					},
//					ApiServerPublicAccessEnabled: pulumi.Bool(true),
//					ApiServerPublicAccessConfig: &vke.ClusterClusterConfigApiServerPublicAccessConfigArgs{
//						PublicAccessNetworkConfig: &vke.ClusterClusterConfigApiServerPublicAccessConfigPublicAccessNetworkConfigArgs{
//							BillingType: pulumi.String("PostPaidByBandwidth"),
//							Bandwidth:   pulumi.Int(1),
//						},
//					},
//					ResourcePublicAccessDefaultEnabled: pulumi.Bool(true),
//				},
//				PodsConfig: &vke.ClusterPodsConfigArgs{
//					PodNetworkMode: pulumi.String("VpcCniShared"),
//					VpcCniConfig: &vke.ClusterPodsConfigVpcCniConfigArgs{
//						SubnetIds: pulumi.StringArray{
//							fooSubnet.ID(),
//						},
//					},
//				},
//				ServicesConfig: &vke.ClusterServicesConfigArgs{
//					ServiceCidrsv4s: pulumi.StringArray{
//						pulumi.String("172.30.0.0/18"),
//					},
//				},
//				Tags: vke.ClusterTagArray{
//					&vke.ClusterTagArgs{
//						Key:   pulumi.String("tf-k1"),
//						Value: pulumi.String("tf-v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = vke.GetClustersOutput(ctx, vke.GetClustersOutputArgs{
//				Ids: pulumi.StringArray{
//					fooCluster.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetClusters(ctx *pulumi.Context, args *GetClustersArgs, opts ...pulumi.InvokeOption) (*GetClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClustersResult
	err := ctx.Invoke("volcengine:vke/getClusters:getClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusters.
type GetClustersArgs struct {
	// ClientToken when the cluster is created successfully. ClientToken is a string that guarantees the idempotency of the request. This string is passed in by the caller.
	CreateClientToken *string `pulumi:"createClientToken"`
	// The delete protection of the cluster, the value is `true` or `false`.
	DeleteProtectionEnabled *bool `pulumi:"deleteProtectionEnabled"`
	// A list of Cluster IDs.
	Ids []string `pulumi:"ids"`
	// The name of the cluster.
	Name *string `pulumi:"name"`
	// A Name Regex of Cluster.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The page number of clusters query.
	PageNumber *int `pulumi:"pageNumber"`
	// The page size of clusters query.
	PageSize *int `pulumi:"pageSize"`
	// The container network model of the cluster, the value is `Flannel` or `VpcCniShared`. Flannel: Flannel network model, an independent Underlay container network solution, combined with the global routing capability of VPC, to achieve a high-performance network experience for the cluster. VpcCniShared: VPC-CNI network model, an Underlay container network solution based on the ENI of the private network elastic network card, with high network communication performance.
	PodsConfigPodNetworkMode *string `pulumi:"podsConfigPodNetworkMode"`
	// The project name of the cluster.
	ProjectName *string `pulumi:"projectName"`
	// Array of cluster states to filter. (The elements of the array are logically ORed. A maximum of 15 state array elements can be filled at a time).
	Statuses []GetClustersStatus `pulumi:"statuses"`
	// Tags.
	Tags []GetClustersTag `pulumi:"tags"`
	// The ClientToken when the last cluster update succeeded. ClientToken is a string that guarantees the idempotency of the request. This string is passed in by the caller.
	UpdateClientToken *string `pulumi:"updateClientToken"`
}

// A collection of values returned by getClusters.
type GetClustersResult struct {
	// The collection of VkeCluster query.
	Clusters          []GetClustersCluster `pulumi:"clusters"`
	CreateClientToken *string              `pulumi:"createClientToken"`
	// The delete protection of the cluster, the value is `true` or `false`.
	DeleteProtectionEnabled *bool `pulumi:"deleteProtectionEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The name of the cluster.
	Name                     *string `pulumi:"name"`
	NameRegex                *string `pulumi:"nameRegex"`
	OutputFile               *string `pulumi:"outputFile"`
	PageNumber               int     `pulumi:"pageNumber"`
	PageSize                 int     `pulumi:"pageSize"`
	PodsConfigPodNetworkMode *string `pulumi:"podsConfigPodNetworkMode"`
	// The project name of the cluster.
	ProjectName *string             `pulumi:"projectName"`
	Statuses    []GetClustersStatus `pulumi:"statuses"`
	// Tags of the Cluster.
	Tags []GetClustersTag `pulumi:"tags"`
	// The total count of Cluster query.
	TotalCount        int     `pulumi:"totalCount"`
	UpdateClientToken *string `pulumi:"updateClientToken"`
}

func GetClustersOutput(ctx *pulumi.Context, args GetClustersOutputArgs, opts ...pulumi.InvokeOption) GetClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClustersResult, error) {
			args := v.(GetClustersArgs)
			r, err := GetClusters(ctx, &args, opts...)
			var s GetClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClustersResultOutput)
}

// A collection of arguments for invoking getClusters.
type GetClustersOutputArgs struct {
	// ClientToken when the cluster is created successfully. ClientToken is a string that guarantees the idempotency of the request. This string is passed in by the caller.
	CreateClientToken pulumi.StringPtrInput `pulumi:"createClientToken"`
	// The delete protection of the cluster, the value is `true` or `false`.
	DeleteProtectionEnabled pulumi.BoolPtrInput `pulumi:"deleteProtectionEnabled"`
	// A list of Cluster IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The name of the cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A Name Regex of Cluster.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The page number of clusters query.
	PageNumber pulumi.IntPtrInput `pulumi:"pageNumber"`
	// The page size of clusters query.
	PageSize pulumi.IntPtrInput `pulumi:"pageSize"`
	// The container network model of the cluster, the value is `Flannel` or `VpcCniShared`. Flannel: Flannel network model, an independent Underlay container network solution, combined with the global routing capability of VPC, to achieve a high-performance network experience for the cluster. VpcCniShared: VPC-CNI network model, an Underlay container network solution based on the ENI of the private network elastic network card, with high network communication performance.
	PodsConfigPodNetworkMode pulumi.StringPtrInput `pulumi:"podsConfigPodNetworkMode"`
	// The project name of the cluster.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Array of cluster states to filter. (The elements of the array are logically ORed. A maximum of 15 state array elements can be filled at a time).
	Statuses GetClustersStatusArrayInput `pulumi:"statuses"`
	// Tags.
	Tags GetClustersTagArrayInput `pulumi:"tags"`
	// The ClientToken when the last cluster update succeeded. ClientToken is a string that guarantees the idempotency of the request. This string is passed in by the caller.
	UpdateClientToken pulumi.StringPtrInput `pulumi:"updateClientToken"`
}

func (GetClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersArgs)(nil)).Elem()
}

// A collection of values returned by getClusters.
type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

// The collection of VkeCluster query.
func (o GetClustersResultOutput) Clusters() GetClustersClusterArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersCluster { return v.Clusters }).(GetClustersClusterArrayOutput)
}

func (o GetClustersResultOutput) CreateClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.CreateClientToken }).(pulumi.StringPtrOutput)
}

// The delete protection of the cluster, the value is `true` or `false`.
func (o GetClustersResultOutput) DeleteProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *bool { return v.DeleteProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The name of the cluster.
func (o GetClustersResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) PageNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.PageNumber }).(pulumi.IntOutput)
}

func (o GetClustersResultOutput) PageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.PageSize }).(pulumi.IntOutput)
}

func (o GetClustersResultOutput) PodsConfigPodNetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.PodsConfigPodNetworkMode }).(pulumi.StringPtrOutput)
}

// The project name of the cluster.
func (o GetClustersResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) Statuses() GetClustersStatusArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersStatus { return v.Statuses }).(GetClustersStatusArrayOutput)
}

// Tags of the Cluster.
func (o GetClustersResultOutput) Tags() GetClustersTagArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersTag { return v.Tags }).(GetClustersTagArrayOutput)
}

// The total count of Cluster query.
func (o GetClustersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o GetClustersResultOutput) UpdateClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.UpdateClientToken }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClustersResultOutput{})
}
