// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vke

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of vke support resource types
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vke"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vke.GetSupportResourceTypes(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.vke.SupportResourceTypes has been deprecated in favor of volcengine.vke.getSupportResourceTypes
func SupportResourceTypes(ctx *pulumi.Context, args *SupportResourceTypesArgs, opts ...pulumi.InvokeOption) (*SupportResourceTypesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv SupportResourceTypesResult
	err := ctx.Invoke("volcengine:vke/supportResourceTypes:SupportResourceTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking SupportResourceTypes.
type SupportResourceTypesArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// A list of resource types. Support Ecs or Zone.
	ResourceTypes []string `pulumi:"resourceTypes"`
	// A list of zone ids. If no parameter value, all available regions is returned.
	ZoneIds []string `pulumi:"zoneIds"`
}

// A collection of values returned by SupportResourceTypes.
type SupportResourceTypesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id            string   `pulumi:"id"`
	OutputFile    *string  `pulumi:"outputFile"`
	ResourceTypes []string `pulumi:"resourceTypes"`
	// The collection of query.
	Resources []SupportResourceTypesResource `pulumi:"resources"`
	// The total count of query.
	TotalCount int      `pulumi:"totalCount"`
	ZoneIds    []string `pulumi:"zoneIds"`
}

func SupportResourceTypesOutput(ctx *pulumi.Context, args SupportResourceTypesOutputArgs, opts ...pulumi.InvokeOption) SupportResourceTypesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (SupportResourceTypesResult, error) {
			args := v.(SupportResourceTypesArgs)
			r, err := SupportResourceTypes(ctx, &args, opts...)
			var s SupportResourceTypesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(SupportResourceTypesResultOutput)
}

// A collection of arguments for invoking SupportResourceTypes.
type SupportResourceTypesOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// A list of resource types. Support Ecs or Zone.
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
	// A list of zone ids. If no parameter value, all available regions is returned.
	ZoneIds pulumi.StringArrayInput `pulumi:"zoneIds"`
}

func (SupportResourceTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportResourceTypesArgs)(nil)).Elem()
}

// A collection of values returned by SupportResourceTypes.
type SupportResourceTypesResultOutput struct{ *pulumi.OutputState }

func (SupportResourceTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SupportResourceTypesResult)(nil)).Elem()
}

func (o SupportResourceTypesResultOutput) ToSupportResourceTypesResultOutput() SupportResourceTypesResultOutput {
	return o
}

func (o SupportResourceTypesResultOutput) ToSupportResourceTypesResultOutputWithContext(ctx context.Context) SupportResourceTypesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o SupportResourceTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SupportResourceTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o SupportResourceTypesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SupportResourceTypesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o SupportResourceTypesResultOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SupportResourceTypesResult) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o SupportResourceTypesResultOutput) Resources() SupportResourceTypesResourceArrayOutput {
	return o.ApplyT(func(v SupportResourceTypesResult) []SupportResourceTypesResource { return v.Resources }).(SupportResourceTypesResourceArrayOutput)
}

// The total count of query.
func (o SupportResourceTypesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v SupportResourceTypesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o SupportResourceTypesResultOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SupportResourceTypesResult) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(SupportResourceTypesResultOutput{})
}
