// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package direct_connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of direct connect virtual interfaces
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/direct_connect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := direct_connect.GetVirtualInterfaces(ctx, &direct_connect.GetVirtualInterfacesArgs{
//				VirtualInterfaceName: pulumi.StringRef("tf-test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVirtualInterfaces(ctx *pulumi.Context, args *GetVirtualInterfacesArgs, opts ...pulumi.InvokeOption) (*GetVirtualInterfacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVirtualInterfacesResult
	err := ctx.Invoke("volcengine:direct_connect/getVirtualInterfaces:getVirtualInterfaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualInterfaces.
type GetVirtualInterfacesArgs struct {
	// The direct connect connection ID that associated with this virtual interface.
	DirectConnectConnectionId *string `pulumi:"directConnectConnectionId"`
	// The direct connect gateway ID that associated with this virtual interface.
	DirectConnectGatewayId *string `pulumi:"directConnectGatewayId"`
	// A list of IDs.
	Ids []string `pulumi:"ids"`
	// The local IP that associated with this virtual interface.
	LocalIp *string `pulumi:"localIp"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The peer IP that associated with this virtual interface.
	PeerIp *string `pulumi:"peerIp"`
	// The route type of virtual interface.
	RouteType *string `pulumi:"routeType"`
	// The filter tag of direct connect virtual interface.
	TagFilters []GetVirtualInterfacesTagFilter `pulumi:"tagFilters"`
	// The name of virtual interface.
	VirtualInterfaceName *string `pulumi:"virtualInterfaceName"`
	// The VLAN ID of virtual interface.
	VlanId *int `pulumi:"vlanId"`
}

// A collection of values returned by getVirtualInterfaces.
type GetVirtualInterfacesResult struct {
	// The direct connect connection ID which associated with this virtual interface.
	DirectConnectConnectionId *string `pulumi:"directConnectConnectionId"`
	// The direct connect gateway ID which associated with this virtual interface.
	DirectConnectGatewayId *string `pulumi:"directConnectGatewayId"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The local IP that associated with this virtual interface.
	LocalIp    *string `pulumi:"localIp"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The peer IP that associated with this virtual interface.
	PeerIp *string `pulumi:"peerIp"`
	// The route type of this virtual interface.
	RouteType  *string                         `pulumi:"routeType"`
	TagFilters []GetVirtualInterfacesTagFilter `pulumi:"tagFilters"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The name of virtual interface.
	VirtualInterfaceName *string `pulumi:"virtualInterfaceName"`
	// The collection of query.
	VirtualInterfaces []GetVirtualInterfacesVirtualInterface `pulumi:"virtualInterfaces"`
	// The VLAN ID of virtual interface.
	VlanId *int `pulumi:"vlanId"`
}

func GetVirtualInterfacesOutput(ctx *pulumi.Context, args GetVirtualInterfacesOutputArgs, opts ...pulumi.InvokeOption) GetVirtualInterfacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVirtualInterfacesResult, error) {
			args := v.(GetVirtualInterfacesArgs)
			r, err := GetVirtualInterfaces(ctx, &args, opts...)
			var s GetVirtualInterfacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVirtualInterfacesResultOutput)
}

// A collection of arguments for invoking getVirtualInterfaces.
type GetVirtualInterfacesOutputArgs struct {
	// The direct connect connection ID that associated with this virtual interface.
	DirectConnectConnectionId pulumi.StringPtrInput `pulumi:"directConnectConnectionId"`
	// The direct connect gateway ID that associated with this virtual interface.
	DirectConnectGatewayId pulumi.StringPtrInput `pulumi:"directConnectGatewayId"`
	// A list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The local IP that associated with this virtual interface.
	LocalIp pulumi.StringPtrInput `pulumi:"localIp"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The peer IP that associated with this virtual interface.
	PeerIp pulumi.StringPtrInput `pulumi:"peerIp"`
	// The route type of virtual interface.
	RouteType pulumi.StringPtrInput `pulumi:"routeType"`
	// The filter tag of direct connect virtual interface.
	TagFilters GetVirtualInterfacesTagFilterArrayInput `pulumi:"tagFilters"`
	// The name of virtual interface.
	VirtualInterfaceName pulumi.StringPtrInput `pulumi:"virtualInterfaceName"`
	// The VLAN ID of virtual interface.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (GetVirtualInterfacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualInterfacesArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualInterfaces.
type GetVirtualInterfacesResultOutput struct{ *pulumi.OutputState }

func (GetVirtualInterfacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVirtualInterfacesResult)(nil)).Elem()
}

func (o GetVirtualInterfacesResultOutput) ToGetVirtualInterfacesResultOutput() GetVirtualInterfacesResultOutput {
	return o
}

func (o GetVirtualInterfacesResultOutput) ToGetVirtualInterfacesResultOutputWithContext(ctx context.Context) GetVirtualInterfacesResultOutput {
	return o
}

// The direct connect connection ID which associated with this virtual interface.
func (o GetVirtualInterfacesResultOutput) DirectConnectConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *string { return v.DirectConnectConnectionId }).(pulumi.StringPtrOutput)
}

// The direct connect gateway ID which associated with this virtual interface.
func (o GetVirtualInterfacesResultOutput) DirectConnectGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *string { return v.DirectConnectGatewayId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVirtualInterfacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVirtualInterfacesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The local IP that associated with this virtual interface.
func (o GetVirtualInterfacesResultOutput) LocalIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *string { return v.LocalIp }).(pulumi.StringPtrOutput)
}

func (o GetVirtualInterfacesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetVirtualInterfacesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The peer IP that associated with this virtual interface.
func (o GetVirtualInterfacesResultOutput) PeerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *string { return v.PeerIp }).(pulumi.StringPtrOutput)
}

// The route type of this virtual interface.
func (o GetVirtualInterfacesResultOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

func (o GetVirtualInterfacesResultOutput) TagFilters() GetVirtualInterfacesTagFilterArrayOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) []GetVirtualInterfacesTagFilter { return v.TagFilters }).(GetVirtualInterfacesTagFilterArrayOutput)
}

// The total count of query.
func (o GetVirtualInterfacesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The name of virtual interface.
func (o GetVirtualInterfacesResultOutput) VirtualInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *string { return v.VirtualInterfaceName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetVirtualInterfacesResultOutput) VirtualInterfaces() GetVirtualInterfacesVirtualInterfaceArrayOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) []GetVirtualInterfacesVirtualInterface { return v.VirtualInterfaces }).(GetVirtualInterfacesVirtualInterfaceArrayOutput)
}

// The VLAN ID of virtual interface.
func (o GetVirtualInterfacesResultOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetVirtualInterfacesResult) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVirtualInterfacesResultOutput{})
}
