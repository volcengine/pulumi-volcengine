// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package direct_connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type BgpPeersBgpPeer struct {
	// The id of account.
	AccountId string `pulumi:"accountId"`
	// The key of auth.
	AuthKey string `pulumi:"authKey"`
	// The id of bgp peer.
	BgpPeerId string `pulumi:"bgpPeerId"`
	// The name of bgp peer.
	BgpPeerName string `pulumi:"bgpPeerName"`
	// The create time of bgp peer.
	CreationTime string `pulumi:"creationTime"`
	// The Description of bgp peer.
	Description string `pulumi:"description"`
	// The local asn of bgp peer.
	LocalAsn int `pulumi:"localAsn"`
	// The remote asn of bgp peer.
	RemoteAsn int `pulumi:"remoteAsn"`
	// The session status of bgp peer.
	SessionStatus string `pulumi:"sessionStatus"`
	// The status of bgp peer.
	Status string `pulumi:"status"`
	// The update time of bgp peer.
	UpdateTime string `pulumi:"updateTime"`
	// The id of virtual interface.
	VirtualInterfaceId string `pulumi:"virtualInterfaceId"`
}

// BgpPeersBgpPeerInput is an input type that accepts BgpPeersBgpPeerArgs and BgpPeersBgpPeerOutput values.
// You can construct a concrete instance of `BgpPeersBgpPeerInput` via:
//
//	BgpPeersBgpPeerArgs{...}
type BgpPeersBgpPeerInput interface {
	pulumi.Input

	ToBgpPeersBgpPeerOutput() BgpPeersBgpPeerOutput
	ToBgpPeersBgpPeerOutputWithContext(context.Context) BgpPeersBgpPeerOutput
}

type BgpPeersBgpPeerArgs struct {
	// The id of account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The key of auth.
	AuthKey pulumi.StringInput `pulumi:"authKey"`
	// The id of bgp peer.
	BgpPeerId pulumi.StringInput `pulumi:"bgpPeerId"`
	// The name of bgp peer.
	BgpPeerName pulumi.StringInput `pulumi:"bgpPeerName"`
	// The create time of bgp peer.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The Description of bgp peer.
	Description pulumi.StringInput `pulumi:"description"`
	// The local asn of bgp peer.
	LocalAsn pulumi.IntInput `pulumi:"localAsn"`
	// The remote asn of bgp peer.
	RemoteAsn pulumi.IntInput `pulumi:"remoteAsn"`
	// The session status of bgp peer.
	SessionStatus pulumi.StringInput `pulumi:"sessionStatus"`
	// The status of bgp peer.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of bgp peer.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The id of virtual interface.
	VirtualInterfaceId pulumi.StringInput `pulumi:"virtualInterfaceId"`
}

func (BgpPeersBgpPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeersBgpPeer)(nil)).Elem()
}

func (i BgpPeersBgpPeerArgs) ToBgpPeersBgpPeerOutput() BgpPeersBgpPeerOutput {
	return i.ToBgpPeersBgpPeerOutputWithContext(context.Background())
}

func (i BgpPeersBgpPeerArgs) ToBgpPeersBgpPeerOutputWithContext(ctx context.Context) BgpPeersBgpPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeersBgpPeerOutput)
}

// BgpPeersBgpPeerArrayInput is an input type that accepts BgpPeersBgpPeerArray and BgpPeersBgpPeerArrayOutput values.
// You can construct a concrete instance of `BgpPeersBgpPeerArrayInput` via:
//
//	BgpPeersBgpPeerArray{ BgpPeersBgpPeerArgs{...} }
type BgpPeersBgpPeerArrayInput interface {
	pulumi.Input

	ToBgpPeersBgpPeerArrayOutput() BgpPeersBgpPeerArrayOutput
	ToBgpPeersBgpPeerArrayOutputWithContext(context.Context) BgpPeersBgpPeerArrayOutput
}

type BgpPeersBgpPeerArray []BgpPeersBgpPeerInput

func (BgpPeersBgpPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeersBgpPeer)(nil)).Elem()
}

func (i BgpPeersBgpPeerArray) ToBgpPeersBgpPeerArrayOutput() BgpPeersBgpPeerArrayOutput {
	return i.ToBgpPeersBgpPeerArrayOutputWithContext(context.Background())
}

func (i BgpPeersBgpPeerArray) ToBgpPeersBgpPeerArrayOutputWithContext(ctx context.Context) BgpPeersBgpPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeersBgpPeerArrayOutput)
}

type BgpPeersBgpPeerOutput struct{ *pulumi.OutputState }

func (BgpPeersBgpPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeersBgpPeer)(nil)).Elem()
}

func (o BgpPeersBgpPeerOutput) ToBgpPeersBgpPeerOutput() BgpPeersBgpPeerOutput {
	return o
}

func (o BgpPeersBgpPeerOutput) ToBgpPeersBgpPeerOutputWithContext(ctx context.Context) BgpPeersBgpPeerOutput {
	return o
}

// The id of account.
func (o BgpPeersBgpPeerOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.AccountId }).(pulumi.StringOutput)
}

// The key of auth.
func (o BgpPeersBgpPeerOutput) AuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.AuthKey }).(pulumi.StringOutput)
}

// The id of bgp peer.
func (o BgpPeersBgpPeerOutput) BgpPeerId() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.BgpPeerId }).(pulumi.StringOutput)
}

// The name of bgp peer.
func (o BgpPeersBgpPeerOutput) BgpPeerName() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.BgpPeerName }).(pulumi.StringOutput)
}

// The create time of bgp peer.
func (o BgpPeersBgpPeerOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The Description of bgp peer.
func (o BgpPeersBgpPeerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.Description }).(pulumi.StringOutput)
}

// The local asn of bgp peer.
func (o BgpPeersBgpPeerOutput) LocalAsn() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) int { return v.LocalAsn }).(pulumi.IntOutput)
}

// The remote asn of bgp peer.
func (o BgpPeersBgpPeerOutput) RemoteAsn() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) int { return v.RemoteAsn }).(pulumi.IntOutput)
}

// The session status of bgp peer.
func (o BgpPeersBgpPeerOutput) SessionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.SessionStatus }).(pulumi.StringOutput)
}

// The status of bgp peer.
func (o BgpPeersBgpPeerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of bgp peer.
func (o BgpPeersBgpPeerOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of virtual interface.
func (o BgpPeersBgpPeerOutput) VirtualInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeersBgpPeer) string { return v.VirtualInterfaceId }).(pulumi.StringOutput)
}

type BgpPeersBgpPeerArrayOutput struct{ *pulumi.OutputState }

func (BgpPeersBgpPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeersBgpPeer)(nil)).Elem()
}

func (o BgpPeersBgpPeerArrayOutput) ToBgpPeersBgpPeerArrayOutput() BgpPeersBgpPeerArrayOutput {
	return o
}

func (o BgpPeersBgpPeerArrayOutput) ToBgpPeersBgpPeerArrayOutputWithContext(ctx context.Context) BgpPeersBgpPeerArrayOutput {
	return o
}

func (o BgpPeersBgpPeerArrayOutput) Index(i pulumi.IntInput) BgpPeersBgpPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpPeersBgpPeer {
		return vs[0].([]BgpPeersBgpPeer)[vs[1].(int)]
	}).(BgpPeersBgpPeerOutput)
}

type ConnectionTag struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// ConnectionTagInput is an input type that accepts ConnectionTagArgs and ConnectionTagOutput values.
// You can construct a concrete instance of `ConnectionTagInput` via:
//
//	ConnectionTagArgs{...}
type ConnectionTagInput interface {
	pulumi.Input

	ToConnectionTagOutput() ConnectionTagOutput
	ToConnectionTagOutputWithContext(context.Context) ConnectionTagOutput
}

type ConnectionTagArgs struct {
	// The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConnectionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTag)(nil)).Elem()
}

func (i ConnectionTagArgs) ToConnectionTagOutput() ConnectionTagOutput {
	return i.ToConnectionTagOutputWithContext(context.Background())
}

func (i ConnectionTagArgs) ToConnectionTagOutputWithContext(ctx context.Context) ConnectionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTagOutput)
}

// ConnectionTagArrayInput is an input type that accepts ConnectionTagArray and ConnectionTagArrayOutput values.
// You can construct a concrete instance of `ConnectionTagArrayInput` via:
//
//	ConnectionTagArray{ ConnectionTagArgs{...} }
type ConnectionTagArrayInput interface {
	pulumi.Input

	ToConnectionTagArrayOutput() ConnectionTagArrayOutput
	ToConnectionTagArrayOutputWithContext(context.Context) ConnectionTagArrayOutput
}

type ConnectionTagArray []ConnectionTagInput

func (ConnectionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionTag)(nil)).Elem()
}

func (i ConnectionTagArray) ToConnectionTagArrayOutput() ConnectionTagArrayOutput {
	return i.ToConnectionTagArrayOutputWithContext(context.Background())
}

func (i ConnectionTagArray) ToConnectionTagArrayOutputWithContext(ctx context.Context) ConnectionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTagArrayOutput)
}

type ConnectionTagOutput struct{ *pulumi.OutputState }

func (ConnectionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTag)(nil)).Elem()
}

func (o ConnectionTagOutput) ToConnectionTagOutput() ConnectionTagOutput {
	return o
}

func (o ConnectionTagOutput) ToConnectionTagOutputWithContext(ctx context.Context) ConnectionTagOutput {
	return o
}

// The tag key.
func (o ConnectionTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag value.
func (o ConnectionTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectionTagArrayOutput struct{ *pulumi.OutputState }

func (ConnectionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionTag)(nil)).Elem()
}

func (o ConnectionTagArrayOutput) ToConnectionTagArrayOutput() ConnectionTagArrayOutput {
	return o
}

func (o ConnectionTagArrayOutput) ToConnectionTagArrayOutputWithContext(ctx context.Context) ConnectionTagArrayOutput {
	return o
}

func (o ConnectionTagArrayOutput) Index(i pulumi.IntInput) ConnectionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionTag {
		return vs[0].([]ConnectionTag)[vs[1].(int)]
	}).(ConnectionTagOutput)
}

type ConnectionsDirectConnectConnection struct {
	// The account ID which the physical leased line belongs.
	AccountId string `pulumi:"accountId"`
	// The bandwidth of direct connect.
	Bandwidth int `pulumi:"bandwidth"`
	// The dedicated line billing type,only support `1` for yearly and monthly billing currently.
	BillingType int `pulumi:"billingType"`
	// The dedicated line billing status.
	BusinessStatus string `pulumi:"businessStatus"`
	// The connection type of physical leased line,valid value contains `SharedConnection`,`DedicatedConnection`.
	ConnectionType string `pulumi:"connectionType"`
	// The creation time of direct connect.
	CreationTime string `pulumi:"creationTime"`
	// The dedicated line contact email.
	CustomerContactEmail string `pulumi:"customerContactEmail"`
	// The dedicated line contact phone.
	CustomerContactPhone string `pulumi:"customerContactPhone"`
	// The dedicated line contact name.
	CustomerName string `pulumi:"customerName"`
	// The expected resource force collection time.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of direct connect connection.
	Description string `pulumi:"description"`
	// The ID of the physical leased line access point.
	DirectConnectAccessPointId string `pulumi:"directConnectAccessPointId"`
	// The ID of direct connect connection.
	DirectConnectConnectionId string `pulumi:"directConnectConnectionId"`
	// The name of directi connect connection.
	DirectConnectConnectionName string `pulumi:"directConnectConnectionName"`
	// The expect bandwidth of direct connect.
	ExpectBandwidth int `pulumi:"expectBandwidth"`
	// The expired time.
	ExpiredTime string `pulumi:"expiredTime"`
	// The operator of the physical leased line,valid value contains `ChinaTelecom`,`ChinaMobile`,`ChinaUnicom`,`ChinaOther`.
	LineOperator string `pulumi:"lineOperator"`
	// The account ID of physical leased line to which the shared leased line belongs.If the physical leased line type is an exclusive leased line,this parameter returns empty.
	ParentConnectionAccountId string `pulumi:"parentConnectionAccountId"`
	// The ID of the physical leased line to which the shared leased line belongs. If the physical leased line type is an exclusive leased line, this parameter returns empty.
	ParentConnectionId string `pulumi:"parentConnectionId"`
	// The peer access point of the physical leased line.
	PeerLocation string `pulumi:"peerLocation"`
	// The dedicated line port spec.
	PortSpec string `pulumi:"portSpec"`
	// The port type of direct connect.
	PortType string `pulumi:"portType"`
	// The status of physical leased line.
	Status string `pulumi:"status"`
	// All tags that physical leased line added.
	Tags []ConnectionsDirectConnectConnectionTag `pulumi:"tags"`
	// The update time of direct connect.
	UpdateTime string `pulumi:"updateTime"`
	// The vlan ID of shared connection,if `connectionType` is `DedicatedConnection`,this parameter returns 0.
	VlanId int `pulumi:"vlanId"`
}

// ConnectionsDirectConnectConnectionInput is an input type that accepts ConnectionsDirectConnectConnectionArgs and ConnectionsDirectConnectConnectionOutput values.
// You can construct a concrete instance of `ConnectionsDirectConnectConnectionInput` via:
//
//	ConnectionsDirectConnectConnectionArgs{...}
type ConnectionsDirectConnectConnectionInput interface {
	pulumi.Input

	ToConnectionsDirectConnectConnectionOutput() ConnectionsDirectConnectConnectionOutput
	ToConnectionsDirectConnectConnectionOutputWithContext(context.Context) ConnectionsDirectConnectConnectionOutput
}

type ConnectionsDirectConnectConnectionArgs struct {
	// The account ID which the physical leased line belongs.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The bandwidth of direct connect.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The dedicated line billing type,only support `1` for yearly and monthly billing currently.
	BillingType pulumi.IntInput `pulumi:"billingType"`
	// The dedicated line billing status.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The connection type of physical leased line,valid value contains `SharedConnection`,`DedicatedConnection`.
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// The creation time of direct connect.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The dedicated line contact email.
	CustomerContactEmail pulumi.StringInput `pulumi:"customerContactEmail"`
	// The dedicated line contact phone.
	CustomerContactPhone pulumi.StringInput `pulumi:"customerContactPhone"`
	// The dedicated line contact name.
	CustomerName pulumi.StringInput `pulumi:"customerName"`
	// The expected resource force collection time.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of direct connect connection.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the physical leased line access point.
	DirectConnectAccessPointId pulumi.StringInput `pulumi:"directConnectAccessPointId"`
	// The ID of direct connect connection.
	DirectConnectConnectionId pulumi.StringInput `pulumi:"directConnectConnectionId"`
	// The name of directi connect connection.
	DirectConnectConnectionName pulumi.StringInput `pulumi:"directConnectConnectionName"`
	// The expect bandwidth of direct connect.
	ExpectBandwidth pulumi.IntInput `pulumi:"expectBandwidth"`
	// The expired time.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The operator of the physical leased line,valid value contains `ChinaTelecom`,`ChinaMobile`,`ChinaUnicom`,`ChinaOther`.
	LineOperator pulumi.StringInput `pulumi:"lineOperator"`
	// The account ID of physical leased line to which the shared leased line belongs.If the physical leased line type is an exclusive leased line,this parameter returns empty.
	ParentConnectionAccountId pulumi.StringInput `pulumi:"parentConnectionAccountId"`
	// The ID of the physical leased line to which the shared leased line belongs. If the physical leased line type is an exclusive leased line, this parameter returns empty.
	ParentConnectionId pulumi.StringInput `pulumi:"parentConnectionId"`
	// The peer access point of the physical leased line.
	PeerLocation pulumi.StringInput `pulumi:"peerLocation"`
	// The dedicated line port spec.
	PortSpec pulumi.StringInput `pulumi:"portSpec"`
	// The port type of direct connect.
	PortType pulumi.StringInput `pulumi:"portType"`
	// The status of physical leased line.
	Status pulumi.StringInput `pulumi:"status"`
	// All tags that physical leased line added.
	Tags ConnectionsDirectConnectConnectionTagArrayInput `pulumi:"tags"`
	// The update time of direct connect.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The vlan ID of shared connection,if `connectionType` is `DedicatedConnection`,this parameter returns 0.
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (ConnectionsDirectConnectConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionsDirectConnectConnection)(nil)).Elem()
}

func (i ConnectionsDirectConnectConnectionArgs) ToConnectionsDirectConnectConnectionOutput() ConnectionsDirectConnectConnectionOutput {
	return i.ToConnectionsDirectConnectConnectionOutputWithContext(context.Background())
}

func (i ConnectionsDirectConnectConnectionArgs) ToConnectionsDirectConnectConnectionOutputWithContext(ctx context.Context) ConnectionsDirectConnectConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionsDirectConnectConnectionOutput)
}

// ConnectionsDirectConnectConnectionArrayInput is an input type that accepts ConnectionsDirectConnectConnectionArray and ConnectionsDirectConnectConnectionArrayOutput values.
// You can construct a concrete instance of `ConnectionsDirectConnectConnectionArrayInput` via:
//
//	ConnectionsDirectConnectConnectionArray{ ConnectionsDirectConnectConnectionArgs{...} }
type ConnectionsDirectConnectConnectionArrayInput interface {
	pulumi.Input

	ToConnectionsDirectConnectConnectionArrayOutput() ConnectionsDirectConnectConnectionArrayOutput
	ToConnectionsDirectConnectConnectionArrayOutputWithContext(context.Context) ConnectionsDirectConnectConnectionArrayOutput
}

type ConnectionsDirectConnectConnectionArray []ConnectionsDirectConnectConnectionInput

func (ConnectionsDirectConnectConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionsDirectConnectConnection)(nil)).Elem()
}

func (i ConnectionsDirectConnectConnectionArray) ToConnectionsDirectConnectConnectionArrayOutput() ConnectionsDirectConnectConnectionArrayOutput {
	return i.ToConnectionsDirectConnectConnectionArrayOutputWithContext(context.Background())
}

func (i ConnectionsDirectConnectConnectionArray) ToConnectionsDirectConnectConnectionArrayOutputWithContext(ctx context.Context) ConnectionsDirectConnectConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionsDirectConnectConnectionArrayOutput)
}

type ConnectionsDirectConnectConnectionOutput struct{ *pulumi.OutputState }

func (ConnectionsDirectConnectConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionsDirectConnectConnection)(nil)).Elem()
}

func (o ConnectionsDirectConnectConnectionOutput) ToConnectionsDirectConnectConnectionOutput() ConnectionsDirectConnectConnectionOutput {
	return o
}

func (o ConnectionsDirectConnectConnectionOutput) ToConnectionsDirectConnectConnectionOutputWithContext(ctx context.Context) ConnectionsDirectConnectConnectionOutput {
	return o
}

// The account ID which the physical leased line belongs.
func (o ConnectionsDirectConnectConnectionOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.AccountId }).(pulumi.StringOutput)
}

// The bandwidth of direct connect.
func (o ConnectionsDirectConnectConnectionOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The dedicated line billing type,only support `1` for yearly and monthly billing currently.
func (o ConnectionsDirectConnectConnectionOutput) BillingType() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) int { return v.BillingType }).(pulumi.IntOutput)
}

// The dedicated line billing status.
func (o ConnectionsDirectConnectConnectionOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The connection type of physical leased line,valid value contains `SharedConnection`,`DedicatedConnection`.
func (o ConnectionsDirectConnectConnectionOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// The creation time of direct connect.
func (o ConnectionsDirectConnectConnectionOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The dedicated line contact email.
func (o ConnectionsDirectConnectConnectionOutput) CustomerContactEmail() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.CustomerContactEmail }).(pulumi.StringOutput)
}

// The dedicated line contact phone.
func (o ConnectionsDirectConnectConnectionOutput) CustomerContactPhone() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.CustomerContactPhone }).(pulumi.StringOutput)
}

// The dedicated line contact name.
func (o ConnectionsDirectConnectConnectionOutput) CustomerName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.CustomerName }).(pulumi.StringOutput)
}

// The expected resource force collection time.
func (o ConnectionsDirectConnectConnectionOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of direct connect connection.
func (o ConnectionsDirectConnectConnectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the physical leased line access point.
func (o ConnectionsDirectConnectConnectionOutput) DirectConnectAccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.DirectConnectAccessPointId }).(pulumi.StringOutput)
}

// The ID of direct connect connection.
func (o ConnectionsDirectConnectConnectionOutput) DirectConnectConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.DirectConnectConnectionId }).(pulumi.StringOutput)
}

// The name of directi connect connection.
func (o ConnectionsDirectConnectConnectionOutput) DirectConnectConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.DirectConnectConnectionName }).(pulumi.StringOutput)
}

// The expect bandwidth of direct connect.
func (o ConnectionsDirectConnectConnectionOutput) ExpectBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) int { return v.ExpectBandwidth }).(pulumi.IntOutput)
}

// The expired time.
func (o ConnectionsDirectConnectConnectionOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The operator of the physical leased line,valid value contains `ChinaTelecom`,`ChinaMobile`,`ChinaUnicom`,`ChinaOther`.
func (o ConnectionsDirectConnectConnectionOutput) LineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.LineOperator }).(pulumi.StringOutput)
}

// The account ID of physical leased line to which the shared leased line belongs.If the physical leased line type is an exclusive leased line,this parameter returns empty.
func (o ConnectionsDirectConnectConnectionOutput) ParentConnectionAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.ParentConnectionAccountId }).(pulumi.StringOutput)
}

// The ID of the physical leased line to which the shared leased line belongs. If the physical leased line type is an exclusive leased line, this parameter returns empty.
func (o ConnectionsDirectConnectConnectionOutput) ParentConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.ParentConnectionId }).(pulumi.StringOutput)
}

// The peer access point of the physical leased line.
func (o ConnectionsDirectConnectConnectionOutput) PeerLocation() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.PeerLocation }).(pulumi.StringOutput)
}

// The dedicated line port spec.
func (o ConnectionsDirectConnectConnectionOutput) PortSpec() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.PortSpec }).(pulumi.StringOutput)
}

// The port type of direct connect.
func (o ConnectionsDirectConnectConnectionOutput) PortType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.PortType }).(pulumi.StringOutput)
}

// The status of physical leased line.
func (o ConnectionsDirectConnectConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.Status }).(pulumi.StringOutput)
}

// All tags that physical leased line added.
func (o ConnectionsDirectConnectConnectionOutput) Tags() ConnectionsDirectConnectConnectionTagArrayOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) []ConnectionsDirectConnectConnectionTag { return v.Tags }).(ConnectionsDirectConnectConnectionTagArrayOutput)
}

// The update time of direct connect.
func (o ConnectionsDirectConnectConnectionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The vlan ID of shared connection,if `connectionType` is `DedicatedConnection`,this parameter returns 0.
func (o ConnectionsDirectConnectConnectionOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnection) int { return v.VlanId }).(pulumi.IntOutput)
}

type ConnectionsDirectConnectConnectionArrayOutput struct{ *pulumi.OutputState }

func (ConnectionsDirectConnectConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionsDirectConnectConnection)(nil)).Elem()
}

func (o ConnectionsDirectConnectConnectionArrayOutput) ToConnectionsDirectConnectConnectionArrayOutput() ConnectionsDirectConnectConnectionArrayOutput {
	return o
}

func (o ConnectionsDirectConnectConnectionArrayOutput) ToConnectionsDirectConnectConnectionArrayOutputWithContext(ctx context.Context) ConnectionsDirectConnectConnectionArrayOutput {
	return o
}

func (o ConnectionsDirectConnectConnectionArrayOutput) Index(i pulumi.IntInput) ConnectionsDirectConnectConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionsDirectConnectConnection {
		return vs[0].([]ConnectionsDirectConnectConnection)[vs[1].(int)]
	}).(ConnectionsDirectConnectConnectionOutput)
}

type ConnectionsDirectConnectConnectionTag struct {
	// The tag key of cloud resource instance.
	Key string `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value string `pulumi:"value"`
}

// ConnectionsDirectConnectConnectionTagInput is an input type that accepts ConnectionsDirectConnectConnectionTagArgs and ConnectionsDirectConnectConnectionTagOutput values.
// You can construct a concrete instance of `ConnectionsDirectConnectConnectionTagInput` via:
//
//	ConnectionsDirectConnectConnectionTagArgs{...}
type ConnectionsDirectConnectConnectionTagInput interface {
	pulumi.Input

	ToConnectionsDirectConnectConnectionTagOutput() ConnectionsDirectConnectConnectionTagOutput
	ToConnectionsDirectConnectConnectionTagOutputWithContext(context.Context) ConnectionsDirectConnectConnectionTagOutput
}

type ConnectionsDirectConnectConnectionTagArgs struct {
	// The tag key of cloud resource instance.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConnectionsDirectConnectConnectionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionsDirectConnectConnectionTag)(nil)).Elem()
}

func (i ConnectionsDirectConnectConnectionTagArgs) ToConnectionsDirectConnectConnectionTagOutput() ConnectionsDirectConnectConnectionTagOutput {
	return i.ToConnectionsDirectConnectConnectionTagOutputWithContext(context.Background())
}

func (i ConnectionsDirectConnectConnectionTagArgs) ToConnectionsDirectConnectConnectionTagOutputWithContext(ctx context.Context) ConnectionsDirectConnectConnectionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionsDirectConnectConnectionTagOutput)
}

// ConnectionsDirectConnectConnectionTagArrayInput is an input type that accepts ConnectionsDirectConnectConnectionTagArray and ConnectionsDirectConnectConnectionTagArrayOutput values.
// You can construct a concrete instance of `ConnectionsDirectConnectConnectionTagArrayInput` via:
//
//	ConnectionsDirectConnectConnectionTagArray{ ConnectionsDirectConnectConnectionTagArgs{...} }
type ConnectionsDirectConnectConnectionTagArrayInput interface {
	pulumi.Input

	ToConnectionsDirectConnectConnectionTagArrayOutput() ConnectionsDirectConnectConnectionTagArrayOutput
	ToConnectionsDirectConnectConnectionTagArrayOutputWithContext(context.Context) ConnectionsDirectConnectConnectionTagArrayOutput
}

type ConnectionsDirectConnectConnectionTagArray []ConnectionsDirectConnectConnectionTagInput

func (ConnectionsDirectConnectConnectionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionsDirectConnectConnectionTag)(nil)).Elem()
}

func (i ConnectionsDirectConnectConnectionTagArray) ToConnectionsDirectConnectConnectionTagArrayOutput() ConnectionsDirectConnectConnectionTagArrayOutput {
	return i.ToConnectionsDirectConnectConnectionTagArrayOutputWithContext(context.Background())
}

func (i ConnectionsDirectConnectConnectionTagArray) ToConnectionsDirectConnectConnectionTagArrayOutputWithContext(ctx context.Context) ConnectionsDirectConnectConnectionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionsDirectConnectConnectionTagArrayOutput)
}

type ConnectionsDirectConnectConnectionTagOutput struct{ *pulumi.OutputState }

func (ConnectionsDirectConnectConnectionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionsDirectConnectConnectionTag)(nil)).Elem()
}

func (o ConnectionsDirectConnectConnectionTagOutput) ToConnectionsDirectConnectConnectionTagOutput() ConnectionsDirectConnectConnectionTagOutput {
	return o
}

func (o ConnectionsDirectConnectConnectionTagOutput) ToConnectionsDirectConnectConnectionTagOutputWithContext(ctx context.Context) ConnectionsDirectConnectConnectionTagOutput {
	return o
}

// The tag key of cloud resource instance.
func (o ConnectionsDirectConnectConnectionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnectionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag value of cloud resource instance.
func (o ConnectionsDirectConnectConnectionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionsDirectConnectConnectionTag) string { return v.Value }).(pulumi.StringOutput)
}

type ConnectionsDirectConnectConnectionTagArrayOutput struct{ *pulumi.OutputState }

func (ConnectionsDirectConnectConnectionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionsDirectConnectConnectionTag)(nil)).Elem()
}

func (o ConnectionsDirectConnectConnectionTagArrayOutput) ToConnectionsDirectConnectConnectionTagArrayOutput() ConnectionsDirectConnectConnectionTagArrayOutput {
	return o
}

func (o ConnectionsDirectConnectConnectionTagArrayOutput) ToConnectionsDirectConnectConnectionTagArrayOutputWithContext(ctx context.Context) ConnectionsDirectConnectConnectionTagArrayOutput {
	return o
}

func (o ConnectionsDirectConnectConnectionTagArrayOutput) Index(i pulumi.IntInput) ConnectionsDirectConnectConnectionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionsDirectConnectConnectionTag {
		return vs[0].([]ConnectionsDirectConnectConnectionTag)[vs[1].(int)]
	}).(ConnectionsDirectConnectConnectionTagOutput)
}

type ConnectionsTagFilter struct {
	// The tag key of cloud resource instance.
	Key *string `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value *string `pulumi:"value"`
}

// ConnectionsTagFilterInput is an input type that accepts ConnectionsTagFilterArgs and ConnectionsTagFilterOutput values.
// You can construct a concrete instance of `ConnectionsTagFilterInput` via:
//
//	ConnectionsTagFilterArgs{...}
type ConnectionsTagFilterInput interface {
	pulumi.Input

	ToConnectionsTagFilterOutput() ConnectionsTagFilterOutput
	ToConnectionsTagFilterOutputWithContext(context.Context) ConnectionsTagFilterOutput
}

type ConnectionsTagFilterArgs struct {
	// The tag key of cloud resource instance.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConnectionsTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionsTagFilter)(nil)).Elem()
}

func (i ConnectionsTagFilterArgs) ToConnectionsTagFilterOutput() ConnectionsTagFilterOutput {
	return i.ToConnectionsTagFilterOutputWithContext(context.Background())
}

func (i ConnectionsTagFilterArgs) ToConnectionsTagFilterOutputWithContext(ctx context.Context) ConnectionsTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionsTagFilterOutput)
}

// ConnectionsTagFilterArrayInput is an input type that accepts ConnectionsTagFilterArray and ConnectionsTagFilterArrayOutput values.
// You can construct a concrete instance of `ConnectionsTagFilterArrayInput` via:
//
//	ConnectionsTagFilterArray{ ConnectionsTagFilterArgs{...} }
type ConnectionsTagFilterArrayInput interface {
	pulumi.Input

	ToConnectionsTagFilterArrayOutput() ConnectionsTagFilterArrayOutput
	ToConnectionsTagFilterArrayOutputWithContext(context.Context) ConnectionsTagFilterArrayOutput
}

type ConnectionsTagFilterArray []ConnectionsTagFilterInput

func (ConnectionsTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionsTagFilter)(nil)).Elem()
}

func (i ConnectionsTagFilterArray) ToConnectionsTagFilterArrayOutput() ConnectionsTagFilterArrayOutput {
	return i.ToConnectionsTagFilterArrayOutputWithContext(context.Background())
}

func (i ConnectionsTagFilterArray) ToConnectionsTagFilterArrayOutputWithContext(ctx context.Context) ConnectionsTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionsTagFilterArrayOutput)
}

type ConnectionsTagFilterOutput struct{ *pulumi.OutputState }

func (ConnectionsTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionsTagFilter)(nil)).Elem()
}

func (o ConnectionsTagFilterOutput) ToConnectionsTagFilterOutput() ConnectionsTagFilterOutput {
	return o
}

func (o ConnectionsTagFilterOutput) ToConnectionsTagFilterOutputWithContext(ctx context.Context) ConnectionsTagFilterOutput {
	return o
}

// The tag key of cloud resource instance.
func (o ConnectionsTagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionsTagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag value of cloud resource instance.
func (o ConnectionsTagFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionsTagFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConnectionsTagFilterArrayOutput struct{ *pulumi.OutputState }

func (ConnectionsTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionsTagFilter)(nil)).Elem()
}

func (o ConnectionsTagFilterArrayOutput) ToConnectionsTagFilterArrayOutput() ConnectionsTagFilterArrayOutput {
	return o
}

func (o ConnectionsTagFilterArrayOutput) ToConnectionsTagFilterArrayOutputWithContext(ctx context.Context) ConnectionsTagFilterArrayOutput {
	return o
}

func (o ConnectionsTagFilterArrayOutput) Index(i pulumi.IntInput) ConnectionsTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionsTagFilter {
		return vs[0].([]ConnectionsTagFilter)[vs[1].(int)]
	}).(ConnectionsTagFilterOutput)
}

type GatewayRoutesDirectConnectGatewayRoute struct {
	// The id of account.
	AccountId string `pulumi:"accountId"`
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The cidr block.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The id of direct connect gateway.
	DirectConnectGatewayId string `pulumi:"directConnectGatewayId"`
	// The id of direct connect gateway route.
	DirectConnectGatewayRouteId string `pulumi:"directConnectGatewayRouteId"`
	// The id of next hop.
	NextHopId string `pulumi:"nextHopId"`
	// The type of next hop.
	NextHopType string `pulumi:"nextHopType"`
	// The type of route. The value can be BGP or CEN or Static.
	RouteType string `pulumi:"routeType"`
	// The status info.
	Status string `pulumi:"status"`
}

// GatewayRoutesDirectConnectGatewayRouteInput is an input type that accepts GatewayRoutesDirectConnectGatewayRouteArgs and GatewayRoutesDirectConnectGatewayRouteOutput values.
// You can construct a concrete instance of `GatewayRoutesDirectConnectGatewayRouteInput` via:
//
//	GatewayRoutesDirectConnectGatewayRouteArgs{...}
type GatewayRoutesDirectConnectGatewayRouteInput interface {
	pulumi.Input

	ToGatewayRoutesDirectConnectGatewayRouteOutput() GatewayRoutesDirectConnectGatewayRouteOutput
	ToGatewayRoutesDirectConnectGatewayRouteOutputWithContext(context.Context) GatewayRoutesDirectConnectGatewayRouteOutput
}

type GatewayRoutesDirectConnectGatewayRouteArgs struct {
	// The id of account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The cidr block.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The id of direct connect gateway.
	DirectConnectGatewayId pulumi.StringInput `pulumi:"directConnectGatewayId"`
	// The id of direct connect gateway route.
	DirectConnectGatewayRouteId pulumi.StringInput `pulumi:"directConnectGatewayRouteId"`
	// The id of next hop.
	NextHopId pulumi.StringInput `pulumi:"nextHopId"`
	// The type of next hop.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The type of route. The value can be BGP or CEN or Static.
	RouteType pulumi.StringInput `pulumi:"routeType"`
	// The status info.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GatewayRoutesDirectConnectGatewayRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutesDirectConnectGatewayRoute)(nil)).Elem()
}

func (i GatewayRoutesDirectConnectGatewayRouteArgs) ToGatewayRoutesDirectConnectGatewayRouteOutput() GatewayRoutesDirectConnectGatewayRouteOutput {
	return i.ToGatewayRoutesDirectConnectGatewayRouteOutputWithContext(context.Background())
}

func (i GatewayRoutesDirectConnectGatewayRouteArgs) ToGatewayRoutesDirectConnectGatewayRouteOutputWithContext(ctx context.Context) GatewayRoutesDirectConnectGatewayRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutesDirectConnectGatewayRouteOutput)
}

// GatewayRoutesDirectConnectGatewayRouteArrayInput is an input type that accepts GatewayRoutesDirectConnectGatewayRouteArray and GatewayRoutesDirectConnectGatewayRouteArrayOutput values.
// You can construct a concrete instance of `GatewayRoutesDirectConnectGatewayRouteArrayInput` via:
//
//	GatewayRoutesDirectConnectGatewayRouteArray{ GatewayRoutesDirectConnectGatewayRouteArgs{...} }
type GatewayRoutesDirectConnectGatewayRouteArrayInput interface {
	pulumi.Input

	ToGatewayRoutesDirectConnectGatewayRouteArrayOutput() GatewayRoutesDirectConnectGatewayRouteArrayOutput
	ToGatewayRoutesDirectConnectGatewayRouteArrayOutputWithContext(context.Context) GatewayRoutesDirectConnectGatewayRouteArrayOutput
}

type GatewayRoutesDirectConnectGatewayRouteArray []GatewayRoutesDirectConnectGatewayRouteInput

func (GatewayRoutesDirectConnectGatewayRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRoutesDirectConnectGatewayRoute)(nil)).Elem()
}

func (i GatewayRoutesDirectConnectGatewayRouteArray) ToGatewayRoutesDirectConnectGatewayRouteArrayOutput() GatewayRoutesDirectConnectGatewayRouteArrayOutput {
	return i.ToGatewayRoutesDirectConnectGatewayRouteArrayOutputWithContext(context.Background())
}

func (i GatewayRoutesDirectConnectGatewayRouteArray) ToGatewayRoutesDirectConnectGatewayRouteArrayOutputWithContext(ctx context.Context) GatewayRoutesDirectConnectGatewayRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRoutesDirectConnectGatewayRouteArrayOutput)
}

type GatewayRoutesDirectConnectGatewayRouteOutput struct{ *pulumi.OutputState }

func (GatewayRoutesDirectConnectGatewayRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutesDirectConnectGatewayRoute)(nil)).Elem()
}

func (o GatewayRoutesDirectConnectGatewayRouteOutput) ToGatewayRoutesDirectConnectGatewayRouteOutput() GatewayRoutesDirectConnectGatewayRouteOutput {
	return o
}

func (o GatewayRoutesDirectConnectGatewayRouteOutput) ToGatewayRoutesDirectConnectGatewayRouteOutputWithContext(ctx context.Context) GatewayRoutesDirectConnectGatewayRouteOutput {
	return o
}

// The id of account.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.AccountId }).(pulumi.StringOutput)
}

// The create time.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The cidr block.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The id of direct connect gateway.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) DirectConnectGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.DirectConnectGatewayId }).(pulumi.StringOutput)
}

// The id of direct connect gateway route.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) DirectConnectGatewayRouteId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.DirectConnectGatewayRouteId }).(pulumi.StringOutput)
}

// The id of next hop.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) NextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.NextHopId }).(pulumi.StringOutput)
}

// The type of next hop.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The type of route. The value can be BGP or CEN or Static.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.RouteType }).(pulumi.StringOutput)
}

// The status info.
func (o GatewayRoutesDirectConnectGatewayRouteOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesDirectConnectGatewayRoute) string { return v.Status }).(pulumi.StringOutput)
}

type GatewayRoutesDirectConnectGatewayRouteArrayOutput struct{ *pulumi.OutputState }

func (GatewayRoutesDirectConnectGatewayRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRoutesDirectConnectGatewayRoute)(nil)).Elem()
}

func (o GatewayRoutesDirectConnectGatewayRouteArrayOutput) ToGatewayRoutesDirectConnectGatewayRouteArrayOutput() GatewayRoutesDirectConnectGatewayRouteArrayOutput {
	return o
}

func (o GatewayRoutesDirectConnectGatewayRouteArrayOutput) ToGatewayRoutesDirectConnectGatewayRouteArrayOutputWithContext(ctx context.Context) GatewayRoutesDirectConnectGatewayRouteArrayOutput {
	return o
}

func (o GatewayRoutesDirectConnectGatewayRouteArrayOutput) Index(i pulumi.IntInput) GatewayRoutesDirectConnectGatewayRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRoutesDirectConnectGatewayRoute {
		return vs[0].([]GatewayRoutesDirectConnectGatewayRoute)[vs[1].(int)]
	}).(GatewayRoutesDirectConnectGatewayRouteOutput)
}

type GatewayTag struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// GatewayTagInput is an input type that accepts GatewayTagArgs and GatewayTagOutput values.
// You can construct a concrete instance of `GatewayTagInput` via:
//
//	GatewayTagArgs{...}
type GatewayTagInput interface {
	pulumi.Input

	ToGatewayTagOutput() GatewayTagOutput
	ToGatewayTagOutputWithContext(context.Context) GatewayTagOutput
}

type GatewayTagArgs struct {
	// The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTag)(nil)).Elem()
}

func (i GatewayTagArgs) ToGatewayTagOutput() GatewayTagOutput {
	return i.ToGatewayTagOutputWithContext(context.Background())
}

func (i GatewayTagArgs) ToGatewayTagOutputWithContext(ctx context.Context) GatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTagOutput)
}

// GatewayTagArrayInput is an input type that accepts GatewayTagArray and GatewayTagArrayOutput values.
// You can construct a concrete instance of `GatewayTagArrayInput` via:
//
//	GatewayTagArray{ GatewayTagArgs{...} }
type GatewayTagArrayInput interface {
	pulumi.Input

	ToGatewayTagArrayOutput() GatewayTagArrayOutput
	ToGatewayTagArrayOutputWithContext(context.Context) GatewayTagArrayOutput
}

type GatewayTagArray []GatewayTagInput

func (GatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayTag)(nil)).Elem()
}

func (i GatewayTagArray) ToGatewayTagArrayOutput() GatewayTagArrayOutput {
	return i.ToGatewayTagArrayOutputWithContext(context.Background())
}

func (i GatewayTagArray) ToGatewayTagArrayOutputWithContext(ctx context.Context) GatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayTagArrayOutput)
}

type GatewayTagOutput struct{ *pulumi.OutputState }

func (GatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayTag)(nil)).Elem()
}

func (o GatewayTagOutput) ToGatewayTagOutput() GatewayTagOutput {
	return o
}

func (o GatewayTagOutput) ToGatewayTagOutputWithContext(ctx context.Context) GatewayTagOutput {
	return o
}

// The tag key.
func (o GatewayTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag value.
func (o GatewayTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GatewayTagArrayOutput struct{ *pulumi.OutputState }

func (GatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayTag)(nil)).Elem()
}

func (o GatewayTagArrayOutput) ToGatewayTagArrayOutput() GatewayTagArrayOutput {
	return o
}

func (o GatewayTagArrayOutput) ToGatewayTagArrayOutputWithContext(ctx context.Context) GatewayTagArrayOutput {
	return o
}

func (o GatewayTagArrayOutput) Index(i pulumi.IntInput) GatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayTag {
		return vs[0].([]GatewayTag)[vs[1].(int)]
	}).(GatewayTagOutput)
}

type GatewaysDirectConnectGateway struct {
	// The account ID that direct connect gateway belongs.
	AccountId string `pulumi:"accountId"`
	// The CEN information associated with the direct connect gateway.
	AssociateCens []GatewaysDirectConnectGatewayAssociateCen `pulumi:"associateCens"`
	// The business status of direct connect gateway.
	BusinessStatus string `pulumi:"businessStatus"`
	// The creation time of direct connect gateway.
	CreationTime string `pulumi:"creationTime"`
	// The expected resource force collection time. Only when the resource is frozen due to arrears, this parameter will have a return value, otherwise it will return a null value.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of direct connect gateway.
	Description string `pulumi:"description"`
	// The direct connect gateway ID.
	DirectConnectGatewayId string `pulumi:"directConnectGatewayId"`
	// The direst connect gateway name.
	DirectConnectGatewayName string `pulumi:"directConnectGatewayName"`
	// The reason of the direct connect gateway locked.
	LockReason string `pulumi:"lockReason"`
	// The resource freeze time. Only when the resource is frozen due to arrears, this parameter will have a return value, otherwise it will return a null value.
	OverdueTime string `pulumi:"overdueTime"`
	// The status of direct connect gateway.
	Status string `pulumi:"status"`
	// The tags that direct connect gateway added.
	Tags []GatewaysDirectConnectGatewayTag `pulumi:"tags"`
	// The update time of direct connect gateway.
	UpdateTime string `pulumi:"updateTime"`
}

// GatewaysDirectConnectGatewayInput is an input type that accepts GatewaysDirectConnectGatewayArgs and GatewaysDirectConnectGatewayOutput values.
// You can construct a concrete instance of `GatewaysDirectConnectGatewayInput` via:
//
//	GatewaysDirectConnectGatewayArgs{...}
type GatewaysDirectConnectGatewayInput interface {
	pulumi.Input

	ToGatewaysDirectConnectGatewayOutput() GatewaysDirectConnectGatewayOutput
	ToGatewaysDirectConnectGatewayOutputWithContext(context.Context) GatewaysDirectConnectGatewayOutput
}

type GatewaysDirectConnectGatewayArgs struct {
	// The account ID that direct connect gateway belongs.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The CEN information associated with the direct connect gateway.
	AssociateCens GatewaysDirectConnectGatewayAssociateCenArrayInput `pulumi:"associateCens"`
	// The business status of direct connect gateway.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The creation time of direct connect gateway.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The expected resource force collection time. Only when the resource is frozen due to arrears, this parameter will have a return value, otherwise it will return a null value.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of direct connect gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// The direct connect gateway ID.
	DirectConnectGatewayId pulumi.StringInput `pulumi:"directConnectGatewayId"`
	// The direst connect gateway name.
	DirectConnectGatewayName pulumi.StringInput `pulumi:"directConnectGatewayName"`
	// The reason of the direct connect gateway locked.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The resource freeze time. Only when the resource is frozen due to arrears, this parameter will have a return value, otherwise it will return a null value.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The status of direct connect gateway.
	Status pulumi.StringInput `pulumi:"status"`
	// The tags that direct connect gateway added.
	Tags GatewaysDirectConnectGatewayTagArrayInput `pulumi:"tags"`
	// The update time of direct connect gateway.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GatewaysDirectConnectGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysDirectConnectGateway)(nil)).Elem()
}

func (i GatewaysDirectConnectGatewayArgs) ToGatewaysDirectConnectGatewayOutput() GatewaysDirectConnectGatewayOutput {
	return i.ToGatewaysDirectConnectGatewayOutputWithContext(context.Background())
}

func (i GatewaysDirectConnectGatewayArgs) ToGatewaysDirectConnectGatewayOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysDirectConnectGatewayOutput)
}

// GatewaysDirectConnectGatewayArrayInput is an input type that accepts GatewaysDirectConnectGatewayArray and GatewaysDirectConnectGatewayArrayOutput values.
// You can construct a concrete instance of `GatewaysDirectConnectGatewayArrayInput` via:
//
//	GatewaysDirectConnectGatewayArray{ GatewaysDirectConnectGatewayArgs{...} }
type GatewaysDirectConnectGatewayArrayInput interface {
	pulumi.Input

	ToGatewaysDirectConnectGatewayArrayOutput() GatewaysDirectConnectGatewayArrayOutput
	ToGatewaysDirectConnectGatewayArrayOutputWithContext(context.Context) GatewaysDirectConnectGatewayArrayOutput
}

type GatewaysDirectConnectGatewayArray []GatewaysDirectConnectGatewayInput

func (GatewaysDirectConnectGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysDirectConnectGateway)(nil)).Elem()
}

func (i GatewaysDirectConnectGatewayArray) ToGatewaysDirectConnectGatewayArrayOutput() GatewaysDirectConnectGatewayArrayOutput {
	return i.ToGatewaysDirectConnectGatewayArrayOutputWithContext(context.Background())
}

func (i GatewaysDirectConnectGatewayArray) ToGatewaysDirectConnectGatewayArrayOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysDirectConnectGatewayArrayOutput)
}

type GatewaysDirectConnectGatewayOutput struct{ *pulumi.OutputState }

func (GatewaysDirectConnectGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysDirectConnectGateway)(nil)).Elem()
}

func (o GatewaysDirectConnectGatewayOutput) ToGatewaysDirectConnectGatewayOutput() GatewaysDirectConnectGatewayOutput {
	return o
}

func (o GatewaysDirectConnectGatewayOutput) ToGatewaysDirectConnectGatewayOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayOutput {
	return o
}

// The account ID that direct connect gateway belongs.
func (o GatewaysDirectConnectGatewayOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.AccountId }).(pulumi.StringOutput)
}

// The CEN information associated with the direct connect gateway.
func (o GatewaysDirectConnectGatewayOutput) AssociateCens() GatewaysDirectConnectGatewayAssociateCenArrayOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) []GatewaysDirectConnectGatewayAssociateCen {
		return v.AssociateCens
	}).(GatewaysDirectConnectGatewayAssociateCenArrayOutput)
}

// The business status of direct connect gateway.
func (o GatewaysDirectConnectGatewayOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The creation time of direct connect gateway.
func (o GatewaysDirectConnectGatewayOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The expected resource force collection time. Only when the resource is frozen due to arrears, this parameter will have a return value, otherwise it will return a null value.
func (o GatewaysDirectConnectGatewayOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of direct connect gateway.
func (o GatewaysDirectConnectGatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.Description }).(pulumi.StringOutput)
}

// The direct connect gateway ID.
func (o GatewaysDirectConnectGatewayOutput) DirectConnectGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.DirectConnectGatewayId }).(pulumi.StringOutput)
}

// The direst connect gateway name.
func (o GatewaysDirectConnectGatewayOutput) DirectConnectGatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.DirectConnectGatewayName }).(pulumi.StringOutput)
}

// The reason of the direct connect gateway locked.
func (o GatewaysDirectConnectGatewayOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.LockReason }).(pulumi.StringOutput)
}

// The resource freeze time. Only when the resource is frozen due to arrears, this parameter will have a return value, otherwise it will return a null value.
func (o GatewaysDirectConnectGatewayOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The status of direct connect gateway.
func (o GatewaysDirectConnectGatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.Status }).(pulumi.StringOutput)
}

// The tags that direct connect gateway added.
func (o GatewaysDirectConnectGatewayOutput) Tags() GatewaysDirectConnectGatewayTagArrayOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) []GatewaysDirectConnectGatewayTag { return v.Tags }).(GatewaysDirectConnectGatewayTagArrayOutput)
}

// The update time of direct connect gateway.
func (o GatewaysDirectConnectGatewayOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGateway) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GatewaysDirectConnectGatewayArrayOutput struct{ *pulumi.OutputState }

func (GatewaysDirectConnectGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysDirectConnectGateway)(nil)).Elem()
}

func (o GatewaysDirectConnectGatewayArrayOutput) ToGatewaysDirectConnectGatewayArrayOutput() GatewaysDirectConnectGatewayArrayOutput {
	return o
}

func (o GatewaysDirectConnectGatewayArrayOutput) ToGatewaysDirectConnectGatewayArrayOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayArrayOutput {
	return o
}

func (o GatewaysDirectConnectGatewayArrayOutput) Index(i pulumi.IntInput) GatewaysDirectConnectGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewaysDirectConnectGateway {
		return vs[0].([]GatewaysDirectConnectGateway)[vs[1].(int)]
	}).(GatewaysDirectConnectGatewayOutput)
}

type GatewaysDirectConnectGatewayAssociateCen struct {
	// The CEN ID which direct connect gateway belongs.
	CenId string `pulumi:"cenId"`
	// The CEN owner's ID.
	CenOwnerId string `pulumi:"cenOwnerId"`
	// The CEN status.
	CenStatus string `pulumi:"cenStatus"`
}

// GatewaysDirectConnectGatewayAssociateCenInput is an input type that accepts GatewaysDirectConnectGatewayAssociateCenArgs and GatewaysDirectConnectGatewayAssociateCenOutput values.
// You can construct a concrete instance of `GatewaysDirectConnectGatewayAssociateCenInput` via:
//
//	GatewaysDirectConnectGatewayAssociateCenArgs{...}
type GatewaysDirectConnectGatewayAssociateCenInput interface {
	pulumi.Input

	ToGatewaysDirectConnectGatewayAssociateCenOutput() GatewaysDirectConnectGatewayAssociateCenOutput
	ToGatewaysDirectConnectGatewayAssociateCenOutputWithContext(context.Context) GatewaysDirectConnectGatewayAssociateCenOutput
}

type GatewaysDirectConnectGatewayAssociateCenArgs struct {
	// The CEN ID which direct connect gateway belongs.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The CEN owner's ID.
	CenOwnerId pulumi.StringInput `pulumi:"cenOwnerId"`
	// The CEN status.
	CenStatus pulumi.StringInput `pulumi:"cenStatus"`
}

func (GatewaysDirectConnectGatewayAssociateCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysDirectConnectGatewayAssociateCen)(nil)).Elem()
}

func (i GatewaysDirectConnectGatewayAssociateCenArgs) ToGatewaysDirectConnectGatewayAssociateCenOutput() GatewaysDirectConnectGatewayAssociateCenOutput {
	return i.ToGatewaysDirectConnectGatewayAssociateCenOutputWithContext(context.Background())
}

func (i GatewaysDirectConnectGatewayAssociateCenArgs) ToGatewaysDirectConnectGatewayAssociateCenOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayAssociateCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysDirectConnectGatewayAssociateCenOutput)
}

// GatewaysDirectConnectGatewayAssociateCenArrayInput is an input type that accepts GatewaysDirectConnectGatewayAssociateCenArray and GatewaysDirectConnectGatewayAssociateCenArrayOutput values.
// You can construct a concrete instance of `GatewaysDirectConnectGatewayAssociateCenArrayInput` via:
//
//	GatewaysDirectConnectGatewayAssociateCenArray{ GatewaysDirectConnectGatewayAssociateCenArgs{...} }
type GatewaysDirectConnectGatewayAssociateCenArrayInput interface {
	pulumi.Input

	ToGatewaysDirectConnectGatewayAssociateCenArrayOutput() GatewaysDirectConnectGatewayAssociateCenArrayOutput
	ToGatewaysDirectConnectGatewayAssociateCenArrayOutputWithContext(context.Context) GatewaysDirectConnectGatewayAssociateCenArrayOutput
}

type GatewaysDirectConnectGatewayAssociateCenArray []GatewaysDirectConnectGatewayAssociateCenInput

func (GatewaysDirectConnectGatewayAssociateCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysDirectConnectGatewayAssociateCen)(nil)).Elem()
}

func (i GatewaysDirectConnectGatewayAssociateCenArray) ToGatewaysDirectConnectGatewayAssociateCenArrayOutput() GatewaysDirectConnectGatewayAssociateCenArrayOutput {
	return i.ToGatewaysDirectConnectGatewayAssociateCenArrayOutputWithContext(context.Background())
}

func (i GatewaysDirectConnectGatewayAssociateCenArray) ToGatewaysDirectConnectGatewayAssociateCenArrayOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayAssociateCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysDirectConnectGatewayAssociateCenArrayOutput)
}

type GatewaysDirectConnectGatewayAssociateCenOutput struct{ *pulumi.OutputState }

func (GatewaysDirectConnectGatewayAssociateCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysDirectConnectGatewayAssociateCen)(nil)).Elem()
}

func (o GatewaysDirectConnectGatewayAssociateCenOutput) ToGatewaysDirectConnectGatewayAssociateCenOutput() GatewaysDirectConnectGatewayAssociateCenOutput {
	return o
}

func (o GatewaysDirectConnectGatewayAssociateCenOutput) ToGatewaysDirectConnectGatewayAssociateCenOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayAssociateCenOutput {
	return o
}

// The CEN ID which direct connect gateway belongs.
func (o GatewaysDirectConnectGatewayAssociateCenOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGatewayAssociateCen) string { return v.CenId }).(pulumi.StringOutput)
}

// The CEN owner's ID.
func (o GatewaysDirectConnectGatewayAssociateCenOutput) CenOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGatewayAssociateCen) string { return v.CenOwnerId }).(pulumi.StringOutput)
}

// The CEN status.
func (o GatewaysDirectConnectGatewayAssociateCenOutput) CenStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGatewayAssociateCen) string { return v.CenStatus }).(pulumi.StringOutput)
}

type GatewaysDirectConnectGatewayAssociateCenArrayOutput struct{ *pulumi.OutputState }

func (GatewaysDirectConnectGatewayAssociateCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysDirectConnectGatewayAssociateCen)(nil)).Elem()
}

func (o GatewaysDirectConnectGatewayAssociateCenArrayOutput) ToGatewaysDirectConnectGatewayAssociateCenArrayOutput() GatewaysDirectConnectGatewayAssociateCenArrayOutput {
	return o
}

func (o GatewaysDirectConnectGatewayAssociateCenArrayOutput) ToGatewaysDirectConnectGatewayAssociateCenArrayOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayAssociateCenArrayOutput {
	return o
}

func (o GatewaysDirectConnectGatewayAssociateCenArrayOutput) Index(i pulumi.IntInput) GatewaysDirectConnectGatewayAssociateCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewaysDirectConnectGatewayAssociateCen {
		return vs[0].([]GatewaysDirectConnectGatewayAssociateCen)[vs[1].(int)]
	}).(GatewaysDirectConnectGatewayAssociateCenOutput)
}

type GatewaysDirectConnectGatewayTag struct {
	// The tag key of cloud resource instance.
	Key string `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value string `pulumi:"value"`
}

// GatewaysDirectConnectGatewayTagInput is an input type that accepts GatewaysDirectConnectGatewayTagArgs and GatewaysDirectConnectGatewayTagOutput values.
// You can construct a concrete instance of `GatewaysDirectConnectGatewayTagInput` via:
//
//	GatewaysDirectConnectGatewayTagArgs{...}
type GatewaysDirectConnectGatewayTagInput interface {
	pulumi.Input

	ToGatewaysDirectConnectGatewayTagOutput() GatewaysDirectConnectGatewayTagOutput
	ToGatewaysDirectConnectGatewayTagOutputWithContext(context.Context) GatewaysDirectConnectGatewayTagOutput
}

type GatewaysDirectConnectGatewayTagArgs struct {
	// The tag key of cloud resource instance.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GatewaysDirectConnectGatewayTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysDirectConnectGatewayTag)(nil)).Elem()
}

func (i GatewaysDirectConnectGatewayTagArgs) ToGatewaysDirectConnectGatewayTagOutput() GatewaysDirectConnectGatewayTagOutput {
	return i.ToGatewaysDirectConnectGatewayTagOutputWithContext(context.Background())
}

func (i GatewaysDirectConnectGatewayTagArgs) ToGatewaysDirectConnectGatewayTagOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysDirectConnectGatewayTagOutput)
}

// GatewaysDirectConnectGatewayTagArrayInput is an input type that accepts GatewaysDirectConnectGatewayTagArray and GatewaysDirectConnectGatewayTagArrayOutput values.
// You can construct a concrete instance of `GatewaysDirectConnectGatewayTagArrayInput` via:
//
//	GatewaysDirectConnectGatewayTagArray{ GatewaysDirectConnectGatewayTagArgs{...} }
type GatewaysDirectConnectGatewayTagArrayInput interface {
	pulumi.Input

	ToGatewaysDirectConnectGatewayTagArrayOutput() GatewaysDirectConnectGatewayTagArrayOutput
	ToGatewaysDirectConnectGatewayTagArrayOutputWithContext(context.Context) GatewaysDirectConnectGatewayTagArrayOutput
}

type GatewaysDirectConnectGatewayTagArray []GatewaysDirectConnectGatewayTagInput

func (GatewaysDirectConnectGatewayTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysDirectConnectGatewayTag)(nil)).Elem()
}

func (i GatewaysDirectConnectGatewayTagArray) ToGatewaysDirectConnectGatewayTagArrayOutput() GatewaysDirectConnectGatewayTagArrayOutput {
	return i.ToGatewaysDirectConnectGatewayTagArrayOutputWithContext(context.Background())
}

func (i GatewaysDirectConnectGatewayTagArray) ToGatewaysDirectConnectGatewayTagArrayOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysDirectConnectGatewayTagArrayOutput)
}

type GatewaysDirectConnectGatewayTagOutput struct{ *pulumi.OutputState }

func (GatewaysDirectConnectGatewayTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysDirectConnectGatewayTag)(nil)).Elem()
}

func (o GatewaysDirectConnectGatewayTagOutput) ToGatewaysDirectConnectGatewayTagOutput() GatewaysDirectConnectGatewayTagOutput {
	return o
}

func (o GatewaysDirectConnectGatewayTagOutput) ToGatewaysDirectConnectGatewayTagOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayTagOutput {
	return o
}

// The tag key of cloud resource instance.
func (o GatewaysDirectConnectGatewayTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGatewayTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag value of cloud resource instance.
func (o GatewaysDirectConnectGatewayTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysDirectConnectGatewayTag) string { return v.Value }).(pulumi.StringOutput)
}

type GatewaysDirectConnectGatewayTagArrayOutput struct{ *pulumi.OutputState }

func (GatewaysDirectConnectGatewayTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysDirectConnectGatewayTag)(nil)).Elem()
}

func (o GatewaysDirectConnectGatewayTagArrayOutput) ToGatewaysDirectConnectGatewayTagArrayOutput() GatewaysDirectConnectGatewayTagArrayOutput {
	return o
}

func (o GatewaysDirectConnectGatewayTagArrayOutput) ToGatewaysDirectConnectGatewayTagArrayOutputWithContext(ctx context.Context) GatewaysDirectConnectGatewayTagArrayOutput {
	return o
}

func (o GatewaysDirectConnectGatewayTagArrayOutput) Index(i pulumi.IntInput) GatewaysDirectConnectGatewayTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewaysDirectConnectGatewayTag {
		return vs[0].([]GatewaysDirectConnectGatewayTag)[vs[1].(int)]
	}).(GatewaysDirectConnectGatewayTagOutput)
}

type GatewaysTagFilter struct {
	// The tag key of cloud resource instance.
	Key *string `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value *string `pulumi:"value"`
}

// GatewaysTagFilterInput is an input type that accepts GatewaysTagFilterArgs and GatewaysTagFilterOutput values.
// You can construct a concrete instance of `GatewaysTagFilterInput` via:
//
//	GatewaysTagFilterArgs{...}
type GatewaysTagFilterInput interface {
	pulumi.Input

	ToGatewaysTagFilterOutput() GatewaysTagFilterOutput
	ToGatewaysTagFilterOutputWithContext(context.Context) GatewaysTagFilterOutput
}

type GatewaysTagFilterArgs struct {
	// The tag key of cloud resource instance.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GatewaysTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysTagFilter)(nil)).Elem()
}

func (i GatewaysTagFilterArgs) ToGatewaysTagFilterOutput() GatewaysTagFilterOutput {
	return i.ToGatewaysTagFilterOutputWithContext(context.Background())
}

func (i GatewaysTagFilterArgs) ToGatewaysTagFilterOutputWithContext(ctx context.Context) GatewaysTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysTagFilterOutput)
}

// GatewaysTagFilterArrayInput is an input type that accepts GatewaysTagFilterArray and GatewaysTagFilterArrayOutput values.
// You can construct a concrete instance of `GatewaysTagFilterArrayInput` via:
//
//	GatewaysTagFilterArray{ GatewaysTagFilterArgs{...} }
type GatewaysTagFilterArrayInput interface {
	pulumi.Input

	ToGatewaysTagFilterArrayOutput() GatewaysTagFilterArrayOutput
	ToGatewaysTagFilterArrayOutputWithContext(context.Context) GatewaysTagFilterArrayOutput
}

type GatewaysTagFilterArray []GatewaysTagFilterInput

func (GatewaysTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysTagFilter)(nil)).Elem()
}

func (i GatewaysTagFilterArray) ToGatewaysTagFilterArrayOutput() GatewaysTagFilterArrayOutput {
	return i.ToGatewaysTagFilterArrayOutputWithContext(context.Background())
}

func (i GatewaysTagFilterArray) ToGatewaysTagFilterArrayOutputWithContext(ctx context.Context) GatewaysTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewaysTagFilterArrayOutput)
}

type GatewaysTagFilterOutput struct{ *pulumi.OutputState }

func (GatewaysTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysTagFilter)(nil)).Elem()
}

func (o GatewaysTagFilterOutput) ToGatewaysTagFilterOutput() GatewaysTagFilterOutput {
	return o
}

func (o GatewaysTagFilterOutput) ToGatewaysTagFilterOutputWithContext(ctx context.Context) GatewaysTagFilterOutput {
	return o
}

// The tag key of cloud resource instance.
func (o GatewaysTagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysTagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag value of cloud resource instance.
func (o GatewaysTagFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysTagFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GatewaysTagFilterArrayOutput struct{ *pulumi.OutputState }

func (GatewaysTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewaysTagFilter)(nil)).Elem()
}

func (o GatewaysTagFilterArrayOutput) ToGatewaysTagFilterArrayOutput() GatewaysTagFilterArrayOutput {
	return o
}

func (o GatewaysTagFilterArrayOutput) ToGatewaysTagFilterArrayOutputWithContext(ctx context.Context) GatewaysTagFilterArrayOutput {
	return o
}

func (o GatewaysTagFilterArrayOutput) Index(i pulumi.IntInput) GatewaysTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewaysTagFilter {
		return vs[0].([]GatewaysTagFilter)[vs[1].(int)]
	}).(GatewaysTagFilterOutput)
}

type VirtualInterfaceTag struct {
	// The tag key.
	Key *string `pulumi:"key"`
	// The tag value.
	Value *string `pulumi:"value"`
}

// VirtualInterfaceTagInput is an input type that accepts VirtualInterfaceTagArgs and VirtualInterfaceTagOutput values.
// You can construct a concrete instance of `VirtualInterfaceTagInput` via:
//
//	VirtualInterfaceTagArgs{...}
type VirtualInterfaceTagInput interface {
	pulumi.Input

	ToVirtualInterfaceTagOutput() VirtualInterfaceTagOutput
	ToVirtualInterfaceTagOutputWithContext(context.Context) VirtualInterfaceTagOutput
}

type VirtualInterfaceTagArgs struct {
	// The tag key.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VirtualInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualInterfaceTag)(nil)).Elem()
}

func (i VirtualInterfaceTagArgs) ToVirtualInterfaceTagOutput() VirtualInterfaceTagOutput {
	return i.ToVirtualInterfaceTagOutputWithContext(context.Background())
}

func (i VirtualInterfaceTagArgs) ToVirtualInterfaceTagOutputWithContext(ctx context.Context) VirtualInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualInterfaceTagOutput)
}

// VirtualInterfaceTagArrayInput is an input type that accepts VirtualInterfaceTagArray and VirtualInterfaceTagArrayOutput values.
// You can construct a concrete instance of `VirtualInterfaceTagArrayInput` via:
//
//	VirtualInterfaceTagArray{ VirtualInterfaceTagArgs{...} }
type VirtualInterfaceTagArrayInput interface {
	pulumi.Input

	ToVirtualInterfaceTagArrayOutput() VirtualInterfaceTagArrayOutput
	ToVirtualInterfaceTagArrayOutputWithContext(context.Context) VirtualInterfaceTagArrayOutput
}

type VirtualInterfaceTagArray []VirtualInterfaceTagInput

func (VirtualInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualInterfaceTag)(nil)).Elem()
}

func (i VirtualInterfaceTagArray) ToVirtualInterfaceTagArrayOutput() VirtualInterfaceTagArrayOutput {
	return i.ToVirtualInterfaceTagArrayOutputWithContext(context.Background())
}

func (i VirtualInterfaceTagArray) ToVirtualInterfaceTagArrayOutputWithContext(ctx context.Context) VirtualInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualInterfaceTagArrayOutput)
}

type VirtualInterfaceTagOutput struct{ *pulumi.OutputState }

func (VirtualInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualInterfaceTag)(nil)).Elem()
}

func (o VirtualInterfaceTagOutput) ToVirtualInterfaceTagOutput() VirtualInterfaceTagOutput {
	return o
}

func (o VirtualInterfaceTagOutput) ToVirtualInterfaceTagOutputWithContext(ctx context.Context) VirtualInterfaceTagOutput {
	return o
}

// The tag key.
func (o VirtualInterfaceTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualInterfaceTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag value.
func (o VirtualInterfaceTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualInterfaceTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VirtualInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (VirtualInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualInterfaceTag)(nil)).Elem()
}

func (o VirtualInterfaceTagArrayOutput) ToVirtualInterfaceTagArrayOutput() VirtualInterfaceTagArrayOutput {
	return o
}

func (o VirtualInterfaceTagArrayOutput) ToVirtualInterfaceTagArrayOutputWithContext(ctx context.Context) VirtualInterfaceTagArrayOutput {
	return o
}

func (o VirtualInterfaceTagArrayOutput) Index(i pulumi.IntInput) VirtualInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualInterfaceTag {
		return vs[0].([]VirtualInterfaceTag)[vs[1].(int)]
	}).(VirtualInterfaceTagOutput)
}

type VirtualInterfacesTagFilter struct {
	// The tag key of cloud resource instance.
	Key *string `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value *string `pulumi:"value"`
}

// VirtualInterfacesTagFilterInput is an input type that accepts VirtualInterfacesTagFilterArgs and VirtualInterfacesTagFilterOutput values.
// You can construct a concrete instance of `VirtualInterfacesTagFilterInput` via:
//
//	VirtualInterfacesTagFilterArgs{...}
type VirtualInterfacesTagFilterInput interface {
	pulumi.Input

	ToVirtualInterfacesTagFilterOutput() VirtualInterfacesTagFilterOutput
	ToVirtualInterfacesTagFilterOutputWithContext(context.Context) VirtualInterfacesTagFilterOutput
}

type VirtualInterfacesTagFilterArgs struct {
	// The tag key of cloud resource instance.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VirtualInterfacesTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualInterfacesTagFilter)(nil)).Elem()
}

func (i VirtualInterfacesTagFilterArgs) ToVirtualInterfacesTagFilterOutput() VirtualInterfacesTagFilterOutput {
	return i.ToVirtualInterfacesTagFilterOutputWithContext(context.Background())
}

func (i VirtualInterfacesTagFilterArgs) ToVirtualInterfacesTagFilterOutputWithContext(ctx context.Context) VirtualInterfacesTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualInterfacesTagFilterOutput)
}

// VirtualInterfacesTagFilterArrayInput is an input type that accepts VirtualInterfacesTagFilterArray and VirtualInterfacesTagFilterArrayOutput values.
// You can construct a concrete instance of `VirtualInterfacesTagFilterArrayInput` via:
//
//	VirtualInterfacesTagFilterArray{ VirtualInterfacesTagFilterArgs{...} }
type VirtualInterfacesTagFilterArrayInput interface {
	pulumi.Input

	ToVirtualInterfacesTagFilterArrayOutput() VirtualInterfacesTagFilterArrayOutput
	ToVirtualInterfacesTagFilterArrayOutputWithContext(context.Context) VirtualInterfacesTagFilterArrayOutput
}

type VirtualInterfacesTagFilterArray []VirtualInterfacesTagFilterInput

func (VirtualInterfacesTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualInterfacesTagFilter)(nil)).Elem()
}

func (i VirtualInterfacesTagFilterArray) ToVirtualInterfacesTagFilterArrayOutput() VirtualInterfacesTagFilterArrayOutput {
	return i.ToVirtualInterfacesTagFilterArrayOutputWithContext(context.Background())
}

func (i VirtualInterfacesTagFilterArray) ToVirtualInterfacesTagFilterArrayOutputWithContext(ctx context.Context) VirtualInterfacesTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualInterfacesTagFilterArrayOutput)
}

type VirtualInterfacesTagFilterOutput struct{ *pulumi.OutputState }

func (VirtualInterfacesTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualInterfacesTagFilter)(nil)).Elem()
}

func (o VirtualInterfacesTagFilterOutput) ToVirtualInterfacesTagFilterOutput() VirtualInterfacesTagFilterOutput {
	return o
}

func (o VirtualInterfacesTagFilterOutput) ToVirtualInterfacesTagFilterOutputWithContext(ctx context.Context) VirtualInterfacesTagFilterOutput {
	return o
}

// The tag key of cloud resource instance.
func (o VirtualInterfacesTagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualInterfacesTagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The tag value of cloud resource instance.
func (o VirtualInterfacesTagFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualInterfacesTagFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VirtualInterfacesTagFilterArrayOutput struct{ *pulumi.OutputState }

func (VirtualInterfacesTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualInterfacesTagFilter)(nil)).Elem()
}

func (o VirtualInterfacesTagFilterArrayOutput) ToVirtualInterfacesTagFilterArrayOutput() VirtualInterfacesTagFilterArrayOutput {
	return o
}

func (o VirtualInterfacesTagFilterArrayOutput) ToVirtualInterfacesTagFilterArrayOutputWithContext(ctx context.Context) VirtualInterfacesTagFilterArrayOutput {
	return o
}

func (o VirtualInterfacesTagFilterArrayOutput) Index(i pulumi.IntInput) VirtualInterfacesTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualInterfacesTagFilter {
		return vs[0].([]VirtualInterfacesTagFilter)[vs[1].(int)]
	}).(VirtualInterfacesTagFilterOutput)
}

type VirtualInterfacesVirtualInterface struct {
	// The account ID which this virtual interface belongs.
	AccountId string `pulumi:"accountId"`
	// The band width limit of virtual interface,in Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The BFD detect interval.
	BfdDetectInterval int `pulumi:"bfdDetectInterval"`
	// The BFD detect times.
	BfdDetectMultiplier int `pulumi:"bfdDetectMultiplier"`
	// The creation time of virtual interface.
	CreationTime string `pulumi:"creationTime"`
	// The description of the virtual interface.
	Description string `pulumi:"description"`
	// The direct connect connection ID that associated with this virtual interface.
	DirectConnectConnectionId string `pulumi:"directConnectConnectionId"`
	// The direct connect gateway ID that associated with this virtual interface.
	DirectConnectGatewayId string `pulumi:"directConnectGatewayId"`
	// Whether enable BFD detect.
	EnableBfd bool `pulumi:"enableBfd"`
	// Whether enable NQA detect.
	EnableNqa bool `pulumi:"enableNqa"`
	// The local IP that associated with this virtual interface.
	LocalIp string `pulumi:"localIp"`
	// The NQA detect interval.
	NqaDetectInterval int `pulumi:"nqaDetectInterval"`
	// The NAQ detect times.
	NqaDetectMultiplier int `pulumi:"nqaDetectMultiplier"`
	// The peer IP that associated with this virtual interface.
	PeerIp string `pulumi:"peerIp"`
	// The route type of virtual interface.
	RouteType string `pulumi:"routeType"`
	// The status of virtaul interface.
	Status string `pulumi:"status"`
	// The tags that direct connect gateway added.
	Tags []VirtualInterfacesVirtualInterfaceTag `pulumi:"tags"`
	// The update time of virtual interface.
	UpdateTime string `pulumi:"updateTime"`
	// The virtual interface ID.
	VirtualInterfaceId string `pulumi:"virtualInterfaceId"`
	// The name of virtual interface.
	VirtualInterfaceName string `pulumi:"virtualInterfaceName"`
	// The VLAN ID of virtual interface.
	VlanId int `pulumi:"vlanId"`
}

// VirtualInterfacesVirtualInterfaceInput is an input type that accepts VirtualInterfacesVirtualInterfaceArgs and VirtualInterfacesVirtualInterfaceOutput values.
// You can construct a concrete instance of `VirtualInterfacesVirtualInterfaceInput` via:
//
//	VirtualInterfacesVirtualInterfaceArgs{...}
type VirtualInterfacesVirtualInterfaceInput interface {
	pulumi.Input

	ToVirtualInterfacesVirtualInterfaceOutput() VirtualInterfacesVirtualInterfaceOutput
	ToVirtualInterfacesVirtualInterfaceOutputWithContext(context.Context) VirtualInterfacesVirtualInterfaceOutput
}

type VirtualInterfacesVirtualInterfaceArgs struct {
	// The account ID which this virtual interface belongs.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The band width limit of virtual interface,in Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The BFD detect interval.
	BfdDetectInterval pulumi.IntInput `pulumi:"bfdDetectInterval"`
	// The BFD detect times.
	BfdDetectMultiplier pulumi.IntInput `pulumi:"bfdDetectMultiplier"`
	// The creation time of virtual interface.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the virtual interface.
	Description pulumi.StringInput `pulumi:"description"`
	// The direct connect connection ID that associated with this virtual interface.
	DirectConnectConnectionId pulumi.StringInput `pulumi:"directConnectConnectionId"`
	// The direct connect gateway ID that associated with this virtual interface.
	DirectConnectGatewayId pulumi.StringInput `pulumi:"directConnectGatewayId"`
	// Whether enable BFD detect.
	EnableBfd pulumi.BoolInput `pulumi:"enableBfd"`
	// Whether enable NQA detect.
	EnableNqa pulumi.BoolInput `pulumi:"enableNqa"`
	// The local IP that associated with this virtual interface.
	LocalIp pulumi.StringInput `pulumi:"localIp"`
	// The NQA detect interval.
	NqaDetectInterval pulumi.IntInput `pulumi:"nqaDetectInterval"`
	// The NAQ detect times.
	NqaDetectMultiplier pulumi.IntInput `pulumi:"nqaDetectMultiplier"`
	// The peer IP that associated with this virtual interface.
	PeerIp pulumi.StringInput `pulumi:"peerIp"`
	// The route type of virtual interface.
	RouteType pulumi.StringInput `pulumi:"routeType"`
	// The status of virtaul interface.
	Status pulumi.StringInput `pulumi:"status"`
	// The tags that direct connect gateway added.
	Tags VirtualInterfacesVirtualInterfaceTagArrayInput `pulumi:"tags"`
	// The update time of virtual interface.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The virtual interface ID.
	VirtualInterfaceId pulumi.StringInput `pulumi:"virtualInterfaceId"`
	// The name of virtual interface.
	VirtualInterfaceName pulumi.StringInput `pulumi:"virtualInterfaceName"`
	// The VLAN ID of virtual interface.
	VlanId pulumi.IntInput `pulumi:"vlanId"`
}

func (VirtualInterfacesVirtualInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualInterfacesVirtualInterface)(nil)).Elem()
}

func (i VirtualInterfacesVirtualInterfaceArgs) ToVirtualInterfacesVirtualInterfaceOutput() VirtualInterfacesVirtualInterfaceOutput {
	return i.ToVirtualInterfacesVirtualInterfaceOutputWithContext(context.Background())
}

func (i VirtualInterfacesVirtualInterfaceArgs) ToVirtualInterfacesVirtualInterfaceOutputWithContext(ctx context.Context) VirtualInterfacesVirtualInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualInterfacesVirtualInterfaceOutput)
}

// VirtualInterfacesVirtualInterfaceArrayInput is an input type that accepts VirtualInterfacesVirtualInterfaceArray and VirtualInterfacesVirtualInterfaceArrayOutput values.
// You can construct a concrete instance of `VirtualInterfacesVirtualInterfaceArrayInput` via:
//
//	VirtualInterfacesVirtualInterfaceArray{ VirtualInterfacesVirtualInterfaceArgs{...} }
type VirtualInterfacesVirtualInterfaceArrayInput interface {
	pulumi.Input

	ToVirtualInterfacesVirtualInterfaceArrayOutput() VirtualInterfacesVirtualInterfaceArrayOutput
	ToVirtualInterfacesVirtualInterfaceArrayOutputWithContext(context.Context) VirtualInterfacesVirtualInterfaceArrayOutput
}

type VirtualInterfacesVirtualInterfaceArray []VirtualInterfacesVirtualInterfaceInput

func (VirtualInterfacesVirtualInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualInterfacesVirtualInterface)(nil)).Elem()
}

func (i VirtualInterfacesVirtualInterfaceArray) ToVirtualInterfacesVirtualInterfaceArrayOutput() VirtualInterfacesVirtualInterfaceArrayOutput {
	return i.ToVirtualInterfacesVirtualInterfaceArrayOutputWithContext(context.Background())
}

func (i VirtualInterfacesVirtualInterfaceArray) ToVirtualInterfacesVirtualInterfaceArrayOutputWithContext(ctx context.Context) VirtualInterfacesVirtualInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualInterfacesVirtualInterfaceArrayOutput)
}

type VirtualInterfacesVirtualInterfaceOutput struct{ *pulumi.OutputState }

func (VirtualInterfacesVirtualInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualInterfacesVirtualInterface)(nil)).Elem()
}

func (o VirtualInterfacesVirtualInterfaceOutput) ToVirtualInterfacesVirtualInterfaceOutput() VirtualInterfacesVirtualInterfaceOutput {
	return o
}

func (o VirtualInterfacesVirtualInterfaceOutput) ToVirtualInterfacesVirtualInterfaceOutputWithContext(ctx context.Context) VirtualInterfacesVirtualInterfaceOutput {
	return o
}

// The account ID which this virtual interface belongs.
func (o VirtualInterfacesVirtualInterfaceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.AccountId }).(pulumi.StringOutput)
}

// The band width limit of virtual interface,in Mbps.
func (o VirtualInterfacesVirtualInterfaceOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The BFD detect interval.
func (o VirtualInterfacesVirtualInterfaceOutput) BfdDetectInterval() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) int { return v.BfdDetectInterval }).(pulumi.IntOutput)
}

// The BFD detect times.
func (o VirtualInterfacesVirtualInterfaceOutput) BfdDetectMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) int { return v.BfdDetectMultiplier }).(pulumi.IntOutput)
}

// The creation time of virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.Description }).(pulumi.StringOutput)
}

// The direct connect connection ID that associated with this virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) DirectConnectConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.DirectConnectConnectionId }).(pulumi.StringOutput)
}

// The direct connect gateway ID that associated with this virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) DirectConnectGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.DirectConnectGatewayId }).(pulumi.StringOutput)
}

// Whether enable BFD detect.
func (o VirtualInterfacesVirtualInterfaceOutput) EnableBfd() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) bool { return v.EnableBfd }).(pulumi.BoolOutput)
}

// Whether enable NQA detect.
func (o VirtualInterfacesVirtualInterfaceOutput) EnableNqa() pulumi.BoolOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) bool { return v.EnableNqa }).(pulumi.BoolOutput)
}

// The local IP that associated with this virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) LocalIp() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.LocalIp }).(pulumi.StringOutput)
}

// The NQA detect interval.
func (o VirtualInterfacesVirtualInterfaceOutput) NqaDetectInterval() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) int { return v.NqaDetectInterval }).(pulumi.IntOutput)
}

// The NAQ detect times.
func (o VirtualInterfacesVirtualInterfaceOutput) NqaDetectMultiplier() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) int { return v.NqaDetectMultiplier }).(pulumi.IntOutput)
}

// The peer IP that associated with this virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) PeerIp() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.PeerIp }).(pulumi.StringOutput)
}

// The route type of virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.RouteType }).(pulumi.StringOutput)
}

// The status of virtaul interface.
func (o VirtualInterfacesVirtualInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.Status }).(pulumi.StringOutput)
}

// The tags that direct connect gateway added.
func (o VirtualInterfacesVirtualInterfaceOutput) Tags() VirtualInterfacesVirtualInterfaceTagArrayOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) []VirtualInterfacesVirtualInterfaceTag { return v.Tags }).(VirtualInterfacesVirtualInterfaceTagArrayOutput)
}

// The update time of virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The virtual interface ID.
func (o VirtualInterfacesVirtualInterfaceOutput) VirtualInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.VirtualInterfaceId }).(pulumi.StringOutput)
}

// The name of virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) VirtualInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) string { return v.VirtualInterfaceName }).(pulumi.StringOutput)
}

// The VLAN ID of virtual interface.
func (o VirtualInterfacesVirtualInterfaceOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterface) int { return v.VlanId }).(pulumi.IntOutput)
}

type VirtualInterfacesVirtualInterfaceArrayOutput struct{ *pulumi.OutputState }

func (VirtualInterfacesVirtualInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualInterfacesVirtualInterface)(nil)).Elem()
}

func (o VirtualInterfacesVirtualInterfaceArrayOutput) ToVirtualInterfacesVirtualInterfaceArrayOutput() VirtualInterfacesVirtualInterfaceArrayOutput {
	return o
}

func (o VirtualInterfacesVirtualInterfaceArrayOutput) ToVirtualInterfacesVirtualInterfaceArrayOutputWithContext(ctx context.Context) VirtualInterfacesVirtualInterfaceArrayOutput {
	return o
}

func (o VirtualInterfacesVirtualInterfaceArrayOutput) Index(i pulumi.IntInput) VirtualInterfacesVirtualInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualInterfacesVirtualInterface {
		return vs[0].([]VirtualInterfacesVirtualInterface)[vs[1].(int)]
	}).(VirtualInterfacesVirtualInterfaceOutput)
}

type VirtualInterfacesVirtualInterfaceTag struct {
	// The tag key of cloud resource instance.
	Key string `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value string `pulumi:"value"`
}

// VirtualInterfacesVirtualInterfaceTagInput is an input type that accepts VirtualInterfacesVirtualInterfaceTagArgs and VirtualInterfacesVirtualInterfaceTagOutput values.
// You can construct a concrete instance of `VirtualInterfacesVirtualInterfaceTagInput` via:
//
//	VirtualInterfacesVirtualInterfaceTagArgs{...}
type VirtualInterfacesVirtualInterfaceTagInput interface {
	pulumi.Input

	ToVirtualInterfacesVirtualInterfaceTagOutput() VirtualInterfacesVirtualInterfaceTagOutput
	ToVirtualInterfacesVirtualInterfaceTagOutputWithContext(context.Context) VirtualInterfacesVirtualInterfaceTagOutput
}

type VirtualInterfacesVirtualInterfaceTagArgs struct {
	// The tag key of cloud resource instance.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag value of cloud resource instance.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualInterfacesVirtualInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualInterfacesVirtualInterfaceTag)(nil)).Elem()
}

func (i VirtualInterfacesVirtualInterfaceTagArgs) ToVirtualInterfacesVirtualInterfaceTagOutput() VirtualInterfacesVirtualInterfaceTagOutput {
	return i.ToVirtualInterfacesVirtualInterfaceTagOutputWithContext(context.Background())
}

func (i VirtualInterfacesVirtualInterfaceTagArgs) ToVirtualInterfacesVirtualInterfaceTagOutputWithContext(ctx context.Context) VirtualInterfacesVirtualInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualInterfacesVirtualInterfaceTagOutput)
}

// VirtualInterfacesVirtualInterfaceTagArrayInput is an input type that accepts VirtualInterfacesVirtualInterfaceTagArray and VirtualInterfacesVirtualInterfaceTagArrayOutput values.
// You can construct a concrete instance of `VirtualInterfacesVirtualInterfaceTagArrayInput` via:
//
//	VirtualInterfacesVirtualInterfaceTagArray{ VirtualInterfacesVirtualInterfaceTagArgs{...} }
type VirtualInterfacesVirtualInterfaceTagArrayInput interface {
	pulumi.Input

	ToVirtualInterfacesVirtualInterfaceTagArrayOutput() VirtualInterfacesVirtualInterfaceTagArrayOutput
	ToVirtualInterfacesVirtualInterfaceTagArrayOutputWithContext(context.Context) VirtualInterfacesVirtualInterfaceTagArrayOutput
}

type VirtualInterfacesVirtualInterfaceTagArray []VirtualInterfacesVirtualInterfaceTagInput

func (VirtualInterfacesVirtualInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualInterfacesVirtualInterfaceTag)(nil)).Elem()
}

func (i VirtualInterfacesVirtualInterfaceTagArray) ToVirtualInterfacesVirtualInterfaceTagArrayOutput() VirtualInterfacesVirtualInterfaceTagArrayOutput {
	return i.ToVirtualInterfacesVirtualInterfaceTagArrayOutputWithContext(context.Background())
}

func (i VirtualInterfacesVirtualInterfaceTagArray) ToVirtualInterfacesVirtualInterfaceTagArrayOutputWithContext(ctx context.Context) VirtualInterfacesVirtualInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualInterfacesVirtualInterfaceTagArrayOutput)
}

type VirtualInterfacesVirtualInterfaceTagOutput struct{ *pulumi.OutputState }

func (VirtualInterfacesVirtualInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualInterfacesVirtualInterfaceTag)(nil)).Elem()
}

func (o VirtualInterfacesVirtualInterfaceTagOutput) ToVirtualInterfacesVirtualInterfaceTagOutput() VirtualInterfacesVirtualInterfaceTagOutput {
	return o
}

func (o VirtualInterfacesVirtualInterfaceTagOutput) ToVirtualInterfacesVirtualInterfaceTagOutputWithContext(ctx context.Context) VirtualInterfacesVirtualInterfaceTagOutput {
	return o
}

// The tag key of cloud resource instance.
func (o VirtualInterfacesVirtualInterfaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterfaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag value of cloud resource instance.
func (o VirtualInterfacesVirtualInterfaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualInterfacesVirtualInterfaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualInterfacesVirtualInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (VirtualInterfacesVirtualInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualInterfacesVirtualInterfaceTag)(nil)).Elem()
}

func (o VirtualInterfacesVirtualInterfaceTagArrayOutput) ToVirtualInterfacesVirtualInterfaceTagArrayOutput() VirtualInterfacesVirtualInterfaceTagArrayOutput {
	return o
}

func (o VirtualInterfacesVirtualInterfaceTagArrayOutput) ToVirtualInterfacesVirtualInterfaceTagArrayOutputWithContext(ctx context.Context) VirtualInterfacesVirtualInterfaceTagArrayOutput {
	return o
}

func (o VirtualInterfacesVirtualInterfaceTagArrayOutput) Index(i pulumi.IntInput) VirtualInterfacesVirtualInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualInterfacesVirtualInterfaceTag {
		return vs[0].([]VirtualInterfacesVirtualInterfaceTag)[vs[1].(int)]
	}).(VirtualInterfacesVirtualInterfaceTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeersBgpPeerInput)(nil)).Elem(), BgpPeersBgpPeerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeersBgpPeerArrayInput)(nil)).Elem(), BgpPeersBgpPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTagInput)(nil)).Elem(), ConnectionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTagArrayInput)(nil)).Elem(), ConnectionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionsDirectConnectConnectionInput)(nil)).Elem(), ConnectionsDirectConnectConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionsDirectConnectConnectionArrayInput)(nil)).Elem(), ConnectionsDirectConnectConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionsDirectConnectConnectionTagInput)(nil)).Elem(), ConnectionsDirectConnectConnectionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionsDirectConnectConnectionTagArrayInput)(nil)).Elem(), ConnectionsDirectConnectConnectionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionsTagFilterInput)(nil)).Elem(), ConnectionsTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionsTagFilterArrayInput)(nil)).Elem(), ConnectionsTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutesDirectConnectGatewayRouteInput)(nil)).Elem(), GatewayRoutesDirectConnectGatewayRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRoutesDirectConnectGatewayRouteArrayInput)(nil)).Elem(), GatewayRoutesDirectConnectGatewayRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTagInput)(nil)).Elem(), GatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayTagArrayInput)(nil)).Elem(), GatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysDirectConnectGatewayInput)(nil)).Elem(), GatewaysDirectConnectGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysDirectConnectGatewayArrayInput)(nil)).Elem(), GatewaysDirectConnectGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysDirectConnectGatewayAssociateCenInput)(nil)).Elem(), GatewaysDirectConnectGatewayAssociateCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysDirectConnectGatewayAssociateCenArrayInput)(nil)).Elem(), GatewaysDirectConnectGatewayAssociateCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysDirectConnectGatewayTagInput)(nil)).Elem(), GatewaysDirectConnectGatewayTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysDirectConnectGatewayTagArrayInput)(nil)).Elem(), GatewaysDirectConnectGatewayTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysTagFilterInput)(nil)).Elem(), GatewaysTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewaysTagFilterArrayInput)(nil)).Elem(), GatewaysTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualInterfaceTagInput)(nil)).Elem(), VirtualInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualInterfaceTagArrayInput)(nil)).Elem(), VirtualInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualInterfacesTagFilterInput)(nil)).Elem(), VirtualInterfacesTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualInterfacesTagFilterArrayInput)(nil)).Elem(), VirtualInterfacesTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualInterfacesVirtualInterfaceInput)(nil)).Elem(), VirtualInterfacesVirtualInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualInterfacesVirtualInterfaceArrayInput)(nil)).Elem(), VirtualInterfacesVirtualInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualInterfacesVirtualInterfaceTagInput)(nil)).Elem(), VirtualInterfacesVirtualInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualInterfacesVirtualInterfaceTagArrayInput)(nil)).Elem(), VirtualInterfacesVirtualInterfaceTagArray{})
	pulumi.RegisterOutputType(BgpPeersBgpPeerOutput{})
	pulumi.RegisterOutputType(BgpPeersBgpPeerArrayOutput{})
	pulumi.RegisterOutputType(ConnectionTagOutput{})
	pulumi.RegisterOutputType(ConnectionTagArrayOutput{})
	pulumi.RegisterOutputType(ConnectionsDirectConnectConnectionOutput{})
	pulumi.RegisterOutputType(ConnectionsDirectConnectConnectionArrayOutput{})
	pulumi.RegisterOutputType(ConnectionsDirectConnectConnectionTagOutput{})
	pulumi.RegisterOutputType(ConnectionsDirectConnectConnectionTagArrayOutput{})
	pulumi.RegisterOutputType(ConnectionsTagFilterOutput{})
	pulumi.RegisterOutputType(ConnectionsTagFilterArrayOutput{})
	pulumi.RegisterOutputType(GatewayRoutesDirectConnectGatewayRouteOutput{})
	pulumi.RegisterOutputType(GatewayRoutesDirectConnectGatewayRouteArrayOutput{})
	pulumi.RegisterOutputType(GatewayTagOutput{})
	pulumi.RegisterOutputType(GatewayTagArrayOutput{})
	pulumi.RegisterOutputType(GatewaysDirectConnectGatewayOutput{})
	pulumi.RegisterOutputType(GatewaysDirectConnectGatewayArrayOutput{})
	pulumi.RegisterOutputType(GatewaysDirectConnectGatewayAssociateCenOutput{})
	pulumi.RegisterOutputType(GatewaysDirectConnectGatewayAssociateCenArrayOutput{})
	pulumi.RegisterOutputType(GatewaysDirectConnectGatewayTagOutput{})
	pulumi.RegisterOutputType(GatewaysDirectConnectGatewayTagArrayOutput{})
	pulumi.RegisterOutputType(GatewaysTagFilterOutput{})
	pulumi.RegisterOutputType(GatewaysTagFilterArrayOutput{})
	pulumi.RegisterOutputType(VirtualInterfaceTagOutput{})
	pulumi.RegisterOutputType(VirtualInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(VirtualInterfacesTagFilterOutput{})
	pulumi.RegisterOutputType(VirtualInterfacesTagFilterArrayOutput{})
	pulumi.RegisterOutputType(VirtualInterfacesVirtualInterfaceOutput{})
	pulumi.RegisterOutputType(VirtualInterfacesVirtualInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VirtualInterfacesVirtualInterfaceTagOutput{})
	pulumi.RegisterOutputType(VirtualInterfacesVirtualInterfaceTagArrayOutput{})
}
