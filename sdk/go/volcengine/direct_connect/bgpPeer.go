// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package direct_connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage direct connect bgp peer
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/direct_connect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := direct_connect.NewBgpPeer(ctx, "foo", &direct_connect.BgpPeerArgs{
//				Description:        pulumi.String("tf-test"),
//				RemoteAsn:          pulumi.Int(2000),
//				VirtualInterfaceId: pulumi.String("dcv-62vi13v131tsn3gd6il****"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DirectConnectBgpPeer can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:direct_connect/bgpPeer:BgpPeer default bgp-2752hz4teko3k7fap8u4c****
// ```
type BgpPeer struct {
	pulumi.CustomResourceState

	// The id of account.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The auth key of bgp peer.
	AuthKey pulumi.StringPtrOutput `pulumi:"authKey"`
	// The id of bgp peer.
	BgpPeerId pulumi.StringOutput `pulumi:"bgpPeerId"`
	// The name of bgp peer.
	BgpPeerName pulumi.StringOutput `pulumi:"bgpPeerName"`
	// The create time of bgp peer.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The description of bgp peer.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The local asn of bgp peer.
	LocalAsn pulumi.IntOutput `pulumi:"localAsn"`
	// The remote asn of bgp peer.
	RemoteAsn pulumi.IntOutput `pulumi:"remoteAsn"`
	// The session status of bgp peer.
	SessionStatus pulumi.StringOutput `pulumi:"sessionStatus"`
	// The status of bgp peer.
	Status pulumi.StringOutput `pulumi:"status"`
	// The update time of bgp peer.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The id of virtual interface.
	VirtualInterfaceId pulumi.StringOutput `pulumi:"virtualInterfaceId"`
}

// NewBgpPeer registers a new resource with the given unique name, arguments, and options.
func NewBgpPeer(ctx *pulumi.Context,
	name string, args *BgpPeerArgs, opts ...pulumi.ResourceOption) (*BgpPeer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RemoteAsn == nil {
		return nil, errors.New("invalid value for required argument 'RemoteAsn'")
	}
	if args.VirtualInterfaceId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualInterfaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BgpPeer
	err := ctx.RegisterResource("volcengine:direct_connect/bgpPeer:BgpPeer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBgpPeer gets an existing BgpPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBgpPeer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BgpPeerState, opts ...pulumi.ResourceOption) (*BgpPeer, error) {
	var resource BgpPeer
	err := ctx.ReadResource("volcengine:direct_connect/bgpPeer:BgpPeer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BgpPeer resources.
type bgpPeerState struct {
	// The id of account.
	AccountId *string `pulumi:"accountId"`
	// The auth key of bgp peer.
	AuthKey *string `pulumi:"authKey"`
	// The id of bgp peer.
	BgpPeerId *string `pulumi:"bgpPeerId"`
	// The name of bgp peer.
	BgpPeerName *string `pulumi:"bgpPeerName"`
	// The create time of bgp peer.
	CreationTime *string `pulumi:"creationTime"`
	// The description of bgp peer.
	Description *string `pulumi:"description"`
	// The local asn of bgp peer.
	LocalAsn *int `pulumi:"localAsn"`
	// The remote asn of bgp peer.
	RemoteAsn *int `pulumi:"remoteAsn"`
	// The session status of bgp peer.
	SessionStatus *string `pulumi:"sessionStatus"`
	// The status of bgp peer.
	Status *string `pulumi:"status"`
	// The update time of bgp peer.
	UpdateTime *string `pulumi:"updateTime"`
	// The id of virtual interface.
	VirtualInterfaceId *string `pulumi:"virtualInterfaceId"`
}

type BgpPeerState struct {
	// The id of account.
	AccountId pulumi.StringPtrInput
	// The auth key of bgp peer.
	AuthKey pulumi.StringPtrInput
	// The id of bgp peer.
	BgpPeerId pulumi.StringPtrInput
	// The name of bgp peer.
	BgpPeerName pulumi.StringPtrInput
	// The create time of bgp peer.
	CreationTime pulumi.StringPtrInput
	// The description of bgp peer.
	Description pulumi.StringPtrInput
	// The local asn of bgp peer.
	LocalAsn pulumi.IntPtrInput
	// The remote asn of bgp peer.
	RemoteAsn pulumi.IntPtrInput
	// The session status of bgp peer.
	SessionStatus pulumi.StringPtrInput
	// The status of bgp peer.
	Status pulumi.StringPtrInput
	// The update time of bgp peer.
	UpdateTime pulumi.StringPtrInput
	// The id of virtual interface.
	VirtualInterfaceId pulumi.StringPtrInput
}

func (BgpPeerState) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpPeerState)(nil)).Elem()
}

type bgpPeerArgs struct {
	// The auth key of bgp peer.
	AuthKey *string `pulumi:"authKey"`
	// The name of bgp peer.
	BgpPeerName *string `pulumi:"bgpPeerName"`
	// The description of bgp peer.
	Description *string `pulumi:"description"`
	// The remote asn of bgp peer.
	RemoteAsn int `pulumi:"remoteAsn"`
	// The id of virtual interface.
	VirtualInterfaceId string `pulumi:"virtualInterfaceId"`
}

// The set of arguments for constructing a BgpPeer resource.
type BgpPeerArgs struct {
	// The auth key of bgp peer.
	AuthKey pulumi.StringPtrInput
	// The name of bgp peer.
	BgpPeerName pulumi.StringPtrInput
	// The description of bgp peer.
	Description pulumi.StringPtrInput
	// The remote asn of bgp peer.
	RemoteAsn pulumi.IntInput
	// The id of virtual interface.
	VirtualInterfaceId pulumi.StringInput
}

func (BgpPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bgpPeerArgs)(nil)).Elem()
}

type BgpPeerInput interface {
	pulumi.Input

	ToBgpPeerOutput() BgpPeerOutput
	ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput
}

func (*BgpPeer) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpPeer)(nil)).Elem()
}

func (i *BgpPeer) ToBgpPeerOutput() BgpPeerOutput {
	return i.ToBgpPeerOutputWithContext(context.Background())
}

func (i *BgpPeer) ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerOutput)
}

// BgpPeerArrayInput is an input type that accepts BgpPeerArray and BgpPeerArrayOutput values.
// You can construct a concrete instance of `BgpPeerArrayInput` via:
//
//	BgpPeerArray{ BgpPeerArgs{...} }
type BgpPeerArrayInput interface {
	pulumi.Input

	ToBgpPeerArrayOutput() BgpPeerArrayOutput
	ToBgpPeerArrayOutputWithContext(context.Context) BgpPeerArrayOutput
}

type BgpPeerArray []BgpPeerInput

func (BgpPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpPeer)(nil)).Elem()
}

func (i BgpPeerArray) ToBgpPeerArrayOutput() BgpPeerArrayOutput {
	return i.ToBgpPeerArrayOutputWithContext(context.Background())
}

func (i BgpPeerArray) ToBgpPeerArrayOutputWithContext(ctx context.Context) BgpPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerArrayOutput)
}

// BgpPeerMapInput is an input type that accepts BgpPeerMap and BgpPeerMapOutput values.
// You can construct a concrete instance of `BgpPeerMapInput` via:
//
//	BgpPeerMap{ "key": BgpPeerArgs{...} }
type BgpPeerMapInput interface {
	pulumi.Input

	ToBgpPeerMapOutput() BgpPeerMapOutput
	ToBgpPeerMapOutputWithContext(context.Context) BgpPeerMapOutput
}

type BgpPeerMap map[string]BgpPeerInput

func (BgpPeerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpPeer)(nil)).Elem()
}

func (i BgpPeerMap) ToBgpPeerMapOutput() BgpPeerMapOutput {
	return i.ToBgpPeerMapOutputWithContext(context.Background())
}

func (i BgpPeerMap) ToBgpPeerMapOutputWithContext(ctx context.Context) BgpPeerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerMapOutput)
}

type BgpPeerOutput struct{ *pulumi.OutputState }

func (BgpPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpPeer)(nil)).Elem()
}

func (o BgpPeerOutput) ToBgpPeerOutput() BgpPeerOutput {
	return o
}

func (o BgpPeerOutput) ToBgpPeerOutputWithContext(ctx context.Context) BgpPeerOutput {
	return o
}

// The id of account.
func (o BgpPeerOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The auth key of bgp peer.
func (o BgpPeerOutput) AuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringPtrOutput { return v.AuthKey }).(pulumi.StringPtrOutput)
}

// The id of bgp peer.
func (o BgpPeerOutput) BgpPeerId() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.BgpPeerId }).(pulumi.StringOutput)
}

// The name of bgp peer.
func (o BgpPeerOutput) BgpPeerName() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.BgpPeerName }).(pulumi.StringOutput)
}

// The create time of bgp peer.
func (o BgpPeerOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of bgp peer.
func (o BgpPeerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The local asn of bgp peer.
func (o BgpPeerOutput) LocalAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.IntOutput { return v.LocalAsn }).(pulumi.IntOutput)
}

// The remote asn of bgp peer.
func (o BgpPeerOutput) RemoteAsn() pulumi.IntOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.IntOutput { return v.RemoteAsn }).(pulumi.IntOutput)
}

// The session status of bgp peer.
func (o BgpPeerOutput) SessionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.SessionStatus }).(pulumi.StringOutput)
}

// The status of bgp peer.
func (o BgpPeerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The update time of bgp peer.
func (o BgpPeerOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of virtual interface.
func (o BgpPeerOutput) VirtualInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BgpPeer) pulumi.StringOutput { return v.VirtualInterfaceId }).(pulumi.StringOutput)
}

type BgpPeerArrayOutput struct{ *pulumi.OutputState }

func (BgpPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BgpPeer)(nil)).Elem()
}

func (o BgpPeerArrayOutput) ToBgpPeerArrayOutput() BgpPeerArrayOutput {
	return o
}

func (o BgpPeerArrayOutput) ToBgpPeerArrayOutputWithContext(ctx context.Context) BgpPeerArrayOutput {
	return o
}

func (o BgpPeerArrayOutput) Index(i pulumi.IntInput) BgpPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BgpPeer {
		return vs[0].([]*BgpPeer)[vs[1].(int)]
	}).(BgpPeerOutput)
}

type BgpPeerMapOutput struct{ *pulumi.OutputState }

func (BgpPeerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BgpPeer)(nil)).Elem()
}

func (o BgpPeerMapOutput) ToBgpPeerMapOutput() BgpPeerMapOutput {
	return o
}

func (o BgpPeerMapOutput) ToBgpPeerMapOutputWithContext(ctx context.Context) BgpPeerMapOutput {
	return o
}

func (o BgpPeerMapOutput) MapIndex(k pulumi.StringInput) BgpPeerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BgpPeer {
		return vs[0].(map[string]*BgpPeer)[vs[1].(string)]
	}).(BgpPeerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerInput)(nil)).Elem(), &BgpPeer{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerArrayInput)(nil)).Elem(), BgpPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BgpPeerMapInput)(nil)).Elem(), BgpPeerMap{})
	pulumi.RegisterOutputType(BgpPeerOutput{})
	pulumi.RegisterOutputType(BgpPeerArrayOutput{})
	pulumi.RegisterOutputType(BgpPeerMapOutput{})
}
