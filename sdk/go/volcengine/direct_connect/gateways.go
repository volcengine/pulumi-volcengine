// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package direct_connect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of direct connect gateways
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/direct_connect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := direct_connect.GetGateways(ctx, &direct_connect.GetGatewaysArgs{
//				DirectConnectGatewayName: pulumi.StringRef("tf-test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.direct_connect.Gateways has been deprecated in favor of volcengine.direct_connect.getGateways
func Gateways(ctx *pulumi.Context, args *GatewaysArgs, opts ...pulumi.InvokeOption) (*GatewaysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GatewaysResult
	err := ctx.Invoke("volcengine:direct_connect/gateways:Gateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Gateways.
type GatewaysArgs struct {
	// The CEN ID which direct connect gateway belongs.
	CenId *string `pulumi:"cenId"`
	// The direst connect gateway name.
	DirectConnectGatewayName *string `pulumi:"directConnectGatewayName"`
	// A list of IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The filter tag of direct connect.
	TagFilters []GatewaysTagFilter `pulumi:"tagFilters"`
}

// A collection of values returned by Gateways.
type GatewaysResult struct {
	// The cen ID.
	CenId *string `pulumi:"cenId"`
	// The direct connect gateway name.
	DirectConnectGatewayName *string `pulumi:"directConnectGatewayName"`
	// The collection of query.
	DirectConnectGateways []GatewaysDirectConnectGateway `pulumi:"directConnectGateways"`
	// The provider-assigned unique ID for this managed resource.
	Id         string              `pulumi:"id"`
	Ids        []string            `pulumi:"ids"`
	NameRegex  *string             `pulumi:"nameRegex"`
	OutputFile *string             `pulumi:"outputFile"`
	TagFilters []GatewaysTagFilter `pulumi:"tagFilters"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GatewaysOutput(ctx *pulumi.Context, args GatewaysOutputArgs, opts ...pulumi.InvokeOption) GatewaysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GatewaysResult, error) {
			args := v.(GatewaysArgs)
			r, err := Gateways(ctx, &args, opts...)
			var s GatewaysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GatewaysResultOutput)
}

// A collection of arguments for invoking Gateways.
type GatewaysOutputArgs struct {
	// The CEN ID which direct connect gateway belongs.
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// The direst connect gateway name.
	DirectConnectGatewayName pulumi.StringPtrInput `pulumi:"directConnectGatewayName"`
	// A list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The filter tag of direct connect.
	TagFilters GatewaysTagFilterArrayInput `pulumi:"tagFilters"`
}

func (GatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysArgs)(nil)).Elem()
}

// A collection of values returned by Gateways.
type GatewaysResultOutput struct{ *pulumi.OutputState }

func (GatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewaysResult)(nil)).Elem()
}

func (o GatewaysResultOutput) ToGatewaysResultOutput() GatewaysResultOutput {
	return o
}

func (o GatewaysResultOutput) ToGatewaysResultOutputWithContext(ctx context.Context) GatewaysResultOutput {
	return o
}

// The cen ID.
func (o GatewaysResultOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysResult) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// The direct connect gateway name.
func (o GatewaysResultOutput) DirectConnectGatewayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysResult) *string { return v.DirectConnectGatewayName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GatewaysResultOutput) DirectConnectGateways() GatewaysDirectConnectGatewayArrayOutput {
	return o.ApplyT(func(v GatewaysResult) []GatewaysDirectConnectGateway { return v.DirectConnectGateways }).(GatewaysDirectConnectGatewayArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GatewaysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GatewaysResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GatewaysResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewaysResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GatewaysResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GatewaysResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewaysResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GatewaysResultOutput) TagFilters() GatewaysTagFilterArrayOutput {
	return o.ApplyT(func(v GatewaysResult) []GatewaysTagFilter { return v.TagFilters }).(GatewaysTagFilterArrayOutput)
}

// The total count of query.
func (o GatewaysResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GatewaysResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GatewaysResultOutput{})
}
