// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package direct_connect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage direct connect gateway route
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/direct_connect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := direct_connect.NewGatewayRoute(ctx, "foo", &direct_connect.GatewayRouteArgs{
//				DestinationCidrBlock:   pulumi.String("192.168.40.0/24"),
//				DirectConnectGatewayId: pulumi.String("dcg-172frxs5utjb44d1w33op****"),
//				NextHopId:              pulumi.String("dcv-1729lrbfx7fuo4d1w34pk****"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// DirectConnectGatewayRoute can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:direct_connect/gatewayRoute:GatewayRoute default resource_id
//
// ```
type GatewayRoute struct {
	pulumi.CustomResourceState

	// The id of account.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The create time.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The cidr block.
	DestinationCidrBlock pulumi.StringOutput `pulumi:"destinationCidrBlock"`
	// The id of direct connect gateway.
	DirectConnectGatewayId pulumi.StringOutput `pulumi:"directConnectGatewayId"`
	// The id of direct connect gateway route.
	DirectConnectGatewayRouteId pulumi.StringOutput `pulumi:"directConnectGatewayRouteId"`
	// The id of next hop.
	NextHopId pulumi.StringOutput `pulumi:"nextHopId"`
	// The type of next hop.
	NextHopType pulumi.StringOutput `pulumi:"nextHopType"`
	// The type of route.
	RouteType pulumi.StringOutput `pulumi:"routeType"`
	// The status info.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewGatewayRoute registers a new resource with the given unique name, arguments, and options.
func NewGatewayRoute(ctx *pulumi.Context,
	name string, args *GatewayRouteArgs, opts ...pulumi.ResourceOption) (*GatewayRoute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationCidrBlock == nil {
		return nil, errors.New("invalid value for required argument 'DestinationCidrBlock'")
	}
	if args.DirectConnectGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'DirectConnectGatewayId'")
	}
	if args.NextHopId == nil {
		return nil, errors.New("invalid value for required argument 'NextHopId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayRoute
	err := ctx.RegisterResource("volcengine:direct_connect/gatewayRoute:GatewayRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayRoute gets an existing GatewayRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayRouteState, opts ...pulumi.ResourceOption) (*GatewayRoute, error) {
	var resource GatewayRoute
	err := ctx.ReadResource("volcengine:direct_connect/gatewayRoute:GatewayRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayRoute resources.
type gatewayRouteState struct {
	// The id of account.
	AccountId *string `pulumi:"accountId"`
	// The create time.
	CreationTime *string `pulumi:"creationTime"`
	// The cidr block.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// The id of direct connect gateway.
	DirectConnectGatewayId *string `pulumi:"directConnectGatewayId"`
	// The id of direct connect gateway route.
	DirectConnectGatewayRouteId *string `pulumi:"directConnectGatewayRouteId"`
	// The id of next hop.
	NextHopId *string `pulumi:"nextHopId"`
	// The type of next hop.
	NextHopType *string `pulumi:"nextHopType"`
	// The type of route.
	RouteType *string `pulumi:"routeType"`
	// The status info.
	Status *string `pulumi:"status"`
}

type GatewayRouteState struct {
	// The id of account.
	AccountId pulumi.StringPtrInput
	// The create time.
	CreationTime pulumi.StringPtrInput
	// The cidr block.
	DestinationCidrBlock pulumi.StringPtrInput
	// The id of direct connect gateway.
	DirectConnectGatewayId pulumi.StringPtrInput
	// The id of direct connect gateway route.
	DirectConnectGatewayRouteId pulumi.StringPtrInput
	// The id of next hop.
	NextHopId pulumi.StringPtrInput
	// The type of next hop.
	NextHopType pulumi.StringPtrInput
	// The type of route.
	RouteType pulumi.StringPtrInput
	// The status info.
	Status pulumi.StringPtrInput
}

func (GatewayRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayRouteState)(nil)).Elem()
}

type gatewayRouteArgs struct {
	// The cidr block.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The id of direct connect gateway.
	DirectConnectGatewayId string `pulumi:"directConnectGatewayId"`
	// The id of next hop.
	NextHopId string `pulumi:"nextHopId"`
}

// The set of arguments for constructing a GatewayRoute resource.
type GatewayRouteArgs struct {
	// The cidr block.
	DestinationCidrBlock pulumi.StringInput
	// The id of direct connect gateway.
	DirectConnectGatewayId pulumi.StringInput
	// The id of next hop.
	NextHopId pulumi.StringInput
}

func (GatewayRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayRouteArgs)(nil)).Elem()
}

type GatewayRouteInput interface {
	pulumi.Input

	ToGatewayRouteOutput() GatewayRouteOutput
	ToGatewayRouteOutputWithContext(ctx context.Context) GatewayRouteOutput
}

func (*GatewayRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoute)(nil)).Elem()
}

func (i *GatewayRoute) ToGatewayRouteOutput() GatewayRouteOutput {
	return i.ToGatewayRouteOutputWithContext(context.Background())
}

func (i *GatewayRoute) ToGatewayRouteOutputWithContext(ctx context.Context) GatewayRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteOutput)
}

// GatewayRouteArrayInput is an input type that accepts GatewayRouteArray and GatewayRouteArrayOutput values.
// You can construct a concrete instance of `GatewayRouteArrayInput` via:
//
//	GatewayRouteArray{ GatewayRouteArgs{...} }
type GatewayRouteArrayInput interface {
	pulumi.Input

	ToGatewayRouteArrayOutput() GatewayRouteArrayOutput
	ToGatewayRouteArrayOutputWithContext(context.Context) GatewayRouteArrayOutput
}

type GatewayRouteArray []GatewayRouteInput

func (GatewayRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayRoute)(nil)).Elem()
}

func (i GatewayRouteArray) ToGatewayRouteArrayOutput() GatewayRouteArrayOutput {
	return i.ToGatewayRouteArrayOutputWithContext(context.Background())
}

func (i GatewayRouteArray) ToGatewayRouteArrayOutputWithContext(ctx context.Context) GatewayRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteArrayOutput)
}

// GatewayRouteMapInput is an input type that accepts GatewayRouteMap and GatewayRouteMapOutput values.
// You can construct a concrete instance of `GatewayRouteMapInput` via:
//
//	GatewayRouteMap{ "key": GatewayRouteArgs{...} }
type GatewayRouteMapInput interface {
	pulumi.Input

	ToGatewayRouteMapOutput() GatewayRouteMapOutput
	ToGatewayRouteMapOutputWithContext(context.Context) GatewayRouteMapOutput
}

type GatewayRouteMap map[string]GatewayRouteInput

func (GatewayRouteMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayRoute)(nil)).Elem()
}

func (i GatewayRouteMap) ToGatewayRouteMapOutput() GatewayRouteMapOutput {
	return i.ToGatewayRouteMapOutputWithContext(context.Background())
}

func (i GatewayRouteMap) ToGatewayRouteMapOutputWithContext(ctx context.Context) GatewayRouteMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteMapOutput)
}

type GatewayRouteOutput struct{ *pulumi.OutputState }

func (GatewayRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRoute)(nil)).Elem()
}

func (o GatewayRouteOutput) ToGatewayRouteOutput() GatewayRouteOutput {
	return o
}

func (o GatewayRouteOutput) ToGatewayRouteOutputWithContext(ctx context.Context) GatewayRouteOutput {
	return o
}

// The id of account.
func (o GatewayRouteOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The create time.
func (o GatewayRouteOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The cidr block.
func (o GatewayRouteOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The id of direct connect gateway.
func (o GatewayRouteOutput) DirectConnectGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.DirectConnectGatewayId }).(pulumi.StringOutput)
}

// The id of direct connect gateway route.
func (o GatewayRouteOutput) DirectConnectGatewayRouteId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.DirectConnectGatewayRouteId }).(pulumi.StringOutput)
}

// The id of next hop.
func (o GatewayRouteOutput) NextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.NextHopId }).(pulumi.StringOutput)
}

// The type of next hop.
func (o GatewayRouteOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.NextHopType }).(pulumi.StringOutput)
}

// The type of route.
func (o GatewayRouteOutput) RouteType() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.RouteType }).(pulumi.StringOutput)
}

// The status info.
func (o GatewayRouteOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayRoute) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type GatewayRouteArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayRoute)(nil)).Elem()
}

func (o GatewayRouteArrayOutput) ToGatewayRouteArrayOutput() GatewayRouteArrayOutput {
	return o
}

func (o GatewayRouteArrayOutput) ToGatewayRouteArrayOutputWithContext(ctx context.Context) GatewayRouteArrayOutput {
	return o
}

func (o GatewayRouteArrayOutput) Index(i pulumi.IntInput) GatewayRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayRoute {
		return vs[0].([]*GatewayRoute)[vs[1].(int)]
	}).(GatewayRouteOutput)
}

type GatewayRouteMapOutput struct{ *pulumi.OutputState }

func (GatewayRouteMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayRoute)(nil)).Elem()
}

func (o GatewayRouteMapOutput) ToGatewayRouteMapOutput() GatewayRouteMapOutput {
	return o
}

func (o GatewayRouteMapOutput) ToGatewayRouteMapOutputWithContext(ctx context.Context) GatewayRouteMapOutput {
	return o
}

func (o GatewayRouteMapOutput) MapIndex(k pulumi.StringInput) GatewayRouteOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayRoute {
		return vs[0].(map[string]*GatewayRoute)[vs[1].(string)]
	}).(GatewayRouteOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteInput)(nil)).Elem(), &GatewayRoute{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteArrayInput)(nil)).Elem(), GatewayRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteMapInput)(nil)).Elem(), GatewayRouteMap{})
	pulumi.RegisterOutputType(GatewayRouteOutput{})
	pulumi.RegisterOutputType(GatewayRouteArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteMapOutput{})
}
