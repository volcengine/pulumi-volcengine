// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of transit router vpn attachments
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/transit_router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := transit_router.GetVpnAttachments(ctx, &transit_router.GetVpnAttachmentsArgs{
//				Ids: []string{
//					"tr-attach-3rf2xi7ae6y9s5zsk2hm6pibt",
//				},
//				TransitRouterId: "tr-2d6fr7f39unsw58ozfe1ow21x",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetVpnAttachments(ctx *pulumi.Context, args *GetVpnAttachmentsArgs, opts ...pulumi.InvokeOption) (*GetVpnAttachmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVpnAttachmentsResult
	err := ctx.Invoke("volcengine:transit_router/getVpnAttachments:getVpnAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpnAttachments.
type GetVpnAttachmentsArgs struct {
	// The ID list of the VPN attachment.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Tags.
	Tags []GetVpnAttachmentsTag `pulumi:"tags"`
	// The id of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The ID of the IPSec connection.
	VpnConnectionId *string `pulumi:"vpnConnectionId"`
}

// A collection of values returned by getVpnAttachments.
type GetVpnAttachmentsResult struct {
	// The collection of query.
	Attachments []GetVpnAttachmentsAttachment `pulumi:"attachments"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// Tags.
	Tags []GetVpnAttachmentsTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The id of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The ID of the IPSec connection.
	VpnConnectionId *string `pulumi:"vpnConnectionId"`
}

func GetVpnAttachmentsOutput(ctx *pulumi.Context, args GetVpnAttachmentsOutputArgs, opts ...pulumi.InvokeOption) GetVpnAttachmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVpnAttachmentsResult, error) {
			args := v.(GetVpnAttachmentsArgs)
			r, err := GetVpnAttachments(ctx, &args, opts...)
			var s GetVpnAttachmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVpnAttachmentsResultOutput)
}

// A collection of arguments for invoking getVpnAttachments.
type GetVpnAttachmentsOutputArgs struct {
	// The ID list of the VPN attachment.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Tags.
	Tags GetVpnAttachmentsTagArrayInput `pulumi:"tags"`
	// The id of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The ID of the IPSec connection.
	VpnConnectionId pulumi.StringPtrInput `pulumi:"vpnConnectionId"`
}

func (GetVpnAttachmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnAttachmentsArgs)(nil)).Elem()
}

// A collection of values returned by getVpnAttachments.
type GetVpnAttachmentsResultOutput struct{ *pulumi.OutputState }

func (GetVpnAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnAttachmentsResult)(nil)).Elem()
}

func (o GetVpnAttachmentsResultOutput) ToGetVpnAttachmentsResultOutput() GetVpnAttachmentsResultOutput {
	return o
}

func (o GetVpnAttachmentsResultOutput) ToGetVpnAttachmentsResultOutputWithContext(ctx context.Context) GetVpnAttachmentsResultOutput {
	return o
}

// The collection of query.
func (o GetVpnAttachmentsResultOutput) Attachments() GetVpnAttachmentsAttachmentArrayOutput {
	return o.ApplyT(func(v GetVpnAttachmentsResult) []GetVpnAttachmentsAttachment { return v.Attachments }).(GetVpnAttachmentsAttachmentArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVpnAttachmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnAttachmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVpnAttachmentsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnAttachmentsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetVpnAttachmentsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnAttachmentsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetVpnAttachmentsResultOutput) Tags() GetVpnAttachmentsTagArrayOutput {
	return o.ApplyT(func(v GetVpnAttachmentsResult) []GetVpnAttachmentsTag { return v.Tags }).(GetVpnAttachmentsTagArrayOutput)
}

// The total count of query.
func (o GetVpnAttachmentsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetVpnAttachmentsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The id of the transit router.
func (o GetVpnAttachmentsResultOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnAttachmentsResult) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The ID of the IPSec connection.
func (o GetVpnAttachmentsResultOutput) VpnConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVpnAttachmentsResult) *string { return v.VpnConnectionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpnAttachmentsResultOutput{})
}
