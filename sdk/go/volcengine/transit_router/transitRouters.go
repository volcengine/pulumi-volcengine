// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of transit routers
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/transit_router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := transit_router.TransitRouters(ctx, &transit_router.TransitRoutersArgs{
//				Ids: []string{
//					"tr-2d6fr7mzya2gw58ozfes5g2oh",
//				},
//				TransitRouterName: pulumi.StringRef("tf2"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func TransitRouters(ctx *pulumi.Context, args *TransitRoutersArgs, opts ...pulumi.InvokeOption) (*TransitRoutersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv TransitRoutersResult
	err := ctx.Invoke("volcengine:transit_router/transitRouters:TransitRouters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking TransitRouters.
type TransitRoutersArgs struct {
	// A list of Transit Router ids.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The name info.
	TransitRouterName *string `pulumi:"transitRouterName"`
}

// A collection of values returned by TransitRouters.
type TransitRoutersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The name of the transit router.
	TransitRouterName *string `pulumi:"transitRouterName"`
	// The collection of query.
	TransitRouters []TransitRoutersTransitRouter `pulumi:"transitRouters"`
}

func TransitRoutersOutput(ctx *pulumi.Context, args TransitRoutersOutputArgs, opts ...pulumi.InvokeOption) TransitRoutersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (TransitRoutersResult, error) {
			args := v.(TransitRoutersArgs)
			r, err := TransitRouters(ctx, &args, opts...)
			var s TransitRoutersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(TransitRoutersResultOutput)
}

// A collection of arguments for invoking TransitRouters.
type TransitRoutersOutputArgs struct {
	// A list of Transit Router ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name info.
	TransitRouterName pulumi.StringPtrInput `pulumi:"transitRouterName"`
}

func (TransitRoutersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersArgs)(nil)).Elem()
}

// A collection of values returned by TransitRouters.
type TransitRoutersResultOutput struct{ *pulumi.OutputState }

func (TransitRoutersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersResult)(nil)).Elem()
}

func (o TransitRoutersResultOutput) ToTransitRoutersResultOutput() TransitRoutersResultOutput {
	return o
}

func (o TransitRoutersResultOutput) ToTransitRoutersResultOutputWithContext(ctx context.Context) TransitRoutersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o TransitRoutersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o TransitRoutersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransitRoutersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o TransitRoutersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRoutersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o TransitRoutersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v TransitRoutersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The name of the transit router.
func (o TransitRoutersResultOutput) TransitRouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRoutersResult) *string { return v.TransitRouterName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o TransitRoutersResultOutput) TransitRouters() TransitRoutersTransitRouterArrayOutput {
	return o.ApplyT(func(v TransitRoutersResult) []TransitRoutersTransitRouter { return v.TransitRouters }).(TransitRoutersTransitRouterArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(TransitRoutersResultOutput{})
}
