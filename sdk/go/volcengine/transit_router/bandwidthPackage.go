// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage transit router bandwidth package
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/transit_router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := transit_router.NewBandwidthPackage(ctx, "foo", &transit_router.BandwidthPackageArgs{
//				Bandwidth:                         pulumi.Int(2),
//				Description:                       pulumi.String("acc-test"),
//				Period:                            pulumi.Int(1),
//				RenewType:                         pulumi.String("Manual"),
//				TransitRouterBandwidthPackageName: pulumi.String("acc-tf-test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// TransitRouterBandwidthPackage can be imported using the Id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:transit_router/bandwidthPackage:BandwidthPackage default tbp-cd-2felfww0i6pkw59gp68bq****
//
// ```
type BandwidthPackage struct {
	pulumi.CustomResourceState

	// The detailed information on cross regional connections associated with bandwidth packets.
	Allocations BandwidthPackageAllocationArrayOutput `pulumi:"allocations"`
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps. Valid values: 2-10000. Default is 2 Mbps.
	Bandwidth pulumi.IntPtrOutput `pulumi:"bandwidth"`
	// The business status of the transit router bandwidth package.
	BusinessStatus pulumi.StringOutput `pulumi:"businessStatus"`
	// The create time of the transit router bandwidth package.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// The description of the transit router bandwidth package.
	Description pulumi.StringOutput `pulumi:"description"`
	// The expired time of the transit router bandwidth package.
	ExpiredTime pulumi.StringOutput `pulumi:"expiredTime"`
	// The period of the transit router bandwidth package, the valid value range in 1~9 or 12 or 36. Default value is 12. The period unit defaults to `Month`.The modification of this field only takes effect when the value of the `renewType` is `Manual`.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The remaining renewal times of of the transit router bandwidth package. Valid values: -1 or 1~100. Default value is -1, means unlimited renewal.This field is only effective when the value of the `renewType` is `Auto`.
	RemainRenewTimes pulumi.IntPtrOutput `pulumi:"remainRenewTimes"`
	// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
	RemainingBandwidth pulumi.IntOutput `pulumi:"remainingBandwidth"`
	// The auto renewal period of the transit router bandwidth package. Valid values: 1,2,3,6,12. Default value is 1. Unit: Month.This field is only effective when the value of the `renewType` is `Auto`. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	RenewPeriod pulumi.IntPtrOutput `pulumi:"renewPeriod"`
	// The renewal type of the transit router bandwidth package. Valid values: `Manual`, `Auto`, `NoRenew`. Default is `Manual`.This field is only effective when modifying the bandwidth package.
	RenewType pulumi.StringPtrOutput `pulumi:"renewType"`
	// The status of the transit router bandwidth package.
	Status pulumi.StringOutput `pulumi:"status"`
	// The name of the transit router bandwidth package.
	TransitRouterBandwidthPackageName pulumi.StringOutput `pulumi:"transitRouterBandwidthPackageName"`
	// The update time of the transit router bandwidth package.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewBandwidthPackage registers a new resource with the given unique name, arguments, and options.
func NewBandwidthPackage(ctx *pulumi.Context,
	name string, args *BandwidthPackageArgs, opts ...pulumi.ResourceOption) (*BandwidthPackage, error) {
	if args == nil {
		args = &BandwidthPackageArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BandwidthPackage
	err := ctx.RegisterResource("volcengine:transit_router/bandwidthPackage:BandwidthPackage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBandwidthPackage gets an existing BandwidthPackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBandwidthPackage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BandwidthPackageState, opts ...pulumi.ResourceOption) (*BandwidthPackage, error) {
	var resource BandwidthPackage
	err := ctx.ReadResource("volcengine:transit_router/bandwidthPackage:BandwidthPackage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BandwidthPackage resources.
type bandwidthPackageState struct {
	// The detailed information on cross regional connections associated with bandwidth packets.
	Allocations []BandwidthPackageAllocation `pulumi:"allocations"`
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps. Valid values: 2-10000. Default is 2 Mbps.
	Bandwidth *int `pulumi:"bandwidth"`
	// The business status of the transit router bandwidth package.
	BusinessStatus *string `pulumi:"businessStatus"`
	// The create time of the transit router bandwidth package.
	CreationTime *string `pulumi:"creationTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime *string `pulumi:"deleteTime"`
	// The description of the transit router bandwidth package.
	Description *string `pulumi:"description"`
	// The expired time of the transit router bandwidth package.
	ExpiredTime *string `pulumi:"expiredTime"`
	// The period of the transit router bandwidth package, the valid value range in 1~9 or 12 or 36. Default value is 12. The period unit defaults to `Month`.The modification of this field only takes effect when the value of the `renewType` is `Manual`.
	Period *int `pulumi:"period"`
	// The remaining renewal times of of the transit router bandwidth package. Valid values: -1 or 1~100. Default value is -1, means unlimited renewal.This field is only effective when the value of the `renewType` is `Auto`.
	RemainRenewTimes *int `pulumi:"remainRenewTimes"`
	// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
	RemainingBandwidth *int `pulumi:"remainingBandwidth"`
	// The auto renewal period of the transit router bandwidth package. Valid values: 1,2,3,6,12. Default value is 1. Unit: Month.This field is only effective when the value of the `renewType` is `Auto`. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	RenewPeriod *int `pulumi:"renewPeriod"`
	// The renewal type of the transit router bandwidth package. Valid values: `Manual`, `Auto`, `NoRenew`. Default is `Manual`.This field is only effective when modifying the bandwidth package.
	RenewType *string `pulumi:"renewType"`
	// The status of the transit router bandwidth package.
	Status *string `pulumi:"status"`
	// The name of the transit router bandwidth package.
	TransitRouterBandwidthPackageName *string `pulumi:"transitRouterBandwidthPackageName"`
	// The update time of the transit router bandwidth package.
	UpdateTime *string `pulumi:"updateTime"`
}

type BandwidthPackageState struct {
	// The detailed information on cross regional connections associated with bandwidth packets.
	Allocations BandwidthPackageAllocationArrayInput
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps. Valid values: 2-10000. Default is 2 Mbps.
	Bandwidth pulumi.IntPtrInput
	// The business status of the transit router bandwidth package.
	BusinessStatus pulumi.StringPtrInput
	// The create time of the transit router bandwidth package.
	CreationTime pulumi.StringPtrInput
	// The delete time of the transit router bandwidth package.
	DeleteTime pulumi.StringPtrInput
	// The description of the transit router bandwidth package.
	Description pulumi.StringPtrInput
	// The expired time of the transit router bandwidth package.
	ExpiredTime pulumi.StringPtrInput
	// The period of the transit router bandwidth package, the valid value range in 1~9 or 12 or 36. Default value is 12. The period unit defaults to `Month`.The modification of this field only takes effect when the value of the `renewType` is `Manual`.
	Period pulumi.IntPtrInput
	// The remaining renewal times of of the transit router bandwidth package. Valid values: -1 or 1~100. Default value is -1, means unlimited renewal.This field is only effective when the value of the `renewType` is `Auto`.
	RemainRenewTimes pulumi.IntPtrInput
	// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
	RemainingBandwidth pulumi.IntPtrInput
	// The auto renewal period of the transit router bandwidth package. Valid values: 1,2,3,6,12. Default value is 1. Unit: Month.This field is only effective when the value of the `renewType` is `Auto`. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	RenewPeriod pulumi.IntPtrInput
	// The renewal type of the transit router bandwidth package. Valid values: `Manual`, `Auto`, `NoRenew`. Default is `Manual`.This field is only effective when modifying the bandwidth package.
	RenewType pulumi.StringPtrInput
	// The status of the transit router bandwidth package.
	Status pulumi.StringPtrInput
	// The name of the transit router bandwidth package.
	TransitRouterBandwidthPackageName pulumi.StringPtrInput
	// The update time of the transit router bandwidth package.
	UpdateTime pulumi.StringPtrInput
}

func (BandwidthPackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageState)(nil)).Elem()
}

type bandwidthPackageArgs struct {
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps. Valid values: 2-10000. Default is 2 Mbps.
	Bandwidth *int `pulumi:"bandwidth"`
	// The description of the transit router bandwidth package.
	Description *string `pulumi:"description"`
	// The period of the transit router bandwidth package, the valid value range in 1~9 or 12 or 36. Default value is 12. The period unit defaults to `Month`.The modification of this field only takes effect when the value of the `renewType` is `Manual`.
	Period *int `pulumi:"period"`
	// The remaining renewal times of of the transit router bandwidth package. Valid values: -1 or 1~100. Default value is -1, means unlimited renewal.This field is only effective when the value of the `renewType` is `Auto`.
	RemainRenewTimes *int `pulumi:"remainRenewTimes"`
	// The auto renewal period of the transit router bandwidth package. Valid values: 1,2,3,6,12. Default value is 1. Unit: Month.This field is only effective when the value of the `renewType` is `Auto`. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	RenewPeriod *int `pulumi:"renewPeriod"`
	// The renewal type of the transit router bandwidth package. Valid values: `Manual`, `Auto`, `NoRenew`. Default is `Manual`.This field is only effective when modifying the bandwidth package.
	RenewType *string `pulumi:"renewType"`
	// The name of the transit router bandwidth package.
	TransitRouterBandwidthPackageName *string `pulumi:"transitRouterBandwidthPackageName"`
}

// The set of arguments for constructing a BandwidthPackage resource.
type BandwidthPackageArgs struct {
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps. Valid values: 2-10000. Default is 2 Mbps.
	Bandwidth pulumi.IntPtrInput
	// The description of the transit router bandwidth package.
	Description pulumi.StringPtrInput
	// The period of the transit router bandwidth package, the valid value range in 1~9 or 12 or 36. Default value is 12. The period unit defaults to `Month`.The modification of this field only takes effect when the value of the `renewType` is `Manual`.
	Period pulumi.IntPtrInput
	// The remaining renewal times of of the transit router bandwidth package. Valid values: -1 or 1~100. Default value is -1, means unlimited renewal.This field is only effective when the value of the `renewType` is `Auto`.
	RemainRenewTimes pulumi.IntPtrInput
	// The auto renewal period of the transit router bandwidth package. Valid values: 1,2,3,6,12. Default value is 1. Unit: Month.This field is only effective when the value of the `renewType` is `Auto`. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	RenewPeriod pulumi.IntPtrInput
	// The renewal type of the transit router bandwidth package. Valid values: `Manual`, `Auto`, `NoRenew`. Default is `Manual`.This field is only effective when modifying the bandwidth package.
	RenewType pulumi.StringPtrInput
	// The name of the transit router bandwidth package.
	TransitRouterBandwidthPackageName pulumi.StringPtrInput
}

func (BandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageArgs)(nil)).Elem()
}

type BandwidthPackageInput interface {
	pulumi.Input

	ToBandwidthPackageOutput() BandwidthPackageOutput
	ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput
}

func (*BandwidthPackage) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPackage)(nil)).Elem()
}

func (i *BandwidthPackage) ToBandwidthPackageOutput() BandwidthPackageOutput {
	return i.ToBandwidthPackageOutputWithContext(context.Background())
}

func (i *BandwidthPackage) ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageOutput)
}

// BandwidthPackageArrayInput is an input type that accepts BandwidthPackageArray and BandwidthPackageArrayOutput values.
// You can construct a concrete instance of `BandwidthPackageArrayInput` via:
//
//	BandwidthPackageArray{ BandwidthPackageArgs{...} }
type BandwidthPackageArrayInput interface {
	pulumi.Input

	ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput
	ToBandwidthPackageArrayOutputWithContext(context.Context) BandwidthPackageArrayOutput
}

type BandwidthPackageArray []BandwidthPackageInput

func (BandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackageArray) ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput {
	return i.ToBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i BandwidthPackageArray) ToBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageArrayOutput)
}

// BandwidthPackageMapInput is an input type that accepts BandwidthPackageMap and BandwidthPackageMapOutput values.
// You can construct a concrete instance of `BandwidthPackageMapInput` via:
//
//	BandwidthPackageMap{ "key": BandwidthPackageArgs{...} }
type BandwidthPackageMapInput interface {
	pulumi.Input

	ToBandwidthPackageMapOutput() BandwidthPackageMapOutput
	ToBandwidthPackageMapOutputWithContext(context.Context) BandwidthPackageMapOutput
}

type BandwidthPackageMap map[string]BandwidthPackageInput

func (BandwidthPackageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackageMap) ToBandwidthPackageMapOutput() BandwidthPackageMapOutput {
	return i.ToBandwidthPackageMapOutputWithContext(context.Background())
}

func (i BandwidthPackageMap) ToBandwidthPackageMapOutputWithContext(ctx context.Context) BandwidthPackageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageMapOutput)
}

type BandwidthPackageOutput struct{ *pulumi.OutputState }

func (BandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageOutput) ToBandwidthPackageOutput() BandwidthPackageOutput {
	return o
}

func (o BandwidthPackageOutput) ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput {
	return o
}

// The detailed information on cross regional connections associated with bandwidth packets.
func (o BandwidthPackageOutput) Allocations() BandwidthPackageAllocationArrayOutput {
	return o.ApplyT(func(v *BandwidthPackage) BandwidthPackageAllocationArrayOutput { return v.Allocations }).(BandwidthPackageAllocationArrayOutput)
}

// The bandwidth peak of the transit router bandwidth package. Unit: Mbps. Valid values: 2-10000. Default is 2 Mbps.
func (o BandwidthPackageOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntPtrOutput { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// The business status of the transit router bandwidth package.
func (o BandwidthPackageOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time of the transit router bandwidth package.
func (o BandwidthPackageOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackageOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// The description of the transit router bandwidth package.
func (o BandwidthPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The expired time of the transit router bandwidth package.
func (o BandwidthPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The period of the transit router bandwidth package, the valid value range in 1~9 or 12 or 36. Default value is 12. The period unit defaults to `Month`.The modification of this field only takes effect when the value of the `renewType` is `Manual`.
func (o BandwidthPackageOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The remaining renewal times of of the transit router bandwidth package. Valid values: -1 or 1~100. Default value is -1, means unlimited renewal.This field is only effective when the value of the `renewType` is `Auto`.
func (o BandwidthPackageOutput) RemainRenewTimes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntPtrOutput { return v.RemainRenewTimes }).(pulumi.IntPtrOutput)
}

// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
func (o BandwidthPackageOutput) RemainingBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntOutput { return v.RemainingBandwidth }).(pulumi.IntOutput)
}

// The auto renewal period of the transit router bandwidth package. Valid values: 1,2,3,6,12. Default value is 1. Unit: Month.This field is only effective when the value of the `renewType` is `Auto`. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o BandwidthPackageOutput) RenewPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntPtrOutput { return v.RenewPeriod }).(pulumi.IntPtrOutput)
}

// The renewal type of the transit router bandwidth package. Valid values: `Manual`, `Auto`, `NoRenew`. Default is `Manual`.This field is only effective when modifying the bandwidth package.
func (o BandwidthPackageOutput) RenewType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringPtrOutput { return v.RenewType }).(pulumi.StringPtrOutput)
}

// The status of the transit router bandwidth package.
func (o BandwidthPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The name of the transit router bandwidth package.
func (o BandwidthPackageOutput) TransitRouterBandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.TransitRouterBandwidthPackageName }).(pulumi.StringOutput)
}

// The update time of the transit router bandwidth package.
func (o BandwidthPackageOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type BandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageArrayOutput) ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackageArrayOutput) ToBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackageArrayOutput) Index(i pulumi.IntInput) BandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BandwidthPackage {
		return vs[0].([]*BandwidthPackage)[vs[1].(int)]
	}).(BandwidthPackageOutput)
}

type BandwidthPackageMapOutput struct{ *pulumi.OutputState }

func (BandwidthPackageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageMapOutput) ToBandwidthPackageMapOutput() BandwidthPackageMapOutput {
	return o
}

func (o BandwidthPackageMapOutput) ToBandwidthPackageMapOutputWithContext(ctx context.Context) BandwidthPackageMapOutput {
	return o
}

func (o BandwidthPackageMapOutput) MapIndex(k pulumi.StringInput) BandwidthPackageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BandwidthPackage {
		return vs[0].(map[string]*BandwidthPackage)[vs[1].(string)]
	}).(BandwidthPackageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageInput)(nil)).Elem(), &BandwidthPackage{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageArrayInput)(nil)).Elem(), BandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageMapInput)(nil)).Elem(), BandwidthPackageMap{})
	pulumi.RegisterOutputType(BandwidthPackageOutput{})
	pulumi.RegisterOutputType(BandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackageMapOutput{})
}
