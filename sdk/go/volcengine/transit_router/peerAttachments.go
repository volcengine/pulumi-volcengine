// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of transit router peer attachments
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/transit_router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := transit_router.GetPeerAttachments(ctx, &transit_router.GetPeerAttachmentsArgs{
//				Ids: []string{
//					"tr-attach-12be67d0yh2io17q7y1au****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.transit_router.PeerAttachments has been deprecated in favor of volcengine.transit_router.getPeerAttachments
func PeerAttachments(ctx *pulumi.Context, args *PeerAttachmentsArgs, opts ...pulumi.InvokeOption) (*PeerAttachmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv PeerAttachmentsResult
	err := ctx.Invoke("volcengine:transit_router/peerAttachments:PeerAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking PeerAttachments.
type PeerAttachmentsArgs struct {
	// A list of IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The id of peer transit router.
	PeerTransitRouterId *string `pulumi:"peerTransitRouterId"`
	// The region id of peer transit router.
	PeerTransitRouterRegionId *string `pulumi:"peerTransitRouterRegionId"`
	// Tags.
	Tags []PeerAttachmentsTag `pulumi:"tags"`
	// The name of transit router peer attachment.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The id of local transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
}

// A collection of values returned by PeerAttachments.
type PeerAttachmentsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The id of the peer transit router.
	PeerTransitRouterId *string `pulumi:"peerTransitRouterId"`
	// The region id of the peer transit router.
	PeerTransitRouterRegionId *string `pulumi:"peerTransitRouterRegionId"`
	// Tags.
	Tags []PeerAttachmentsTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The name of the transit router peer attachment.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The collection of query.
	TransitRouterAttachments []PeerAttachmentsTransitRouterAttachment `pulumi:"transitRouterAttachments"`
	// The id of the local transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
}

func PeerAttachmentsOutput(ctx *pulumi.Context, args PeerAttachmentsOutputArgs, opts ...pulumi.InvokeOption) PeerAttachmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (PeerAttachmentsResult, error) {
			args := v.(PeerAttachmentsArgs)
			r, err := PeerAttachments(ctx, &args, opts...)
			var s PeerAttachmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(PeerAttachmentsResultOutput)
}

// A collection of arguments for invoking PeerAttachments.
type PeerAttachmentsOutputArgs struct {
	// A list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The id of peer transit router.
	PeerTransitRouterId pulumi.StringPtrInput `pulumi:"peerTransitRouterId"`
	// The region id of peer transit router.
	PeerTransitRouterRegionId pulumi.StringPtrInput `pulumi:"peerTransitRouterRegionId"`
	// Tags.
	Tags PeerAttachmentsTagArrayInput `pulumi:"tags"`
	// The name of transit router peer attachment.
	TransitRouterAttachmentName pulumi.StringPtrInput `pulumi:"transitRouterAttachmentName"`
	// The id of local transit router.
	TransitRouterId pulumi.StringPtrInput `pulumi:"transitRouterId"`
}

func (PeerAttachmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentsArgs)(nil)).Elem()
}

// A collection of values returned by PeerAttachments.
type PeerAttachmentsResultOutput struct{ *pulumi.OutputState }

func (PeerAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentsResult)(nil)).Elem()
}

func (o PeerAttachmentsResultOutput) ToPeerAttachmentsResultOutput() PeerAttachmentsResultOutput {
	return o
}

func (o PeerAttachmentsResultOutput) ToPeerAttachmentsResultOutputWithContext(ctx context.Context) PeerAttachmentsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o PeerAttachmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o PeerAttachmentsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o PeerAttachmentsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o PeerAttachmentsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The id of the peer transit router.
func (o PeerAttachmentsResultOutput) PeerTransitRouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) *string { return v.PeerTransitRouterId }).(pulumi.StringPtrOutput)
}

// The region id of the peer transit router.
func (o PeerAttachmentsResultOutput) PeerTransitRouterRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) *string { return v.PeerTransitRouterRegionId }).(pulumi.StringPtrOutput)
}

// Tags.
func (o PeerAttachmentsResultOutput) Tags() PeerAttachmentsTagArrayOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) []PeerAttachmentsTag { return v.Tags }).(PeerAttachmentsTagArrayOutput)
}

// The total count of query.
func (o PeerAttachmentsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The name of the transit router peer attachment.
func (o PeerAttachmentsResultOutput) TransitRouterAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) *string { return v.TransitRouterAttachmentName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o PeerAttachmentsResultOutput) TransitRouterAttachments() PeerAttachmentsTransitRouterAttachmentArrayOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) []PeerAttachmentsTransitRouterAttachment {
		return v.TransitRouterAttachments
	}).(PeerAttachmentsTransitRouterAttachmentArrayOutput)
}

// The id of the local transit router.
func (o PeerAttachmentsResultOutput) TransitRouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAttachmentsResult) *string { return v.TransitRouterId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PeerAttachmentsResultOutput{})
}
