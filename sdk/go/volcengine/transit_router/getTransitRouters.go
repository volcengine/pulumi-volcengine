// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of transit routers
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/transit_router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := transit_router.NewTransitRouter(ctx, "foo", &transit_router.TransitRouterArgs{
//				TransitRouterName: pulumi.String("test-tf-acc"),
//				Description:       pulumi.String("test-tf-acc"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = transit_router.GetTransitRoutersOutput(ctx, transit_router.GetTransitRoutersOutputArgs{
//				Ids: pulumi.StringArray{
//					foo.ID(),
//				},
//				TransitRouterName: pulumi.String("test"),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetTransitRouters(ctx *pulumi.Context, args *GetTransitRoutersArgs, opts ...pulumi.InvokeOption) (*GetTransitRoutersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTransitRoutersResult
	err := ctx.Invoke("volcengine:transit_router/getTransitRouters:getTransitRouters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransitRouters.
type GetTransitRoutersArgs struct {
	// A list of Transit Router ids.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The ProjectName of the transit router.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTransitRoutersTag `pulumi:"tags"`
	// The name info.
	TransitRouterName *string `pulumi:"transitRouterName"`
}

// A collection of values returned by getTransitRouters.
type GetTransitRoutersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The ProjectName of the transit router.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTransitRoutersTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The name of the transit router.
	TransitRouterName *string `pulumi:"transitRouterName"`
	// The collection of query.
	TransitRouters []GetTransitRoutersTransitRouter `pulumi:"transitRouters"`
}

func GetTransitRoutersOutput(ctx *pulumi.Context, args GetTransitRoutersOutputArgs, opts ...pulumi.InvokeOption) GetTransitRoutersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTransitRoutersResult, error) {
			args := v.(GetTransitRoutersArgs)
			r, err := GetTransitRouters(ctx, &args, opts...)
			var s GetTransitRoutersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTransitRoutersResultOutput)
}

// A collection of arguments for invoking getTransitRouters.
type GetTransitRoutersOutputArgs struct {
	// A list of Transit Router ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ProjectName of the transit router.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags GetTransitRoutersTagArrayInput `pulumi:"tags"`
	// The name info.
	TransitRouterName pulumi.StringPtrInput `pulumi:"transitRouterName"`
}

func (GetTransitRoutersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRoutersArgs)(nil)).Elem()
}

// A collection of values returned by getTransitRouters.
type GetTransitRoutersResultOutput struct{ *pulumi.OutputState }

func (GetTransitRoutersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRoutersResult)(nil)).Elem()
}

func (o GetTransitRoutersResultOutput) ToGetTransitRoutersResultOutput() GetTransitRoutersResultOutput {
	return o
}

func (o GetTransitRoutersResultOutput) ToGetTransitRoutersResultOutputWithContext(ctx context.Context) GetTransitRoutersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTransitRoutersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRoutersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTransitRoutersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitRoutersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetTransitRoutersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTransitRoutersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The ProjectName of the transit router.
func (o GetTransitRoutersResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTransitRoutersResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetTransitRoutersResultOutput) Tags() GetTransitRoutersTagArrayOutput {
	return o.ApplyT(func(v GetTransitRoutersResult) []GetTransitRoutersTag { return v.Tags }).(GetTransitRoutersTagArrayOutput)
}

// The total count of query.
func (o GetTransitRoutersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTransitRoutersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The name of the transit router.
func (o GetTransitRoutersResultOutput) TransitRouterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTransitRoutersResult) *string { return v.TransitRouterName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetTransitRoutersResultOutput) TransitRouters() GetTransitRoutersTransitRouterArrayOutput {
	return o.ApplyT(func(v GetTransitRoutersResult) []GetTransitRoutersTransitRouter { return v.TransitRouters }).(GetTransitRoutersTransitRouterArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTransitRoutersResultOutput{})
}
