// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of transit router bandwidth packages
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/transit_router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooBandwidthPackage, err := transit_router.NewBandwidthPackage(ctx, "fooBandwidthPackage", &transit_router.BandwidthPackageArgs{
//				TransitRouterBandwidthPackageName: pulumi.String("acc-tf-test"),
//				Description:                       pulumi.String("acc-test"),
//				Bandwidth:                         pulumi.Int(2),
//				Period:                            pulumi.Int(1),
//				RenewType:                         pulumi.String("Manual"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = transit_router.GetBandwidthPackagesOutput(ctx, transit_router.GetBandwidthPackagesOutputArgs{
//				Ids: pulumi.StringArray{
//					fooBandwidthPackage.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetBandwidthPackages(ctx *pulumi.Context, args *GetBandwidthPackagesArgs, opts ...pulumi.InvokeOption) (*GetBandwidthPackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBandwidthPackagesResult
	err := ctx.Invoke("volcengine:transit_router/getBandwidthPackages:getBandwidthPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBandwidthPackages.
type GetBandwidthPackagesArgs struct {
	// The ID list of the TransitRouter bandwidth package.
	Ids []string `pulumi:"ids"`
	// The local geographic region set ID.
	LocalGeographicRegionSetId *string `pulumi:"localGeographicRegionSetId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The peer geographic region set ID.
	PeerGeographicRegionSetId *string `pulumi:"peerGeographicRegionSetId"`
	// The ProjectName of the TransitRouter bandwidth package.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetBandwidthPackagesTag `pulumi:"tags"`
	// The name of the TransitRouter bandwidth package.
	TransitRouterBandwidthPackageName *string `pulumi:"transitRouterBandwidthPackageName"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId *string `pulumi:"transitRouterPeerAttachmentId"`
}

// A collection of values returned by getBandwidthPackages.
type GetBandwidthPackagesResult struct {
	// The collection of query.
	BandwidthPackages []GetBandwidthPackagesBandwidthPackage `pulumi:"bandwidthPackages"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The local geographic region set ID.
	LocalGeographicRegionSetId *string `pulumi:"localGeographicRegionSetId"`
	OutputFile                 *string `pulumi:"outputFile"`
	// The peer geographic region set ID.
	PeerGeographicRegionSetId *string `pulumi:"peerGeographicRegionSetId"`
	// The ProjectName of the transit router bandwidth package.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetBandwidthPackagesTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The name of the transit router bandwidth package.
	TransitRouterBandwidthPackageName *string `pulumi:"transitRouterBandwidthPackageName"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId *string `pulumi:"transitRouterPeerAttachmentId"`
}

func GetBandwidthPackagesOutput(ctx *pulumi.Context, args GetBandwidthPackagesOutputArgs, opts ...pulumi.InvokeOption) GetBandwidthPackagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBandwidthPackagesResult, error) {
			args := v.(GetBandwidthPackagesArgs)
			r, err := GetBandwidthPackages(ctx, &args, opts...)
			var s GetBandwidthPackagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBandwidthPackagesResultOutput)
}

// A collection of arguments for invoking getBandwidthPackages.
type GetBandwidthPackagesOutputArgs struct {
	// The ID list of the TransitRouter bandwidth package.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The local geographic region set ID.
	LocalGeographicRegionSetId pulumi.StringPtrInput `pulumi:"localGeographicRegionSetId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The peer geographic region set ID.
	PeerGeographicRegionSetId pulumi.StringPtrInput `pulumi:"peerGeographicRegionSetId"`
	// The ProjectName of the TransitRouter bandwidth package.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags GetBandwidthPackagesTagArrayInput `pulumi:"tags"`
	// The name of the TransitRouter bandwidth package.
	TransitRouterBandwidthPackageName pulumi.StringPtrInput `pulumi:"transitRouterBandwidthPackageName"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId pulumi.StringPtrInput `pulumi:"transitRouterPeerAttachmentId"`
}

func (GetBandwidthPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getBandwidthPackages.
type GetBandwidthPackagesResultOutput struct{ *pulumi.OutputState }

func (GetBandwidthPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesResult)(nil)).Elem()
}

func (o GetBandwidthPackagesResultOutput) ToGetBandwidthPackagesResultOutput() GetBandwidthPackagesResultOutput {
	return o
}

func (o GetBandwidthPackagesResultOutput) ToGetBandwidthPackagesResultOutputWithContext(ctx context.Context) GetBandwidthPackagesResultOutput {
	return o
}

// The collection of query.
func (o GetBandwidthPackagesResultOutput) BandwidthPackages() GetBandwidthPackagesBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) []GetBandwidthPackagesBandwidthPackage { return v.BandwidthPackages }).(GetBandwidthPackagesBandwidthPackageArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBandwidthPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBandwidthPackagesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The local geographic region set ID.
func (o GetBandwidthPackagesResultOutput) LocalGeographicRegionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.LocalGeographicRegionSetId }).(pulumi.StringPtrOutput)
}

func (o GetBandwidthPackagesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The peer geographic region set ID.
func (o GetBandwidthPackagesResultOutput) PeerGeographicRegionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.PeerGeographicRegionSetId }).(pulumi.StringPtrOutput)
}

// The ProjectName of the transit router bandwidth package.
func (o GetBandwidthPackagesResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetBandwidthPackagesResultOutput) Tags() GetBandwidthPackagesTagArrayOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) []GetBandwidthPackagesTag { return v.Tags }).(GetBandwidthPackagesTagArrayOutput)
}

// The total count of query.
func (o GetBandwidthPackagesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The name of the transit router bandwidth package.
func (o GetBandwidthPackagesResultOutput) TransitRouterBandwidthPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.TransitRouterBandwidthPackageName }).(pulumi.StringPtrOutput)
}

// The ID of the peer attachment.
func (o GetBandwidthPackagesResultOutput) TransitRouterPeerAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.TransitRouterPeerAttachmentId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBandwidthPackagesResultOutput{})
}
