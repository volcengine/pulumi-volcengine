// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type BandwidthPackageAllocation struct {
	// The delete time of the transit router bandwidth package.
	AllocateTime *string `pulumi:"allocateTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime *string `pulumi:"deleteTime"`
	// The local region id of the transit router.
	LocalRegionId *string `pulumi:"localRegionId"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId *string `pulumi:"transitRouterPeerAttachmentId"`
}

// BandwidthPackageAllocationInput is an input type that accepts BandwidthPackageAllocationArgs and BandwidthPackageAllocationOutput values.
// You can construct a concrete instance of `BandwidthPackageAllocationInput` via:
//
//	BandwidthPackageAllocationArgs{...}
type BandwidthPackageAllocationInput interface {
	pulumi.Input

	ToBandwidthPackageAllocationOutput() BandwidthPackageAllocationOutput
	ToBandwidthPackageAllocationOutputWithContext(context.Context) BandwidthPackageAllocationOutput
}

type BandwidthPackageAllocationArgs struct {
	// The delete time of the transit router bandwidth package.
	AllocateTime pulumi.StringPtrInput `pulumi:"allocateTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime pulumi.StringPtrInput `pulumi:"deleteTime"`
	// The local region id of the transit router.
	LocalRegionId pulumi.StringPtrInput `pulumi:"localRegionId"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId pulumi.StringPtrInput `pulumi:"transitRouterPeerAttachmentId"`
}

func (BandwidthPackageAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageAllocation)(nil)).Elem()
}

func (i BandwidthPackageAllocationArgs) ToBandwidthPackageAllocationOutput() BandwidthPackageAllocationOutput {
	return i.ToBandwidthPackageAllocationOutputWithContext(context.Background())
}

func (i BandwidthPackageAllocationArgs) ToBandwidthPackageAllocationOutputWithContext(ctx context.Context) BandwidthPackageAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageAllocationOutput)
}

// BandwidthPackageAllocationArrayInput is an input type that accepts BandwidthPackageAllocationArray and BandwidthPackageAllocationArrayOutput values.
// You can construct a concrete instance of `BandwidthPackageAllocationArrayInput` via:
//
//	BandwidthPackageAllocationArray{ BandwidthPackageAllocationArgs{...} }
type BandwidthPackageAllocationArrayInput interface {
	pulumi.Input

	ToBandwidthPackageAllocationArrayOutput() BandwidthPackageAllocationArrayOutput
	ToBandwidthPackageAllocationArrayOutputWithContext(context.Context) BandwidthPackageAllocationArrayOutput
}

type BandwidthPackageAllocationArray []BandwidthPackageAllocationInput

func (BandwidthPackageAllocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackageAllocation)(nil)).Elem()
}

func (i BandwidthPackageAllocationArray) ToBandwidthPackageAllocationArrayOutput() BandwidthPackageAllocationArrayOutput {
	return i.ToBandwidthPackageAllocationArrayOutputWithContext(context.Background())
}

func (i BandwidthPackageAllocationArray) ToBandwidthPackageAllocationArrayOutputWithContext(ctx context.Context) BandwidthPackageAllocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageAllocationArrayOutput)
}

type BandwidthPackageAllocationOutput struct{ *pulumi.OutputState }

func (BandwidthPackageAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageAllocation)(nil)).Elem()
}

func (o BandwidthPackageAllocationOutput) ToBandwidthPackageAllocationOutput() BandwidthPackageAllocationOutput {
	return o
}

func (o BandwidthPackageAllocationOutput) ToBandwidthPackageAllocationOutputWithContext(ctx context.Context) BandwidthPackageAllocationOutput {
	return o
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackageAllocationOutput) AllocateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackageAllocation) *string { return v.AllocateTime }).(pulumi.StringPtrOutput)
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackageAllocationOutput) DeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackageAllocation) *string { return v.DeleteTime }).(pulumi.StringPtrOutput)
}

// The local region id of the transit router.
func (o BandwidthPackageAllocationOutput) LocalRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackageAllocation) *string { return v.LocalRegionId }).(pulumi.StringPtrOutput)
}

// The ID of the peer attachment.
func (o BandwidthPackageAllocationOutput) TransitRouterPeerAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackageAllocation) *string { return v.TransitRouterPeerAttachmentId }).(pulumi.StringPtrOutput)
}

type BandwidthPackageAllocationArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackageAllocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackageAllocation)(nil)).Elem()
}

func (o BandwidthPackageAllocationArrayOutput) ToBandwidthPackageAllocationArrayOutput() BandwidthPackageAllocationArrayOutput {
	return o
}

func (o BandwidthPackageAllocationArrayOutput) ToBandwidthPackageAllocationArrayOutputWithContext(ctx context.Context) BandwidthPackageAllocationArrayOutput {
	return o
}

func (o BandwidthPackageAllocationArrayOutput) Index(i pulumi.IntInput) BandwidthPackageAllocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackageAllocation {
		return vs[0].([]BandwidthPackageAllocation)[vs[1].(int)]
	}).(BandwidthPackageAllocationOutput)
}

type BandwidthPackageTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// BandwidthPackageTagInput is an input type that accepts BandwidthPackageTagArgs and BandwidthPackageTagOutput values.
// You can construct a concrete instance of `BandwidthPackageTagInput` via:
//
//	BandwidthPackageTagArgs{...}
type BandwidthPackageTagInput interface {
	pulumi.Input

	ToBandwidthPackageTagOutput() BandwidthPackageTagOutput
	ToBandwidthPackageTagOutputWithContext(context.Context) BandwidthPackageTagOutput
}

type BandwidthPackageTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BandwidthPackageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageTag)(nil)).Elem()
}

func (i BandwidthPackageTagArgs) ToBandwidthPackageTagOutput() BandwidthPackageTagOutput {
	return i.ToBandwidthPackageTagOutputWithContext(context.Background())
}

func (i BandwidthPackageTagArgs) ToBandwidthPackageTagOutputWithContext(ctx context.Context) BandwidthPackageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageTagOutput)
}

// BandwidthPackageTagArrayInput is an input type that accepts BandwidthPackageTagArray and BandwidthPackageTagArrayOutput values.
// You can construct a concrete instance of `BandwidthPackageTagArrayInput` via:
//
//	BandwidthPackageTagArray{ BandwidthPackageTagArgs{...} }
type BandwidthPackageTagArrayInput interface {
	pulumi.Input

	ToBandwidthPackageTagArrayOutput() BandwidthPackageTagArrayOutput
	ToBandwidthPackageTagArrayOutputWithContext(context.Context) BandwidthPackageTagArrayOutput
}

type BandwidthPackageTagArray []BandwidthPackageTagInput

func (BandwidthPackageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackageTag)(nil)).Elem()
}

func (i BandwidthPackageTagArray) ToBandwidthPackageTagArrayOutput() BandwidthPackageTagArrayOutput {
	return i.ToBandwidthPackageTagArrayOutputWithContext(context.Background())
}

func (i BandwidthPackageTagArray) ToBandwidthPackageTagArrayOutputWithContext(ctx context.Context) BandwidthPackageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageTagArrayOutput)
}

type BandwidthPackageTagOutput struct{ *pulumi.OutputState }

func (BandwidthPackageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageTag)(nil)).Elem()
}

func (o BandwidthPackageTagOutput) ToBandwidthPackageTagOutput() BandwidthPackageTagOutput {
	return o
}

func (o BandwidthPackageTagOutput) ToBandwidthPackageTagOutputWithContext(ctx context.Context) BandwidthPackageTagOutput {
	return o
}

// The Key of Tags.
func (o BandwidthPackageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o BandwidthPackageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackageTag) string { return v.Value }).(pulumi.StringOutput)
}

type BandwidthPackageTagArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackageTag)(nil)).Elem()
}

func (o BandwidthPackageTagArrayOutput) ToBandwidthPackageTagArrayOutput() BandwidthPackageTagArrayOutput {
	return o
}

func (o BandwidthPackageTagArrayOutput) ToBandwidthPackageTagArrayOutputWithContext(ctx context.Context) BandwidthPackageTagArrayOutput {
	return o
}

func (o BandwidthPackageTagArrayOutput) Index(i pulumi.IntInput) BandwidthPackageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackageTag {
		return vs[0].([]BandwidthPackageTag)[vs[1].(int)]
	}).(BandwidthPackageTagOutput)
}

type BandwidthPackagesBandwidthPackage struct {
	// The account id.
	AccountId string `pulumi:"accountId"`
	// The detailed information on cross regional connections associated with bandwidth packets.
	Allocations []BandwidthPackagesBandwidthPackageAllocation `pulumi:"allocations"`
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing type of the transit router bandwidth package.
	BillingType string `pulumi:"billingType"`
	// The business status of the transit router bandwidth package.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time of the transit router bandwidth package.
	CreationTime string `pulumi:"creationTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime string `pulumi:"deleteTime"`
	// The description of the transit router bandwidth package.
	Description string `pulumi:"description"`
	// The expired time of the transit router bandwidth package.
	ExpiredTime string `pulumi:"expiredTime"`
	// The id of the transit router bandwidth package.
	Id string `pulumi:"id"`
	// The local geographic region set ID.
	LocalGeographicRegionSetId string `pulumi:"localGeographicRegionSetId"`
	// The peer geographic region set ID.
	PeerGeographicRegionSetId string `pulumi:"peerGeographicRegionSetId"`
	// The ProjectName of the TransitRouter bandwidth package.
	ProjectName string `pulumi:"projectName"`
	// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
	RemainingBandwidth int `pulumi:"remainingBandwidth"`
	// The status of the transit router bandwidth package.
	Status string `pulumi:"status"`
	// Tags.
	Tags []BandwidthPackagesBandwidthPackageTag `pulumi:"tags"`
	// The id of the transit router attachment.
	TransitRouterBandwidthPackageId string `pulumi:"transitRouterBandwidthPackageId"`
	// The name of the TransitRouter bandwidth package.
	TransitRouterBandwidthPackageName string `pulumi:"transitRouterBandwidthPackageName"`
	// The update time of the transit router bandwidth package.
	UpdateTime string `pulumi:"updateTime"`
}

// BandwidthPackagesBandwidthPackageInput is an input type that accepts BandwidthPackagesBandwidthPackageArgs and BandwidthPackagesBandwidthPackageOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageInput` via:
//
//	BandwidthPackagesBandwidthPackageArgs{...}
type BandwidthPackagesBandwidthPackageInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput
	ToBandwidthPackagesBandwidthPackageOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageOutput
}

type BandwidthPackagesBandwidthPackageArgs struct {
	// The account id.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The detailed information on cross regional connections associated with bandwidth packets.
	Allocations BandwidthPackagesBandwidthPackageAllocationArrayInput `pulumi:"allocations"`
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing type of the transit router bandwidth package.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The business status of the transit router bandwidth package.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time of the transit router bandwidth package.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime pulumi.StringInput `pulumi:"deleteTime"`
	// The description of the transit router bandwidth package.
	Description pulumi.StringInput `pulumi:"description"`
	// The expired time of the transit router bandwidth package.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The id of the transit router bandwidth package.
	Id pulumi.StringInput `pulumi:"id"`
	// The local geographic region set ID.
	LocalGeographicRegionSetId pulumi.StringInput `pulumi:"localGeographicRegionSetId"`
	// The peer geographic region set ID.
	PeerGeographicRegionSetId pulumi.StringInput `pulumi:"peerGeographicRegionSetId"`
	// The ProjectName of the TransitRouter bandwidth package.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
	RemainingBandwidth pulumi.IntInput `pulumi:"remainingBandwidth"`
	// The status of the transit router bandwidth package.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags BandwidthPackagesBandwidthPackageTagArrayInput `pulumi:"tags"`
	// The id of the transit router attachment.
	TransitRouterBandwidthPackageId pulumi.StringInput `pulumi:"transitRouterBandwidthPackageId"`
	// The name of the TransitRouter bandwidth package.
	TransitRouterBandwidthPackageName pulumi.StringInput `pulumi:"transitRouterBandwidthPackageName"`
	// The update time of the transit router bandwidth package.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (BandwidthPackagesBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageArgs) ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput {
	return i.ToBandwidthPackagesBandwidthPackageOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageArgs) ToBandwidthPackagesBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageOutput)
}

// BandwidthPackagesBandwidthPackageArrayInput is an input type that accepts BandwidthPackagesBandwidthPackageArray and BandwidthPackagesBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageArrayInput` via:
//
//	BandwidthPackagesBandwidthPackageArray{ BandwidthPackagesBandwidthPackageArgs{...} }
type BandwidthPackagesBandwidthPackageArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput
	ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageArrayOutput
}

type BandwidthPackagesBandwidthPackageArray []BandwidthPackagesBandwidthPackageInput

func (BandwidthPackagesBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageArray) ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput {
	return i.ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageArray) ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageArrayOutput)
}

type BandwidthPackagesBandwidthPackageOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageOutput) ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageOutput) ToBandwidthPackagesBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageOutput {
	return o
}

// The account id.
func (o BandwidthPackagesBandwidthPackageOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.AccountId }).(pulumi.StringOutput)
}

// The detailed information on cross regional connections associated with bandwidth packets.
func (o BandwidthPackagesBandwidthPackageOutput) Allocations() BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) []BandwidthPackagesBandwidthPackageAllocation {
		return v.Allocations
	}).(BandwidthPackagesBandwidthPackageAllocationArrayOutput)
}

// The bandwidth peak of the transit router bandwidth package. Unit: Mbps.
func (o BandwidthPackagesBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing type of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.BillingType }).(pulumi.StringOutput)
}

// The business status of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// The description of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Description }).(pulumi.StringOutput)
}

// The expired time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The id of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Id }).(pulumi.StringOutput)
}

// The local geographic region set ID.
func (o BandwidthPackagesBandwidthPackageOutput) LocalGeographicRegionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.LocalGeographicRegionSetId }).(pulumi.StringOutput)
}

// The peer geographic region set ID.
func (o BandwidthPackagesBandwidthPackageOutput) PeerGeographicRegionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.PeerGeographicRegionSetId }).(pulumi.StringOutput)
}

// The ProjectName of the TransitRouter bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
func (o BandwidthPackagesBandwidthPackageOutput) RemainingBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) int { return v.RemainingBandwidth }).(pulumi.IntOutput)
}

// The status of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o BandwidthPackagesBandwidthPackageOutput) Tags() BandwidthPackagesBandwidthPackageTagArrayOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) []BandwidthPackagesBandwidthPackageTag { return v.Tags }).(BandwidthPackagesBandwidthPackageTagArrayOutput)
}

// The id of the transit router attachment.
func (o BandwidthPackagesBandwidthPackageOutput) TransitRouterBandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.TransitRouterBandwidthPackageId }).(pulumi.StringOutput)
}

// The name of the TransitRouter bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) TransitRouterBandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.TransitRouterBandwidthPackageName }).(pulumi.StringOutput)
}

// The update time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type BandwidthPackagesBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesBandwidthPackage {
		return vs[0].([]BandwidthPackagesBandwidthPackage)[vs[1].(int)]
	}).(BandwidthPackagesBandwidthPackageOutput)
}

type BandwidthPackagesBandwidthPackageAllocation struct {
	// The delete time of the transit router bandwidth package.
	AllocateTime string `pulumi:"allocateTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime string `pulumi:"deleteTime"`
	// The local region id of the transit router.
	LocalRegionId string `pulumi:"localRegionId"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId string `pulumi:"transitRouterPeerAttachmentId"`
}

// BandwidthPackagesBandwidthPackageAllocationInput is an input type that accepts BandwidthPackagesBandwidthPackageAllocationArgs and BandwidthPackagesBandwidthPackageAllocationOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageAllocationInput` via:
//
//	BandwidthPackagesBandwidthPackageAllocationArgs{...}
type BandwidthPackagesBandwidthPackageAllocationInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageAllocationOutput() BandwidthPackagesBandwidthPackageAllocationOutput
	ToBandwidthPackagesBandwidthPackageAllocationOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageAllocationOutput
}

type BandwidthPackagesBandwidthPackageAllocationArgs struct {
	// The delete time of the transit router bandwidth package.
	AllocateTime pulumi.StringInput `pulumi:"allocateTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime pulumi.StringInput `pulumi:"deleteTime"`
	// The local region id of the transit router.
	LocalRegionId pulumi.StringInput `pulumi:"localRegionId"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId pulumi.StringInput `pulumi:"transitRouterPeerAttachmentId"`
}

func (BandwidthPackagesBandwidthPackageAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackageAllocation)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageAllocationArgs) ToBandwidthPackagesBandwidthPackageAllocationOutput() BandwidthPackagesBandwidthPackageAllocationOutput {
	return i.ToBandwidthPackagesBandwidthPackageAllocationOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageAllocationArgs) ToBandwidthPackagesBandwidthPackageAllocationOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageAllocationOutput)
}

// BandwidthPackagesBandwidthPackageAllocationArrayInput is an input type that accepts BandwidthPackagesBandwidthPackageAllocationArray and BandwidthPackagesBandwidthPackageAllocationArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageAllocationArrayInput` via:
//
//	BandwidthPackagesBandwidthPackageAllocationArray{ BandwidthPackagesBandwidthPackageAllocationArgs{...} }
type BandwidthPackagesBandwidthPackageAllocationArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageAllocationArrayOutput() BandwidthPackagesBandwidthPackageAllocationArrayOutput
	ToBandwidthPackagesBandwidthPackageAllocationArrayOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageAllocationArrayOutput
}

type BandwidthPackagesBandwidthPackageAllocationArray []BandwidthPackagesBandwidthPackageAllocationInput

func (BandwidthPackagesBandwidthPackageAllocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackageAllocation)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageAllocationArray) ToBandwidthPackagesBandwidthPackageAllocationArrayOutput() BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return i.ToBandwidthPackagesBandwidthPackageAllocationArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageAllocationArray) ToBandwidthPackagesBandwidthPackageAllocationArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageAllocationArrayOutput)
}

type BandwidthPackagesBandwidthPackageAllocationOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackageAllocation)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageAllocationOutput) ToBandwidthPackagesBandwidthPackageAllocationOutput() BandwidthPackagesBandwidthPackageAllocationOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageAllocationOutput) ToBandwidthPackagesBandwidthPackageAllocationOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageAllocationOutput {
	return o
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageAllocationOutput) AllocateTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageAllocation) string { return v.AllocateTime }).(pulumi.StringOutput)
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageAllocationOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageAllocation) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// The local region id of the transit router.
func (o BandwidthPackagesBandwidthPackageAllocationOutput) LocalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageAllocation) string { return v.LocalRegionId }).(pulumi.StringOutput)
}

// The ID of the peer attachment.
func (o BandwidthPackagesBandwidthPackageAllocationOutput) TransitRouterPeerAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageAllocation) string { return v.TransitRouterPeerAttachmentId }).(pulumi.StringOutput)
}

type BandwidthPackagesBandwidthPackageAllocationArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageAllocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackageAllocation)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageAllocationArrayOutput) ToBandwidthPackagesBandwidthPackageAllocationArrayOutput() BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageAllocationArrayOutput) ToBandwidthPackagesBandwidthPackageAllocationArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageAllocationArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesBandwidthPackageAllocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesBandwidthPackageAllocation {
		return vs[0].([]BandwidthPackagesBandwidthPackageAllocation)[vs[1].(int)]
	}).(BandwidthPackagesBandwidthPackageAllocationOutput)
}

type BandwidthPackagesBandwidthPackageTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// BandwidthPackagesBandwidthPackageTagInput is an input type that accepts BandwidthPackagesBandwidthPackageTagArgs and BandwidthPackagesBandwidthPackageTagOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageTagInput` via:
//
//	BandwidthPackagesBandwidthPackageTagArgs{...}
type BandwidthPackagesBandwidthPackageTagInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageTagOutput() BandwidthPackagesBandwidthPackageTagOutput
	ToBandwidthPackagesBandwidthPackageTagOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageTagOutput
}

type BandwidthPackagesBandwidthPackageTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BandwidthPackagesBandwidthPackageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackageTag)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageTagArgs) ToBandwidthPackagesBandwidthPackageTagOutput() BandwidthPackagesBandwidthPackageTagOutput {
	return i.ToBandwidthPackagesBandwidthPackageTagOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageTagArgs) ToBandwidthPackagesBandwidthPackageTagOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageTagOutput)
}

// BandwidthPackagesBandwidthPackageTagArrayInput is an input type that accepts BandwidthPackagesBandwidthPackageTagArray and BandwidthPackagesBandwidthPackageTagArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageTagArrayInput` via:
//
//	BandwidthPackagesBandwidthPackageTagArray{ BandwidthPackagesBandwidthPackageTagArgs{...} }
type BandwidthPackagesBandwidthPackageTagArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageTagArrayOutput() BandwidthPackagesBandwidthPackageTagArrayOutput
	ToBandwidthPackagesBandwidthPackageTagArrayOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageTagArrayOutput
}

type BandwidthPackagesBandwidthPackageTagArray []BandwidthPackagesBandwidthPackageTagInput

func (BandwidthPackagesBandwidthPackageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackageTag)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageTagArray) ToBandwidthPackagesBandwidthPackageTagArrayOutput() BandwidthPackagesBandwidthPackageTagArrayOutput {
	return i.ToBandwidthPackagesBandwidthPackageTagArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageTagArray) ToBandwidthPackagesBandwidthPackageTagArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageTagArrayOutput)
}

type BandwidthPackagesBandwidthPackageTagOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackageTag)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageTagOutput) ToBandwidthPackagesBandwidthPackageTagOutput() BandwidthPackagesBandwidthPackageTagOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageTagOutput) ToBandwidthPackagesBandwidthPackageTagOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageTagOutput {
	return o
}

// The Key of Tags.
func (o BandwidthPackagesBandwidthPackageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o BandwidthPackagesBandwidthPackageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageTag) string { return v.Value }).(pulumi.StringOutput)
}

type BandwidthPackagesBandwidthPackageTagArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackageTag)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageTagArrayOutput) ToBandwidthPackagesBandwidthPackageTagArrayOutput() BandwidthPackagesBandwidthPackageTagArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageTagArrayOutput) ToBandwidthPackagesBandwidthPackageTagArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageTagArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageTagArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesBandwidthPackageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesBandwidthPackageTag {
		return vs[0].([]BandwidthPackagesBandwidthPackageTag)[vs[1].(int)]
	}).(BandwidthPackagesBandwidthPackageTagOutput)
}

type BandwidthPackagesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// BandwidthPackagesTagInput is an input type that accepts BandwidthPackagesTagArgs and BandwidthPackagesTagOutput values.
// You can construct a concrete instance of `BandwidthPackagesTagInput` via:
//
//	BandwidthPackagesTagArgs{...}
type BandwidthPackagesTagInput interface {
	pulumi.Input

	ToBandwidthPackagesTagOutput() BandwidthPackagesTagOutput
	ToBandwidthPackagesTagOutputWithContext(context.Context) BandwidthPackagesTagOutput
}

type BandwidthPackagesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BandwidthPackagesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesTag)(nil)).Elem()
}

func (i BandwidthPackagesTagArgs) ToBandwidthPackagesTagOutput() BandwidthPackagesTagOutput {
	return i.ToBandwidthPackagesTagOutputWithContext(context.Background())
}

func (i BandwidthPackagesTagArgs) ToBandwidthPackagesTagOutputWithContext(ctx context.Context) BandwidthPackagesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesTagOutput)
}

// BandwidthPackagesTagArrayInput is an input type that accepts BandwidthPackagesTagArray and BandwidthPackagesTagArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesTagArrayInput` via:
//
//	BandwidthPackagesTagArray{ BandwidthPackagesTagArgs{...} }
type BandwidthPackagesTagArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesTagArrayOutput() BandwidthPackagesTagArrayOutput
	ToBandwidthPackagesTagArrayOutputWithContext(context.Context) BandwidthPackagesTagArrayOutput
}

type BandwidthPackagesTagArray []BandwidthPackagesTagInput

func (BandwidthPackagesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesTag)(nil)).Elem()
}

func (i BandwidthPackagesTagArray) ToBandwidthPackagesTagArrayOutput() BandwidthPackagesTagArrayOutput {
	return i.ToBandwidthPackagesTagArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesTagArray) ToBandwidthPackagesTagArrayOutputWithContext(ctx context.Context) BandwidthPackagesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesTagArrayOutput)
}

type BandwidthPackagesTagOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesTag)(nil)).Elem()
}

func (o BandwidthPackagesTagOutput) ToBandwidthPackagesTagOutput() BandwidthPackagesTagOutput {
	return o
}

func (o BandwidthPackagesTagOutput) ToBandwidthPackagesTagOutputWithContext(ctx context.Context) BandwidthPackagesTagOutput {
	return o
}

// The Key of Tags.
func (o BandwidthPackagesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o BandwidthPackagesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesTag) string { return v.Value }).(pulumi.StringOutput)
}

type BandwidthPackagesTagArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesTag)(nil)).Elem()
}

func (o BandwidthPackagesTagArrayOutput) ToBandwidthPackagesTagArrayOutput() BandwidthPackagesTagArrayOutput {
	return o
}

func (o BandwidthPackagesTagArrayOutput) ToBandwidthPackagesTagArrayOutputWithContext(ctx context.Context) BandwidthPackagesTagArrayOutput {
	return o
}

func (o BandwidthPackagesTagArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesTag {
		return vs[0].([]BandwidthPackagesTag)[vs[1].(int)]
	}).(BandwidthPackagesTagOutput)
}

type DirectConnectGatewayAttachmentTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// DirectConnectGatewayAttachmentTagInput is an input type that accepts DirectConnectGatewayAttachmentTagArgs and DirectConnectGatewayAttachmentTagOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentTagInput` via:
//
//	DirectConnectGatewayAttachmentTagArgs{...}
type DirectConnectGatewayAttachmentTagInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentTagOutput() DirectConnectGatewayAttachmentTagOutput
	ToDirectConnectGatewayAttachmentTagOutputWithContext(context.Context) DirectConnectGatewayAttachmentTagOutput
}

type DirectConnectGatewayAttachmentTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DirectConnectGatewayAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentTag)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentTagArgs) ToDirectConnectGatewayAttachmentTagOutput() DirectConnectGatewayAttachmentTagOutput {
	return i.ToDirectConnectGatewayAttachmentTagOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentTagArgs) ToDirectConnectGatewayAttachmentTagOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentTagOutput)
}

// DirectConnectGatewayAttachmentTagArrayInput is an input type that accepts DirectConnectGatewayAttachmentTagArray and DirectConnectGatewayAttachmentTagArrayOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentTagArrayInput` via:
//
//	DirectConnectGatewayAttachmentTagArray{ DirectConnectGatewayAttachmentTagArgs{...} }
type DirectConnectGatewayAttachmentTagArrayInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentTagArrayOutput() DirectConnectGatewayAttachmentTagArrayOutput
	ToDirectConnectGatewayAttachmentTagArrayOutputWithContext(context.Context) DirectConnectGatewayAttachmentTagArrayOutput
}

type DirectConnectGatewayAttachmentTagArray []DirectConnectGatewayAttachmentTagInput

func (DirectConnectGatewayAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentTag)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentTagArray) ToDirectConnectGatewayAttachmentTagArrayOutput() DirectConnectGatewayAttachmentTagArrayOutput {
	return i.ToDirectConnectGatewayAttachmentTagArrayOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentTagArray) ToDirectConnectGatewayAttachmentTagArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentTagArrayOutput)
}

type DirectConnectGatewayAttachmentTagOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentTag)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentTagOutput) ToDirectConnectGatewayAttachmentTagOutput() DirectConnectGatewayAttachmentTagOutput {
	return o
}

func (o DirectConnectGatewayAttachmentTagOutput) ToDirectConnectGatewayAttachmentTagOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentTagOutput {
	return o
}

// The Key of Tags.
func (o DirectConnectGatewayAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o DirectConnectGatewayAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type DirectConnectGatewayAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentTag)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentTagArrayOutput) ToDirectConnectGatewayAttachmentTagArrayOutput() DirectConnectGatewayAttachmentTagArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentTagArrayOutput) ToDirectConnectGatewayAttachmentTagArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentTagArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentTagArrayOutput) Index(i pulumi.IntInput) DirectConnectGatewayAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectConnectGatewayAttachmentTag {
		return vs[0].([]DirectConnectGatewayAttachmentTag)[vs[1].(int)]
	}).(DirectConnectGatewayAttachmentTagOutput)
}

type DirectConnectGatewayAttachmentsAttachment struct {
	// The account id.
	AccountId string `pulumi:"accountId"`
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The description info.
	Description string `pulumi:"description"`
	// ID of the direct connection gateway.
	DirectConnectGatewayId string `pulumi:"directConnectGatewayId"`
	// The status of the network instance connection.
	Status string `pulumi:"status"`
	// Tags.
	Tags []DirectConnectGatewayAttachmentsAttachmentTag `pulumi:"tags"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The id of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
}

// DirectConnectGatewayAttachmentsAttachmentInput is an input type that accepts DirectConnectGatewayAttachmentsAttachmentArgs and DirectConnectGatewayAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentsAttachmentInput` via:
//
//	DirectConnectGatewayAttachmentsAttachmentArgs{...}
type DirectConnectGatewayAttachmentsAttachmentInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentsAttachmentOutput() DirectConnectGatewayAttachmentsAttachmentOutput
	ToDirectConnectGatewayAttachmentsAttachmentOutputWithContext(context.Context) DirectConnectGatewayAttachmentsAttachmentOutput
}

type DirectConnectGatewayAttachmentsAttachmentArgs struct {
	// The account id.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description info.
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the direct connection gateway.
	DirectConnectGatewayId pulumi.StringInput `pulumi:"directConnectGatewayId"`
	// The status of the network instance connection.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags DirectConnectGatewayAttachmentsAttachmentTagArrayInput `pulumi:"tags"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The id of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (DirectConnectGatewayAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentsAttachment)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentsAttachmentArgs) ToDirectConnectGatewayAttachmentsAttachmentOutput() DirectConnectGatewayAttachmentsAttachmentOutput {
	return i.ToDirectConnectGatewayAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentsAttachmentArgs) ToDirectConnectGatewayAttachmentsAttachmentOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentsAttachmentOutput)
}

// DirectConnectGatewayAttachmentsAttachmentArrayInput is an input type that accepts DirectConnectGatewayAttachmentsAttachmentArray and DirectConnectGatewayAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentsAttachmentArrayInput` via:
//
//	DirectConnectGatewayAttachmentsAttachmentArray{ DirectConnectGatewayAttachmentsAttachmentArgs{...} }
type DirectConnectGatewayAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentsAttachmentArrayOutput() DirectConnectGatewayAttachmentsAttachmentArrayOutput
	ToDirectConnectGatewayAttachmentsAttachmentArrayOutputWithContext(context.Context) DirectConnectGatewayAttachmentsAttachmentArrayOutput
}

type DirectConnectGatewayAttachmentsAttachmentArray []DirectConnectGatewayAttachmentsAttachmentInput

func (DirectConnectGatewayAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentsAttachment)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentsAttachmentArray) ToDirectConnectGatewayAttachmentsAttachmentArrayOutput() DirectConnectGatewayAttachmentsAttachmentArrayOutput {
	return i.ToDirectConnectGatewayAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentsAttachmentArray) ToDirectConnectGatewayAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentsAttachmentArrayOutput)
}

type DirectConnectGatewayAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentsAttachment)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentsAttachmentOutput) ToDirectConnectGatewayAttachmentsAttachmentOutput() DirectConnectGatewayAttachmentsAttachmentOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsAttachmentOutput) ToDirectConnectGatewayAttachmentsAttachmentOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsAttachmentOutput {
	return o
}

// The account id.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.AccountId }).(pulumi.StringOutput)
}

// The create time.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description info.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the direct connection gateway.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) DirectConnectGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.DirectConnectGatewayId }).(pulumi.StringOutput)
}

// The status of the network instance connection.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) Tags() DirectConnectGatewayAttachmentsAttachmentTagArrayOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) []DirectConnectGatewayAttachmentsAttachmentTag {
		return v.Tags
	}).(DirectConnectGatewayAttachmentsAttachmentTagArrayOutput)
}

// The id of the transit router attachment.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of the transit router attachment.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// The id of the transit router.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The update time.
func (o DirectConnectGatewayAttachmentsAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type DirectConnectGatewayAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentsAttachment)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentsAttachmentArrayOutput) ToDirectConnectGatewayAttachmentsAttachmentArrayOutput() DirectConnectGatewayAttachmentsAttachmentArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsAttachmentArrayOutput) ToDirectConnectGatewayAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsAttachmentArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) DirectConnectGatewayAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectConnectGatewayAttachmentsAttachment {
		return vs[0].([]DirectConnectGatewayAttachmentsAttachment)[vs[1].(int)]
	}).(DirectConnectGatewayAttachmentsAttachmentOutput)
}

type DirectConnectGatewayAttachmentsAttachmentTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// DirectConnectGatewayAttachmentsAttachmentTagInput is an input type that accepts DirectConnectGatewayAttachmentsAttachmentTagArgs and DirectConnectGatewayAttachmentsAttachmentTagOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentsAttachmentTagInput` via:
//
//	DirectConnectGatewayAttachmentsAttachmentTagArgs{...}
type DirectConnectGatewayAttachmentsAttachmentTagInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentsAttachmentTagOutput() DirectConnectGatewayAttachmentsAttachmentTagOutput
	ToDirectConnectGatewayAttachmentsAttachmentTagOutputWithContext(context.Context) DirectConnectGatewayAttachmentsAttachmentTagOutput
}

type DirectConnectGatewayAttachmentsAttachmentTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DirectConnectGatewayAttachmentsAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentsAttachmentTag)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentsAttachmentTagArgs) ToDirectConnectGatewayAttachmentsAttachmentTagOutput() DirectConnectGatewayAttachmentsAttachmentTagOutput {
	return i.ToDirectConnectGatewayAttachmentsAttachmentTagOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentsAttachmentTagArgs) ToDirectConnectGatewayAttachmentsAttachmentTagOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentsAttachmentTagOutput)
}

// DirectConnectGatewayAttachmentsAttachmentTagArrayInput is an input type that accepts DirectConnectGatewayAttachmentsAttachmentTagArray and DirectConnectGatewayAttachmentsAttachmentTagArrayOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentsAttachmentTagArrayInput` via:
//
//	DirectConnectGatewayAttachmentsAttachmentTagArray{ DirectConnectGatewayAttachmentsAttachmentTagArgs{...} }
type DirectConnectGatewayAttachmentsAttachmentTagArrayInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentsAttachmentTagArrayOutput() DirectConnectGatewayAttachmentsAttachmentTagArrayOutput
	ToDirectConnectGatewayAttachmentsAttachmentTagArrayOutputWithContext(context.Context) DirectConnectGatewayAttachmentsAttachmentTagArrayOutput
}

type DirectConnectGatewayAttachmentsAttachmentTagArray []DirectConnectGatewayAttachmentsAttachmentTagInput

func (DirectConnectGatewayAttachmentsAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentsAttachmentTag)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentsAttachmentTagArray) ToDirectConnectGatewayAttachmentsAttachmentTagArrayOutput() DirectConnectGatewayAttachmentsAttachmentTagArrayOutput {
	return i.ToDirectConnectGatewayAttachmentsAttachmentTagArrayOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentsAttachmentTagArray) ToDirectConnectGatewayAttachmentsAttachmentTagArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentsAttachmentTagArrayOutput)
}

type DirectConnectGatewayAttachmentsAttachmentTagOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentsAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentsAttachmentTag)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentsAttachmentTagOutput) ToDirectConnectGatewayAttachmentsAttachmentTagOutput() DirectConnectGatewayAttachmentsAttachmentTagOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsAttachmentTagOutput) ToDirectConnectGatewayAttachmentsAttachmentTagOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsAttachmentTagOutput {
	return o
}

// The Key of Tags.
func (o DirectConnectGatewayAttachmentsAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o DirectConnectGatewayAttachmentsAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type DirectConnectGatewayAttachmentsAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentsAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentsAttachmentTag)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentsAttachmentTagArrayOutput) ToDirectConnectGatewayAttachmentsAttachmentTagArrayOutput() DirectConnectGatewayAttachmentsAttachmentTagArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsAttachmentTagArrayOutput) ToDirectConnectGatewayAttachmentsAttachmentTagArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsAttachmentTagArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsAttachmentTagArrayOutput) Index(i pulumi.IntInput) DirectConnectGatewayAttachmentsAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectConnectGatewayAttachmentsAttachmentTag {
		return vs[0].([]DirectConnectGatewayAttachmentsAttachmentTag)[vs[1].(int)]
	}).(DirectConnectGatewayAttachmentsAttachmentTagOutput)
}

type DirectConnectGatewayAttachmentsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// DirectConnectGatewayAttachmentsTagInput is an input type that accepts DirectConnectGatewayAttachmentsTagArgs and DirectConnectGatewayAttachmentsTagOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentsTagInput` via:
//
//	DirectConnectGatewayAttachmentsTagArgs{...}
type DirectConnectGatewayAttachmentsTagInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentsTagOutput() DirectConnectGatewayAttachmentsTagOutput
	ToDirectConnectGatewayAttachmentsTagOutputWithContext(context.Context) DirectConnectGatewayAttachmentsTagOutput
}

type DirectConnectGatewayAttachmentsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DirectConnectGatewayAttachmentsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentsTag)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentsTagArgs) ToDirectConnectGatewayAttachmentsTagOutput() DirectConnectGatewayAttachmentsTagOutput {
	return i.ToDirectConnectGatewayAttachmentsTagOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentsTagArgs) ToDirectConnectGatewayAttachmentsTagOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentsTagOutput)
}

// DirectConnectGatewayAttachmentsTagArrayInput is an input type that accepts DirectConnectGatewayAttachmentsTagArray and DirectConnectGatewayAttachmentsTagArrayOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentsTagArrayInput` via:
//
//	DirectConnectGatewayAttachmentsTagArray{ DirectConnectGatewayAttachmentsTagArgs{...} }
type DirectConnectGatewayAttachmentsTagArrayInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentsTagArrayOutput() DirectConnectGatewayAttachmentsTagArrayOutput
	ToDirectConnectGatewayAttachmentsTagArrayOutputWithContext(context.Context) DirectConnectGatewayAttachmentsTagArrayOutput
}

type DirectConnectGatewayAttachmentsTagArray []DirectConnectGatewayAttachmentsTagInput

func (DirectConnectGatewayAttachmentsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentsTag)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentsTagArray) ToDirectConnectGatewayAttachmentsTagArrayOutput() DirectConnectGatewayAttachmentsTagArrayOutput {
	return i.ToDirectConnectGatewayAttachmentsTagArrayOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentsTagArray) ToDirectConnectGatewayAttachmentsTagArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentsTagArrayOutput)
}

type DirectConnectGatewayAttachmentsTagOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentsTag)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentsTagOutput) ToDirectConnectGatewayAttachmentsTagOutput() DirectConnectGatewayAttachmentsTagOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsTagOutput) ToDirectConnectGatewayAttachmentsTagOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsTagOutput {
	return o
}

// The Key of Tags.
func (o DirectConnectGatewayAttachmentsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o DirectConnectGatewayAttachmentsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentsTag) string { return v.Value }).(pulumi.StringOutput)
}

type DirectConnectGatewayAttachmentsTagArrayOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentsTag)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentsTagArrayOutput) ToDirectConnectGatewayAttachmentsTagArrayOutput() DirectConnectGatewayAttachmentsTagArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsTagArrayOutput) ToDirectConnectGatewayAttachmentsTagArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentsTagArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentsTagArrayOutput) Index(i pulumi.IntInput) DirectConnectGatewayAttachmentsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectConnectGatewayAttachmentsTag {
		return vs[0].([]DirectConnectGatewayAttachmentsTag)[vs[1].(int)]
	}).(DirectConnectGatewayAttachmentsTagOutput)
}

type GrantRulesRule struct {
	// The creation time of the rule.
	CreationTime string `pulumi:"creationTime"`
	// The description of the rule.
	Description string `pulumi:"description"`
	// The id of the grant account.
	GrantAccountId string `pulumi:"grantAccountId"`
	// The status of the rule.
	Status string `pulumi:"status"`
	// The id of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The update time of the rule.
	UpdateTime string `pulumi:"updateTime"`
}

// GrantRulesRuleInput is an input type that accepts GrantRulesRuleArgs and GrantRulesRuleOutput values.
// You can construct a concrete instance of `GrantRulesRuleInput` via:
//
//	GrantRulesRuleArgs{...}
type GrantRulesRuleInput interface {
	pulumi.Input

	ToGrantRulesRuleOutput() GrantRulesRuleOutput
	ToGrantRulesRuleOutputWithContext(context.Context) GrantRulesRuleOutput
}

type GrantRulesRuleArgs struct {
	// The creation time of the rule.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the grant account.
	GrantAccountId pulumi.StringInput `pulumi:"grantAccountId"`
	// The status of the rule.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The update time of the rule.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GrantRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantRulesRule)(nil)).Elem()
}

func (i GrantRulesRuleArgs) ToGrantRulesRuleOutput() GrantRulesRuleOutput {
	return i.ToGrantRulesRuleOutputWithContext(context.Background())
}

func (i GrantRulesRuleArgs) ToGrantRulesRuleOutputWithContext(ctx context.Context) GrantRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantRulesRuleOutput)
}

// GrantRulesRuleArrayInput is an input type that accepts GrantRulesRuleArray and GrantRulesRuleArrayOutput values.
// You can construct a concrete instance of `GrantRulesRuleArrayInput` via:
//
//	GrantRulesRuleArray{ GrantRulesRuleArgs{...} }
type GrantRulesRuleArrayInput interface {
	pulumi.Input

	ToGrantRulesRuleArrayOutput() GrantRulesRuleArrayOutput
	ToGrantRulesRuleArrayOutputWithContext(context.Context) GrantRulesRuleArrayOutput
}

type GrantRulesRuleArray []GrantRulesRuleInput

func (GrantRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GrantRulesRule)(nil)).Elem()
}

func (i GrantRulesRuleArray) ToGrantRulesRuleArrayOutput() GrantRulesRuleArrayOutput {
	return i.ToGrantRulesRuleArrayOutputWithContext(context.Background())
}

func (i GrantRulesRuleArray) ToGrantRulesRuleArrayOutputWithContext(ctx context.Context) GrantRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrantRulesRuleArrayOutput)
}

type GrantRulesRuleOutput struct{ *pulumi.OutputState }

func (GrantRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantRulesRule)(nil)).Elem()
}

func (o GrantRulesRuleOutput) ToGrantRulesRuleOutput() GrantRulesRuleOutput {
	return o
}

func (o GrantRulesRuleOutput) ToGrantRulesRuleOutputWithContext(ctx context.Context) GrantRulesRuleOutput {
	return o
}

// The creation time of the rule.
func (o GrantRulesRuleOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GrantRulesRule) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the rule.
func (o GrantRulesRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GrantRulesRule) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the grant account.
func (o GrantRulesRuleOutput) GrantAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GrantRulesRule) string { return v.GrantAccountId }).(pulumi.StringOutput)
}

// The status of the rule.
func (o GrantRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GrantRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the transit router.
func (o GrantRulesRuleOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GrantRulesRule) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The update time of the rule.
func (o GrantRulesRuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GrantRulesRule) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GrantRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GrantRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GrantRulesRule)(nil)).Elem()
}

func (o GrantRulesRuleArrayOutput) ToGrantRulesRuleArrayOutput() GrantRulesRuleArrayOutput {
	return o
}

func (o GrantRulesRuleArrayOutput) ToGrantRulesRuleArrayOutputWithContext(ctx context.Context) GrantRulesRuleArrayOutput {
	return o
}

func (o GrantRulesRuleArrayOutput) Index(i pulumi.IntInput) GrantRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GrantRulesRule {
		return vs[0].([]GrantRulesRule)[vs[1].(int)]
	}).(GrantRulesRuleOutput)
}

type PeerAttachmentTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// PeerAttachmentTagInput is an input type that accepts PeerAttachmentTagArgs and PeerAttachmentTagOutput values.
// You can construct a concrete instance of `PeerAttachmentTagInput` via:
//
//	PeerAttachmentTagArgs{...}
type PeerAttachmentTagInput interface {
	pulumi.Input

	ToPeerAttachmentTagOutput() PeerAttachmentTagOutput
	ToPeerAttachmentTagOutputWithContext(context.Context) PeerAttachmentTagOutput
}

type PeerAttachmentTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PeerAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentTag)(nil)).Elem()
}

func (i PeerAttachmentTagArgs) ToPeerAttachmentTagOutput() PeerAttachmentTagOutput {
	return i.ToPeerAttachmentTagOutputWithContext(context.Background())
}

func (i PeerAttachmentTagArgs) ToPeerAttachmentTagOutputWithContext(ctx context.Context) PeerAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAttachmentTagOutput)
}

// PeerAttachmentTagArrayInput is an input type that accepts PeerAttachmentTagArray and PeerAttachmentTagArrayOutput values.
// You can construct a concrete instance of `PeerAttachmentTagArrayInput` via:
//
//	PeerAttachmentTagArray{ PeerAttachmentTagArgs{...} }
type PeerAttachmentTagArrayInput interface {
	pulumi.Input

	ToPeerAttachmentTagArrayOutput() PeerAttachmentTagArrayOutput
	ToPeerAttachmentTagArrayOutputWithContext(context.Context) PeerAttachmentTagArrayOutput
}

type PeerAttachmentTagArray []PeerAttachmentTagInput

func (PeerAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAttachmentTag)(nil)).Elem()
}

func (i PeerAttachmentTagArray) ToPeerAttachmentTagArrayOutput() PeerAttachmentTagArrayOutput {
	return i.ToPeerAttachmentTagArrayOutputWithContext(context.Background())
}

func (i PeerAttachmentTagArray) ToPeerAttachmentTagArrayOutputWithContext(ctx context.Context) PeerAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAttachmentTagArrayOutput)
}

type PeerAttachmentTagOutput struct{ *pulumi.OutputState }

func (PeerAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentTag)(nil)).Elem()
}

func (o PeerAttachmentTagOutput) ToPeerAttachmentTagOutput() PeerAttachmentTagOutput {
	return o
}

func (o PeerAttachmentTagOutput) ToPeerAttachmentTagOutputWithContext(ctx context.Context) PeerAttachmentTagOutput {
	return o
}

// The Key of Tags.
func (o PeerAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o PeerAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type PeerAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (PeerAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAttachmentTag)(nil)).Elem()
}

func (o PeerAttachmentTagArrayOutput) ToPeerAttachmentTagArrayOutput() PeerAttachmentTagArrayOutput {
	return o
}

func (o PeerAttachmentTagArrayOutput) ToPeerAttachmentTagArrayOutputWithContext(ctx context.Context) PeerAttachmentTagArrayOutput {
	return o
}

func (o PeerAttachmentTagArrayOutput) Index(i pulumi.IntInput) PeerAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PeerAttachmentTag {
		return vs[0].([]PeerAttachmentTag)[vs[1].(int)]
	}).(PeerAttachmentTagOutput)
}

type PeerAttachmentsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// PeerAttachmentsTagInput is an input type that accepts PeerAttachmentsTagArgs and PeerAttachmentsTagOutput values.
// You can construct a concrete instance of `PeerAttachmentsTagInput` via:
//
//	PeerAttachmentsTagArgs{...}
type PeerAttachmentsTagInput interface {
	pulumi.Input

	ToPeerAttachmentsTagOutput() PeerAttachmentsTagOutput
	ToPeerAttachmentsTagOutputWithContext(context.Context) PeerAttachmentsTagOutput
}

type PeerAttachmentsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PeerAttachmentsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentsTag)(nil)).Elem()
}

func (i PeerAttachmentsTagArgs) ToPeerAttachmentsTagOutput() PeerAttachmentsTagOutput {
	return i.ToPeerAttachmentsTagOutputWithContext(context.Background())
}

func (i PeerAttachmentsTagArgs) ToPeerAttachmentsTagOutputWithContext(ctx context.Context) PeerAttachmentsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAttachmentsTagOutput)
}

// PeerAttachmentsTagArrayInput is an input type that accepts PeerAttachmentsTagArray and PeerAttachmentsTagArrayOutput values.
// You can construct a concrete instance of `PeerAttachmentsTagArrayInput` via:
//
//	PeerAttachmentsTagArray{ PeerAttachmentsTagArgs{...} }
type PeerAttachmentsTagArrayInput interface {
	pulumi.Input

	ToPeerAttachmentsTagArrayOutput() PeerAttachmentsTagArrayOutput
	ToPeerAttachmentsTagArrayOutputWithContext(context.Context) PeerAttachmentsTagArrayOutput
}

type PeerAttachmentsTagArray []PeerAttachmentsTagInput

func (PeerAttachmentsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAttachmentsTag)(nil)).Elem()
}

func (i PeerAttachmentsTagArray) ToPeerAttachmentsTagArrayOutput() PeerAttachmentsTagArrayOutput {
	return i.ToPeerAttachmentsTagArrayOutputWithContext(context.Background())
}

func (i PeerAttachmentsTagArray) ToPeerAttachmentsTagArrayOutputWithContext(ctx context.Context) PeerAttachmentsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAttachmentsTagArrayOutput)
}

type PeerAttachmentsTagOutput struct{ *pulumi.OutputState }

func (PeerAttachmentsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentsTag)(nil)).Elem()
}

func (o PeerAttachmentsTagOutput) ToPeerAttachmentsTagOutput() PeerAttachmentsTagOutput {
	return o
}

func (o PeerAttachmentsTagOutput) ToPeerAttachmentsTagOutputWithContext(ctx context.Context) PeerAttachmentsTagOutput {
	return o
}

// The Key of Tags.
func (o PeerAttachmentsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o PeerAttachmentsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTag) string { return v.Value }).(pulumi.StringOutput)
}

type PeerAttachmentsTagArrayOutput struct{ *pulumi.OutputState }

func (PeerAttachmentsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAttachmentsTag)(nil)).Elem()
}

func (o PeerAttachmentsTagArrayOutput) ToPeerAttachmentsTagArrayOutput() PeerAttachmentsTagArrayOutput {
	return o
}

func (o PeerAttachmentsTagArrayOutput) ToPeerAttachmentsTagArrayOutputWithContext(ctx context.Context) PeerAttachmentsTagArrayOutput {
	return o
}

func (o PeerAttachmentsTagArrayOutput) Index(i pulumi.IntInput) PeerAttachmentsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PeerAttachmentsTag {
		return vs[0].([]PeerAttachmentsTag)[vs[1].(int)]
	}).(PeerAttachmentsTagOutput)
}

type PeerAttachmentsTransitRouterAttachment struct {
	// The bandwidth of the transit router peer attachment.
	Bandwidth int `pulumi:"bandwidth"`
	// The creation time of the transit router peer attachment.
	CreationTime string `pulumi:"creationTime"`
	// The description of the transit router peer attachment.
	Description string `pulumi:"description"`
	// The id of the transit router peer attachment.
	Id string `pulumi:"id"`
	// The id of peer transit router.
	PeerTransitRouterId string `pulumi:"peerTransitRouterId"`
	// The region id of peer transit router.
	PeerTransitRouterRegionId string `pulumi:"peerTransitRouterRegionId"`
	// The status of the transit router peer attachment.
	Status string `pulumi:"status"`
	// Tags.
	Tags []PeerAttachmentsTransitRouterAttachmentTag `pulumi:"tags"`
	// The id of the transit router peer attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The name of transit router peer attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The bandwidth package id of the transit router peer attachment.
	TransitRouterBandwidthPackageId string `pulumi:"transitRouterBandwidthPackageId"`
	// The id of local transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The route table id of the transit router peer attachment.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
	// The update time of the transit router peer attachment.
	UpdateTime string `pulumi:"updateTime"`
}

// PeerAttachmentsTransitRouterAttachmentInput is an input type that accepts PeerAttachmentsTransitRouterAttachmentArgs and PeerAttachmentsTransitRouterAttachmentOutput values.
// You can construct a concrete instance of `PeerAttachmentsTransitRouterAttachmentInput` via:
//
//	PeerAttachmentsTransitRouterAttachmentArgs{...}
type PeerAttachmentsTransitRouterAttachmentInput interface {
	pulumi.Input

	ToPeerAttachmentsTransitRouterAttachmentOutput() PeerAttachmentsTransitRouterAttachmentOutput
	ToPeerAttachmentsTransitRouterAttachmentOutputWithContext(context.Context) PeerAttachmentsTransitRouterAttachmentOutput
}

type PeerAttachmentsTransitRouterAttachmentArgs struct {
	// The bandwidth of the transit router peer attachment.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The creation time of the transit router peer attachment.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the transit router peer attachment.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the transit router peer attachment.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of peer transit router.
	PeerTransitRouterId pulumi.StringInput `pulumi:"peerTransitRouterId"`
	// The region id of peer transit router.
	PeerTransitRouterRegionId pulumi.StringInput `pulumi:"peerTransitRouterRegionId"`
	// The status of the transit router peer attachment.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags PeerAttachmentsTransitRouterAttachmentTagArrayInput `pulumi:"tags"`
	// The id of the transit router peer attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of transit router peer attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The bandwidth package id of the transit router peer attachment.
	TransitRouterBandwidthPackageId pulumi.StringInput `pulumi:"transitRouterBandwidthPackageId"`
	// The id of local transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The route table id of the transit router peer attachment.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
	// The update time of the transit router peer attachment.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (PeerAttachmentsTransitRouterAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentsTransitRouterAttachment)(nil)).Elem()
}

func (i PeerAttachmentsTransitRouterAttachmentArgs) ToPeerAttachmentsTransitRouterAttachmentOutput() PeerAttachmentsTransitRouterAttachmentOutput {
	return i.ToPeerAttachmentsTransitRouterAttachmentOutputWithContext(context.Background())
}

func (i PeerAttachmentsTransitRouterAttachmentArgs) ToPeerAttachmentsTransitRouterAttachmentOutputWithContext(ctx context.Context) PeerAttachmentsTransitRouterAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAttachmentsTransitRouterAttachmentOutput)
}

// PeerAttachmentsTransitRouterAttachmentArrayInput is an input type that accepts PeerAttachmentsTransitRouterAttachmentArray and PeerAttachmentsTransitRouterAttachmentArrayOutput values.
// You can construct a concrete instance of `PeerAttachmentsTransitRouterAttachmentArrayInput` via:
//
//	PeerAttachmentsTransitRouterAttachmentArray{ PeerAttachmentsTransitRouterAttachmentArgs{...} }
type PeerAttachmentsTransitRouterAttachmentArrayInput interface {
	pulumi.Input

	ToPeerAttachmentsTransitRouterAttachmentArrayOutput() PeerAttachmentsTransitRouterAttachmentArrayOutput
	ToPeerAttachmentsTransitRouterAttachmentArrayOutputWithContext(context.Context) PeerAttachmentsTransitRouterAttachmentArrayOutput
}

type PeerAttachmentsTransitRouterAttachmentArray []PeerAttachmentsTransitRouterAttachmentInput

func (PeerAttachmentsTransitRouterAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAttachmentsTransitRouterAttachment)(nil)).Elem()
}

func (i PeerAttachmentsTransitRouterAttachmentArray) ToPeerAttachmentsTransitRouterAttachmentArrayOutput() PeerAttachmentsTransitRouterAttachmentArrayOutput {
	return i.ToPeerAttachmentsTransitRouterAttachmentArrayOutputWithContext(context.Background())
}

func (i PeerAttachmentsTransitRouterAttachmentArray) ToPeerAttachmentsTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) PeerAttachmentsTransitRouterAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAttachmentsTransitRouterAttachmentArrayOutput)
}

type PeerAttachmentsTransitRouterAttachmentOutput struct{ *pulumi.OutputState }

func (PeerAttachmentsTransitRouterAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentsTransitRouterAttachment)(nil)).Elem()
}

func (o PeerAttachmentsTransitRouterAttachmentOutput) ToPeerAttachmentsTransitRouterAttachmentOutput() PeerAttachmentsTransitRouterAttachmentOutput {
	return o
}

func (o PeerAttachmentsTransitRouterAttachmentOutput) ToPeerAttachmentsTransitRouterAttachmentOutputWithContext(ctx context.Context) PeerAttachmentsTransitRouterAttachmentOutput {
	return o
}

// The bandwidth of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The creation time of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.Id }).(pulumi.StringOutput)
}

// The id of peer transit router.
func (o PeerAttachmentsTransitRouterAttachmentOutput) PeerTransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.PeerTransitRouterId }).(pulumi.StringOutput)
}

// The region id of peer transit router.
func (o PeerAttachmentsTransitRouterAttachmentOutput) PeerTransitRouterRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.PeerTransitRouterRegionId }).(pulumi.StringOutput)
}

// The status of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o PeerAttachmentsTransitRouterAttachmentOutput) Tags() PeerAttachmentsTransitRouterAttachmentTagArrayOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) []PeerAttachmentsTransitRouterAttachmentTag {
		return v.Tags
	}).(PeerAttachmentsTransitRouterAttachmentTagArrayOutput)
}

// The id of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// The bandwidth package id of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) TransitRouterBandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.TransitRouterBandwidthPackageId }).(pulumi.StringOutput)
}

// The id of local transit router.
func (o PeerAttachmentsTransitRouterAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The route table id of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

// The update time of the transit router peer attachment.
func (o PeerAttachmentsTransitRouterAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type PeerAttachmentsTransitRouterAttachmentArrayOutput struct{ *pulumi.OutputState }

func (PeerAttachmentsTransitRouterAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAttachmentsTransitRouterAttachment)(nil)).Elem()
}

func (o PeerAttachmentsTransitRouterAttachmentArrayOutput) ToPeerAttachmentsTransitRouterAttachmentArrayOutput() PeerAttachmentsTransitRouterAttachmentArrayOutput {
	return o
}

func (o PeerAttachmentsTransitRouterAttachmentArrayOutput) ToPeerAttachmentsTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) PeerAttachmentsTransitRouterAttachmentArrayOutput {
	return o
}

func (o PeerAttachmentsTransitRouterAttachmentArrayOutput) Index(i pulumi.IntInput) PeerAttachmentsTransitRouterAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PeerAttachmentsTransitRouterAttachment {
		return vs[0].([]PeerAttachmentsTransitRouterAttachment)[vs[1].(int)]
	}).(PeerAttachmentsTransitRouterAttachmentOutput)
}

type PeerAttachmentsTransitRouterAttachmentTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// PeerAttachmentsTransitRouterAttachmentTagInput is an input type that accepts PeerAttachmentsTransitRouterAttachmentTagArgs and PeerAttachmentsTransitRouterAttachmentTagOutput values.
// You can construct a concrete instance of `PeerAttachmentsTransitRouterAttachmentTagInput` via:
//
//	PeerAttachmentsTransitRouterAttachmentTagArgs{...}
type PeerAttachmentsTransitRouterAttachmentTagInput interface {
	pulumi.Input

	ToPeerAttachmentsTransitRouterAttachmentTagOutput() PeerAttachmentsTransitRouterAttachmentTagOutput
	ToPeerAttachmentsTransitRouterAttachmentTagOutputWithContext(context.Context) PeerAttachmentsTransitRouterAttachmentTagOutput
}

type PeerAttachmentsTransitRouterAttachmentTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PeerAttachmentsTransitRouterAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentsTransitRouterAttachmentTag)(nil)).Elem()
}

func (i PeerAttachmentsTransitRouterAttachmentTagArgs) ToPeerAttachmentsTransitRouterAttachmentTagOutput() PeerAttachmentsTransitRouterAttachmentTagOutput {
	return i.ToPeerAttachmentsTransitRouterAttachmentTagOutputWithContext(context.Background())
}

func (i PeerAttachmentsTransitRouterAttachmentTagArgs) ToPeerAttachmentsTransitRouterAttachmentTagOutputWithContext(ctx context.Context) PeerAttachmentsTransitRouterAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAttachmentsTransitRouterAttachmentTagOutput)
}

// PeerAttachmentsTransitRouterAttachmentTagArrayInput is an input type that accepts PeerAttachmentsTransitRouterAttachmentTagArray and PeerAttachmentsTransitRouterAttachmentTagArrayOutput values.
// You can construct a concrete instance of `PeerAttachmentsTransitRouterAttachmentTagArrayInput` via:
//
//	PeerAttachmentsTransitRouterAttachmentTagArray{ PeerAttachmentsTransitRouterAttachmentTagArgs{...} }
type PeerAttachmentsTransitRouterAttachmentTagArrayInput interface {
	pulumi.Input

	ToPeerAttachmentsTransitRouterAttachmentTagArrayOutput() PeerAttachmentsTransitRouterAttachmentTagArrayOutput
	ToPeerAttachmentsTransitRouterAttachmentTagArrayOutputWithContext(context.Context) PeerAttachmentsTransitRouterAttachmentTagArrayOutput
}

type PeerAttachmentsTransitRouterAttachmentTagArray []PeerAttachmentsTransitRouterAttachmentTagInput

func (PeerAttachmentsTransitRouterAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAttachmentsTransitRouterAttachmentTag)(nil)).Elem()
}

func (i PeerAttachmentsTransitRouterAttachmentTagArray) ToPeerAttachmentsTransitRouterAttachmentTagArrayOutput() PeerAttachmentsTransitRouterAttachmentTagArrayOutput {
	return i.ToPeerAttachmentsTransitRouterAttachmentTagArrayOutputWithContext(context.Background())
}

func (i PeerAttachmentsTransitRouterAttachmentTagArray) ToPeerAttachmentsTransitRouterAttachmentTagArrayOutputWithContext(ctx context.Context) PeerAttachmentsTransitRouterAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAttachmentsTransitRouterAttachmentTagArrayOutput)
}

type PeerAttachmentsTransitRouterAttachmentTagOutput struct{ *pulumi.OutputState }

func (PeerAttachmentsTransitRouterAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAttachmentsTransitRouterAttachmentTag)(nil)).Elem()
}

func (o PeerAttachmentsTransitRouterAttachmentTagOutput) ToPeerAttachmentsTransitRouterAttachmentTagOutput() PeerAttachmentsTransitRouterAttachmentTagOutput {
	return o
}

func (o PeerAttachmentsTransitRouterAttachmentTagOutput) ToPeerAttachmentsTransitRouterAttachmentTagOutputWithContext(ctx context.Context) PeerAttachmentsTransitRouterAttachmentTagOutput {
	return o
}

// The Key of Tags.
func (o PeerAttachmentsTransitRouterAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o PeerAttachmentsTransitRouterAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PeerAttachmentsTransitRouterAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type PeerAttachmentsTransitRouterAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (PeerAttachmentsTransitRouterAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerAttachmentsTransitRouterAttachmentTag)(nil)).Elem()
}

func (o PeerAttachmentsTransitRouterAttachmentTagArrayOutput) ToPeerAttachmentsTransitRouterAttachmentTagArrayOutput() PeerAttachmentsTransitRouterAttachmentTagArrayOutput {
	return o
}

func (o PeerAttachmentsTransitRouterAttachmentTagArrayOutput) ToPeerAttachmentsTransitRouterAttachmentTagArrayOutputWithContext(ctx context.Context) PeerAttachmentsTransitRouterAttachmentTagArrayOutput {
	return o
}

func (o PeerAttachmentsTransitRouterAttachmentTagArrayOutput) Index(i pulumi.IntInput) PeerAttachmentsTransitRouterAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PeerAttachmentsTransitRouterAttachmentTag {
		return vs[0].([]PeerAttachmentsTransitRouterAttachmentTag)[vs[1].(int)]
	}).(PeerAttachmentsTransitRouterAttachmentTagOutput)
}

type RouteEntriesEntry struct {
	// The creation time of the route entry.
	CreationTime string `pulumi:"creationTime"`
	// Description of the transit router route entry.
	Description string `pulumi:"description"`
	// The target network segment of the route entry.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The status of the route entry.
	Status string `pulumi:"status"`
	// The id of the route entry.
	TransitRouterRouteEntryId string `pulumi:"transitRouterRouteEntryId"`
	// The name of the route entry.
	TransitRouterRouteEntryName string `pulumi:"transitRouterRouteEntryName"`
	// The next hot id of the routing entry.
	TransitRouterRouteEntryNextHopId string `pulumi:"transitRouterRouteEntryNextHopId"`
	// The next hop type of the routing entry. The value can be Attachment or BlackHole.
	TransitRouterRouteEntryNextHopType string `pulumi:"transitRouterRouteEntryNextHopType"`
	// The type of the route entry.
	TransitRouterRouteEntryType string `pulumi:"transitRouterRouteEntryType"`
	// The update time of the route entry.
	UpdateTime string `pulumi:"updateTime"`
}

// RouteEntriesEntryInput is an input type that accepts RouteEntriesEntryArgs and RouteEntriesEntryOutput values.
// You can construct a concrete instance of `RouteEntriesEntryInput` via:
//
//	RouteEntriesEntryArgs{...}
type RouteEntriesEntryInput interface {
	pulumi.Input

	ToRouteEntriesEntryOutput() RouteEntriesEntryOutput
	ToRouteEntriesEntryOutputWithContext(context.Context) RouteEntriesEntryOutput
}

type RouteEntriesEntryArgs struct {
	// The creation time of the route entry.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description of the transit router route entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The target network segment of the route entry.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The status of the route entry.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the route entry.
	TransitRouterRouteEntryId pulumi.StringInput `pulumi:"transitRouterRouteEntryId"`
	// The name of the route entry.
	TransitRouterRouteEntryName pulumi.StringInput `pulumi:"transitRouterRouteEntryName"`
	// The next hot id of the routing entry.
	TransitRouterRouteEntryNextHopId pulumi.StringInput `pulumi:"transitRouterRouteEntryNextHopId"`
	// The next hop type of the routing entry. The value can be Attachment or BlackHole.
	TransitRouterRouteEntryNextHopType pulumi.StringInput `pulumi:"transitRouterRouteEntryNextHopType"`
	// The type of the route entry.
	TransitRouterRouteEntryType pulumi.StringInput `pulumi:"transitRouterRouteEntryType"`
	// The update time of the route entry.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (RouteEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesEntry)(nil)).Elem()
}

func (i RouteEntriesEntryArgs) ToRouteEntriesEntryOutput() RouteEntriesEntryOutput {
	return i.ToRouteEntriesEntryOutputWithContext(context.Background())
}

func (i RouteEntriesEntryArgs) ToRouteEntriesEntryOutputWithContext(ctx context.Context) RouteEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesEntryOutput)
}

// RouteEntriesEntryArrayInput is an input type that accepts RouteEntriesEntryArray and RouteEntriesEntryArrayOutput values.
// You can construct a concrete instance of `RouteEntriesEntryArrayInput` via:
//
//	RouteEntriesEntryArray{ RouteEntriesEntryArgs{...} }
type RouteEntriesEntryArrayInput interface {
	pulumi.Input

	ToRouteEntriesEntryArrayOutput() RouteEntriesEntryArrayOutput
	ToRouteEntriesEntryArrayOutputWithContext(context.Context) RouteEntriesEntryArrayOutput
}

type RouteEntriesEntryArray []RouteEntriesEntryInput

func (RouteEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesEntry)(nil)).Elem()
}

func (i RouteEntriesEntryArray) ToRouteEntriesEntryArrayOutput() RouteEntriesEntryArrayOutput {
	return i.ToRouteEntriesEntryArrayOutputWithContext(context.Background())
}

func (i RouteEntriesEntryArray) ToRouteEntriesEntryArrayOutputWithContext(ctx context.Context) RouteEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesEntryArrayOutput)
}

type RouteEntriesEntryOutput struct{ *pulumi.OutputState }

func (RouteEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesEntry)(nil)).Elem()
}

func (o RouteEntriesEntryOutput) ToRouteEntriesEntryOutput() RouteEntriesEntryOutput {
	return o
}

func (o RouteEntriesEntryOutput) ToRouteEntriesEntryOutputWithContext(ctx context.Context) RouteEntriesEntryOutput {
	return o
}

// The creation time of the route entry.
func (o RouteEntriesEntryOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description of the transit router route entry.
func (o RouteEntriesEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The target network segment of the route entry.
func (o RouteEntriesEntryOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The status of the route entry.
func (o RouteEntriesEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the route entry.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryId }).(pulumi.StringOutput)
}

// The name of the route entry.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryName }).(pulumi.StringOutput)
}

// The next hot id of the routing entry.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryNextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryNextHopId }).(pulumi.StringOutput)
}

// The next hop type of the routing entry. The value can be Attachment or BlackHole.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryNextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryNextHopType }).(pulumi.StringOutput)
}

// The type of the route entry.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryType }).(pulumi.StringOutput)
}

// The update time of the route entry.
func (o RouteEntriesEntryOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type RouteEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (RouteEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesEntry)(nil)).Elem()
}

func (o RouteEntriesEntryArrayOutput) ToRouteEntriesEntryArrayOutput() RouteEntriesEntryArrayOutput {
	return o
}

func (o RouteEntriesEntryArrayOutput) ToRouteEntriesEntryArrayOutputWithContext(ctx context.Context) RouteEntriesEntryArrayOutput {
	return o
}

func (o RouteEntriesEntryArrayOutput) Index(i pulumi.IntInput) RouteEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteEntriesEntry {
		return vs[0].([]RouteEntriesEntry)[vs[1].(int)]
	}).(RouteEntriesEntryOutput)
}

type RouteTableAssociationsAssociation struct {
	// The status of the route table.
	Status string `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The ID of the routing table associated with the transit router instance.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
}

// RouteTableAssociationsAssociationInput is an input type that accepts RouteTableAssociationsAssociationArgs and RouteTableAssociationsAssociationOutput values.
// You can construct a concrete instance of `RouteTableAssociationsAssociationInput` via:
//
//	RouteTableAssociationsAssociationArgs{...}
type RouteTableAssociationsAssociationInput interface {
	pulumi.Input

	ToRouteTableAssociationsAssociationOutput() RouteTableAssociationsAssociationOutput
	ToRouteTableAssociationsAssociationOutputWithContext(context.Context) RouteTableAssociationsAssociationOutput
}

type RouteTableAssociationsAssociationArgs struct {
	// The status of the route table.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The ID of the routing table associated with the transit router instance.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
}

func (RouteTableAssociationsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableAssociationsAssociation)(nil)).Elem()
}

func (i RouteTableAssociationsAssociationArgs) ToRouteTableAssociationsAssociationOutput() RouteTableAssociationsAssociationOutput {
	return i.ToRouteTableAssociationsAssociationOutputWithContext(context.Background())
}

func (i RouteTableAssociationsAssociationArgs) ToRouteTableAssociationsAssociationOutputWithContext(ctx context.Context) RouteTableAssociationsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociationsAssociationOutput)
}

// RouteTableAssociationsAssociationArrayInput is an input type that accepts RouteTableAssociationsAssociationArray and RouteTableAssociationsAssociationArrayOutput values.
// You can construct a concrete instance of `RouteTableAssociationsAssociationArrayInput` via:
//
//	RouteTableAssociationsAssociationArray{ RouteTableAssociationsAssociationArgs{...} }
type RouteTableAssociationsAssociationArrayInput interface {
	pulumi.Input

	ToRouteTableAssociationsAssociationArrayOutput() RouteTableAssociationsAssociationArrayOutput
	ToRouteTableAssociationsAssociationArrayOutputWithContext(context.Context) RouteTableAssociationsAssociationArrayOutput
}

type RouteTableAssociationsAssociationArray []RouteTableAssociationsAssociationInput

func (RouteTableAssociationsAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableAssociationsAssociation)(nil)).Elem()
}

func (i RouteTableAssociationsAssociationArray) ToRouteTableAssociationsAssociationArrayOutput() RouteTableAssociationsAssociationArrayOutput {
	return i.ToRouteTableAssociationsAssociationArrayOutputWithContext(context.Background())
}

func (i RouteTableAssociationsAssociationArray) ToRouteTableAssociationsAssociationArrayOutputWithContext(ctx context.Context) RouteTableAssociationsAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociationsAssociationArrayOutput)
}

type RouteTableAssociationsAssociationOutput struct{ *pulumi.OutputState }

func (RouteTableAssociationsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableAssociationsAssociation)(nil)).Elem()
}

func (o RouteTableAssociationsAssociationOutput) ToRouteTableAssociationsAssociationOutput() RouteTableAssociationsAssociationOutput {
	return o
}

func (o RouteTableAssociationsAssociationOutput) ToRouteTableAssociationsAssociationOutputWithContext(ctx context.Context) RouteTableAssociationsAssociationOutput {
	return o
}

// The status of the route table.
func (o RouteTableAssociationsAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableAssociationsAssociation) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the network instance connection.
func (o RouteTableAssociationsAssociationOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableAssociationsAssociation) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The ID of the routing table associated with the transit router instance.
func (o RouteTableAssociationsAssociationOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableAssociationsAssociation) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

type RouteTableAssociationsAssociationArrayOutput struct{ *pulumi.OutputState }

func (RouteTableAssociationsAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableAssociationsAssociation)(nil)).Elem()
}

func (o RouteTableAssociationsAssociationArrayOutput) ToRouteTableAssociationsAssociationArrayOutput() RouteTableAssociationsAssociationArrayOutput {
	return o
}

func (o RouteTableAssociationsAssociationArrayOutput) ToRouteTableAssociationsAssociationArrayOutputWithContext(ctx context.Context) RouteTableAssociationsAssociationArrayOutput {
	return o
}

func (o RouteTableAssociationsAssociationArrayOutput) Index(i pulumi.IntInput) RouteTableAssociationsAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableAssociationsAssociation {
		return vs[0].([]RouteTableAssociationsAssociation)[vs[1].(int)]
	}).(RouteTableAssociationsAssociationOutput)
}

type RouteTablePropagationsPropagation struct {
	// The creation time of the route table propagation.
	CreationTime string `pulumi:"creationTime"`
	// The status of the route table.
	Status string `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The ID of the routing table associated with the transit router instance.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
}

// RouteTablePropagationsPropagationInput is an input type that accepts RouteTablePropagationsPropagationArgs and RouteTablePropagationsPropagationOutput values.
// You can construct a concrete instance of `RouteTablePropagationsPropagationInput` via:
//
//	RouteTablePropagationsPropagationArgs{...}
type RouteTablePropagationsPropagationInput interface {
	pulumi.Input

	ToRouteTablePropagationsPropagationOutput() RouteTablePropagationsPropagationOutput
	ToRouteTablePropagationsPropagationOutputWithContext(context.Context) RouteTablePropagationsPropagationOutput
}

type RouteTablePropagationsPropagationArgs struct {
	// The creation time of the route table propagation.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The status of the route table.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The ID of the routing table associated with the transit router instance.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
}

func (RouteTablePropagationsPropagationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropagationsPropagation)(nil)).Elem()
}

func (i RouteTablePropagationsPropagationArgs) ToRouteTablePropagationsPropagationOutput() RouteTablePropagationsPropagationOutput {
	return i.ToRouteTablePropagationsPropagationOutputWithContext(context.Background())
}

func (i RouteTablePropagationsPropagationArgs) ToRouteTablePropagationsPropagationOutputWithContext(ctx context.Context) RouteTablePropagationsPropagationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropagationsPropagationOutput)
}

// RouteTablePropagationsPropagationArrayInput is an input type that accepts RouteTablePropagationsPropagationArray and RouteTablePropagationsPropagationArrayOutput values.
// You can construct a concrete instance of `RouteTablePropagationsPropagationArrayInput` via:
//
//	RouteTablePropagationsPropagationArray{ RouteTablePropagationsPropagationArgs{...} }
type RouteTablePropagationsPropagationArrayInput interface {
	pulumi.Input

	ToRouteTablePropagationsPropagationArrayOutput() RouteTablePropagationsPropagationArrayOutput
	ToRouteTablePropagationsPropagationArrayOutputWithContext(context.Context) RouteTablePropagationsPropagationArrayOutput
}

type RouteTablePropagationsPropagationArray []RouteTablePropagationsPropagationInput

func (RouteTablePropagationsPropagationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablePropagationsPropagation)(nil)).Elem()
}

func (i RouteTablePropagationsPropagationArray) ToRouteTablePropagationsPropagationArrayOutput() RouteTablePropagationsPropagationArrayOutput {
	return i.ToRouteTablePropagationsPropagationArrayOutputWithContext(context.Background())
}

func (i RouteTablePropagationsPropagationArray) ToRouteTablePropagationsPropagationArrayOutputWithContext(ctx context.Context) RouteTablePropagationsPropagationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropagationsPropagationArrayOutput)
}

type RouteTablePropagationsPropagationOutput struct{ *pulumi.OutputState }

func (RouteTablePropagationsPropagationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropagationsPropagation)(nil)).Elem()
}

func (o RouteTablePropagationsPropagationOutput) ToRouteTablePropagationsPropagationOutput() RouteTablePropagationsPropagationOutput {
	return o
}

func (o RouteTablePropagationsPropagationOutput) ToRouteTablePropagationsPropagationOutputWithContext(ctx context.Context) RouteTablePropagationsPropagationOutput {
	return o
}

// The creation time of the route table propagation.
func (o RouteTablePropagationsPropagationOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablePropagationsPropagation) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The status of the route table.
func (o RouteTablePropagationsPropagationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablePropagationsPropagation) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the network instance connection.
func (o RouteTablePropagationsPropagationOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablePropagationsPropagation) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The ID of the routing table associated with the transit router instance.
func (o RouteTablePropagationsPropagationOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablePropagationsPropagation) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

type RouteTablePropagationsPropagationArrayOutput struct{ *pulumi.OutputState }

func (RouteTablePropagationsPropagationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablePropagationsPropagation)(nil)).Elem()
}

func (o RouteTablePropagationsPropagationArrayOutput) ToRouteTablePropagationsPropagationArrayOutput() RouteTablePropagationsPropagationArrayOutput {
	return o
}

func (o RouteTablePropagationsPropagationArrayOutput) ToRouteTablePropagationsPropagationArrayOutputWithContext(ctx context.Context) RouteTablePropagationsPropagationArrayOutput {
	return o
}

func (o RouteTablePropagationsPropagationArrayOutput) Index(i pulumi.IntInput) RouteTablePropagationsPropagationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablePropagationsPropagation {
		return vs[0].([]RouteTablePropagationsPropagation)[vs[1].(int)]
	}).(RouteTablePropagationsPropagationOutput)
}

type RouteTableTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// RouteTableTagInput is an input type that accepts RouteTableTagArgs and RouteTableTagOutput values.
// You can construct a concrete instance of `RouteTableTagInput` via:
//
//	RouteTableTagArgs{...}
type RouteTableTagInput interface {
	pulumi.Input

	ToRouteTableTagOutput() RouteTableTagOutput
	ToRouteTableTagOutputWithContext(context.Context) RouteTableTagOutput
}

type RouteTableTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableTag)(nil)).Elem()
}

func (i RouteTableTagArgs) ToRouteTableTagOutput() RouteTableTagOutput {
	return i.ToRouteTableTagOutputWithContext(context.Background())
}

func (i RouteTableTagArgs) ToRouteTableTagOutputWithContext(ctx context.Context) RouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTagOutput)
}

// RouteTableTagArrayInput is an input type that accepts RouteTableTagArray and RouteTableTagArrayOutput values.
// You can construct a concrete instance of `RouteTableTagArrayInput` via:
//
//	RouteTableTagArray{ RouteTableTagArgs{...} }
type RouteTableTagArrayInput interface {
	pulumi.Input

	ToRouteTableTagArrayOutput() RouteTableTagArrayOutput
	ToRouteTableTagArrayOutputWithContext(context.Context) RouteTableTagArrayOutput
}

type RouteTableTagArray []RouteTableTagInput

func (RouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableTag)(nil)).Elem()
}

func (i RouteTableTagArray) ToRouteTableTagArrayOutput() RouteTableTagArrayOutput {
	return i.ToRouteTableTagArrayOutputWithContext(context.Background())
}

func (i RouteTableTagArray) ToRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTagArrayOutput)
}

type RouteTableTagOutput struct{ *pulumi.OutputState }

func (RouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableTag)(nil)).Elem()
}

func (o RouteTableTagOutput) ToRouteTableTagOutput() RouteTableTagOutput {
	return o
}

func (o RouteTableTagOutput) ToRouteTableTagOutputWithContext(ctx context.Context) RouteTableTagOutput {
	return o
}

// The Key of Tags.
func (o RouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o RouteTableTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableTag) string { return v.Value }).(pulumi.StringOutput)
}

type RouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (RouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableTag)(nil)).Elem()
}

func (o RouteTableTagArrayOutput) ToRouteTableTagArrayOutput() RouteTableTagArrayOutput {
	return o
}

func (o RouteTableTagArrayOutput) ToRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTableTagArrayOutput {
	return o
}

func (o RouteTableTagArrayOutput) Index(i pulumi.IntInput) RouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableTag {
		return vs[0].([]RouteTableTag)[vs[1].(int)]
	}).(RouteTableTagOutput)
}

type RouteTablesRouteTable struct {
	// The creation time of the route table.
	CreationTime string `pulumi:"creationTime"`
	// The description.
	Description string `pulumi:"description"`
	// The status of the route table.
	Status string `pulumi:"status"`
	// Tags.
	Tags []RouteTablesRouteTableTag `pulumi:"tags"`
	// The id of the route table.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
	// The name of the route table.
	TransitRouterRouteTableName string `pulumi:"transitRouterRouteTableName"`
	// The type of the route table. The value can be System or Custom.
	TransitRouterRouteTableType string `pulumi:"transitRouterRouteTableType"`
	// The update time of the route table.
	UpdateTime string `pulumi:"updateTime"`
}

// RouteTablesRouteTableInput is an input type that accepts RouteTablesRouteTableArgs and RouteTablesRouteTableOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableInput` via:
//
//	RouteTablesRouteTableArgs{...}
type RouteTablesRouteTableInput interface {
	pulumi.Input

	ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput
	ToRouteTablesRouteTableOutputWithContext(context.Context) RouteTablesRouteTableOutput
}

type RouteTablesRouteTableArgs struct {
	// The creation time of the route table.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description.
	Description pulumi.StringInput `pulumi:"description"`
	// The status of the route table.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags RouteTablesRouteTableTagArrayInput `pulumi:"tags"`
	// The id of the route table.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
	// The name of the route table.
	TransitRouterRouteTableName pulumi.StringInput `pulumi:"transitRouterRouteTableName"`
	// The type of the route table. The value can be System or Custom.
	TransitRouterRouteTableType pulumi.StringInput `pulumi:"transitRouterRouteTableType"`
	// The update time of the route table.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (RouteTablesRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTable)(nil)).Elem()
}

func (i RouteTablesRouteTableArgs) ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput {
	return i.ToRouteTablesRouteTableOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableArgs) ToRouteTablesRouteTableOutputWithContext(ctx context.Context) RouteTablesRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableOutput)
}

// RouteTablesRouteTableArrayInput is an input type that accepts RouteTablesRouteTableArray and RouteTablesRouteTableArrayOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableArrayInput` via:
//
//	RouteTablesRouteTableArray{ RouteTablesRouteTableArgs{...} }
type RouteTablesRouteTableArrayInput interface {
	pulumi.Input

	ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput
	ToRouteTablesRouteTableArrayOutputWithContext(context.Context) RouteTablesRouteTableArrayOutput
}

type RouteTablesRouteTableArray []RouteTablesRouteTableInput

func (RouteTablesRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTable)(nil)).Elem()
}

func (i RouteTablesRouteTableArray) ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput {
	return i.ToRouteTablesRouteTableArrayOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableArray) ToRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableArrayOutput)
}

type RouteTablesRouteTableOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTable)(nil)).Elem()
}

func (o RouteTablesRouteTableOutput) ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput {
	return o
}

func (o RouteTablesRouteTableOutput) ToRouteTablesRouteTableOutputWithContext(ctx context.Context) RouteTablesRouteTableOutput {
	return o
}

// The creation time of the route table.
func (o RouteTablesRouteTableOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description.
func (o RouteTablesRouteTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.Description }).(pulumi.StringOutput)
}

// The status of the route table.
func (o RouteTablesRouteTableOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o RouteTablesRouteTableOutput) Tags() RouteTablesRouteTableTagArrayOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) []RouteTablesRouteTableTag { return v.Tags }).(RouteTablesRouteTableTagArrayOutput)
}

// The id of the route table.
func (o RouteTablesRouteTableOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

// The name of the route table.
func (o RouteTablesRouteTableOutput) TransitRouterRouteTableName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.TransitRouterRouteTableName }).(pulumi.StringOutput)
}

// The type of the route table. The value can be System or Custom.
func (o RouteTablesRouteTableOutput) TransitRouterRouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.TransitRouterRouteTableType }).(pulumi.StringOutput)
}

// The update time of the route table.
func (o RouteTablesRouteTableOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type RouteTablesRouteTableArrayOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTable)(nil)).Elem()
}

func (o RouteTablesRouteTableArrayOutput) ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput {
	return o
}

func (o RouteTablesRouteTableArrayOutput) ToRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableArrayOutput {
	return o
}

func (o RouteTablesRouteTableArrayOutput) Index(i pulumi.IntInput) RouteTablesRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablesRouteTable {
		return vs[0].([]RouteTablesRouteTable)[vs[1].(int)]
	}).(RouteTablesRouteTableOutput)
}

type RouteTablesRouteTableTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// RouteTablesRouteTableTagInput is an input type that accepts RouteTablesRouteTableTagArgs and RouteTablesRouteTableTagOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableTagInput` via:
//
//	RouteTablesRouteTableTagArgs{...}
type RouteTablesRouteTableTagInput interface {
	pulumi.Input

	ToRouteTablesRouteTableTagOutput() RouteTablesRouteTableTagOutput
	ToRouteTablesRouteTableTagOutputWithContext(context.Context) RouteTablesRouteTableTagOutput
}

type RouteTablesRouteTableTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RouteTablesRouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTableTag)(nil)).Elem()
}

func (i RouteTablesRouteTableTagArgs) ToRouteTablesRouteTableTagOutput() RouteTablesRouteTableTagOutput {
	return i.ToRouteTablesRouteTableTagOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableTagArgs) ToRouteTablesRouteTableTagOutputWithContext(ctx context.Context) RouteTablesRouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableTagOutput)
}

// RouteTablesRouteTableTagArrayInput is an input type that accepts RouteTablesRouteTableTagArray and RouteTablesRouteTableTagArrayOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableTagArrayInput` via:
//
//	RouteTablesRouteTableTagArray{ RouteTablesRouteTableTagArgs{...} }
type RouteTablesRouteTableTagArrayInput interface {
	pulumi.Input

	ToRouteTablesRouteTableTagArrayOutput() RouteTablesRouteTableTagArrayOutput
	ToRouteTablesRouteTableTagArrayOutputWithContext(context.Context) RouteTablesRouteTableTagArrayOutput
}

type RouteTablesRouteTableTagArray []RouteTablesRouteTableTagInput

func (RouteTablesRouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTableTag)(nil)).Elem()
}

func (i RouteTablesRouteTableTagArray) ToRouteTablesRouteTableTagArrayOutput() RouteTablesRouteTableTagArrayOutput {
	return i.ToRouteTablesRouteTableTagArrayOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableTagArray) ToRouteTablesRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableTagArrayOutput)
}

type RouteTablesRouteTableTagOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTableTag)(nil)).Elem()
}

func (o RouteTablesRouteTableTagOutput) ToRouteTablesRouteTableTagOutput() RouteTablesRouteTableTagOutput {
	return o
}

func (o RouteTablesRouteTableTagOutput) ToRouteTablesRouteTableTagOutputWithContext(ctx context.Context) RouteTablesRouteTableTagOutput {
	return o
}

// The Key of Tags.
func (o RouteTablesRouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o RouteTablesRouteTableTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTableTag) string { return v.Value }).(pulumi.StringOutput)
}

type RouteTablesRouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTableTag)(nil)).Elem()
}

func (o RouteTablesRouteTableTagArrayOutput) ToRouteTablesRouteTableTagArrayOutput() RouteTablesRouteTableTagArrayOutput {
	return o
}

func (o RouteTablesRouteTableTagArrayOutput) ToRouteTablesRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableTagArrayOutput {
	return o
}

func (o RouteTablesRouteTableTagArrayOutput) Index(i pulumi.IntInput) RouteTablesRouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablesRouteTableTag {
		return vs[0].([]RouteTablesRouteTableTag)[vs[1].(int)]
	}).(RouteTablesRouteTableTagOutput)
}

type RouteTablesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// RouteTablesTagInput is an input type that accepts RouteTablesTagArgs and RouteTablesTagOutput values.
// You can construct a concrete instance of `RouteTablesTagInput` via:
//
//	RouteTablesTagArgs{...}
type RouteTablesTagInput interface {
	pulumi.Input

	ToRouteTablesTagOutput() RouteTablesTagOutput
	ToRouteTablesTagOutputWithContext(context.Context) RouteTablesTagOutput
}

type RouteTablesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RouteTablesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesTag)(nil)).Elem()
}

func (i RouteTablesTagArgs) ToRouteTablesTagOutput() RouteTablesTagOutput {
	return i.ToRouteTablesTagOutputWithContext(context.Background())
}

func (i RouteTablesTagArgs) ToRouteTablesTagOutputWithContext(ctx context.Context) RouteTablesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesTagOutput)
}

// RouteTablesTagArrayInput is an input type that accepts RouteTablesTagArray and RouteTablesTagArrayOutput values.
// You can construct a concrete instance of `RouteTablesTagArrayInput` via:
//
//	RouteTablesTagArray{ RouteTablesTagArgs{...} }
type RouteTablesTagArrayInput interface {
	pulumi.Input

	ToRouteTablesTagArrayOutput() RouteTablesTagArrayOutput
	ToRouteTablesTagArrayOutputWithContext(context.Context) RouteTablesTagArrayOutput
}

type RouteTablesTagArray []RouteTablesTagInput

func (RouteTablesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesTag)(nil)).Elem()
}

func (i RouteTablesTagArray) ToRouteTablesTagArrayOutput() RouteTablesTagArrayOutput {
	return i.ToRouteTablesTagArrayOutputWithContext(context.Background())
}

func (i RouteTablesTagArray) ToRouteTablesTagArrayOutputWithContext(ctx context.Context) RouteTablesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesTagArrayOutput)
}

type RouteTablesTagOutput struct{ *pulumi.OutputState }

func (RouteTablesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesTag)(nil)).Elem()
}

func (o RouteTablesTagOutput) ToRouteTablesTagOutput() RouteTablesTagOutput {
	return o
}

func (o RouteTablesTagOutput) ToRouteTablesTagOutputWithContext(ctx context.Context) RouteTablesTagOutput {
	return o
}

// The Key of Tags.
func (o RouteTablesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o RouteTablesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesTag) string { return v.Value }).(pulumi.StringOutput)
}

type RouteTablesTagArrayOutput struct{ *pulumi.OutputState }

func (RouteTablesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesTag)(nil)).Elem()
}

func (o RouteTablesTagArrayOutput) ToRouteTablesTagArrayOutput() RouteTablesTagArrayOutput {
	return o
}

func (o RouteTablesTagArrayOutput) ToRouteTablesTagArrayOutputWithContext(ctx context.Context) RouteTablesTagArrayOutput {
	return o
}

func (o RouteTablesTagArrayOutput) Index(i pulumi.IntInput) RouteTablesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablesTag {
		return vs[0].([]RouteTablesTag)[vs[1].(int)]
	}).(RouteTablesTagOutput)
}

type TransitRouterTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TransitRouterTagInput is an input type that accepts TransitRouterTagArgs and TransitRouterTagOutput values.
// You can construct a concrete instance of `TransitRouterTagInput` via:
//
//	TransitRouterTagArgs{...}
type TransitRouterTagInput interface {
	pulumi.Input

	ToTransitRouterTagOutput() TransitRouterTagOutput
	ToTransitRouterTagOutputWithContext(context.Context) TransitRouterTagOutput
}

type TransitRouterTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TransitRouterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterTag)(nil)).Elem()
}

func (i TransitRouterTagArgs) ToTransitRouterTagOutput() TransitRouterTagOutput {
	return i.ToTransitRouterTagOutputWithContext(context.Background())
}

func (i TransitRouterTagArgs) ToTransitRouterTagOutputWithContext(ctx context.Context) TransitRouterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterTagOutput)
}

// TransitRouterTagArrayInput is an input type that accepts TransitRouterTagArray and TransitRouterTagArrayOutput values.
// You can construct a concrete instance of `TransitRouterTagArrayInput` via:
//
//	TransitRouterTagArray{ TransitRouterTagArgs{...} }
type TransitRouterTagArrayInput interface {
	pulumi.Input

	ToTransitRouterTagArrayOutput() TransitRouterTagArrayOutput
	ToTransitRouterTagArrayOutputWithContext(context.Context) TransitRouterTagArrayOutput
}

type TransitRouterTagArray []TransitRouterTagInput

func (TransitRouterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterTag)(nil)).Elem()
}

func (i TransitRouterTagArray) ToTransitRouterTagArrayOutput() TransitRouterTagArrayOutput {
	return i.ToTransitRouterTagArrayOutputWithContext(context.Background())
}

func (i TransitRouterTagArray) ToTransitRouterTagArrayOutputWithContext(ctx context.Context) TransitRouterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterTagArrayOutput)
}

type TransitRouterTagOutput struct{ *pulumi.OutputState }

func (TransitRouterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterTag)(nil)).Elem()
}

func (o TransitRouterTagOutput) ToTransitRouterTagOutput() TransitRouterTagOutput {
	return o
}

func (o TransitRouterTagOutput) ToTransitRouterTagOutputWithContext(ctx context.Context) TransitRouterTagOutput {
	return o
}

// The Key of Tags.
func (o TransitRouterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRouterTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TransitRouterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRouterTag) string { return v.Value }).(pulumi.StringOutput)
}

type TransitRouterTagArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterTag)(nil)).Elem()
}

func (o TransitRouterTagArrayOutput) ToTransitRouterTagArrayOutput() TransitRouterTagArrayOutput {
	return o
}

func (o TransitRouterTagArrayOutput) ToTransitRouterTagArrayOutputWithContext(ctx context.Context) TransitRouterTagArrayOutput {
	return o
}

func (o TransitRouterTagArrayOutput) Index(i pulumi.IntInput) TransitRouterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterTag {
		return vs[0].([]TransitRouterTag)[vs[1].(int)]
	}).(TransitRouterTagOutput)
}

type TransitRouterTransitRouterAttachment struct {
	// The create time.
	CreationTime *string `pulumi:"creationTime"`
	// The id of resource.
	ResourceId *string `pulumi:"resourceId"`
	// The type of resource.
	ResourceType *string `pulumi:"resourceType"`
	// The status of the transit router.
	Status *string `pulumi:"status"`
	// The id of transit router attachment.
	TransitRouterAttachmentId *string `pulumi:"transitRouterAttachmentId"`
	// The name of transit router attachment.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The id of transit router route table.
	TransitRouterRouteTableId *string `pulumi:"transitRouterRouteTableId"`
	// The update time.
	UpdateTime *string `pulumi:"updateTime"`
}

// TransitRouterTransitRouterAttachmentInput is an input type that accepts TransitRouterTransitRouterAttachmentArgs and TransitRouterTransitRouterAttachmentOutput values.
// You can construct a concrete instance of `TransitRouterTransitRouterAttachmentInput` via:
//
//	TransitRouterTransitRouterAttachmentArgs{...}
type TransitRouterTransitRouterAttachmentInput interface {
	pulumi.Input

	ToTransitRouterTransitRouterAttachmentOutput() TransitRouterTransitRouterAttachmentOutput
	ToTransitRouterTransitRouterAttachmentOutputWithContext(context.Context) TransitRouterTransitRouterAttachmentOutput
}

type TransitRouterTransitRouterAttachmentArgs struct {
	// The create time.
	CreationTime pulumi.StringPtrInput `pulumi:"creationTime"`
	// The id of resource.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The type of resource.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// The status of the transit router.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The id of transit router attachment.
	TransitRouterAttachmentId pulumi.StringPtrInput `pulumi:"transitRouterAttachmentId"`
	// The name of transit router attachment.
	TransitRouterAttachmentName pulumi.StringPtrInput `pulumi:"transitRouterAttachmentName"`
	// The id of transit router route table.
	TransitRouterRouteTableId pulumi.StringPtrInput `pulumi:"transitRouterRouteTableId"`
	// The update time.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (TransitRouterTransitRouterAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (i TransitRouterTransitRouterAttachmentArgs) ToTransitRouterTransitRouterAttachmentOutput() TransitRouterTransitRouterAttachmentOutput {
	return i.ToTransitRouterTransitRouterAttachmentOutputWithContext(context.Background())
}

func (i TransitRouterTransitRouterAttachmentArgs) ToTransitRouterTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRouterTransitRouterAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterTransitRouterAttachmentOutput)
}

// TransitRouterTransitRouterAttachmentArrayInput is an input type that accepts TransitRouterTransitRouterAttachmentArray and TransitRouterTransitRouterAttachmentArrayOutput values.
// You can construct a concrete instance of `TransitRouterTransitRouterAttachmentArrayInput` via:
//
//	TransitRouterTransitRouterAttachmentArray{ TransitRouterTransitRouterAttachmentArgs{...} }
type TransitRouterTransitRouterAttachmentArrayInput interface {
	pulumi.Input

	ToTransitRouterTransitRouterAttachmentArrayOutput() TransitRouterTransitRouterAttachmentArrayOutput
	ToTransitRouterTransitRouterAttachmentArrayOutputWithContext(context.Context) TransitRouterTransitRouterAttachmentArrayOutput
}

type TransitRouterTransitRouterAttachmentArray []TransitRouterTransitRouterAttachmentInput

func (TransitRouterTransitRouterAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (i TransitRouterTransitRouterAttachmentArray) ToTransitRouterTransitRouterAttachmentArrayOutput() TransitRouterTransitRouterAttachmentArrayOutput {
	return i.ToTransitRouterTransitRouterAttachmentArrayOutputWithContext(context.Background())
}

func (i TransitRouterTransitRouterAttachmentArray) ToTransitRouterTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterTransitRouterAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterTransitRouterAttachmentArrayOutput)
}

type TransitRouterTransitRouterAttachmentOutput struct{ *pulumi.OutputState }

func (TransitRouterTransitRouterAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (o TransitRouterTransitRouterAttachmentOutput) ToTransitRouterTransitRouterAttachmentOutput() TransitRouterTransitRouterAttachmentOutput {
	return o
}

func (o TransitRouterTransitRouterAttachmentOutput) ToTransitRouterTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRouterTransitRouterAttachmentOutput {
	return o
}

// The create time.
func (o TransitRouterTransitRouterAttachmentOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The id of resource.
func (o TransitRouterTransitRouterAttachmentOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of resource.
func (o TransitRouterTransitRouterAttachmentOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The status of the transit router.
func (o TransitRouterTransitRouterAttachmentOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The id of transit router attachment.
func (o TransitRouterTransitRouterAttachmentOutput) TransitRouterAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.TransitRouterAttachmentId }).(pulumi.StringPtrOutput)
}

// The name of transit router attachment.
func (o TransitRouterTransitRouterAttachmentOutput) TransitRouterAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.TransitRouterAttachmentName }).(pulumi.StringPtrOutput)
}

// The id of transit router route table.
func (o TransitRouterTransitRouterAttachmentOutput) TransitRouterRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.TransitRouterRouteTableId }).(pulumi.StringPtrOutput)
}

// The update time.
func (o TransitRouterTransitRouterAttachmentOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type TransitRouterTransitRouterAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterTransitRouterAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (o TransitRouterTransitRouterAttachmentArrayOutput) ToTransitRouterTransitRouterAttachmentArrayOutput() TransitRouterTransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRouterTransitRouterAttachmentArrayOutput) ToTransitRouterTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterTransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRouterTransitRouterAttachmentArrayOutput) Index(i pulumi.IntInput) TransitRouterTransitRouterAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterTransitRouterAttachment {
		return vs[0].([]TransitRouterTransitRouterAttachment)[vs[1].(int)]
	}).(TransitRouterTransitRouterAttachmentOutput)
}

type TransitRoutersTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TransitRoutersTagInput is an input type that accepts TransitRoutersTagArgs and TransitRoutersTagOutput values.
// You can construct a concrete instance of `TransitRoutersTagInput` via:
//
//	TransitRoutersTagArgs{...}
type TransitRoutersTagInput interface {
	pulumi.Input

	ToTransitRoutersTagOutput() TransitRoutersTagOutput
	ToTransitRoutersTagOutputWithContext(context.Context) TransitRoutersTagOutput
}

type TransitRoutersTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TransitRoutersTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTag)(nil)).Elem()
}

func (i TransitRoutersTagArgs) ToTransitRoutersTagOutput() TransitRoutersTagOutput {
	return i.ToTransitRoutersTagOutputWithContext(context.Background())
}

func (i TransitRoutersTagArgs) ToTransitRoutersTagOutputWithContext(ctx context.Context) TransitRoutersTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTagOutput)
}

// TransitRoutersTagArrayInput is an input type that accepts TransitRoutersTagArray and TransitRoutersTagArrayOutput values.
// You can construct a concrete instance of `TransitRoutersTagArrayInput` via:
//
//	TransitRoutersTagArray{ TransitRoutersTagArgs{...} }
type TransitRoutersTagArrayInput interface {
	pulumi.Input

	ToTransitRoutersTagArrayOutput() TransitRoutersTagArrayOutput
	ToTransitRoutersTagArrayOutputWithContext(context.Context) TransitRoutersTagArrayOutput
}

type TransitRoutersTagArray []TransitRoutersTagInput

func (TransitRoutersTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTag)(nil)).Elem()
}

func (i TransitRoutersTagArray) ToTransitRoutersTagArrayOutput() TransitRoutersTagArrayOutput {
	return i.ToTransitRoutersTagArrayOutputWithContext(context.Background())
}

func (i TransitRoutersTagArray) ToTransitRoutersTagArrayOutputWithContext(ctx context.Context) TransitRoutersTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTagArrayOutput)
}

type TransitRoutersTagOutput struct{ *pulumi.OutputState }

func (TransitRoutersTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTag)(nil)).Elem()
}

func (o TransitRoutersTagOutput) ToTransitRoutersTagOutput() TransitRoutersTagOutput {
	return o
}

func (o TransitRoutersTagOutput) ToTransitRoutersTagOutputWithContext(ctx context.Context) TransitRoutersTagOutput {
	return o
}

// The Key of Tags.
func (o TransitRoutersTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TransitRoutersTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTag) string { return v.Value }).(pulumi.StringOutput)
}

type TransitRoutersTagArrayOutput struct{ *pulumi.OutputState }

func (TransitRoutersTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTag)(nil)).Elem()
}

func (o TransitRoutersTagArrayOutput) ToTransitRoutersTagArrayOutput() TransitRoutersTagArrayOutput {
	return o
}

func (o TransitRoutersTagArrayOutput) ToTransitRoutersTagArrayOutputWithContext(ctx context.Context) TransitRoutersTagArrayOutput {
	return o
}

func (o TransitRoutersTagArrayOutput) Index(i pulumi.IntInput) TransitRoutersTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRoutersTag {
		return vs[0].([]TransitRoutersTag)[vs[1].(int)]
	}).(TransitRoutersTagOutput)
}

type TransitRoutersTransitRouter struct {
	// The ID of account.
	AccountId string `pulumi:"accountId"`
	// The asn of the transit router.
	Asn int `pulumi:"asn"`
	// The business status of the transit router.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The description info.
	Description string `pulumi:"description"`
	// The ID of the transit router.
	Id string `pulumi:"id"`
	// The overdue time.
	OverdueTime string `pulumi:"overdueTime"`
	// The ProjectName of the transit router.
	ProjectName string `pulumi:"projectName"`
	// The status of the transit router.
	Status string `pulumi:"status"`
	// Tags.
	Tags []TransitRoutersTransitRouterTag `pulumi:"tags"`
	// The attachments of transit router.
	TransitRouterAttachments []TransitRoutersTransitRouterTransitRouterAttachment `pulumi:"transitRouterAttachments"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The name info.
	TransitRouterName string `pulumi:"transitRouterName"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
}

// TransitRoutersTransitRouterInput is an input type that accepts TransitRoutersTransitRouterArgs and TransitRoutersTransitRouterOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterInput` via:
//
//	TransitRoutersTransitRouterArgs{...}
type TransitRoutersTransitRouterInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterOutput() TransitRoutersTransitRouterOutput
	ToTransitRoutersTransitRouterOutputWithContext(context.Context) TransitRoutersTransitRouterOutput
}

type TransitRoutersTransitRouterArgs struct {
	// The ID of account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The asn of the transit router.
	Asn pulumi.IntInput `pulumi:"asn"`
	// The business status of the transit router.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description info.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the transit router.
	Id pulumi.StringInput `pulumi:"id"`
	// The overdue time.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The ProjectName of the transit router.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of the transit router.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags TransitRoutersTransitRouterTagArrayInput `pulumi:"tags"`
	// The attachments of transit router.
	TransitRouterAttachments TransitRoutersTransitRouterTransitRouterAttachmentArrayInput `pulumi:"transitRouterAttachments"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The name info.
	TransitRouterName pulumi.StringInput `pulumi:"transitRouterName"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (TransitRoutersTransitRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouter)(nil)).Elem()
}

func (i TransitRoutersTransitRouterArgs) ToTransitRoutersTransitRouterOutput() TransitRoutersTransitRouterOutput {
	return i.ToTransitRoutersTransitRouterOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterArgs) ToTransitRoutersTransitRouterOutputWithContext(ctx context.Context) TransitRoutersTransitRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterOutput)
}

// TransitRoutersTransitRouterArrayInput is an input type that accepts TransitRoutersTransitRouterArray and TransitRoutersTransitRouterArrayOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterArrayInput` via:
//
//	TransitRoutersTransitRouterArray{ TransitRoutersTransitRouterArgs{...} }
type TransitRoutersTransitRouterArrayInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterArrayOutput() TransitRoutersTransitRouterArrayOutput
	ToTransitRoutersTransitRouterArrayOutputWithContext(context.Context) TransitRoutersTransitRouterArrayOutput
}

type TransitRoutersTransitRouterArray []TransitRoutersTransitRouterInput

func (TransitRoutersTransitRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouter)(nil)).Elem()
}

func (i TransitRoutersTransitRouterArray) ToTransitRoutersTransitRouterArrayOutput() TransitRoutersTransitRouterArrayOutput {
	return i.ToTransitRoutersTransitRouterArrayOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterArray) ToTransitRoutersTransitRouterArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterArrayOutput)
}

type TransitRoutersTransitRouterOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouter)(nil)).Elem()
}

func (o TransitRoutersTransitRouterOutput) ToTransitRoutersTransitRouterOutput() TransitRoutersTransitRouterOutput {
	return o
}

func (o TransitRoutersTransitRouterOutput) ToTransitRoutersTransitRouterOutputWithContext(ctx context.Context) TransitRoutersTransitRouterOutput {
	return o
}

// The ID of account.
func (o TransitRoutersTransitRouterOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.AccountId }).(pulumi.StringOutput)
}

// The asn of the transit router.
func (o TransitRoutersTransitRouterOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) int { return v.Asn }).(pulumi.IntOutput)
}

// The business status of the transit router.
func (o TransitRoutersTransitRouterOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time.
func (o TransitRoutersTransitRouterOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description info.
func (o TransitRoutersTransitRouterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o TransitRoutersTransitRouterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.Id }).(pulumi.StringOutput)
}

// The overdue time.
func (o TransitRoutersTransitRouterOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The ProjectName of the transit router.
func (o TransitRoutersTransitRouterOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of the transit router.
func (o TransitRoutersTransitRouterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o TransitRoutersTransitRouterOutput) Tags() TransitRoutersTransitRouterTagArrayOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) []TransitRoutersTransitRouterTag { return v.Tags }).(TransitRoutersTransitRouterTagArrayOutput)
}

// The attachments of transit router.
func (o TransitRoutersTransitRouterOutput) TransitRouterAttachments() TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) []TransitRoutersTransitRouterTransitRouterAttachment {
		return v.TransitRouterAttachments
	}).(TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput)
}

// The ID of the transit router.
func (o TransitRoutersTransitRouterOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The name info.
func (o TransitRoutersTransitRouterOutput) TransitRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.TransitRouterName }).(pulumi.StringOutput)
}

// The update time.
func (o TransitRoutersTransitRouterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type TransitRoutersTransitRouterArrayOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouter)(nil)).Elem()
}

func (o TransitRoutersTransitRouterArrayOutput) ToTransitRoutersTransitRouterArrayOutput() TransitRoutersTransitRouterArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterArrayOutput) ToTransitRoutersTransitRouterArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterArrayOutput) Index(i pulumi.IntInput) TransitRoutersTransitRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRoutersTransitRouter {
		return vs[0].([]TransitRoutersTransitRouter)[vs[1].(int)]
	}).(TransitRoutersTransitRouterOutput)
}

type TransitRoutersTransitRouterTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TransitRoutersTransitRouterTagInput is an input type that accepts TransitRoutersTransitRouterTagArgs and TransitRoutersTransitRouterTagOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterTagInput` via:
//
//	TransitRoutersTransitRouterTagArgs{...}
type TransitRoutersTransitRouterTagInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterTagOutput() TransitRoutersTransitRouterTagOutput
	ToTransitRoutersTransitRouterTagOutputWithContext(context.Context) TransitRoutersTransitRouterTagOutput
}

type TransitRoutersTransitRouterTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TransitRoutersTransitRouterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouterTag)(nil)).Elem()
}

func (i TransitRoutersTransitRouterTagArgs) ToTransitRoutersTransitRouterTagOutput() TransitRoutersTransitRouterTagOutput {
	return i.ToTransitRoutersTransitRouterTagOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterTagArgs) ToTransitRoutersTransitRouterTagOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterTagOutput)
}

// TransitRoutersTransitRouterTagArrayInput is an input type that accepts TransitRoutersTransitRouterTagArray and TransitRoutersTransitRouterTagArrayOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterTagArrayInput` via:
//
//	TransitRoutersTransitRouterTagArray{ TransitRoutersTransitRouterTagArgs{...} }
type TransitRoutersTransitRouterTagArrayInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterTagArrayOutput() TransitRoutersTransitRouterTagArrayOutput
	ToTransitRoutersTransitRouterTagArrayOutputWithContext(context.Context) TransitRoutersTransitRouterTagArrayOutput
}

type TransitRoutersTransitRouterTagArray []TransitRoutersTransitRouterTagInput

func (TransitRoutersTransitRouterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouterTag)(nil)).Elem()
}

func (i TransitRoutersTransitRouterTagArray) ToTransitRoutersTransitRouterTagArrayOutput() TransitRoutersTransitRouterTagArrayOutput {
	return i.ToTransitRoutersTransitRouterTagArrayOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterTagArray) ToTransitRoutersTransitRouterTagArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterTagArrayOutput)
}

type TransitRoutersTransitRouterTagOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouterTag)(nil)).Elem()
}

func (o TransitRoutersTransitRouterTagOutput) ToTransitRoutersTransitRouterTagOutput() TransitRoutersTransitRouterTagOutput {
	return o
}

func (o TransitRoutersTransitRouterTagOutput) ToTransitRoutersTransitRouterTagOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTagOutput {
	return o
}

// The Key of Tags.
func (o TransitRoutersTransitRouterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TransitRoutersTransitRouterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTag) string { return v.Value }).(pulumi.StringOutput)
}

type TransitRoutersTransitRouterTagArrayOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouterTag)(nil)).Elem()
}

func (o TransitRoutersTransitRouterTagArrayOutput) ToTransitRoutersTransitRouterTagArrayOutput() TransitRoutersTransitRouterTagArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterTagArrayOutput) ToTransitRoutersTransitRouterTagArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTagArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterTagArrayOutput) Index(i pulumi.IntInput) TransitRoutersTransitRouterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRoutersTransitRouterTag {
		return vs[0].([]TransitRoutersTransitRouterTag)[vs[1].(int)]
	}).(TransitRoutersTransitRouterTagOutput)
}

type TransitRoutersTransitRouterTransitRouterAttachment struct {
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The id of resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of resource.
	ResourceType string `pulumi:"resourceType"`
	// The status of the transit router.
	Status string `pulumi:"status"`
	// The id of transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The name of transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The id of transit router route table.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
}

// TransitRoutersTransitRouterTransitRouterAttachmentInput is an input type that accepts TransitRoutersTransitRouterTransitRouterAttachmentArgs and TransitRoutersTransitRouterTransitRouterAttachmentOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterTransitRouterAttachmentInput` via:
//
//	TransitRoutersTransitRouterTransitRouterAttachmentArgs{...}
type TransitRoutersTransitRouterTransitRouterAttachmentInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterTransitRouterAttachmentOutput() TransitRoutersTransitRouterTransitRouterAttachmentOutput
	ToTransitRoutersTransitRouterTransitRouterAttachmentOutputWithContext(context.Context) TransitRoutersTransitRouterTransitRouterAttachmentOutput
}

type TransitRoutersTransitRouterTransitRouterAttachmentArgs struct {
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The id of resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of the transit router.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The id of transit router route table.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (TransitRoutersTransitRouterTransitRouterAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (i TransitRoutersTransitRouterTransitRouterAttachmentArgs) ToTransitRoutersTransitRouterTransitRouterAttachmentOutput() TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return i.ToTransitRoutersTransitRouterTransitRouterAttachmentOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterTransitRouterAttachmentArgs) ToTransitRoutersTransitRouterTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterTransitRouterAttachmentOutput)
}

// TransitRoutersTransitRouterTransitRouterAttachmentArrayInput is an input type that accepts TransitRoutersTransitRouterTransitRouterAttachmentArray and TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterTransitRouterAttachmentArrayInput` via:
//
//	TransitRoutersTransitRouterTransitRouterAttachmentArray{ TransitRoutersTransitRouterTransitRouterAttachmentArgs{...} }
type TransitRoutersTransitRouterTransitRouterAttachmentArrayInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutput() TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput
	ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutputWithContext(context.Context) TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput
}

type TransitRoutersTransitRouterTransitRouterAttachmentArray []TransitRoutersTransitRouterTransitRouterAttachmentInput

func (TransitRoutersTransitRouterTransitRouterAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (i TransitRoutersTransitRouterTransitRouterAttachmentArray) ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutput() TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return i.ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterTransitRouterAttachmentArray) ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput)
}

type TransitRoutersTransitRouterTransitRouterAttachmentOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterTransitRouterAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) ToTransitRoutersTransitRouterTransitRouterAttachmentOutput() TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return o
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) ToTransitRoutersTransitRouterTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return o
}

// The create time.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The id of resource.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of resource.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of the transit router.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The id of transit router attachment.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of transit router attachment.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string {
		return v.TransitRouterAttachmentName
	}).(pulumi.StringOutput)
}

// The id of transit router route table.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

// The update time.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput) ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutput() TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput) ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput) Index(i pulumi.IntInput) TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRoutersTransitRouterTransitRouterAttachment {
		return vs[0].([]TransitRoutersTransitRouterTransitRouterAttachment)[vs[1].(int)]
	}).(TransitRoutersTransitRouterTransitRouterAttachmentOutput)
}

type VpcAttachmentAttachPoint struct {
	// The id of subnet.
	SubnetId string `pulumi:"subnetId"`
	// The id of zone.
	ZoneId string `pulumi:"zoneId"`
}

// VpcAttachmentAttachPointInput is an input type that accepts VpcAttachmentAttachPointArgs and VpcAttachmentAttachPointOutput values.
// You can construct a concrete instance of `VpcAttachmentAttachPointInput` via:
//
//	VpcAttachmentAttachPointArgs{...}
type VpcAttachmentAttachPointInput interface {
	pulumi.Input

	ToVpcAttachmentAttachPointOutput() VpcAttachmentAttachPointOutput
	ToVpcAttachmentAttachPointOutputWithContext(context.Context) VpcAttachmentAttachPointOutput
}

type VpcAttachmentAttachPointArgs struct {
	// The id of subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The id of zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (VpcAttachmentAttachPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentAttachPoint)(nil)).Elem()
}

func (i VpcAttachmentAttachPointArgs) ToVpcAttachmentAttachPointOutput() VpcAttachmentAttachPointOutput {
	return i.ToVpcAttachmentAttachPointOutputWithContext(context.Background())
}

func (i VpcAttachmentAttachPointArgs) ToVpcAttachmentAttachPointOutputWithContext(ctx context.Context) VpcAttachmentAttachPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentAttachPointOutput)
}

// VpcAttachmentAttachPointArrayInput is an input type that accepts VpcAttachmentAttachPointArray and VpcAttachmentAttachPointArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentAttachPointArrayInput` via:
//
//	VpcAttachmentAttachPointArray{ VpcAttachmentAttachPointArgs{...} }
type VpcAttachmentAttachPointArrayInput interface {
	pulumi.Input

	ToVpcAttachmentAttachPointArrayOutput() VpcAttachmentAttachPointArrayOutput
	ToVpcAttachmentAttachPointArrayOutputWithContext(context.Context) VpcAttachmentAttachPointArrayOutput
}

type VpcAttachmentAttachPointArray []VpcAttachmentAttachPointInput

func (VpcAttachmentAttachPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentAttachPoint)(nil)).Elem()
}

func (i VpcAttachmentAttachPointArray) ToVpcAttachmentAttachPointArrayOutput() VpcAttachmentAttachPointArrayOutput {
	return i.ToVpcAttachmentAttachPointArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentAttachPointArray) ToVpcAttachmentAttachPointArrayOutputWithContext(ctx context.Context) VpcAttachmentAttachPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentAttachPointArrayOutput)
}

type VpcAttachmentAttachPointOutput struct{ *pulumi.OutputState }

func (VpcAttachmentAttachPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentAttachPoint)(nil)).Elem()
}

func (o VpcAttachmentAttachPointOutput) ToVpcAttachmentAttachPointOutput() VpcAttachmentAttachPointOutput {
	return o
}

func (o VpcAttachmentAttachPointOutput) ToVpcAttachmentAttachPointOutputWithContext(ctx context.Context) VpcAttachmentAttachPointOutput {
	return o
}

// The id of subnet.
func (o VpcAttachmentAttachPointOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentAttachPoint) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The id of zone.
func (o VpcAttachmentAttachPointOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentAttachPoint) string { return v.ZoneId }).(pulumi.StringOutput)
}

type VpcAttachmentAttachPointArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentAttachPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentAttachPoint)(nil)).Elem()
}

func (o VpcAttachmentAttachPointArrayOutput) ToVpcAttachmentAttachPointArrayOutput() VpcAttachmentAttachPointArrayOutput {
	return o
}

func (o VpcAttachmentAttachPointArrayOutput) ToVpcAttachmentAttachPointArrayOutputWithContext(ctx context.Context) VpcAttachmentAttachPointArrayOutput {
	return o
}

func (o VpcAttachmentAttachPointArrayOutput) Index(i pulumi.IntInput) VpcAttachmentAttachPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentAttachPoint {
		return vs[0].([]VpcAttachmentAttachPoint)[vs[1].(int)]
	}).(VpcAttachmentAttachPointOutput)
}

type VpcAttachmentTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcAttachmentTagInput is an input type that accepts VpcAttachmentTagArgs and VpcAttachmentTagOutput values.
// You can construct a concrete instance of `VpcAttachmentTagInput` via:
//
//	VpcAttachmentTagArgs{...}
type VpcAttachmentTagInput interface {
	pulumi.Input

	ToVpcAttachmentTagOutput() VpcAttachmentTagOutput
	ToVpcAttachmentTagOutputWithContext(context.Context) VpcAttachmentTagOutput
}

type VpcAttachmentTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentTag)(nil)).Elem()
}

func (i VpcAttachmentTagArgs) ToVpcAttachmentTagOutput() VpcAttachmentTagOutput {
	return i.ToVpcAttachmentTagOutputWithContext(context.Background())
}

func (i VpcAttachmentTagArgs) ToVpcAttachmentTagOutputWithContext(ctx context.Context) VpcAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentTagOutput)
}

// VpcAttachmentTagArrayInput is an input type that accepts VpcAttachmentTagArray and VpcAttachmentTagArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentTagArrayInput` via:
//
//	VpcAttachmentTagArray{ VpcAttachmentTagArgs{...} }
type VpcAttachmentTagArrayInput interface {
	pulumi.Input

	ToVpcAttachmentTagArrayOutput() VpcAttachmentTagArrayOutput
	ToVpcAttachmentTagArrayOutputWithContext(context.Context) VpcAttachmentTagArrayOutput
}

type VpcAttachmentTagArray []VpcAttachmentTagInput

func (VpcAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentTag)(nil)).Elem()
}

func (i VpcAttachmentTagArray) ToVpcAttachmentTagArrayOutput() VpcAttachmentTagArrayOutput {
	return i.ToVpcAttachmentTagArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentTagArray) ToVpcAttachmentTagArrayOutputWithContext(ctx context.Context) VpcAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentTagArrayOutput)
}

type VpcAttachmentTagOutput struct{ *pulumi.OutputState }

func (VpcAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentTag)(nil)).Elem()
}

func (o VpcAttachmentTagOutput) ToVpcAttachmentTagOutput() VpcAttachmentTagOutput {
	return o
}

func (o VpcAttachmentTagOutput) ToVpcAttachmentTagOutputWithContext(ctx context.Context) VpcAttachmentTagOutput {
	return o
}

// The Key of Tags.
func (o VpcAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentTag)(nil)).Elem()
}

func (o VpcAttachmentTagArrayOutput) ToVpcAttachmentTagArrayOutput() VpcAttachmentTagArrayOutput {
	return o
}

func (o VpcAttachmentTagArrayOutput) ToVpcAttachmentTagArrayOutputWithContext(ctx context.Context) VpcAttachmentTagArrayOutput {
	return o
}

func (o VpcAttachmentTagArrayOutput) Index(i pulumi.IntInput) VpcAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentTag {
		return vs[0].([]VpcAttachmentTag)[vs[1].(int)]
	}).(VpcAttachmentTagOutput)
}

type VpcAttachmentsAttachment struct {
	// The collection of attach points.
	AttachPoints []VpcAttachmentsAttachmentAttachPoint `pulumi:"attachPoints"`
	// Whether to auto publish route of the transit router to vpc instance.
	AutoPublishRouteEnabled bool `pulumi:"autoPublishRouteEnabled"`
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The description info.
	Description string `pulumi:"description"`
	// The status of the transit router.
	Status string `pulumi:"status"`
	// Tags.
	Tags []VpcAttachmentsAttachmentTag `pulumi:"tags"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The id of transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
	// The id of vpc.
	VpcId string `pulumi:"vpcId"`
}

// VpcAttachmentsAttachmentInput is an input type that accepts VpcAttachmentsAttachmentArgs and VpcAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentInput` via:
//
//	VpcAttachmentsAttachmentArgs{...}
type VpcAttachmentsAttachmentInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentOutput() VpcAttachmentsAttachmentOutput
	ToVpcAttachmentsAttachmentOutputWithContext(context.Context) VpcAttachmentsAttachmentOutput
}

type VpcAttachmentsAttachmentArgs struct {
	// The collection of attach points.
	AttachPoints VpcAttachmentsAttachmentAttachPointArrayInput `pulumi:"attachPoints"`
	// Whether to auto publish route of the transit router to vpc instance.
	AutoPublishRouteEnabled pulumi.BoolInput `pulumi:"autoPublishRouteEnabled"`
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description info.
	Description pulumi.StringInput `pulumi:"description"`
	// The status of the transit router.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags VpcAttachmentsAttachmentTagArrayInput `pulumi:"tags"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The id of transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The id of vpc.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (VpcAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachment)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentArgs) ToVpcAttachmentsAttachmentOutput() VpcAttachmentsAttachmentOutput {
	return i.ToVpcAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentArgs) ToVpcAttachmentsAttachmentOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentOutput)
}

// VpcAttachmentsAttachmentArrayInput is an input type that accepts VpcAttachmentsAttachmentArray and VpcAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentArrayInput` via:
//
//	VpcAttachmentsAttachmentArray{ VpcAttachmentsAttachmentArgs{...} }
type VpcAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentArrayOutput() VpcAttachmentsAttachmentArrayOutput
	ToVpcAttachmentsAttachmentArrayOutputWithContext(context.Context) VpcAttachmentsAttachmentArrayOutput
}

type VpcAttachmentsAttachmentArray []VpcAttachmentsAttachmentInput

func (VpcAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachment)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentArray) ToVpcAttachmentsAttachmentArrayOutput() VpcAttachmentsAttachmentArrayOutput {
	return i.ToVpcAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentArray) ToVpcAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentArrayOutput)
}

type VpcAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachment)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentOutput) ToVpcAttachmentsAttachmentOutput() VpcAttachmentsAttachmentOutput {
	return o
}

func (o VpcAttachmentsAttachmentOutput) ToVpcAttachmentsAttachmentOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentOutput {
	return o
}

// The collection of attach points.
func (o VpcAttachmentsAttachmentOutput) AttachPoints() VpcAttachmentsAttachmentAttachPointArrayOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) []VpcAttachmentsAttachmentAttachPoint { return v.AttachPoints }).(VpcAttachmentsAttachmentAttachPointArrayOutput)
}

// Whether to auto publish route of the transit router to vpc instance.
func (o VpcAttachmentsAttachmentOutput) AutoPublishRouteEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) bool { return v.AutoPublishRouteEnabled }).(pulumi.BoolOutput)
}

// The create time.
func (o VpcAttachmentsAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description info.
func (o VpcAttachmentsAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.Description }).(pulumi.StringOutput)
}

// The status of the transit router.
func (o VpcAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o VpcAttachmentsAttachmentOutput) Tags() VpcAttachmentsAttachmentTagArrayOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) []VpcAttachmentsAttachmentTag { return v.Tags }).(VpcAttachmentsAttachmentTagArrayOutput)
}

// The id of the transit router attachment.
func (o VpcAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of the transit router attachment.
func (o VpcAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// The id of transit router.
func (o VpcAttachmentsAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The update time.
func (o VpcAttachmentsAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of vpc.
func (o VpcAttachmentsAttachmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.VpcId }).(pulumi.StringOutput)
}

type VpcAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachment)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentArrayOutput) ToVpcAttachmentsAttachmentArrayOutput() VpcAttachmentsAttachmentArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentArrayOutput) ToVpcAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) VpcAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentsAttachment {
		return vs[0].([]VpcAttachmentsAttachment)[vs[1].(int)]
	}).(VpcAttachmentsAttachmentOutput)
}

type VpcAttachmentsAttachmentAttachPoint struct {
	// The ID of network interface.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The ID of subnet.
	SubnetId string `pulumi:"subnetId"`
	// The ID of zone.
	ZoneId string `pulumi:"zoneId"`
}

// VpcAttachmentsAttachmentAttachPointInput is an input type that accepts VpcAttachmentsAttachmentAttachPointArgs and VpcAttachmentsAttachmentAttachPointOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentAttachPointInput` via:
//
//	VpcAttachmentsAttachmentAttachPointArgs{...}
type VpcAttachmentsAttachmentAttachPointInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentAttachPointOutput() VpcAttachmentsAttachmentAttachPointOutput
	ToVpcAttachmentsAttachmentAttachPointOutputWithContext(context.Context) VpcAttachmentsAttachmentAttachPointOutput
}

type VpcAttachmentsAttachmentAttachPointArgs struct {
	// The ID of network interface.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The ID of subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The ID of zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (VpcAttachmentsAttachmentAttachPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachmentAttachPoint)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentAttachPointArgs) ToVpcAttachmentsAttachmentAttachPointOutput() VpcAttachmentsAttachmentAttachPointOutput {
	return i.ToVpcAttachmentsAttachmentAttachPointOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentAttachPointArgs) ToVpcAttachmentsAttachmentAttachPointOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentAttachPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentAttachPointOutput)
}

// VpcAttachmentsAttachmentAttachPointArrayInput is an input type that accepts VpcAttachmentsAttachmentAttachPointArray and VpcAttachmentsAttachmentAttachPointArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentAttachPointArrayInput` via:
//
//	VpcAttachmentsAttachmentAttachPointArray{ VpcAttachmentsAttachmentAttachPointArgs{...} }
type VpcAttachmentsAttachmentAttachPointArrayInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentAttachPointArrayOutput() VpcAttachmentsAttachmentAttachPointArrayOutput
	ToVpcAttachmentsAttachmentAttachPointArrayOutputWithContext(context.Context) VpcAttachmentsAttachmentAttachPointArrayOutput
}

type VpcAttachmentsAttachmentAttachPointArray []VpcAttachmentsAttachmentAttachPointInput

func (VpcAttachmentsAttachmentAttachPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachmentAttachPoint)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentAttachPointArray) ToVpcAttachmentsAttachmentAttachPointArrayOutput() VpcAttachmentsAttachmentAttachPointArrayOutput {
	return i.ToVpcAttachmentsAttachmentAttachPointArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentAttachPointArray) ToVpcAttachmentsAttachmentAttachPointArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentAttachPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentAttachPointArrayOutput)
}

type VpcAttachmentsAttachmentAttachPointOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentAttachPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachmentAttachPoint)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentAttachPointOutput) ToVpcAttachmentsAttachmentAttachPointOutput() VpcAttachmentsAttachmentAttachPointOutput {
	return o
}

func (o VpcAttachmentsAttachmentAttachPointOutput) ToVpcAttachmentsAttachmentAttachPointOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentAttachPointOutput {
	return o
}

// The ID of network interface.
func (o VpcAttachmentsAttachmentAttachPointOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachmentAttachPoint) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The ID of subnet.
func (o VpcAttachmentsAttachmentAttachPointOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachmentAttachPoint) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The ID of zone.
func (o VpcAttachmentsAttachmentAttachPointOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachmentAttachPoint) string { return v.ZoneId }).(pulumi.StringOutput)
}

type VpcAttachmentsAttachmentAttachPointArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentAttachPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachmentAttachPoint)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentAttachPointArrayOutput) ToVpcAttachmentsAttachmentAttachPointArrayOutput() VpcAttachmentsAttachmentAttachPointArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentAttachPointArrayOutput) ToVpcAttachmentsAttachmentAttachPointArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentAttachPointArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentAttachPointArrayOutput) Index(i pulumi.IntInput) VpcAttachmentsAttachmentAttachPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentsAttachmentAttachPoint {
		return vs[0].([]VpcAttachmentsAttachmentAttachPoint)[vs[1].(int)]
	}).(VpcAttachmentsAttachmentAttachPointOutput)
}

type VpcAttachmentsAttachmentTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcAttachmentsAttachmentTagInput is an input type that accepts VpcAttachmentsAttachmentTagArgs and VpcAttachmentsAttachmentTagOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentTagInput` via:
//
//	VpcAttachmentsAttachmentTagArgs{...}
type VpcAttachmentsAttachmentTagInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentTagOutput() VpcAttachmentsAttachmentTagOutput
	ToVpcAttachmentsAttachmentTagOutputWithContext(context.Context) VpcAttachmentsAttachmentTagOutput
}

type VpcAttachmentsAttachmentTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcAttachmentsAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachmentTag)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentTagArgs) ToVpcAttachmentsAttachmentTagOutput() VpcAttachmentsAttachmentTagOutput {
	return i.ToVpcAttachmentsAttachmentTagOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentTagArgs) ToVpcAttachmentsAttachmentTagOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentTagOutput)
}

// VpcAttachmentsAttachmentTagArrayInput is an input type that accepts VpcAttachmentsAttachmentTagArray and VpcAttachmentsAttachmentTagArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentTagArrayInput` via:
//
//	VpcAttachmentsAttachmentTagArray{ VpcAttachmentsAttachmentTagArgs{...} }
type VpcAttachmentsAttachmentTagArrayInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentTagArrayOutput() VpcAttachmentsAttachmentTagArrayOutput
	ToVpcAttachmentsAttachmentTagArrayOutputWithContext(context.Context) VpcAttachmentsAttachmentTagArrayOutput
}

type VpcAttachmentsAttachmentTagArray []VpcAttachmentsAttachmentTagInput

func (VpcAttachmentsAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachmentTag)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentTagArray) ToVpcAttachmentsAttachmentTagArrayOutput() VpcAttachmentsAttachmentTagArrayOutput {
	return i.ToVpcAttachmentsAttachmentTagArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentTagArray) ToVpcAttachmentsAttachmentTagArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentTagArrayOutput)
}

type VpcAttachmentsAttachmentTagOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachmentTag)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentTagOutput) ToVpcAttachmentsAttachmentTagOutput() VpcAttachmentsAttachmentTagOutput {
	return o
}

func (o VpcAttachmentsAttachmentTagOutput) ToVpcAttachmentsAttachmentTagOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentTagOutput {
	return o
}

// The Key of Tags.
func (o VpcAttachmentsAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcAttachmentsAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcAttachmentsAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachmentTag)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentTagArrayOutput) ToVpcAttachmentsAttachmentTagArrayOutput() VpcAttachmentsAttachmentTagArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentTagArrayOutput) ToVpcAttachmentsAttachmentTagArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentTagArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentTagArrayOutput) Index(i pulumi.IntInput) VpcAttachmentsAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentsAttachmentTag {
		return vs[0].([]VpcAttachmentsAttachmentTag)[vs[1].(int)]
	}).(VpcAttachmentsAttachmentTagOutput)
}

type VpcAttachmentsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcAttachmentsTagInput is an input type that accepts VpcAttachmentsTagArgs and VpcAttachmentsTagOutput values.
// You can construct a concrete instance of `VpcAttachmentsTagInput` via:
//
//	VpcAttachmentsTagArgs{...}
type VpcAttachmentsTagInput interface {
	pulumi.Input

	ToVpcAttachmentsTagOutput() VpcAttachmentsTagOutput
	ToVpcAttachmentsTagOutputWithContext(context.Context) VpcAttachmentsTagOutput
}

type VpcAttachmentsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcAttachmentsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsTag)(nil)).Elem()
}

func (i VpcAttachmentsTagArgs) ToVpcAttachmentsTagOutput() VpcAttachmentsTagOutput {
	return i.ToVpcAttachmentsTagOutputWithContext(context.Background())
}

func (i VpcAttachmentsTagArgs) ToVpcAttachmentsTagOutputWithContext(ctx context.Context) VpcAttachmentsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsTagOutput)
}

// VpcAttachmentsTagArrayInput is an input type that accepts VpcAttachmentsTagArray and VpcAttachmentsTagArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentsTagArrayInput` via:
//
//	VpcAttachmentsTagArray{ VpcAttachmentsTagArgs{...} }
type VpcAttachmentsTagArrayInput interface {
	pulumi.Input

	ToVpcAttachmentsTagArrayOutput() VpcAttachmentsTagArrayOutput
	ToVpcAttachmentsTagArrayOutputWithContext(context.Context) VpcAttachmentsTagArrayOutput
}

type VpcAttachmentsTagArray []VpcAttachmentsTagInput

func (VpcAttachmentsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsTag)(nil)).Elem()
}

func (i VpcAttachmentsTagArray) ToVpcAttachmentsTagArrayOutput() VpcAttachmentsTagArrayOutput {
	return i.ToVpcAttachmentsTagArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentsTagArray) ToVpcAttachmentsTagArrayOutputWithContext(ctx context.Context) VpcAttachmentsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsTagArrayOutput)
}

type VpcAttachmentsTagOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsTag)(nil)).Elem()
}

func (o VpcAttachmentsTagOutput) ToVpcAttachmentsTagOutput() VpcAttachmentsTagOutput {
	return o
}

func (o VpcAttachmentsTagOutput) ToVpcAttachmentsTagOutputWithContext(ctx context.Context) VpcAttachmentsTagOutput {
	return o
}

// The Key of Tags.
func (o VpcAttachmentsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcAttachmentsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcAttachmentsTagArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsTag)(nil)).Elem()
}

func (o VpcAttachmentsTagArrayOutput) ToVpcAttachmentsTagArrayOutput() VpcAttachmentsTagArrayOutput {
	return o
}

func (o VpcAttachmentsTagArrayOutput) ToVpcAttachmentsTagArrayOutputWithContext(ctx context.Context) VpcAttachmentsTagArrayOutput {
	return o
}

func (o VpcAttachmentsTagArrayOutput) Index(i pulumi.IntInput) VpcAttachmentsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentsTag {
		return vs[0].([]VpcAttachmentsTag)[vs[1].(int)]
	}).(VpcAttachmentsTagOutput)
}

type VpnAttachmentTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpnAttachmentTagInput is an input type that accepts VpnAttachmentTagArgs and VpnAttachmentTagOutput values.
// You can construct a concrete instance of `VpnAttachmentTagInput` via:
//
//	VpnAttachmentTagArgs{...}
type VpnAttachmentTagInput interface {
	pulumi.Input

	ToVpnAttachmentTagOutput() VpnAttachmentTagOutput
	ToVpnAttachmentTagOutputWithContext(context.Context) VpnAttachmentTagOutput
}

type VpnAttachmentTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpnAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentTag)(nil)).Elem()
}

func (i VpnAttachmentTagArgs) ToVpnAttachmentTagOutput() VpnAttachmentTagOutput {
	return i.ToVpnAttachmentTagOutputWithContext(context.Background())
}

func (i VpnAttachmentTagArgs) ToVpnAttachmentTagOutputWithContext(ctx context.Context) VpnAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentTagOutput)
}

// VpnAttachmentTagArrayInput is an input type that accepts VpnAttachmentTagArray and VpnAttachmentTagArrayOutput values.
// You can construct a concrete instance of `VpnAttachmentTagArrayInput` via:
//
//	VpnAttachmentTagArray{ VpnAttachmentTagArgs{...} }
type VpnAttachmentTagArrayInput interface {
	pulumi.Input

	ToVpnAttachmentTagArrayOutput() VpnAttachmentTagArrayOutput
	ToVpnAttachmentTagArrayOutputWithContext(context.Context) VpnAttachmentTagArrayOutput
}

type VpnAttachmentTagArray []VpnAttachmentTagInput

func (VpnAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentTag)(nil)).Elem()
}

func (i VpnAttachmentTagArray) ToVpnAttachmentTagArrayOutput() VpnAttachmentTagArrayOutput {
	return i.ToVpnAttachmentTagArrayOutputWithContext(context.Background())
}

func (i VpnAttachmentTagArray) ToVpnAttachmentTagArrayOutputWithContext(ctx context.Context) VpnAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentTagArrayOutput)
}

type VpnAttachmentTagOutput struct{ *pulumi.OutputState }

func (VpnAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentTag)(nil)).Elem()
}

func (o VpnAttachmentTagOutput) ToVpnAttachmentTagOutput() VpnAttachmentTagOutput {
	return o
}

func (o VpnAttachmentTagOutput) ToVpnAttachmentTagOutputWithContext(ctx context.Context) VpnAttachmentTagOutput {
	return o
}

// The Key of Tags.
func (o VpnAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpnAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpnAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (VpnAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentTag)(nil)).Elem()
}

func (o VpnAttachmentTagArrayOutput) ToVpnAttachmentTagArrayOutput() VpnAttachmentTagArrayOutput {
	return o
}

func (o VpnAttachmentTagArrayOutput) ToVpnAttachmentTagArrayOutputWithContext(ctx context.Context) VpnAttachmentTagArrayOutput {
	return o
}

func (o VpnAttachmentTagArrayOutput) Index(i pulumi.IntInput) VpnAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnAttachmentTag {
		return vs[0].([]VpnAttachmentTag)[vs[1].(int)]
	}).(VpnAttachmentTagOutput)
}

type VpnAttachmentsAttachment struct {
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The description info.
	Description string `pulumi:"description"`
	// The status of the transit router.
	Status string `pulumi:"status"`
	// Tags.
	Tags []VpnAttachmentsAttachmentTag `pulumi:"tags"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The id of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
	// The ID of the IPSec connection.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
	// The ID of the availability zone.
	ZoneId string `pulumi:"zoneId"`
}

// VpnAttachmentsAttachmentInput is an input type that accepts VpnAttachmentsAttachmentArgs and VpnAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `VpnAttachmentsAttachmentInput` via:
//
//	VpnAttachmentsAttachmentArgs{...}
type VpnAttachmentsAttachmentInput interface {
	pulumi.Input

	ToVpnAttachmentsAttachmentOutput() VpnAttachmentsAttachmentOutput
	ToVpnAttachmentsAttachmentOutputWithContext(context.Context) VpnAttachmentsAttachmentOutput
}

type VpnAttachmentsAttachmentArgs struct {
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description info.
	Description pulumi.StringInput `pulumi:"description"`
	// The status of the transit router.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags VpnAttachmentsAttachmentTagArrayInput `pulumi:"tags"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The id of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The ID of the IPSec connection.
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
	// The ID of the availability zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (VpnAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentsAttachment)(nil)).Elem()
}

func (i VpnAttachmentsAttachmentArgs) ToVpnAttachmentsAttachmentOutput() VpnAttachmentsAttachmentOutput {
	return i.ToVpnAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i VpnAttachmentsAttachmentArgs) ToVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentsAttachmentOutput)
}

// VpnAttachmentsAttachmentArrayInput is an input type that accepts VpnAttachmentsAttachmentArray and VpnAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `VpnAttachmentsAttachmentArrayInput` via:
//
//	VpnAttachmentsAttachmentArray{ VpnAttachmentsAttachmentArgs{...} }
type VpnAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToVpnAttachmentsAttachmentArrayOutput() VpnAttachmentsAttachmentArrayOutput
	ToVpnAttachmentsAttachmentArrayOutputWithContext(context.Context) VpnAttachmentsAttachmentArrayOutput
}

type VpnAttachmentsAttachmentArray []VpnAttachmentsAttachmentInput

func (VpnAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentsAttachment)(nil)).Elem()
}

func (i VpnAttachmentsAttachmentArray) ToVpnAttachmentsAttachmentArrayOutput() VpnAttachmentsAttachmentArrayOutput {
	return i.ToVpnAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i VpnAttachmentsAttachmentArray) ToVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentsAttachmentArrayOutput)
}

type VpnAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (VpnAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentsAttachment)(nil)).Elem()
}

func (o VpnAttachmentsAttachmentOutput) ToVpnAttachmentsAttachmentOutput() VpnAttachmentsAttachmentOutput {
	return o
}

func (o VpnAttachmentsAttachmentOutput) ToVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentOutput {
	return o
}

// The create time.
func (o VpnAttachmentsAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description info.
func (o VpnAttachmentsAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.Description }).(pulumi.StringOutput)
}

// The status of the transit router.
func (o VpnAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o VpnAttachmentsAttachmentOutput) Tags() VpnAttachmentsAttachmentTagArrayOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) []VpnAttachmentsAttachmentTag { return v.Tags }).(VpnAttachmentsAttachmentTagArrayOutput)
}

// The id of the transit router attachment.
func (o VpnAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of the transit router attachment.
func (o VpnAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// The id of the transit router.
func (o VpnAttachmentsAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The update time.
func (o VpnAttachmentsAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The ID of the IPSec connection.
func (o VpnAttachmentsAttachmentOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

// The ID of the availability zone.
func (o VpnAttachmentsAttachmentOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.ZoneId }).(pulumi.StringOutput)
}

type VpnAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (VpnAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentsAttachment)(nil)).Elem()
}

func (o VpnAttachmentsAttachmentArrayOutput) ToVpnAttachmentsAttachmentArrayOutput() VpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o VpnAttachmentsAttachmentArrayOutput) ToVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o VpnAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) VpnAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnAttachmentsAttachment {
		return vs[0].([]VpnAttachmentsAttachment)[vs[1].(int)]
	}).(VpnAttachmentsAttachmentOutput)
}

type VpnAttachmentsAttachmentTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpnAttachmentsAttachmentTagInput is an input type that accepts VpnAttachmentsAttachmentTagArgs and VpnAttachmentsAttachmentTagOutput values.
// You can construct a concrete instance of `VpnAttachmentsAttachmentTagInput` via:
//
//	VpnAttachmentsAttachmentTagArgs{...}
type VpnAttachmentsAttachmentTagInput interface {
	pulumi.Input

	ToVpnAttachmentsAttachmentTagOutput() VpnAttachmentsAttachmentTagOutput
	ToVpnAttachmentsAttachmentTagOutputWithContext(context.Context) VpnAttachmentsAttachmentTagOutput
}

type VpnAttachmentsAttachmentTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpnAttachmentsAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentsAttachmentTag)(nil)).Elem()
}

func (i VpnAttachmentsAttachmentTagArgs) ToVpnAttachmentsAttachmentTagOutput() VpnAttachmentsAttachmentTagOutput {
	return i.ToVpnAttachmentsAttachmentTagOutputWithContext(context.Background())
}

func (i VpnAttachmentsAttachmentTagArgs) ToVpnAttachmentsAttachmentTagOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentsAttachmentTagOutput)
}

// VpnAttachmentsAttachmentTagArrayInput is an input type that accepts VpnAttachmentsAttachmentTagArray and VpnAttachmentsAttachmentTagArrayOutput values.
// You can construct a concrete instance of `VpnAttachmentsAttachmentTagArrayInput` via:
//
//	VpnAttachmentsAttachmentTagArray{ VpnAttachmentsAttachmentTagArgs{...} }
type VpnAttachmentsAttachmentTagArrayInput interface {
	pulumi.Input

	ToVpnAttachmentsAttachmentTagArrayOutput() VpnAttachmentsAttachmentTagArrayOutput
	ToVpnAttachmentsAttachmentTagArrayOutputWithContext(context.Context) VpnAttachmentsAttachmentTagArrayOutput
}

type VpnAttachmentsAttachmentTagArray []VpnAttachmentsAttachmentTagInput

func (VpnAttachmentsAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentsAttachmentTag)(nil)).Elem()
}

func (i VpnAttachmentsAttachmentTagArray) ToVpnAttachmentsAttachmentTagArrayOutput() VpnAttachmentsAttachmentTagArrayOutput {
	return i.ToVpnAttachmentsAttachmentTagArrayOutputWithContext(context.Background())
}

func (i VpnAttachmentsAttachmentTagArray) ToVpnAttachmentsAttachmentTagArrayOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentsAttachmentTagArrayOutput)
}

type VpnAttachmentsAttachmentTagOutput struct{ *pulumi.OutputState }

func (VpnAttachmentsAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentsAttachmentTag)(nil)).Elem()
}

func (o VpnAttachmentsAttachmentTagOutput) ToVpnAttachmentsAttachmentTagOutput() VpnAttachmentsAttachmentTagOutput {
	return o
}

func (o VpnAttachmentsAttachmentTagOutput) ToVpnAttachmentsAttachmentTagOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentTagOutput {
	return o
}

// The Key of Tags.
func (o VpnAttachmentsAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpnAttachmentsAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpnAttachmentsAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (VpnAttachmentsAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentsAttachmentTag)(nil)).Elem()
}

func (o VpnAttachmentsAttachmentTagArrayOutput) ToVpnAttachmentsAttachmentTagArrayOutput() VpnAttachmentsAttachmentTagArrayOutput {
	return o
}

func (o VpnAttachmentsAttachmentTagArrayOutput) ToVpnAttachmentsAttachmentTagArrayOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentTagArrayOutput {
	return o
}

func (o VpnAttachmentsAttachmentTagArrayOutput) Index(i pulumi.IntInput) VpnAttachmentsAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnAttachmentsAttachmentTag {
		return vs[0].([]VpnAttachmentsAttachmentTag)[vs[1].(int)]
	}).(VpnAttachmentsAttachmentTagOutput)
}

type VpnAttachmentsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpnAttachmentsTagInput is an input type that accepts VpnAttachmentsTagArgs and VpnAttachmentsTagOutput values.
// You can construct a concrete instance of `VpnAttachmentsTagInput` via:
//
//	VpnAttachmentsTagArgs{...}
type VpnAttachmentsTagInput interface {
	pulumi.Input

	ToVpnAttachmentsTagOutput() VpnAttachmentsTagOutput
	ToVpnAttachmentsTagOutputWithContext(context.Context) VpnAttachmentsTagOutput
}

type VpnAttachmentsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpnAttachmentsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentsTag)(nil)).Elem()
}

func (i VpnAttachmentsTagArgs) ToVpnAttachmentsTagOutput() VpnAttachmentsTagOutput {
	return i.ToVpnAttachmentsTagOutputWithContext(context.Background())
}

func (i VpnAttachmentsTagArgs) ToVpnAttachmentsTagOutputWithContext(ctx context.Context) VpnAttachmentsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentsTagOutput)
}

// VpnAttachmentsTagArrayInput is an input type that accepts VpnAttachmentsTagArray and VpnAttachmentsTagArrayOutput values.
// You can construct a concrete instance of `VpnAttachmentsTagArrayInput` via:
//
//	VpnAttachmentsTagArray{ VpnAttachmentsTagArgs{...} }
type VpnAttachmentsTagArrayInput interface {
	pulumi.Input

	ToVpnAttachmentsTagArrayOutput() VpnAttachmentsTagArrayOutput
	ToVpnAttachmentsTagArrayOutputWithContext(context.Context) VpnAttachmentsTagArrayOutput
}

type VpnAttachmentsTagArray []VpnAttachmentsTagInput

func (VpnAttachmentsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentsTag)(nil)).Elem()
}

func (i VpnAttachmentsTagArray) ToVpnAttachmentsTagArrayOutput() VpnAttachmentsTagArrayOutput {
	return i.ToVpnAttachmentsTagArrayOutputWithContext(context.Background())
}

func (i VpnAttachmentsTagArray) ToVpnAttachmentsTagArrayOutputWithContext(ctx context.Context) VpnAttachmentsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentsTagArrayOutput)
}

type VpnAttachmentsTagOutput struct{ *pulumi.OutputState }

func (VpnAttachmentsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentsTag)(nil)).Elem()
}

func (o VpnAttachmentsTagOutput) ToVpnAttachmentsTagOutput() VpnAttachmentsTagOutput {
	return o
}

func (o VpnAttachmentsTagOutput) ToVpnAttachmentsTagOutputWithContext(ctx context.Context) VpnAttachmentsTagOutput {
	return o
}

// The Key of Tags.
func (o VpnAttachmentsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpnAttachmentsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpnAttachmentsTagArrayOutput struct{ *pulumi.OutputState }

func (VpnAttachmentsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentsTag)(nil)).Elem()
}

func (o VpnAttachmentsTagArrayOutput) ToVpnAttachmentsTagArrayOutput() VpnAttachmentsTagArrayOutput {
	return o
}

func (o VpnAttachmentsTagArrayOutput) ToVpnAttachmentsTagArrayOutputWithContext(ctx context.Context) VpnAttachmentsTagArrayOutput {
	return o
}

func (o VpnAttachmentsTagArrayOutput) Index(i pulumi.IntInput) VpnAttachmentsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnAttachmentsTag {
		return vs[0].([]VpnAttachmentsTag)[vs[1].(int)]
	}).(VpnAttachmentsTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageAllocationInput)(nil)).Elem(), BandwidthPackageAllocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageAllocationArrayInput)(nil)).Elem(), BandwidthPackageAllocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageTagInput)(nil)).Elem(), BandwidthPackageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageTagArrayInput)(nil)).Elem(), BandwidthPackageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageArrayInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageAllocationInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageAllocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageAllocationArrayInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageAllocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageTagInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageTagArrayInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesTagInput)(nil)).Elem(), BandwidthPackagesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesTagArrayInput)(nil)).Elem(), BandwidthPackagesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentTagInput)(nil)).Elem(), DirectConnectGatewayAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentTagArrayInput)(nil)).Elem(), DirectConnectGatewayAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentsAttachmentInput)(nil)).Elem(), DirectConnectGatewayAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentsAttachmentArrayInput)(nil)).Elem(), DirectConnectGatewayAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentsAttachmentTagInput)(nil)).Elem(), DirectConnectGatewayAttachmentsAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentsAttachmentTagArrayInput)(nil)).Elem(), DirectConnectGatewayAttachmentsAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentsTagInput)(nil)).Elem(), DirectConnectGatewayAttachmentsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentsTagArrayInput)(nil)).Elem(), DirectConnectGatewayAttachmentsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrantRulesRuleInput)(nil)).Elem(), GrantRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrantRulesRuleArrayInput)(nil)).Elem(), GrantRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAttachmentTagInput)(nil)).Elem(), PeerAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAttachmentTagArrayInput)(nil)).Elem(), PeerAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAttachmentsTagInput)(nil)).Elem(), PeerAttachmentsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAttachmentsTagArrayInput)(nil)).Elem(), PeerAttachmentsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAttachmentsTransitRouterAttachmentInput)(nil)).Elem(), PeerAttachmentsTransitRouterAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAttachmentsTransitRouterAttachmentArrayInput)(nil)).Elem(), PeerAttachmentsTransitRouterAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAttachmentsTransitRouterAttachmentTagInput)(nil)).Elem(), PeerAttachmentsTransitRouterAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAttachmentsTransitRouterAttachmentTagArrayInput)(nil)).Elem(), PeerAttachmentsTransitRouterAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesEntryInput)(nil)).Elem(), RouteEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesEntryArrayInput)(nil)).Elem(), RouteEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociationsAssociationInput)(nil)).Elem(), RouteTableAssociationsAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociationsAssociationArrayInput)(nil)).Elem(), RouteTableAssociationsAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablePropagationsPropagationInput)(nil)).Elem(), RouteTablePropagationsPropagationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablePropagationsPropagationArrayInput)(nil)).Elem(), RouteTablePropagationsPropagationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableTagInput)(nil)).Elem(), RouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableTagArrayInput)(nil)).Elem(), RouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableInput)(nil)).Elem(), RouteTablesRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableArrayInput)(nil)).Elem(), RouteTablesRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableTagInput)(nil)).Elem(), RouteTablesRouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableTagArrayInput)(nil)).Elem(), RouteTablesRouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesTagInput)(nil)).Elem(), RouteTablesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesTagArrayInput)(nil)).Elem(), RouteTablesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterTagInput)(nil)).Elem(), TransitRouterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterTagArrayInput)(nil)).Elem(), TransitRouterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterTransitRouterAttachmentInput)(nil)).Elem(), TransitRouterTransitRouterAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterTransitRouterAttachmentArrayInput)(nil)).Elem(), TransitRouterTransitRouterAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTagInput)(nil)).Elem(), TransitRoutersTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTagArrayInput)(nil)).Elem(), TransitRoutersTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterInput)(nil)).Elem(), TransitRoutersTransitRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterArrayInput)(nil)).Elem(), TransitRoutersTransitRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterTagInput)(nil)).Elem(), TransitRoutersTransitRouterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterTagArrayInput)(nil)).Elem(), TransitRoutersTransitRouterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterTransitRouterAttachmentInput)(nil)).Elem(), TransitRoutersTransitRouterTransitRouterAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterTransitRouterAttachmentArrayInput)(nil)).Elem(), TransitRoutersTransitRouterTransitRouterAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentAttachPointInput)(nil)).Elem(), VpcAttachmentAttachPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentAttachPointArrayInput)(nil)).Elem(), VpcAttachmentAttachPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentTagInput)(nil)).Elem(), VpcAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentTagArrayInput)(nil)).Elem(), VpcAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentInput)(nil)).Elem(), VpcAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentArrayInput)(nil)).Elem(), VpcAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentAttachPointInput)(nil)).Elem(), VpcAttachmentsAttachmentAttachPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentAttachPointArrayInput)(nil)).Elem(), VpcAttachmentsAttachmentAttachPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentTagInput)(nil)).Elem(), VpcAttachmentsAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentTagArrayInput)(nil)).Elem(), VpcAttachmentsAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsTagInput)(nil)).Elem(), VpcAttachmentsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsTagArrayInput)(nil)).Elem(), VpcAttachmentsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentTagInput)(nil)).Elem(), VpnAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentTagArrayInput)(nil)).Elem(), VpnAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentsAttachmentInput)(nil)).Elem(), VpnAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentsAttachmentArrayInput)(nil)).Elem(), VpnAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentsAttachmentTagInput)(nil)).Elem(), VpnAttachmentsAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentsAttachmentTagArrayInput)(nil)).Elem(), VpnAttachmentsAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentsTagInput)(nil)).Elem(), VpnAttachmentsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentsTagArrayInput)(nil)).Elem(), VpnAttachmentsTagArray{})
	pulumi.RegisterOutputType(BandwidthPackageAllocationOutput{})
	pulumi.RegisterOutputType(BandwidthPackageAllocationArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackageTagOutput{})
	pulumi.RegisterOutputType(BandwidthPackageTagArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageAllocationOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageAllocationArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageTagOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageTagArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesTagOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesTagArrayOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentTagOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentsAttachmentTagOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentsAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentsTagOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentsTagArrayOutput{})
	pulumi.RegisterOutputType(GrantRulesRuleOutput{})
	pulumi.RegisterOutputType(GrantRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(PeerAttachmentTagOutput{})
	pulumi.RegisterOutputType(PeerAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(PeerAttachmentsTagOutput{})
	pulumi.RegisterOutputType(PeerAttachmentsTagArrayOutput{})
	pulumi.RegisterOutputType(PeerAttachmentsTransitRouterAttachmentOutput{})
	pulumi.RegisterOutputType(PeerAttachmentsTransitRouterAttachmentArrayOutput{})
	pulumi.RegisterOutputType(PeerAttachmentsTransitRouterAttachmentTagOutput{})
	pulumi.RegisterOutputType(PeerAttachmentsTransitRouterAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(RouteEntriesEntryOutput{})
	pulumi.RegisterOutputType(RouteEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(RouteTableAssociationsAssociationOutput{})
	pulumi.RegisterOutputType(RouteTableAssociationsAssociationArrayOutput{})
	pulumi.RegisterOutputType(RouteTablePropagationsPropagationOutput{})
	pulumi.RegisterOutputType(RouteTablePropagationsPropagationArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTagOutput{})
	pulumi.RegisterOutputType(RouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableArrayOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableTagOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(RouteTablesTagOutput{})
	pulumi.RegisterOutputType(RouteTablesTagArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterTagOutput{})
	pulumi.RegisterOutputType(TransitRouterTagArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterTransitRouterAttachmentOutput{})
	pulumi.RegisterOutputType(TransitRouterTransitRouterAttachmentArrayOutput{})
	pulumi.RegisterOutputType(TransitRoutersTagOutput{})
	pulumi.RegisterOutputType(TransitRoutersTagArrayOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterArrayOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterTagOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterTagArrayOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterTransitRouterAttachmentOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentAttachPointOutput{})
	pulumi.RegisterOutputType(VpcAttachmentAttachPointArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentTagOutput{})
	pulumi.RegisterOutputType(VpcAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentAttachPointOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentAttachPointArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentTagOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsTagOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsTagArrayOutput{})
	pulumi.RegisterOutputType(VpnAttachmentTagOutput{})
	pulumi.RegisterOutputType(VpnAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(VpnAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(VpnAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(VpnAttachmentsAttachmentTagOutput{})
	pulumi.RegisterOutputType(VpnAttachmentsAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(VpnAttachmentsTagOutput{})
	pulumi.RegisterOutputType(VpnAttachmentsTagArrayOutput{})
}
