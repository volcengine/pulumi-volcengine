// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type BandwidthPackageAllocation struct {
	// The delete time of the transit router bandwidth package.
	AllocateTime *string `pulumi:"allocateTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime *string `pulumi:"deleteTime"`
	// The local region id of the transit router.
	LocalRegionId *string `pulumi:"localRegionId"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId *string `pulumi:"transitRouterPeerAttachmentId"`
}

// BandwidthPackageAllocationInput is an input type that accepts BandwidthPackageAllocationArgs and BandwidthPackageAllocationOutput values.
// You can construct a concrete instance of `BandwidthPackageAllocationInput` via:
//
//	BandwidthPackageAllocationArgs{...}
type BandwidthPackageAllocationInput interface {
	pulumi.Input

	ToBandwidthPackageAllocationOutput() BandwidthPackageAllocationOutput
	ToBandwidthPackageAllocationOutputWithContext(context.Context) BandwidthPackageAllocationOutput
}

type BandwidthPackageAllocationArgs struct {
	// The delete time of the transit router bandwidth package.
	AllocateTime pulumi.StringPtrInput `pulumi:"allocateTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime pulumi.StringPtrInput `pulumi:"deleteTime"`
	// The local region id of the transit router.
	LocalRegionId pulumi.StringPtrInput `pulumi:"localRegionId"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId pulumi.StringPtrInput `pulumi:"transitRouterPeerAttachmentId"`
}

func (BandwidthPackageAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageAllocation)(nil)).Elem()
}

func (i BandwidthPackageAllocationArgs) ToBandwidthPackageAllocationOutput() BandwidthPackageAllocationOutput {
	return i.ToBandwidthPackageAllocationOutputWithContext(context.Background())
}

func (i BandwidthPackageAllocationArgs) ToBandwidthPackageAllocationOutputWithContext(ctx context.Context) BandwidthPackageAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageAllocationOutput)
}

// BandwidthPackageAllocationArrayInput is an input type that accepts BandwidthPackageAllocationArray and BandwidthPackageAllocationArrayOutput values.
// You can construct a concrete instance of `BandwidthPackageAllocationArrayInput` via:
//
//	BandwidthPackageAllocationArray{ BandwidthPackageAllocationArgs{...} }
type BandwidthPackageAllocationArrayInput interface {
	pulumi.Input

	ToBandwidthPackageAllocationArrayOutput() BandwidthPackageAllocationArrayOutput
	ToBandwidthPackageAllocationArrayOutputWithContext(context.Context) BandwidthPackageAllocationArrayOutput
}

type BandwidthPackageAllocationArray []BandwidthPackageAllocationInput

func (BandwidthPackageAllocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackageAllocation)(nil)).Elem()
}

func (i BandwidthPackageAllocationArray) ToBandwidthPackageAllocationArrayOutput() BandwidthPackageAllocationArrayOutput {
	return i.ToBandwidthPackageAllocationArrayOutputWithContext(context.Background())
}

func (i BandwidthPackageAllocationArray) ToBandwidthPackageAllocationArrayOutputWithContext(ctx context.Context) BandwidthPackageAllocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageAllocationArrayOutput)
}

type BandwidthPackageAllocationOutput struct{ *pulumi.OutputState }

func (BandwidthPackageAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageAllocation)(nil)).Elem()
}

func (o BandwidthPackageAllocationOutput) ToBandwidthPackageAllocationOutput() BandwidthPackageAllocationOutput {
	return o
}

func (o BandwidthPackageAllocationOutput) ToBandwidthPackageAllocationOutputWithContext(ctx context.Context) BandwidthPackageAllocationOutput {
	return o
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackageAllocationOutput) AllocateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackageAllocation) *string { return v.AllocateTime }).(pulumi.StringPtrOutput)
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackageAllocationOutput) DeleteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackageAllocation) *string { return v.DeleteTime }).(pulumi.StringPtrOutput)
}

// The local region id of the transit router.
func (o BandwidthPackageAllocationOutput) LocalRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackageAllocation) *string { return v.LocalRegionId }).(pulumi.StringPtrOutput)
}

// The ID of the peer attachment.
func (o BandwidthPackageAllocationOutput) TransitRouterPeerAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackageAllocation) *string { return v.TransitRouterPeerAttachmentId }).(pulumi.StringPtrOutput)
}

type BandwidthPackageAllocationArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackageAllocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackageAllocation)(nil)).Elem()
}

func (o BandwidthPackageAllocationArrayOutput) ToBandwidthPackageAllocationArrayOutput() BandwidthPackageAllocationArrayOutput {
	return o
}

func (o BandwidthPackageAllocationArrayOutput) ToBandwidthPackageAllocationArrayOutputWithContext(ctx context.Context) BandwidthPackageAllocationArrayOutput {
	return o
}

func (o BandwidthPackageAllocationArrayOutput) Index(i pulumi.IntInput) BandwidthPackageAllocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackageAllocation {
		return vs[0].([]BandwidthPackageAllocation)[vs[1].(int)]
	}).(BandwidthPackageAllocationOutput)
}

type BandwidthPackagesBandwidthPackage struct {
	// The account id.
	AccountId string `pulumi:"accountId"`
	// The detailed information on cross regional connections associated with bandwidth packets.
	Allocations []BandwidthPackagesBandwidthPackageAllocation `pulumi:"allocations"`
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing type of the transit router bandwidth package.
	BillingType string `pulumi:"billingType"`
	// The business status of the transit router bandwidth package.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time of the transit router bandwidth package.
	CreationTime string `pulumi:"creationTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime string `pulumi:"deleteTime"`
	// The description of the transit router bandwidth package.
	Description string `pulumi:"description"`
	// The expired time of the transit router bandwidth package.
	ExpiredTime string `pulumi:"expiredTime"`
	// The id of the transit router bandwidth package.
	Id string `pulumi:"id"`
	// The local geographic region set ID.
	LocalGeographicRegionSetId string `pulumi:"localGeographicRegionSetId"`
	// The peer geographic region set ID.
	PeerGeographicRegionSetId string `pulumi:"peerGeographicRegionSetId"`
	// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
	RemainingBandwidth int `pulumi:"remainingBandwidth"`
	// The status of the transit router bandwidth package.
	Status string `pulumi:"status"`
	// The id of the transit router attachment.
	TransitRouterBandwidthPackageId string `pulumi:"transitRouterBandwidthPackageId"`
	// The name of the TransitRouter bandwidth package.
	TransitRouterBandwidthPackageName string `pulumi:"transitRouterBandwidthPackageName"`
	// The update time of the transit router bandwidth package.
	UpdateTime string `pulumi:"updateTime"`
}

// BandwidthPackagesBandwidthPackageInput is an input type that accepts BandwidthPackagesBandwidthPackageArgs and BandwidthPackagesBandwidthPackageOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageInput` via:
//
//	BandwidthPackagesBandwidthPackageArgs{...}
type BandwidthPackagesBandwidthPackageInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput
	ToBandwidthPackagesBandwidthPackageOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageOutput
}

type BandwidthPackagesBandwidthPackageArgs struct {
	// The account id.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The detailed information on cross regional connections associated with bandwidth packets.
	Allocations BandwidthPackagesBandwidthPackageAllocationArrayInput `pulumi:"allocations"`
	// The bandwidth peak of the transit router bandwidth package. Unit: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing type of the transit router bandwidth package.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The business status of the transit router bandwidth package.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time of the transit router bandwidth package.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime pulumi.StringInput `pulumi:"deleteTime"`
	// The description of the transit router bandwidth package.
	Description pulumi.StringInput `pulumi:"description"`
	// The expired time of the transit router bandwidth package.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The id of the transit router bandwidth package.
	Id pulumi.StringInput `pulumi:"id"`
	// The local geographic region set ID.
	LocalGeographicRegionSetId pulumi.StringInput `pulumi:"localGeographicRegionSetId"`
	// The peer geographic region set ID.
	PeerGeographicRegionSetId pulumi.StringInput `pulumi:"peerGeographicRegionSetId"`
	// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
	RemainingBandwidth pulumi.IntInput `pulumi:"remainingBandwidth"`
	// The status of the transit router bandwidth package.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the transit router attachment.
	TransitRouterBandwidthPackageId pulumi.StringInput `pulumi:"transitRouterBandwidthPackageId"`
	// The name of the TransitRouter bandwidth package.
	TransitRouterBandwidthPackageName pulumi.StringInput `pulumi:"transitRouterBandwidthPackageName"`
	// The update time of the transit router bandwidth package.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (BandwidthPackagesBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageArgs) ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput {
	return i.ToBandwidthPackagesBandwidthPackageOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageArgs) ToBandwidthPackagesBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageOutput)
}

// BandwidthPackagesBandwidthPackageArrayInput is an input type that accepts BandwidthPackagesBandwidthPackageArray and BandwidthPackagesBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageArrayInput` via:
//
//	BandwidthPackagesBandwidthPackageArray{ BandwidthPackagesBandwidthPackageArgs{...} }
type BandwidthPackagesBandwidthPackageArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput
	ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageArrayOutput
}

type BandwidthPackagesBandwidthPackageArray []BandwidthPackagesBandwidthPackageInput

func (BandwidthPackagesBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageArray) ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput {
	return i.ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageArray) ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageArrayOutput)
}

type BandwidthPackagesBandwidthPackageOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageOutput) ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageOutput) ToBandwidthPackagesBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageOutput {
	return o
}

// The account id.
func (o BandwidthPackagesBandwidthPackageOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.AccountId }).(pulumi.StringOutput)
}

// The detailed information on cross regional connections associated with bandwidth packets.
func (o BandwidthPackagesBandwidthPackageOutput) Allocations() BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) []BandwidthPackagesBandwidthPackageAllocation {
		return v.Allocations
	}).(BandwidthPackagesBandwidthPackageAllocationArrayOutput)
}

// The bandwidth peak of the transit router bandwidth package. Unit: Mbps.
func (o BandwidthPackagesBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing type of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.BillingType }).(pulumi.StringOutput)
}

// The business status of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// The description of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Description }).(pulumi.StringOutput)
}

// The expired time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The id of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Id }).(pulumi.StringOutput)
}

// The local geographic region set ID.
func (o BandwidthPackagesBandwidthPackageOutput) LocalGeographicRegionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.LocalGeographicRegionSetId }).(pulumi.StringOutput)
}

// The peer geographic region set ID.
func (o BandwidthPackagesBandwidthPackageOutput) PeerGeographicRegionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.PeerGeographicRegionSetId }).(pulumi.StringOutput)
}

// The remaining bandwidth of the transit router bandwidth package. Unit: Mbps.
func (o BandwidthPackagesBandwidthPackageOutput) RemainingBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) int { return v.RemainingBandwidth }).(pulumi.IntOutput)
}

// The status of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the transit router attachment.
func (o BandwidthPackagesBandwidthPackageOutput) TransitRouterBandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.TransitRouterBandwidthPackageId }).(pulumi.StringOutput)
}

// The name of the TransitRouter bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) TransitRouterBandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.TransitRouterBandwidthPackageName }).(pulumi.StringOutput)
}

// The update time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type BandwidthPackagesBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesBandwidthPackage {
		return vs[0].([]BandwidthPackagesBandwidthPackage)[vs[1].(int)]
	}).(BandwidthPackagesBandwidthPackageOutput)
}

type BandwidthPackagesBandwidthPackageAllocation struct {
	// The delete time of the transit router bandwidth package.
	AllocateTime string `pulumi:"allocateTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime string `pulumi:"deleteTime"`
	// The local region id of the transit router.
	LocalRegionId string `pulumi:"localRegionId"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId string `pulumi:"transitRouterPeerAttachmentId"`
}

// BandwidthPackagesBandwidthPackageAllocationInput is an input type that accepts BandwidthPackagesBandwidthPackageAllocationArgs and BandwidthPackagesBandwidthPackageAllocationOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageAllocationInput` via:
//
//	BandwidthPackagesBandwidthPackageAllocationArgs{...}
type BandwidthPackagesBandwidthPackageAllocationInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageAllocationOutput() BandwidthPackagesBandwidthPackageAllocationOutput
	ToBandwidthPackagesBandwidthPackageAllocationOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageAllocationOutput
}

type BandwidthPackagesBandwidthPackageAllocationArgs struct {
	// The delete time of the transit router bandwidth package.
	AllocateTime pulumi.StringInput `pulumi:"allocateTime"`
	// The delete time of the transit router bandwidth package.
	DeleteTime pulumi.StringInput `pulumi:"deleteTime"`
	// The local region id of the transit router.
	LocalRegionId pulumi.StringInput `pulumi:"localRegionId"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId pulumi.StringInput `pulumi:"transitRouterPeerAttachmentId"`
}

func (BandwidthPackagesBandwidthPackageAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackageAllocation)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageAllocationArgs) ToBandwidthPackagesBandwidthPackageAllocationOutput() BandwidthPackagesBandwidthPackageAllocationOutput {
	return i.ToBandwidthPackagesBandwidthPackageAllocationOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageAllocationArgs) ToBandwidthPackagesBandwidthPackageAllocationOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageAllocationOutput)
}

// BandwidthPackagesBandwidthPackageAllocationArrayInput is an input type that accepts BandwidthPackagesBandwidthPackageAllocationArray and BandwidthPackagesBandwidthPackageAllocationArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageAllocationArrayInput` via:
//
//	BandwidthPackagesBandwidthPackageAllocationArray{ BandwidthPackagesBandwidthPackageAllocationArgs{...} }
type BandwidthPackagesBandwidthPackageAllocationArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageAllocationArrayOutput() BandwidthPackagesBandwidthPackageAllocationArrayOutput
	ToBandwidthPackagesBandwidthPackageAllocationArrayOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageAllocationArrayOutput
}

type BandwidthPackagesBandwidthPackageAllocationArray []BandwidthPackagesBandwidthPackageAllocationInput

func (BandwidthPackagesBandwidthPackageAllocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackageAllocation)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageAllocationArray) ToBandwidthPackagesBandwidthPackageAllocationArrayOutput() BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return i.ToBandwidthPackagesBandwidthPackageAllocationArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageAllocationArray) ToBandwidthPackagesBandwidthPackageAllocationArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageAllocationArrayOutput)
}

type BandwidthPackagesBandwidthPackageAllocationOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackageAllocation)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageAllocationOutput) ToBandwidthPackagesBandwidthPackageAllocationOutput() BandwidthPackagesBandwidthPackageAllocationOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageAllocationOutput) ToBandwidthPackagesBandwidthPackageAllocationOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageAllocationOutput {
	return o
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageAllocationOutput) AllocateTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageAllocation) string { return v.AllocateTime }).(pulumi.StringOutput)
}

// The delete time of the transit router bandwidth package.
func (o BandwidthPackagesBandwidthPackageAllocationOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageAllocation) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// The local region id of the transit router.
func (o BandwidthPackagesBandwidthPackageAllocationOutput) LocalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageAllocation) string { return v.LocalRegionId }).(pulumi.StringOutput)
}

// The ID of the peer attachment.
func (o BandwidthPackagesBandwidthPackageAllocationOutput) TransitRouterPeerAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageAllocation) string { return v.TransitRouterPeerAttachmentId }).(pulumi.StringOutput)
}

type BandwidthPackagesBandwidthPackageAllocationArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageAllocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackageAllocation)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageAllocationArrayOutput) ToBandwidthPackagesBandwidthPackageAllocationArrayOutput() BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageAllocationArrayOutput) ToBandwidthPackagesBandwidthPackageAllocationArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageAllocationArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageAllocationArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesBandwidthPackageAllocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesBandwidthPackageAllocation {
		return vs[0].([]BandwidthPackagesBandwidthPackageAllocation)[vs[1].(int)]
	}).(BandwidthPackagesBandwidthPackageAllocationOutput)
}

type RouteEntriesEntry struct {
	// The creation time of the route entry.
	CreationTime string `pulumi:"creationTime"`
	// Description of the transit router route entry.
	Description string `pulumi:"description"`
	// The target network segment of the route entry.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The status of the route entry.
	Status string `pulumi:"status"`
	// The id of the route entry.
	TransitRouterRouteEntryId string `pulumi:"transitRouterRouteEntryId"`
	// The name of the route entry.
	TransitRouterRouteEntryName string `pulumi:"transitRouterRouteEntryName"`
	// The next hot id of the routing entry.
	TransitRouterRouteEntryNextHopId string `pulumi:"transitRouterRouteEntryNextHopId"`
	// The next hop type of the routing entry. The value can be Attachment or BlackHole.
	TransitRouterRouteEntryNextHopType string `pulumi:"transitRouterRouteEntryNextHopType"`
	// The type of the route entry.
	TransitRouterRouteEntryType string `pulumi:"transitRouterRouteEntryType"`
	// The update time of the route entry.
	UpdateTime string `pulumi:"updateTime"`
}

// RouteEntriesEntryInput is an input type that accepts RouteEntriesEntryArgs and RouteEntriesEntryOutput values.
// You can construct a concrete instance of `RouteEntriesEntryInput` via:
//
//	RouteEntriesEntryArgs{...}
type RouteEntriesEntryInput interface {
	pulumi.Input

	ToRouteEntriesEntryOutput() RouteEntriesEntryOutput
	ToRouteEntriesEntryOutputWithContext(context.Context) RouteEntriesEntryOutput
}

type RouteEntriesEntryArgs struct {
	// The creation time of the route entry.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description of the transit router route entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The target network segment of the route entry.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The status of the route entry.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the route entry.
	TransitRouterRouteEntryId pulumi.StringInput `pulumi:"transitRouterRouteEntryId"`
	// The name of the route entry.
	TransitRouterRouteEntryName pulumi.StringInput `pulumi:"transitRouterRouteEntryName"`
	// The next hot id of the routing entry.
	TransitRouterRouteEntryNextHopId pulumi.StringInput `pulumi:"transitRouterRouteEntryNextHopId"`
	// The next hop type of the routing entry. The value can be Attachment or BlackHole.
	TransitRouterRouteEntryNextHopType pulumi.StringInput `pulumi:"transitRouterRouteEntryNextHopType"`
	// The type of the route entry.
	TransitRouterRouteEntryType pulumi.StringInput `pulumi:"transitRouterRouteEntryType"`
	// The update time of the route entry.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (RouteEntriesEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesEntry)(nil)).Elem()
}

func (i RouteEntriesEntryArgs) ToRouteEntriesEntryOutput() RouteEntriesEntryOutput {
	return i.ToRouteEntriesEntryOutputWithContext(context.Background())
}

func (i RouteEntriesEntryArgs) ToRouteEntriesEntryOutputWithContext(ctx context.Context) RouteEntriesEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesEntryOutput)
}

// RouteEntriesEntryArrayInput is an input type that accepts RouteEntriesEntryArray and RouteEntriesEntryArrayOutput values.
// You can construct a concrete instance of `RouteEntriesEntryArrayInput` via:
//
//	RouteEntriesEntryArray{ RouteEntriesEntryArgs{...} }
type RouteEntriesEntryArrayInput interface {
	pulumi.Input

	ToRouteEntriesEntryArrayOutput() RouteEntriesEntryArrayOutput
	ToRouteEntriesEntryArrayOutputWithContext(context.Context) RouteEntriesEntryArrayOutput
}

type RouteEntriesEntryArray []RouteEntriesEntryInput

func (RouteEntriesEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesEntry)(nil)).Elem()
}

func (i RouteEntriesEntryArray) ToRouteEntriesEntryArrayOutput() RouteEntriesEntryArrayOutput {
	return i.ToRouteEntriesEntryArrayOutputWithContext(context.Background())
}

func (i RouteEntriesEntryArray) ToRouteEntriesEntryArrayOutputWithContext(ctx context.Context) RouteEntriesEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesEntryArrayOutput)
}

type RouteEntriesEntryOutput struct{ *pulumi.OutputState }

func (RouteEntriesEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesEntry)(nil)).Elem()
}

func (o RouteEntriesEntryOutput) ToRouteEntriesEntryOutput() RouteEntriesEntryOutput {
	return o
}

func (o RouteEntriesEntryOutput) ToRouteEntriesEntryOutputWithContext(ctx context.Context) RouteEntriesEntryOutput {
	return o
}

// The creation time of the route entry.
func (o RouteEntriesEntryOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description of the transit router route entry.
func (o RouteEntriesEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The target network segment of the route entry.
func (o RouteEntriesEntryOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The status of the route entry.
func (o RouteEntriesEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the route entry.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryId }).(pulumi.StringOutput)
}

// The name of the route entry.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryName }).(pulumi.StringOutput)
}

// The next hot id of the routing entry.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryNextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryNextHopId }).(pulumi.StringOutput)
}

// The next hop type of the routing entry. The value can be Attachment or BlackHole.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryNextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryNextHopType }).(pulumi.StringOutput)
}

// The type of the route entry.
func (o RouteEntriesEntryOutput) TransitRouterRouteEntryType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.TransitRouterRouteEntryType }).(pulumi.StringOutput)
}

// The update time of the route entry.
func (o RouteEntriesEntryOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesEntry) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type RouteEntriesEntryArrayOutput struct{ *pulumi.OutputState }

func (RouteEntriesEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesEntry)(nil)).Elem()
}

func (o RouteEntriesEntryArrayOutput) ToRouteEntriesEntryArrayOutput() RouteEntriesEntryArrayOutput {
	return o
}

func (o RouteEntriesEntryArrayOutput) ToRouteEntriesEntryArrayOutputWithContext(ctx context.Context) RouteEntriesEntryArrayOutput {
	return o
}

func (o RouteEntriesEntryArrayOutput) Index(i pulumi.IntInput) RouteEntriesEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteEntriesEntry {
		return vs[0].([]RouteEntriesEntry)[vs[1].(int)]
	}).(RouteEntriesEntryOutput)
}

type RouteTableAssociationsAssociation struct {
	// The status of the route table.
	Status string `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The ID of the routing table associated with the transit router instance.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
}

// RouteTableAssociationsAssociationInput is an input type that accepts RouteTableAssociationsAssociationArgs and RouteTableAssociationsAssociationOutput values.
// You can construct a concrete instance of `RouteTableAssociationsAssociationInput` via:
//
//	RouteTableAssociationsAssociationArgs{...}
type RouteTableAssociationsAssociationInput interface {
	pulumi.Input

	ToRouteTableAssociationsAssociationOutput() RouteTableAssociationsAssociationOutput
	ToRouteTableAssociationsAssociationOutputWithContext(context.Context) RouteTableAssociationsAssociationOutput
}

type RouteTableAssociationsAssociationArgs struct {
	// The status of the route table.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The ID of the routing table associated with the transit router instance.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
}

func (RouteTableAssociationsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableAssociationsAssociation)(nil)).Elem()
}

func (i RouteTableAssociationsAssociationArgs) ToRouteTableAssociationsAssociationOutput() RouteTableAssociationsAssociationOutput {
	return i.ToRouteTableAssociationsAssociationOutputWithContext(context.Background())
}

func (i RouteTableAssociationsAssociationArgs) ToRouteTableAssociationsAssociationOutputWithContext(ctx context.Context) RouteTableAssociationsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociationsAssociationOutput)
}

// RouteTableAssociationsAssociationArrayInput is an input type that accepts RouteTableAssociationsAssociationArray and RouteTableAssociationsAssociationArrayOutput values.
// You can construct a concrete instance of `RouteTableAssociationsAssociationArrayInput` via:
//
//	RouteTableAssociationsAssociationArray{ RouteTableAssociationsAssociationArgs{...} }
type RouteTableAssociationsAssociationArrayInput interface {
	pulumi.Input

	ToRouteTableAssociationsAssociationArrayOutput() RouteTableAssociationsAssociationArrayOutput
	ToRouteTableAssociationsAssociationArrayOutputWithContext(context.Context) RouteTableAssociationsAssociationArrayOutput
}

type RouteTableAssociationsAssociationArray []RouteTableAssociationsAssociationInput

func (RouteTableAssociationsAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableAssociationsAssociation)(nil)).Elem()
}

func (i RouteTableAssociationsAssociationArray) ToRouteTableAssociationsAssociationArrayOutput() RouteTableAssociationsAssociationArrayOutput {
	return i.ToRouteTableAssociationsAssociationArrayOutputWithContext(context.Background())
}

func (i RouteTableAssociationsAssociationArray) ToRouteTableAssociationsAssociationArrayOutputWithContext(ctx context.Context) RouteTableAssociationsAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableAssociationsAssociationArrayOutput)
}

type RouteTableAssociationsAssociationOutput struct{ *pulumi.OutputState }

func (RouteTableAssociationsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableAssociationsAssociation)(nil)).Elem()
}

func (o RouteTableAssociationsAssociationOutput) ToRouteTableAssociationsAssociationOutput() RouteTableAssociationsAssociationOutput {
	return o
}

func (o RouteTableAssociationsAssociationOutput) ToRouteTableAssociationsAssociationOutputWithContext(ctx context.Context) RouteTableAssociationsAssociationOutput {
	return o
}

// The status of the route table.
func (o RouteTableAssociationsAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableAssociationsAssociation) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the network instance connection.
func (o RouteTableAssociationsAssociationOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableAssociationsAssociation) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The ID of the routing table associated with the transit router instance.
func (o RouteTableAssociationsAssociationOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableAssociationsAssociation) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

type RouteTableAssociationsAssociationArrayOutput struct{ *pulumi.OutputState }

func (RouteTableAssociationsAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableAssociationsAssociation)(nil)).Elem()
}

func (o RouteTableAssociationsAssociationArrayOutput) ToRouteTableAssociationsAssociationArrayOutput() RouteTableAssociationsAssociationArrayOutput {
	return o
}

func (o RouteTableAssociationsAssociationArrayOutput) ToRouteTableAssociationsAssociationArrayOutputWithContext(ctx context.Context) RouteTableAssociationsAssociationArrayOutput {
	return o
}

func (o RouteTableAssociationsAssociationArrayOutput) Index(i pulumi.IntInput) RouteTableAssociationsAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableAssociationsAssociation {
		return vs[0].([]RouteTableAssociationsAssociation)[vs[1].(int)]
	}).(RouteTableAssociationsAssociationOutput)
}

type RouteTablePropagationsPropagation struct {
	// The creation time of the route table propagation.
	CreationTime string `pulumi:"creationTime"`
	// The status of the route table.
	Status string `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The ID of the routing table associated with the transit router instance.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
}

// RouteTablePropagationsPropagationInput is an input type that accepts RouteTablePropagationsPropagationArgs and RouteTablePropagationsPropagationOutput values.
// You can construct a concrete instance of `RouteTablePropagationsPropagationInput` via:
//
//	RouteTablePropagationsPropagationArgs{...}
type RouteTablePropagationsPropagationInput interface {
	pulumi.Input

	ToRouteTablePropagationsPropagationOutput() RouteTablePropagationsPropagationOutput
	ToRouteTablePropagationsPropagationOutputWithContext(context.Context) RouteTablePropagationsPropagationOutput
}

type RouteTablePropagationsPropagationArgs struct {
	// The creation time of the route table propagation.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The status of the route table.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of the network instance connection.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The ID of the routing table associated with the transit router instance.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
}

func (RouteTablePropagationsPropagationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropagationsPropagation)(nil)).Elem()
}

func (i RouteTablePropagationsPropagationArgs) ToRouteTablePropagationsPropagationOutput() RouteTablePropagationsPropagationOutput {
	return i.ToRouteTablePropagationsPropagationOutputWithContext(context.Background())
}

func (i RouteTablePropagationsPropagationArgs) ToRouteTablePropagationsPropagationOutputWithContext(ctx context.Context) RouteTablePropagationsPropagationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropagationsPropagationOutput)
}

// RouteTablePropagationsPropagationArrayInput is an input type that accepts RouteTablePropagationsPropagationArray and RouteTablePropagationsPropagationArrayOutput values.
// You can construct a concrete instance of `RouteTablePropagationsPropagationArrayInput` via:
//
//	RouteTablePropagationsPropagationArray{ RouteTablePropagationsPropagationArgs{...} }
type RouteTablePropagationsPropagationArrayInput interface {
	pulumi.Input

	ToRouteTablePropagationsPropagationArrayOutput() RouteTablePropagationsPropagationArrayOutput
	ToRouteTablePropagationsPropagationArrayOutputWithContext(context.Context) RouteTablePropagationsPropagationArrayOutput
}

type RouteTablePropagationsPropagationArray []RouteTablePropagationsPropagationInput

func (RouteTablePropagationsPropagationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablePropagationsPropagation)(nil)).Elem()
}

func (i RouteTablePropagationsPropagationArray) ToRouteTablePropagationsPropagationArrayOutput() RouteTablePropagationsPropagationArrayOutput {
	return i.ToRouteTablePropagationsPropagationArrayOutputWithContext(context.Background())
}

func (i RouteTablePropagationsPropagationArray) ToRouteTablePropagationsPropagationArrayOutputWithContext(ctx context.Context) RouteTablePropagationsPropagationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablePropagationsPropagationArrayOutput)
}

type RouteTablePropagationsPropagationOutput struct{ *pulumi.OutputState }

func (RouteTablePropagationsPropagationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablePropagationsPropagation)(nil)).Elem()
}

func (o RouteTablePropagationsPropagationOutput) ToRouteTablePropagationsPropagationOutput() RouteTablePropagationsPropagationOutput {
	return o
}

func (o RouteTablePropagationsPropagationOutput) ToRouteTablePropagationsPropagationOutputWithContext(ctx context.Context) RouteTablePropagationsPropagationOutput {
	return o
}

// The creation time of the route table propagation.
func (o RouteTablePropagationsPropagationOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablePropagationsPropagation) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The status of the route table.
func (o RouteTablePropagationsPropagationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablePropagationsPropagation) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the network instance connection.
func (o RouteTablePropagationsPropagationOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablePropagationsPropagation) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The ID of the routing table associated with the transit router instance.
func (o RouteTablePropagationsPropagationOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablePropagationsPropagation) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

type RouteTablePropagationsPropagationArrayOutput struct{ *pulumi.OutputState }

func (RouteTablePropagationsPropagationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablePropagationsPropagation)(nil)).Elem()
}

func (o RouteTablePropagationsPropagationArrayOutput) ToRouteTablePropagationsPropagationArrayOutput() RouteTablePropagationsPropagationArrayOutput {
	return o
}

func (o RouteTablePropagationsPropagationArrayOutput) ToRouteTablePropagationsPropagationArrayOutputWithContext(ctx context.Context) RouteTablePropagationsPropagationArrayOutput {
	return o
}

func (o RouteTablePropagationsPropagationArrayOutput) Index(i pulumi.IntInput) RouteTablePropagationsPropagationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablePropagationsPropagation {
		return vs[0].([]RouteTablePropagationsPropagation)[vs[1].(int)]
	}).(RouteTablePropagationsPropagationOutput)
}

type RouteTablesRouteTable struct {
	// The creation time of the route table.
	CreationTime string `pulumi:"creationTime"`
	// The description.
	Description string `pulumi:"description"`
	// The status of the route table.
	Status string `pulumi:"status"`
	// The id of the route table.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
	// The name of the route table.
	TransitRouterRouteTableName string `pulumi:"transitRouterRouteTableName"`
	// The type of the route table. The value can be System or Custom.
	TransitRouterRouteTableType string `pulumi:"transitRouterRouteTableType"`
	// The update time of the route table.
	UpdateTime string `pulumi:"updateTime"`
}

// RouteTablesRouteTableInput is an input type that accepts RouteTablesRouteTableArgs and RouteTablesRouteTableOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableInput` via:
//
//	RouteTablesRouteTableArgs{...}
type RouteTablesRouteTableInput interface {
	pulumi.Input

	ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput
	ToRouteTablesRouteTableOutputWithContext(context.Context) RouteTablesRouteTableOutput
}

type RouteTablesRouteTableArgs struct {
	// The creation time of the route table.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description.
	Description pulumi.StringInput `pulumi:"description"`
	// The status of the route table.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the route table.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
	// The name of the route table.
	TransitRouterRouteTableName pulumi.StringInput `pulumi:"transitRouterRouteTableName"`
	// The type of the route table. The value can be System or Custom.
	TransitRouterRouteTableType pulumi.StringInput `pulumi:"transitRouterRouteTableType"`
	// The update time of the route table.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (RouteTablesRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTable)(nil)).Elem()
}

func (i RouteTablesRouteTableArgs) ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput {
	return i.ToRouteTablesRouteTableOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableArgs) ToRouteTablesRouteTableOutputWithContext(ctx context.Context) RouteTablesRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableOutput)
}

// RouteTablesRouteTableArrayInput is an input type that accepts RouteTablesRouteTableArray and RouteTablesRouteTableArrayOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableArrayInput` via:
//
//	RouteTablesRouteTableArray{ RouteTablesRouteTableArgs{...} }
type RouteTablesRouteTableArrayInput interface {
	pulumi.Input

	ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput
	ToRouteTablesRouteTableArrayOutputWithContext(context.Context) RouteTablesRouteTableArrayOutput
}

type RouteTablesRouteTableArray []RouteTablesRouteTableInput

func (RouteTablesRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTable)(nil)).Elem()
}

func (i RouteTablesRouteTableArray) ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput {
	return i.ToRouteTablesRouteTableArrayOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableArray) ToRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableArrayOutput)
}

type RouteTablesRouteTableOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTable)(nil)).Elem()
}

func (o RouteTablesRouteTableOutput) ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput {
	return o
}

func (o RouteTablesRouteTableOutput) ToRouteTablesRouteTableOutputWithContext(ctx context.Context) RouteTablesRouteTableOutput {
	return o
}

// The creation time of the route table.
func (o RouteTablesRouteTableOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description.
func (o RouteTablesRouteTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.Description }).(pulumi.StringOutput)
}

// The status of the route table.
func (o RouteTablesRouteTableOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the route table.
func (o RouteTablesRouteTableOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

// The name of the route table.
func (o RouteTablesRouteTableOutput) TransitRouterRouteTableName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.TransitRouterRouteTableName }).(pulumi.StringOutput)
}

// The type of the route table. The value can be System or Custom.
func (o RouteTablesRouteTableOutput) TransitRouterRouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.TransitRouterRouteTableType }).(pulumi.StringOutput)
}

// The update time of the route table.
func (o RouteTablesRouteTableOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type RouteTablesRouteTableArrayOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTable)(nil)).Elem()
}

func (o RouteTablesRouteTableArrayOutput) ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput {
	return o
}

func (o RouteTablesRouteTableArrayOutput) ToRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableArrayOutput {
	return o
}

func (o RouteTablesRouteTableArrayOutput) Index(i pulumi.IntInput) RouteTablesRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablesRouteTable {
		return vs[0].([]RouteTablesRouteTable)[vs[1].(int)]
	}).(RouteTablesRouteTableOutput)
}

type TransitRouterTransitRouterAttachment struct {
	// The create time.
	CreationTime *string `pulumi:"creationTime"`
	// The id of resource.
	ResourceId *string `pulumi:"resourceId"`
	// The type of resource.
	ResourceType *string `pulumi:"resourceType"`
	// The status of the transit router.
	Status *string `pulumi:"status"`
	// The id of transit router attachment.
	TransitRouterAttachmentId *string `pulumi:"transitRouterAttachmentId"`
	// The name of transit router attachment.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The id of transit router route table.
	TransitRouterRouteTableId *string `pulumi:"transitRouterRouteTableId"`
	// The update time.
	UpdateTime *string `pulumi:"updateTime"`
}

// TransitRouterTransitRouterAttachmentInput is an input type that accepts TransitRouterTransitRouterAttachmentArgs and TransitRouterTransitRouterAttachmentOutput values.
// You can construct a concrete instance of `TransitRouterTransitRouterAttachmentInput` via:
//
//	TransitRouterTransitRouterAttachmentArgs{...}
type TransitRouterTransitRouterAttachmentInput interface {
	pulumi.Input

	ToTransitRouterTransitRouterAttachmentOutput() TransitRouterTransitRouterAttachmentOutput
	ToTransitRouterTransitRouterAttachmentOutputWithContext(context.Context) TransitRouterTransitRouterAttachmentOutput
}

type TransitRouterTransitRouterAttachmentArgs struct {
	// The create time.
	CreationTime pulumi.StringPtrInput `pulumi:"creationTime"`
	// The id of resource.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The type of resource.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// The status of the transit router.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The id of transit router attachment.
	TransitRouterAttachmentId pulumi.StringPtrInput `pulumi:"transitRouterAttachmentId"`
	// The name of transit router attachment.
	TransitRouterAttachmentName pulumi.StringPtrInput `pulumi:"transitRouterAttachmentName"`
	// The id of transit router route table.
	TransitRouterRouteTableId pulumi.StringPtrInput `pulumi:"transitRouterRouteTableId"`
	// The update time.
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (TransitRouterTransitRouterAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (i TransitRouterTransitRouterAttachmentArgs) ToTransitRouterTransitRouterAttachmentOutput() TransitRouterTransitRouterAttachmentOutput {
	return i.ToTransitRouterTransitRouterAttachmentOutputWithContext(context.Background())
}

func (i TransitRouterTransitRouterAttachmentArgs) ToTransitRouterTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRouterTransitRouterAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterTransitRouterAttachmentOutput)
}

// TransitRouterTransitRouterAttachmentArrayInput is an input type that accepts TransitRouterTransitRouterAttachmentArray and TransitRouterTransitRouterAttachmentArrayOutput values.
// You can construct a concrete instance of `TransitRouterTransitRouterAttachmentArrayInput` via:
//
//	TransitRouterTransitRouterAttachmentArray{ TransitRouterTransitRouterAttachmentArgs{...} }
type TransitRouterTransitRouterAttachmentArrayInput interface {
	pulumi.Input

	ToTransitRouterTransitRouterAttachmentArrayOutput() TransitRouterTransitRouterAttachmentArrayOutput
	ToTransitRouterTransitRouterAttachmentArrayOutputWithContext(context.Context) TransitRouterTransitRouterAttachmentArrayOutput
}

type TransitRouterTransitRouterAttachmentArray []TransitRouterTransitRouterAttachmentInput

func (TransitRouterTransitRouterAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (i TransitRouterTransitRouterAttachmentArray) ToTransitRouterTransitRouterAttachmentArrayOutput() TransitRouterTransitRouterAttachmentArrayOutput {
	return i.ToTransitRouterTransitRouterAttachmentArrayOutputWithContext(context.Background())
}

func (i TransitRouterTransitRouterAttachmentArray) ToTransitRouterTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterTransitRouterAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterTransitRouterAttachmentArrayOutput)
}

type TransitRouterTransitRouterAttachmentOutput struct{ *pulumi.OutputState }

func (TransitRouterTransitRouterAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (o TransitRouterTransitRouterAttachmentOutput) ToTransitRouterTransitRouterAttachmentOutput() TransitRouterTransitRouterAttachmentOutput {
	return o
}

func (o TransitRouterTransitRouterAttachmentOutput) ToTransitRouterTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRouterTransitRouterAttachmentOutput {
	return o
}

// The create time.
func (o TransitRouterTransitRouterAttachmentOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The id of resource.
func (o TransitRouterTransitRouterAttachmentOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of resource.
func (o TransitRouterTransitRouterAttachmentOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The status of the transit router.
func (o TransitRouterTransitRouterAttachmentOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The id of transit router attachment.
func (o TransitRouterTransitRouterAttachmentOutput) TransitRouterAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.TransitRouterAttachmentId }).(pulumi.StringPtrOutput)
}

// The name of transit router attachment.
func (o TransitRouterTransitRouterAttachmentOutput) TransitRouterAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.TransitRouterAttachmentName }).(pulumi.StringPtrOutput)
}

// The id of transit router route table.
func (o TransitRouterTransitRouterAttachmentOutput) TransitRouterRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.TransitRouterRouteTableId }).(pulumi.StringPtrOutput)
}

// The update time.
func (o TransitRouterTransitRouterAttachmentOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTransitRouterAttachment) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type TransitRouterTransitRouterAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterTransitRouterAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (o TransitRouterTransitRouterAttachmentArrayOutput) ToTransitRouterTransitRouterAttachmentArrayOutput() TransitRouterTransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRouterTransitRouterAttachmentArrayOutput) ToTransitRouterTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterTransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRouterTransitRouterAttachmentArrayOutput) Index(i pulumi.IntInput) TransitRouterTransitRouterAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterTransitRouterAttachment {
		return vs[0].([]TransitRouterTransitRouterAttachment)[vs[1].(int)]
	}).(TransitRouterTransitRouterAttachmentOutput)
}

type TransitRoutersTransitRouter struct {
	// The ID of account.
	AccountId string `pulumi:"accountId"`
	// The business status of the transit router.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The description info.
	Description string `pulumi:"description"`
	// The ID of the transit router.
	Id string `pulumi:"id"`
	// The overdue time.
	OverdueTime string `pulumi:"overdueTime"`
	// The status of the transit router.
	Status string `pulumi:"status"`
	// The attachments of transit router.
	TransitRouterAttachments []TransitRoutersTransitRouterTransitRouterAttachment `pulumi:"transitRouterAttachments"`
	// The ID of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The name info.
	TransitRouterName string `pulumi:"transitRouterName"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
}

// TransitRoutersTransitRouterInput is an input type that accepts TransitRoutersTransitRouterArgs and TransitRoutersTransitRouterOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterInput` via:
//
//	TransitRoutersTransitRouterArgs{...}
type TransitRoutersTransitRouterInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterOutput() TransitRoutersTransitRouterOutput
	ToTransitRoutersTransitRouterOutputWithContext(context.Context) TransitRoutersTransitRouterOutput
}

type TransitRoutersTransitRouterArgs struct {
	// The ID of account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The business status of the transit router.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description info.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the transit router.
	Id pulumi.StringInput `pulumi:"id"`
	// The overdue time.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The status of the transit router.
	Status pulumi.StringInput `pulumi:"status"`
	// The attachments of transit router.
	TransitRouterAttachments TransitRoutersTransitRouterTransitRouterAttachmentArrayInput `pulumi:"transitRouterAttachments"`
	// The ID of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The name info.
	TransitRouterName pulumi.StringInput `pulumi:"transitRouterName"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (TransitRoutersTransitRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouter)(nil)).Elem()
}

func (i TransitRoutersTransitRouterArgs) ToTransitRoutersTransitRouterOutput() TransitRoutersTransitRouterOutput {
	return i.ToTransitRoutersTransitRouterOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterArgs) ToTransitRoutersTransitRouterOutputWithContext(ctx context.Context) TransitRoutersTransitRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterOutput)
}

// TransitRoutersTransitRouterArrayInput is an input type that accepts TransitRoutersTransitRouterArray and TransitRoutersTransitRouterArrayOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterArrayInput` via:
//
//	TransitRoutersTransitRouterArray{ TransitRoutersTransitRouterArgs{...} }
type TransitRoutersTransitRouterArrayInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterArrayOutput() TransitRoutersTransitRouterArrayOutput
	ToTransitRoutersTransitRouterArrayOutputWithContext(context.Context) TransitRoutersTransitRouterArrayOutput
}

type TransitRoutersTransitRouterArray []TransitRoutersTransitRouterInput

func (TransitRoutersTransitRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouter)(nil)).Elem()
}

func (i TransitRoutersTransitRouterArray) ToTransitRoutersTransitRouterArrayOutput() TransitRoutersTransitRouterArrayOutput {
	return i.ToTransitRoutersTransitRouterArrayOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterArray) ToTransitRoutersTransitRouterArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterArrayOutput)
}

type TransitRoutersTransitRouterOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouter)(nil)).Elem()
}

func (o TransitRoutersTransitRouterOutput) ToTransitRoutersTransitRouterOutput() TransitRoutersTransitRouterOutput {
	return o
}

func (o TransitRoutersTransitRouterOutput) ToTransitRoutersTransitRouterOutputWithContext(ctx context.Context) TransitRoutersTransitRouterOutput {
	return o
}

// The ID of account.
func (o TransitRoutersTransitRouterOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.AccountId }).(pulumi.StringOutput)
}

// The business status of the transit router.
func (o TransitRoutersTransitRouterOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time.
func (o TransitRoutersTransitRouterOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description info.
func (o TransitRoutersTransitRouterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the transit router.
func (o TransitRoutersTransitRouterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.Id }).(pulumi.StringOutput)
}

// The overdue time.
func (o TransitRoutersTransitRouterOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The status of the transit router.
func (o TransitRoutersTransitRouterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.Status }).(pulumi.StringOutput)
}

// The attachments of transit router.
func (o TransitRoutersTransitRouterOutput) TransitRouterAttachments() TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) []TransitRoutersTransitRouterTransitRouterAttachment {
		return v.TransitRouterAttachments
	}).(TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput)
}

// The ID of the transit router.
func (o TransitRoutersTransitRouterOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The name info.
func (o TransitRoutersTransitRouterOutput) TransitRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.TransitRouterName }).(pulumi.StringOutput)
}

// The update time.
func (o TransitRoutersTransitRouterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouter) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type TransitRoutersTransitRouterArrayOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouter)(nil)).Elem()
}

func (o TransitRoutersTransitRouterArrayOutput) ToTransitRoutersTransitRouterArrayOutput() TransitRoutersTransitRouterArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterArrayOutput) ToTransitRoutersTransitRouterArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterArrayOutput) Index(i pulumi.IntInput) TransitRoutersTransitRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRoutersTransitRouter {
		return vs[0].([]TransitRoutersTransitRouter)[vs[1].(int)]
	}).(TransitRoutersTransitRouterOutput)
}

type TransitRoutersTransitRouterTransitRouterAttachment struct {
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The id of resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of resource.
	ResourceType string `pulumi:"resourceType"`
	// The status of the transit router.
	Status string `pulumi:"status"`
	// The id of transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The name of transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The id of transit router route table.
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
}

// TransitRoutersTransitRouterTransitRouterAttachmentInput is an input type that accepts TransitRoutersTransitRouterTransitRouterAttachmentArgs and TransitRoutersTransitRouterTransitRouterAttachmentOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterTransitRouterAttachmentInput` via:
//
//	TransitRoutersTransitRouterTransitRouterAttachmentArgs{...}
type TransitRoutersTransitRouterTransitRouterAttachmentInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterTransitRouterAttachmentOutput() TransitRoutersTransitRouterTransitRouterAttachmentOutput
	ToTransitRoutersTransitRouterTransitRouterAttachmentOutputWithContext(context.Context) TransitRoutersTransitRouterTransitRouterAttachmentOutput
}

type TransitRoutersTransitRouterTransitRouterAttachmentArgs struct {
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The id of resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of the transit router.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The id of transit router route table.
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (TransitRoutersTransitRouterTransitRouterAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (i TransitRoutersTransitRouterTransitRouterAttachmentArgs) ToTransitRoutersTransitRouterTransitRouterAttachmentOutput() TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return i.ToTransitRoutersTransitRouterTransitRouterAttachmentOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterTransitRouterAttachmentArgs) ToTransitRoutersTransitRouterTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterTransitRouterAttachmentOutput)
}

// TransitRoutersTransitRouterTransitRouterAttachmentArrayInput is an input type that accepts TransitRoutersTransitRouterTransitRouterAttachmentArray and TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput values.
// You can construct a concrete instance of `TransitRoutersTransitRouterTransitRouterAttachmentArrayInput` via:
//
//	TransitRoutersTransitRouterTransitRouterAttachmentArray{ TransitRoutersTransitRouterTransitRouterAttachmentArgs{...} }
type TransitRoutersTransitRouterTransitRouterAttachmentArrayInput interface {
	pulumi.Input

	ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutput() TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput
	ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutputWithContext(context.Context) TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput
}

type TransitRoutersTransitRouterTransitRouterAttachmentArray []TransitRoutersTransitRouterTransitRouterAttachmentInput

func (TransitRoutersTransitRouterTransitRouterAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (i TransitRoutersTransitRouterTransitRouterAttachmentArray) ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutput() TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return i.ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutputWithContext(context.Background())
}

func (i TransitRoutersTransitRouterTransitRouterAttachmentArray) ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput)
}

type TransitRoutersTransitRouterTransitRouterAttachmentOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterTransitRouterAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRoutersTransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) ToTransitRoutersTransitRouterTransitRouterAttachmentOutput() TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return o
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) ToTransitRoutersTransitRouterTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return o
}

// The create time.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The id of resource.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of resource.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of the transit router.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The id of transit router attachment.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of transit router attachment.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string {
		return v.TransitRouterAttachmentName
	}).(pulumi.StringOutput)
}

// The id of transit router route table.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

// The update time.
func (o TransitRoutersTransitRouterTransitRouterAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v TransitRoutersTransitRouterTransitRouterAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRoutersTransitRouterTransitRouterAttachment)(nil)).Elem()
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput) ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutput() TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput) ToTransitRoutersTransitRouterTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput) Index(i pulumi.IntInput) TransitRoutersTransitRouterTransitRouterAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRoutersTransitRouterTransitRouterAttachment {
		return vs[0].([]TransitRoutersTransitRouterTransitRouterAttachment)[vs[1].(int)]
	}).(TransitRoutersTransitRouterTransitRouterAttachmentOutput)
}

type VpcAttachmentAttachPoint struct {
	// The id of subnet.
	SubnetId string `pulumi:"subnetId"`
	// The id of zone.
	ZoneId string `pulumi:"zoneId"`
}

// VpcAttachmentAttachPointInput is an input type that accepts VpcAttachmentAttachPointArgs and VpcAttachmentAttachPointOutput values.
// You can construct a concrete instance of `VpcAttachmentAttachPointInput` via:
//
//	VpcAttachmentAttachPointArgs{...}
type VpcAttachmentAttachPointInput interface {
	pulumi.Input

	ToVpcAttachmentAttachPointOutput() VpcAttachmentAttachPointOutput
	ToVpcAttachmentAttachPointOutputWithContext(context.Context) VpcAttachmentAttachPointOutput
}

type VpcAttachmentAttachPointArgs struct {
	// The id of subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The id of zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (VpcAttachmentAttachPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentAttachPoint)(nil)).Elem()
}

func (i VpcAttachmentAttachPointArgs) ToVpcAttachmentAttachPointOutput() VpcAttachmentAttachPointOutput {
	return i.ToVpcAttachmentAttachPointOutputWithContext(context.Background())
}

func (i VpcAttachmentAttachPointArgs) ToVpcAttachmentAttachPointOutputWithContext(ctx context.Context) VpcAttachmentAttachPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentAttachPointOutput)
}

// VpcAttachmentAttachPointArrayInput is an input type that accepts VpcAttachmentAttachPointArray and VpcAttachmentAttachPointArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentAttachPointArrayInput` via:
//
//	VpcAttachmentAttachPointArray{ VpcAttachmentAttachPointArgs{...} }
type VpcAttachmentAttachPointArrayInput interface {
	pulumi.Input

	ToVpcAttachmentAttachPointArrayOutput() VpcAttachmentAttachPointArrayOutput
	ToVpcAttachmentAttachPointArrayOutputWithContext(context.Context) VpcAttachmentAttachPointArrayOutput
}

type VpcAttachmentAttachPointArray []VpcAttachmentAttachPointInput

func (VpcAttachmentAttachPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentAttachPoint)(nil)).Elem()
}

func (i VpcAttachmentAttachPointArray) ToVpcAttachmentAttachPointArrayOutput() VpcAttachmentAttachPointArrayOutput {
	return i.ToVpcAttachmentAttachPointArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentAttachPointArray) ToVpcAttachmentAttachPointArrayOutputWithContext(ctx context.Context) VpcAttachmentAttachPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentAttachPointArrayOutput)
}

type VpcAttachmentAttachPointOutput struct{ *pulumi.OutputState }

func (VpcAttachmentAttachPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentAttachPoint)(nil)).Elem()
}

func (o VpcAttachmentAttachPointOutput) ToVpcAttachmentAttachPointOutput() VpcAttachmentAttachPointOutput {
	return o
}

func (o VpcAttachmentAttachPointOutput) ToVpcAttachmentAttachPointOutputWithContext(ctx context.Context) VpcAttachmentAttachPointOutput {
	return o
}

// The id of subnet.
func (o VpcAttachmentAttachPointOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentAttachPoint) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The id of zone.
func (o VpcAttachmentAttachPointOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentAttachPoint) string { return v.ZoneId }).(pulumi.StringOutput)
}

type VpcAttachmentAttachPointArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentAttachPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentAttachPoint)(nil)).Elem()
}

func (o VpcAttachmentAttachPointArrayOutput) ToVpcAttachmentAttachPointArrayOutput() VpcAttachmentAttachPointArrayOutput {
	return o
}

func (o VpcAttachmentAttachPointArrayOutput) ToVpcAttachmentAttachPointArrayOutputWithContext(ctx context.Context) VpcAttachmentAttachPointArrayOutput {
	return o
}

func (o VpcAttachmentAttachPointArrayOutput) Index(i pulumi.IntInput) VpcAttachmentAttachPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentAttachPoint {
		return vs[0].([]VpcAttachmentAttachPoint)[vs[1].(int)]
	}).(VpcAttachmentAttachPointOutput)
}

type VpcAttachmentsAttachment struct {
	// The collection of attach points.
	AttachPoints []VpcAttachmentsAttachmentAttachPoint `pulumi:"attachPoints"`
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The description info.
	Description string `pulumi:"description"`
	// The status of the transit router.
	Status string `pulumi:"status"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The id of transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
	// The id of vpc.
	VpcId string `pulumi:"vpcId"`
}

// VpcAttachmentsAttachmentInput is an input type that accepts VpcAttachmentsAttachmentArgs and VpcAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentInput` via:
//
//	VpcAttachmentsAttachmentArgs{...}
type VpcAttachmentsAttachmentInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentOutput() VpcAttachmentsAttachmentOutput
	ToVpcAttachmentsAttachmentOutputWithContext(context.Context) VpcAttachmentsAttachmentOutput
}

type VpcAttachmentsAttachmentArgs struct {
	// The collection of attach points.
	AttachPoints VpcAttachmentsAttachmentAttachPointArrayInput `pulumi:"attachPoints"`
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description info.
	Description pulumi.StringInput `pulumi:"description"`
	// The status of the transit router.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The id of transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The id of vpc.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (VpcAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachment)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentArgs) ToVpcAttachmentsAttachmentOutput() VpcAttachmentsAttachmentOutput {
	return i.ToVpcAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentArgs) ToVpcAttachmentsAttachmentOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentOutput)
}

// VpcAttachmentsAttachmentArrayInput is an input type that accepts VpcAttachmentsAttachmentArray and VpcAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentArrayInput` via:
//
//	VpcAttachmentsAttachmentArray{ VpcAttachmentsAttachmentArgs{...} }
type VpcAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentArrayOutput() VpcAttachmentsAttachmentArrayOutput
	ToVpcAttachmentsAttachmentArrayOutputWithContext(context.Context) VpcAttachmentsAttachmentArrayOutput
}

type VpcAttachmentsAttachmentArray []VpcAttachmentsAttachmentInput

func (VpcAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachment)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentArray) ToVpcAttachmentsAttachmentArrayOutput() VpcAttachmentsAttachmentArrayOutput {
	return i.ToVpcAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentArray) ToVpcAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentArrayOutput)
}

type VpcAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachment)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentOutput) ToVpcAttachmentsAttachmentOutput() VpcAttachmentsAttachmentOutput {
	return o
}

func (o VpcAttachmentsAttachmentOutput) ToVpcAttachmentsAttachmentOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentOutput {
	return o
}

// The collection of attach points.
func (o VpcAttachmentsAttachmentOutput) AttachPoints() VpcAttachmentsAttachmentAttachPointArrayOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) []VpcAttachmentsAttachmentAttachPoint { return v.AttachPoints }).(VpcAttachmentsAttachmentAttachPointArrayOutput)
}

// The create time.
func (o VpcAttachmentsAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description info.
func (o VpcAttachmentsAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.Description }).(pulumi.StringOutput)
}

// The status of the transit router.
func (o VpcAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the transit router attachment.
func (o VpcAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of the transit router attachment.
func (o VpcAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// The id of transit router.
func (o VpcAttachmentsAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The update time.
func (o VpcAttachmentsAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of vpc.
func (o VpcAttachmentsAttachmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachment) string { return v.VpcId }).(pulumi.StringOutput)
}

type VpcAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachment)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentArrayOutput) ToVpcAttachmentsAttachmentArrayOutput() VpcAttachmentsAttachmentArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentArrayOutput) ToVpcAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) VpcAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentsAttachment {
		return vs[0].([]VpcAttachmentsAttachment)[vs[1].(int)]
	}).(VpcAttachmentsAttachmentOutput)
}

type VpcAttachmentsAttachmentAttachPoint struct {
	// The ID of network interface.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The ID of subnet.
	SubnetId string `pulumi:"subnetId"`
	// The ID of zone.
	ZoneId string `pulumi:"zoneId"`
}

// VpcAttachmentsAttachmentAttachPointInput is an input type that accepts VpcAttachmentsAttachmentAttachPointArgs and VpcAttachmentsAttachmentAttachPointOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentAttachPointInput` via:
//
//	VpcAttachmentsAttachmentAttachPointArgs{...}
type VpcAttachmentsAttachmentAttachPointInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentAttachPointOutput() VpcAttachmentsAttachmentAttachPointOutput
	ToVpcAttachmentsAttachmentAttachPointOutputWithContext(context.Context) VpcAttachmentsAttachmentAttachPointOutput
}

type VpcAttachmentsAttachmentAttachPointArgs struct {
	// The ID of network interface.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The ID of subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The ID of zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (VpcAttachmentsAttachmentAttachPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachmentAttachPoint)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentAttachPointArgs) ToVpcAttachmentsAttachmentAttachPointOutput() VpcAttachmentsAttachmentAttachPointOutput {
	return i.ToVpcAttachmentsAttachmentAttachPointOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentAttachPointArgs) ToVpcAttachmentsAttachmentAttachPointOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentAttachPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentAttachPointOutput)
}

// VpcAttachmentsAttachmentAttachPointArrayInput is an input type that accepts VpcAttachmentsAttachmentAttachPointArray and VpcAttachmentsAttachmentAttachPointArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentsAttachmentAttachPointArrayInput` via:
//
//	VpcAttachmentsAttachmentAttachPointArray{ VpcAttachmentsAttachmentAttachPointArgs{...} }
type VpcAttachmentsAttachmentAttachPointArrayInput interface {
	pulumi.Input

	ToVpcAttachmentsAttachmentAttachPointArrayOutput() VpcAttachmentsAttachmentAttachPointArrayOutput
	ToVpcAttachmentsAttachmentAttachPointArrayOutputWithContext(context.Context) VpcAttachmentsAttachmentAttachPointArrayOutput
}

type VpcAttachmentsAttachmentAttachPointArray []VpcAttachmentsAttachmentAttachPointInput

func (VpcAttachmentsAttachmentAttachPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachmentAttachPoint)(nil)).Elem()
}

func (i VpcAttachmentsAttachmentAttachPointArray) ToVpcAttachmentsAttachmentAttachPointArrayOutput() VpcAttachmentsAttachmentAttachPointArrayOutput {
	return i.ToVpcAttachmentsAttachmentAttachPointArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentsAttachmentAttachPointArray) ToVpcAttachmentsAttachmentAttachPointArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentAttachPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentsAttachmentAttachPointArrayOutput)
}

type VpcAttachmentsAttachmentAttachPointOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentAttachPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentsAttachmentAttachPoint)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentAttachPointOutput) ToVpcAttachmentsAttachmentAttachPointOutput() VpcAttachmentsAttachmentAttachPointOutput {
	return o
}

func (o VpcAttachmentsAttachmentAttachPointOutput) ToVpcAttachmentsAttachmentAttachPointOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentAttachPointOutput {
	return o
}

// The ID of network interface.
func (o VpcAttachmentsAttachmentAttachPointOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachmentAttachPoint) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The ID of subnet.
func (o VpcAttachmentsAttachmentAttachPointOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachmentAttachPoint) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The ID of zone.
func (o VpcAttachmentsAttachmentAttachPointOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentsAttachmentAttachPoint) string { return v.ZoneId }).(pulumi.StringOutput)
}

type VpcAttachmentsAttachmentAttachPointArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentsAttachmentAttachPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentsAttachmentAttachPoint)(nil)).Elem()
}

func (o VpcAttachmentsAttachmentAttachPointArrayOutput) ToVpcAttachmentsAttachmentAttachPointArrayOutput() VpcAttachmentsAttachmentAttachPointArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentAttachPointArrayOutput) ToVpcAttachmentsAttachmentAttachPointArrayOutputWithContext(ctx context.Context) VpcAttachmentsAttachmentAttachPointArrayOutput {
	return o
}

func (o VpcAttachmentsAttachmentAttachPointArrayOutput) Index(i pulumi.IntInput) VpcAttachmentsAttachmentAttachPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentsAttachmentAttachPoint {
		return vs[0].([]VpcAttachmentsAttachmentAttachPoint)[vs[1].(int)]
	}).(VpcAttachmentsAttachmentAttachPointOutput)
}

type VpnAttachmentsAttachment struct {
	// The create time.
	CreationTime string `pulumi:"creationTime"`
	// The description info.
	Description string `pulumi:"description"`
	// The status of the transit router.
	Status string `pulumi:"status"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// The id of the transit router.
	TransitRouterId string `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime string `pulumi:"updateTime"`
	// The ID of the IPSec connection.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
	// The ID of the availability zone.
	ZoneId string `pulumi:"zoneId"`
}

// VpnAttachmentsAttachmentInput is an input type that accepts VpnAttachmentsAttachmentArgs and VpnAttachmentsAttachmentOutput values.
// You can construct a concrete instance of `VpnAttachmentsAttachmentInput` via:
//
//	VpnAttachmentsAttachmentArgs{...}
type VpnAttachmentsAttachmentInput interface {
	pulumi.Input

	ToVpnAttachmentsAttachmentOutput() VpnAttachmentsAttachmentOutput
	ToVpnAttachmentsAttachmentOutputWithContext(context.Context) VpnAttachmentsAttachmentOutput
}

type VpnAttachmentsAttachmentArgs struct {
	// The create time.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description info.
	Description pulumi.StringInput `pulumi:"description"`
	// The status of the transit router.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of the transit router attachment.
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// The name of the transit router attachment.
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// The id of the transit router.
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// The update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The ID of the IPSec connection.
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
	// The ID of the availability zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (VpnAttachmentsAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentsAttachment)(nil)).Elem()
}

func (i VpnAttachmentsAttachmentArgs) ToVpnAttachmentsAttachmentOutput() VpnAttachmentsAttachmentOutput {
	return i.ToVpnAttachmentsAttachmentOutputWithContext(context.Background())
}

func (i VpnAttachmentsAttachmentArgs) ToVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentsAttachmentOutput)
}

// VpnAttachmentsAttachmentArrayInput is an input type that accepts VpnAttachmentsAttachmentArray and VpnAttachmentsAttachmentArrayOutput values.
// You can construct a concrete instance of `VpnAttachmentsAttachmentArrayInput` via:
//
//	VpnAttachmentsAttachmentArray{ VpnAttachmentsAttachmentArgs{...} }
type VpnAttachmentsAttachmentArrayInput interface {
	pulumi.Input

	ToVpnAttachmentsAttachmentArrayOutput() VpnAttachmentsAttachmentArrayOutput
	ToVpnAttachmentsAttachmentArrayOutputWithContext(context.Context) VpnAttachmentsAttachmentArrayOutput
}

type VpnAttachmentsAttachmentArray []VpnAttachmentsAttachmentInput

func (VpnAttachmentsAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentsAttachment)(nil)).Elem()
}

func (i VpnAttachmentsAttachmentArray) ToVpnAttachmentsAttachmentArrayOutput() VpnAttachmentsAttachmentArrayOutput {
	return i.ToVpnAttachmentsAttachmentArrayOutputWithContext(context.Background())
}

func (i VpnAttachmentsAttachmentArray) ToVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnAttachmentsAttachmentArrayOutput)
}

type VpnAttachmentsAttachmentOutput struct{ *pulumi.OutputState }

func (VpnAttachmentsAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnAttachmentsAttachment)(nil)).Elem()
}

func (o VpnAttachmentsAttachmentOutput) ToVpnAttachmentsAttachmentOutput() VpnAttachmentsAttachmentOutput {
	return o
}

func (o VpnAttachmentsAttachmentOutput) ToVpnAttachmentsAttachmentOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentOutput {
	return o
}

// The create time.
func (o VpnAttachmentsAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description info.
func (o VpnAttachmentsAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.Description }).(pulumi.StringOutput)
}

// The status of the transit router.
func (o VpnAttachmentsAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// The id of the transit router attachment.
func (o VpnAttachmentsAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// The name of the transit router attachment.
func (o VpnAttachmentsAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// The id of the transit router.
func (o VpnAttachmentsAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// The update time.
func (o VpnAttachmentsAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The ID of the IPSec connection.
func (o VpnAttachmentsAttachmentOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

// The ID of the availability zone.
func (o VpnAttachmentsAttachmentOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnAttachmentsAttachment) string { return v.ZoneId }).(pulumi.StringOutput)
}

type VpnAttachmentsAttachmentArrayOutput struct{ *pulumi.OutputState }

func (VpnAttachmentsAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnAttachmentsAttachment)(nil)).Elem()
}

func (o VpnAttachmentsAttachmentArrayOutput) ToVpnAttachmentsAttachmentArrayOutput() VpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o VpnAttachmentsAttachmentArrayOutput) ToVpnAttachmentsAttachmentArrayOutputWithContext(ctx context.Context) VpnAttachmentsAttachmentArrayOutput {
	return o
}

func (o VpnAttachmentsAttachmentArrayOutput) Index(i pulumi.IntInput) VpnAttachmentsAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnAttachmentsAttachment {
		return vs[0].([]VpnAttachmentsAttachment)[vs[1].(int)]
	}).(VpnAttachmentsAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageAllocationInput)(nil)).Elem(), BandwidthPackageAllocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageAllocationArrayInput)(nil)).Elem(), BandwidthPackageAllocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageArrayInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageAllocationInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageAllocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageAllocationArrayInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageAllocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesEntryInput)(nil)).Elem(), RouteEntriesEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesEntryArrayInput)(nil)).Elem(), RouteEntriesEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociationsAssociationInput)(nil)).Elem(), RouteTableAssociationsAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableAssociationsAssociationArrayInput)(nil)).Elem(), RouteTableAssociationsAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablePropagationsPropagationInput)(nil)).Elem(), RouteTablePropagationsPropagationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablePropagationsPropagationArrayInput)(nil)).Elem(), RouteTablePropagationsPropagationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableInput)(nil)).Elem(), RouteTablesRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableArrayInput)(nil)).Elem(), RouteTablesRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterTransitRouterAttachmentInput)(nil)).Elem(), TransitRouterTransitRouterAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterTransitRouterAttachmentArrayInput)(nil)).Elem(), TransitRouterTransitRouterAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterInput)(nil)).Elem(), TransitRoutersTransitRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterArrayInput)(nil)).Elem(), TransitRoutersTransitRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterTransitRouterAttachmentInput)(nil)).Elem(), TransitRoutersTransitRouterTransitRouterAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRoutersTransitRouterTransitRouterAttachmentArrayInput)(nil)).Elem(), TransitRoutersTransitRouterTransitRouterAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentAttachPointInput)(nil)).Elem(), VpcAttachmentAttachPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentAttachPointArrayInput)(nil)).Elem(), VpcAttachmentAttachPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentInput)(nil)).Elem(), VpcAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentArrayInput)(nil)).Elem(), VpcAttachmentsAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentAttachPointInput)(nil)).Elem(), VpcAttachmentsAttachmentAttachPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentsAttachmentAttachPointArrayInput)(nil)).Elem(), VpcAttachmentsAttachmentAttachPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentsAttachmentInput)(nil)).Elem(), VpnAttachmentsAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpnAttachmentsAttachmentArrayInput)(nil)).Elem(), VpnAttachmentsAttachmentArray{})
	pulumi.RegisterOutputType(BandwidthPackageAllocationOutput{})
	pulumi.RegisterOutputType(BandwidthPackageAllocationArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageAllocationOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageAllocationArrayOutput{})
	pulumi.RegisterOutputType(RouteEntriesEntryOutput{})
	pulumi.RegisterOutputType(RouteEntriesEntryArrayOutput{})
	pulumi.RegisterOutputType(RouteTableAssociationsAssociationOutput{})
	pulumi.RegisterOutputType(RouteTableAssociationsAssociationArrayOutput{})
	pulumi.RegisterOutputType(RouteTablePropagationsPropagationOutput{})
	pulumi.RegisterOutputType(RouteTablePropagationsPropagationArrayOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterTransitRouterAttachmentOutput{})
	pulumi.RegisterOutputType(TransitRouterTransitRouterAttachmentArrayOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterArrayOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterTransitRouterAttachmentOutput{})
	pulumi.RegisterOutputType(TransitRoutersTransitRouterTransitRouterAttachmentArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentAttachPointOutput{})
	pulumi.RegisterOutputType(VpcAttachmentAttachPointArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentAttachPointOutput{})
	pulumi.RegisterOutputType(VpcAttachmentsAttachmentAttachPointArrayOutput{})
	pulumi.RegisterOutputType(VpnAttachmentsAttachmentOutput{})
	pulumi.RegisterOutputType(VpnAttachmentsAttachmentArrayOutput{})
}
