// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of transit router peer attachments
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/transit_router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := transit_router.GetPeerAttachments(ctx, &transit_router.GetPeerAttachmentsArgs{
//				Ids: []string{
//					"tr-attach-12be67d0yh2io17q7y1au****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPeerAttachments(ctx *pulumi.Context, args *GetPeerAttachmentsArgs, opts ...pulumi.InvokeOption) (*GetPeerAttachmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPeerAttachmentsResult
	err := ctx.Invoke("volcengine:transit_router/getPeerAttachments:getPeerAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPeerAttachments.
type GetPeerAttachmentsArgs struct {
	// A list of IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The id of peer transit router.
	PeerTransitRouterId *string `pulumi:"peerTransitRouterId"`
	// The region id of peer transit router.
	PeerTransitRouterRegionId *string `pulumi:"peerTransitRouterRegionId"`
	// Tags.
	Tags []GetPeerAttachmentsTag `pulumi:"tags"`
	// The name of transit router peer attachment.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The id of local transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
}

// A collection of values returned by getPeerAttachments.
type GetPeerAttachmentsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The id of the peer transit router.
	PeerTransitRouterId *string `pulumi:"peerTransitRouterId"`
	// The region id of the peer transit router.
	PeerTransitRouterRegionId *string `pulumi:"peerTransitRouterRegionId"`
	// Tags.
	Tags []GetPeerAttachmentsTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The name of the transit router peer attachment.
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// The collection of query.
	TransitRouterAttachments []GetPeerAttachmentsTransitRouterAttachment `pulumi:"transitRouterAttachments"`
	// The id of the local transit router.
	TransitRouterId *string `pulumi:"transitRouterId"`
}

func GetPeerAttachmentsOutput(ctx *pulumi.Context, args GetPeerAttachmentsOutputArgs, opts ...pulumi.InvokeOption) GetPeerAttachmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPeerAttachmentsResult, error) {
			args := v.(GetPeerAttachmentsArgs)
			r, err := GetPeerAttachments(ctx, &args, opts...)
			var s GetPeerAttachmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPeerAttachmentsResultOutput)
}

// A collection of arguments for invoking getPeerAttachments.
type GetPeerAttachmentsOutputArgs struct {
	// A list of IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The id of peer transit router.
	PeerTransitRouterId pulumi.StringPtrInput `pulumi:"peerTransitRouterId"`
	// The region id of peer transit router.
	PeerTransitRouterRegionId pulumi.StringPtrInput `pulumi:"peerTransitRouterRegionId"`
	// Tags.
	Tags GetPeerAttachmentsTagArrayInput `pulumi:"tags"`
	// The name of transit router peer attachment.
	TransitRouterAttachmentName pulumi.StringPtrInput `pulumi:"transitRouterAttachmentName"`
	// The id of local transit router.
	TransitRouterId pulumi.StringPtrInput `pulumi:"transitRouterId"`
}

func (GetPeerAttachmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerAttachmentsArgs)(nil)).Elem()
}

// A collection of values returned by getPeerAttachments.
type GetPeerAttachmentsResultOutput struct{ *pulumi.OutputState }

func (GetPeerAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeerAttachmentsResult)(nil)).Elem()
}

func (o GetPeerAttachmentsResultOutput) ToGetPeerAttachmentsResultOutput() GetPeerAttachmentsResultOutput {
	return o
}

func (o GetPeerAttachmentsResultOutput) ToGetPeerAttachmentsResultOutputWithContext(ctx context.Context) GetPeerAttachmentsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPeerAttachmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPeerAttachmentsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetPeerAttachmentsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetPeerAttachmentsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The id of the peer transit router.
func (o GetPeerAttachmentsResultOutput) PeerTransitRouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) *string { return v.PeerTransitRouterId }).(pulumi.StringPtrOutput)
}

// The region id of the peer transit router.
func (o GetPeerAttachmentsResultOutput) PeerTransitRouterRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) *string { return v.PeerTransitRouterRegionId }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetPeerAttachmentsResultOutput) Tags() GetPeerAttachmentsTagArrayOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) []GetPeerAttachmentsTag { return v.Tags }).(GetPeerAttachmentsTagArrayOutput)
}

// The total count of query.
func (o GetPeerAttachmentsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The name of the transit router peer attachment.
func (o GetPeerAttachmentsResultOutput) TransitRouterAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) *string { return v.TransitRouterAttachmentName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetPeerAttachmentsResultOutput) TransitRouterAttachments() GetPeerAttachmentsTransitRouterAttachmentArrayOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) []GetPeerAttachmentsTransitRouterAttachment {
		return v.TransitRouterAttachments
	}).(GetPeerAttachmentsTransitRouterAttachmentArrayOutput)
}

// The id of the local transit router.
func (o GetPeerAttachmentsResultOutput) TransitRouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPeerAttachmentsResult) *string { return v.TransitRouterId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPeerAttachmentsResultOutput{})
}
