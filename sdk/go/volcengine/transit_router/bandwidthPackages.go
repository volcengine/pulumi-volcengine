// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transit_router

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of transit router bandwidth packages
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/transit_router"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooBandwidthPackage, err := transit_router.NewBandwidthPackage(ctx, "fooBandwidthPackage", &transit_router.BandwidthPackageArgs{
//				TransitRouterBandwidthPackageName: pulumi.String("acc-tf-test"),
//				Description:                       pulumi.String("acc-test"),
//				Bandwidth:                         pulumi.Int(2),
//				Period:                            pulumi.Int(1),
//				RenewType:                         pulumi.String("Manual"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = transit_router.BandwidthPackagesOutput(ctx, transit_router.BandwidthPackagesOutputArgs{
//				Ids: pulumi.StringArray{
//					fooBandwidthPackage.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func BandwidthPackages(ctx *pulumi.Context, args *BandwidthPackagesArgs, opts ...pulumi.InvokeOption) (*BandwidthPackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv BandwidthPackagesResult
	err := ctx.Invoke("volcengine:transit_router/bandwidthPackages:BandwidthPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking BandwidthPackages.
type BandwidthPackagesArgs struct {
	// The ID list of the TransitRouter bandwidth package.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The name of the TransitRouter bandwidth package.
	TransitRouterBandwidthPackageName *string `pulumi:"transitRouterBandwidthPackageName"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId *string `pulumi:"transitRouterPeerAttachmentId"`
}

// A collection of values returned by BandwidthPackages.
type BandwidthPackagesResult struct {
	// The collection of query.
	BandwidthPackages []BandwidthPackagesBandwidthPackage `pulumi:"bandwidthPackages"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The name of the transit router bandwidth package.
	TransitRouterBandwidthPackageName *string `pulumi:"transitRouterBandwidthPackageName"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId *string `pulumi:"transitRouterPeerAttachmentId"`
}

func BandwidthPackagesOutput(ctx *pulumi.Context, args BandwidthPackagesOutputArgs, opts ...pulumi.InvokeOption) BandwidthPackagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (BandwidthPackagesResult, error) {
			args := v.(BandwidthPackagesArgs)
			r, err := BandwidthPackages(ctx, &args, opts...)
			var s BandwidthPackagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(BandwidthPackagesResultOutput)
}

// A collection of arguments for invoking BandwidthPackages.
type BandwidthPackagesOutputArgs struct {
	// The ID list of the TransitRouter bandwidth package.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of the TransitRouter bandwidth package.
	TransitRouterBandwidthPackageName pulumi.StringPtrInput `pulumi:"transitRouterBandwidthPackageName"`
	// The ID of the peer attachment.
	TransitRouterPeerAttachmentId pulumi.StringPtrInput `pulumi:"transitRouterPeerAttachmentId"`
}

func (BandwidthPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesArgs)(nil)).Elem()
}

// A collection of values returned by BandwidthPackages.
type BandwidthPackagesResultOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesResult)(nil)).Elem()
}

func (o BandwidthPackagesResultOutput) ToBandwidthPackagesResultOutput() BandwidthPackagesResultOutput {
	return o
}

func (o BandwidthPackagesResultOutput) ToBandwidthPackagesResultOutputWithContext(ctx context.Context) BandwidthPackagesResultOutput {
	return o
}

// The collection of query.
func (o BandwidthPackagesResultOutput) BandwidthPackages() BandwidthPackagesBandwidthPackageArrayOutput {
	return o.ApplyT(func(v BandwidthPackagesResult) []BandwidthPackagesBandwidthPackage { return v.BandwidthPackages }).(BandwidthPackagesBandwidthPackageArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o BandwidthPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o BandwidthPackagesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthPackagesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o BandwidthPackagesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackagesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o BandwidthPackagesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthPackagesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The name of the transit router bandwidth package.
func (o BandwidthPackagesResultOutput) TransitRouterBandwidthPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackagesResult) *string { return v.TransitRouterBandwidthPackageName }).(pulumi.StringPtrOutput)
}

// The ID of the peer attachment.
func (o BandwidthPackagesResultOutput) TransitRouterPeerAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BandwidthPackagesResult) *string { return v.TransitRouterPeerAttachmentId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BandwidthPackagesResultOutput{})
}
