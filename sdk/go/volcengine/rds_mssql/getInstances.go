// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_mssql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of rds mssql instances
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_mssql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds_mssql.GetInstances(ctx, &rds_mssql.GetInstancesArgs{
//				InstanceId: pulumi.StringRef("mssql-d2fc5abe****"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInstances(ctx *pulumi.Context, args *GetInstancesArgs, opts ...pulumi.InvokeOption) (*GetInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstancesResult
	err := ctx.Invoke("volcengine:rds_mssql/getInstances:getInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstances.
type GetInstancesArgs struct {
	// The charge type. Valid values: `PostPaid`, `PrePaid`.
	ChargeType *string `pulumi:"chargeType"`
	// The end time of creating the instance, using UTC time format.
	CreateTimeEnd *string `pulumi:"createTimeEnd"`
	// The start time of creating the instance, using UTC time format.
	CreateTimeStart *string `pulumi:"createTimeStart"`
	// Compatible version. Valid values: `SQLServer_2019_Std`, `SQLServer_2019_Web`, `SQLServer_2019_Ent`.
	DbEngineVersion *string `pulumi:"dbEngineVersion"`
	// Id of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// Name of the instance.
	InstanceName *string `pulumi:"instanceName"`
	// Status of the instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// Instance type. Valid values: `HA`, `Basic`, `Cluster`.
	InstanceType *string `pulumi:"instanceType"`
	// A Name Regex of RDS mssql instance.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Tags.
	Tags []GetInstancesTag `pulumi:"tags"`
	// The id of the zone.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getInstances.
type GetInstancesResult struct {
	// The charge type.
	ChargeType      *string `pulumi:"chargeType"`
	CreateTimeEnd   *string `pulumi:"createTimeEnd"`
	CreateTimeStart *string `pulumi:"createTimeStart"`
	// The db engine version.
	DbEngineVersion *string `pulumi:"dbEngineVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// The name of the instance.
	InstanceName *string `pulumi:"instanceName"`
	// The status of the instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// The type of the instance.
	InstanceType *string `pulumi:"instanceType"`
	// The collection of query.
	Instances  []GetInstancesInstance `pulumi:"instances"`
	NameRegex  *string                `pulumi:"nameRegex"`
	OutputFile *string                `pulumi:"outputFile"`
	// Tags.
	Tags []GetInstancesTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The zone id.
	ZoneId *string `pulumi:"zoneId"`
}

func GetInstancesOutput(ctx *pulumi.Context, args GetInstancesOutputArgs, opts ...pulumi.InvokeOption) GetInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstancesResult, error) {
			args := v.(GetInstancesArgs)
			r, err := GetInstances(ctx, &args, opts...)
			var s GetInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstancesResultOutput)
}

// A collection of arguments for invoking getInstances.
type GetInstancesOutputArgs struct {
	// The charge type. Valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	// The end time of creating the instance, using UTC time format.
	CreateTimeEnd pulumi.StringPtrInput `pulumi:"createTimeEnd"`
	// The start time of creating the instance, using UTC time format.
	CreateTimeStart pulumi.StringPtrInput `pulumi:"createTimeStart"`
	// Compatible version. Valid values: `SQLServer_2019_Std`, `SQLServer_2019_Web`, `SQLServer_2019_Ent`.
	DbEngineVersion pulumi.StringPtrInput `pulumi:"dbEngineVersion"`
	// Id of the instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// Name of the instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Status of the instance.
	InstanceStatus pulumi.StringPtrInput `pulumi:"instanceStatus"`
	// Instance type. Valid values: `HA`, `Basic`, `Cluster`.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A Name Regex of RDS mssql instance.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Tags.
	Tags GetInstancesTagArrayInput `pulumi:"tags"`
	// The id of the zone.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (GetInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getInstances.
type GetInstancesResultOutput struct{ *pulumi.OutputState }

func (GetInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesResult)(nil)).Elem()
}

func (o GetInstancesResultOutput) ToGetInstancesResultOutput() GetInstancesResultOutput {
	return o
}

func (o GetInstancesResultOutput) ToGetInstancesResultOutputWithContext(ctx context.Context) GetInstancesResultOutput {
	return o
}

// The charge type.
func (o GetInstancesResultOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) CreateTimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.CreateTimeEnd }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) CreateTimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.CreateTimeStart }).(pulumi.StringPtrOutput)
}

// The db engine version.
func (o GetInstancesResultOutput) DbEngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.DbEngineVersion }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Instance ID.
func (o GetInstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The name of the instance.
func (o GetInstancesResultOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The status of the instance.
func (o GetInstancesResultOutput) InstanceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.InstanceStatus }).(pulumi.StringPtrOutput)
}

// The type of the instance.
func (o GetInstancesResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetInstancesResultOutput) Instances() GetInstancesInstanceArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []GetInstancesInstance { return v.Instances }).(GetInstancesInstanceArrayOutput)
}

func (o GetInstancesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetInstancesResultOutput) Tags() GetInstancesTagArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []GetInstancesTag { return v.Tags }).(GetInstancesTagArrayOutput)
}

// The total count of query.
func (o GetInstancesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The zone id.
func (o GetInstancesResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstancesResultOutput{})
}
