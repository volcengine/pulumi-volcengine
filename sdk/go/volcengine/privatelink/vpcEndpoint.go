// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage privatelink vpc endpoint
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/clb"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/privatelink"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.Zones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooSecurityGroup, err := vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
//				SecurityGroupName: pulumi.String("acc-test-security-group"),
//				VpcId:             fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooClb, err := clb.NewClb(ctx, "fooClb", &clb.ClbArgs{
//				Type:                    pulumi.String("public"),
//				SubnetId:                fooSubnet.ID(),
//				LoadBalancerSpec:        pulumi.String("small_1"),
//				Description:             pulumi.String("acc-test-demo"),
//				LoadBalancerName:        pulumi.String("acc-test-clb"),
//				LoadBalancerBillingType: pulumi.String("PostPaid"),
//				EipBillingConfig: &clb.ClbEipBillingConfigArgs{
//					Isp:            pulumi.String("BGP"),
//					EipBillingType: pulumi.String("PostPaidByBandwidth"),
//					Bandwidth:      pulumi.Int(1),
//				},
//				Tags: clb.ClbTagArray{
//					&clb.ClbTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooVpcEndpointService, err := privatelink.NewVpcEndpointService(ctx, "fooVpcEndpointService", &privatelink.VpcEndpointServiceArgs{
//				Resources: privatelink.VpcEndpointServiceResourceTypeArray{
//					&privatelink.VpcEndpointServiceResourceTypeArgs{
//						ResourceId:   fooClb.ID(),
//						ResourceType: pulumi.String("CLB"),
//					},
//				},
//				Description:       pulumi.String("acc-test"),
//				AutoAcceptEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = privatelink.NewVpcEndpoint(ctx, "fooVpcEndpoint", &privatelink.VpcEndpointArgs{
//				SecurityGroupIds: pulumi.StringArray{
//					fooSecurityGroup.ID(),
//				},
//				ServiceId:    fooVpcEndpointService.ID(),
//				EndpointName: pulumi.String("acc-test-ep"),
//				Description:  pulumi.String("acc-test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VpcEndpoint can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:privatelink/vpcEndpoint:VpcEndpoint default ep-3rel74u229dz45zsk2i6l****
// ```
type VpcEndpoint struct {
	pulumi.CustomResourceState

	// Whether the vpc endpoint is locked.
	BusinessStatus pulumi.StringOutput `pulumi:"businessStatus"`
	// The connection  status of vpc endpoint.
	ConnectionStatus pulumi.StringOutput `pulumi:"connectionStatus"`
	// The create time of vpc endpoint.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The delete time of vpc endpoint.
	DeletedTime pulumi.StringOutput `pulumi:"deletedTime"`
	// The description of vpc endpoint.
	Description pulumi.StringOutput `pulumi:"description"`
	// The domain of vpc endpoint.
	EndpointDomain pulumi.StringOutput `pulumi:"endpointDomain"`
	// The name of vpc endpoint.
	EndpointName pulumi.StringOutput `pulumi:"endpointName"`
	// The type of vpc endpoint.
	EndpointType pulumi.StringOutput `pulumi:"endpointType"`
	// Whether to enable private dns name. Default is false.
	PrivateDnsEnabled pulumi.BoolOutput `pulumi:"privateDnsEnabled"`
	// The private dns name of vpc endpoint.
	PrivateDnsName pulumi.StringOutput `pulumi:"privateDnsName"`
	// The security group ids of vpc endpoint. It is recommended to bind security groups using the 'security_group_ids' field in this resource instead of using `privatelink.SecurityGroup`.
	// For operations that jointly use this resource and `privatelink.SecurityGroup`, use lifecycle ignoreChanges to suppress changes to the 'security_group_ids' field.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The id of vpc endpoint service.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
	// The name of vpc endpoint service.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The status of vpc endpoint.
	Status pulumi.StringOutput `pulumi:"status"`
	// The update time of vpc endpoint.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The vpc id of vpc endpoint.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcEndpoint registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpoint(ctx *pulumi.Context,
	name string, args *VpcEndpointArgs, opts ...pulumi.ResourceOption) (*VpcEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcEndpoint
	err := ctx.RegisterResource("volcengine:privatelink/vpcEndpoint:VpcEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpoint gets an existing VpcEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointState, opts ...pulumi.ResourceOption) (*VpcEndpoint, error) {
	var resource VpcEndpoint
	err := ctx.ReadResource("volcengine:privatelink/vpcEndpoint:VpcEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpoint resources.
type vpcEndpointState struct {
	// Whether the vpc endpoint is locked.
	BusinessStatus *string `pulumi:"businessStatus"`
	// The connection  status of vpc endpoint.
	ConnectionStatus *string `pulumi:"connectionStatus"`
	// The create time of vpc endpoint.
	CreationTime *string `pulumi:"creationTime"`
	// The delete time of vpc endpoint.
	DeletedTime *string `pulumi:"deletedTime"`
	// The description of vpc endpoint.
	Description *string `pulumi:"description"`
	// The domain of vpc endpoint.
	EndpointDomain *string `pulumi:"endpointDomain"`
	// The name of vpc endpoint.
	EndpointName *string `pulumi:"endpointName"`
	// The type of vpc endpoint.
	EndpointType *string `pulumi:"endpointType"`
	// Whether to enable private dns name. Default is false.
	PrivateDnsEnabled *bool `pulumi:"privateDnsEnabled"`
	// The private dns name of vpc endpoint.
	PrivateDnsName *string `pulumi:"privateDnsName"`
	// The security group ids of vpc endpoint. It is recommended to bind security groups using the 'security_group_ids' field in this resource instead of using `privatelink.SecurityGroup`.
	// For operations that jointly use this resource and `privatelink.SecurityGroup`, use lifecycle ignoreChanges to suppress changes to the 'security_group_ids' field.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The id of vpc endpoint service.
	ServiceId *string `pulumi:"serviceId"`
	// The name of vpc endpoint service.
	ServiceName *string `pulumi:"serviceName"`
	// The status of vpc endpoint.
	Status *string `pulumi:"status"`
	// The update time of vpc endpoint.
	UpdateTime *string `pulumi:"updateTime"`
	// The vpc id of vpc endpoint.
	VpcId *string `pulumi:"vpcId"`
}

type VpcEndpointState struct {
	// Whether the vpc endpoint is locked.
	BusinessStatus pulumi.StringPtrInput
	// The connection  status of vpc endpoint.
	ConnectionStatus pulumi.StringPtrInput
	// The create time of vpc endpoint.
	CreationTime pulumi.StringPtrInput
	// The delete time of vpc endpoint.
	DeletedTime pulumi.StringPtrInput
	// The description of vpc endpoint.
	Description pulumi.StringPtrInput
	// The domain of vpc endpoint.
	EndpointDomain pulumi.StringPtrInput
	// The name of vpc endpoint.
	EndpointName pulumi.StringPtrInput
	// The type of vpc endpoint.
	EndpointType pulumi.StringPtrInput
	// Whether to enable private dns name. Default is false.
	PrivateDnsEnabled pulumi.BoolPtrInput
	// The private dns name of vpc endpoint.
	PrivateDnsName pulumi.StringPtrInput
	// The security group ids of vpc endpoint. It is recommended to bind security groups using the 'security_group_ids' field in this resource instead of using `privatelink.SecurityGroup`.
	// For operations that jointly use this resource and `privatelink.SecurityGroup`, use lifecycle ignoreChanges to suppress changes to the 'security_group_ids' field.
	SecurityGroupIds pulumi.StringArrayInput
	// The id of vpc endpoint service.
	ServiceId pulumi.StringPtrInput
	// The name of vpc endpoint service.
	ServiceName pulumi.StringPtrInput
	// The status of vpc endpoint.
	Status pulumi.StringPtrInput
	// The update time of vpc endpoint.
	UpdateTime pulumi.StringPtrInput
	// The vpc id of vpc endpoint.
	VpcId pulumi.StringPtrInput
}

func (VpcEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointState)(nil)).Elem()
}

type vpcEndpointArgs struct {
	// The description of vpc endpoint.
	Description *string `pulumi:"description"`
	// The name of vpc endpoint.
	EndpointName *string `pulumi:"endpointName"`
	// Whether to enable private dns name. Default is false.
	PrivateDnsEnabled *bool `pulumi:"privateDnsEnabled"`
	// The security group ids of vpc endpoint. It is recommended to bind security groups using the 'security_group_ids' field in this resource instead of using `privatelink.SecurityGroup`.
	// For operations that jointly use this resource and `privatelink.SecurityGroup`, use lifecycle ignoreChanges to suppress changes to the 'security_group_ids' field.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The id of vpc endpoint service.
	ServiceId string `pulumi:"serviceId"`
	// The name of vpc endpoint service.
	ServiceName *string `pulumi:"serviceName"`
}

// The set of arguments for constructing a VpcEndpoint resource.
type VpcEndpointArgs struct {
	// The description of vpc endpoint.
	Description pulumi.StringPtrInput
	// The name of vpc endpoint.
	EndpointName pulumi.StringPtrInput
	// Whether to enable private dns name. Default is false.
	PrivateDnsEnabled pulumi.BoolPtrInput
	// The security group ids of vpc endpoint. It is recommended to bind security groups using the 'security_group_ids' field in this resource instead of using `privatelink.SecurityGroup`.
	// For operations that jointly use this resource and `privatelink.SecurityGroup`, use lifecycle ignoreChanges to suppress changes to the 'security_group_ids' field.
	SecurityGroupIds pulumi.StringArrayInput
	// The id of vpc endpoint service.
	ServiceId pulumi.StringInput
	// The name of vpc endpoint service.
	ServiceName pulumi.StringPtrInput
}

func (VpcEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointArgs)(nil)).Elem()
}

type VpcEndpointInput interface {
	pulumi.Input

	ToVpcEndpointOutput() VpcEndpointOutput
	ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput
}

func (*VpcEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpoint)(nil)).Elem()
}

func (i *VpcEndpoint) ToVpcEndpointOutput() VpcEndpointOutput {
	return i.ToVpcEndpointOutputWithContext(context.Background())
}

func (i *VpcEndpoint) ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointOutput)
}

// VpcEndpointArrayInput is an input type that accepts VpcEndpointArray and VpcEndpointArrayOutput values.
// You can construct a concrete instance of `VpcEndpointArrayInput` via:
//
//	VpcEndpointArray{ VpcEndpointArgs{...} }
type VpcEndpointArrayInput interface {
	pulumi.Input

	ToVpcEndpointArrayOutput() VpcEndpointArrayOutput
	ToVpcEndpointArrayOutputWithContext(context.Context) VpcEndpointArrayOutput
}

type VpcEndpointArray []VpcEndpointInput

func (VpcEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpoint)(nil)).Elem()
}

func (i VpcEndpointArray) ToVpcEndpointArrayOutput() VpcEndpointArrayOutput {
	return i.ToVpcEndpointArrayOutputWithContext(context.Background())
}

func (i VpcEndpointArray) ToVpcEndpointArrayOutputWithContext(ctx context.Context) VpcEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointArrayOutput)
}

// VpcEndpointMapInput is an input type that accepts VpcEndpointMap and VpcEndpointMapOutput values.
// You can construct a concrete instance of `VpcEndpointMapInput` via:
//
//	VpcEndpointMap{ "key": VpcEndpointArgs{...} }
type VpcEndpointMapInput interface {
	pulumi.Input

	ToVpcEndpointMapOutput() VpcEndpointMapOutput
	ToVpcEndpointMapOutputWithContext(context.Context) VpcEndpointMapOutput
}

type VpcEndpointMap map[string]VpcEndpointInput

func (VpcEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpoint)(nil)).Elem()
}

func (i VpcEndpointMap) ToVpcEndpointMapOutput() VpcEndpointMapOutput {
	return i.ToVpcEndpointMapOutputWithContext(context.Background())
}

func (i VpcEndpointMap) ToVpcEndpointMapOutputWithContext(ctx context.Context) VpcEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointMapOutput)
}

type VpcEndpointOutput struct{ *pulumi.OutputState }

func (VpcEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointOutput) ToVpcEndpointOutput() VpcEndpointOutput {
	return o
}

func (o VpcEndpointOutput) ToVpcEndpointOutputWithContext(ctx context.Context) VpcEndpointOutput {
	return o
}

// Whether the vpc endpoint is locked.
func (o VpcEndpointOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The connection  status of vpc endpoint.
func (o VpcEndpointOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The create time of vpc endpoint.
func (o VpcEndpointOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The delete time of vpc endpoint.
func (o VpcEndpointOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of vpc endpoint.
func (o VpcEndpointOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The domain of vpc endpoint.
func (o VpcEndpointOutput) EndpointDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.EndpointDomain }).(pulumi.StringOutput)
}

// The name of vpc endpoint.
func (o VpcEndpointOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.EndpointName }).(pulumi.StringOutput)
}

// The type of vpc endpoint.
func (o VpcEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.EndpointType }).(pulumi.StringOutput)
}

// Whether to enable private dns name. Default is false.
func (o VpcEndpointOutput) PrivateDnsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.BoolOutput { return v.PrivateDnsEnabled }).(pulumi.BoolOutput)
}

// The private dns name of vpc endpoint.
func (o VpcEndpointOutput) PrivateDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.PrivateDnsName }).(pulumi.StringOutput)
}

// The security group ids of vpc endpoint. It is recommended to bind security groups using the 'security_group_ids' field in this resource instead of using `privatelink.SecurityGroup`.
// For operations that jointly use this resource and `privatelink.SecurityGroup`, use lifecycle ignoreChanges to suppress changes to the 'security_group_ids' field.
func (o VpcEndpointOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The id of vpc endpoint service.
func (o VpcEndpointOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

// The name of vpc endpoint service.
func (o VpcEndpointOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The status of vpc endpoint.
func (o VpcEndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The update time of vpc endpoint.
func (o VpcEndpointOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The vpc id of vpc endpoint.
func (o VpcEndpointOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpoint) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type VpcEndpointArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointArrayOutput) ToVpcEndpointArrayOutput() VpcEndpointArrayOutput {
	return o
}

func (o VpcEndpointArrayOutput) ToVpcEndpointArrayOutputWithContext(ctx context.Context) VpcEndpointArrayOutput {
	return o
}

func (o VpcEndpointArrayOutput) Index(i pulumi.IntInput) VpcEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEndpoint {
		return vs[0].([]*VpcEndpoint)[vs[1].(int)]
	}).(VpcEndpointOutput)
}

type VpcEndpointMapOutput struct{ *pulumi.OutputState }

func (VpcEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpoint)(nil)).Elem()
}

func (o VpcEndpointMapOutput) ToVpcEndpointMapOutput() VpcEndpointMapOutput {
	return o
}

func (o VpcEndpointMapOutput) ToVpcEndpointMapOutputWithContext(ctx context.Context) VpcEndpointMapOutput {
	return o
}

func (o VpcEndpointMapOutput) MapIndex(k pulumi.StringInput) VpcEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEndpoint {
		return vs[0].(map[string]*VpcEndpoint)[vs[1].(string)]
	}).(VpcEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointInput)(nil)).Elem(), &VpcEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointArrayInput)(nil)).Elem(), VpcEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointMapInput)(nil)).Elem(), VpcEndpointMap{})
	pulumi.RegisterOutputType(VpcEndpointOutput{})
	pulumi.RegisterOutputType(VpcEndpointArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointMapOutput{})
}
