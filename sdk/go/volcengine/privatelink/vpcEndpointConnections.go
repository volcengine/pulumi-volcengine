// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of privatelink vpc endpoint connections
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/clb"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/privatelink"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.Zones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooSecurityGroup, err := vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
//				SecurityGroupName: pulumi.String("acc-test-security-group"),
//				VpcId:             fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooClb, err := clb.NewClb(ctx, "fooClb", &clb.ClbArgs{
//				Type:                    pulumi.String("public"),
//				SubnetId:                fooSubnet.ID(),
//				LoadBalancerSpec:        pulumi.String("small_1"),
//				Description:             pulumi.String("acc-test-demo"),
//				LoadBalancerName:        pulumi.String("acc-test-clb"),
//				LoadBalancerBillingType: pulumi.String("PostPaid"),
//				EipBillingConfig: &clb.ClbEipBillingConfigArgs{
//					Isp:            pulumi.String("BGP"),
//					EipBillingType: pulumi.String("PostPaidByBandwidth"),
//					Bandwidth:      pulumi.Int(1),
//				},
//				Tags: clb.ClbTagArray{
//					&clb.ClbTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooVpcEndpointService, err := privatelink.NewVpcEndpointService(ctx, "fooVpcEndpointService", &privatelink.VpcEndpointServiceArgs{
//				Resources: privatelink.VpcEndpointServiceResourceTypeArray{
//					&privatelink.VpcEndpointServiceResourceTypeArgs{
//						ResourceId:   fooClb.ID(),
//						ResourceType: pulumi.String("CLB"),
//					},
//				},
//				Description: pulumi.String("acc-test"),
//			})
//			if err != nil {
//				return err
//			}
//			fooVpcEndpoint, err := privatelink.NewVpcEndpoint(ctx, "fooVpcEndpoint", &privatelink.VpcEndpointArgs{
//				SecurityGroupIds: pulumi.StringArray{
//					fooSecurityGroup.ID(),
//				},
//				ServiceId:    fooVpcEndpointService.ID(),
//				EndpointName: pulumi.String("acc-test-ep"),
//				Description:  pulumi.String("acc-test"),
//			})
//			if err != nil {
//				return err
//			}
//			fooVpcEndpointZone, err := privatelink.NewVpcEndpointZone(ctx, "fooVpcEndpointZone", &privatelink.VpcEndpointZoneArgs{
//				EndpointId:       fooVpcEndpoint.ID(),
//				SubnetId:         fooSubnet.ID(),
//				PrivateIpAddress: pulumi.String("172.16.0.251"),
//			})
//			if err != nil {
//				return err
//			}
//			fooVpcEndpointConnection, err := privatelink.NewVpcEndpointConnection(ctx, "fooVpcEndpointConnection", &privatelink.VpcEndpointConnectionArgs{
//				EndpointId: fooVpcEndpoint.ID(),
//				ServiceId:  fooVpcEndpointService.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				fooVpcEndpointZone,
//			}))
//			if err != nil {
//				return err
//			}
//			_ = privatelink.VpcEndpointConnectionsOutput(ctx, privatelink.VpcEndpointConnectionsOutputArgs{
//				EndpointId: fooVpcEndpointConnection.EndpointId,
//				ServiceId:  fooVpcEndpointConnection.ServiceId,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func VpcEndpointConnections(ctx *pulumi.Context, args *VpcEndpointConnectionsArgs, opts ...pulumi.InvokeOption) (*VpcEndpointConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv VpcEndpointConnectionsResult
	err := ctx.Invoke("volcengine:privatelink/vpcEndpointConnections:VpcEndpointConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking VpcEndpointConnections.
type VpcEndpointConnectionsArgs struct {
	// The id of the vpc endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// The account id of the vpc endpoint.
	EndpointOwnerAccountId *string `pulumi:"endpointOwnerAccountId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The id of the vpc endpoint service.
	ServiceId string `pulumi:"serviceId"`
}

// A collection of values returned by VpcEndpointConnections.
type VpcEndpointConnectionsResult struct {
	// The list of query.
	Connections []VpcEndpointConnectionsConnection `pulumi:"connections"`
	// The id of the vpc endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// The account id of the vpc endpoint.
	EndpointOwnerAccountId *string `pulumi:"endpointOwnerAccountId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The id of the vpc endpoint service.
	ServiceId string `pulumi:"serviceId"`
	// Returns the total amount of the data list.
	TotalCount int `pulumi:"totalCount"`
}

func VpcEndpointConnectionsOutput(ctx *pulumi.Context, args VpcEndpointConnectionsOutputArgs, opts ...pulumi.InvokeOption) VpcEndpointConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (VpcEndpointConnectionsResult, error) {
			args := v.(VpcEndpointConnectionsArgs)
			r, err := VpcEndpointConnections(ctx, &args, opts...)
			var s VpcEndpointConnectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(VpcEndpointConnectionsResultOutput)
}

// A collection of arguments for invoking VpcEndpointConnections.
type VpcEndpointConnectionsOutputArgs struct {
	// The id of the vpc endpoint.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// The account id of the vpc endpoint.
	EndpointOwnerAccountId pulumi.StringPtrInput `pulumi:"endpointOwnerAccountId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The id of the vpc endpoint service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (VpcEndpointConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by VpcEndpointConnections.
type VpcEndpointConnectionsResultOutput struct{ *pulumi.OutputState }

func (VpcEndpointConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointConnectionsResult)(nil)).Elem()
}

func (o VpcEndpointConnectionsResultOutput) ToVpcEndpointConnectionsResultOutput() VpcEndpointConnectionsResultOutput {
	return o
}

func (o VpcEndpointConnectionsResultOutput) ToVpcEndpointConnectionsResultOutputWithContext(ctx context.Context) VpcEndpointConnectionsResultOutput {
	return o
}

// The list of query.
func (o VpcEndpointConnectionsResultOutput) Connections() VpcEndpointConnectionsConnectionArrayOutput {
	return o.ApplyT(func(v VpcEndpointConnectionsResult) []VpcEndpointConnectionsConnection { return v.Connections }).(VpcEndpointConnectionsConnectionArrayOutput)
}

// The id of the vpc endpoint.
func (o VpcEndpointConnectionsResultOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointConnectionsResult) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// The account id of the vpc endpoint.
func (o VpcEndpointConnectionsResultOutput) EndpointOwnerAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointConnectionsResult) *string { return v.EndpointOwnerAccountId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o VpcEndpointConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VpcEndpointConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o VpcEndpointConnectionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointConnectionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The id of the vpc endpoint service.
func (o VpcEndpointConnectionsResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcEndpointConnectionsResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

// Returns the total amount of the data list.
func (o VpcEndpointConnectionsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v VpcEndpointConnectionsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(VpcEndpointConnectionsResultOutput{})
}
