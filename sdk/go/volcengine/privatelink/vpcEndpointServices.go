// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of privatelink vpc endpoint services
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/clb"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/privatelink"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// fooZones, err := ecs.Zones(ctx, nil, nil);
// if err != nil {
// return err
// }
// fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
// VpcName: pulumi.String("acc-test-vpc"),
// CidrBlock: pulumi.String("172.16.0.0/16"),
// })
// if err != nil {
// return err
// }
// fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
// SubnetName: pulumi.String("acc-test-subnet"),
// CidrBlock: pulumi.String("172.16.0.0/24"),
// ZoneId: *pulumi.String(fooZones.Zones[0].Id),
// VpcId: fooVpc.ID(),
// })
// if err != nil {
// return err
// }
// fooClb, err := clb.NewClb(ctx, "fooClb", &clb.ClbArgs{
// Type: pulumi.String("public"),
// SubnetId: fooSubnet.ID(),
// LoadBalancerSpec: pulumi.String("small_1"),
// Description: pulumi.String("acc-test-demo"),
// LoadBalancerName: pulumi.String("acc-test-clb"),
// LoadBalancerBillingType: pulumi.String("PostPaid"),
// EipBillingConfig: &clb.ClbEipBillingConfigArgs{
// Isp: pulumi.String("BGP"),
// EipBillingType: pulumi.String("PostPaidByBandwidth"),
// Bandwidth: pulumi.Int(1),
// },
// Tags: clb.ClbTagArray{
// &clb.ClbTagArgs{
// Key: pulumi.String("k1"),
// Value: pulumi.String("v1"),
// },
// },
// })
// if err != nil {
// return err
// }
// var fooVpcEndpointService []*privatelink.VpcEndpointService
//
//	for index := 0; index < 2; index++ {
//	    key0 := index
//	    _ := index
//
// __res, err := privatelink.NewVpcEndpointService(ctx, fmt.Sprintf("fooVpcEndpointService-%v", key0), &privatelink.VpcEndpointServiceArgs{
// Resources: privatelink.VpcEndpointServiceResourceTypeArray{
// &privatelink.VpcEndpointServiceResourceTypeArgs{
// ResourceId: fooClb.ID(),
// ResourceType: pulumi.String("CLB"),
// },
// },
// Description: pulumi.String("acc-test"),
// AutoAcceptEnabled: pulumi.Bool(true),
// })
// if err != nil {
// return err
// }
// fooVpcEndpointService = append(fooVpcEndpointService, __res)
// }
// _ = privatelink.VpcEndpointServicesOutput(ctx, privatelink.VpcEndpointServicesOutputArgs{
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:privatelink-vpcEndpointServices:VpcEndpointServices.pp:42,9-36),
// }, nil);
// return nil
// })
// }
// ```
func VpcEndpointServices(ctx *pulumi.Context, args *VpcEndpointServicesArgs, opts ...pulumi.InvokeOption) (*VpcEndpointServicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv VpcEndpointServicesResult
	err := ctx.Invoke("volcengine:privatelink/vpcEndpointServices:VpcEndpointServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking VpcEndpointServices.
type VpcEndpointServicesArgs struct {
	// The IDs of vpc endpoint service.
	Ids []string `pulumi:"ids"`
	// A Name Regex of vpc endpoint service.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The name of vpc endpoint service.
	ServiceName *string `pulumi:"serviceName"`
}

// A collection of values returned by VpcEndpointServices.
type VpcEndpointServicesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The name of service.
	ServiceName *string `pulumi:"serviceName"`
	// The collection of query.
	Services []VpcEndpointServicesService `pulumi:"services"`
	// Returns the total amount of the data list.
	TotalCount int `pulumi:"totalCount"`
}

func VpcEndpointServicesOutput(ctx *pulumi.Context, args VpcEndpointServicesOutputArgs, opts ...pulumi.InvokeOption) VpcEndpointServicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (VpcEndpointServicesResult, error) {
			args := v.(VpcEndpointServicesArgs)
			r, err := VpcEndpointServices(ctx, &args, opts...)
			var s VpcEndpointServicesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(VpcEndpointServicesResultOutput)
}

// A collection of arguments for invoking VpcEndpointServices.
type VpcEndpointServicesOutputArgs struct {
	// The IDs of vpc endpoint service.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of vpc endpoint service.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of vpc endpoint service.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (VpcEndpointServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointServicesArgs)(nil)).Elem()
}

// A collection of values returned by VpcEndpointServices.
type VpcEndpointServicesResultOutput struct{ *pulumi.OutputState }

func (VpcEndpointServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointServicesResult)(nil)).Elem()
}

func (o VpcEndpointServicesResultOutput) ToVpcEndpointServicesResultOutput() VpcEndpointServicesResultOutput {
	return o
}

func (o VpcEndpointServicesResultOutput) ToVpcEndpointServicesResultOutputWithContext(ctx context.Context) VpcEndpointServicesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o VpcEndpointServicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VpcEndpointServicesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o VpcEndpointServicesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcEndpointServicesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointServicesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointServicesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o VpcEndpointServicesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointServicesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The name of service.
func (o VpcEndpointServicesResultOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointServicesResult) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o VpcEndpointServicesResultOutput) Services() VpcEndpointServicesServiceArrayOutput {
	return o.ApplyT(func(v VpcEndpointServicesResult) []VpcEndpointServicesService { return v.Services }).(VpcEndpointServicesServiceArrayOutput)
}

// Returns the total amount of the data list.
func (o VpcEndpointServicesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v VpcEndpointServicesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(VpcEndpointServicesResultOutput{})
}
