// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage image
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ecs.NewImage(ctx, "foo", &ecs.ImageArgs{
//				CreateWholeImage: pulumi.Bool(false),
//				Description:      pulumi.String("acc-test"),
//				ImageName:        pulumi.String("acc-test-image"),
//				InstanceId:       pulumi.String("i-ydi2q1s7wgqc6ild****"),
//				ProjectName:      pulumi.String("default"),
//				Tags: ecs.ImageTagArray{
//					&ecs.ImageTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Image can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:ecs/image:Image default resource_id
// ```
type Image struct {
	pulumi.CustomResourceState

	// The architecture of Image.
	Architecture pulumi.StringOutput `pulumi:"architecture"`
	// The boot mode of the custom image. Valid values: `BIOS`, `UEFI`. This field is only effective when modifying the image.
	BootMode pulumi.StringOutput `pulumi:"bootMode"`
	// Whether to create whole image. Default is false. This field is only effective when creating a new custom image.
	CreateWholeImage pulumi.BoolPtrOutput `pulumi:"createWholeImage"`
	// The create time of Image.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The description of the custom image.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the custom image.
	ImageName pulumi.StringOutput `pulumi:"imageName"`
	// The instance id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	InstanceId pulumi.StringPtrOutput `pulumi:"instanceId"`
	// Whether the Image support cloud-init.
	IsSupportCloudInit pulumi.BoolOutput `pulumi:"isSupportCloudInit"`
	// The name of Image operating system.
	OsName pulumi.StringOutput `pulumi:"osName"`
	// The operating system type of Image.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// The platform of Image.
	Platform pulumi.StringOutput `pulumi:"platform"`
	// The platform version of Image.
	PlatformVersion pulumi.StringOutput `pulumi:"platformVersion"`
	// The project name of the custom image.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// The share mode of Image.
	ShareStatus pulumi.StringOutput `pulumi:"shareStatus"`
	// The size(GiB) of Image.
	Size pulumi.IntOutput `pulumi:"size"`
	// The snapshot group id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotGroupId pulumi.StringPtrOutput `pulumi:"snapshotGroupId"`
	// The snapshot id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotId pulumi.StringPtrOutput `pulumi:"snapshotId"`
	// The status of Image.
	Status pulumi.StringOutput `pulumi:"status"`
	// Tags.
	Tags ImageTagArrayOutput `pulumi:"tags"`
	// The update time of Image.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The visibility of Image.
	Visibility pulumi.StringOutput `pulumi:"visibility"`
}

// NewImage registers a new resource with the given unique name, arguments, and options.
func NewImage(ctx *pulumi.Context,
	name string, args *ImageArgs, opts ...pulumi.ResourceOption) (*Image, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageName == nil {
		return nil, errors.New("invalid value for required argument 'ImageName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Image
	err := ctx.RegisterResource("volcengine:ecs/image:Image", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImage gets an existing Image resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageState, opts ...pulumi.ResourceOption) (*Image, error) {
	var resource Image
	err := ctx.ReadResource("volcengine:ecs/image:Image", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Image resources.
type imageState struct {
	// The architecture of Image.
	Architecture *string `pulumi:"architecture"`
	// The boot mode of the custom image. Valid values: `BIOS`, `UEFI`. This field is only effective when modifying the image.
	BootMode *string `pulumi:"bootMode"`
	// Whether to create whole image. Default is false. This field is only effective when creating a new custom image.
	CreateWholeImage *bool `pulumi:"createWholeImage"`
	// The create time of Image.
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the custom image.
	Description *string `pulumi:"description"`
	// The name of the custom image.
	ImageName *string `pulumi:"imageName"`
	// The instance id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	InstanceId *string `pulumi:"instanceId"`
	// Whether the Image support cloud-init.
	IsSupportCloudInit *bool `pulumi:"isSupportCloudInit"`
	// The name of Image operating system.
	OsName *string `pulumi:"osName"`
	// The operating system type of Image.
	OsType *string `pulumi:"osType"`
	// The platform of Image.
	Platform *string `pulumi:"platform"`
	// The platform version of Image.
	PlatformVersion *string `pulumi:"platformVersion"`
	// The project name of the custom image.
	ProjectName *string `pulumi:"projectName"`
	// The share mode of Image.
	ShareStatus *string `pulumi:"shareStatus"`
	// The size(GiB) of Image.
	Size *int `pulumi:"size"`
	// The snapshot group id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotGroupId *string `pulumi:"snapshotGroupId"`
	// The snapshot id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotId *string `pulumi:"snapshotId"`
	// The status of Image.
	Status *string `pulumi:"status"`
	// Tags.
	Tags []ImageTag `pulumi:"tags"`
	// The update time of Image.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The visibility of Image.
	Visibility *string `pulumi:"visibility"`
}

type ImageState struct {
	// The architecture of Image.
	Architecture pulumi.StringPtrInput
	// The boot mode of the custom image. Valid values: `BIOS`, `UEFI`. This field is only effective when modifying the image.
	BootMode pulumi.StringPtrInput
	// Whether to create whole image. Default is false. This field is only effective when creating a new custom image.
	CreateWholeImage pulumi.BoolPtrInput
	// The create time of Image.
	CreatedAt pulumi.StringPtrInput
	// The description of the custom image.
	Description pulumi.StringPtrInput
	// The name of the custom image.
	ImageName pulumi.StringPtrInput
	// The instance id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	InstanceId pulumi.StringPtrInput
	// Whether the Image support cloud-init.
	IsSupportCloudInit pulumi.BoolPtrInput
	// The name of Image operating system.
	OsName pulumi.StringPtrInput
	// The operating system type of Image.
	OsType pulumi.StringPtrInput
	// The platform of Image.
	Platform pulumi.StringPtrInput
	// The platform version of Image.
	PlatformVersion pulumi.StringPtrInput
	// The project name of the custom image.
	ProjectName pulumi.StringPtrInput
	// The share mode of Image.
	ShareStatus pulumi.StringPtrInput
	// The size(GiB) of Image.
	Size pulumi.IntPtrInput
	// The snapshot group id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotGroupId pulumi.StringPtrInput
	// The snapshot id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotId pulumi.StringPtrInput
	// The status of Image.
	Status pulumi.StringPtrInput
	// Tags.
	Tags ImageTagArrayInput
	// The update time of Image.
	UpdatedAt pulumi.StringPtrInput
	// The visibility of Image.
	Visibility pulumi.StringPtrInput
}

func (ImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageState)(nil)).Elem()
}

type imageArgs struct {
	// The boot mode of the custom image. Valid values: `BIOS`, `UEFI`. This field is only effective when modifying the image.
	BootMode *string `pulumi:"bootMode"`
	// Whether to create whole image. Default is false. This field is only effective when creating a new custom image.
	CreateWholeImage *bool `pulumi:"createWholeImage"`
	// The description of the custom image.
	Description *string `pulumi:"description"`
	// The name of the custom image.
	ImageName string `pulumi:"imageName"`
	// The instance id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	InstanceId *string `pulumi:"instanceId"`
	// The project name of the custom image.
	ProjectName *string `pulumi:"projectName"`
	// The snapshot group id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotGroupId *string `pulumi:"snapshotGroupId"`
	// The snapshot id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotId *string `pulumi:"snapshotId"`
	// Tags.
	Tags []ImageTag `pulumi:"tags"`
}

// The set of arguments for constructing a Image resource.
type ImageArgs struct {
	// The boot mode of the custom image. Valid values: `BIOS`, `UEFI`. This field is only effective when modifying the image.
	BootMode pulumi.StringPtrInput
	// Whether to create whole image. Default is false. This field is only effective when creating a new custom image.
	CreateWholeImage pulumi.BoolPtrInput
	// The description of the custom image.
	Description pulumi.StringPtrInput
	// The name of the custom image.
	ImageName pulumi.StringInput
	// The instance id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	InstanceId pulumi.StringPtrInput
	// The project name of the custom image.
	ProjectName pulumi.StringPtrInput
	// The snapshot group id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotGroupId pulumi.StringPtrInput
	// The snapshot id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SnapshotId pulumi.StringPtrInput
	// Tags.
	Tags ImageTagArrayInput
}

func (ImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageArgs)(nil)).Elem()
}

type ImageInput interface {
	pulumi.Input

	ToImageOutput() ImageOutput
	ToImageOutputWithContext(ctx context.Context) ImageOutput
}

func (*Image) ElementType() reflect.Type {
	return reflect.TypeOf((**Image)(nil)).Elem()
}

func (i *Image) ToImageOutput() ImageOutput {
	return i.ToImageOutputWithContext(context.Background())
}

func (i *Image) ToImageOutputWithContext(ctx context.Context) ImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageOutput)
}

// ImageArrayInput is an input type that accepts ImageArray and ImageArrayOutput values.
// You can construct a concrete instance of `ImageArrayInput` via:
//
//	ImageArray{ ImageArgs{...} }
type ImageArrayInput interface {
	pulumi.Input

	ToImageArrayOutput() ImageArrayOutput
	ToImageArrayOutputWithContext(context.Context) ImageArrayOutput
}

type ImageArray []ImageInput

func (ImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Image)(nil)).Elem()
}

func (i ImageArray) ToImageArrayOutput() ImageArrayOutput {
	return i.ToImageArrayOutputWithContext(context.Background())
}

func (i ImageArray) ToImageArrayOutputWithContext(ctx context.Context) ImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageArrayOutput)
}

// ImageMapInput is an input type that accepts ImageMap and ImageMapOutput values.
// You can construct a concrete instance of `ImageMapInput` via:
//
//	ImageMap{ "key": ImageArgs{...} }
type ImageMapInput interface {
	pulumi.Input

	ToImageMapOutput() ImageMapOutput
	ToImageMapOutputWithContext(context.Context) ImageMapOutput
}

type ImageMap map[string]ImageInput

func (ImageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Image)(nil)).Elem()
}

func (i ImageMap) ToImageMapOutput() ImageMapOutput {
	return i.ToImageMapOutputWithContext(context.Background())
}

func (i ImageMap) ToImageMapOutputWithContext(ctx context.Context) ImageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageMapOutput)
}

type ImageOutput struct{ *pulumi.OutputState }

func (ImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Image)(nil)).Elem()
}

func (o ImageOutput) ToImageOutput() ImageOutput {
	return o
}

func (o ImageOutput) ToImageOutputWithContext(ctx context.Context) ImageOutput {
	return o
}

// The architecture of Image.
func (o ImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.Architecture }).(pulumi.StringOutput)
}

// The boot mode of the custom image. Valid values: `BIOS`, `UEFI`. This field is only effective when modifying the image.
func (o ImageOutput) BootMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.BootMode }).(pulumi.StringOutput)
}

// Whether to create whole image. Default is false. This field is only effective when creating a new custom image.
func (o ImageOutput) CreateWholeImage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.BoolPtrOutput { return v.CreateWholeImage }).(pulumi.BoolPtrOutput)
}

// The create time of Image.
func (o ImageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the custom image.
func (o ImageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the custom image.
func (o ImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.ImageName }).(pulumi.StringOutput)
}

// The instance id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o ImageOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Whether the Image support cloud-init.
func (o ImageOutput) IsSupportCloudInit() pulumi.BoolOutput {
	return o.ApplyT(func(v *Image) pulumi.BoolOutput { return v.IsSupportCloudInit }).(pulumi.BoolOutput)
}

// The name of Image operating system.
func (o ImageOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.OsName }).(pulumi.StringOutput)
}

// The operating system type of Image.
func (o ImageOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// The platform of Image.
func (o ImageOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

// The platform version of Image.
func (o ImageOutput) PlatformVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.PlatformVersion }).(pulumi.StringOutput)
}

// The project name of the custom image.
func (o ImageOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// The share mode of Image.
func (o ImageOutput) ShareStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.ShareStatus }).(pulumi.StringOutput)
}

// The size(GiB) of Image.
func (o ImageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v *Image) pulumi.IntOutput { return v.Size }).(pulumi.IntOutput)
}

// The snapshot group id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o ImageOutput) SnapshotGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.SnapshotGroupId }).(pulumi.StringPtrOutput)
}

// The snapshot id of the custom image. Only one of `instance_id, snapshot_id, snapshotGroupId` can be specified.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o ImageOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Image) pulumi.StringPtrOutput { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The status of Image.
func (o ImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o ImageOutput) Tags() ImageTagArrayOutput {
	return o.ApplyT(func(v *Image) ImageTagArrayOutput { return v.Tags }).(ImageTagArrayOutput)
}

// The update time of Image.
func (o ImageOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The visibility of Image.
func (o ImageOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v *Image) pulumi.StringOutput { return v.Visibility }).(pulumi.StringOutput)
}

type ImageArrayOutput struct{ *pulumi.OutputState }

func (ImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Image)(nil)).Elem()
}

func (o ImageArrayOutput) ToImageArrayOutput() ImageArrayOutput {
	return o
}

func (o ImageArrayOutput) ToImageArrayOutputWithContext(ctx context.Context) ImageArrayOutput {
	return o
}

func (o ImageArrayOutput) Index(i pulumi.IntInput) ImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Image {
		return vs[0].([]*Image)[vs[1].(int)]
	}).(ImageOutput)
}

type ImageMapOutput struct{ *pulumi.OutputState }

func (ImageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Image)(nil)).Elem()
}

func (o ImageMapOutput) ToImageMapOutput() ImageMapOutput {
	return o
}

func (o ImageMapOutput) ToImageMapOutputWithContext(ctx context.Context) ImageMapOutput {
	return o
}

func (o ImageMapOutput) MapIndex(k pulumi.StringInput) ImageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Image {
		return vs[0].(map[string]*Image)[vs[1].(string)]
	}).(ImageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageInput)(nil)).Elem(), &Image{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageArrayInput)(nil)).Elem(), ImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageMapInput)(nil)).Elem(), ImageMap{})
	pulumi.RegisterOutputType(ImageOutput{})
	pulumi.RegisterOutputType(ImageArrayOutput{})
	pulumi.RegisterOutputType(ImageMapOutput{})
}
