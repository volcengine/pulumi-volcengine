// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage ecs deployment set associate
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.Zones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     *pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooSecurityGroup, err := vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
//				SecurityGroupName: pulumi.String("acc-test-security-group"),
//				VpcId:             fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooImages, err := ecs.Images(ctx, &ecs.ImagesArgs{
//				OsType:         pulumi.StringRef("Linux"),
//				Visibility:     pulumi.StringRef("public"),
//				InstanceTypeId: pulumi.StringRef("ecs.g1.large"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			fooInstance, err := ecs.NewInstance(ctx, "fooInstance", &ecs.InstanceArgs{
//				InstanceName:       pulumi.String("acc-test-ecs"),
//				ImageId:            *pulumi.String(fooImages.Images[0].ImageId),
//				InstanceType:       pulumi.String("ecs.g1.large"),
//				Password:           pulumi.String("93f0cb0614Aab12"),
//				InstanceChargeType: pulumi.String("PostPaid"),
//				SystemVolumeType:   pulumi.String("ESSD_PL0"),
//				SystemVolumeSize:   pulumi.Int(40),
//				SubnetId:           fooSubnet.ID(),
//				SecurityGroupIds: pulumi.StringArray{
//					fooSecurityGroup.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooState, err := ecs.NewState(ctx, "fooState", &ecs.StateArgs{
//				InstanceId:  fooInstance.ID(),
//				Action:      pulumi.String("Stop"),
//				StoppedMode: pulumi.String("KeepCharging"),
//			})
//			if err != nil {
//				return err
//			}
//			fooDeploymentSet, err := ecs.NewDeploymentSet(ctx, "fooDeploymentSet", &ecs.DeploymentSetArgs{
//				DeploymentSetName: pulumi.String("acc-test-ecs-ds"),
//				Description:       pulumi.String("acc-test"),
//				Granularity:       pulumi.String("switch"),
//				Strategy:          pulumi.String("Availability"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ecs.NewDeploymentSetAssociate(ctx, "fooDeploymentSetAssociate", &ecs.DeploymentSetAssociateArgs{
//				DeploymentSetId: fooDeploymentSet.ID(),
//				InstanceId:      fooInstance.ID(),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				fooState,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ECS deployment set associate can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:ecs/deploymentSetAssociate:DeploymentSetAssociate default dps-ybti5tkpkv2udbfolrft:i-mizl7m1kqccg5smt1bdpijuj
//
// ```
type DeploymentSetAssociate struct {
	pulumi.CustomResourceState

	// The ID of ECS DeploymentSet Associate.
	DeploymentSetId pulumi.StringOutput `pulumi:"deploymentSetId"`
	// The ID of ECS Instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewDeploymentSetAssociate registers a new resource with the given unique name, arguments, and options.
func NewDeploymentSetAssociate(ctx *pulumi.Context,
	name string, args *DeploymentSetAssociateArgs, opts ...pulumi.ResourceOption) (*DeploymentSetAssociate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeploymentSetId == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentSetId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DeploymentSetAssociate
	err := ctx.RegisterResource("volcengine:ecs/deploymentSetAssociate:DeploymentSetAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentSetAssociate gets an existing DeploymentSetAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentSetAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentSetAssociateState, opts ...pulumi.ResourceOption) (*DeploymentSetAssociate, error) {
	var resource DeploymentSetAssociate
	err := ctx.ReadResource("volcengine:ecs/deploymentSetAssociate:DeploymentSetAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentSetAssociate resources.
type deploymentSetAssociateState struct {
	// The ID of ECS DeploymentSet Associate.
	DeploymentSetId *string `pulumi:"deploymentSetId"`
	// The ID of ECS Instance.
	InstanceId *string `pulumi:"instanceId"`
}

type DeploymentSetAssociateState struct {
	// The ID of ECS DeploymentSet Associate.
	DeploymentSetId pulumi.StringPtrInput
	// The ID of ECS Instance.
	InstanceId pulumi.StringPtrInput
}

func (DeploymentSetAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentSetAssociateState)(nil)).Elem()
}

type deploymentSetAssociateArgs struct {
	// The ID of ECS DeploymentSet Associate.
	DeploymentSetId string `pulumi:"deploymentSetId"`
	// The ID of ECS Instance.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a DeploymentSetAssociate resource.
type DeploymentSetAssociateArgs struct {
	// The ID of ECS DeploymentSet Associate.
	DeploymentSetId pulumi.StringInput
	// The ID of ECS Instance.
	InstanceId pulumi.StringInput
}

func (DeploymentSetAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentSetAssociateArgs)(nil)).Elem()
}

type DeploymentSetAssociateInput interface {
	pulumi.Input

	ToDeploymentSetAssociateOutput() DeploymentSetAssociateOutput
	ToDeploymentSetAssociateOutputWithContext(ctx context.Context) DeploymentSetAssociateOutput
}

func (*DeploymentSetAssociate) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSetAssociate)(nil)).Elem()
}

func (i *DeploymentSetAssociate) ToDeploymentSetAssociateOutput() DeploymentSetAssociateOutput {
	return i.ToDeploymentSetAssociateOutputWithContext(context.Background())
}

func (i *DeploymentSetAssociate) ToDeploymentSetAssociateOutputWithContext(ctx context.Context) DeploymentSetAssociateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSetAssociateOutput)
}

// DeploymentSetAssociateArrayInput is an input type that accepts DeploymentSetAssociateArray and DeploymentSetAssociateArrayOutput values.
// You can construct a concrete instance of `DeploymentSetAssociateArrayInput` via:
//
//	DeploymentSetAssociateArray{ DeploymentSetAssociateArgs{...} }
type DeploymentSetAssociateArrayInput interface {
	pulumi.Input

	ToDeploymentSetAssociateArrayOutput() DeploymentSetAssociateArrayOutput
	ToDeploymentSetAssociateArrayOutputWithContext(context.Context) DeploymentSetAssociateArrayOutput
}

type DeploymentSetAssociateArray []DeploymentSetAssociateInput

func (DeploymentSetAssociateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentSetAssociate)(nil)).Elem()
}

func (i DeploymentSetAssociateArray) ToDeploymentSetAssociateArrayOutput() DeploymentSetAssociateArrayOutput {
	return i.ToDeploymentSetAssociateArrayOutputWithContext(context.Background())
}

func (i DeploymentSetAssociateArray) ToDeploymentSetAssociateArrayOutputWithContext(ctx context.Context) DeploymentSetAssociateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSetAssociateArrayOutput)
}

// DeploymentSetAssociateMapInput is an input type that accepts DeploymentSetAssociateMap and DeploymentSetAssociateMapOutput values.
// You can construct a concrete instance of `DeploymentSetAssociateMapInput` via:
//
//	DeploymentSetAssociateMap{ "key": DeploymentSetAssociateArgs{...} }
type DeploymentSetAssociateMapInput interface {
	pulumi.Input

	ToDeploymentSetAssociateMapOutput() DeploymentSetAssociateMapOutput
	ToDeploymentSetAssociateMapOutputWithContext(context.Context) DeploymentSetAssociateMapOutput
}

type DeploymentSetAssociateMap map[string]DeploymentSetAssociateInput

func (DeploymentSetAssociateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentSetAssociate)(nil)).Elem()
}

func (i DeploymentSetAssociateMap) ToDeploymentSetAssociateMapOutput() DeploymentSetAssociateMapOutput {
	return i.ToDeploymentSetAssociateMapOutputWithContext(context.Background())
}

func (i DeploymentSetAssociateMap) ToDeploymentSetAssociateMapOutputWithContext(ctx context.Context) DeploymentSetAssociateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentSetAssociateMapOutput)
}

type DeploymentSetAssociateOutput struct{ *pulumi.OutputState }

func (DeploymentSetAssociateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentSetAssociate)(nil)).Elem()
}

func (o DeploymentSetAssociateOutput) ToDeploymentSetAssociateOutput() DeploymentSetAssociateOutput {
	return o
}

func (o DeploymentSetAssociateOutput) ToDeploymentSetAssociateOutputWithContext(ctx context.Context) DeploymentSetAssociateOutput {
	return o
}

// The ID of ECS DeploymentSet Associate.
func (o DeploymentSetAssociateOutput) DeploymentSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentSetAssociate) pulumi.StringOutput { return v.DeploymentSetId }).(pulumi.StringOutput)
}

// The ID of ECS Instance.
func (o DeploymentSetAssociateOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentSetAssociate) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type DeploymentSetAssociateArrayOutput struct{ *pulumi.OutputState }

func (DeploymentSetAssociateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentSetAssociate)(nil)).Elem()
}

func (o DeploymentSetAssociateArrayOutput) ToDeploymentSetAssociateArrayOutput() DeploymentSetAssociateArrayOutput {
	return o
}

func (o DeploymentSetAssociateArrayOutput) ToDeploymentSetAssociateArrayOutputWithContext(ctx context.Context) DeploymentSetAssociateArrayOutput {
	return o
}

func (o DeploymentSetAssociateArrayOutput) Index(i pulumi.IntInput) DeploymentSetAssociateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeploymentSetAssociate {
		return vs[0].([]*DeploymentSetAssociate)[vs[1].(int)]
	}).(DeploymentSetAssociateOutput)
}

type DeploymentSetAssociateMapOutput struct{ *pulumi.OutputState }

func (DeploymentSetAssociateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentSetAssociate)(nil)).Elem()
}

func (o DeploymentSetAssociateMapOutput) ToDeploymentSetAssociateMapOutput() DeploymentSetAssociateMapOutput {
	return o
}

func (o DeploymentSetAssociateMapOutput) ToDeploymentSetAssociateMapOutputWithContext(ctx context.Context) DeploymentSetAssociateMapOutput {
	return o
}

func (o DeploymentSetAssociateMapOutput) MapIndex(k pulumi.StringInput) DeploymentSetAssociateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeploymentSetAssociate {
		return vs[0].(map[string]*DeploymentSetAssociate)[vs[1].(string)]
	}).(DeploymentSetAssociateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSetAssociateInput)(nil)).Elem(), &DeploymentSetAssociate{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSetAssociateArrayInput)(nil)).Elem(), DeploymentSetAssociateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentSetAssociateMapInput)(nil)).Elem(), DeploymentSetAssociateMap{})
	pulumi.RegisterOutputType(DeploymentSetAssociateOutput{})
	pulumi.RegisterOutputType(DeploymentSetAssociateArrayOutput{})
	pulumi.RegisterOutputType(DeploymentSetAssociateMapOutput{})
}
