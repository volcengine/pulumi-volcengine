// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of ecs available resources
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ecs.GetAvailableResources(ctx, &ecs.GetAvailableResourcesArgs{
//				DestinationResource: "InstanceType",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAvailableResources(ctx *pulumi.Context, args *GetAvailableResourcesArgs, opts ...pulumi.InvokeOption) (*GetAvailableResourcesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAvailableResourcesResult
	err := ctx.Invoke("volcengine:ecs/getAvailableResources:getAvailableResources", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAvailableResources.
type GetAvailableResourcesArgs struct {
	// The type of resource to query. Valid values: `InstanceType`, `DedicatedHost`.
	DestinationResource string `pulumi:"destinationResource"`
	// The charge type of instance. Valid values: `PostPaid`, `PrePaid`, `ReservedInstance`. Default is `PostPaid`.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The id of instance type.
	InstanceTypeId *string `pulumi:"instanceTypeId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The spot strategy of PostPaid instance. Valid values: `NoSpot`, `SpotAsPriceGo`. Default is `NoSpot`.
	SpotStrategy *string `pulumi:"spotStrategy"`
	// The id of available zone.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getAvailableResources.
type GetAvailableResourcesResult struct {
	// The collection of query.
	AvailableZones      []GetAvailableResourcesAvailableZone `pulumi:"availableZones"`
	DestinationResource string                               `pulumi:"destinationResource"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string  `pulumi:"id"`
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	InstanceTypeId     *string `pulumi:"instanceTypeId"`
	OutputFile         *string `pulumi:"outputFile"`
	SpotStrategy       *string `pulumi:"spotStrategy"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The id of the available zone.
	ZoneId *string `pulumi:"zoneId"`
}

func GetAvailableResourcesOutput(ctx *pulumi.Context, args GetAvailableResourcesOutputArgs, opts ...pulumi.InvokeOption) GetAvailableResourcesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAvailableResourcesResult, error) {
			args := v.(GetAvailableResourcesArgs)
			r, err := GetAvailableResources(ctx, &args, opts...)
			var s GetAvailableResourcesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAvailableResourcesResultOutput)
}

// A collection of arguments for invoking getAvailableResources.
type GetAvailableResourcesOutputArgs struct {
	// The type of resource to query. Valid values: `InstanceType`, `DedicatedHost`.
	DestinationResource pulumi.StringInput `pulumi:"destinationResource"`
	// The charge type of instance. Valid values: `PostPaid`, `PrePaid`, `ReservedInstance`. Default is `PostPaid`.
	InstanceChargeType pulumi.StringPtrInput `pulumi:"instanceChargeType"`
	// The id of instance type.
	InstanceTypeId pulumi.StringPtrInput `pulumi:"instanceTypeId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The spot strategy of PostPaid instance. Valid values: `NoSpot`, `SpotAsPriceGo`. Default is `NoSpot`.
	SpotStrategy pulumi.StringPtrInput `pulumi:"spotStrategy"`
	// The id of available zone.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (GetAvailableResourcesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableResourcesArgs)(nil)).Elem()
}

// A collection of values returned by getAvailableResources.
type GetAvailableResourcesResultOutput struct{ *pulumi.OutputState }

func (GetAvailableResourcesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailableResourcesResult)(nil)).Elem()
}

func (o GetAvailableResourcesResultOutput) ToGetAvailableResourcesResultOutput() GetAvailableResourcesResultOutput {
	return o
}

func (o GetAvailableResourcesResultOutput) ToGetAvailableResourcesResultOutputWithContext(ctx context.Context) GetAvailableResourcesResultOutput {
	return o
}

// The collection of query.
func (o GetAvailableResourcesResultOutput) AvailableZones() GetAvailableResourcesAvailableZoneArrayOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) []GetAvailableResourcesAvailableZone { return v.AvailableZones }).(GetAvailableResourcesAvailableZoneArrayOutput)
}

func (o GetAvailableResourcesResultOutput) DestinationResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) string { return v.DestinationResource }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAvailableResourcesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAvailableResourcesResultOutput) InstanceChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) *string { return v.InstanceChargeType }).(pulumi.StringPtrOutput)
}

func (o GetAvailableResourcesResultOutput) InstanceTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) *string { return v.InstanceTypeId }).(pulumi.StringPtrOutput)
}

func (o GetAvailableResourcesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAvailableResourcesResultOutput) SpotStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) *string { return v.SpotStrategy }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetAvailableResourcesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The id of the available zone.
func (o GetAvailableResourcesResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAvailableResourcesResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAvailableResourcesResultOutput{})
}
