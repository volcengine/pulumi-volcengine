// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of ecs deployment sets
// ## Example Usage
//
// ```go
// package main
//
// import (
// "fmt"
//
// "github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// "github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// var fooDeploymentSet []*ecs.DeploymentSet
//
//	for index := 0; index < 3; index++ {
//	    key0 := index
//	    val0 := index
//
// __res, err := ecs.NewDeploymentSet(ctx, fmt.Sprintf("fooDeploymentSet-%v", key0), &ecs.DeploymentSetArgs{
// DeploymentSetName: pulumi.String(fmt.Sprintf("acc-test-ecs-ds-%v", val0)),
// Description: pulumi.String("acc-test"),
// Granularity: pulumi.String("switch"),
// Strategy: pulumi.String("Availability"),
// })
// if err != nil {
// return err
// }
// fooDeploymentSet = append(fooDeploymentSet, __res)
// }
// _ = ecs.DeploymentSetsOutput(ctx, ecs.DeploymentSetsOutputArgs{
// Granularity: pulumi.String("switch"),
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:ecs-deploymentSets:DeploymentSets.pp:12,17-39),
// }, nil);
// return nil
// })
// }
// ```
func DeploymentSets(ctx *pulumi.Context, args *DeploymentSetsArgs, opts ...pulumi.InvokeOption) (*DeploymentSetsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv DeploymentSetsResult
	err := ctx.Invoke("volcengine:ecs/deploymentSets:DeploymentSets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking DeploymentSets.
type DeploymentSetsArgs struct {
	// The granularity of ECS DeploymentSet.Valid values: switch, host, rack.
	Granularity *string `pulumi:"granularity"`
	// A list of ECS DeploymentSet IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of ECS DeploymentSet.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by DeploymentSets.
type DeploymentSetsResult struct {
	// The collection of ECS DeploymentSet query.
	DeploymentSets []DeploymentSetsDeploymentSet `pulumi:"deploymentSets"`
	// The granularity of ECS DeploymentSet.
	Granularity *string `pulumi:"granularity"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The total count of ECS DeploymentSet query.
	TotalCount int `pulumi:"totalCount"`
}

func DeploymentSetsOutput(ctx *pulumi.Context, args DeploymentSetsOutputArgs, opts ...pulumi.InvokeOption) DeploymentSetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (DeploymentSetsResult, error) {
			args := v.(DeploymentSetsArgs)
			r, err := DeploymentSets(ctx, &args, opts...)
			var s DeploymentSetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(DeploymentSetsResultOutput)
}

// A collection of arguments for invoking DeploymentSets.
type DeploymentSetsOutputArgs struct {
	// The granularity of ECS DeploymentSet.Valid values: switch, host, rack.
	Granularity pulumi.StringPtrInput `pulumi:"granularity"`
	// A list of ECS DeploymentSet IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of ECS DeploymentSet.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (DeploymentSetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSetsArgs)(nil)).Elem()
}

// A collection of values returned by DeploymentSets.
type DeploymentSetsResultOutput struct{ *pulumi.OutputState }

func (DeploymentSetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentSetsResult)(nil)).Elem()
}

func (o DeploymentSetsResultOutput) ToDeploymentSetsResultOutput() DeploymentSetsResultOutput {
	return o
}

func (o DeploymentSetsResultOutput) ToDeploymentSetsResultOutputWithContext(ctx context.Context) DeploymentSetsResultOutput {
	return o
}

// The collection of ECS DeploymentSet query.
func (o DeploymentSetsResultOutput) DeploymentSets() DeploymentSetsDeploymentSetArrayOutput {
	return o.ApplyT(func(v DeploymentSetsResult) []DeploymentSetsDeploymentSet { return v.DeploymentSets }).(DeploymentSetsDeploymentSetArrayOutput)
}

// The granularity of ECS DeploymentSet.
func (o DeploymentSetsResultOutput) Granularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSetsResult) *string { return v.Granularity }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o DeploymentSetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentSetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o DeploymentSetsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentSetsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o DeploymentSetsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSetsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o DeploymentSetsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentSetsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of ECS DeploymentSet query.
func (o DeploymentSetsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v DeploymentSetsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(DeploymentSetsResultOutput{})
}
