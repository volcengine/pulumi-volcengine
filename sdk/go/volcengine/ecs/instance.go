// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.Zones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     *pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooSecurityGroup, err := vpc.NewSecurityGroup(ctx, "fooSecurityGroup", &vpc.SecurityGroupArgs{
//				SecurityGroupName: pulumi.String("acc-test-security-group"),
//				VpcId:             fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooImages, err := ecs.Images(ctx, &ecs.ImagesArgs{
//				OsType:         pulumi.StringRef("Linux"),
//				Visibility:     pulumi.StringRef("public"),
//				InstanceTypeId: pulumi.StringRef("ecs.g1.large"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ecs.NewInstance(ctx, "fooInstance", &ecs.InstanceArgs{
//				InstanceName:       pulumi.String("acc-test-ecs"),
//				Description:        pulumi.String("acc-test"),
//				HostName:           pulumi.String("tf-acc-test"),
//				ImageId:            *pulumi.String(fooImages.Images[0].ImageId),
//				InstanceType:       pulumi.String("ecs.g1.large"),
//				Password:           pulumi.String("93f0cb0614Aab12"),
//				InstanceChargeType: pulumi.String("PostPaid"),
//				SystemVolumeType:   pulumi.String("ESSD_PL0"),
//				SystemVolumeSize:   pulumi.Int(40),
//				DataVolumes: ecs.InstanceDataVolumeArray{
//					&ecs.InstanceDataVolumeArgs{
//						VolumeType:         pulumi.String("ESSD_PL0"),
//						Size:               pulumi.Int(50),
//						DeleteWithInstance: pulumi.Bool(true),
//					},
//				},
//				SubnetId: fooSubnet.ID(),
//				SecurityGroupIds: pulumi.StringArray{
//					fooSecurityGroup.ID(),
//				},
//				ProjectName: pulumi.String("default"),
//				Tags: ecs.InstanceTagArray{
//					&ecs.InstanceTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ECS Instance can be imported using the id, e.g. If Import,The data_volumes is sort by volume name
//
// ```sh
//
//	$ pulumi import volcengine:ecs/instance:Instance default i-mizl7m1kqccg5smt1bdpijuj
//
// ```
type Instance struct {
	pulumi.CustomResourceState

	// The auto renew flag of ECS instance.Only effective when instanceChargeType is PrePaid. Default is true.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// The auto renew period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 1.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenewPeriod pulumi.IntPtrOutput `pulumi:"autoRenewPeriod"`
	// The option of cpu.
	CpuOptions InstanceCpuOptionsOutput `pulumi:"cpuOptions"`
	// The number of ECS instance CPU cores.
	Cpus pulumi.IntOutput `pulumi:"cpus"`
	// The create time of ECS instance.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The data volumes collection of  ECS instance.
	DataVolumes InstanceDataVolumeArrayOutput `pulumi:"dataVolumes"`
	// The ID of Ecs Deployment Set.
	DeploymentSetId pulumi.StringOutput `pulumi:"deploymentSetId"`
	// The description of ECS instance.
	Description pulumi.StringOutput `pulumi:"description"`
	// The GPU device info of Instance.
	GpuDevices InstanceGpuDeviceArrayOutput `pulumi:"gpuDevices"`
	// The host name of ECS instance.
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// The hpc cluster ID of ECS instance.
	HpcClusterId pulumi.StringPtrOutput `pulumi:"hpcClusterId"`
	// The Image ID of ECS instance.
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// The include data volumes flag of ECS instance.Only effective when change instance charge type.include_data_volumes.
	IncludeDataVolumes pulumi.BoolPtrOutput `pulumi:"includeDataVolumes"`
	// The charge type of ECS instance, the value can be `PrePaid` or `PostPaid`.
	InstanceChargeType pulumi.StringOutput `pulumi:"instanceChargeType"`
	// The ID of ECS instance.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The name of ECS instance.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The instance type of ECS instance.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 1 to 10.
	Ipv6AddressCount pulumi.IntOutput `pulumi:"ipv6AddressCount"`
	// One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
	// You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
	Ipv6Addresses pulumi.StringArrayOutput `pulumi:"ipv6Addresses"`
	// The Flag of GPU instance.If the instance is GPU,The flag is true.
	IsGpu pulumi.BoolOutput `pulumi:"isGpu"`
	// Whether to keep the mirror settings. Only custom images and shared images support this field.
	// When the value of this field is true, the Password and KeyPairName cannot be specified.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	KeepImageCredential pulumi.BoolPtrOutput `pulumi:"keepImageCredential"`
	// The ssh key ID of ECS instance.
	KeyPairId pulumi.StringOutput `pulumi:"keyPairId"`
	// The ssh key name of ECS instance.
	KeyPairName pulumi.StringOutput `pulumi:"keyPairName"`
	// The memory size of ECS instance.
	MemorySize pulumi.IntOutput `pulumi:"memorySize"`
	// The ID of primary networkInterface.
	NetworkInterfaceId pulumi.StringOutput `pulumi:"networkInterfaceId"`
	// The os name of ECS instance.
	OsName pulumi.StringOutput `pulumi:"osName"`
	// The os type of ECS instance.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// The password of ECS instance.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 12. Unit is Month.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The private ip address of primary networkInterface.
	PrimaryIpAddress pulumi.StringOutput `pulumi:"primaryIpAddress"`
	// The ProjectName of the ecs instance.
	ProjectName pulumi.StringPtrOutput `pulumi:"projectName"`
	// The secondary networkInterface detail collection of ECS instance.
	SecondaryNetworkInterfaces InstanceSecondaryNetworkInterfaceArrayOutput `pulumi:"secondaryNetworkInterfaces"`
	// The security enhancement strategy of ECS instance. The value can be Active or InActive. Default is Active.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SecurityEnhancementStrategy pulumi.StringPtrOutput `pulumi:"securityEnhancementStrategy"`
	// The security group ID set of primary networkInterface.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The spot strategy will autoremove instance in some conditions.Please make sure you can maintain instance lifecycle before auto remove.The spot strategy of ECS instance, the value can be `NoSpot` or `SpotAsPriceGo`.
	SpotStrategy pulumi.StringOutput `pulumi:"spotStrategy"`
	// The status of ECS instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// The stop mode of ECS instance.
	StoppedMode pulumi.StringOutput `pulumi:"stoppedMode"`
	// The subnet ID of primary networkInterface.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The ID of system volume.
	SystemVolumeId pulumi.StringOutput `pulumi:"systemVolumeId"`
	// The size of system volume. The value range of the system volume size is ESSD_PL0: 20~2048, ESSD_FlexPL: 20~2048, PTSSD: 10~500.
	SystemVolumeSize pulumi.IntOutput `pulumi:"systemVolumeSize"`
	// The type of system volume, the value is `PTSSD` or `ESSD_PL0` or `ESSD_PL1` or `ESSD_PL2` or `ESSD_FlexPL`.
	SystemVolumeType pulumi.StringOutput `pulumi:"systemVolumeType"`
	// Tags.
	Tags InstanceTagArrayOutput `pulumi:"tags"`
	// The update time of ECS instance.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The user data of ECS instance, this field must be encrypted with base64.
	UserData pulumi.StringOutput `pulumi:"userData"`
	// The VPC ID of ECS instance.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The available zone ID of ECS instance.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ImageId == nil {
		return nil, errors.New("invalid value for required argument 'ImageId'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.SystemVolumeSize == nil {
		return nil, errors.New("invalid value for required argument 'SystemVolumeSize'")
	}
	if args.SystemVolumeType == nil {
		return nil, errors.New("invalid value for required argument 'SystemVolumeType'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("volcengine:ecs/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("volcengine:ecs/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// The auto renew flag of ECS instance.Only effective when instanceChargeType is PrePaid. Default is true.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The auto renew period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 1.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// The option of cpu.
	CpuOptions *InstanceCpuOptions `pulumi:"cpuOptions"`
	// The number of ECS instance CPU cores.
	Cpus *int `pulumi:"cpus"`
	// The create time of ECS instance.
	CreatedAt *string `pulumi:"createdAt"`
	// The data volumes collection of  ECS instance.
	DataVolumes []InstanceDataVolume `pulumi:"dataVolumes"`
	// The ID of Ecs Deployment Set.
	DeploymentSetId *string `pulumi:"deploymentSetId"`
	// The description of ECS instance.
	Description *string `pulumi:"description"`
	// The GPU device info of Instance.
	GpuDevices []InstanceGpuDevice `pulumi:"gpuDevices"`
	// The host name of ECS instance.
	HostName *string `pulumi:"hostName"`
	// The hpc cluster ID of ECS instance.
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// The Image ID of ECS instance.
	ImageId *string `pulumi:"imageId"`
	// The include data volumes flag of ECS instance.Only effective when change instance charge type.include_data_volumes.
	IncludeDataVolumes *bool `pulumi:"includeDataVolumes"`
	// The charge type of ECS instance, the value can be `PrePaid` or `PostPaid`.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The ID of ECS instance.
	InstanceId *string `pulumi:"instanceId"`
	// The name of ECS instance.
	InstanceName *string `pulumi:"instanceName"`
	// The instance type of ECS instance.
	InstanceType *string `pulumi:"instanceType"`
	// The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 1 to 10.
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
	// You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// The Flag of GPU instance.If the instance is GPU,The flag is true.
	IsGpu *bool `pulumi:"isGpu"`
	// Whether to keep the mirror settings. Only custom images and shared images support this field.
	// When the value of this field is true, the Password and KeyPairName cannot be specified.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	KeepImageCredential *bool `pulumi:"keepImageCredential"`
	// The ssh key ID of ECS instance.
	KeyPairId *string `pulumi:"keyPairId"`
	// The ssh key name of ECS instance.
	KeyPairName *string `pulumi:"keyPairName"`
	// The memory size of ECS instance.
	MemorySize *int `pulumi:"memorySize"`
	// The ID of primary networkInterface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The os name of ECS instance.
	OsName *string `pulumi:"osName"`
	// The os type of ECS instance.
	OsType *string `pulumi:"osType"`
	// The password of ECS instance.
	Password *string `pulumi:"password"`
	// The period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 12. Unit is Month.
	Period *int `pulumi:"period"`
	// The private ip address of primary networkInterface.
	PrimaryIpAddress *string `pulumi:"primaryIpAddress"`
	// The ProjectName of the ecs instance.
	ProjectName *string `pulumi:"projectName"`
	// The secondary networkInterface detail collection of ECS instance.
	SecondaryNetworkInterfaces []InstanceSecondaryNetworkInterface `pulumi:"secondaryNetworkInterfaces"`
	// The security enhancement strategy of ECS instance. The value can be Active or InActive. Default is Active.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SecurityEnhancementStrategy *string `pulumi:"securityEnhancementStrategy"`
	// The security group ID set of primary networkInterface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The spot strategy will autoremove instance in some conditions.Please make sure you can maintain instance lifecycle before auto remove.The spot strategy of ECS instance, the value can be `NoSpot` or `SpotAsPriceGo`.
	SpotStrategy *string `pulumi:"spotStrategy"`
	// The status of ECS instance.
	Status *string `pulumi:"status"`
	// The stop mode of ECS instance.
	StoppedMode *string `pulumi:"stoppedMode"`
	// The subnet ID of primary networkInterface.
	SubnetId *string `pulumi:"subnetId"`
	// The ID of system volume.
	SystemVolumeId *string `pulumi:"systemVolumeId"`
	// The size of system volume. The value range of the system volume size is ESSD_PL0: 20~2048, ESSD_FlexPL: 20~2048, PTSSD: 10~500.
	SystemVolumeSize *int `pulumi:"systemVolumeSize"`
	// The type of system volume, the value is `PTSSD` or `ESSD_PL0` or `ESSD_PL1` or `ESSD_PL2` or `ESSD_FlexPL`.
	SystemVolumeType *string `pulumi:"systemVolumeType"`
	// Tags.
	Tags []InstanceTag `pulumi:"tags"`
	// The update time of ECS instance.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The user data of ECS instance, this field must be encrypted with base64.
	UserData *string `pulumi:"userData"`
	// The VPC ID of ECS instance.
	VpcId *string `pulumi:"vpcId"`
	// The available zone ID of ECS instance.
	ZoneId *string `pulumi:"zoneId"`
}

type InstanceState struct {
	// The auto renew flag of ECS instance.Only effective when instanceChargeType is PrePaid. Default is true.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrInput
	// The auto renew period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 1.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenewPeriod pulumi.IntPtrInput
	// The option of cpu.
	CpuOptions InstanceCpuOptionsPtrInput
	// The number of ECS instance CPU cores.
	Cpus pulumi.IntPtrInput
	// The create time of ECS instance.
	CreatedAt pulumi.StringPtrInput
	// The data volumes collection of  ECS instance.
	DataVolumes InstanceDataVolumeArrayInput
	// The ID of Ecs Deployment Set.
	DeploymentSetId pulumi.StringPtrInput
	// The description of ECS instance.
	Description pulumi.StringPtrInput
	// The GPU device info of Instance.
	GpuDevices InstanceGpuDeviceArrayInput
	// The host name of ECS instance.
	HostName pulumi.StringPtrInput
	// The hpc cluster ID of ECS instance.
	HpcClusterId pulumi.StringPtrInput
	// The Image ID of ECS instance.
	ImageId pulumi.StringPtrInput
	// The include data volumes flag of ECS instance.Only effective when change instance charge type.include_data_volumes.
	IncludeDataVolumes pulumi.BoolPtrInput
	// The charge type of ECS instance, the value can be `PrePaid` or `PostPaid`.
	InstanceChargeType pulumi.StringPtrInput
	// The ID of ECS instance.
	InstanceId pulumi.StringPtrInput
	// The name of ECS instance.
	InstanceName pulumi.StringPtrInput
	// The instance type of ECS instance.
	InstanceType pulumi.StringPtrInput
	// The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 1 to 10.
	Ipv6AddressCount pulumi.IntPtrInput
	// One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
	// You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
	Ipv6Addresses pulumi.StringArrayInput
	// The Flag of GPU instance.If the instance is GPU,The flag is true.
	IsGpu pulumi.BoolPtrInput
	// Whether to keep the mirror settings. Only custom images and shared images support this field.
	// When the value of this field is true, the Password and KeyPairName cannot be specified.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	KeepImageCredential pulumi.BoolPtrInput
	// The ssh key ID of ECS instance.
	KeyPairId pulumi.StringPtrInput
	// The ssh key name of ECS instance.
	KeyPairName pulumi.StringPtrInput
	// The memory size of ECS instance.
	MemorySize pulumi.IntPtrInput
	// The ID of primary networkInterface.
	NetworkInterfaceId pulumi.StringPtrInput
	// The os name of ECS instance.
	OsName pulumi.StringPtrInput
	// The os type of ECS instance.
	OsType pulumi.StringPtrInput
	// The password of ECS instance.
	Password pulumi.StringPtrInput
	// The period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 12. Unit is Month.
	Period pulumi.IntPtrInput
	// The private ip address of primary networkInterface.
	PrimaryIpAddress pulumi.StringPtrInput
	// The ProjectName of the ecs instance.
	ProjectName pulumi.StringPtrInput
	// The secondary networkInterface detail collection of ECS instance.
	SecondaryNetworkInterfaces InstanceSecondaryNetworkInterfaceArrayInput
	// The security enhancement strategy of ECS instance. The value can be Active or InActive. Default is Active.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SecurityEnhancementStrategy pulumi.StringPtrInput
	// The security group ID set of primary networkInterface.
	SecurityGroupIds pulumi.StringArrayInput
	// The spot strategy will autoremove instance in some conditions.Please make sure you can maintain instance lifecycle before auto remove.The spot strategy of ECS instance, the value can be `NoSpot` or `SpotAsPriceGo`.
	SpotStrategy pulumi.StringPtrInput
	// The status of ECS instance.
	Status pulumi.StringPtrInput
	// The stop mode of ECS instance.
	StoppedMode pulumi.StringPtrInput
	// The subnet ID of primary networkInterface.
	SubnetId pulumi.StringPtrInput
	// The ID of system volume.
	SystemVolumeId pulumi.StringPtrInput
	// The size of system volume. The value range of the system volume size is ESSD_PL0: 20~2048, ESSD_FlexPL: 20~2048, PTSSD: 10~500.
	SystemVolumeSize pulumi.IntPtrInput
	// The type of system volume, the value is `PTSSD` or `ESSD_PL0` or `ESSD_PL1` or `ESSD_PL2` or `ESSD_FlexPL`.
	SystemVolumeType pulumi.StringPtrInput
	// Tags.
	Tags InstanceTagArrayInput
	// The update time of ECS instance.
	UpdatedAt pulumi.StringPtrInput
	// The user data of ECS instance, this field must be encrypted with base64.
	UserData pulumi.StringPtrInput
	// The VPC ID of ECS instance.
	VpcId pulumi.StringPtrInput
	// The available zone ID of ECS instance.
	ZoneId pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// The auto renew flag of ECS instance.Only effective when instanceChargeType is PrePaid. Default is true.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The auto renew period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 1.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenewPeriod *int `pulumi:"autoRenewPeriod"`
	// The option of cpu.
	CpuOptions *InstanceCpuOptions `pulumi:"cpuOptions"`
	// The data volumes collection of  ECS instance.
	DataVolumes []InstanceDataVolume `pulumi:"dataVolumes"`
	// The ID of Ecs Deployment Set.
	DeploymentSetId *string `pulumi:"deploymentSetId"`
	// The description of ECS instance.
	Description *string `pulumi:"description"`
	// The host name of ECS instance.
	HostName *string `pulumi:"hostName"`
	// The hpc cluster ID of ECS instance.
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// The Image ID of ECS instance.
	ImageId string `pulumi:"imageId"`
	// The include data volumes flag of ECS instance.Only effective when change instance charge type.include_data_volumes.
	IncludeDataVolumes *bool `pulumi:"includeDataVolumes"`
	// The charge type of ECS instance, the value can be `PrePaid` or `PostPaid`.
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// The name of ECS instance.
	InstanceName *string `pulumi:"instanceName"`
	// The instance type of ECS instance.
	InstanceType string `pulumi:"instanceType"`
	// The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 1 to 10.
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
	// You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// Whether to keep the mirror settings. Only custom images and shared images support this field.
	// When the value of this field is true, the Password and KeyPairName cannot be specified.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	KeepImageCredential *bool `pulumi:"keepImageCredential"`
	// The ssh key name of ECS instance.
	KeyPairName *string `pulumi:"keyPairName"`
	// The password of ECS instance.
	Password *string `pulumi:"password"`
	// The period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 12. Unit is Month.
	Period *int `pulumi:"period"`
	// The ProjectName of the ecs instance.
	ProjectName *string `pulumi:"projectName"`
	// The secondary networkInterface detail collection of ECS instance.
	SecondaryNetworkInterfaces []InstanceSecondaryNetworkInterface `pulumi:"secondaryNetworkInterfaces"`
	// The security enhancement strategy of ECS instance. The value can be Active or InActive. Default is Active.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SecurityEnhancementStrategy *string `pulumi:"securityEnhancementStrategy"`
	// The security group ID set of primary networkInterface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The spot strategy will autoremove instance in some conditions.Please make sure you can maintain instance lifecycle before auto remove.The spot strategy of ECS instance, the value can be `NoSpot` or `SpotAsPriceGo`.
	SpotStrategy *string `pulumi:"spotStrategy"`
	// The subnet ID of primary networkInterface.
	SubnetId string `pulumi:"subnetId"`
	// The size of system volume. The value range of the system volume size is ESSD_PL0: 20~2048, ESSD_FlexPL: 20~2048, PTSSD: 10~500.
	SystemVolumeSize int `pulumi:"systemVolumeSize"`
	// The type of system volume, the value is `PTSSD` or `ESSD_PL0` or `ESSD_PL1` or `ESSD_PL2` or `ESSD_FlexPL`.
	SystemVolumeType string `pulumi:"systemVolumeType"`
	// Tags.
	Tags []InstanceTag `pulumi:"tags"`
	// The user data of ECS instance, this field must be encrypted with base64.
	UserData *string `pulumi:"userData"`
	// The available zone ID of ECS instance.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// The auto renew flag of ECS instance.Only effective when instanceChargeType is PrePaid. Default is true.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrInput
	// The auto renew period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 1.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenewPeriod pulumi.IntPtrInput
	// The option of cpu.
	CpuOptions InstanceCpuOptionsPtrInput
	// The data volumes collection of  ECS instance.
	DataVolumes InstanceDataVolumeArrayInput
	// The ID of Ecs Deployment Set.
	DeploymentSetId pulumi.StringPtrInput
	// The description of ECS instance.
	Description pulumi.StringPtrInput
	// The host name of ECS instance.
	HostName pulumi.StringPtrInput
	// The hpc cluster ID of ECS instance.
	HpcClusterId pulumi.StringPtrInput
	// The Image ID of ECS instance.
	ImageId pulumi.StringInput
	// The include data volumes flag of ECS instance.Only effective when change instance charge type.include_data_volumes.
	IncludeDataVolumes pulumi.BoolPtrInput
	// The charge type of ECS instance, the value can be `PrePaid` or `PostPaid`.
	InstanceChargeType pulumi.StringPtrInput
	// The name of ECS instance.
	InstanceName pulumi.StringPtrInput
	// The instance type of ECS instance.
	InstanceType pulumi.StringInput
	// The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 1 to 10.
	Ipv6AddressCount pulumi.IntPtrInput
	// One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
	// You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
	Ipv6Addresses pulumi.StringArrayInput
	// Whether to keep the mirror settings. Only custom images and shared images support this field.
	// When the value of this field is true, the Password and KeyPairName cannot be specified.
	// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	KeepImageCredential pulumi.BoolPtrInput
	// The ssh key name of ECS instance.
	KeyPairName pulumi.StringPtrInput
	// The password of ECS instance.
	Password pulumi.StringPtrInput
	// The period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 12. Unit is Month.
	Period pulumi.IntPtrInput
	// The ProjectName of the ecs instance.
	ProjectName pulumi.StringPtrInput
	// The secondary networkInterface detail collection of ECS instance.
	SecondaryNetworkInterfaces InstanceSecondaryNetworkInterfaceArrayInput
	// The security enhancement strategy of ECS instance. The value can be Active or InActive. Default is Active.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	SecurityEnhancementStrategy pulumi.StringPtrInput
	// The security group ID set of primary networkInterface.
	SecurityGroupIds pulumi.StringArrayInput
	// The spot strategy will autoremove instance in some conditions.Please make sure you can maintain instance lifecycle before auto remove.The spot strategy of ECS instance, the value can be `NoSpot` or `SpotAsPriceGo`.
	SpotStrategy pulumi.StringPtrInput
	// The subnet ID of primary networkInterface.
	SubnetId pulumi.StringInput
	// The size of system volume. The value range of the system volume size is ESSD_PL0: 20~2048, ESSD_FlexPL: 20~2048, PTSSD: 10~500.
	SystemVolumeSize pulumi.IntInput
	// The type of system volume, the value is `PTSSD` or `ESSD_PL0` or `ESSD_PL1` or `ESSD_PL2` or `ESSD_FlexPL`.
	SystemVolumeType pulumi.StringInput
	// Tags.
	Tags InstanceTagArrayInput
	// The user data of ECS instance, this field must be encrypted with base64.
	UserData pulumi.StringPtrInput
	// The available zone ID of ECS instance.
	ZoneId pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// The auto renew flag of ECS instance.Only effective when instanceChargeType is PrePaid. Default is true.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// The auto renew period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 1.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) AutoRenewPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.AutoRenewPeriod }).(pulumi.IntPtrOutput)
}

// The option of cpu.
func (o InstanceOutput) CpuOptions() InstanceCpuOptionsOutput {
	return o.ApplyT(func(v *Instance) InstanceCpuOptionsOutput { return v.CpuOptions }).(InstanceCpuOptionsOutput)
}

// The number of ECS instance CPU cores.
func (o InstanceOutput) Cpus() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.Cpus }).(pulumi.IntOutput)
}

// The create time of ECS instance.
func (o InstanceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The data volumes collection of  ECS instance.
func (o InstanceOutput) DataVolumes() InstanceDataVolumeArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceDataVolumeArrayOutput { return v.DataVolumes }).(InstanceDataVolumeArrayOutput)
}

// The ID of Ecs Deployment Set.
func (o InstanceOutput) DeploymentSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DeploymentSetId }).(pulumi.StringOutput)
}

// The description of ECS instance.
func (o InstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The GPU device info of Instance.
func (o InstanceOutput) GpuDevices() InstanceGpuDeviceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceGpuDeviceArrayOutput { return v.GpuDevices }).(InstanceGpuDeviceArrayOutput)
}

// The host name of ECS instance.
func (o InstanceOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.HostName }).(pulumi.StringOutput)
}

// The hpc cluster ID of ECS instance.
func (o InstanceOutput) HpcClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.HpcClusterId }).(pulumi.StringPtrOutput)
}

// The Image ID of ECS instance.
func (o InstanceOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// The include data volumes flag of ECS instance.Only effective when change instance charge type.include_data_volumes.
func (o InstanceOutput) IncludeDataVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.IncludeDataVolumes }).(pulumi.BoolPtrOutput)
}

// The charge type of ECS instance, the value can be `PrePaid` or `PostPaid`.
func (o InstanceOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// The ID of ECS instance.
func (o InstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of ECS instance.
func (o InstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// The instance type of ECS instance.
func (o InstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 1 to 10.
func (o InstanceOutput) Ipv6AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.Ipv6AddressCount }).(pulumi.IntOutput)
}

// One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
// You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
func (o InstanceOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// The Flag of GPU instance.If the instance is GPU,The flag is true.
func (o InstanceOutput) IsGpu() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.IsGpu }).(pulumi.BoolOutput)
}

// Whether to keep the mirror settings. Only custom images and shared images support this field.
// When the value of this field is true, the Password and KeyPairName cannot be specified.
// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) KeepImageCredential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.KeepImageCredential }).(pulumi.BoolPtrOutput)
}

// The ssh key ID of ECS instance.
func (o InstanceOutput) KeyPairId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.KeyPairId }).(pulumi.StringOutput)
}

// The ssh key name of ECS instance.
func (o InstanceOutput) KeyPairName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.KeyPairName }).(pulumi.StringOutput)
}

// The memory size of ECS instance.
func (o InstanceOutput) MemorySize() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.MemorySize }).(pulumi.IntOutput)
}

// The ID of primary networkInterface.
func (o InstanceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The os name of ECS instance.
func (o InstanceOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.OsName }).(pulumi.StringOutput)
}

// The os type of ECS instance.
func (o InstanceOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// The password of ECS instance.
func (o InstanceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The period of ECS instance.Only effective when instanceChargeType is PrePaid. Default is 12. Unit is Month.
func (o InstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The private ip address of primary networkInterface.
func (o InstanceOutput) PrimaryIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PrimaryIpAddress }).(pulumi.StringOutput)
}

// The ProjectName of the ecs instance.
func (o InstanceOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// The secondary networkInterface detail collection of ECS instance.
func (o InstanceOutput) SecondaryNetworkInterfaces() InstanceSecondaryNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceSecondaryNetworkInterfaceArrayOutput { return v.SecondaryNetworkInterfaces }).(InstanceSecondaryNetworkInterfaceArrayOutput)
}

// The security enhancement strategy of ECS instance. The value can be Active or InActive. Default is Active.When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) SecurityEnhancementStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SecurityEnhancementStrategy }).(pulumi.StringPtrOutput)
}

// The security group ID set of primary networkInterface.
func (o InstanceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The spot strategy will autoremove instance in some conditions.Please make sure you can maintain instance lifecycle before auto remove.The spot strategy of ECS instance, the value can be `NoSpot` or `SpotAsPriceGo`.
func (o InstanceOutput) SpotStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SpotStrategy }).(pulumi.StringOutput)
}

// The status of ECS instance.
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The stop mode of ECS instance.
func (o InstanceOutput) StoppedMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.StoppedMode }).(pulumi.StringOutput)
}

// The subnet ID of primary networkInterface.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// The ID of system volume.
func (o InstanceOutput) SystemVolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SystemVolumeId }).(pulumi.StringOutput)
}

// The size of system volume. The value range of the system volume size is ESSD_PL0: 20~2048, ESSD_FlexPL: 20~2048, PTSSD: 10~500.
func (o InstanceOutput) SystemVolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.SystemVolumeSize }).(pulumi.IntOutput)
}

// The type of system volume, the value is `PTSSD` or `ESSD_PL0` or `ESSD_PL1` or `ESSD_PL2` or `ESSD_FlexPL`.
func (o InstanceOutput) SystemVolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SystemVolumeType }).(pulumi.StringOutput)
}

// Tags.
func (o InstanceOutput) Tags() InstanceTagArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceTagArrayOutput { return v.Tags }).(InstanceTagArrayOutput)
}

// The update time of ECS instance.
func (o InstanceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The user data of ECS instance, this field must be encrypted with base64.
func (o InstanceOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UserData }).(pulumi.StringOutput)
}

// The VPC ID of ECS instance.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The available zone ID of ECS instance.
func (o InstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
