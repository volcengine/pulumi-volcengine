// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of ecs launch templates
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooLaunchTemplate, err := ecs.NewLaunchTemplate(ctx, "fooLaunchTemplate", &ecs.LaunchTemplateArgs{
//				Description:        pulumi.String("acc-test-desc"),
//				EipBandwidth:       pulumi.Int(1),
//				EipBillingType:     pulumi.String("PostPaidByBandwidth"),
//				EipIsp:             pulumi.String("ChinaMobile"),
//				HostName:           pulumi.String("tf-host-name"),
//				HpcClusterId:       pulumi.String("hpcCluster-l8u24ovdmoab6opf"),
//				ImageId:            pulumi.String("image-ycjwwciuzy5pkh54xx8f"),
//				InstanceChargeType: pulumi.String("PostPaid"),
//				InstanceName:       pulumi.String("tf-acc-name"),
//				InstanceTypeId:     pulumi.String("ecs.g1.large"),
//				KeyPairName:        pulumi.String("tf-key-pair"),
//				LaunchTemplateName: pulumi.String("tf-acc-template"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = ecs.GetLaunchTemplatesOutput(ctx, ecs.GetLaunchTemplatesOutputArgs{
//				Ids: pulumi.StringArray{
//					fooLaunchTemplate.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetLaunchTemplates(ctx *pulumi.Context, args *GetLaunchTemplatesArgs, opts ...pulumi.InvokeOption) (*GetLaunchTemplatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLaunchTemplatesResult
	err := ctx.Invoke("volcengine:ecs/getLaunchTemplates:getLaunchTemplates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLaunchTemplates.
type GetLaunchTemplatesArgs struct {
	// A list of launch template ids.
	Ids []string `pulumi:"ids"`
	// A list of launch template names.
	LaunchTemplateNames []string `pulumi:"launchTemplateNames"`
	// A Name Regex of scaling policy.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getLaunchTemplates.
type GetLaunchTemplatesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                  string   `pulumi:"id"`
	Ids                 []string `pulumi:"ids"`
	LaunchTemplateNames []string `pulumi:"launchTemplateNames"`
	// The collection of launch templates.
	LaunchTemplates []GetLaunchTemplatesLaunchTemplate `pulumi:"launchTemplates"`
	NameRegex       *string                            `pulumi:"nameRegex"`
	OutputFile      *string                            `pulumi:"outputFile"`
	// The total count of scaling policy query.
	TotalCount int `pulumi:"totalCount"`
}

func GetLaunchTemplatesOutput(ctx *pulumi.Context, args GetLaunchTemplatesOutputArgs, opts ...pulumi.InvokeOption) GetLaunchTemplatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLaunchTemplatesResult, error) {
			args := v.(GetLaunchTemplatesArgs)
			r, err := GetLaunchTemplates(ctx, &args, opts...)
			var s GetLaunchTemplatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLaunchTemplatesResultOutput)
}

// A collection of arguments for invoking getLaunchTemplates.
type GetLaunchTemplatesOutputArgs struct {
	// A list of launch template ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A list of launch template names.
	LaunchTemplateNames pulumi.StringArrayInput `pulumi:"launchTemplateNames"`
	// A Name Regex of scaling policy.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetLaunchTemplatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatesArgs)(nil)).Elem()
}

// A collection of values returned by getLaunchTemplates.
type GetLaunchTemplatesResultOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatesResult)(nil)).Elem()
}

func (o GetLaunchTemplatesResultOutput) ToGetLaunchTemplatesResultOutput() GetLaunchTemplatesResultOutput {
	return o
}

func (o GetLaunchTemplatesResultOutput) ToGetLaunchTemplatesResultOutputWithContext(ctx context.Context) GetLaunchTemplatesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLaunchTemplatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplatesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetLaunchTemplatesResultOutput) LaunchTemplateNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplatesResult) []string { return v.LaunchTemplateNames }).(pulumi.StringArrayOutput)
}

// The collection of launch templates.
func (o GetLaunchTemplatesResultOutput) LaunchTemplates() GetLaunchTemplatesLaunchTemplateArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplatesResult) []GetLaunchTemplatesLaunchTemplate { return v.LaunchTemplates }).(GetLaunchTemplatesLaunchTemplateArrayOutput)
}

func (o GetLaunchTemplatesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLaunchTemplatesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetLaunchTemplatesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLaunchTemplatesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of scaling policy query.
func (o GetLaunchTemplatesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplatesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLaunchTemplatesResultOutput{})
}
