// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package financial_relation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type FinancialRelationsFinancialRelation struct {
	// The display name of the sub account.
	AccountAlias string `pulumi:"accountAlias"`
	// The authorization info of the financial relation.
	AuthInfos []FinancialRelationsFinancialRelationAuthInfo `pulumi:"authInfos"`
	// The filiation of the financial relation.
	Filiation int `pulumi:"filiation"`
	// The filiation description of the financial relation.
	FiliationDesc string `pulumi:"filiationDesc"`
	// The id of the major account.
	MajorAccountId int `pulumi:"majorAccountId"`
	// The name of the major account.
	MajorAccountName string `pulumi:"majorAccountName"`
	// A list of relation. Valid values: `1`, `4`.
	Relation int `pulumi:"relation"`
	// The relation description of the financial.
	RelationDesc string `pulumi:"relationDesc"`
	// The id of the financial relation.
	RelationId string `pulumi:"relationId"`
	// A list of status. Valid values: `100`, `200`, `250`, `300`, `400`, `500`.
	Status int `pulumi:"status"`
	// The status description of the financial relation.
	StatusDesc string `pulumi:"statusDesc"`
	// The id of the sub account.
	SubAccountId int `pulumi:"subAccountId"`
	// The name of the sub account.
	SubAccountName string `pulumi:"subAccountName"`
	// The update time of the financial relation.
	UpdateTime string `pulumi:"updateTime"`
}

// FinancialRelationsFinancialRelationInput is an input type that accepts FinancialRelationsFinancialRelationArgs and FinancialRelationsFinancialRelationOutput values.
// You can construct a concrete instance of `FinancialRelationsFinancialRelationInput` via:
//
//	FinancialRelationsFinancialRelationArgs{...}
type FinancialRelationsFinancialRelationInput interface {
	pulumi.Input

	ToFinancialRelationsFinancialRelationOutput() FinancialRelationsFinancialRelationOutput
	ToFinancialRelationsFinancialRelationOutputWithContext(context.Context) FinancialRelationsFinancialRelationOutput
}

type FinancialRelationsFinancialRelationArgs struct {
	// The display name of the sub account.
	AccountAlias pulumi.StringInput `pulumi:"accountAlias"`
	// The authorization info of the financial relation.
	AuthInfos FinancialRelationsFinancialRelationAuthInfoArrayInput `pulumi:"authInfos"`
	// The filiation of the financial relation.
	Filiation pulumi.IntInput `pulumi:"filiation"`
	// The filiation description of the financial relation.
	FiliationDesc pulumi.StringInput `pulumi:"filiationDesc"`
	// The id of the major account.
	MajorAccountId pulumi.IntInput `pulumi:"majorAccountId"`
	// The name of the major account.
	MajorAccountName pulumi.StringInput `pulumi:"majorAccountName"`
	// A list of relation. Valid values: `1`, `4`.
	Relation pulumi.IntInput `pulumi:"relation"`
	// The relation description of the financial.
	RelationDesc pulumi.StringInput `pulumi:"relationDesc"`
	// The id of the financial relation.
	RelationId pulumi.StringInput `pulumi:"relationId"`
	// A list of status. Valid values: `100`, `200`, `250`, `300`, `400`, `500`.
	Status pulumi.IntInput `pulumi:"status"`
	// The status description of the financial relation.
	StatusDesc pulumi.StringInput `pulumi:"statusDesc"`
	// The id of the sub account.
	SubAccountId pulumi.IntInput `pulumi:"subAccountId"`
	// The name of the sub account.
	SubAccountName pulumi.StringInput `pulumi:"subAccountName"`
	// The update time of the financial relation.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (FinancialRelationsFinancialRelationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FinancialRelationsFinancialRelation)(nil)).Elem()
}

func (i FinancialRelationsFinancialRelationArgs) ToFinancialRelationsFinancialRelationOutput() FinancialRelationsFinancialRelationOutput {
	return i.ToFinancialRelationsFinancialRelationOutputWithContext(context.Background())
}

func (i FinancialRelationsFinancialRelationArgs) ToFinancialRelationsFinancialRelationOutputWithContext(ctx context.Context) FinancialRelationsFinancialRelationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FinancialRelationsFinancialRelationOutput)
}

// FinancialRelationsFinancialRelationArrayInput is an input type that accepts FinancialRelationsFinancialRelationArray and FinancialRelationsFinancialRelationArrayOutput values.
// You can construct a concrete instance of `FinancialRelationsFinancialRelationArrayInput` via:
//
//	FinancialRelationsFinancialRelationArray{ FinancialRelationsFinancialRelationArgs{...} }
type FinancialRelationsFinancialRelationArrayInput interface {
	pulumi.Input

	ToFinancialRelationsFinancialRelationArrayOutput() FinancialRelationsFinancialRelationArrayOutput
	ToFinancialRelationsFinancialRelationArrayOutputWithContext(context.Context) FinancialRelationsFinancialRelationArrayOutput
}

type FinancialRelationsFinancialRelationArray []FinancialRelationsFinancialRelationInput

func (FinancialRelationsFinancialRelationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FinancialRelationsFinancialRelation)(nil)).Elem()
}

func (i FinancialRelationsFinancialRelationArray) ToFinancialRelationsFinancialRelationArrayOutput() FinancialRelationsFinancialRelationArrayOutput {
	return i.ToFinancialRelationsFinancialRelationArrayOutputWithContext(context.Background())
}

func (i FinancialRelationsFinancialRelationArray) ToFinancialRelationsFinancialRelationArrayOutputWithContext(ctx context.Context) FinancialRelationsFinancialRelationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FinancialRelationsFinancialRelationArrayOutput)
}

type FinancialRelationsFinancialRelationOutput struct{ *pulumi.OutputState }

func (FinancialRelationsFinancialRelationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FinancialRelationsFinancialRelation)(nil)).Elem()
}

func (o FinancialRelationsFinancialRelationOutput) ToFinancialRelationsFinancialRelationOutput() FinancialRelationsFinancialRelationOutput {
	return o
}

func (o FinancialRelationsFinancialRelationOutput) ToFinancialRelationsFinancialRelationOutputWithContext(ctx context.Context) FinancialRelationsFinancialRelationOutput {
	return o
}

// The display name of the sub account.
func (o FinancialRelationsFinancialRelationOutput) AccountAlias() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) string { return v.AccountAlias }).(pulumi.StringOutput)
}

// The authorization info of the financial relation.
func (o FinancialRelationsFinancialRelationOutput) AuthInfos() FinancialRelationsFinancialRelationAuthInfoArrayOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) []FinancialRelationsFinancialRelationAuthInfo {
		return v.AuthInfos
	}).(FinancialRelationsFinancialRelationAuthInfoArrayOutput)
}

// The filiation of the financial relation.
func (o FinancialRelationsFinancialRelationOutput) Filiation() pulumi.IntOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) int { return v.Filiation }).(pulumi.IntOutput)
}

// The filiation description of the financial relation.
func (o FinancialRelationsFinancialRelationOutput) FiliationDesc() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) string { return v.FiliationDesc }).(pulumi.StringOutput)
}

// The id of the major account.
func (o FinancialRelationsFinancialRelationOutput) MajorAccountId() pulumi.IntOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) int { return v.MajorAccountId }).(pulumi.IntOutput)
}

// The name of the major account.
func (o FinancialRelationsFinancialRelationOutput) MajorAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) string { return v.MajorAccountName }).(pulumi.StringOutput)
}

// A list of relation. Valid values: `1`, `4`.
func (o FinancialRelationsFinancialRelationOutput) Relation() pulumi.IntOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) int { return v.Relation }).(pulumi.IntOutput)
}

// The relation description of the financial.
func (o FinancialRelationsFinancialRelationOutput) RelationDesc() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) string { return v.RelationDesc }).(pulumi.StringOutput)
}

// The id of the financial relation.
func (o FinancialRelationsFinancialRelationOutput) RelationId() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) string { return v.RelationId }).(pulumi.StringOutput)
}

// A list of status. Valid values: `100`, `200`, `250`, `300`, `400`, `500`.
func (o FinancialRelationsFinancialRelationOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) int { return v.Status }).(pulumi.IntOutput)
}

// The status description of the financial relation.
func (o FinancialRelationsFinancialRelationOutput) StatusDesc() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) string { return v.StatusDesc }).(pulumi.StringOutput)
}

// The id of the sub account.
func (o FinancialRelationsFinancialRelationOutput) SubAccountId() pulumi.IntOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) int { return v.SubAccountId }).(pulumi.IntOutput)
}

// The name of the sub account.
func (o FinancialRelationsFinancialRelationOutput) SubAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) string { return v.SubAccountName }).(pulumi.StringOutput)
}

// The update time of the financial relation.
func (o FinancialRelationsFinancialRelationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelation) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type FinancialRelationsFinancialRelationArrayOutput struct{ *pulumi.OutputState }

func (FinancialRelationsFinancialRelationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FinancialRelationsFinancialRelation)(nil)).Elem()
}

func (o FinancialRelationsFinancialRelationArrayOutput) ToFinancialRelationsFinancialRelationArrayOutput() FinancialRelationsFinancialRelationArrayOutput {
	return o
}

func (o FinancialRelationsFinancialRelationArrayOutput) ToFinancialRelationsFinancialRelationArrayOutputWithContext(ctx context.Context) FinancialRelationsFinancialRelationArrayOutput {
	return o
}

func (o FinancialRelationsFinancialRelationArrayOutput) Index(i pulumi.IntInput) FinancialRelationsFinancialRelationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FinancialRelationsFinancialRelation {
		return vs[0].([]FinancialRelationsFinancialRelation)[vs[1].(int)]
	}).(FinancialRelationsFinancialRelationOutput)
}

type FinancialRelationsFinancialRelationAuthInfo struct {
	// The auth id of the financial relation.
	AuthId string `pulumi:"authId"`
	// The auth list of the financial relation.
	AuthLists []int `pulumi:"authLists"`
	// The auth status of the financial relation.
	AuthStatus int `pulumi:"authStatus"`
}

// FinancialRelationsFinancialRelationAuthInfoInput is an input type that accepts FinancialRelationsFinancialRelationAuthInfoArgs and FinancialRelationsFinancialRelationAuthInfoOutput values.
// You can construct a concrete instance of `FinancialRelationsFinancialRelationAuthInfoInput` via:
//
//	FinancialRelationsFinancialRelationAuthInfoArgs{...}
type FinancialRelationsFinancialRelationAuthInfoInput interface {
	pulumi.Input

	ToFinancialRelationsFinancialRelationAuthInfoOutput() FinancialRelationsFinancialRelationAuthInfoOutput
	ToFinancialRelationsFinancialRelationAuthInfoOutputWithContext(context.Context) FinancialRelationsFinancialRelationAuthInfoOutput
}

type FinancialRelationsFinancialRelationAuthInfoArgs struct {
	// The auth id of the financial relation.
	AuthId pulumi.StringInput `pulumi:"authId"`
	// The auth list of the financial relation.
	AuthLists pulumi.IntArrayInput `pulumi:"authLists"`
	// The auth status of the financial relation.
	AuthStatus pulumi.IntInput `pulumi:"authStatus"`
}

func (FinancialRelationsFinancialRelationAuthInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FinancialRelationsFinancialRelationAuthInfo)(nil)).Elem()
}

func (i FinancialRelationsFinancialRelationAuthInfoArgs) ToFinancialRelationsFinancialRelationAuthInfoOutput() FinancialRelationsFinancialRelationAuthInfoOutput {
	return i.ToFinancialRelationsFinancialRelationAuthInfoOutputWithContext(context.Background())
}

func (i FinancialRelationsFinancialRelationAuthInfoArgs) ToFinancialRelationsFinancialRelationAuthInfoOutputWithContext(ctx context.Context) FinancialRelationsFinancialRelationAuthInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FinancialRelationsFinancialRelationAuthInfoOutput)
}

// FinancialRelationsFinancialRelationAuthInfoArrayInput is an input type that accepts FinancialRelationsFinancialRelationAuthInfoArray and FinancialRelationsFinancialRelationAuthInfoArrayOutput values.
// You can construct a concrete instance of `FinancialRelationsFinancialRelationAuthInfoArrayInput` via:
//
//	FinancialRelationsFinancialRelationAuthInfoArray{ FinancialRelationsFinancialRelationAuthInfoArgs{...} }
type FinancialRelationsFinancialRelationAuthInfoArrayInput interface {
	pulumi.Input

	ToFinancialRelationsFinancialRelationAuthInfoArrayOutput() FinancialRelationsFinancialRelationAuthInfoArrayOutput
	ToFinancialRelationsFinancialRelationAuthInfoArrayOutputWithContext(context.Context) FinancialRelationsFinancialRelationAuthInfoArrayOutput
}

type FinancialRelationsFinancialRelationAuthInfoArray []FinancialRelationsFinancialRelationAuthInfoInput

func (FinancialRelationsFinancialRelationAuthInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FinancialRelationsFinancialRelationAuthInfo)(nil)).Elem()
}

func (i FinancialRelationsFinancialRelationAuthInfoArray) ToFinancialRelationsFinancialRelationAuthInfoArrayOutput() FinancialRelationsFinancialRelationAuthInfoArrayOutput {
	return i.ToFinancialRelationsFinancialRelationAuthInfoArrayOutputWithContext(context.Background())
}

func (i FinancialRelationsFinancialRelationAuthInfoArray) ToFinancialRelationsFinancialRelationAuthInfoArrayOutputWithContext(ctx context.Context) FinancialRelationsFinancialRelationAuthInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FinancialRelationsFinancialRelationAuthInfoArrayOutput)
}

type FinancialRelationsFinancialRelationAuthInfoOutput struct{ *pulumi.OutputState }

func (FinancialRelationsFinancialRelationAuthInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FinancialRelationsFinancialRelationAuthInfo)(nil)).Elem()
}

func (o FinancialRelationsFinancialRelationAuthInfoOutput) ToFinancialRelationsFinancialRelationAuthInfoOutput() FinancialRelationsFinancialRelationAuthInfoOutput {
	return o
}

func (o FinancialRelationsFinancialRelationAuthInfoOutput) ToFinancialRelationsFinancialRelationAuthInfoOutputWithContext(ctx context.Context) FinancialRelationsFinancialRelationAuthInfoOutput {
	return o
}

// The auth id of the financial relation.
func (o FinancialRelationsFinancialRelationAuthInfoOutput) AuthId() pulumi.StringOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelationAuthInfo) string { return v.AuthId }).(pulumi.StringOutput)
}

// The auth list of the financial relation.
func (o FinancialRelationsFinancialRelationAuthInfoOutput) AuthLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelationAuthInfo) []int { return v.AuthLists }).(pulumi.IntArrayOutput)
}

// The auth status of the financial relation.
func (o FinancialRelationsFinancialRelationAuthInfoOutput) AuthStatus() pulumi.IntOutput {
	return o.ApplyT(func(v FinancialRelationsFinancialRelationAuthInfo) int { return v.AuthStatus }).(pulumi.IntOutput)
}

type FinancialRelationsFinancialRelationAuthInfoArrayOutput struct{ *pulumi.OutputState }

func (FinancialRelationsFinancialRelationAuthInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FinancialRelationsFinancialRelationAuthInfo)(nil)).Elem()
}

func (o FinancialRelationsFinancialRelationAuthInfoArrayOutput) ToFinancialRelationsFinancialRelationAuthInfoArrayOutput() FinancialRelationsFinancialRelationAuthInfoArrayOutput {
	return o
}

func (o FinancialRelationsFinancialRelationAuthInfoArrayOutput) ToFinancialRelationsFinancialRelationAuthInfoArrayOutputWithContext(ctx context.Context) FinancialRelationsFinancialRelationAuthInfoArrayOutput {
	return o
}

func (o FinancialRelationsFinancialRelationAuthInfoArrayOutput) Index(i pulumi.IntInput) FinancialRelationsFinancialRelationAuthInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FinancialRelationsFinancialRelationAuthInfo {
		return vs[0].([]FinancialRelationsFinancialRelationAuthInfo)[vs[1].(int)]
	}).(FinancialRelationsFinancialRelationAuthInfoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FinancialRelationsFinancialRelationInput)(nil)).Elem(), FinancialRelationsFinancialRelationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FinancialRelationsFinancialRelationArrayInput)(nil)).Elem(), FinancialRelationsFinancialRelationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FinancialRelationsFinancialRelationAuthInfoInput)(nil)).Elem(), FinancialRelationsFinancialRelationAuthInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FinancialRelationsFinancialRelationAuthInfoArrayInput)(nil)).Elem(), FinancialRelationsFinancialRelationAuthInfoArray{})
	pulumi.RegisterOutputType(FinancialRelationsFinancialRelationOutput{})
	pulumi.RegisterOutputType(FinancialRelationsFinancialRelationArrayOutput{})
	pulumi.RegisterOutputType(FinancialRelationsFinancialRelationAuthInfoOutput{})
	pulumi.RegisterOutputType(FinancialRelationsFinancialRelationAuthInfoArrayOutput{})
}
