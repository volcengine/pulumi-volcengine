// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of customer gateways
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpn.CustomerGateways(ctx, &vpn.CustomerGatewaysArgs{
//				Ids: []string{
//					"cgw-2d68c4zglycjk58ozfe96norh",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func CustomerGateways(ctx *pulumi.Context, args *CustomerGatewaysArgs, opts ...pulumi.InvokeOption) (*CustomerGatewaysResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv CustomerGatewaysResult
	err := ctx.Invoke("volcengine:vpn/customerGateways:CustomerGateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking CustomerGateways.
type CustomerGatewaysArgs struct {
	// A list of customer gateway names.
	CustomerGatewayNames []string `pulumi:"customerGatewayNames"`
	// A list of customer gateway ids.
	Ids []string `pulumi:"ids"`
	// A IP address of the customer gateway.
	IpAddress *string `pulumi:"ipAddress"`
	// A Name Regex of customer gateway.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by CustomerGateways.
type CustomerGatewaysResult struct {
	CustomerGatewayNames []string `pulumi:"customerGatewayNames"`
	// The collection of customer gateway query.
	CustomerGateways []CustomerGatewaysCustomerGateway `pulumi:"customerGateways"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The IP address of the customer gateway.
	IpAddress  *string `pulumi:"ipAddress"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of customer gateway query.
	TotalCount int `pulumi:"totalCount"`
}

func CustomerGatewaysOutput(ctx *pulumi.Context, args CustomerGatewaysOutputArgs, opts ...pulumi.InvokeOption) CustomerGatewaysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (CustomerGatewaysResult, error) {
			args := v.(CustomerGatewaysArgs)
			r, err := CustomerGateways(ctx, &args, opts...)
			var s CustomerGatewaysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(CustomerGatewaysResultOutput)
}

// A collection of arguments for invoking CustomerGateways.
type CustomerGatewaysOutputArgs struct {
	// A list of customer gateway names.
	CustomerGatewayNames pulumi.StringArrayInput `pulumi:"customerGatewayNames"`
	// A list of customer gateway ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A IP address of the customer gateway.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// A Name Regex of customer gateway.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (CustomerGatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerGatewaysArgs)(nil)).Elem()
}

// A collection of values returned by CustomerGateways.
type CustomerGatewaysResultOutput struct{ *pulumi.OutputState }

func (CustomerGatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerGatewaysResult)(nil)).Elem()
}

func (o CustomerGatewaysResultOutput) ToCustomerGatewaysResultOutput() CustomerGatewaysResultOutput {
	return o
}

func (o CustomerGatewaysResultOutput) ToCustomerGatewaysResultOutputWithContext(ctx context.Context) CustomerGatewaysResultOutput {
	return o
}

func (o CustomerGatewaysResultOutput) CustomerGatewayNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) []string { return v.CustomerGatewayNames }).(pulumi.StringArrayOutput)
}

// The collection of customer gateway query.
func (o CustomerGatewaysResultOutput) CustomerGateways() CustomerGatewaysCustomerGatewayArrayOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) []CustomerGatewaysCustomerGateway { return v.CustomerGateways }).(CustomerGatewaysCustomerGatewayArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o CustomerGatewaysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o CustomerGatewaysResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The IP address of the customer gateway.
func (o CustomerGatewaysResultOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o CustomerGatewaysResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o CustomerGatewaysResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of customer gateway query.
func (o CustomerGatewaysResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomerGatewaysResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomerGatewaysResultOutput{})
}
