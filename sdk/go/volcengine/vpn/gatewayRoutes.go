// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of vpn gateway routes
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpn"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpn.GatewayRoutes(ctx, &vpn.GatewayRoutesArgs{
//				Ids: []string{
//					"vgr-2byssu52dktts2dx0ee90r5hp]",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GatewayRoutes(ctx *pulumi.Context, args *GatewayRoutesArgs, opts ...pulumi.InvokeOption) (*GatewayRoutesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GatewayRoutesResult
	err := ctx.Invoke("volcengine:vpn/gatewayRoutes:GatewayRoutes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GatewayRoutes.
type GatewayRoutesArgs struct {
	// A destination cidr block.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// A list of VPN gateway route ids.
	Ids []string `pulumi:"ids"`
	// An ID of next hop.
	NextHopId *string `pulumi:"nextHopId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// An ID of VPN gateway.
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
}

// A collection of values returned by GatewayRoutes.
type GatewayRoutesResult struct {
	// The destination cidr block of the VPN gateway route.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The next hop id of the VPN gateway route.
	NextHopId  *string `pulumi:"nextHopId"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of VPN gateway route query.
	TotalCount int `pulumi:"totalCount"`
	// The ID of the VPN gateway of the VPN gateway route.
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
	// The collection of VPN gateway route query.
	VpnGatewayRoutes []GatewayRoutesVpnGatewayRoute `pulumi:"vpnGatewayRoutes"`
}

func GatewayRoutesOutput(ctx *pulumi.Context, args GatewayRoutesOutputArgs, opts ...pulumi.InvokeOption) GatewayRoutesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GatewayRoutesResult, error) {
			args := v.(GatewayRoutesArgs)
			r, err := GatewayRoutes(ctx, &args, opts...)
			var s GatewayRoutesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GatewayRoutesResultOutput)
}

// A collection of arguments for invoking GatewayRoutes.
type GatewayRoutesOutputArgs struct {
	// A destination cidr block.
	DestinationCidrBlock pulumi.StringPtrInput `pulumi:"destinationCidrBlock"`
	// A list of VPN gateway route ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// An ID of next hop.
	NextHopId pulumi.StringPtrInput `pulumi:"nextHopId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// An ID of VPN gateway.
	VpnGatewayId pulumi.StringPtrInput `pulumi:"vpnGatewayId"`
}

func (GatewayRoutesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutesArgs)(nil)).Elem()
}

// A collection of values returned by GatewayRoutes.
type GatewayRoutesResultOutput struct{ *pulumi.OutputState }

func (GatewayRoutesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRoutesResult)(nil)).Elem()
}

func (o GatewayRoutesResultOutput) ToGatewayRoutesResultOutput() GatewayRoutesResultOutput {
	return o
}

func (o GatewayRoutesResultOutput) ToGatewayRoutesResultOutputWithContext(ctx context.Context) GatewayRoutesResultOutput {
	return o
}

// The destination cidr block of the VPN gateway route.
func (o GatewayRoutesResultOutput) DestinationCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRoutesResult) *string { return v.DestinationCidrBlock }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GatewayRoutesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRoutesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GatewayRoutesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayRoutesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The next hop id of the VPN gateway route.
func (o GatewayRoutesResultOutput) NextHopId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRoutesResult) *string { return v.NextHopId }).(pulumi.StringPtrOutput)
}

func (o GatewayRoutesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRoutesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of VPN gateway route query.
func (o GatewayRoutesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRoutesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The ID of the VPN gateway of the VPN gateway route.
func (o GatewayRoutesResultOutput) VpnGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayRoutesResult) *string { return v.VpnGatewayId }).(pulumi.StringPtrOutput)
}

// The collection of VPN gateway route query.
func (o GatewayRoutesResultOutput) VpnGatewayRoutes() GatewayRoutesVpnGatewayRouteArrayOutput {
	return o.ApplyT(func(v GatewayRoutesResult) []GatewayRoutesVpnGatewayRoute { return v.VpnGatewayRoutes }).(GatewayRoutesVpnGatewayRouteArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GatewayRoutesResultOutput{})
}
