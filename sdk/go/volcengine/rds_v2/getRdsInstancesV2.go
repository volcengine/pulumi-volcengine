// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds_v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// (Deprecated! Recommend use volcengine_rds_mysql_*** replace) Use this data source to query detailed information of rds instances v2
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds_v2"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds_v2.GetRdsInstancesV2(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRdsInstancesV2(ctx *pulumi.Context, args *GetRdsInstancesV2Args, opts ...pulumi.InvokeOption) (*GetRdsInstancesV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRdsInstancesV2Result
	err := ctx.Invoke("volcengine:rds_v2/getRdsInstancesV2:getRdsInstancesV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRdsInstancesV2.
type GetRdsInstancesV2Args struct {
	// The charge type of the RDS instance.
	ChargeType *string `pulumi:"chargeType"`
	// The end time of creating RDS instance.
	CreateTimeEnd *string `pulumi:"createTimeEnd"`
	// The start time of creating RDS instance.
	CreateTimeStart *string `pulumi:"createTimeStart"`
	// The version of the RDS instance, Value:
	// MySQL Community:
	// MySQL_5.7 - MySQL 5.7
	// MySQL_8_0 - MySQL 8.0
	// PostgreSQL Community:
	// PostgreSQL_11 - PostgreSQL 11
	// PostgreSQL_12 - PostgreSQL 12
	// Microsoft SQL Server: Not available at this time
	// SQLServer_2019 - SQL Server 2019
	// veDB for MySQL:
	// MySQL_8_0 - MySQL 8.0
	// veDB for PostgreSQL:
	// PostgreSQL_13 - PostgreSQL 13.
	DbEngineVersion *string `pulumi:"dbEngineVersion"`
	// The id of the RDS instance.
	InstanceId *string `pulumi:"instanceId"`
	// The name of the RDS instance.
	InstanceName *string `pulumi:"instanceName"`
	// The status of the RDS instance, Value:
	// Running - running
	// Creating - Creating
	// Deleting - Deleting
	// Restarting - Restarting
	// Restoring - Restoring
	// Updating - changing
	// Upgrading - Upgrading
	// Error - the error.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// The type of the RDS instance, Value:
	// Value:
	// RDS for MySQL:
	// HA - high availability version;
	// RDS for PostgreSQL:
	// HA - high availability version;
	// Microsoft SQL Server: Not available at this time
	// Enterprise - Enterprise Edition
	// Standard - Standard Edition
	// Web - Web version
	// veDB for MySQL:
	// Cluster - Cluster Edition
	// veDB for PostgreSQL:
	// Cluster - Cluster Edition
	// MySQL Sharding:
	// HA - high availability version;.
	InstanceType *string `pulumi:"instanceType"`
	// A Name Regex of RDS instance.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The available zone of the RDS instance.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getRdsInstancesV2.
type GetRdsInstancesV2Result struct {
	// Payment type. Value:
	// PostPaid - Pay-As-You-Go
	// PrePaid - Yearly and monthly (default).
	ChargeType      *string `pulumi:"chargeType"`
	CreateTimeEnd   *string `pulumi:"createTimeEnd"`
	CreateTimeStart *string `pulumi:"createTimeStart"`
	// The engine version of the RDS instance.
	DbEngineVersion *string `pulumi:"dbEngineVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// The name of the RDS instance.
	InstanceName *string `pulumi:"instanceName"`
	// The status of the RDS instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// The type of the RDS instance.
	InstanceType *string `pulumi:"instanceType"`
	NameRegex    *string `pulumi:"nameRegex"`
	OutputFile   *string `pulumi:"outputFile"`
	// The collection of RDS instance query.
	RdsInstances []GetRdsInstancesV2RdsInstance `pulumi:"rdsInstances"`
	// The total count of RDS instance query.
	TotalCount int `pulumi:"totalCount"`
	// The available zone of the RDS instance.
	ZoneId *string `pulumi:"zoneId"`
}

func GetRdsInstancesV2Output(ctx *pulumi.Context, args GetRdsInstancesV2OutputArgs, opts ...pulumi.InvokeOption) GetRdsInstancesV2ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRdsInstancesV2Result, error) {
			args := v.(GetRdsInstancesV2Args)
			r, err := GetRdsInstancesV2(ctx, &args, opts...)
			var s GetRdsInstancesV2Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRdsInstancesV2ResultOutput)
}

// A collection of arguments for invoking getRdsInstancesV2.
type GetRdsInstancesV2OutputArgs struct {
	// The charge type of the RDS instance.
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	// The end time of creating RDS instance.
	CreateTimeEnd pulumi.StringPtrInput `pulumi:"createTimeEnd"`
	// The start time of creating RDS instance.
	CreateTimeStart pulumi.StringPtrInput `pulumi:"createTimeStart"`
	// The version of the RDS instance, Value:
	// MySQL Community:
	// MySQL_5.7 - MySQL 5.7
	// MySQL_8_0 - MySQL 8.0
	// PostgreSQL Community:
	// PostgreSQL_11 - PostgreSQL 11
	// PostgreSQL_12 - PostgreSQL 12
	// Microsoft SQL Server: Not available at this time
	// SQLServer_2019 - SQL Server 2019
	// veDB for MySQL:
	// MySQL_8_0 - MySQL 8.0
	// veDB for PostgreSQL:
	// PostgreSQL_13 - PostgreSQL 13.
	DbEngineVersion pulumi.StringPtrInput `pulumi:"dbEngineVersion"`
	// The id of the RDS instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The name of the RDS instance.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// The status of the RDS instance, Value:
	// Running - running
	// Creating - Creating
	// Deleting - Deleting
	// Restarting - Restarting
	// Restoring - Restoring
	// Updating - changing
	// Upgrading - Upgrading
	// Error - the error.
	InstanceStatus pulumi.StringPtrInput `pulumi:"instanceStatus"`
	// The type of the RDS instance, Value:
	// Value:
	// RDS for MySQL:
	// HA - high availability version;
	// RDS for PostgreSQL:
	// HA - high availability version;
	// Microsoft SQL Server: Not available at this time
	// Enterprise - Enterprise Edition
	// Standard - Standard Edition
	// Web - Web version
	// veDB for MySQL:
	// Cluster - Cluster Edition
	// veDB for PostgreSQL:
	// Cluster - Cluster Edition
	// MySQL Sharding:
	// HA - high availability version;.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A Name Regex of RDS instance.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The available zone of the RDS instance.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (GetRdsInstancesV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesV2Args)(nil)).Elem()
}

// A collection of values returned by getRdsInstancesV2.
type GetRdsInstancesV2ResultOutput struct{ *pulumi.OutputState }

func (GetRdsInstancesV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRdsInstancesV2Result)(nil)).Elem()
}

func (o GetRdsInstancesV2ResultOutput) ToGetRdsInstancesV2ResultOutput() GetRdsInstancesV2ResultOutput {
	return o
}

func (o GetRdsInstancesV2ResultOutput) ToGetRdsInstancesV2ResultOutputWithContext(ctx context.Context) GetRdsInstancesV2ResultOutput {
	return o
}

// Payment type. Value:
// PostPaid - Pay-As-You-Go
// PrePaid - Yearly and monthly (default).
func (o GetRdsInstancesV2ResultOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

func (o GetRdsInstancesV2ResultOutput) CreateTimeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.CreateTimeEnd }).(pulumi.StringPtrOutput)
}

func (o GetRdsInstancesV2ResultOutput) CreateTimeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.CreateTimeStart }).(pulumi.StringPtrOutput)
}

// The engine version of the RDS instance.
func (o GetRdsInstancesV2ResultOutput) DbEngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.DbEngineVersion }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRdsInstancesV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) string { return v.Id }).(pulumi.StringOutput)
}

// Instance ID.
func (o GetRdsInstancesV2ResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The name of the RDS instance.
func (o GetRdsInstancesV2ResultOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// The status of the RDS instance.
func (o GetRdsInstancesV2ResultOutput) InstanceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.InstanceStatus }).(pulumi.StringPtrOutput)
}

// The type of the RDS instance.
func (o GetRdsInstancesV2ResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o GetRdsInstancesV2ResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetRdsInstancesV2ResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of RDS instance query.
func (o GetRdsInstancesV2ResultOutput) RdsInstances() GetRdsInstancesV2RdsInstanceArrayOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) []GetRdsInstancesV2RdsInstance { return v.RdsInstances }).(GetRdsInstancesV2RdsInstanceArrayOutput)
}

// The total count of RDS instance query.
func (o GetRdsInstancesV2ResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The available zone of the RDS instance.
func (o GetRdsInstancesV2ResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRdsInstancesV2Result) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRdsInstancesV2ResultOutput{})
}
