// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "volcengine:iam/accessKey:AccessKey":
		r = &AccessKey{}
	case "volcengine:iam/loginProfile:LoginProfile":
		r = &LoginProfile{}
	case "volcengine:iam/policy:Policy":
		r = &Policy{}
	case "volcengine:iam/role:Role":
		r = &Role{}
	case "volcengine:iam/rolePolicyAttachment:RolePolicyAttachment":
		r = &RolePolicyAttachment{}
	case "volcengine:iam/user:User":
		r = &User{}
	case "volcengine:iam/userPolicyAttachment:UserPolicyAttachment":
		r = &UserPolicyAttachment{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"volcengine",
		"iam/accessKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"iam/loginProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"iam/policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"iam/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"iam/rolePolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"iam/user",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"volcengine",
		"iam/userPolicyAttachment",
		&module{version},
	)
}
