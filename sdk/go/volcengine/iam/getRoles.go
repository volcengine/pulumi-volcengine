// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of iam roles
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/iam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo1, err := iam.NewRole(ctx, "foo1", &iam.RoleArgs{
//				Description:         pulumi.String("acc-test1"),
//				DisplayName:         pulumi.String("acc-test1"),
//				MaxSessionDuration:  pulumi.Int(3600),
//				RoleName:            pulumi.String("acc-test-role1"),
//				TrustPolicyDocument: pulumi.String("{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"auto_scaling\"]}}]}"),
//			})
//			if err != nil {
//				return err
//			}
//			foo2, err := iam.NewRole(ctx, "foo2", &iam.RoleArgs{
//				Description:         pulumi.String("acc-test2"),
//				DisplayName:         pulumi.String("acc-test2"),
//				MaxSessionDuration:  pulumi.Int(3600),
//				RoleName:            pulumi.String("acc-test-role2"),
//				TrustPolicyDocument: pulumi.String("{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"ecs\"]}}]}"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = iam.GetRolesOutput(ctx, iam.GetRolesOutputArgs{
//				RoleName: pulumi.All(foo1.RoleName, foo2.RoleName).ApplyT(func(_args []interface{}) (string, error) {
//					foo1RoleName := _args[0].(string)
//					foo2RoleName := _args[1].(string)
//					return fmt.Sprintf("%v,%v", foo1RoleName, foo2RoleName), nil
//				}).(pulumi.StringOutput),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetRoles(ctx *pulumi.Context, args *GetRolesArgs, opts ...pulumi.InvokeOption) (*GetRolesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRolesResult
	err := ctx.Invoke("volcengine:iam/getRoles:getRoles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoles.
type GetRolesArgs struct {
	// A Name Regex of Role.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The query field of Role.
	Query *string `pulumi:"query"`
	// The name of the Role, comma separated.
	RoleName *string `pulumi:"roleName"`
}

// A collection of values returned by getRoles.
type GetRolesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	Query      *string `pulumi:"query"`
	// The name of the Role.
	RoleName *string `pulumi:"roleName"`
	// The collection of Role query.
	Roles []GetRolesRole `pulumi:"roles"`
	// The total count of Role query.
	TotalCount int `pulumi:"totalCount"`
}

func GetRolesOutput(ctx *pulumi.Context, args GetRolesOutputArgs, opts ...pulumi.InvokeOption) GetRolesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRolesResult, error) {
			args := v.(GetRolesArgs)
			r, err := GetRoles(ctx, &args, opts...)
			var s GetRolesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRolesResultOutput)
}

// A collection of arguments for invoking getRoles.
type GetRolesOutputArgs struct {
	// A Name Regex of Role.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The query field of Role.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// The name of the Role, comma separated.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
}

func (GetRolesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesArgs)(nil)).Elem()
}

// A collection of values returned by getRoles.
type GetRolesResultOutput struct{ *pulumi.OutputState }

func (GetRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesResult)(nil)).Elem()
}

func (o GetRolesResultOutput) ToGetRolesResultOutput() GetRolesResultOutput {
	return o
}

func (o GetRolesResultOutput) ToGetRolesResultOutputWithContext(ctx context.Context) GetRolesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRolesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRolesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRolesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetRolesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRolesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetRolesResultOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRolesResult) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// The name of the Role.
func (o GetRolesResultOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRolesResult) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

// The collection of Role query.
func (o GetRolesResultOutput) Roles() GetRolesRoleArrayOutput {
	return o.ApplyT(func(v GetRolesResult) []GetRolesRole { return v.Roles }).(GetRolesRoleArrayOutput)
}

// The total count of Role query.
func (o GetRolesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRolesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRolesResultOutput{})
}
