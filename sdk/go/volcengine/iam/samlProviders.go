// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of iam saml providers
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/iam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.SamlProviders(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func SamlProviders(ctx *pulumi.Context, args *SamlProvidersArgs, opts ...pulumi.InvokeOption) (*SamlProvidersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv SamlProvidersResult
	err := ctx.Invoke("volcengine:iam/samlProviders:SamlProviders", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking SamlProviders.
type SamlProvidersArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by SamlProviders.
type SamlProvidersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The collection of query.
	Providers []SamlProvidersProvider `pulumi:"providers"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func SamlProvidersOutput(ctx *pulumi.Context, args SamlProvidersOutputArgs, opts ...pulumi.InvokeOption) SamlProvidersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (SamlProvidersResult, error) {
			args := v.(SamlProvidersArgs)
			r, err := SamlProviders(ctx, &args, opts...)
			var s SamlProvidersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(SamlProvidersResultOutput)
}

// A collection of arguments for invoking SamlProviders.
type SamlProvidersOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (SamlProvidersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlProvidersArgs)(nil)).Elem()
}

// A collection of values returned by SamlProviders.
type SamlProvidersResultOutput struct{ *pulumi.OutputState }

func (SamlProvidersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlProvidersResult)(nil)).Elem()
}

func (o SamlProvidersResultOutput) ToSamlProvidersResultOutput() SamlProvidersResultOutput {
	return o
}

func (o SamlProvidersResultOutput) ToSamlProvidersResultOutputWithContext(ctx context.Context) SamlProvidersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o SamlProvidersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SamlProvidersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o SamlProvidersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlProvidersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o SamlProvidersResultOutput) Providers() SamlProvidersProviderArrayOutput {
	return o.ApplyT(func(v SamlProvidersResult) []SamlProvidersProvider { return v.Providers }).(SamlProvidersProviderArrayOutput)
}

// The total count of query.
func (o SamlProvidersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v SamlProvidersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(SamlProvidersResultOutput{})
}
