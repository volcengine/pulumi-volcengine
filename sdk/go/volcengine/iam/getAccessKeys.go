// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of iam access keys
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/iam"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.GetAccessKeys(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAccessKeys(ctx *pulumi.Context, args *GetAccessKeysArgs, opts ...pulumi.InvokeOption) (*GetAccessKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAccessKeysResult
	err := ctx.Invoke("volcengine:iam/getAccessKeys:getAccessKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccessKeys.
type GetAccessKeysArgs struct {
	// A Name Regex of IAM.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The user names.
	UserName *string `pulumi:"userName"`
}

// A collection of values returned by getAccessKeys.
type GetAccessKeysResult struct {
	// The collection of access keys.
	AccessKeyMetadatas []GetAccessKeysAccessKeyMetadata `pulumi:"accessKeyMetadatas"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of user query.
	TotalCount int `pulumi:"totalCount"`
	// The user name.
	UserName *string `pulumi:"userName"`
}

func GetAccessKeysOutput(ctx *pulumi.Context, args GetAccessKeysOutputArgs, opts ...pulumi.InvokeOption) GetAccessKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAccessKeysResult, error) {
			args := v.(GetAccessKeysArgs)
			r, err := GetAccessKeys(ctx, &args, opts...)
			var s GetAccessKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAccessKeysResultOutput)
}

// A collection of arguments for invoking getAccessKeys.
type GetAccessKeysOutputArgs struct {
	// A Name Regex of IAM.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The user names.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (GetAccessKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeysArgs)(nil)).Elem()
}

// A collection of values returned by getAccessKeys.
type GetAccessKeysResultOutput struct{ *pulumi.OutputState }

func (GetAccessKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessKeysResult)(nil)).Elem()
}

func (o GetAccessKeysResultOutput) ToGetAccessKeysResultOutput() GetAccessKeysResultOutput {
	return o
}

func (o GetAccessKeysResultOutput) ToGetAccessKeysResultOutputWithContext(ctx context.Context) GetAccessKeysResultOutput {
	return o
}

// The collection of access keys.
func (o GetAccessKeysResultOutput) AccessKeyMetadatas() GetAccessKeysAccessKeyMetadataArrayOutput {
	return o.ApplyT(func(v GetAccessKeysResult) []GetAccessKeysAccessKeyMetadata { return v.AccessKeyMetadatas }).(GetAccessKeysAccessKeyMetadataArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAccessKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAccessKeysResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccessKeysResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetAccessKeysResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccessKeysResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of user query.
func (o GetAccessKeysResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessKeysResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The user name.
func (o GetAccessKeysResultOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccessKeysResult) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAccessKeysResultOutput{})
}
