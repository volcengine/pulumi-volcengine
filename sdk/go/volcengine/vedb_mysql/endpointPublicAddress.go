// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vedb_mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage vedb mysql endpoint public address
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/eip"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vedb_mysql"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[2].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			fooInstance, err := vedb_mysql.NewInstance(ctx, "fooInstance", &vedb_mysql.InstanceArgs{
//				ChargeType:        pulumi.String("PostPaid"),
//				StorageChargeType: pulumi.String("PostPaid"),
//				DbEngineVersion:   pulumi.String("MySQL_8_0"),
//				DbMinorVersion:    pulumi.String("3.0"),
//				NodeNumber:        pulumi.Int(2),
//				NodeSpec:          pulumi.String("vedb.mysql.x4.large"),
//				SubnetId:          fooSubnet.ID(),
//				InstanceName:      pulumi.String("tf-test"),
//				ProjectName:       pulumi.String("default"),
//				Tags: vedb_mysql.InstanceTagArray{
//					&vedb_mysql.InstanceTagArgs{
//						Key:   pulumi.String("tftest"),
//						Value: pulumi.String("tftest"),
//					},
//					&vedb_mysql.InstanceTagArgs{
//						Key:   pulumi.String("tftest2"),
//						Value: pulumi.String("tftest2"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooInstances := vedb_mysql.GetInstancesOutput(ctx, vedb_mysql.GetInstancesOutputArgs{
//				InstanceId: fooInstance.ID(),
//			}, nil)
//			fooEndpoint, err := vedb_mysql.NewEndpoint(ctx, "fooEndpoint", &vedb_mysql.EndpointArgs{
//				EndpointType: pulumi.String("Custom"),
//				InstanceId:   fooInstance.ID(),
//				NodeIds: pulumi.StringArray{
//					fooInstances.ApplyT(func(fooInstances vedb_mysql.GetInstancesResult) (*string, error) {
//						return &fooInstances.Instances[0].Nodes[0].NodeId, nil
//					}).(pulumi.StringPtrOutput),
//					fooInstances.ApplyT(func(fooInstances vedb_mysql.GetInstancesResult) (*string, error) {
//						return &fooInstances.Instances[0].Nodes[1].NodeId, nil
//					}).(pulumi.StringPtrOutput),
//				},
//				ReadWriteMode:            pulumi.String("ReadWrite"),
//				EndpointName:             pulumi.String("tf-test"),
//				Description:              pulumi.String("tf test"),
//				MasterAcceptReadRequests: pulumi.Bool(true),
//				DistributedTransaction:   pulumi.Bool(true),
//				ConsistLevel:             pulumi.String("Session"),
//				ConsistTimeout:           pulumi.Int(100000),
//				ConsistTimeoutAction:     pulumi.String("ReadMaster"),
//			})
//			if err != nil {
//				return err
//			}
//			fooAddress, err := eip.NewAddress(ctx, "fooAddress", &eip.AddressArgs{
//				BillingType: pulumi.String("PostPaidByBandwidth"),
//				Bandwidth:   pulumi.Int(1),
//				Isp:         pulumi.String("ChinaUnicom"),
//				Description: pulumi.String("acc-test"),
//				ProjectName: pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vedb_mysql.NewEndpointPublicAddress(ctx, "fooEndpointPublicAddress", &vedb_mysql.EndpointPublicAddressArgs{
//				EipId:      fooAddress.ID(),
//				EndpointId: fooEndpoint.EndpointId,
//				InstanceId: fooInstance.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// VedbMysqlEndpointPublicAddress can be imported using the instance id, endpoint id and the eip id, e.g.
//
// ```sh
// $ pulumi import volcengine:vedb_mysql/endpointPublicAddress:EndpointPublicAddress default vedbm-iqnh3a7z****:vedbm-2pf2xk5v****-Custom-50yv:eip-xxxx
// ```
type EndpointPublicAddress struct {
	pulumi.CustomResourceState

	// EIP ID that needs to be bound to the instance.
	EipId pulumi.StringOutput `pulumi:"eipId"`
	// The endpoint id.
	EndpointId pulumi.StringOutput `pulumi:"endpointId"`
	// The instance id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewEndpointPublicAddress registers a new resource with the given unique name, arguments, and options.
func NewEndpointPublicAddress(ctx *pulumi.Context,
	name string, args *EndpointPublicAddressArgs, opts ...pulumi.ResourceOption) (*EndpointPublicAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EipId == nil {
		return nil, errors.New("invalid value for required argument 'EipId'")
	}
	if args.EndpointId == nil {
		return nil, errors.New("invalid value for required argument 'EndpointId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EndpointPublicAddress
	err := ctx.RegisterResource("volcengine:vedb_mysql/endpointPublicAddress:EndpointPublicAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointPublicAddress gets an existing EndpointPublicAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointPublicAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointPublicAddressState, opts ...pulumi.ResourceOption) (*EndpointPublicAddress, error) {
	var resource EndpointPublicAddress
	err := ctx.ReadResource("volcengine:vedb_mysql/endpointPublicAddress:EndpointPublicAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointPublicAddress resources.
type endpointPublicAddressState struct {
	// EIP ID that needs to be bound to the instance.
	EipId *string `pulumi:"eipId"`
	// The endpoint id.
	EndpointId *string `pulumi:"endpointId"`
	// The instance id.
	InstanceId *string `pulumi:"instanceId"`
}

type EndpointPublicAddressState struct {
	// EIP ID that needs to be bound to the instance.
	EipId pulumi.StringPtrInput
	// The endpoint id.
	EndpointId pulumi.StringPtrInput
	// The instance id.
	InstanceId pulumi.StringPtrInput
}

func (EndpointPublicAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointPublicAddressState)(nil)).Elem()
}

type endpointPublicAddressArgs struct {
	// EIP ID that needs to be bound to the instance.
	EipId string `pulumi:"eipId"`
	// The endpoint id.
	EndpointId string `pulumi:"endpointId"`
	// The instance id.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a EndpointPublicAddress resource.
type EndpointPublicAddressArgs struct {
	// EIP ID that needs to be bound to the instance.
	EipId pulumi.StringInput
	// The endpoint id.
	EndpointId pulumi.StringInput
	// The instance id.
	InstanceId pulumi.StringInput
}

func (EndpointPublicAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointPublicAddressArgs)(nil)).Elem()
}

type EndpointPublicAddressInput interface {
	pulumi.Input

	ToEndpointPublicAddressOutput() EndpointPublicAddressOutput
	ToEndpointPublicAddressOutputWithContext(ctx context.Context) EndpointPublicAddressOutput
}

func (*EndpointPublicAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPublicAddress)(nil)).Elem()
}

func (i *EndpointPublicAddress) ToEndpointPublicAddressOutput() EndpointPublicAddressOutput {
	return i.ToEndpointPublicAddressOutputWithContext(context.Background())
}

func (i *EndpointPublicAddress) ToEndpointPublicAddressOutputWithContext(ctx context.Context) EndpointPublicAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPublicAddressOutput)
}

// EndpointPublicAddressArrayInput is an input type that accepts EndpointPublicAddressArray and EndpointPublicAddressArrayOutput values.
// You can construct a concrete instance of `EndpointPublicAddressArrayInput` via:
//
//	EndpointPublicAddressArray{ EndpointPublicAddressArgs{...} }
type EndpointPublicAddressArrayInput interface {
	pulumi.Input

	ToEndpointPublicAddressArrayOutput() EndpointPublicAddressArrayOutput
	ToEndpointPublicAddressArrayOutputWithContext(context.Context) EndpointPublicAddressArrayOutput
}

type EndpointPublicAddressArray []EndpointPublicAddressInput

func (EndpointPublicAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointPublicAddress)(nil)).Elem()
}

func (i EndpointPublicAddressArray) ToEndpointPublicAddressArrayOutput() EndpointPublicAddressArrayOutput {
	return i.ToEndpointPublicAddressArrayOutputWithContext(context.Background())
}

func (i EndpointPublicAddressArray) ToEndpointPublicAddressArrayOutputWithContext(ctx context.Context) EndpointPublicAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPublicAddressArrayOutput)
}

// EndpointPublicAddressMapInput is an input type that accepts EndpointPublicAddressMap and EndpointPublicAddressMapOutput values.
// You can construct a concrete instance of `EndpointPublicAddressMapInput` via:
//
//	EndpointPublicAddressMap{ "key": EndpointPublicAddressArgs{...} }
type EndpointPublicAddressMapInput interface {
	pulumi.Input

	ToEndpointPublicAddressMapOutput() EndpointPublicAddressMapOutput
	ToEndpointPublicAddressMapOutputWithContext(context.Context) EndpointPublicAddressMapOutput
}

type EndpointPublicAddressMap map[string]EndpointPublicAddressInput

func (EndpointPublicAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointPublicAddress)(nil)).Elem()
}

func (i EndpointPublicAddressMap) ToEndpointPublicAddressMapOutput() EndpointPublicAddressMapOutput {
	return i.ToEndpointPublicAddressMapOutputWithContext(context.Background())
}

func (i EndpointPublicAddressMap) ToEndpointPublicAddressMapOutputWithContext(ctx context.Context) EndpointPublicAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPublicAddressMapOutput)
}

type EndpointPublicAddressOutput struct{ *pulumi.OutputState }

func (EndpointPublicAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointPublicAddress)(nil)).Elem()
}

func (o EndpointPublicAddressOutput) ToEndpointPublicAddressOutput() EndpointPublicAddressOutput {
	return o
}

func (o EndpointPublicAddressOutput) ToEndpointPublicAddressOutputWithContext(ctx context.Context) EndpointPublicAddressOutput {
	return o
}

// EIP ID that needs to be bound to the instance.
func (o EndpointPublicAddressOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointPublicAddress) pulumi.StringOutput { return v.EipId }).(pulumi.StringOutput)
}

// The endpoint id.
func (o EndpointPublicAddressOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointPublicAddress) pulumi.StringOutput { return v.EndpointId }).(pulumi.StringOutput)
}

// The instance id.
func (o EndpointPublicAddressOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointPublicAddress) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type EndpointPublicAddressArrayOutput struct{ *pulumi.OutputState }

func (EndpointPublicAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointPublicAddress)(nil)).Elem()
}

func (o EndpointPublicAddressArrayOutput) ToEndpointPublicAddressArrayOutput() EndpointPublicAddressArrayOutput {
	return o
}

func (o EndpointPublicAddressArrayOutput) ToEndpointPublicAddressArrayOutputWithContext(ctx context.Context) EndpointPublicAddressArrayOutput {
	return o
}

func (o EndpointPublicAddressArrayOutput) Index(i pulumi.IntInput) EndpointPublicAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointPublicAddress {
		return vs[0].([]*EndpointPublicAddress)[vs[1].(int)]
	}).(EndpointPublicAddressOutput)
}

type EndpointPublicAddressMapOutput struct{ *pulumi.OutputState }

func (EndpointPublicAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointPublicAddress)(nil)).Elem()
}

func (o EndpointPublicAddressMapOutput) ToEndpointPublicAddressMapOutput() EndpointPublicAddressMapOutput {
	return o
}

func (o EndpointPublicAddressMapOutput) ToEndpointPublicAddressMapOutputWithContext(ctx context.Context) EndpointPublicAddressMapOutput {
	return o
}

func (o EndpointPublicAddressMapOutput) MapIndex(k pulumi.StringInput) EndpointPublicAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointPublicAddress {
		return vs[0].(map[string]*EndpointPublicAddress)[vs[1].(string)]
	}).(EndpointPublicAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPublicAddressInput)(nil)).Elem(), &EndpointPublicAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPublicAddressArrayInput)(nil)).Elem(), EndpointPublicAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointPublicAddressMapInput)(nil)).Elem(), EndpointPublicAddressMap{})
	pulumi.RegisterOutputType(EndpointPublicAddressOutput{})
	pulumi.RegisterOutputType(EndpointPublicAddressArrayOutput{})
	pulumi.RegisterOutputType(EndpointPublicAddressMapOutput{})
}
