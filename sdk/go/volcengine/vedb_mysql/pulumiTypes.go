// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vedb_mysql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AccountAccountPrivilege struct {
	// Authorization database privilege types:
	// ReadWrite: Read and write privilege.
	// ReadOnly: Read-only privilege.
	// DDLOnly: Only DDL privilege.
	// DMLOnly: Only DML privilege.
	// Custom: Custom privilege.
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
	// When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
	AccountPrivilegeDetail *string `pulumi:"accountPrivilegeDetail"`
	// Database name requiring authorization.
	DbName string `pulumi:"dbName"`
}

// AccountAccountPrivilegeInput is an input type that accepts AccountAccountPrivilegeArgs and AccountAccountPrivilegeOutput values.
// You can construct a concrete instance of `AccountAccountPrivilegeInput` via:
//
//	AccountAccountPrivilegeArgs{...}
type AccountAccountPrivilegeInput interface {
	pulumi.Input

	ToAccountAccountPrivilegeOutput() AccountAccountPrivilegeOutput
	ToAccountAccountPrivilegeOutputWithContext(context.Context) AccountAccountPrivilegeOutput
}

type AccountAccountPrivilegeArgs struct {
	// Authorization database privilege types:
	// ReadWrite: Read and write privilege.
	// ReadOnly: Read-only privilege.
	// DDLOnly: Only DDL privilege.
	// DMLOnly: Only DML privilege.
	// Custom: Custom privilege.
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
	// When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
	AccountPrivilegeDetail pulumi.StringPtrInput `pulumi:"accountPrivilegeDetail"`
	// Database name requiring authorization.
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (AccountAccountPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAccountPrivilege)(nil)).Elem()
}

func (i AccountAccountPrivilegeArgs) ToAccountAccountPrivilegeOutput() AccountAccountPrivilegeOutput {
	return i.ToAccountAccountPrivilegeOutputWithContext(context.Background())
}

func (i AccountAccountPrivilegeArgs) ToAccountAccountPrivilegeOutputWithContext(ctx context.Context) AccountAccountPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAccountPrivilegeOutput)
}

// AccountAccountPrivilegeArrayInput is an input type that accepts AccountAccountPrivilegeArray and AccountAccountPrivilegeArrayOutput values.
// You can construct a concrete instance of `AccountAccountPrivilegeArrayInput` via:
//
//	AccountAccountPrivilegeArray{ AccountAccountPrivilegeArgs{...} }
type AccountAccountPrivilegeArrayInput interface {
	pulumi.Input

	ToAccountAccountPrivilegeArrayOutput() AccountAccountPrivilegeArrayOutput
	ToAccountAccountPrivilegeArrayOutputWithContext(context.Context) AccountAccountPrivilegeArrayOutput
}

type AccountAccountPrivilegeArray []AccountAccountPrivilegeInput

func (AccountAccountPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountAccountPrivilege)(nil)).Elem()
}

func (i AccountAccountPrivilegeArray) ToAccountAccountPrivilegeArrayOutput() AccountAccountPrivilegeArrayOutput {
	return i.ToAccountAccountPrivilegeArrayOutputWithContext(context.Background())
}

func (i AccountAccountPrivilegeArray) ToAccountAccountPrivilegeArrayOutputWithContext(ctx context.Context) AccountAccountPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAccountPrivilegeArrayOutput)
}

type AccountAccountPrivilegeOutput struct{ *pulumi.OutputState }

func (AccountAccountPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAccountPrivilege)(nil)).Elem()
}

func (o AccountAccountPrivilegeOutput) ToAccountAccountPrivilegeOutput() AccountAccountPrivilegeOutput {
	return o
}

func (o AccountAccountPrivilegeOutput) ToAccountAccountPrivilegeOutputWithContext(ctx context.Context) AccountAccountPrivilegeOutput {
	return o
}

// Authorization database privilege types:
// ReadWrite: Read and write privilege.
// ReadOnly: Read-only privilege.
// DDLOnly: Only DDL privilege.
// DMLOnly: Only DML privilege.
// Custom: Custom privilege.
func (o AccountAccountPrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v AccountAccountPrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
// When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
func (o AccountAccountPrivilegeOutput) AccountPrivilegeDetail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountAccountPrivilege) *string { return v.AccountPrivilegeDetail }).(pulumi.StringPtrOutput)
}

// Database name requiring authorization.
func (o AccountAccountPrivilegeOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountAccountPrivilege) string { return v.DbName }).(pulumi.StringOutput)
}

type AccountAccountPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (AccountAccountPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountAccountPrivilege)(nil)).Elem()
}

func (o AccountAccountPrivilegeArrayOutput) ToAccountAccountPrivilegeArrayOutput() AccountAccountPrivilegeArrayOutput {
	return o
}

func (o AccountAccountPrivilegeArrayOutput) ToAccountAccountPrivilegeArrayOutputWithContext(ctx context.Context) AccountAccountPrivilegeArrayOutput {
	return o
}

func (o AccountAccountPrivilegeArrayOutput) Index(i pulumi.IntInput) AccountAccountPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountAccountPrivilege {
		return vs[0].([]AccountAccountPrivilege)[vs[1].(int)]
	}).(AccountAccountPrivilegeOutput)
}

type AccountsAccount struct {
	// The name of the database account. This field supports fuzzy query.
	AccountName string `pulumi:"accountName"`
	// The privilege detail list of RDS mysql instance account.
	AccountPrivileges []AccountsAccountAccountPrivilege `pulumi:"accountPrivileges"`
	// The type of the database account.
	AccountType string `pulumi:"accountType"`
}

// AccountsAccountInput is an input type that accepts AccountsAccountArgs and AccountsAccountOutput values.
// You can construct a concrete instance of `AccountsAccountInput` via:
//
//	AccountsAccountArgs{...}
type AccountsAccountInput interface {
	pulumi.Input

	ToAccountsAccountOutput() AccountsAccountOutput
	ToAccountsAccountOutputWithContext(context.Context) AccountsAccountOutput
}

type AccountsAccountArgs struct {
	// The name of the database account. This field supports fuzzy query.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The privilege detail list of RDS mysql instance account.
	AccountPrivileges AccountsAccountAccountPrivilegeArrayInput `pulumi:"accountPrivileges"`
	// The type of the database account.
	AccountType pulumi.StringInput `pulumi:"accountType"`
}

func (AccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccount)(nil)).Elem()
}

func (i AccountsAccountArgs) ToAccountsAccountOutput() AccountsAccountOutput {
	return i.ToAccountsAccountOutputWithContext(context.Background())
}

func (i AccountsAccountArgs) ToAccountsAccountOutputWithContext(ctx context.Context) AccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountOutput)
}

// AccountsAccountArrayInput is an input type that accepts AccountsAccountArray and AccountsAccountArrayOutput values.
// You can construct a concrete instance of `AccountsAccountArrayInput` via:
//
//	AccountsAccountArray{ AccountsAccountArgs{...} }
type AccountsAccountArrayInput interface {
	pulumi.Input

	ToAccountsAccountArrayOutput() AccountsAccountArrayOutput
	ToAccountsAccountArrayOutputWithContext(context.Context) AccountsAccountArrayOutput
}

type AccountsAccountArray []AccountsAccountInput

func (AccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccount)(nil)).Elem()
}

func (i AccountsAccountArray) ToAccountsAccountArrayOutput() AccountsAccountArrayOutput {
	return i.ToAccountsAccountArrayOutputWithContext(context.Background())
}

func (i AccountsAccountArray) ToAccountsAccountArrayOutputWithContext(ctx context.Context) AccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountArrayOutput)
}

type AccountsAccountOutput struct{ *pulumi.OutputState }

func (AccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccount)(nil)).Elem()
}

func (o AccountsAccountOutput) ToAccountsAccountOutput() AccountsAccountOutput {
	return o
}

func (o AccountsAccountOutput) ToAccountsAccountOutputWithContext(ctx context.Context) AccountsAccountOutput {
	return o
}

// The name of the database account. This field supports fuzzy query.
func (o AccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The privilege detail list of RDS mysql instance account.
func (o AccountsAccountOutput) AccountPrivileges() AccountsAccountAccountPrivilegeArrayOutput {
	return o.ApplyT(func(v AccountsAccount) []AccountsAccountAccountPrivilege { return v.AccountPrivileges }).(AccountsAccountAccountPrivilegeArrayOutput)
}

// The type of the database account.
func (o AccountsAccountOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccount) string { return v.AccountType }).(pulumi.StringOutput)
}

type AccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (AccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccount)(nil)).Elem()
}

func (o AccountsAccountArrayOutput) ToAccountsAccountArrayOutput() AccountsAccountArrayOutput {
	return o
}

func (o AccountsAccountArrayOutput) ToAccountsAccountArrayOutputWithContext(ctx context.Context) AccountsAccountArrayOutput {
	return o
}

func (o AccountsAccountArrayOutput) Index(i pulumi.IntInput) AccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountsAccount {
		return vs[0].([]AccountsAccount)[vs[1].(int)]
	}).(AccountsAccountOutput)
}

type AccountsAccountAccountPrivilege struct {
	// The privilege type of the account.
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The privilege detail of the account.
	AccountPrivilegeDetail string `pulumi:"accountPrivilegeDetail"`
	// The name of database.
	DbName string `pulumi:"dbName"`
}

// AccountsAccountAccountPrivilegeInput is an input type that accepts AccountsAccountAccountPrivilegeArgs and AccountsAccountAccountPrivilegeOutput values.
// You can construct a concrete instance of `AccountsAccountAccountPrivilegeInput` via:
//
//	AccountsAccountAccountPrivilegeArgs{...}
type AccountsAccountAccountPrivilegeInput interface {
	pulumi.Input

	ToAccountsAccountAccountPrivilegeOutput() AccountsAccountAccountPrivilegeOutput
	ToAccountsAccountAccountPrivilegeOutputWithContext(context.Context) AccountsAccountAccountPrivilegeOutput
}

type AccountsAccountAccountPrivilegeArgs struct {
	// The privilege type of the account.
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The privilege detail of the account.
	AccountPrivilegeDetail pulumi.StringInput `pulumi:"accountPrivilegeDetail"`
	// The name of database.
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (AccountsAccountAccountPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccountAccountPrivilege)(nil)).Elem()
}

func (i AccountsAccountAccountPrivilegeArgs) ToAccountsAccountAccountPrivilegeOutput() AccountsAccountAccountPrivilegeOutput {
	return i.ToAccountsAccountAccountPrivilegeOutputWithContext(context.Background())
}

func (i AccountsAccountAccountPrivilegeArgs) ToAccountsAccountAccountPrivilegeOutputWithContext(ctx context.Context) AccountsAccountAccountPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountAccountPrivilegeOutput)
}

// AccountsAccountAccountPrivilegeArrayInput is an input type that accepts AccountsAccountAccountPrivilegeArray and AccountsAccountAccountPrivilegeArrayOutput values.
// You can construct a concrete instance of `AccountsAccountAccountPrivilegeArrayInput` via:
//
//	AccountsAccountAccountPrivilegeArray{ AccountsAccountAccountPrivilegeArgs{...} }
type AccountsAccountAccountPrivilegeArrayInput interface {
	pulumi.Input

	ToAccountsAccountAccountPrivilegeArrayOutput() AccountsAccountAccountPrivilegeArrayOutput
	ToAccountsAccountAccountPrivilegeArrayOutputWithContext(context.Context) AccountsAccountAccountPrivilegeArrayOutput
}

type AccountsAccountAccountPrivilegeArray []AccountsAccountAccountPrivilegeInput

func (AccountsAccountAccountPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccountAccountPrivilege)(nil)).Elem()
}

func (i AccountsAccountAccountPrivilegeArray) ToAccountsAccountAccountPrivilegeArrayOutput() AccountsAccountAccountPrivilegeArrayOutput {
	return i.ToAccountsAccountAccountPrivilegeArrayOutputWithContext(context.Background())
}

func (i AccountsAccountAccountPrivilegeArray) ToAccountsAccountAccountPrivilegeArrayOutputWithContext(ctx context.Context) AccountsAccountAccountPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsAccountAccountPrivilegeArrayOutput)
}

type AccountsAccountAccountPrivilegeOutput struct{ *pulumi.OutputState }

func (AccountsAccountAccountPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsAccountAccountPrivilege)(nil)).Elem()
}

func (o AccountsAccountAccountPrivilegeOutput) ToAccountsAccountAccountPrivilegeOutput() AccountsAccountAccountPrivilegeOutput {
	return o
}

func (o AccountsAccountAccountPrivilegeOutput) ToAccountsAccountAccountPrivilegeOutputWithContext(ctx context.Context) AccountsAccountAccountPrivilegeOutput {
	return o
}

// The privilege type of the account.
func (o AccountsAccountAccountPrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccountAccountPrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The privilege detail of the account.
func (o AccountsAccountAccountPrivilegeOutput) AccountPrivilegeDetail() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccountAccountPrivilege) string { return v.AccountPrivilegeDetail }).(pulumi.StringOutput)
}

// The name of database.
func (o AccountsAccountAccountPrivilegeOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsAccountAccountPrivilege) string { return v.DbName }).(pulumi.StringOutput)
}

type AccountsAccountAccountPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (AccountsAccountAccountPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsAccountAccountPrivilege)(nil)).Elem()
}

func (o AccountsAccountAccountPrivilegeArrayOutput) ToAccountsAccountAccountPrivilegeArrayOutput() AccountsAccountAccountPrivilegeArrayOutput {
	return o
}

func (o AccountsAccountAccountPrivilegeArrayOutput) ToAccountsAccountAccountPrivilegeArrayOutputWithContext(ctx context.Context) AccountsAccountAccountPrivilegeArrayOutput {
	return o
}

func (o AccountsAccountAccountPrivilegeArrayOutput) Index(i pulumi.IntInput) AccountsAccountAccountPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountsAccountAccountPrivilege {
		return vs[0].([]AccountsAccountAccountPrivilege)[vs[1].(int)]
	}).(AccountsAccountAccountPrivilegeOutput)
}

type AllowlistsAllowList struct {
	// The description of the allow list.
	AllowListDesc string `pulumi:"allowListDesc"`
	// The id of the allow list.
	AllowListId string `pulumi:"allowListId"`
	// The total number of IP addresses (or address ranges) in the whitelist.
	AllowListIpNum int `pulumi:"allowListIpNum"`
	// The name of the allow list.
	AllowListName string `pulumi:"allowListName"`
	// The type of the allow list.
	AllowListType string `pulumi:"allowListType"`
	// The IP address or a range of IP addresses in CIDR format.
	AllowLists []string `pulumi:"allowLists"`
	// The total number of instances bound under the whitelist.
	AssociatedInstanceNum int `pulumi:"associatedInstanceNum"`
	// The list of instances.
	AssociatedInstances []AllowlistsAllowListAssociatedInstance `pulumi:"associatedInstances"`
}

// AllowlistsAllowListInput is an input type that accepts AllowlistsAllowListArgs and AllowlistsAllowListOutput values.
// You can construct a concrete instance of `AllowlistsAllowListInput` via:
//
//	AllowlistsAllowListArgs{...}
type AllowlistsAllowListInput interface {
	pulumi.Input

	ToAllowlistsAllowListOutput() AllowlistsAllowListOutput
	ToAllowlistsAllowListOutputWithContext(context.Context) AllowlistsAllowListOutput
}

type AllowlistsAllowListArgs struct {
	// The description of the allow list.
	AllowListDesc pulumi.StringInput `pulumi:"allowListDesc"`
	// The id of the allow list.
	AllowListId pulumi.StringInput `pulumi:"allowListId"`
	// The total number of IP addresses (or address ranges) in the whitelist.
	AllowListIpNum pulumi.IntInput `pulumi:"allowListIpNum"`
	// The name of the allow list.
	AllowListName pulumi.StringInput `pulumi:"allowListName"`
	// The type of the allow list.
	AllowListType pulumi.StringInput `pulumi:"allowListType"`
	// The IP address or a range of IP addresses in CIDR format.
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// The total number of instances bound under the whitelist.
	AssociatedInstanceNum pulumi.IntInput `pulumi:"associatedInstanceNum"`
	// The list of instances.
	AssociatedInstances AllowlistsAllowListAssociatedInstanceArrayInput `pulumi:"associatedInstances"`
}

func (AllowlistsAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowlistsAllowList)(nil)).Elem()
}

func (i AllowlistsAllowListArgs) ToAllowlistsAllowListOutput() AllowlistsAllowListOutput {
	return i.ToAllowlistsAllowListOutputWithContext(context.Background())
}

func (i AllowlistsAllowListArgs) ToAllowlistsAllowListOutputWithContext(ctx context.Context) AllowlistsAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowlistsAllowListOutput)
}

// AllowlistsAllowListArrayInput is an input type that accepts AllowlistsAllowListArray and AllowlistsAllowListArrayOutput values.
// You can construct a concrete instance of `AllowlistsAllowListArrayInput` via:
//
//	AllowlistsAllowListArray{ AllowlistsAllowListArgs{...} }
type AllowlistsAllowListArrayInput interface {
	pulumi.Input

	ToAllowlistsAllowListArrayOutput() AllowlistsAllowListArrayOutput
	ToAllowlistsAllowListArrayOutputWithContext(context.Context) AllowlistsAllowListArrayOutput
}

type AllowlistsAllowListArray []AllowlistsAllowListInput

func (AllowlistsAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowlistsAllowList)(nil)).Elem()
}

func (i AllowlistsAllowListArray) ToAllowlistsAllowListArrayOutput() AllowlistsAllowListArrayOutput {
	return i.ToAllowlistsAllowListArrayOutputWithContext(context.Background())
}

func (i AllowlistsAllowListArray) ToAllowlistsAllowListArrayOutputWithContext(ctx context.Context) AllowlistsAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowlistsAllowListArrayOutput)
}

type AllowlistsAllowListOutput struct{ *pulumi.OutputState }

func (AllowlistsAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowlistsAllowList)(nil)).Elem()
}

func (o AllowlistsAllowListOutput) ToAllowlistsAllowListOutput() AllowlistsAllowListOutput {
	return o
}

func (o AllowlistsAllowListOutput) ToAllowlistsAllowListOutputWithContext(ctx context.Context) AllowlistsAllowListOutput {
	return o
}

// The description of the allow list.
func (o AllowlistsAllowListOutput) AllowListDesc() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsAllowList) string { return v.AllowListDesc }).(pulumi.StringOutput)
}

// The id of the allow list.
func (o AllowlistsAllowListOutput) AllowListId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsAllowList) string { return v.AllowListId }).(pulumi.StringOutput)
}

// The total number of IP addresses (or address ranges) in the whitelist.
func (o AllowlistsAllowListOutput) AllowListIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v AllowlistsAllowList) int { return v.AllowListIpNum }).(pulumi.IntOutput)
}

// The name of the allow list.
func (o AllowlistsAllowListOutput) AllowListName() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsAllowList) string { return v.AllowListName }).(pulumi.StringOutput)
}

// The type of the allow list.
func (o AllowlistsAllowListOutput) AllowListType() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsAllowList) string { return v.AllowListType }).(pulumi.StringOutput)
}

// The IP address or a range of IP addresses in CIDR format.
func (o AllowlistsAllowListOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AllowlistsAllowList) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The total number of instances bound under the whitelist.
func (o AllowlistsAllowListOutput) AssociatedInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v AllowlistsAllowList) int { return v.AssociatedInstanceNum }).(pulumi.IntOutput)
}

// The list of instances.
func (o AllowlistsAllowListOutput) AssociatedInstances() AllowlistsAllowListAssociatedInstanceArrayOutput {
	return o.ApplyT(func(v AllowlistsAllowList) []AllowlistsAllowListAssociatedInstance { return v.AssociatedInstances }).(AllowlistsAllowListAssociatedInstanceArrayOutput)
}

type AllowlistsAllowListArrayOutput struct{ *pulumi.OutputState }

func (AllowlistsAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowlistsAllowList)(nil)).Elem()
}

func (o AllowlistsAllowListArrayOutput) ToAllowlistsAllowListArrayOutput() AllowlistsAllowListArrayOutput {
	return o
}

func (o AllowlistsAllowListArrayOutput) ToAllowlistsAllowListArrayOutputWithContext(ctx context.Context) AllowlistsAllowListArrayOutput {
	return o
}

func (o AllowlistsAllowListArrayOutput) Index(i pulumi.IntInput) AllowlistsAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowlistsAllowList {
		return vs[0].([]AllowlistsAllowList)[vs[1].(int)]
	}).(AllowlistsAllowListOutput)
}

type AllowlistsAllowListAssociatedInstance struct {
	// Instance ID. When an InstanceId is specified, the DescribeAllowLists interface will return the whitelist bound to the specified instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the instance.
	InstanceName string `pulumi:"instanceName"`
	// The id of the vpc.
	Vpc string `pulumi:"vpc"`
}

// AllowlistsAllowListAssociatedInstanceInput is an input type that accepts AllowlistsAllowListAssociatedInstanceArgs and AllowlistsAllowListAssociatedInstanceOutput values.
// You can construct a concrete instance of `AllowlistsAllowListAssociatedInstanceInput` via:
//
//	AllowlistsAllowListAssociatedInstanceArgs{...}
type AllowlistsAllowListAssociatedInstanceInput interface {
	pulumi.Input

	ToAllowlistsAllowListAssociatedInstanceOutput() AllowlistsAllowListAssociatedInstanceOutput
	ToAllowlistsAllowListAssociatedInstanceOutputWithContext(context.Context) AllowlistsAllowListAssociatedInstanceOutput
}

type AllowlistsAllowListAssociatedInstanceArgs struct {
	// Instance ID. When an InstanceId is specified, the DescribeAllowLists interface will return the whitelist bound to the specified instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The id of the vpc.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (AllowlistsAllowListAssociatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowlistsAllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowlistsAllowListAssociatedInstanceArgs) ToAllowlistsAllowListAssociatedInstanceOutput() AllowlistsAllowListAssociatedInstanceOutput {
	return i.ToAllowlistsAllowListAssociatedInstanceOutputWithContext(context.Background())
}

func (i AllowlistsAllowListAssociatedInstanceArgs) ToAllowlistsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowlistsAllowListAssociatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowlistsAllowListAssociatedInstanceOutput)
}

// AllowlistsAllowListAssociatedInstanceArrayInput is an input type that accepts AllowlistsAllowListAssociatedInstanceArray and AllowlistsAllowListAssociatedInstanceArrayOutput values.
// You can construct a concrete instance of `AllowlistsAllowListAssociatedInstanceArrayInput` via:
//
//	AllowlistsAllowListAssociatedInstanceArray{ AllowlistsAllowListAssociatedInstanceArgs{...} }
type AllowlistsAllowListAssociatedInstanceArrayInput interface {
	pulumi.Input

	ToAllowlistsAllowListAssociatedInstanceArrayOutput() AllowlistsAllowListAssociatedInstanceArrayOutput
	ToAllowlistsAllowListAssociatedInstanceArrayOutputWithContext(context.Context) AllowlistsAllowListAssociatedInstanceArrayOutput
}

type AllowlistsAllowListAssociatedInstanceArray []AllowlistsAllowListAssociatedInstanceInput

func (AllowlistsAllowListAssociatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowlistsAllowListAssociatedInstance)(nil)).Elem()
}

func (i AllowlistsAllowListAssociatedInstanceArray) ToAllowlistsAllowListAssociatedInstanceArrayOutput() AllowlistsAllowListAssociatedInstanceArrayOutput {
	return i.ToAllowlistsAllowListAssociatedInstanceArrayOutputWithContext(context.Background())
}

func (i AllowlistsAllowListAssociatedInstanceArray) ToAllowlistsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowlistsAllowListAssociatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowlistsAllowListAssociatedInstanceArrayOutput)
}

type AllowlistsAllowListAssociatedInstanceOutput struct{ *pulumi.OutputState }

func (AllowlistsAllowListAssociatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowlistsAllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowlistsAllowListAssociatedInstanceOutput) ToAllowlistsAllowListAssociatedInstanceOutput() AllowlistsAllowListAssociatedInstanceOutput {
	return o
}

func (o AllowlistsAllowListAssociatedInstanceOutput) ToAllowlistsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) AllowlistsAllowListAssociatedInstanceOutput {
	return o
}

// Instance ID. When an InstanceId is specified, the DescribeAllowLists interface will return the whitelist bound to the specified instance.
func (o AllowlistsAllowListAssociatedInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsAllowListAssociatedInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the instance.
func (o AllowlistsAllowListAssociatedInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsAllowListAssociatedInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The id of the vpc.
func (o AllowlistsAllowListAssociatedInstanceOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v AllowlistsAllowListAssociatedInstance) string { return v.Vpc }).(pulumi.StringOutput)
}

type AllowlistsAllowListAssociatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (AllowlistsAllowListAssociatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AllowlistsAllowListAssociatedInstance)(nil)).Elem()
}

func (o AllowlistsAllowListAssociatedInstanceArrayOutput) ToAllowlistsAllowListAssociatedInstanceArrayOutput() AllowlistsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowlistsAllowListAssociatedInstanceArrayOutput) ToAllowlistsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) AllowlistsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o AllowlistsAllowListAssociatedInstanceArrayOutput) Index(i pulumi.IntInput) AllowlistsAllowListAssociatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AllowlistsAllowListAssociatedInstance {
		return vs[0].([]AllowlistsAllowListAssociatedInstance)[vs[1].(int)]
	}).(AllowlistsAllowListAssociatedInstanceOutput)
}

type BackupBackupPolicy struct {
	// Data backup retention period, value: 7 to 30 days.
	BackupRetentionPeriod int `pulumi:"backupRetentionPeriod"`
	// The time for executing the backup task has an interval window of 2 hours and must be an even-hour time. Format: HH:mmZ-HH:mmZ (UTC time).
	BackupTime string `pulumi:"backupTime"`
	// Full backup period. It is recommended to select at least 2 days per week for full backup. Multiple values are separated by English commas (,). Values: Monday: Monday. Tuesday: Tuesday. Wednesday: Wednesday. Thursday: Thursday. Friday: Friday. Saturday: Saturday. Sunday: Sunday.
	FullBackupPeriod string `pulumi:"fullBackupPeriod"`
}

// BackupBackupPolicyInput is an input type that accepts BackupBackupPolicyArgs and BackupBackupPolicyOutput values.
// You can construct a concrete instance of `BackupBackupPolicyInput` via:
//
//	BackupBackupPolicyArgs{...}
type BackupBackupPolicyInput interface {
	pulumi.Input

	ToBackupBackupPolicyOutput() BackupBackupPolicyOutput
	ToBackupBackupPolicyOutputWithContext(context.Context) BackupBackupPolicyOutput
}

type BackupBackupPolicyArgs struct {
	// Data backup retention period, value: 7 to 30 days.
	BackupRetentionPeriod pulumi.IntInput `pulumi:"backupRetentionPeriod"`
	// The time for executing the backup task has an interval window of 2 hours and must be an even-hour time. Format: HH:mmZ-HH:mmZ (UTC time).
	BackupTime pulumi.StringInput `pulumi:"backupTime"`
	// Full backup period. It is recommended to select at least 2 days per week for full backup. Multiple values are separated by English commas (,). Values: Monday: Monday. Tuesday: Tuesday. Wednesday: Wednesday. Thursday: Thursday. Friday: Friday. Saturday: Saturday. Sunday: Sunday.
	FullBackupPeriod pulumi.StringInput `pulumi:"fullBackupPeriod"`
}

func (BackupBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupBackupPolicy)(nil)).Elem()
}

func (i BackupBackupPolicyArgs) ToBackupBackupPolicyOutput() BackupBackupPolicyOutput {
	return i.ToBackupBackupPolicyOutputWithContext(context.Background())
}

func (i BackupBackupPolicyArgs) ToBackupBackupPolicyOutputWithContext(ctx context.Context) BackupBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupBackupPolicyOutput)
}

func (i BackupBackupPolicyArgs) ToBackupBackupPolicyPtrOutput() BackupBackupPolicyPtrOutput {
	return i.ToBackupBackupPolicyPtrOutputWithContext(context.Background())
}

func (i BackupBackupPolicyArgs) ToBackupBackupPolicyPtrOutputWithContext(ctx context.Context) BackupBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupBackupPolicyOutput).ToBackupBackupPolicyPtrOutputWithContext(ctx)
}

// BackupBackupPolicyPtrInput is an input type that accepts BackupBackupPolicyArgs, BackupBackupPolicyPtr and BackupBackupPolicyPtrOutput values.
// You can construct a concrete instance of `BackupBackupPolicyPtrInput` via:
//
//	        BackupBackupPolicyArgs{...}
//
//	or:
//
//	        nil
type BackupBackupPolicyPtrInput interface {
	pulumi.Input

	ToBackupBackupPolicyPtrOutput() BackupBackupPolicyPtrOutput
	ToBackupBackupPolicyPtrOutputWithContext(context.Context) BackupBackupPolicyPtrOutput
}

type backupBackupPolicyPtrType BackupBackupPolicyArgs

func BackupBackupPolicyPtr(v *BackupBackupPolicyArgs) BackupBackupPolicyPtrInput {
	return (*backupBackupPolicyPtrType)(v)
}

func (*backupBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupBackupPolicy)(nil)).Elem()
}

func (i *backupBackupPolicyPtrType) ToBackupBackupPolicyPtrOutput() BackupBackupPolicyPtrOutput {
	return i.ToBackupBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *backupBackupPolicyPtrType) ToBackupBackupPolicyPtrOutputWithContext(ctx context.Context) BackupBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupBackupPolicyPtrOutput)
}

type BackupBackupPolicyOutput struct{ *pulumi.OutputState }

func (BackupBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupBackupPolicy)(nil)).Elem()
}

func (o BackupBackupPolicyOutput) ToBackupBackupPolicyOutput() BackupBackupPolicyOutput {
	return o
}

func (o BackupBackupPolicyOutput) ToBackupBackupPolicyOutputWithContext(ctx context.Context) BackupBackupPolicyOutput {
	return o
}

func (o BackupBackupPolicyOutput) ToBackupBackupPolicyPtrOutput() BackupBackupPolicyPtrOutput {
	return o.ToBackupBackupPolicyPtrOutputWithContext(context.Background())
}

func (o BackupBackupPolicyOutput) ToBackupBackupPolicyPtrOutputWithContext(ctx context.Context) BackupBackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupBackupPolicy) *BackupBackupPolicy {
		return &v
	}).(BackupBackupPolicyPtrOutput)
}

// Data backup retention period, value: 7 to 30 days.
func (o BackupBackupPolicyOutput) BackupRetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BackupBackupPolicy) int { return v.BackupRetentionPeriod }).(pulumi.IntOutput)
}

// The time for executing the backup task has an interval window of 2 hours and must be an even-hour time. Format: HH:mmZ-HH:mmZ (UTC time).
func (o BackupBackupPolicyOutput) BackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupBackupPolicy) string { return v.BackupTime }).(pulumi.StringOutput)
}

// Full backup period. It is recommended to select at least 2 days per week for full backup. Multiple values are separated by English commas (,). Values: Monday: Monday. Tuesday: Tuesday. Wednesday: Wednesday. Thursday: Thursday. Friday: Friday. Saturday: Saturday. Sunday: Sunday.
func (o BackupBackupPolicyOutput) FullBackupPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v BackupBackupPolicy) string { return v.FullBackupPeriod }).(pulumi.StringOutput)
}

type BackupBackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (BackupBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupBackupPolicy)(nil)).Elem()
}

func (o BackupBackupPolicyPtrOutput) ToBackupBackupPolicyPtrOutput() BackupBackupPolicyPtrOutput {
	return o
}

func (o BackupBackupPolicyPtrOutput) ToBackupBackupPolicyPtrOutputWithContext(ctx context.Context) BackupBackupPolicyPtrOutput {
	return o
}

func (o BackupBackupPolicyPtrOutput) Elem() BackupBackupPolicyOutput {
	return o.ApplyT(func(v *BackupBackupPolicy) BackupBackupPolicy {
		if v != nil {
			return *v
		}
		var ret BackupBackupPolicy
		return ret
	}).(BackupBackupPolicyOutput)
}

// Data backup retention period, value: 7 to 30 days.
func (o BackupBackupPolicyPtrOutput) BackupRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupBackupPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.BackupRetentionPeriod
	}).(pulumi.IntPtrOutput)
}

// The time for executing the backup task has an interval window of 2 hours and must be an even-hour time. Format: HH:mmZ-HH:mmZ (UTC time).
func (o BackupBackupPolicyPtrOutput) BackupTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.BackupTime
	}).(pulumi.StringPtrOutput)
}

// Full backup period. It is recommended to select at least 2 days per week for full backup. Multiple values are separated by English commas (,). Values: Monday: Monday. Tuesday: Tuesday. Wednesday: Wednesday. Thursday: Thursday. Friday: Friday. Saturday: Saturday. Sunday: Sunday.
func (o BackupBackupPolicyPtrOutput) FullBackupPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.FullBackupPeriod
	}).(pulumi.StringPtrOutput)
}

type BackupsBackup struct {
	// The end time of the backup.
	BackupEndTime string `pulumi:"backupEndTime"`
	// The size of the backup file.
	BackupFileSize int `pulumi:"backupFileSize"`
	// The id of the backup.
	BackupId string `pulumi:"backupId"`
	// Backup method. Currently, only physical backup is supported. The value is Physical.
	BackupMethod string `pulumi:"backupMethod"`
	// Data backup strategy for instances.
	BackupPolicies []BackupsBackupBackupPolicy `pulumi:"backupPolicies"`
	// The start time of the backup.
	BackupStartTime string `pulumi:"backupStartTime"`
	// The status of the backup.
	BackupStatus string `pulumi:"backupStatus"`
	// The type of the backup.
	BackupType string `pulumi:"backupType"`
	// The time point of consistent backup, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ConsistentTime string `pulumi:"consistentTime"`
	// The type of the backup create.
	CreateType string `pulumi:"createType"`
	// The id of the backup.
	Id string `pulumi:"id"`
}

// BackupsBackupInput is an input type that accepts BackupsBackupArgs and BackupsBackupOutput values.
// You can construct a concrete instance of `BackupsBackupInput` via:
//
//	BackupsBackupArgs{...}
type BackupsBackupInput interface {
	pulumi.Input

	ToBackupsBackupOutput() BackupsBackupOutput
	ToBackupsBackupOutputWithContext(context.Context) BackupsBackupOutput
}

type BackupsBackupArgs struct {
	// The end time of the backup.
	BackupEndTime pulumi.StringInput `pulumi:"backupEndTime"`
	// The size of the backup file.
	BackupFileSize pulumi.IntInput `pulumi:"backupFileSize"`
	// The id of the backup.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// Backup method. Currently, only physical backup is supported. The value is Physical.
	BackupMethod pulumi.StringInput `pulumi:"backupMethod"`
	// Data backup strategy for instances.
	BackupPolicies BackupsBackupBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// The start time of the backup.
	BackupStartTime pulumi.StringInput `pulumi:"backupStartTime"`
	// The status of the backup.
	BackupStatus pulumi.StringInput `pulumi:"backupStatus"`
	// The type of the backup.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The time point of consistent backup, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ConsistentTime pulumi.StringInput `pulumi:"consistentTime"`
	// The type of the backup create.
	CreateType pulumi.StringInput `pulumi:"createType"`
	// The id of the backup.
	Id pulumi.StringInput `pulumi:"id"`
}

func (BackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackup)(nil)).Elem()
}

func (i BackupsBackupArgs) ToBackupsBackupOutput() BackupsBackupOutput {
	return i.ToBackupsBackupOutputWithContext(context.Background())
}

func (i BackupsBackupArgs) ToBackupsBackupOutputWithContext(ctx context.Context) BackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupOutput)
}

// BackupsBackupArrayInput is an input type that accepts BackupsBackupArray and BackupsBackupArrayOutput values.
// You can construct a concrete instance of `BackupsBackupArrayInput` via:
//
//	BackupsBackupArray{ BackupsBackupArgs{...} }
type BackupsBackupArrayInput interface {
	pulumi.Input

	ToBackupsBackupArrayOutput() BackupsBackupArrayOutput
	ToBackupsBackupArrayOutputWithContext(context.Context) BackupsBackupArrayOutput
}

type BackupsBackupArray []BackupsBackupInput

func (BackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackup)(nil)).Elem()
}

func (i BackupsBackupArray) ToBackupsBackupArrayOutput() BackupsBackupArrayOutput {
	return i.ToBackupsBackupArrayOutputWithContext(context.Background())
}

func (i BackupsBackupArray) ToBackupsBackupArrayOutputWithContext(ctx context.Context) BackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupArrayOutput)
}

type BackupsBackupOutput struct{ *pulumi.OutputState }

func (BackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackup)(nil)).Elem()
}

func (o BackupsBackupOutput) ToBackupsBackupOutput() BackupsBackupOutput {
	return o
}

func (o BackupsBackupOutput) ToBackupsBackupOutputWithContext(ctx context.Context) BackupsBackupOutput {
	return o
}

// The end time of the backup.
func (o BackupsBackupOutput) BackupEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupEndTime }).(pulumi.StringOutput)
}

// The size of the backup file.
func (o BackupsBackupOutput) BackupFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackup) int { return v.BackupFileSize }).(pulumi.IntOutput)
}

// The id of the backup.
func (o BackupsBackupOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupId }).(pulumi.StringOutput)
}

// Backup method. Currently, only physical backup is supported. The value is Physical.
func (o BackupsBackupOutput) BackupMethod() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupMethod }).(pulumi.StringOutput)
}

// Data backup strategy for instances.
func (o BackupsBackupOutput) BackupPolicies() BackupsBackupBackupPolicyArrayOutput {
	return o.ApplyT(func(v BackupsBackup) []BackupsBackupBackupPolicy { return v.BackupPolicies }).(BackupsBackupBackupPolicyArrayOutput)
}

// The start time of the backup.
func (o BackupsBackupOutput) BackupStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupStartTime }).(pulumi.StringOutput)
}

// The status of the backup.
func (o BackupsBackupOutput) BackupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupStatus }).(pulumi.StringOutput)
}

// The type of the backup.
func (o BackupsBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.BackupType }).(pulumi.StringOutput)
}

// The time point of consistent backup, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o BackupsBackupOutput) ConsistentTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.ConsistentTime }).(pulumi.StringOutput)
}

// The type of the backup create.
func (o BackupsBackupOutput) CreateType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.CreateType }).(pulumi.StringOutput)
}

// The id of the backup.
func (o BackupsBackupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackup) string { return v.Id }).(pulumi.StringOutput)
}

type BackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackup)(nil)).Elem()
}

func (o BackupsBackupArrayOutput) ToBackupsBackupArrayOutput() BackupsBackupArrayOutput {
	return o
}

func (o BackupsBackupArrayOutput) ToBackupsBackupArrayOutputWithContext(ctx context.Context) BackupsBackupArrayOutput {
	return o
}

func (o BackupsBackupArrayOutput) Index(i pulumi.IntInput) BackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackup {
		return vs[0].([]BackupsBackup)[vs[1].(int)]
	}).(BackupsBackupOutput)
}

type BackupsBackupBackupPolicy struct {
	// Data backup retention period, value: 7 to 30 days.
	BackupRetentionPeriod int `pulumi:"backupRetentionPeriod"`
	// The time for executing the backup task. The interval window is two hours. Format: HH:mmZ-HH:mmZ (UTC time).
	BackupTime string `pulumi:"backupTime"`
	// Whether to enable continuous backup. The value is fixed as true.
	ContinueBackup bool `pulumi:"continueBackup"`
	// Full backup period. Multiple values are separated by English commas (,). Values:
	// Monday: Monday.
	// Tuesday: Tuesday.
	// Wednesday: Wednesday.
	// Thursday: Thursday.
	// Friday: Friday.
	// Saturday: Saturday.
	// Sunday: Sunday.
	FullBackupPeriod string `pulumi:"fullBackupPeriod"`
	// The id of the instance.
	InstanceId string `pulumi:"instanceId"`
}

// BackupsBackupBackupPolicyInput is an input type that accepts BackupsBackupBackupPolicyArgs and BackupsBackupBackupPolicyOutput values.
// You can construct a concrete instance of `BackupsBackupBackupPolicyInput` via:
//
//	BackupsBackupBackupPolicyArgs{...}
type BackupsBackupBackupPolicyInput interface {
	pulumi.Input

	ToBackupsBackupBackupPolicyOutput() BackupsBackupBackupPolicyOutput
	ToBackupsBackupBackupPolicyOutputWithContext(context.Context) BackupsBackupBackupPolicyOutput
}

type BackupsBackupBackupPolicyArgs struct {
	// Data backup retention period, value: 7 to 30 days.
	BackupRetentionPeriod pulumi.IntInput `pulumi:"backupRetentionPeriod"`
	// The time for executing the backup task. The interval window is two hours. Format: HH:mmZ-HH:mmZ (UTC time).
	BackupTime pulumi.StringInput `pulumi:"backupTime"`
	// Whether to enable continuous backup. The value is fixed as true.
	ContinueBackup pulumi.BoolInput `pulumi:"continueBackup"`
	// Full backup period. Multiple values are separated by English commas (,). Values:
	// Monday: Monday.
	// Tuesday: Tuesday.
	// Wednesday: Wednesday.
	// Thursday: Thursday.
	// Friday: Friday.
	// Saturday: Saturday.
	// Sunday: Sunday.
	FullBackupPeriod pulumi.StringInput `pulumi:"fullBackupPeriod"`
	// The id of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (BackupsBackupBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupBackupPolicy)(nil)).Elem()
}

func (i BackupsBackupBackupPolicyArgs) ToBackupsBackupBackupPolicyOutput() BackupsBackupBackupPolicyOutput {
	return i.ToBackupsBackupBackupPolicyOutputWithContext(context.Background())
}

func (i BackupsBackupBackupPolicyArgs) ToBackupsBackupBackupPolicyOutputWithContext(ctx context.Context) BackupsBackupBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupBackupPolicyOutput)
}

// BackupsBackupBackupPolicyArrayInput is an input type that accepts BackupsBackupBackupPolicyArray and BackupsBackupBackupPolicyArrayOutput values.
// You can construct a concrete instance of `BackupsBackupBackupPolicyArrayInput` via:
//
//	BackupsBackupBackupPolicyArray{ BackupsBackupBackupPolicyArgs{...} }
type BackupsBackupBackupPolicyArrayInput interface {
	pulumi.Input

	ToBackupsBackupBackupPolicyArrayOutput() BackupsBackupBackupPolicyArrayOutput
	ToBackupsBackupBackupPolicyArrayOutputWithContext(context.Context) BackupsBackupBackupPolicyArrayOutput
}

type BackupsBackupBackupPolicyArray []BackupsBackupBackupPolicyInput

func (BackupsBackupBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupBackupPolicy)(nil)).Elem()
}

func (i BackupsBackupBackupPolicyArray) ToBackupsBackupBackupPolicyArrayOutput() BackupsBackupBackupPolicyArrayOutput {
	return i.ToBackupsBackupBackupPolicyArrayOutputWithContext(context.Background())
}

func (i BackupsBackupBackupPolicyArray) ToBackupsBackupBackupPolicyArrayOutputWithContext(ctx context.Context) BackupsBackupBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupsBackupBackupPolicyArrayOutput)
}

type BackupsBackupBackupPolicyOutput struct{ *pulumi.OutputState }

func (BackupsBackupBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupsBackupBackupPolicy)(nil)).Elem()
}

func (o BackupsBackupBackupPolicyOutput) ToBackupsBackupBackupPolicyOutput() BackupsBackupBackupPolicyOutput {
	return o
}

func (o BackupsBackupBackupPolicyOutput) ToBackupsBackupBackupPolicyOutputWithContext(ctx context.Context) BackupsBackupBackupPolicyOutput {
	return o
}

// Data backup retention period, value: 7 to 30 days.
func (o BackupsBackupBackupPolicyOutput) BackupRetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v BackupsBackupBackupPolicy) int { return v.BackupRetentionPeriod }).(pulumi.IntOutput)
}

// The time for executing the backup task. The interval window is two hours. Format: HH:mmZ-HH:mmZ (UTC time).
func (o BackupsBackupBackupPolicyOutput) BackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupBackupPolicy) string { return v.BackupTime }).(pulumi.StringOutput)
}

// Whether to enable continuous backup. The value is fixed as true.
func (o BackupsBackupBackupPolicyOutput) ContinueBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupsBackupBackupPolicy) bool { return v.ContinueBackup }).(pulumi.BoolOutput)
}

// Full backup period. Multiple values are separated by English commas (,). Values:
// Monday: Monday.
// Tuesday: Tuesday.
// Wednesday: Wednesday.
// Thursday: Thursday.
// Friday: Friday.
// Saturday: Saturday.
// Sunday: Sunday.
func (o BackupsBackupBackupPolicyOutput) FullBackupPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupBackupPolicy) string { return v.FullBackupPeriod }).(pulumi.StringOutput)
}

// The id of the instance.
func (o BackupsBackupBackupPolicyOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupsBackupBackupPolicy) string { return v.InstanceId }).(pulumi.StringOutput)
}

type BackupsBackupBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (BackupsBackupBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupsBackupBackupPolicy)(nil)).Elem()
}

func (o BackupsBackupBackupPolicyArrayOutput) ToBackupsBackupBackupPolicyArrayOutput() BackupsBackupBackupPolicyArrayOutput {
	return o
}

func (o BackupsBackupBackupPolicyArrayOutput) ToBackupsBackupBackupPolicyArrayOutputWithContext(ctx context.Context) BackupsBackupBackupPolicyArrayOutput {
	return o
}

func (o BackupsBackupBackupPolicyArrayOutput) Index(i pulumi.IntInput) BackupsBackupBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupsBackupBackupPolicy {
		return vs[0].([]BackupsBackupBackupPolicy)[vs[1].(int)]
	}).(BackupsBackupBackupPolicyOutput)
}

type DatabasesDatabase struct {
	// Database character set: utf8mb4 (default), utf8, latin1, ascii.
	CharacterSetName    string                                `pulumi:"characterSetName"`
	DatabasesPrivileges []DatabasesDatabaseDatabasesPrivilege `pulumi:"databasesPrivileges"`
	// Database name.
	DbName string `pulumi:"dbName"`
}

// DatabasesDatabaseInput is an input type that accepts DatabasesDatabaseArgs and DatabasesDatabaseOutput values.
// You can construct a concrete instance of `DatabasesDatabaseInput` via:
//
//	DatabasesDatabaseArgs{...}
type DatabasesDatabaseInput interface {
	pulumi.Input

	ToDatabasesDatabaseOutput() DatabasesDatabaseOutput
	ToDatabasesDatabaseOutputWithContext(context.Context) DatabasesDatabaseOutput
}

type DatabasesDatabaseArgs struct {
	// Database character set: utf8mb4 (default), utf8, latin1, ascii.
	CharacterSetName    pulumi.StringInput                            `pulumi:"characterSetName"`
	DatabasesPrivileges DatabasesDatabaseDatabasesPrivilegeArrayInput `pulumi:"databasesPrivileges"`
	// Database name.
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (DatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasesDatabase)(nil)).Elem()
}

func (i DatabasesDatabaseArgs) ToDatabasesDatabaseOutput() DatabasesDatabaseOutput {
	return i.ToDatabasesDatabaseOutputWithContext(context.Background())
}

func (i DatabasesDatabaseArgs) ToDatabasesDatabaseOutputWithContext(ctx context.Context) DatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasesDatabaseOutput)
}

// DatabasesDatabaseArrayInput is an input type that accepts DatabasesDatabaseArray and DatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `DatabasesDatabaseArrayInput` via:
//
//	DatabasesDatabaseArray{ DatabasesDatabaseArgs{...} }
type DatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToDatabasesDatabaseArrayOutput() DatabasesDatabaseArrayOutput
	ToDatabasesDatabaseArrayOutputWithContext(context.Context) DatabasesDatabaseArrayOutput
}

type DatabasesDatabaseArray []DatabasesDatabaseInput

func (DatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasesDatabase)(nil)).Elem()
}

func (i DatabasesDatabaseArray) ToDatabasesDatabaseArrayOutput() DatabasesDatabaseArrayOutput {
	return i.ToDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i DatabasesDatabaseArray) ToDatabasesDatabaseArrayOutputWithContext(ctx context.Context) DatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasesDatabaseArrayOutput)
}

type DatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (DatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasesDatabase)(nil)).Elem()
}

func (o DatabasesDatabaseOutput) ToDatabasesDatabaseOutput() DatabasesDatabaseOutput {
	return o
}

func (o DatabasesDatabaseOutput) ToDatabasesDatabaseOutputWithContext(ctx context.Context) DatabasesDatabaseOutput {
	return o
}

// Database character set: utf8mb4 (default), utf8, latin1, ascii.
func (o DatabasesDatabaseOutput) CharacterSetName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesDatabase) string { return v.CharacterSetName }).(pulumi.StringOutput)
}

func (o DatabasesDatabaseOutput) DatabasesPrivileges() DatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return o.ApplyT(func(v DatabasesDatabase) []DatabasesDatabaseDatabasesPrivilege { return v.DatabasesPrivileges }).(DatabasesDatabaseDatabasesPrivilegeArrayOutput)
}

// Database name.
func (o DatabasesDatabaseOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesDatabase) string { return v.DbName }).(pulumi.StringOutput)
}

type DatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (DatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasesDatabase)(nil)).Elem()
}

func (o DatabasesDatabaseArrayOutput) ToDatabasesDatabaseArrayOutput() DatabasesDatabaseArrayOutput {
	return o
}

func (o DatabasesDatabaseArrayOutput) ToDatabasesDatabaseArrayOutputWithContext(ctx context.Context) DatabasesDatabaseArrayOutput {
	return o
}

func (o DatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) DatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabasesDatabase {
		return vs[0].([]DatabasesDatabase)[vs[1].(int)]
	}).(DatabasesDatabaseOutput)
}

type DatabasesDatabaseDatabasesPrivilege struct {
	// Account name that requires authorization.
	AccountName string `pulumi:"accountName"`
	// Authorization database privilege types:
	// ReadWrite: Read and write privilege.
	//  ReadOnly: Read-only privilege.
	//  DDLOnly: Only DDL privilege.
	//  DMLOnly: Only DML privilege.
	//  Custom: Custom privilege.
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
	//  When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
	AccountPrivilegeDetail string `pulumi:"accountPrivilegeDetail"`
}

// DatabasesDatabaseDatabasesPrivilegeInput is an input type that accepts DatabasesDatabaseDatabasesPrivilegeArgs and DatabasesDatabaseDatabasesPrivilegeOutput values.
// You can construct a concrete instance of `DatabasesDatabaseDatabasesPrivilegeInput` via:
//
//	DatabasesDatabaseDatabasesPrivilegeArgs{...}
type DatabasesDatabaseDatabasesPrivilegeInput interface {
	pulumi.Input

	ToDatabasesDatabaseDatabasesPrivilegeOutput() DatabasesDatabaseDatabasesPrivilegeOutput
	ToDatabasesDatabaseDatabasesPrivilegeOutputWithContext(context.Context) DatabasesDatabaseDatabasesPrivilegeOutput
}

type DatabasesDatabaseDatabasesPrivilegeArgs struct {
	// Account name that requires authorization.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Authorization database privilege types:
	// ReadWrite: Read and write privilege.
	//  ReadOnly: Read-only privilege.
	//  DDLOnly: Only DDL privilege.
	//  DMLOnly: Only DML privilege.
	//  Custom: Custom privilege.
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
	//  When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
	AccountPrivilegeDetail pulumi.StringInput `pulumi:"accountPrivilegeDetail"`
}

func (DatabasesDatabaseDatabasesPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasesDatabaseDatabasesPrivilege)(nil)).Elem()
}

func (i DatabasesDatabaseDatabasesPrivilegeArgs) ToDatabasesDatabaseDatabasesPrivilegeOutput() DatabasesDatabaseDatabasesPrivilegeOutput {
	return i.ToDatabasesDatabaseDatabasesPrivilegeOutputWithContext(context.Background())
}

func (i DatabasesDatabaseDatabasesPrivilegeArgs) ToDatabasesDatabaseDatabasesPrivilegeOutputWithContext(ctx context.Context) DatabasesDatabaseDatabasesPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasesDatabaseDatabasesPrivilegeOutput)
}

// DatabasesDatabaseDatabasesPrivilegeArrayInput is an input type that accepts DatabasesDatabaseDatabasesPrivilegeArray and DatabasesDatabaseDatabasesPrivilegeArrayOutput values.
// You can construct a concrete instance of `DatabasesDatabaseDatabasesPrivilegeArrayInput` via:
//
//	DatabasesDatabaseDatabasesPrivilegeArray{ DatabasesDatabaseDatabasesPrivilegeArgs{...} }
type DatabasesDatabaseDatabasesPrivilegeArrayInput interface {
	pulumi.Input

	ToDatabasesDatabaseDatabasesPrivilegeArrayOutput() DatabasesDatabaseDatabasesPrivilegeArrayOutput
	ToDatabasesDatabaseDatabasesPrivilegeArrayOutputWithContext(context.Context) DatabasesDatabaseDatabasesPrivilegeArrayOutput
}

type DatabasesDatabaseDatabasesPrivilegeArray []DatabasesDatabaseDatabasesPrivilegeInput

func (DatabasesDatabaseDatabasesPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasesDatabaseDatabasesPrivilege)(nil)).Elem()
}

func (i DatabasesDatabaseDatabasesPrivilegeArray) ToDatabasesDatabaseDatabasesPrivilegeArrayOutput() DatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return i.ToDatabasesDatabaseDatabasesPrivilegeArrayOutputWithContext(context.Background())
}

func (i DatabasesDatabaseDatabasesPrivilegeArray) ToDatabasesDatabaseDatabasesPrivilegeArrayOutputWithContext(ctx context.Context) DatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasesDatabaseDatabasesPrivilegeArrayOutput)
}

type DatabasesDatabaseDatabasesPrivilegeOutput struct{ *pulumi.OutputState }

func (DatabasesDatabaseDatabasesPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasesDatabaseDatabasesPrivilege)(nil)).Elem()
}

func (o DatabasesDatabaseDatabasesPrivilegeOutput) ToDatabasesDatabaseDatabasesPrivilegeOutput() DatabasesDatabaseDatabasesPrivilegeOutput {
	return o
}

func (o DatabasesDatabaseDatabasesPrivilegeOutput) ToDatabasesDatabaseDatabasesPrivilegeOutputWithContext(ctx context.Context) DatabasesDatabaseDatabasesPrivilegeOutput {
	return o
}

// Account name that requires authorization.
func (o DatabasesDatabaseDatabasesPrivilegeOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesDatabaseDatabasesPrivilege) string { return v.AccountName }).(pulumi.StringOutput)
}

// Authorization database privilege types:
// ReadWrite: Read and write privilege.
//
//	ReadOnly: Read-only privilege.
//	DDLOnly: Only DDL privilege.
//	DMLOnly: Only DML privilege.
//	Custom: Custom privilege.
func (o DatabasesDatabaseDatabasesPrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesDatabaseDatabasesPrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
//
//	When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
func (o DatabasesDatabaseDatabasesPrivilegeOutput) AccountPrivilegeDetail() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesDatabaseDatabasesPrivilege) string { return v.AccountPrivilegeDetail }).(pulumi.StringOutput)
}

type DatabasesDatabaseDatabasesPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (DatabasesDatabaseDatabasesPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasesDatabaseDatabasesPrivilege)(nil)).Elem()
}

func (o DatabasesDatabaseDatabasesPrivilegeArrayOutput) ToDatabasesDatabaseDatabasesPrivilegeArrayOutput() DatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return o
}

func (o DatabasesDatabaseDatabasesPrivilegeArrayOutput) ToDatabasesDatabaseDatabasesPrivilegeArrayOutputWithContext(ctx context.Context) DatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return o
}

func (o DatabasesDatabaseDatabasesPrivilegeArrayOutput) Index(i pulumi.IntInput) DatabasesDatabaseDatabasesPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabasesDatabaseDatabasesPrivilege {
		return vs[0].([]DatabasesDatabaseDatabasesPrivilege)[vs[1].(int)]
	}).(DatabasesDatabaseDatabasesPrivilegeOutput)
}

type EndpointsEndpoint struct {
	// The address information.
	Addresses []EndpointsEndpointAddress `pulumi:"addresses"`
	// Set whether newly created read-only nodes will automatically join this connection endpoint. Values:
	// true: Automatically join.
	// false: Do not automatically join (default).
	AutoAddNewNodes bool `pulumi:"autoAddNewNodes"`
	// Consistency level. For detailed introduction of consistency level, please refer to consistency level. Value range:
	// Eventual: eventual consistency.
	// Session: session consistency.
	// Global: global consistency.
	// Description
	// When the value of ReadWriteMode is ReadWrite, the selectable consistency levels are Eventual, Session (default), and Global.
	// When the value of ReadWriteMode is ReadOnly, the consistency level is Eventual by default and cannot be changed.
	ConsistLevel string `pulumi:"consistLevel"`
	// When there is a large delay, the timeout period for read-only nodes to synchronize the latest data, in us. The value range is from 1us to 100000000us, and the default value is 10000us.
	// Explanation
	// This parameter takes effect only when the value of ConsistLevel is Global or Session.
	ConsistTimeout int `pulumi:"consistTimeout"`
	// Timeout policy after data synchronization timeout of read-only nodes supports the following two policies:
	// ReturnError: Return SQL error (wait replication complete timeout, please retry).
	// ReadMaster: Send a request to the master node (default).
	// Description
	// This parameter takes effect only when the value of ConsistLevel is Global or Session.
	ConsistTimeoutAction string `pulumi:"consistTimeoutAction"`
	// Description information for connecting endpoint. The length cannot exceed 200 characters.
	Description string `pulumi:"description"`
	// Set whether to enable transaction splitting. For detailed introduction to transaction splitting, please refer to transaction splitting. Value range:
	// true: Enabled (default).
	// false: Disabled.
	// Description
	// Only when the value of ReadWriteMode is ReadWrite, is enabling transaction splitting supported.
	DistributedTransaction bool `pulumi:"distributedTransaction"`
	// The id of the endpoint.
	EndpointId string `pulumi:"endpointId"`
	// Connect the endpoint name. The setting rules are as follows:
	// It cannot start with a number or a hyphen (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
	// The length is 1 to 64 characters.
	EndpointName string `pulumi:"endpointName"`
	// Connect terminal type. The value is fixed as Custom, indicating a custom terminal.
	EndpointType string `pulumi:"endpointType"`
	// The id of the endpoint.
	Id string `pulumi:"id"`
	// The master node accepts read requests. Value range:
	// true: (default) After enabling the master node to accept read functions, non-transactional read requests will be sent to the master node or read-only nodes in a load-balanced mode according to the number of active requests.
	// false: After disabling the master node from accepting read requests, at this time, the master node only accepts transactional read requests, and non-transactional read requests will not be sent to the master node.
	// Description
	// Only when the value of ReadWriteMode is ReadWrite, enabling the master node to accept reads is supported.
	MasterAcceptReadRequests bool `pulumi:"masterAcceptReadRequests"`
	// Connect the node IDs associated with the endpoint.The filling rules are as follows:
	// When the value of ReadWriteMode is ReadWrite, at least two nodes must be passed in, and the master node must be passed in.
	// When the value of ReadWriteMode is ReadOnly, one or more read-only nodes can be passed in.
	NodeIds []string `pulumi:"nodeIds"`
	// Endpoint read-write mode. Values:
	// ReadWrite: Read and write terminal.
	// ReadOnly: Read-only terminal (default).
	ReadWriteMode string `pulumi:"readWriteMode"`
}

// EndpointsEndpointInput is an input type that accepts EndpointsEndpointArgs and EndpointsEndpointOutput values.
// You can construct a concrete instance of `EndpointsEndpointInput` via:
//
//	EndpointsEndpointArgs{...}
type EndpointsEndpointInput interface {
	pulumi.Input

	ToEndpointsEndpointOutput() EndpointsEndpointOutput
	ToEndpointsEndpointOutputWithContext(context.Context) EndpointsEndpointOutput
}

type EndpointsEndpointArgs struct {
	// The address information.
	Addresses EndpointsEndpointAddressArrayInput `pulumi:"addresses"`
	// Set whether newly created read-only nodes will automatically join this connection endpoint. Values:
	// true: Automatically join.
	// false: Do not automatically join (default).
	AutoAddNewNodes pulumi.BoolInput `pulumi:"autoAddNewNodes"`
	// Consistency level. For detailed introduction of consistency level, please refer to consistency level. Value range:
	// Eventual: eventual consistency.
	// Session: session consistency.
	// Global: global consistency.
	// Description
	// When the value of ReadWriteMode is ReadWrite, the selectable consistency levels are Eventual, Session (default), and Global.
	// When the value of ReadWriteMode is ReadOnly, the consistency level is Eventual by default and cannot be changed.
	ConsistLevel pulumi.StringInput `pulumi:"consistLevel"`
	// When there is a large delay, the timeout period for read-only nodes to synchronize the latest data, in us. The value range is from 1us to 100000000us, and the default value is 10000us.
	// Explanation
	// This parameter takes effect only when the value of ConsistLevel is Global or Session.
	ConsistTimeout pulumi.IntInput `pulumi:"consistTimeout"`
	// Timeout policy after data synchronization timeout of read-only nodes supports the following two policies:
	// ReturnError: Return SQL error (wait replication complete timeout, please retry).
	// ReadMaster: Send a request to the master node (default).
	// Description
	// This parameter takes effect only when the value of ConsistLevel is Global or Session.
	ConsistTimeoutAction pulumi.StringInput `pulumi:"consistTimeoutAction"`
	// Description information for connecting endpoint. The length cannot exceed 200 characters.
	Description pulumi.StringInput `pulumi:"description"`
	// Set whether to enable transaction splitting. For detailed introduction to transaction splitting, please refer to transaction splitting. Value range:
	// true: Enabled (default).
	// false: Disabled.
	// Description
	// Only when the value of ReadWriteMode is ReadWrite, is enabling transaction splitting supported.
	DistributedTransaction pulumi.BoolInput `pulumi:"distributedTransaction"`
	// The id of the endpoint.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Connect the endpoint name. The setting rules are as follows:
	// It cannot start with a number or a hyphen (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
	// The length is 1 to 64 characters.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// Connect terminal type. The value is fixed as Custom, indicating a custom terminal.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The id of the endpoint.
	Id pulumi.StringInput `pulumi:"id"`
	// The master node accepts read requests. Value range:
	// true: (default) After enabling the master node to accept read functions, non-transactional read requests will be sent to the master node or read-only nodes in a load-balanced mode according to the number of active requests.
	// false: After disabling the master node from accepting read requests, at this time, the master node only accepts transactional read requests, and non-transactional read requests will not be sent to the master node.
	// Description
	// Only when the value of ReadWriteMode is ReadWrite, enabling the master node to accept reads is supported.
	MasterAcceptReadRequests pulumi.BoolInput `pulumi:"masterAcceptReadRequests"`
	// Connect the node IDs associated with the endpoint.The filling rules are as follows:
	// When the value of ReadWriteMode is ReadWrite, at least two nodes must be passed in, and the master node must be passed in.
	// When the value of ReadWriteMode is ReadOnly, one or more read-only nodes can be passed in.
	NodeIds pulumi.StringArrayInput `pulumi:"nodeIds"`
	// Endpoint read-write mode. Values:
	// ReadWrite: Read and write terminal.
	// ReadOnly: Read-only terminal (default).
	ReadWriteMode pulumi.StringInput `pulumi:"readWriteMode"`
}

func (EndpointsEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsEndpoint)(nil)).Elem()
}

func (i EndpointsEndpointArgs) ToEndpointsEndpointOutput() EndpointsEndpointOutput {
	return i.ToEndpointsEndpointOutputWithContext(context.Background())
}

func (i EndpointsEndpointArgs) ToEndpointsEndpointOutputWithContext(ctx context.Context) EndpointsEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsEndpointOutput)
}

// EndpointsEndpointArrayInput is an input type that accepts EndpointsEndpointArray and EndpointsEndpointArrayOutput values.
// You can construct a concrete instance of `EndpointsEndpointArrayInput` via:
//
//	EndpointsEndpointArray{ EndpointsEndpointArgs{...} }
type EndpointsEndpointArrayInput interface {
	pulumi.Input

	ToEndpointsEndpointArrayOutput() EndpointsEndpointArrayOutput
	ToEndpointsEndpointArrayOutputWithContext(context.Context) EndpointsEndpointArrayOutput
}

type EndpointsEndpointArray []EndpointsEndpointInput

func (EndpointsEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointsEndpoint)(nil)).Elem()
}

func (i EndpointsEndpointArray) ToEndpointsEndpointArrayOutput() EndpointsEndpointArrayOutput {
	return i.ToEndpointsEndpointArrayOutputWithContext(context.Background())
}

func (i EndpointsEndpointArray) ToEndpointsEndpointArrayOutputWithContext(ctx context.Context) EndpointsEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsEndpointArrayOutput)
}

type EndpointsEndpointOutput struct{ *pulumi.OutputState }

func (EndpointsEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsEndpoint)(nil)).Elem()
}

func (o EndpointsEndpointOutput) ToEndpointsEndpointOutput() EndpointsEndpointOutput {
	return o
}

func (o EndpointsEndpointOutput) ToEndpointsEndpointOutputWithContext(ctx context.Context) EndpointsEndpointOutput {
	return o
}

// The address information.
func (o EndpointsEndpointOutput) Addresses() EndpointsEndpointAddressArrayOutput {
	return o.ApplyT(func(v EndpointsEndpoint) []EndpointsEndpointAddress { return v.Addresses }).(EndpointsEndpointAddressArrayOutput)
}

// Set whether newly created read-only nodes will automatically join this connection endpoint. Values:
// true: Automatically join.
// false: Do not automatically join (default).
func (o EndpointsEndpointOutput) AutoAddNewNodes() pulumi.BoolOutput {
	return o.ApplyT(func(v EndpointsEndpoint) bool { return v.AutoAddNewNodes }).(pulumi.BoolOutput)
}

// Consistency level. For detailed introduction of consistency level, please refer to consistency level. Value range:
// Eventual: eventual consistency.
// Session: session consistency.
// Global: global consistency.
// Description
// When the value of ReadWriteMode is ReadWrite, the selectable consistency levels are Eventual, Session (default), and Global.
// When the value of ReadWriteMode is ReadOnly, the consistency level is Eventual by default and cannot be changed.
func (o EndpointsEndpointOutput) ConsistLevel() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpoint) string { return v.ConsistLevel }).(pulumi.StringOutput)
}

// When there is a large delay, the timeout period for read-only nodes to synchronize the latest data, in us. The value range is from 1us to 100000000us, and the default value is 10000us.
// Explanation
// This parameter takes effect only when the value of ConsistLevel is Global or Session.
func (o EndpointsEndpointOutput) ConsistTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointsEndpoint) int { return v.ConsistTimeout }).(pulumi.IntOutput)
}

// Timeout policy after data synchronization timeout of read-only nodes supports the following two policies:
// ReturnError: Return SQL error (wait replication complete timeout, please retry).
// ReadMaster: Send a request to the master node (default).
// Description
// This parameter takes effect only when the value of ConsistLevel is Global or Session.
func (o EndpointsEndpointOutput) ConsistTimeoutAction() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpoint) string { return v.ConsistTimeoutAction }).(pulumi.StringOutput)
}

// Description information for connecting endpoint. The length cannot exceed 200 characters.
func (o EndpointsEndpointOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpoint) string { return v.Description }).(pulumi.StringOutput)
}

// Set whether to enable transaction splitting. For detailed introduction to transaction splitting, please refer to transaction splitting. Value range:
// true: Enabled (default).
// false: Disabled.
// Description
// Only when the value of ReadWriteMode is ReadWrite, is enabling transaction splitting supported.
func (o EndpointsEndpointOutput) DistributedTransaction() pulumi.BoolOutput {
	return o.ApplyT(func(v EndpointsEndpoint) bool { return v.DistributedTransaction }).(pulumi.BoolOutput)
}

// The id of the endpoint.
func (o EndpointsEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Connect the endpoint name. The setting rules are as follows:
// It cannot start with a number or a hyphen (-).
// It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
// The length is 1 to 64 characters.
func (o EndpointsEndpointOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpoint) string { return v.EndpointName }).(pulumi.StringOutput)
}

// Connect terminal type. The value is fixed as Custom, indicating a custom terminal.
func (o EndpointsEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The id of the endpoint.
func (o EndpointsEndpointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpoint) string { return v.Id }).(pulumi.StringOutput)
}

// The master node accepts read requests. Value range:
// true: (default) After enabling the master node to accept read functions, non-transactional read requests will be sent to the master node or read-only nodes in a load-balanced mode according to the number of active requests.
// false: After disabling the master node from accepting read requests, at this time, the master node only accepts transactional read requests, and non-transactional read requests will not be sent to the master node.
// Description
// Only when the value of ReadWriteMode is ReadWrite, enabling the master node to accept reads is supported.
func (o EndpointsEndpointOutput) MasterAcceptReadRequests() pulumi.BoolOutput {
	return o.ApplyT(func(v EndpointsEndpoint) bool { return v.MasterAcceptReadRequests }).(pulumi.BoolOutput)
}

// Connect the node IDs associated with the endpoint.The filling rules are as follows:
// When the value of ReadWriteMode is ReadWrite, at least two nodes must be passed in, and the master node must be passed in.
// When the value of ReadWriteMode is ReadOnly, one or more read-only nodes can be passed in.
func (o EndpointsEndpointOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointsEndpoint) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// Endpoint read-write mode. Values:
// ReadWrite: Read and write terminal.
// ReadOnly: Read-only terminal (default).
func (o EndpointsEndpointOutput) ReadWriteMode() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpoint) string { return v.ReadWriteMode }).(pulumi.StringOutput)
}

type EndpointsEndpointArrayOutput struct{ *pulumi.OutputState }

func (EndpointsEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointsEndpoint)(nil)).Elem()
}

func (o EndpointsEndpointArrayOutput) ToEndpointsEndpointArrayOutput() EndpointsEndpointArrayOutput {
	return o
}

func (o EndpointsEndpointArrayOutput) ToEndpointsEndpointArrayOutputWithContext(ctx context.Context) EndpointsEndpointArrayOutput {
	return o
}

func (o EndpointsEndpointArrayOutput) Index(i pulumi.IntInput) EndpointsEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointsEndpoint {
		return vs[0].([]EndpointsEndpoint)[vs[1].(int)]
	}).(EndpointsEndpointOutput)
}

type EndpointsEndpointAddress struct {
	// Parsing method. Currently, the return value can only be false (Volcengine private network parsing).
	DnsVisibility bool `pulumi:"dnsVisibility"`
	// Instance intranet access domain name.
	Domain string `pulumi:"domain"`
	// The EIP id.
	EipId string `pulumi:"eipId"`
	// IP address.
	IpAddress string `pulumi:"ipAddress"`
	// Network type:
	// Private: Private network VPC.
	// Public: Public network access.
	NetworkType string `pulumi:"networkType"`
	// Instance intranet access port.
	Port string `pulumi:"port"`
	// Subnet ID. The subnet must belong to the selected availability zone.
	// Description
	// A subnet is an IP address block within a private network. All cloud resources in a private network must be deployed within a subnet. The subnet assigns private IP addresses to cloud resources.
	SubnetId string `pulumi:"subnetId"`
}

// EndpointsEndpointAddressInput is an input type that accepts EndpointsEndpointAddressArgs and EndpointsEndpointAddressOutput values.
// You can construct a concrete instance of `EndpointsEndpointAddressInput` via:
//
//	EndpointsEndpointAddressArgs{...}
type EndpointsEndpointAddressInput interface {
	pulumi.Input

	ToEndpointsEndpointAddressOutput() EndpointsEndpointAddressOutput
	ToEndpointsEndpointAddressOutputWithContext(context.Context) EndpointsEndpointAddressOutput
}

type EndpointsEndpointAddressArgs struct {
	// Parsing method. Currently, the return value can only be false (Volcengine private network parsing).
	DnsVisibility pulumi.BoolInput `pulumi:"dnsVisibility"`
	// Instance intranet access domain name.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The EIP id.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// IP address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Network type:
	// Private: Private network VPC.
	// Public: Public network access.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Instance intranet access port.
	Port pulumi.StringInput `pulumi:"port"`
	// Subnet ID. The subnet must belong to the selected availability zone.
	// Description
	// A subnet is an IP address block within a private network. All cloud resources in a private network must be deployed within a subnet. The subnet assigns private IP addresses to cloud resources.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (EndpointsEndpointAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsEndpointAddress)(nil)).Elem()
}

func (i EndpointsEndpointAddressArgs) ToEndpointsEndpointAddressOutput() EndpointsEndpointAddressOutput {
	return i.ToEndpointsEndpointAddressOutputWithContext(context.Background())
}

func (i EndpointsEndpointAddressArgs) ToEndpointsEndpointAddressOutputWithContext(ctx context.Context) EndpointsEndpointAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsEndpointAddressOutput)
}

// EndpointsEndpointAddressArrayInput is an input type that accepts EndpointsEndpointAddressArray and EndpointsEndpointAddressArrayOutput values.
// You can construct a concrete instance of `EndpointsEndpointAddressArrayInput` via:
//
//	EndpointsEndpointAddressArray{ EndpointsEndpointAddressArgs{...} }
type EndpointsEndpointAddressArrayInput interface {
	pulumi.Input

	ToEndpointsEndpointAddressArrayOutput() EndpointsEndpointAddressArrayOutput
	ToEndpointsEndpointAddressArrayOutputWithContext(context.Context) EndpointsEndpointAddressArrayOutput
}

type EndpointsEndpointAddressArray []EndpointsEndpointAddressInput

func (EndpointsEndpointAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointsEndpointAddress)(nil)).Elem()
}

func (i EndpointsEndpointAddressArray) ToEndpointsEndpointAddressArrayOutput() EndpointsEndpointAddressArrayOutput {
	return i.ToEndpointsEndpointAddressArrayOutputWithContext(context.Background())
}

func (i EndpointsEndpointAddressArray) ToEndpointsEndpointAddressArrayOutputWithContext(ctx context.Context) EndpointsEndpointAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsEndpointAddressArrayOutput)
}

type EndpointsEndpointAddressOutput struct{ *pulumi.OutputState }

func (EndpointsEndpointAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointsEndpointAddress)(nil)).Elem()
}

func (o EndpointsEndpointAddressOutput) ToEndpointsEndpointAddressOutput() EndpointsEndpointAddressOutput {
	return o
}

func (o EndpointsEndpointAddressOutput) ToEndpointsEndpointAddressOutputWithContext(ctx context.Context) EndpointsEndpointAddressOutput {
	return o
}

// Parsing method. Currently, the return value can only be false (Volcengine private network parsing).
func (o EndpointsEndpointAddressOutput) DnsVisibility() pulumi.BoolOutput {
	return o.ApplyT(func(v EndpointsEndpointAddress) bool { return v.DnsVisibility }).(pulumi.BoolOutput)
}

// Instance intranet access domain name.
func (o EndpointsEndpointAddressOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpointAddress) string { return v.Domain }).(pulumi.StringOutput)
}

// The EIP id.
func (o EndpointsEndpointAddressOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpointAddress) string { return v.EipId }).(pulumi.StringOutput)
}

// IP address.
func (o EndpointsEndpointAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpointAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Network type:
// Private: Private network VPC.
// Public: Public network access.
func (o EndpointsEndpointAddressOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpointAddress) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Instance intranet access port.
func (o EndpointsEndpointAddressOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpointAddress) string { return v.Port }).(pulumi.StringOutput)
}

// Subnet ID. The subnet must belong to the selected availability zone.
// Description
// A subnet is an IP address block within a private network. All cloud resources in a private network must be deployed within a subnet. The subnet assigns private IP addresses to cloud resources.
func (o EndpointsEndpointAddressOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointsEndpointAddress) string { return v.SubnetId }).(pulumi.StringOutput)
}

type EndpointsEndpointAddressArrayOutput struct{ *pulumi.OutputState }

func (EndpointsEndpointAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointsEndpointAddress)(nil)).Elem()
}

func (o EndpointsEndpointAddressArrayOutput) ToEndpointsEndpointAddressArrayOutput() EndpointsEndpointAddressArrayOutput {
	return o
}

func (o EndpointsEndpointAddressArrayOutput) ToEndpointsEndpointAddressArrayOutputWithContext(ctx context.Context) EndpointsEndpointAddressArrayOutput {
	return o
}

func (o EndpointsEndpointAddressArrayOutput) Index(i pulumi.IntInput) EndpointsEndpointAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointsEndpointAddress {
		return vs[0].([]EndpointsEndpointAddress)[vs[1].(int)]
	}).(EndpointsEndpointAddressOutput)
}

type InstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstanceTagInput is an input type that accepts InstanceTagArgs and InstanceTagOutput values.
// You can construct a concrete instance of `InstanceTagInput` via:
//
//	InstanceTagArgs{...}
type InstanceTagInput interface {
	pulumi.Input

	ToInstanceTagOutput() InstanceTagOutput
	ToInstanceTagOutputWithContext(context.Context) InstanceTagOutput
}

type InstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (i InstanceTagArgs) ToInstanceTagOutput() InstanceTagOutput {
	return i.ToInstanceTagOutputWithContext(context.Background())
}

func (i InstanceTagArgs) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagOutput)
}

// InstanceTagArrayInput is an input type that accepts InstanceTagArray and InstanceTagArrayOutput values.
// You can construct a concrete instance of `InstanceTagArrayInput` via:
//
//	InstanceTagArray{ InstanceTagArgs{...} }
type InstanceTagArrayInput interface {
	pulumi.Input

	ToInstanceTagArrayOutput() InstanceTagArrayOutput
	ToInstanceTagArrayOutputWithContext(context.Context) InstanceTagArrayOutput
}

type InstanceTagArray []InstanceTagInput

func (InstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (i InstanceTagArray) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return i.ToInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstanceTagArray) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagArrayOutput)
}

type InstanceTagOutput struct{ *pulumi.OutputState }

func (InstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (o InstanceTagOutput) ToInstanceTagOutput() InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return o
}

// The Key of Tags.
func (o InstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) Index(i pulumi.IntInput) InstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTag {
		return vs[0].([]InstanceTag)[vs[1].(int)]
	}).(InstanceTagOutput)
}

type InstancesInstance struct {
	// Whether auto-renewal is enabled in the prepaid scenario. Values:
	// true: Auto-renewal is enabled.
	// false: Auto-renewal is not enabled.
	AutoRenew bool `pulumi:"autoRenew"`
	// The billing expiration time in the prepaid scenario, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ChargeEndTime string `pulumi:"chargeEndTime"`
	// The time when billing starts. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ChargeStartTime string `pulumi:"chargeStartTime"`
	// Payment status:
	// Normal: Normal.
	// Overdue: In arrears.
	// Shutdown: Shut down.
	ChargeStatus string `pulumi:"chargeStatus"`
	// The charge type of the veDB Mysql instance.
	ChargeType string `pulumi:"chargeType"`
	// The create time of the veDB Mysql instance.
	CreateTime string `pulumi:"createTime"`
	// The version of the veDB Mysql instance.
	DbEngineVersion string `pulumi:"dbEngineVersion"`
	// The ID of the veDB Mysql instance.
	Id string `pulumi:"id"`
	// The id of the veDB Mysql instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the veDB Mysql instance.
	InstanceName string `pulumi:"instanceName"`
	// The status of the veDB Mysql instance.
	InstanceStatus string `pulumi:"instanceStatus"`
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames string `pulumi:"lowerCaseTableNames"`
	// Detailed information of instance nodes.
	Nodes []InstancesInstanceNode `pulumi:"nodes"`
	// Expected release time when shut down due to arrears. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	OverdueReclaimTime string `pulumi:"overdueReclaimTime"`
	// Overdue shutdown time. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	OverdueTime string `pulumi:"overdueTime"`
	// Total storage capacity in GiB for prepaid services.
	PrePaidStorageInGb int `pulumi:"prePaidStorageInGb"`
	// The project name of the veDB Mysql instance.
	ProjectName string `pulumi:"projectName"`
	// The region id.
	RegionId string `pulumi:"regionId"`
	// Storage billing type. Values:
	// PostPaid: Pay-as-you-go (postpaid).
	// PrePaid: Monthly/yearly subscription (prepaid).
	StorageChargeType string `pulumi:"storageChargeType"`
	// Used storage size, unit: GiB.
	StorageUsedGib float64 `pulumi:"storageUsedGib"`
	// The subnet ID of the veDB Mysql instance.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []InstancesInstanceTag `pulumi:"tags"`
	// Time zone.
	TimeZone string `pulumi:"timeZone"`
	// The vpc ID of the veDB Mysql instance.
	VpcId string `pulumi:"vpcId"`
	// The available zone of the veDB Mysql instance.
	ZoneIds string `pulumi:"zoneIds"`
}

// InstancesInstanceInput is an input type that accepts InstancesInstanceArgs and InstancesInstanceOutput values.
// You can construct a concrete instance of `InstancesInstanceInput` via:
//
//	InstancesInstanceArgs{...}
type InstancesInstanceInput interface {
	pulumi.Input

	ToInstancesInstanceOutput() InstancesInstanceOutput
	ToInstancesInstanceOutputWithContext(context.Context) InstancesInstanceOutput
}

type InstancesInstanceArgs struct {
	// Whether auto-renewal is enabled in the prepaid scenario. Values:
	// true: Auto-renewal is enabled.
	// false: Auto-renewal is not enabled.
	AutoRenew pulumi.BoolInput `pulumi:"autoRenew"`
	// The billing expiration time in the prepaid scenario, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ChargeEndTime pulumi.StringInput `pulumi:"chargeEndTime"`
	// The time when billing starts. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ChargeStartTime pulumi.StringInput `pulumi:"chargeStartTime"`
	// Payment status:
	// Normal: Normal.
	// Overdue: In arrears.
	// Shutdown: Shut down.
	ChargeStatus pulumi.StringInput `pulumi:"chargeStatus"`
	// The charge type of the veDB Mysql instance.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The create time of the veDB Mysql instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The version of the veDB Mysql instance.
	DbEngineVersion pulumi.StringInput `pulumi:"dbEngineVersion"`
	// The ID of the veDB Mysql instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the veDB Mysql instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the veDB Mysql instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The status of the veDB Mysql instance.
	InstanceStatus pulumi.StringInput `pulumi:"instanceStatus"`
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames pulumi.StringInput `pulumi:"lowerCaseTableNames"`
	// Detailed information of instance nodes.
	Nodes InstancesInstanceNodeArrayInput `pulumi:"nodes"`
	// Expected release time when shut down due to arrears. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	OverdueReclaimTime pulumi.StringInput `pulumi:"overdueReclaimTime"`
	// Overdue shutdown time. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// Total storage capacity in GiB for prepaid services.
	PrePaidStorageInGb pulumi.IntInput `pulumi:"prePaidStorageInGb"`
	// The project name of the veDB Mysql instance.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The region id.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Storage billing type. Values:
	// PostPaid: Pay-as-you-go (postpaid).
	// PrePaid: Monthly/yearly subscription (prepaid).
	StorageChargeType pulumi.StringInput `pulumi:"storageChargeType"`
	// Used storage size, unit: GiB.
	StorageUsedGib pulumi.Float64Input `pulumi:"storageUsedGib"`
	// The subnet ID of the veDB Mysql instance.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags InstancesInstanceTagArrayInput `pulumi:"tags"`
	// Time zone.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// The vpc ID of the veDB Mysql instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The available zone of the veDB Mysql instance.
	ZoneIds pulumi.StringInput `pulumi:"zoneIds"`
}

func (InstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstance)(nil)).Elem()
}

func (i InstancesInstanceArgs) ToInstancesInstanceOutput() InstancesInstanceOutput {
	return i.ToInstancesInstanceOutputWithContext(context.Background())
}

func (i InstancesInstanceArgs) ToInstancesInstanceOutputWithContext(ctx context.Context) InstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceOutput)
}

// InstancesInstanceArrayInput is an input type that accepts InstancesInstanceArray and InstancesInstanceArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceArrayInput` via:
//
//	InstancesInstanceArray{ InstancesInstanceArgs{...} }
type InstancesInstanceArrayInput interface {
	pulumi.Input

	ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput
	ToInstancesInstanceArrayOutputWithContext(context.Context) InstancesInstanceArrayOutput
}

type InstancesInstanceArray []InstancesInstanceInput

func (InstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstance)(nil)).Elem()
}

func (i InstancesInstanceArray) ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput {
	return i.ToInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceArray) ToInstancesInstanceArrayOutputWithContext(ctx context.Context) InstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceArrayOutput)
}

type InstancesInstanceOutput struct{ *pulumi.OutputState }

func (InstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstance)(nil)).Elem()
}

func (o InstancesInstanceOutput) ToInstancesInstanceOutput() InstancesInstanceOutput {
	return o
}

func (o InstancesInstanceOutput) ToInstancesInstanceOutputWithContext(ctx context.Context) InstancesInstanceOutput {
	return o
}

// Whether auto-renewal is enabled in the prepaid scenario. Values:
// true: Auto-renewal is enabled.
// false: Auto-renewal is not enabled.
func (o InstancesInstanceOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstance) bool { return v.AutoRenew }).(pulumi.BoolOutput)
}

// The billing expiration time in the prepaid scenario, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o InstancesInstanceOutput) ChargeEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ChargeEndTime }).(pulumi.StringOutput)
}

// The time when billing starts. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o InstancesInstanceOutput) ChargeStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ChargeStartTime }).(pulumi.StringOutput)
}

// Payment status:
// Normal: Normal.
// Overdue: In arrears.
// Shutdown: Shut down.
func (o InstancesInstanceOutput) ChargeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ChargeStatus }).(pulumi.StringOutput)
}

// The charge type of the veDB Mysql instance.
func (o InstancesInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The create time of the veDB Mysql instance.
func (o InstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The version of the veDB Mysql instance.
func (o InstancesInstanceOutput) DbEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.DbEngineVersion }).(pulumi.StringOutput)
}

// The ID of the veDB Mysql instance.
func (o InstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the veDB Mysql instance.
func (o InstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the veDB Mysql instance.
func (o InstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The status of the veDB Mysql instance.
func (o InstancesInstanceOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceStatus }).(pulumi.StringOutput)
}

// Whether the table name is case sensitive, the default value is 1.
// Ranges:
// 0: Table names are stored as fixed and table names are case-sensitive.
// 1: Table names will be stored in lowercase and table names are not case sensitive.
func (o InstancesInstanceOutput) LowerCaseTableNames() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.LowerCaseTableNames }).(pulumi.StringOutput)
}

// Detailed information of instance nodes.
func (o InstancesInstanceOutput) Nodes() InstancesInstanceNodeArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceNode { return v.Nodes }).(InstancesInstanceNodeArrayOutput)
}

// Expected release time when shut down due to arrears. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o InstancesInstanceOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// Overdue shutdown time. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o InstancesInstanceOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// Total storage capacity in GiB for prepaid services.
func (o InstancesInstanceOutput) PrePaidStorageInGb() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.PrePaidStorageInGb }).(pulumi.IntOutput)
}

// The project name of the veDB Mysql instance.
func (o InstancesInstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The region id.
func (o InstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// Storage billing type. Values:
// PostPaid: Pay-as-you-go (postpaid).
// PrePaid: Monthly/yearly subscription (prepaid).
func (o InstancesInstanceOutput) StorageChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.StorageChargeType }).(pulumi.StringOutput)
}

// Used storage size, unit: GiB.
func (o InstancesInstanceOutput) StorageUsedGib() pulumi.Float64Output {
	return o.ApplyT(func(v InstancesInstance) float64 { return v.StorageUsedGib }).(pulumi.Float64Output)
}

// The subnet ID of the veDB Mysql instance.
func (o InstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o InstancesInstanceOutput) Tags() InstancesInstanceTagArrayOutput {
	return o.ApplyT(func(v InstancesInstance) []InstancesInstanceTag { return v.Tags }).(InstancesInstanceTagArrayOutput)
}

// Time zone.
func (o InstancesInstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The vpc ID of the veDB Mysql instance.
func (o InstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The available zone of the veDB Mysql instance.
func (o InstancesInstanceOutput) ZoneIds() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.ZoneIds }).(pulumi.StringOutput)
}

type InstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstance)(nil)).Elem()
}

func (o InstancesInstanceArrayOutput) ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput {
	return o
}

func (o InstancesInstanceArrayOutput) ToInstancesInstanceArrayOutputWithContext(ctx context.Context) InstancesInstanceArrayOutput {
	return o
}

func (o InstancesInstanceArrayOutput) Index(i pulumi.IntInput) InstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstance {
		return vs[0].([]InstancesInstance)[vs[1].(int)]
	}).(InstancesInstanceOutput)
}

type InstancesInstanceNode struct {
	// Memory size, in GiB.
	Memory int `pulumi:"memory"`
	// The id of the node.
	NodeId string `pulumi:"nodeId"`
	// Node specification of an instance.
	NodeSpec string `pulumi:"nodeSpec"`
	// Node type. Values:
	// Primary: Primary node.
	// ReadOnly: Read-only node.
	NodeType string `pulumi:"nodeType"`
	// CPU size. For example, when the value is 1, it means the CPU size is 1U.
	VCpu int `pulumi:"vCpu"`
	// The available zone of the veDB Mysql instance.
	ZoneId string `pulumi:"zoneId"`
}

// InstancesInstanceNodeInput is an input type that accepts InstancesInstanceNodeArgs and InstancesInstanceNodeOutput values.
// You can construct a concrete instance of `InstancesInstanceNodeInput` via:
//
//	InstancesInstanceNodeArgs{...}
type InstancesInstanceNodeInput interface {
	pulumi.Input

	ToInstancesInstanceNodeOutput() InstancesInstanceNodeOutput
	ToInstancesInstanceNodeOutputWithContext(context.Context) InstancesInstanceNodeOutput
}

type InstancesInstanceNodeArgs struct {
	// Memory size, in GiB.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The id of the node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// Node specification of an instance.
	NodeSpec pulumi.StringInput `pulumi:"nodeSpec"`
	// Node type. Values:
	// Primary: Primary node.
	// ReadOnly: Read-only node.
	NodeType pulumi.StringInput `pulumi:"nodeType"`
	// CPU size. For example, when the value is 1, it means the CPU size is 1U.
	VCpu pulumi.IntInput `pulumi:"vCpu"`
	// The available zone of the veDB Mysql instance.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (InstancesInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNode)(nil)).Elem()
}

func (i InstancesInstanceNodeArgs) ToInstancesInstanceNodeOutput() InstancesInstanceNodeOutput {
	return i.ToInstancesInstanceNodeOutputWithContext(context.Background())
}

func (i InstancesInstanceNodeArgs) ToInstancesInstanceNodeOutputWithContext(ctx context.Context) InstancesInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNodeOutput)
}

// InstancesInstanceNodeArrayInput is an input type that accepts InstancesInstanceNodeArray and InstancesInstanceNodeArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceNodeArrayInput` via:
//
//	InstancesInstanceNodeArray{ InstancesInstanceNodeArgs{...} }
type InstancesInstanceNodeArrayInput interface {
	pulumi.Input

	ToInstancesInstanceNodeArrayOutput() InstancesInstanceNodeArrayOutput
	ToInstancesInstanceNodeArrayOutputWithContext(context.Context) InstancesInstanceNodeArrayOutput
}

type InstancesInstanceNodeArray []InstancesInstanceNodeInput

func (InstancesInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceNode)(nil)).Elem()
}

func (i InstancesInstanceNodeArray) ToInstancesInstanceNodeArrayOutput() InstancesInstanceNodeArrayOutput {
	return i.ToInstancesInstanceNodeArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceNodeArray) ToInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNodeArrayOutput)
}

type InstancesInstanceNodeOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNode)(nil)).Elem()
}

func (o InstancesInstanceNodeOutput) ToInstancesInstanceNodeOutput() InstancesInstanceNodeOutput {
	return o
}

func (o InstancesInstanceNodeOutput) ToInstancesInstanceNodeOutputWithContext(ctx context.Context) InstancesInstanceNodeOutput {
	return o
}

// Memory size, in GiB.
func (o InstancesInstanceNodeOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceNode) int { return v.Memory }).(pulumi.IntOutput)
}

// The id of the node.
func (o InstancesInstanceNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// Node specification of an instance.
func (o InstancesInstanceNodeOutput) NodeSpec() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNode) string { return v.NodeSpec }).(pulumi.StringOutput)
}

// Node type. Values:
// Primary: Primary node.
// ReadOnly: Read-only node.
func (o InstancesInstanceNodeOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNode) string { return v.NodeType }).(pulumi.StringOutput)
}

// CPU size. For example, when the value is 1, it means the CPU size is 1U.
func (o InstancesInstanceNodeOutput) VCpu() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceNode) int { return v.VCpu }).(pulumi.IntOutput)
}

// The available zone of the veDB Mysql instance.
func (o InstancesInstanceNodeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNode) string { return v.ZoneId }).(pulumi.StringOutput)
}

type InstancesInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceNode)(nil)).Elem()
}

func (o InstancesInstanceNodeArrayOutput) ToInstancesInstanceNodeArrayOutput() InstancesInstanceNodeArrayOutput {
	return o
}

func (o InstancesInstanceNodeArrayOutput) ToInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) InstancesInstanceNodeArrayOutput {
	return o
}

func (o InstancesInstanceNodeArrayOutput) Index(i pulumi.IntInput) InstancesInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceNode {
		return vs[0].([]InstancesInstanceNode)[vs[1].(int)]
	}).(InstancesInstanceNodeOutput)
}

type InstancesInstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstancesInstanceTagInput is an input type that accepts InstancesInstanceTagArgs and InstancesInstanceTagOutput values.
// You can construct a concrete instance of `InstancesInstanceTagInput` via:
//
//	InstancesInstanceTagArgs{...}
type InstancesInstanceTagInput interface {
	pulumi.Input

	ToInstancesInstanceTagOutput() InstancesInstanceTagOutput
	ToInstancesInstanceTagOutputWithContext(context.Context) InstancesInstanceTagOutput
}

type InstancesInstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstancesInstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceTag)(nil)).Elem()
}

func (i InstancesInstanceTagArgs) ToInstancesInstanceTagOutput() InstancesInstanceTagOutput {
	return i.ToInstancesInstanceTagOutputWithContext(context.Background())
}

func (i InstancesInstanceTagArgs) ToInstancesInstanceTagOutputWithContext(ctx context.Context) InstancesInstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceTagOutput)
}

// InstancesInstanceTagArrayInput is an input type that accepts InstancesInstanceTagArray and InstancesInstanceTagArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceTagArrayInput` via:
//
//	InstancesInstanceTagArray{ InstancesInstanceTagArgs{...} }
type InstancesInstanceTagArrayInput interface {
	pulumi.Input

	ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput
	ToInstancesInstanceTagArrayOutputWithContext(context.Context) InstancesInstanceTagArrayOutput
}

type InstancesInstanceTagArray []InstancesInstanceTagInput

func (InstancesInstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceTag)(nil)).Elem()
}

func (i InstancesInstanceTagArray) ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput {
	return i.ToInstancesInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceTagArray) ToInstancesInstanceTagArrayOutputWithContext(ctx context.Context) InstancesInstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceTagArrayOutput)
}

type InstancesInstanceTagOutput struct{ *pulumi.OutputState }

func (InstancesInstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceTag)(nil)).Elem()
}

func (o InstancesInstanceTagOutput) ToInstancesInstanceTagOutput() InstancesInstanceTagOutput {
	return o
}

func (o InstancesInstanceTagOutput) ToInstancesInstanceTagOutputWithContext(ctx context.Context) InstancesInstanceTagOutput {
	return o
}

// The Key of Tags.
func (o InstancesInstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstancesInstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstancesInstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceTag)(nil)).Elem()
}

func (o InstancesInstanceTagArrayOutput) ToInstancesInstanceTagArrayOutput() InstancesInstanceTagArrayOutput {
	return o
}

func (o InstancesInstanceTagArrayOutput) ToInstancesInstanceTagArrayOutputWithContext(ctx context.Context) InstancesInstanceTagArrayOutput {
	return o
}

func (o InstancesInstanceTagArrayOutput) Index(i pulumi.IntInput) InstancesInstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceTag {
		return vs[0].([]InstancesInstanceTag)[vs[1].(int)]
	}).(InstancesInstanceTagOutput)
}

type InstancesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// InstancesTagInput is an input type that accepts InstancesTagArgs and InstancesTagOutput values.
// You can construct a concrete instance of `InstancesTagInput` via:
//
//	InstancesTagArgs{...}
type InstancesTagInput interface {
	pulumi.Input

	ToInstancesTagOutput() InstancesTagOutput
	ToInstancesTagOutputWithContext(context.Context) InstancesTagOutput
}

type InstancesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (InstancesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTag)(nil)).Elem()
}

func (i InstancesTagArgs) ToInstancesTagOutput() InstancesTagOutput {
	return i.ToInstancesTagOutputWithContext(context.Background())
}

func (i InstancesTagArgs) ToInstancesTagOutputWithContext(ctx context.Context) InstancesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTagOutput)
}

// InstancesTagArrayInput is an input type that accepts InstancesTagArray and InstancesTagArrayOutput values.
// You can construct a concrete instance of `InstancesTagArrayInput` via:
//
//	InstancesTagArray{ InstancesTagArgs{...} }
type InstancesTagArrayInput interface {
	pulumi.Input

	ToInstancesTagArrayOutput() InstancesTagArrayOutput
	ToInstancesTagArrayOutputWithContext(context.Context) InstancesTagArrayOutput
}

type InstancesTagArray []InstancesTagInput

func (InstancesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTag)(nil)).Elem()
}

func (i InstancesTagArray) ToInstancesTagArrayOutput() InstancesTagArrayOutput {
	return i.ToInstancesTagArrayOutputWithContext(context.Background())
}

func (i InstancesTagArray) ToInstancesTagArrayOutputWithContext(ctx context.Context) InstancesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesTagArrayOutput)
}

type InstancesTagOutput struct{ *pulumi.OutputState }

func (InstancesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesTag)(nil)).Elem()
}

func (o InstancesTagOutput) ToInstancesTagOutput() InstancesTagOutput {
	return o
}

func (o InstancesTagOutput) ToInstancesTagOutputWithContext(ctx context.Context) InstancesTagOutput {
	return o
}

// The Key of Tags.
func (o InstancesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o InstancesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesTag) string { return v.Value }).(pulumi.StringOutput)
}

type InstancesTagArrayOutput struct{ *pulumi.OutputState }

func (InstancesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesTag)(nil)).Elem()
}

func (o InstancesTagArrayOutput) ToInstancesTagArrayOutput() InstancesTagArrayOutput {
	return o
}

func (o InstancesTagArrayOutput) ToInstancesTagArrayOutputWithContext(ctx context.Context) InstancesTagArrayOutput {
	return o
}

func (o InstancesTagArrayOutput) Index(i pulumi.IntInput) InstancesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesTag {
		return vs[0].([]InstancesTag)[vs[1].(int)]
	}).(InstancesTagOutput)
}

type GetAccountsAccount struct {
	// The name of the database account. This field supports fuzzy query.
	AccountName string `pulumi:"accountName"`
	// The privilege detail list of RDS mysql instance account.
	AccountPrivileges []GetAccountsAccountAccountPrivilege `pulumi:"accountPrivileges"`
	// The type of the database account.
	AccountType string `pulumi:"accountType"`
}

// GetAccountsAccountInput is an input type that accepts GetAccountsAccountArgs and GetAccountsAccountOutput values.
// You can construct a concrete instance of `GetAccountsAccountInput` via:
//
//	GetAccountsAccountArgs{...}
type GetAccountsAccountInput interface {
	pulumi.Input

	ToGetAccountsAccountOutput() GetAccountsAccountOutput
	ToGetAccountsAccountOutputWithContext(context.Context) GetAccountsAccountOutput
}

type GetAccountsAccountArgs struct {
	// The name of the database account. This field supports fuzzy query.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The privilege detail list of RDS mysql instance account.
	AccountPrivileges GetAccountsAccountAccountPrivilegeArrayInput `pulumi:"accountPrivileges"`
	// The type of the database account.
	AccountType pulumi.StringInput `pulumi:"accountType"`
}

func (GetAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return i.ToGetAccountsAccountOutputWithContext(context.Background())
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountOutput)
}

// GetAccountsAccountArrayInput is an input type that accepts GetAccountsAccountArray and GetAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountArrayInput` via:
//
//	GetAccountsAccountArray{ GetAccountsAccountArgs{...} }
type GetAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput
	ToGetAccountsAccountArrayOutputWithContext(context.Context) GetAccountsAccountArrayOutput
}

type GetAccountsAccountArray []GetAccountsAccountInput

func (GetAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return i.ToGetAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountArrayOutput)
}

type GetAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return o
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return o
}

// The name of the database account. This field supports fuzzy query.
func (o GetAccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The privilege detail list of RDS mysql instance account.
func (o GetAccountsAccountOutput) AccountPrivileges() GetAccountsAccountAccountPrivilegeArrayOutput {
	return o.ApplyT(func(v GetAccountsAccount) []GetAccountsAccountAccountPrivilege { return v.AccountPrivileges }).(GetAccountsAccountAccountPrivilegeArrayOutput)
}

// The type of the database account.
func (o GetAccountsAccountOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountType }).(pulumi.StringOutput)
}

type GetAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccount {
		return vs[0].([]GetAccountsAccount)[vs[1].(int)]
	}).(GetAccountsAccountOutput)
}

type GetAccountsAccountAccountPrivilege struct {
	// The privilege type of the account.
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The privilege detail of the account.
	AccountPrivilegeDetail string `pulumi:"accountPrivilegeDetail"`
	// The name of database.
	DbName string `pulumi:"dbName"`
}

// GetAccountsAccountAccountPrivilegeInput is an input type that accepts GetAccountsAccountAccountPrivilegeArgs and GetAccountsAccountAccountPrivilegeOutput values.
// You can construct a concrete instance of `GetAccountsAccountAccountPrivilegeInput` via:
//
//	GetAccountsAccountAccountPrivilegeArgs{...}
type GetAccountsAccountAccountPrivilegeInput interface {
	pulumi.Input

	ToGetAccountsAccountAccountPrivilegeOutput() GetAccountsAccountAccountPrivilegeOutput
	ToGetAccountsAccountAccountPrivilegeOutputWithContext(context.Context) GetAccountsAccountAccountPrivilegeOutput
}

type GetAccountsAccountAccountPrivilegeArgs struct {
	// The privilege type of the account.
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The privilege detail of the account.
	AccountPrivilegeDetail pulumi.StringInput `pulumi:"accountPrivilegeDetail"`
	// The name of database.
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (GetAccountsAccountAccountPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccountAccountPrivilege)(nil)).Elem()
}

func (i GetAccountsAccountAccountPrivilegeArgs) ToGetAccountsAccountAccountPrivilegeOutput() GetAccountsAccountAccountPrivilegeOutput {
	return i.ToGetAccountsAccountAccountPrivilegeOutputWithContext(context.Background())
}

func (i GetAccountsAccountAccountPrivilegeArgs) ToGetAccountsAccountAccountPrivilegeOutputWithContext(ctx context.Context) GetAccountsAccountAccountPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountAccountPrivilegeOutput)
}

// GetAccountsAccountAccountPrivilegeArrayInput is an input type that accepts GetAccountsAccountAccountPrivilegeArray and GetAccountsAccountAccountPrivilegeArrayOutput values.
// You can construct a concrete instance of `GetAccountsAccountAccountPrivilegeArrayInput` via:
//
//	GetAccountsAccountAccountPrivilegeArray{ GetAccountsAccountAccountPrivilegeArgs{...} }
type GetAccountsAccountAccountPrivilegeArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountAccountPrivilegeArrayOutput() GetAccountsAccountAccountPrivilegeArrayOutput
	ToGetAccountsAccountAccountPrivilegeArrayOutputWithContext(context.Context) GetAccountsAccountAccountPrivilegeArrayOutput
}

type GetAccountsAccountAccountPrivilegeArray []GetAccountsAccountAccountPrivilegeInput

func (GetAccountsAccountAccountPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccountAccountPrivilege)(nil)).Elem()
}

func (i GetAccountsAccountAccountPrivilegeArray) ToGetAccountsAccountAccountPrivilegeArrayOutput() GetAccountsAccountAccountPrivilegeArrayOutput {
	return i.ToGetAccountsAccountAccountPrivilegeArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountAccountPrivilegeArray) ToGetAccountsAccountAccountPrivilegeArrayOutputWithContext(ctx context.Context) GetAccountsAccountAccountPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountAccountPrivilegeArrayOutput)
}

type GetAccountsAccountAccountPrivilegeOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountAccountPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccountAccountPrivilege)(nil)).Elem()
}

func (o GetAccountsAccountAccountPrivilegeOutput) ToGetAccountsAccountAccountPrivilegeOutput() GetAccountsAccountAccountPrivilegeOutput {
	return o
}

func (o GetAccountsAccountAccountPrivilegeOutput) ToGetAccountsAccountAccountPrivilegeOutputWithContext(ctx context.Context) GetAccountsAccountAccountPrivilegeOutput {
	return o
}

// The privilege type of the account.
func (o GetAccountsAccountAccountPrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountAccountPrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The privilege detail of the account.
func (o GetAccountsAccountAccountPrivilegeOutput) AccountPrivilegeDetail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountAccountPrivilege) string { return v.AccountPrivilegeDetail }).(pulumi.StringOutput)
}

// The name of database.
func (o GetAccountsAccountAccountPrivilegeOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountAccountPrivilege) string { return v.DbName }).(pulumi.StringOutput)
}

type GetAccountsAccountAccountPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountAccountPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccountAccountPrivilege)(nil)).Elem()
}

func (o GetAccountsAccountAccountPrivilegeArrayOutput) ToGetAccountsAccountAccountPrivilegeArrayOutput() GetAccountsAccountAccountPrivilegeArrayOutput {
	return o
}

func (o GetAccountsAccountAccountPrivilegeArrayOutput) ToGetAccountsAccountAccountPrivilegeArrayOutputWithContext(ctx context.Context) GetAccountsAccountAccountPrivilegeArrayOutput {
	return o
}

func (o GetAccountsAccountAccountPrivilegeArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountAccountPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccountAccountPrivilege {
		return vs[0].([]GetAccountsAccountAccountPrivilege)[vs[1].(int)]
	}).(GetAccountsAccountAccountPrivilegeOutput)
}

type GetAllowlistsAllowList struct {
	// The description of the allow list.
	AllowListDesc string `pulumi:"allowListDesc"`
	// The id of the allow list.
	AllowListId string `pulumi:"allowListId"`
	// The total number of IP addresses (or address ranges) in the whitelist.
	AllowListIpNum int `pulumi:"allowListIpNum"`
	// The name of the allow list.
	AllowListName string `pulumi:"allowListName"`
	// The type of the allow list.
	AllowListType string `pulumi:"allowListType"`
	// The IP address or a range of IP addresses in CIDR format.
	AllowLists []string `pulumi:"allowLists"`
	// The total number of instances bound under the whitelist.
	AssociatedInstanceNum int `pulumi:"associatedInstanceNum"`
	// The list of instances.
	AssociatedInstances []GetAllowlistsAllowListAssociatedInstance `pulumi:"associatedInstances"`
}

// GetAllowlistsAllowListInput is an input type that accepts GetAllowlistsAllowListArgs and GetAllowlistsAllowListOutput values.
// You can construct a concrete instance of `GetAllowlistsAllowListInput` via:
//
//	GetAllowlistsAllowListArgs{...}
type GetAllowlistsAllowListInput interface {
	pulumi.Input

	ToGetAllowlistsAllowListOutput() GetAllowlistsAllowListOutput
	ToGetAllowlistsAllowListOutputWithContext(context.Context) GetAllowlistsAllowListOutput
}

type GetAllowlistsAllowListArgs struct {
	// The description of the allow list.
	AllowListDesc pulumi.StringInput `pulumi:"allowListDesc"`
	// The id of the allow list.
	AllowListId pulumi.StringInput `pulumi:"allowListId"`
	// The total number of IP addresses (or address ranges) in the whitelist.
	AllowListIpNum pulumi.IntInput `pulumi:"allowListIpNum"`
	// The name of the allow list.
	AllowListName pulumi.StringInput `pulumi:"allowListName"`
	// The type of the allow list.
	AllowListType pulumi.StringInput `pulumi:"allowListType"`
	// The IP address or a range of IP addresses in CIDR format.
	AllowLists pulumi.StringArrayInput `pulumi:"allowLists"`
	// The total number of instances bound under the whitelist.
	AssociatedInstanceNum pulumi.IntInput `pulumi:"associatedInstanceNum"`
	// The list of instances.
	AssociatedInstances GetAllowlistsAllowListAssociatedInstanceArrayInput `pulumi:"associatedInstances"`
}

func (GetAllowlistsAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowlistsAllowList)(nil)).Elem()
}

func (i GetAllowlistsAllowListArgs) ToGetAllowlistsAllowListOutput() GetAllowlistsAllowListOutput {
	return i.ToGetAllowlistsAllowListOutputWithContext(context.Background())
}

func (i GetAllowlistsAllowListArgs) ToGetAllowlistsAllowListOutputWithContext(ctx context.Context) GetAllowlistsAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowlistsAllowListOutput)
}

// GetAllowlistsAllowListArrayInput is an input type that accepts GetAllowlistsAllowListArray and GetAllowlistsAllowListArrayOutput values.
// You can construct a concrete instance of `GetAllowlistsAllowListArrayInput` via:
//
//	GetAllowlistsAllowListArray{ GetAllowlistsAllowListArgs{...} }
type GetAllowlistsAllowListArrayInput interface {
	pulumi.Input

	ToGetAllowlistsAllowListArrayOutput() GetAllowlistsAllowListArrayOutput
	ToGetAllowlistsAllowListArrayOutputWithContext(context.Context) GetAllowlistsAllowListArrayOutput
}

type GetAllowlistsAllowListArray []GetAllowlistsAllowListInput

func (GetAllowlistsAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowlistsAllowList)(nil)).Elem()
}

func (i GetAllowlistsAllowListArray) ToGetAllowlistsAllowListArrayOutput() GetAllowlistsAllowListArrayOutput {
	return i.ToGetAllowlistsAllowListArrayOutputWithContext(context.Background())
}

func (i GetAllowlistsAllowListArray) ToGetAllowlistsAllowListArrayOutputWithContext(ctx context.Context) GetAllowlistsAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowlistsAllowListArrayOutput)
}

type GetAllowlistsAllowListOutput struct{ *pulumi.OutputState }

func (GetAllowlistsAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowlistsAllowList)(nil)).Elem()
}

func (o GetAllowlistsAllowListOutput) ToGetAllowlistsAllowListOutput() GetAllowlistsAllowListOutput {
	return o
}

func (o GetAllowlistsAllowListOutput) ToGetAllowlistsAllowListOutputWithContext(ctx context.Context) GetAllowlistsAllowListOutput {
	return o
}

// The description of the allow list.
func (o GetAllowlistsAllowListOutput) AllowListDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowlistsAllowList) string { return v.AllowListDesc }).(pulumi.StringOutput)
}

// The id of the allow list.
func (o GetAllowlistsAllowListOutput) AllowListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowlistsAllowList) string { return v.AllowListId }).(pulumi.StringOutput)
}

// The total number of IP addresses (or address ranges) in the whitelist.
func (o GetAllowlistsAllowListOutput) AllowListIpNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetAllowlistsAllowList) int { return v.AllowListIpNum }).(pulumi.IntOutput)
}

// The name of the allow list.
func (o GetAllowlistsAllowListOutput) AllowListName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowlistsAllowList) string { return v.AllowListName }).(pulumi.StringOutput)
}

// The type of the allow list.
func (o GetAllowlistsAllowListOutput) AllowListType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowlistsAllowList) string { return v.AllowListType }).(pulumi.StringOutput)
}

// The IP address or a range of IP addresses in CIDR format.
func (o GetAllowlistsAllowListOutput) AllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAllowlistsAllowList) []string { return v.AllowLists }).(pulumi.StringArrayOutput)
}

// The total number of instances bound under the whitelist.
func (o GetAllowlistsAllowListOutput) AssociatedInstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetAllowlistsAllowList) int { return v.AssociatedInstanceNum }).(pulumi.IntOutput)
}

// The list of instances.
func (o GetAllowlistsAllowListOutput) AssociatedInstances() GetAllowlistsAllowListAssociatedInstanceArrayOutput {
	return o.ApplyT(func(v GetAllowlistsAllowList) []GetAllowlistsAllowListAssociatedInstance {
		return v.AssociatedInstances
	}).(GetAllowlistsAllowListAssociatedInstanceArrayOutput)
}

type GetAllowlistsAllowListArrayOutput struct{ *pulumi.OutputState }

func (GetAllowlistsAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowlistsAllowList)(nil)).Elem()
}

func (o GetAllowlistsAllowListArrayOutput) ToGetAllowlistsAllowListArrayOutput() GetAllowlistsAllowListArrayOutput {
	return o
}

func (o GetAllowlistsAllowListArrayOutput) ToGetAllowlistsAllowListArrayOutputWithContext(ctx context.Context) GetAllowlistsAllowListArrayOutput {
	return o
}

func (o GetAllowlistsAllowListArrayOutput) Index(i pulumi.IntInput) GetAllowlistsAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAllowlistsAllowList {
		return vs[0].([]GetAllowlistsAllowList)[vs[1].(int)]
	}).(GetAllowlistsAllowListOutput)
}

type GetAllowlistsAllowListAssociatedInstance struct {
	// Instance ID. When an InstanceId is specified, the DescribeAllowLists interface will return the whitelist bound to the specified instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the instance.
	InstanceName string `pulumi:"instanceName"`
	// The id of the vpc.
	Vpc string `pulumi:"vpc"`
}

// GetAllowlistsAllowListAssociatedInstanceInput is an input type that accepts GetAllowlistsAllowListAssociatedInstanceArgs and GetAllowlistsAllowListAssociatedInstanceOutput values.
// You can construct a concrete instance of `GetAllowlistsAllowListAssociatedInstanceInput` via:
//
//	GetAllowlistsAllowListAssociatedInstanceArgs{...}
type GetAllowlistsAllowListAssociatedInstanceInput interface {
	pulumi.Input

	ToGetAllowlistsAllowListAssociatedInstanceOutput() GetAllowlistsAllowListAssociatedInstanceOutput
	ToGetAllowlistsAllowListAssociatedInstanceOutputWithContext(context.Context) GetAllowlistsAllowListAssociatedInstanceOutput
}

type GetAllowlistsAllowListAssociatedInstanceArgs struct {
	// Instance ID. When an InstanceId is specified, the DescribeAllowLists interface will return the whitelist bound to the specified instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The id of the vpc.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetAllowlistsAllowListAssociatedInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowlistsAllowListAssociatedInstance)(nil)).Elem()
}

func (i GetAllowlistsAllowListAssociatedInstanceArgs) ToGetAllowlistsAllowListAssociatedInstanceOutput() GetAllowlistsAllowListAssociatedInstanceOutput {
	return i.ToGetAllowlistsAllowListAssociatedInstanceOutputWithContext(context.Background())
}

func (i GetAllowlistsAllowListAssociatedInstanceArgs) ToGetAllowlistsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) GetAllowlistsAllowListAssociatedInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowlistsAllowListAssociatedInstanceOutput)
}

// GetAllowlistsAllowListAssociatedInstanceArrayInput is an input type that accepts GetAllowlistsAllowListAssociatedInstanceArray and GetAllowlistsAllowListAssociatedInstanceArrayOutput values.
// You can construct a concrete instance of `GetAllowlistsAllowListAssociatedInstanceArrayInput` via:
//
//	GetAllowlistsAllowListAssociatedInstanceArray{ GetAllowlistsAllowListAssociatedInstanceArgs{...} }
type GetAllowlistsAllowListAssociatedInstanceArrayInput interface {
	pulumi.Input

	ToGetAllowlistsAllowListAssociatedInstanceArrayOutput() GetAllowlistsAllowListAssociatedInstanceArrayOutput
	ToGetAllowlistsAllowListAssociatedInstanceArrayOutputWithContext(context.Context) GetAllowlistsAllowListAssociatedInstanceArrayOutput
}

type GetAllowlistsAllowListAssociatedInstanceArray []GetAllowlistsAllowListAssociatedInstanceInput

func (GetAllowlistsAllowListAssociatedInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowlistsAllowListAssociatedInstance)(nil)).Elem()
}

func (i GetAllowlistsAllowListAssociatedInstanceArray) ToGetAllowlistsAllowListAssociatedInstanceArrayOutput() GetAllowlistsAllowListAssociatedInstanceArrayOutput {
	return i.ToGetAllowlistsAllowListAssociatedInstanceArrayOutputWithContext(context.Background())
}

func (i GetAllowlistsAllowListAssociatedInstanceArray) ToGetAllowlistsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) GetAllowlistsAllowListAssociatedInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAllowlistsAllowListAssociatedInstanceArrayOutput)
}

type GetAllowlistsAllowListAssociatedInstanceOutput struct{ *pulumi.OutputState }

func (GetAllowlistsAllowListAssociatedInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllowlistsAllowListAssociatedInstance)(nil)).Elem()
}

func (o GetAllowlistsAllowListAssociatedInstanceOutput) ToGetAllowlistsAllowListAssociatedInstanceOutput() GetAllowlistsAllowListAssociatedInstanceOutput {
	return o
}

func (o GetAllowlistsAllowListAssociatedInstanceOutput) ToGetAllowlistsAllowListAssociatedInstanceOutputWithContext(ctx context.Context) GetAllowlistsAllowListAssociatedInstanceOutput {
	return o
}

// Instance ID. When an InstanceId is specified, the DescribeAllowLists interface will return the whitelist bound to the specified instance.
func (o GetAllowlistsAllowListAssociatedInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowlistsAllowListAssociatedInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the instance.
func (o GetAllowlistsAllowListAssociatedInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowlistsAllowListAssociatedInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The id of the vpc.
func (o GetAllowlistsAllowListAssociatedInstanceOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllowlistsAllowListAssociatedInstance) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetAllowlistsAllowListAssociatedInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetAllowlistsAllowListAssociatedInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAllowlistsAllowListAssociatedInstance)(nil)).Elem()
}

func (o GetAllowlistsAllowListAssociatedInstanceArrayOutput) ToGetAllowlistsAllowListAssociatedInstanceArrayOutput() GetAllowlistsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o GetAllowlistsAllowListAssociatedInstanceArrayOutput) ToGetAllowlistsAllowListAssociatedInstanceArrayOutputWithContext(ctx context.Context) GetAllowlistsAllowListAssociatedInstanceArrayOutput {
	return o
}

func (o GetAllowlistsAllowListAssociatedInstanceArrayOutput) Index(i pulumi.IntInput) GetAllowlistsAllowListAssociatedInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAllowlistsAllowListAssociatedInstance {
		return vs[0].([]GetAllowlistsAllowListAssociatedInstance)[vs[1].(int)]
	}).(GetAllowlistsAllowListAssociatedInstanceOutput)
}

type GetBackupsBackup struct {
	// The end time of the backup.
	BackupEndTime string `pulumi:"backupEndTime"`
	// The size of the backup file.
	BackupFileSize int `pulumi:"backupFileSize"`
	// The id of the backup.
	BackupId string `pulumi:"backupId"`
	// Backup method. Currently, only physical backup is supported. The value is Physical.
	BackupMethod string `pulumi:"backupMethod"`
	// Data backup strategy for instances.
	BackupPolicies []GetBackupsBackupBackupPolicy `pulumi:"backupPolicies"`
	// The start time of the backup.
	BackupStartTime string `pulumi:"backupStartTime"`
	// The status of the backup.
	BackupStatus string `pulumi:"backupStatus"`
	// The type of the backup.
	BackupType string `pulumi:"backupType"`
	// The time point of consistent backup, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ConsistentTime string `pulumi:"consistentTime"`
	// The type of the backup create.
	CreateType string `pulumi:"createType"`
	// The id of the backup.
	Id string `pulumi:"id"`
}

// GetBackupsBackupInput is an input type that accepts GetBackupsBackupArgs and GetBackupsBackupOutput values.
// You can construct a concrete instance of `GetBackupsBackupInput` via:
//
//	GetBackupsBackupArgs{...}
type GetBackupsBackupInput interface {
	pulumi.Input

	ToGetBackupsBackupOutput() GetBackupsBackupOutput
	ToGetBackupsBackupOutputWithContext(context.Context) GetBackupsBackupOutput
}

type GetBackupsBackupArgs struct {
	// The end time of the backup.
	BackupEndTime pulumi.StringInput `pulumi:"backupEndTime"`
	// The size of the backup file.
	BackupFileSize pulumi.IntInput `pulumi:"backupFileSize"`
	// The id of the backup.
	BackupId pulumi.StringInput `pulumi:"backupId"`
	// Backup method. Currently, only physical backup is supported. The value is Physical.
	BackupMethod pulumi.StringInput `pulumi:"backupMethod"`
	// Data backup strategy for instances.
	BackupPolicies GetBackupsBackupBackupPolicyArrayInput `pulumi:"backupPolicies"`
	// The start time of the backup.
	BackupStartTime pulumi.StringInput `pulumi:"backupStartTime"`
	// The status of the backup.
	BackupStatus pulumi.StringInput `pulumi:"backupStatus"`
	// The type of the backup.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// The time point of consistent backup, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ConsistentTime pulumi.StringInput `pulumi:"consistentTime"`
	// The type of the backup create.
	CreateType pulumi.StringInput `pulumi:"createType"`
	// The id of the backup.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetBackupsBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackup)(nil)).Elem()
}

func (i GetBackupsBackupArgs) ToGetBackupsBackupOutput() GetBackupsBackupOutput {
	return i.ToGetBackupsBackupOutputWithContext(context.Background())
}

func (i GetBackupsBackupArgs) ToGetBackupsBackupOutputWithContext(ctx context.Context) GetBackupsBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupOutput)
}

// GetBackupsBackupArrayInput is an input type that accepts GetBackupsBackupArray and GetBackupsBackupArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupArrayInput` via:
//
//	GetBackupsBackupArray{ GetBackupsBackupArgs{...} }
type GetBackupsBackupArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput
	ToGetBackupsBackupArrayOutputWithContext(context.Context) GetBackupsBackupArrayOutput
}

type GetBackupsBackupArray []GetBackupsBackupInput

func (GetBackupsBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackup)(nil)).Elem()
}

func (i GetBackupsBackupArray) ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput {
	return i.ToGetBackupsBackupArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupArray) ToGetBackupsBackupArrayOutputWithContext(ctx context.Context) GetBackupsBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupArrayOutput)
}

type GetBackupsBackupOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackup)(nil)).Elem()
}

func (o GetBackupsBackupOutput) ToGetBackupsBackupOutput() GetBackupsBackupOutput {
	return o
}

func (o GetBackupsBackupOutput) ToGetBackupsBackupOutputWithContext(ctx context.Context) GetBackupsBackupOutput {
	return o
}

// The end time of the backup.
func (o GetBackupsBackupOutput) BackupEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupEndTime }).(pulumi.StringOutput)
}

// The size of the backup file.
func (o GetBackupsBackupOutput) BackupFileSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackup) int { return v.BackupFileSize }).(pulumi.IntOutput)
}

// The id of the backup.
func (o GetBackupsBackupOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupId }).(pulumi.StringOutput)
}

// Backup method. Currently, only physical backup is supported. The value is Physical.
func (o GetBackupsBackupOutput) BackupMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupMethod }).(pulumi.StringOutput)
}

// Data backup strategy for instances.
func (o GetBackupsBackupOutput) BackupPolicies() GetBackupsBackupBackupPolicyArrayOutput {
	return o.ApplyT(func(v GetBackupsBackup) []GetBackupsBackupBackupPolicy { return v.BackupPolicies }).(GetBackupsBackupBackupPolicyArrayOutput)
}

// The start time of the backup.
func (o GetBackupsBackupOutput) BackupStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupStartTime }).(pulumi.StringOutput)
}

// The status of the backup.
func (o GetBackupsBackupOutput) BackupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupStatus }).(pulumi.StringOutput)
}

// The type of the backup.
func (o GetBackupsBackupOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.BackupType }).(pulumi.StringOutput)
}

// The time point of consistent backup, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o GetBackupsBackupOutput) ConsistentTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.ConsistentTime }).(pulumi.StringOutput)
}

// The type of the backup create.
func (o GetBackupsBackupOutput) CreateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.CreateType }).(pulumi.StringOutput)
}

// The id of the backup.
func (o GetBackupsBackupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackup) string { return v.Id }).(pulumi.StringOutput)
}

type GetBackupsBackupArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackup)(nil)).Elem()
}

func (o GetBackupsBackupArrayOutput) ToGetBackupsBackupArrayOutput() GetBackupsBackupArrayOutput {
	return o
}

func (o GetBackupsBackupArrayOutput) ToGetBackupsBackupArrayOutputWithContext(ctx context.Context) GetBackupsBackupArrayOutput {
	return o
}

func (o GetBackupsBackupArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackup {
		return vs[0].([]GetBackupsBackup)[vs[1].(int)]
	}).(GetBackupsBackupOutput)
}

type GetBackupsBackupBackupPolicy struct {
	// Data backup retention period, value: 7 to 30 days.
	BackupRetentionPeriod int `pulumi:"backupRetentionPeriod"`
	// The time for executing the backup task. The interval window is two hours. Format: HH:mmZ-HH:mmZ (UTC time).
	BackupTime string `pulumi:"backupTime"`
	// Whether to enable continuous backup. The value is fixed as true.
	ContinueBackup bool `pulumi:"continueBackup"`
	// Full backup period. Multiple values are separated by English commas (,). Values:
	// Monday: Monday.
	// Tuesday: Tuesday.
	// Wednesday: Wednesday.
	// Thursday: Thursday.
	// Friday: Friday.
	// Saturday: Saturday.
	// Sunday: Sunday.
	FullBackupPeriod string `pulumi:"fullBackupPeriod"`
	// The id of the instance.
	InstanceId string `pulumi:"instanceId"`
}

// GetBackupsBackupBackupPolicyInput is an input type that accepts GetBackupsBackupBackupPolicyArgs and GetBackupsBackupBackupPolicyOutput values.
// You can construct a concrete instance of `GetBackupsBackupBackupPolicyInput` via:
//
//	GetBackupsBackupBackupPolicyArgs{...}
type GetBackupsBackupBackupPolicyInput interface {
	pulumi.Input

	ToGetBackupsBackupBackupPolicyOutput() GetBackupsBackupBackupPolicyOutput
	ToGetBackupsBackupBackupPolicyOutputWithContext(context.Context) GetBackupsBackupBackupPolicyOutput
}

type GetBackupsBackupBackupPolicyArgs struct {
	// Data backup retention period, value: 7 to 30 days.
	BackupRetentionPeriod pulumi.IntInput `pulumi:"backupRetentionPeriod"`
	// The time for executing the backup task. The interval window is two hours. Format: HH:mmZ-HH:mmZ (UTC time).
	BackupTime pulumi.StringInput `pulumi:"backupTime"`
	// Whether to enable continuous backup. The value is fixed as true.
	ContinueBackup pulumi.BoolInput `pulumi:"continueBackup"`
	// Full backup period. Multiple values are separated by English commas (,). Values:
	// Monday: Monday.
	// Tuesday: Tuesday.
	// Wednesday: Wednesday.
	// Thursday: Thursday.
	// Friday: Friday.
	// Saturday: Saturday.
	// Sunday: Sunday.
	FullBackupPeriod pulumi.StringInput `pulumi:"fullBackupPeriod"`
	// The id of the instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetBackupsBackupBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupBackupPolicy)(nil)).Elem()
}

func (i GetBackupsBackupBackupPolicyArgs) ToGetBackupsBackupBackupPolicyOutput() GetBackupsBackupBackupPolicyOutput {
	return i.ToGetBackupsBackupBackupPolicyOutputWithContext(context.Background())
}

func (i GetBackupsBackupBackupPolicyArgs) ToGetBackupsBackupBackupPolicyOutputWithContext(ctx context.Context) GetBackupsBackupBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupBackupPolicyOutput)
}

// GetBackupsBackupBackupPolicyArrayInput is an input type that accepts GetBackupsBackupBackupPolicyArray and GetBackupsBackupBackupPolicyArrayOutput values.
// You can construct a concrete instance of `GetBackupsBackupBackupPolicyArrayInput` via:
//
//	GetBackupsBackupBackupPolicyArray{ GetBackupsBackupBackupPolicyArgs{...} }
type GetBackupsBackupBackupPolicyArrayInput interface {
	pulumi.Input

	ToGetBackupsBackupBackupPolicyArrayOutput() GetBackupsBackupBackupPolicyArrayOutput
	ToGetBackupsBackupBackupPolicyArrayOutputWithContext(context.Context) GetBackupsBackupBackupPolicyArrayOutput
}

type GetBackupsBackupBackupPolicyArray []GetBackupsBackupBackupPolicyInput

func (GetBackupsBackupBackupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupBackupPolicy)(nil)).Elem()
}

func (i GetBackupsBackupBackupPolicyArray) ToGetBackupsBackupBackupPolicyArrayOutput() GetBackupsBackupBackupPolicyArrayOutput {
	return i.ToGetBackupsBackupBackupPolicyArrayOutputWithContext(context.Background())
}

func (i GetBackupsBackupBackupPolicyArray) ToGetBackupsBackupBackupPolicyArrayOutputWithContext(ctx context.Context) GetBackupsBackupBackupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupsBackupBackupPolicyArrayOutput)
}

type GetBackupsBackupBackupPolicyOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupsBackupBackupPolicy)(nil)).Elem()
}

func (o GetBackupsBackupBackupPolicyOutput) ToGetBackupsBackupBackupPolicyOutput() GetBackupsBackupBackupPolicyOutput {
	return o
}

func (o GetBackupsBackupBackupPolicyOutput) ToGetBackupsBackupBackupPolicyOutputWithContext(ctx context.Context) GetBackupsBackupBackupPolicyOutput {
	return o
}

// Data backup retention period, value: 7 to 30 days.
func (o GetBackupsBackupBackupPolicyOutput) BackupRetentionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPolicy) int { return v.BackupRetentionPeriod }).(pulumi.IntOutput)
}

// The time for executing the backup task. The interval window is two hours. Format: HH:mmZ-HH:mmZ (UTC time).
func (o GetBackupsBackupBackupPolicyOutput) BackupTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPolicy) string { return v.BackupTime }).(pulumi.StringOutput)
}

// Whether to enable continuous backup. The value is fixed as true.
func (o GetBackupsBackupBackupPolicyOutput) ContinueBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPolicy) bool { return v.ContinueBackup }).(pulumi.BoolOutput)
}

// Full backup period. Multiple values are separated by English commas (,). Values:
// Monday: Monday.
// Tuesday: Tuesday.
// Wednesday: Wednesday.
// Thursday: Thursday.
// Friday: Friday.
// Saturday: Saturday.
// Sunday: Sunday.
func (o GetBackupsBackupBackupPolicyOutput) FullBackupPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPolicy) string { return v.FullBackupPeriod }).(pulumi.StringOutput)
}

// The id of the instance.
func (o GetBackupsBackupBackupPolicyOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupsBackupBackupPolicy) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetBackupsBackupBackupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetBackupsBackupBackupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupsBackupBackupPolicy)(nil)).Elem()
}

func (o GetBackupsBackupBackupPolicyArrayOutput) ToGetBackupsBackupBackupPolicyArrayOutput() GetBackupsBackupBackupPolicyArrayOutput {
	return o
}

func (o GetBackupsBackupBackupPolicyArrayOutput) ToGetBackupsBackupBackupPolicyArrayOutputWithContext(ctx context.Context) GetBackupsBackupBackupPolicyArrayOutput {
	return o
}

func (o GetBackupsBackupBackupPolicyArrayOutput) Index(i pulumi.IntInput) GetBackupsBackupBackupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupsBackupBackupPolicy {
		return vs[0].([]GetBackupsBackupBackupPolicy)[vs[1].(int)]
	}).(GetBackupsBackupBackupPolicyOutput)
}

type GetDatabasesDatabase struct {
	// Database character set: utf8mb4 (default), utf8, latin1, ascii.
	CharacterSetName    string                                   `pulumi:"characterSetName"`
	DatabasesPrivileges []GetDatabasesDatabaseDatabasesPrivilege `pulumi:"databasesPrivileges"`
	// Database name.
	DbName string `pulumi:"dbName"`
}

// GetDatabasesDatabaseInput is an input type that accepts GetDatabasesDatabaseArgs and GetDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseInput` via:
//
//	GetDatabasesDatabaseArgs{...}
type GetDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput
	ToGetDatabasesDatabaseOutputWithContext(context.Context) GetDatabasesDatabaseOutput
}

type GetDatabasesDatabaseArgs struct {
	// Database character set: utf8mb4 (default), utf8, latin1, ascii.
	CharacterSetName    pulumi.StringInput                               `pulumi:"characterSetName"`
	DatabasesPrivileges GetDatabasesDatabaseDatabasesPrivilegeArrayInput `pulumi:"databasesPrivileges"`
	// Database name.
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (GetDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return i.ToGetDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseOutput)
}

// GetDatabasesDatabaseArrayInput is an input type that accepts GetDatabasesDatabaseArray and GetDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseArrayInput` via:
//
//	GetDatabasesDatabaseArray{ GetDatabasesDatabaseArgs{...} }
type GetDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput
	ToGetDatabasesDatabaseArrayOutputWithContext(context.Context) GetDatabasesDatabaseArrayOutput
}

type GetDatabasesDatabaseArray []GetDatabasesDatabaseInput

func (GetDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return i.ToGetDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseArrayOutput)
}

type GetDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return o
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return o
}

// Database character set: utf8mb4 (default), utf8, latin1, ascii.
func (o GetDatabasesDatabaseOutput) CharacterSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.CharacterSetName }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseOutput) DatabasesPrivileges() GetDatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseDatabasesPrivilege { return v.DatabasesPrivileges }).(GetDatabasesDatabaseDatabasesPrivilegeArrayOutput)
}

// Database name.
func (o GetDatabasesDatabaseOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.DbName }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabase {
		return vs[0].([]GetDatabasesDatabase)[vs[1].(int)]
	}).(GetDatabasesDatabaseOutput)
}

type GetDatabasesDatabaseDatabasesPrivilege struct {
	// Account name that requires authorization.
	AccountName string `pulumi:"accountName"`
	// Authorization database privilege types:
	// ReadWrite: Read and write privilege.
	//  ReadOnly: Read-only privilege.
	//  DDLOnly: Only DDL privilege.
	//  DMLOnly: Only DML privilege.
	//  Custom: Custom privilege.
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
	//  When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
	AccountPrivilegeDetail string `pulumi:"accountPrivilegeDetail"`
}

// GetDatabasesDatabaseDatabasesPrivilegeInput is an input type that accepts GetDatabasesDatabaseDatabasesPrivilegeArgs and GetDatabasesDatabaseDatabasesPrivilegeOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseDatabasesPrivilegeInput` via:
//
//	GetDatabasesDatabaseDatabasesPrivilegeArgs{...}
type GetDatabasesDatabaseDatabasesPrivilegeInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseDatabasesPrivilegeOutput() GetDatabasesDatabaseDatabasesPrivilegeOutput
	ToGetDatabasesDatabaseDatabasesPrivilegeOutputWithContext(context.Context) GetDatabasesDatabaseDatabasesPrivilegeOutput
}

type GetDatabasesDatabaseDatabasesPrivilegeArgs struct {
	// Account name that requires authorization.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Authorization database privilege types:
	// ReadWrite: Read and write privilege.
	//  ReadOnly: Read-only privilege.
	//  DDLOnly: Only DDL privilege.
	//  DMLOnly: Only DML privilege.
	//  Custom: Custom privilege.
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
	//  When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
	AccountPrivilegeDetail pulumi.StringInput `pulumi:"accountPrivilegeDetail"`
}

func (GetDatabasesDatabaseDatabasesPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseDatabasesPrivilege)(nil)).Elem()
}

func (i GetDatabasesDatabaseDatabasesPrivilegeArgs) ToGetDatabasesDatabaseDatabasesPrivilegeOutput() GetDatabasesDatabaseDatabasesPrivilegeOutput {
	return i.ToGetDatabasesDatabaseDatabasesPrivilegeOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseDatabasesPrivilegeArgs) ToGetDatabasesDatabaseDatabasesPrivilegeOutputWithContext(ctx context.Context) GetDatabasesDatabaseDatabasesPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseDatabasesPrivilegeOutput)
}

// GetDatabasesDatabaseDatabasesPrivilegeArrayInput is an input type that accepts GetDatabasesDatabaseDatabasesPrivilegeArray and GetDatabasesDatabaseDatabasesPrivilegeArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseDatabasesPrivilegeArrayInput` via:
//
//	GetDatabasesDatabaseDatabasesPrivilegeArray{ GetDatabasesDatabaseDatabasesPrivilegeArgs{...} }
type GetDatabasesDatabaseDatabasesPrivilegeArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseDatabasesPrivilegeArrayOutput() GetDatabasesDatabaseDatabasesPrivilegeArrayOutput
	ToGetDatabasesDatabaseDatabasesPrivilegeArrayOutputWithContext(context.Context) GetDatabasesDatabaseDatabasesPrivilegeArrayOutput
}

type GetDatabasesDatabaseDatabasesPrivilegeArray []GetDatabasesDatabaseDatabasesPrivilegeInput

func (GetDatabasesDatabaseDatabasesPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseDatabasesPrivilege)(nil)).Elem()
}

func (i GetDatabasesDatabaseDatabasesPrivilegeArray) ToGetDatabasesDatabaseDatabasesPrivilegeArrayOutput() GetDatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return i.ToGetDatabasesDatabaseDatabasesPrivilegeArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseDatabasesPrivilegeArray) ToGetDatabasesDatabaseDatabasesPrivilegeArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseDatabasesPrivilegeArrayOutput)
}

type GetDatabasesDatabaseDatabasesPrivilegeOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseDatabasesPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseDatabasesPrivilege)(nil)).Elem()
}

func (o GetDatabasesDatabaseDatabasesPrivilegeOutput) ToGetDatabasesDatabaseDatabasesPrivilegeOutput() GetDatabasesDatabaseDatabasesPrivilegeOutput {
	return o
}

func (o GetDatabasesDatabaseDatabasesPrivilegeOutput) ToGetDatabasesDatabaseDatabasesPrivilegeOutputWithContext(ctx context.Context) GetDatabasesDatabaseDatabasesPrivilegeOutput {
	return o
}

// Account name that requires authorization.
func (o GetDatabasesDatabaseDatabasesPrivilegeOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseDatabasesPrivilege) string { return v.AccountName }).(pulumi.StringOutput)
}

// Authorization database privilege types:
// ReadWrite: Read and write privilege.
//
//	ReadOnly: Read-only privilege.
//	DDLOnly: Only DDL privilege.
//	DMLOnly: Only DML privilege.
//	Custom: Custom privilege.
func (o GetDatabasesDatabaseDatabasesPrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseDatabasesPrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The specific SQL operation permissions contained in the permission type are separated by English commas (,) between multiple strings.
//
//	When used as a request parameter in the CreateDatabase interface, when the AccountPrivilege value is Custom, this parameter is required. Value range (multiple selections allowed): SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER. When used as a return parameter in the DescribeDatabases interface, regardless of the value of AccountPrivilege, the details of the SQL operation permissions contained in this permission type are returned. For the specific SQL operation permissions contained in each permission type, please refer to the account permission list.
func (o GetDatabasesDatabaseDatabasesPrivilegeOutput) AccountPrivilegeDetail() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseDatabasesPrivilege) string { return v.AccountPrivilegeDetail }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseDatabasesPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseDatabasesPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseDatabasesPrivilege)(nil)).Elem()
}

func (o GetDatabasesDatabaseDatabasesPrivilegeArrayOutput) ToGetDatabasesDatabaseDatabasesPrivilegeArrayOutput() GetDatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return o
}

func (o GetDatabasesDatabaseDatabasesPrivilegeArrayOutput) ToGetDatabasesDatabaseDatabasesPrivilegeArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseDatabasesPrivilegeArrayOutput {
	return o
}

func (o GetDatabasesDatabaseDatabasesPrivilegeArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseDatabasesPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseDatabasesPrivilege {
		return vs[0].([]GetDatabasesDatabaseDatabasesPrivilege)[vs[1].(int)]
	}).(GetDatabasesDatabaseDatabasesPrivilegeOutput)
}

type GetEndpointsEndpoint struct {
	// The address information.
	Addresses []GetEndpointsEndpointAddress `pulumi:"addresses"`
	// Set whether newly created read-only nodes will automatically join this connection endpoint. Values:
	// true: Automatically join.
	// false: Do not automatically join (default).
	AutoAddNewNodes bool `pulumi:"autoAddNewNodes"`
	// Consistency level. For detailed introduction of consistency level, please refer to consistency level. Value range:
	// Eventual: eventual consistency.
	// Session: session consistency.
	// Global: global consistency.
	// Description
	// When the value of ReadWriteMode is ReadWrite, the selectable consistency levels are Eventual, Session (default), and Global.
	// When the value of ReadWriteMode is ReadOnly, the consistency level is Eventual by default and cannot be changed.
	ConsistLevel string `pulumi:"consistLevel"`
	// When there is a large delay, the timeout period for read-only nodes to synchronize the latest data, in us. The value range is from 1us to 100000000us, and the default value is 10000us.
	// Explanation
	// This parameter takes effect only when the value of ConsistLevel is Global or Session.
	ConsistTimeout int `pulumi:"consistTimeout"`
	// Timeout policy after data synchronization timeout of read-only nodes supports the following two policies:
	// ReturnError: Return SQL error (wait replication complete timeout, please retry).
	// ReadMaster: Send a request to the master node (default).
	// Description
	// This parameter takes effect only when the value of ConsistLevel is Global or Session.
	ConsistTimeoutAction string `pulumi:"consistTimeoutAction"`
	// Description information for connecting endpoint. The length cannot exceed 200 characters.
	Description string `pulumi:"description"`
	// Set whether to enable transaction splitting. For detailed introduction to transaction splitting, please refer to transaction splitting. Value range:
	// true: Enabled (default).
	// false: Disabled.
	// Description
	// Only when the value of ReadWriteMode is ReadWrite, is enabling transaction splitting supported.
	DistributedTransaction bool `pulumi:"distributedTransaction"`
	// The id of the endpoint.
	EndpointId string `pulumi:"endpointId"`
	// Connect the endpoint name. The setting rules are as follows:
	// It cannot start with a number or a hyphen (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
	// The length is 1 to 64 characters.
	EndpointName string `pulumi:"endpointName"`
	// Connect terminal type. The value is fixed as Custom, indicating a custom terminal.
	EndpointType string `pulumi:"endpointType"`
	// The id of the endpoint.
	Id string `pulumi:"id"`
	// The master node accepts read requests. Value range:
	// true: (default) After enabling the master node to accept read functions, non-transactional read requests will be sent to the master node or read-only nodes in a load-balanced mode according to the number of active requests.
	// false: After disabling the master node from accepting read requests, at this time, the master node only accepts transactional read requests, and non-transactional read requests will not be sent to the master node.
	// Description
	// Only when the value of ReadWriteMode is ReadWrite, enabling the master node to accept reads is supported.
	MasterAcceptReadRequests bool `pulumi:"masterAcceptReadRequests"`
	// Connect the node IDs associated with the endpoint.The filling rules are as follows:
	// When the value of ReadWriteMode is ReadWrite, at least two nodes must be passed in, and the master node must be passed in.
	// When the value of ReadWriteMode is ReadOnly, one or more read-only nodes can be passed in.
	NodeIds []string `pulumi:"nodeIds"`
	// Endpoint read-write mode. Values:
	// ReadWrite: Read and write terminal.
	// ReadOnly: Read-only terminal (default).
	ReadWriteMode string `pulumi:"readWriteMode"`
}

// GetEndpointsEndpointInput is an input type that accepts GetEndpointsEndpointArgs and GetEndpointsEndpointOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointInput` via:
//
//	GetEndpointsEndpointArgs{...}
type GetEndpointsEndpointInput interface {
	pulumi.Input

	ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput
	ToGetEndpointsEndpointOutputWithContext(context.Context) GetEndpointsEndpointOutput
}

type GetEndpointsEndpointArgs struct {
	// The address information.
	Addresses GetEndpointsEndpointAddressArrayInput `pulumi:"addresses"`
	// Set whether newly created read-only nodes will automatically join this connection endpoint. Values:
	// true: Automatically join.
	// false: Do not automatically join (default).
	AutoAddNewNodes pulumi.BoolInput `pulumi:"autoAddNewNodes"`
	// Consistency level. For detailed introduction of consistency level, please refer to consistency level. Value range:
	// Eventual: eventual consistency.
	// Session: session consistency.
	// Global: global consistency.
	// Description
	// When the value of ReadWriteMode is ReadWrite, the selectable consistency levels are Eventual, Session (default), and Global.
	// When the value of ReadWriteMode is ReadOnly, the consistency level is Eventual by default and cannot be changed.
	ConsistLevel pulumi.StringInput `pulumi:"consistLevel"`
	// When there is a large delay, the timeout period for read-only nodes to synchronize the latest data, in us. The value range is from 1us to 100000000us, and the default value is 10000us.
	// Explanation
	// This parameter takes effect only when the value of ConsistLevel is Global or Session.
	ConsistTimeout pulumi.IntInput `pulumi:"consistTimeout"`
	// Timeout policy after data synchronization timeout of read-only nodes supports the following two policies:
	// ReturnError: Return SQL error (wait replication complete timeout, please retry).
	// ReadMaster: Send a request to the master node (default).
	// Description
	// This parameter takes effect only when the value of ConsistLevel is Global or Session.
	ConsistTimeoutAction pulumi.StringInput `pulumi:"consistTimeoutAction"`
	// Description information for connecting endpoint. The length cannot exceed 200 characters.
	Description pulumi.StringInput `pulumi:"description"`
	// Set whether to enable transaction splitting. For detailed introduction to transaction splitting, please refer to transaction splitting. Value range:
	// true: Enabled (default).
	// false: Disabled.
	// Description
	// Only when the value of ReadWriteMode is ReadWrite, is enabling transaction splitting supported.
	DistributedTransaction pulumi.BoolInput `pulumi:"distributedTransaction"`
	// The id of the endpoint.
	EndpointId pulumi.StringInput `pulumi:"endpointId"`
	// Connect the endpoint name. The setting rules are as follows:
	// It cannot start with a number or a hyphen (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
	// The length is 1 to 64 characters.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// Connect terminal type. The value is fixed as Custom, indicating a custom terminal.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The id of the endpoint.
	Id pulumi.StringInput `pulumi:"id"`
	// The master node accepts read requests. Value range:
	// true: (default) After enabling the master node to accept read functions, non-transactional read requests will be sent to the master node or read-only nodes in a load-balanced mode according to the number of active requests.
	// false: After disabling the master node from accepting read requests, at this time, the master node only accepts transactional read requests, and non-transactional read requests will not be sent to the master node.
	// Description
	// Only when the value of ReadWriteMode is ReadWrite, enabling the master node to accept reads is supported.
	MasterAcceptReadRequests pulumi.BoolInput `pulumi:"masterAcceptReadRequests"`
	// Connect the node IDs associated with the endpoint.The filling rules are as follows:
	// When the value of ReadWriteMode is ReadWrite, at least two nodes must be passed in, and the master node must be passed in.
	// When the value of ReadWriteMode is ReadOnly, one or more read-only nodes can be passed in.
	NodeIds pulumi.StringArrayInput `pulumi:"nodeIds"`
	// Endpoint read-write mode. Values:
	// ReadWrite: Read and write terminal.
	// ReadOnly: Read-only terminal (default).
	ReadWriteMode pulumi.StringInput `pulumi:"readWriteMode"`
}

func (GetEndpointsEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpoint)(nil)).Elem()
}

func (i GetEndpointsEndpointArgs) ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput {
	return i.ToGetEndpointsEndpointOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointArgs) ToGetEndpointsEndpointOutputWithContext(ctx context.Context) GetEndpointsEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointOutput)
}

// GetEndpointsEndpointArrayInput is an input type that accepts GetEndpointsEndpointArray and GetEndpointsEndpointArrayOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointArrayInput` via:
//
//	GetEndpointsEndpointArray{ GetEndpointsEndpointArgs{...} }
type GetEndpointsEndpointArrayInput interface {
	pulumi.Input

	ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput
	ToGetEndpointsEndpointArrayOutputWithContext(context.Context) GetEndpointsEndpointArrayOutput
}

type GetEndpointsEndpointArray []GetEndpointsEndpointInput

func (GetEndpointsEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpoint)(nil)).Elem()
}

func (i GetEndpointsEndpointArray) ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput {
	return i.ToGetEndpointsEndpointArrayOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointArray) ToGetEndpointsEndpointArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointArrayOutput)
}

type GetEndpointsEndpointOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpoint)(nil)).Elem()
}

func (o GetEndpointsEndpointOutput) ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput {
	return o
}

func (o GetEndpointsEndpointOutput) ToGetEndpointsEndpointOutputWithContext(ctx context.Context) GetEndpointsEndpointOutput {
	return o
}

// The address information.
func (o GetEndpointsEndpointOutput) Addresses() GetEndpointsEndpointAddressArrayOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) []GetEndpointsEndpointAddress { return v.Addresses }).(GetEndpointsEndpointAddressArrayOutput)
}

// Set whether newly created read-only nodes will automatically join this connection endpoint. Values:
// true: Automatically join.
// false: Do not automatically join (default).
func (o GetEndpointsEndpointOutput) AutoAddNewNodes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) bool { return v.AutoAddNewNodes }).(pulumi.BoolOutput)
}

// Consistency level. For detailed introduction of consistency level, please refer to consistency level. Value range:
// Eventual: eventual consistency.
// Session: session consistency.
// Global: global consistency.
// Description
// When the value of ReadWriteMode is ReadWrite, the selectable consistency levels are Eventual, Session (default), and Global.
// When the value of ReadWriteMode is ReadOnly, the consistency level is Eventual by default and cannot be changed.
func (o GetEndpointsEndpointOutput) ConsistLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.ConsistLevel }).(pulumi.StringOutput)
}

// When there is a large delay, the timeout period for read-only nodes to synchronize the latest data, in us. The value range is from 1us to 100000000us, and the default value is 10000us.
// Explanation
// This parameter takes effect only when the value of ConsistLevel is Global or Session.
func (o GetEndpointsEndpointOutput) ConsistTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) int { return v.ConsistTimeout }).(pulumi.IntOutput)
}

// Timeout policy after data synchronization timeout of read-only nodes supports the following two policies:
// ReturnError: Return SQL error (wait replication complete timeout, please retry).
// ReadMaster: Send a request to the master node (default).
// Description
// This parameter takes effect only when the value of ConsistLevel is Global or Session.
func (o GetEndpointsEndpointOutput) ConsistTimeoutAction() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.ConsistTimeoutAction }).(pulumi.StringOutput)
}

// Description information for connecting endpoint. The length cannot exceed 200 characters.
func (o GetEndpointsEndpointOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.Description }).(pulumi.StringOutput)
}

// Set whether to enable transaction splitting. For detailed introduction to transaction splitting, please refer to transaction splitting. Value range:
// true: Enabled (default).
// false: Disabled.
// Description
// Only when the value of ReadWriteMode is ReadWrite, is enabling transaction splitting supported.
func (o GetEndpointsEndpointOutput) DistributedTransaction() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) bool { return v.DistributedTransaction }).(pulumi.BoolOutput)
}

// The id of the endpoint.
func (o GetEndpointsEndpointOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.EndpointId }).(pulumi.StringOutput)
}

// Connect the endpoint name. The setting rules are as follows:
// It cannot start with a number or a hyphen (-).
// It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
// The length is 1 to 64 characters.
func (o GetEndpointsEndpointOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.EndpointName }).(pulumi.StringOutput)
}

// Connect terminal type. The value is fixed as Custom, indicating a custom terminal.
func (o GetEndpointsEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The id of the endpoint.
func (o GetEndpointsEndpointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.Id }).(pulumi.StringOutput)
}

// The master node accepts read requests. Value range:
// true: (default) After enabling the master node to accept read functions, non-transactional read requests will be sent to the master node or read-only nodes in a load-balanced mode according to the number of active requests.
// false: After disabling the master node from accepting read requests, at this time, the master node only accepts transactional read requests, and non-transactional read requests will not be sent to the master node.
// Description
// Only when the value of ReadWriteMode is ReadWrite, enabling the master node to accept reads is supported.
func (o GetEndpointsEndpointOutput) MasterAcceptReadRequests() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) bool { return v.MasterAcceptReadRequests }).(pulumi.BoolOutput)
}

// Connect the node IDs associated with the endpoint.The filling rules are as follows:
// When the value of ReadWriteMode is ReadWrite, at least two nodes must be passed in, and the master node must be passed in.
// When the value of ReadWriteMode is ReadOnly, one or more read-only nodes can be passed in.
func (o GetEndpointsEndpointOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// Endpoint read-write mode. Values:
// ReadWrite: Read and write terminal.
// ReadOnly: Read-only terminal (default).
func (o GetEndpointsEndpointOutput) ReadWriteMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.ReadWriteMode }).(pulumi.StringOutput)
}

type GetEndpointsEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpoint)(nil)).Elem()
}

func (o GetEndpointsEndpointArrayOutput) ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput {
	return o
}

func (o GetEndpointsEndpointArrayOutput) ToGetEndpointsEndpointArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointArrayOutput {
	return o
}

func (o GetEndpointsEndpointArrayOutput) Index(i pulumi.IntInput) GetEndpointsEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsEndpoint {
		return vs[0].([]GetEndpointsEndpoint)[vs[1].(int)]
	}).(GetEndpointsEndpointOutput)
}

type GetEndpointsEndpointAddress struct {
	// Parsing method. Currently, the return value can only be false (Volcengine private network parsing).
	DnsVisibility bool `pulumi:"dnsVisibility"`
	// Instance intranet access domain name.
	Domain string `pulumi:"domain"`
	// The EIP id.
	EipId string `pulumi:"eipId"`
	// IP address.
	IpAddress string `pulumi:"ipAddress"`
	// Network type:
	// Private: Private network VPC.
	// Public: Public network access.
	NetworkType string `pulumi:"networkType"`
	// Instance intranet access port.
	Port string `pulumi:"port"`
	// Subnet ID. The subnet must belong to the selected availability zone.
	// Description
	// A subnet is an IP address block within a private network. All cloud resources in a private network must be deployed within a subnet. The subnet assigns private IP addresses to cloud resources.
	SubnetId string `pulumi:"subnetId"`
}

// GetEndpointsEndpointAddressInput is an input type that accepts GetEndpointsEndpointAddressArgs and GetEndpointsEndpointAddressOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointAddressInput` via:
//
//	GetEndpointsEndpointAddressArgs{...}
type GetEndpointsEndpointAddressInput interface {
	pulumi.Input

	ToGetEndpointsEndpointAddressOutput() GetEndpointsEndpointAddressOutput
	ToGetEndpointsEndpointAddressOutputWithContext(context.Context) GetEndpointsEndpointAddressOutput
}

type GetEndpointsEndpointAddressArgs struct {
	// Parsing method. Currently, the return value can only be false (Volcengine private network parsing).
	DnsVisibility pulumi.BoolInput `pulumi:"dnsVisibility"`
	// Instance intranet access domain name.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The EIP id.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// IP address.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Network type:
	// Private: Private network VPC.
	// Public: Public network access.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Instance intranet access port.
	Port pulumi.StringInput `pulumi:"port"`
	// Subnet ID. The subnet must belong to the selected availability zone.
	// Description
	// A subnet is an IP address block within a private network. All cloud resources in a private network must be deployed within a subnet. The subnet assigns private IP addresses to cloud resources.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetEndpointsEndpointAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointAddress)(nil)).Elem()
}

func (i GetEndpointsEndpointAddressArgs) ToGetEndpointsEndpointAddressOutput() GetEndpointsEndpointAddressOutput {
	return i.ToGetEndpointsEndpointAddressOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointAddressArgs) ToGetEndpointsEndpointAddressOutputWithContext(ctx context.Context) GetEndpointsEndpointAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointAddressOutput)
}

// GetEndpointsEndpointAddressArrayInput is an input type that accepts GetEndpointsEndpointAddressArray and GetEndpointsEndpointAddressArrayOutput values.
// You can construct a concrete instance of `GetEndpointsEndpointAddressArrayInput` via:
//
//	GetEndpointsEndpointAddressArray{ GetEndpointsEndpointAddressArgs{...} }
type GetEndpointsEndpointAddressArrayInput interface {
	pulumi.Input

	ToGetEndpointsEndpointAddressArrayOutput() GetEndpointsEndpointAddressArrayOutput
	ToGetEndpointsEndpointAddressArrayOutputWithContext(context.Context) GetEndpointsEndpointAddressArrayOutput
}

type GetEndpointsEndpointAddressArray []GetEndpointsEndpointAddressInput

func (GetEndpointsEndpointAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointAddress)(nil)).Elem()
}

func (i GetEndpointsEndpointAddressArray) ToGetEndpointsEndpointAddressArrayOutput() GetEndpointsEndpointAddressArrayOutput {
	return i.ToGetEndpointsEndpointAddressArrayOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointAddressArray) ToGetEndpointsEndpointAddressArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointAddressArrayOutput)
}

type GetEndpointsEndpointAddressOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointAddress)(nil)).Elem()
}

func (o GetEndpointsEndpointAddressOutput) ToGetEndpointsEndpointAddressOutput() GetEndpointsEndpointAddressOutput {
	return o
}

func (o GetEndpointsEndpointAddressOutput) ToGetEndpointsEndpointAddressOutputWithContext(ctx context.Context) GetEndpointsEndpointAddressOutput {
	return o
}

// Parsing method. Currently, the return value can only be false (Volcengine private network parsing).
func (o GetEndpointsEndpointAddressOutput) DnsVisibility() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddress) bool { return v.DnsVisibility }).(pulumi.BoolOutput)
}

// Instance intranet access domain name.
func (o GetEndpointsEndpointAddressOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddress) string { return v.Domain }).(pulumi.StringOutput)
}

// The EIP id.
func (o GetEndpointsEndpointAddressOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddress) string { return v.EipId }).(pulumi.StringOutput)
}

// IP address.
func (o GetEndpointsEndpointAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Network type:
// Private: Private network VPC.
// Public: Public network access.
func (o GetEndpointsEndpointAddressOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddress) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Instance intranet access port.
func (o GetEndpointsEndpointAddressOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddress) string { return v.Port }).(pulumi.StringOutput)
}

// Subnet ID. The subnet must belong to the selected availability zone.
// Description
// A subnet is an IP address block within a private network. All cloud resources in a private network must be deployed within a subnet. The subnet assigns private IP addresses to cloud resources.
func (o GetEndpointsEndpointAddressOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddress) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetEndpointsEndpointAddressArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointAddress)(nil)).Elem()
}

func (o GetEndpointsEndpointAddressArrayOutput) ToGetEndpointsEndpointAddressArrayOutput() GetEndpointsEndpointAddressArrayOutput {
	return o
}

func (o GetEndpointsEndpointAddressArrayOutput) ToGetEndpointsEndpointAddressArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointAddressArrayOutput {
	return o
}

func (o GetEndpointsEndpointAddressArrayOutput) Index(i pulumi.IntInput) GetEndpointsEndpointAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsEndpointAddress {
		return vs[0].([]GetEndpointsEndpointAddress)[vs[1].(int)]
	}).(GetEndpointsEndpointAddressOutput)
}

type GetInstancesInstance struct {
	// Whether auto-renewal is enabled in the prepaid scenario. Values:
	// true: Auto-renewal is enabled.
	// false: Auto-renewal is not enabled.
	AutoRenew bool `pulumi:"autoRenew"`
	// The billing expiration time in the prepaid scenario, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ChargeEndTime string `pulumi:"chargeEndTime"`
	// The time when billing starts. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ChargeStartTime string `pulumi:"chargeStartTime"`
	// Payment status:
	// Normal: Normal.
	// Overdue: In arrears.
	// Shutdown: Shut down.
	ChargeStatus string `pulumi:"chargeStatus"`
	// The charge type of the veDB Mysql instance.
	ChargeType string `pulumi:"chargeType"`
	// The create time of the veDB Mysql instance.
	CreateTime string `pulumi:"createTime"`
	// The version of the veDB Mysql instance.
	DbEngineVersion string `pulumi:"dbEngineVersion"`
	// The ID of the veDB Mysql instance.
	Id string `pulumi:"id"`
	// The id of the veDB Mysql instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the veDB Mysql instance.
	InstanceName string `pulumi:"instanceName"`
	// The status of the veDB Mysql instance.
	InstanceStatus string `pulumi:"instanceStatus"`
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames string `pulumi:"lowerCaseTableNames"`
	// Detailed information of instance nodes.
	Nodes []GetInstancesInstanceNode `pulumi:"nodes"`
	// Expected release time when shut down due to arrears. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	OverdueReclaimTime string `pulumi:"overdueReclaimTime"`
	// Overdue shutdown time. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	OverdueTime string `pulumi:"overdueTime"`
	// Total storage capacity in GiB for prepaid services.
	PrePaidStorageInGb int `pulumi:"prePaidStorageInGb"`
	// The project name of the veDB Mysql instance.
	ProjectName string `pulumi:"projectName"`
	// The region id.
	RegionId string `pulumi:"regionId"`
	// Storage billing type. Values:
	// PostPaid: Pay-as-you-go (postpaid).
	// PrePaid: Monthly/yearly subscription (prepaid).
	StorageChargeType string `pulumi:"storageChargeType"`
	// Used storage size, unit: GiB.
	StorageUsedGib float64 `pulumi:"storageUsedGib"`
	// The subnet ID of the veDB Mysql instance.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []GetInstancesInstanceTag `pulumi:"tags"`
	// Time zone.
	TimeZone string `pulumi:"timeZone"`
	// The vpc ID of the veDB Mysql instance.
	VpcId string `pulumi:"vpcId"`
	// The available zone of the veDB Mysql instance.
	ZoneIds string `pulumi:"zoneIds"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//	GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// Whether auto-renewal is enabled in the prepaid scenario. Values:
	// true: Auto-renewal is enabled.
	// false: Auto-renewal is not enabled.
	AutoRenew pulumi.BoolInput `pulumi:"autoRenew"`
	// The billing expiration time in the prepaid scenario, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ChargeEndTime pulumi.StringInput `pulumi:"chargeEndTime"`
	// The time when billing starts. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	ChargeStartTime pulumi.StringInput `pulumi:"chargeStartTime"`
	// Payment status:
	// Normal: Normal.
	// Overdue: In arrears.
	// Shutdown: Shut down.
	ChargeStatus pulumi.StringInput `pulumi:"chargeStatus"`
	// The charge type of the veDB Mysql instance.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The create time of the veDB Mysql instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The version of the veDB Mysql instance.
	DbEngineVersion pulumi.StringInput `pulumi:"dbEngineVersion"`
	// The ID of the veDB Mysql instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the veDB Mysql instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the veDB Mysql instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The status of the veDB Mysql instance.
	InstanceStatus pulumi.StringInput `pulumi:"instanceStatus"`
	// Whether the table name is case sensitive, the default value is 1.
	// Ranges:
	// 0: Table names are stored as fixed and table names are case-sensitive.
	// 1: Table names will be stored in lowercase and table names are not case sensitive.
	LowerCaseTableNames pulumi.StringInput `pulumi:"lowerCaseTableNames"`
	// Detailed information of instance nodes.
	Nodes GetInstancesInstanceNodeArrayInput `pulumi:"nodes"`
	// Expected release time when shut down due to arrears. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	OverdueReclaimTime pulumi.StringInput `pulumi:"overdueReclaimTime"`
	// Overdue shutdown time. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// Total storage capacity in GiB for prepaid services.
	PrePaidStorageInGb pulumi.IntInput `pulumi:"prePaidStorageInGb"`
	// The project name of the veDB Mysql instance.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The region id.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Storage billing type. Values:
	// PostPaid: Pay-as-you-go (postpaid).
	// PrePaid: Monthly/yearly subscription (prepaid).
	StorageChargeType pulumi.StringInput `pulumi:"storageChargeType"`
	// Used storage size, unit: GiB.
	StorageUsedGib pulumi.Float64Input `pulumi:"storageUsedGib"`
	// The subnet ID of the veDB Mysql instance.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags GetInstancesInstanceTagArrayInput `pulumi:"tags"`
	// Time zone.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// The vpc ID of the veDB Mysql instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The available zone of the veDB Mysql instance.
	ZoneIds pulumi.StringInput `pulumi:"zoneIds"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//	GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// Whether auto-renewal is enabled in the prepaid scenario. Values:
// true: Auto-renewal is enabled.
// false: Auto-renewal is not enabled.
func (o GetInstancesInstanceOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.AutoRenew }).(pulumi.BoolOutput)
}

// The billing expiration time in the prepaid scenario, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o GetInstancesInstanceOutput) ChargeEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ChargeEndTime }).(pulumi.StringOutput)
}

// The time when billing starts. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o GetInstancesInstanceOutput) ChargeStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ChargeStartTime }).(pulumi.StringOutput)
}

// Payment status:
// Normal: Normal.
// Overdue: In arrears.
// Shutdown: Shut down.
func (o GetInstancesInstanceOutput) ChargeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ChargeStatus }).(pulumi.StringOutput)
}

// The charge type of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The create time of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The version of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) DbEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DbEngineVersion }).(pulumi.StringOutput)
}

// The ID of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The status of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceStatus }).(pulumi.StringOutput)
}

// Whether the table name is case sensitive, the default value is 1.
// Ranges:
// 0: Table names are stored as fixed and table names are case-sensitive.
// 1: Table names will be stored in lowercase and table names are not case sensitive.
func (o GetInstancesInstanceOutput) LowerCaseTableNames() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.LowerCaseTableNames }).(pulumi.StringOutput)
}

// Detailed information of instance nodes.
func (o GetInstancesInstanceOutput) Nodes() GetInstancesInstanceNodeArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceNode { return v.Nodes }).(GetInstancesInstanceNodeArrayOutput)
}

// Expected release time when shut down due to arrears. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o GetInstancesInstanceOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// Overdue shutdown time. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
func (o GetInstancesInstanceOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// Total storage capacity in GiB for prepaid services.
func (o GetInstancesInstanceOutput) PrePaidStorageInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.PrePaidStorageInGb }).(pulumi.IntOutput)
}

// The project name of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The region id.
func (o GetInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// Storage billing type. Values:
// PostPaid: Pay-as-you-go (postpaid).
// PrePaid: Monthly/yearly subscription (prepaid).
func (o GetInstancesInstanceOutput) StorageChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.StorageChargeType }).(pulumi.StringOutput)
}

// Used storage size, unit: GiB.
func (o GetInstancesInstanceOutput) StorageUsedGib() pulumi.Float64Output {
	return o.ApplyT(func(v GetInstancesInstance) float64 { return v.StorageUsedGib }).(pulumi.Float64Output)
}

// The subnet ID of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o GetInstancesInstanceOutput) Tags() GetInstancesInstanceTagArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []GetInstancesInstanceTag { return v.Tags }).(GetInstancesInstanceTagArrayOutput)
}

// Time zone.
func (o GetInstancesInstanceOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The vpc ID of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The available zone of the veDB Mysql instance.
func (o GetInstancesInstanceOutput) ZoneIds() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ZoneIds }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetInstancesInstanceNode struct {
	// Memory size, in GiB.
	Memory int `pulumi:"memory"`
	// The id of the node.
	NodeId string `pulumi:"nodeId"`
	// Node specification of an instance.
	NodeSpec string `pulumi:"nodeSpec"`
	// Node type. Values:
	// Primary: Primary node.
	// ReadOnly: Read-only node.
	NodeType string `pulumi:"nodeType"`
	// CPU size. For example, when the value is 1, it means the CPU size is 1U.
	VCpu int `pulumi:"vCpu"`
	// The available zone of the veDB Mysql instance.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstancesInstanceNodeInput is an input type that accepts GetInstancesInstanceNodeArgs and GetInstancesInstanceNodeOutput values.
// You can construct a concrete instance of `GetInstancesInstanceNodeInput` via:
//
//	GetInstancesInstanceNodeArgs{...}
type GetInstancesInstanceNodeInput interface {
	pulumi.Input

	ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput
	ToGetInstancesInstanceNodeOutputWithContext(context.Context) GetInstancesInstanceNodeOutput
}

type GetInstancesInstanceNodeArgs struct {
	// Memory size, in GiB.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The id of the node.
	NodeId pulumi.StringInput `pulumi:"nodeId"`
	// Node specification of an instance.
	NodeSpec pulumi.StringInput `pulumi:"nodeSpec"`
	// Node type. Values:
	// Primary: Primary node.
	// ReadOnly: Read-only node.
	NodeType pulumi.StringInput `pulumi:"nodeType"`
	// CPU size. For example, when the value is 1, it means the CPU size is 1U.
	VCpu pulumi.IntInput `pulumi:"vCpu"`
	// The available zone of the veDB Mysql instance.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceNode)(nil)).Elem()
}

func (i GetInstancesInstanceNodeArgs) ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput {
	return i.ToGetInstancesInstanceNodeOutputWithContext(context.Background())
}

func (i GetInstancesInstanceNodeArgs) ToGetInstancesInstanceNodeOutputWithContext(ctx context.Context) GetInstancesInstanceNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceNodeOutput)
}

// GetInstancesInstanceNodeArrayInput is an input type that accepts GetInstancesInstanceNodeArray and GetInstancesInstanceNodeArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceNodeArrayInput` via:
//
//	GetInstancesInstanceNodeArray{ GetInstancesInstanceNodeArgs{...} }
type GetInstancesInstanceNodeArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput
	ToGetInstancesInstanceNodeArrayOutputWithContext(context.Context) GetInstancesInstanceNodeArrayOutput
}

type GetInstancesInstanceNodeArray []GetInstancesInstanceNodeInput

func (GetInstancesInstanceNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceNode)(nil)).Elem()
}

func (i GetInstancesInstanceNodeArray) ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput {
	return i.ToGetInstancesInstanceNodeArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceNodeArray) ToGetInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceNodeArrayOutput)
}

type GetInstancesInstanceNodeOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceNode)(nil)).Elem()
}

func (o GetInstancesInstanceNodeOutput) ToGetInstancesInstanceNodeOutput() GetInstancesInstanceNodeOutput {
	return o
}

func (o GetInstancesInstanceNodeOutput) ToGetInstancesInstanceNodeOutputWithContext(ctx context.Context) GetInstancesInstanceNodeOutput {
	return o
}

// Memory size, in GiB.
func (o GetInstancesInstanceNodeOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) int { return v.Memory }).(pulumi.IntOutput)
}

// The id of the node.
func (o GetInstancesInstanceNodeOutput) NodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.NodeId }).(pulumi.StringOutput)
}

// Node specification of an instance.
func (o GetInstancesInstanceNodeOutput) NodeSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.NodeSpec }).(pulumi.StringOutput)
}

// Node type. Values:
// Primary: Primary node.
// ReadOnly: Read-only node.
func (o GetInstancesInstanceNodeOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.NodeType }).(pulumi.StringOutput)
}

// CPU size. For example, when the value is 1, it means the CPU size is 1U.
func (o GetInstancesInstanceNodeOutput) VCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) int { return v.VCpu }).(pulumi.IntOutput)
}

// The available zone of the veDB Mysql instance.
func (o GetInstancesInstanceNodeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceNode) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstancesInstanceNodeArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceNode)(nil)).Elem()
}

func (o GetInstancesInstanceNodeArrayOutput) ToGetInstancesInstanceNodeArrayOutput() GetInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceNodeArrayOutput) ToGetInstancesInstanceNodeArrayOutputWithContext(ctx context.Context) GetInstancesInstanceNodeArrayOutput {
	return o
}

func (o GetInstancesInstanceNodeArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceNode {
		return vs[0].([]GetInstancesInstanceNode)[vs[1].(int)]
	}).(GetInstancesInstanceNodeOutput)
}

type GetInstancesInstanceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetInstancesInstanceTagInput is an input type that accepts GetInstancesInstanceTagArgs and GetInstancesInstanceTagOutput values.
// You can construct a concrete instance of `GetInstancesInstanceTagInput` via:
//
//	GetInstancesInstanceTagArgs{...}
type GetInstancesInstanceTagInput interface {
	pulumi.Input

	ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput
	ToGetInstancesInstanceTagOutputWithContext(context.Context) GetInstancesInstanceTagOutput
}

type GetInstancesInstanceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstancesInstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceTag)(nil)).Elem()
}

func (i GetInstancesInstanceTagArgs) ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput {
	return i.ToGetInstancesInstanceTagOutputWithContext(context.Background())
}

func (i GetInstancesInstanceTagArgs) ToGetInstancesInstanceTagOutputWithContext(ctx context.Context) GetInstancesInstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceTagOutput)
}

// GetInstancesInstanceTagArrayInput is an input type that accepts GetInstancesInstanceTagArray and GetInstancesInstanceTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceTagArrayInput` via:
//
//	GetInstancesInstanceTagArray{ GetInstancesInstanceTagArgs{...} }
type GetInstancesInstanceTagArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput
	ToGetInstancesInstanceTagArrayOutputWithContext(context.Context) GetInstancesInstanceTagArrayOutput
}

type GetInstancesInstanceTagArray []GetInstancesInstanceTagInput

func (GetInstancesInstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceTag)(nil)).Elem()
}

func (i GetInstancesInstanceTagArray) ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput {
	return i.ToGetInstancesInstanceTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceTagArray) ToGetInstancesInstanceTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceTagArrayOutput)
}

type GetInstancesInstanceTagOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceTag)(nil)).Elem()
}

func (o GetInstancesInstanceTagOutput) ToGetInstancesInstanceTagOutput() GetInstancesInstanceTagOutput {
	return o
}

func (o GetInstancesInstanceTagOutput) ToGetInstancesInstanceTagOutputWithContext(ctx context.Context) GetInstancesInstanceTagOutput {
	return o
}

// The Key of Tags.
func (o GetInstancesInstanceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetInstancesInstanceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstancesInstanceTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceTag)(nil)).Elem()
}

func (o GetInstancesInstanceTagArrayOutput) ToGetInstancesInstanceTagArrayOutput() GetInstancesInstanceTagArrayOutput {
	return o
}

func (o GetInstancesInstanceTagArrayOutput) ToGetInstancesInstanceTagArrayOutputWithContext(ctx context.Context) GetInstancesInstanceTagArrayOutput {
	return o
}

func (o GetInstancesInstanceTagArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceTag {
		return vs[0].([]GetInstancesInstanceTag)[vs[1].(int)]
	}).(GetInstancesInstanceTagOutput)
}

type GetInstancesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetInstancesTagInput is an input type that accepts GetInstancesTagArgs and GetInstancesTagOutput values.
// You can construct a concrete instance of `GetInstancesTagInput` via:
//
//	GetInstancesTagArgs{...}
type GetInstancesTagInput interface {
	pulumi.Input

	ToGetInstancesTagOutput() GetInstancesTagOutput
	ToGetInstancesTagOutputWithContext(context.Context) GetInstancesTagOutput
}

type GetInstancesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetInstancesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesTag)(nil)).Elem()
}

func (i GetInstancesTagArgs) ToGetInstancesTagOutput() GetInstancesTagOutput {
	return i.ToGetInstancesTagOutputWithContext(context.Background())
}

func (i GetInstancesTagArgs) ToGetInstancesTagOutputWithContext(ctx context.Context) GetInstancesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesTagOutput)
}

// GetInstancesTagArrayInput is an input type that accepts GetInstancesTagArray and GetInstancesTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesTagArrayInput` via:
//
//	GetInstancesTagArray{ GetInstancesTagArgs{...} }
type GetInstancesTagArrayInput interface {
	pulumi.Input

	ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput
	ToGetInstancesTagArrayOutputWithContext(context.Context) GetInstancesTagArrayOutput
}

type GetInstancesTagArray []GetInstancesTagInput

func (GetInstancesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesTag)(nil)).Elem()
}

func (i GetInstancesTagArray) ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput {
	return i.ToGetInstancesTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesTagArray) ToGetInstancesTagArrayOutputWithContext(ctx context.Context) GetInstancesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesTagArrayOutput)
}

type GetInstancesTagOutput struct{ *pulumi.OutputState }

func (GetInstancesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesTag)(nil)).Elem()
}

func (o GetInstancesTagOutput) ToGetInstancesTagOutput() GetInstancesTagOutput {
	return o
}

func (o GetInstancesTagOutput) ToGetInstancesTagOutputWithContext(ctx context.Context) GetInstancesTagOutput {
	return o
}

// The Key of Tags.
func (o GetInstancesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetInstancesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetInstancesTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesTag)(nil)).Elem()
}

func (o GetInstancesTagArrayOutput) ToGetInstancesTagArrayOutput() GetInstancesTagArrayOutput {
	return o
}

func (o GetInstancesTagArrayOutput) ToGetInstancesTagArrayOutputWithContext(ctx context.Context) GetInstancesTagArrayOutput {
	return o
}

func (o GetInstancesTagArrayOutput) Index(i pulumi.IntInput) GetInstancesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesTag {
		return vs[0].([]GetInstancesTag)[vs[1].(int)]
	}).(GetInstancesTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAccountPrivilegeInput)(nil)).Elem(), AccountAccountPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAccountPrivilegeArrayInput)(nil)).Elem(), AccountAccountPrivilegeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountInput)(nil)).Elem(), AccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountArrayInput)(nil)).Elem(), AccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountAccountPrivilegeInput)(nil)).Elem(), AccountsAccountAccountPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsAccountAccountPrivilegeArrayInput)(nil)).Elem(), AccountsAccountAccountPrivilegeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowlistsAllowListInput)(nil)).Elem(), AllowlistsAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowlistsAllowListArrayInput)(nil)).Elem(), AllowlistsAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowlistsAllowListAssociatedInstanceInput)(nil)).Elem(), AllowlistsAllowListAssociatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AllowlistsAllowListAssociatedInstanceArrayInput)(nil)).Elem(), AllowlistsAllowListAssociatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupBackupPolicyInput)(nil)).Elem(), BackupBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupBackupPolicyPtrInput)(nil)).Elem(), BackupBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupInput)(nil)).Elem(), BackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupArrayInput)(nil)).Elem(), BackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupBackupPolicyInput)(nil)).Elem(), BackupsBackupBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupsBackupBackupPolicyArrayInput)(nil)).Elem(), BackupsBackupBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasesDatabaseInput)(nil)).Elem(), DatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasesDatabaseArrayInput)(nil)).Elem(), DatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasesDatabaseDatabasesPrivilegeInput)(nil)).Elem(), DatabasesDatabaseDatabasesPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasesDatabaseDatabasesPrivilegeArrayInput)(nil)).Elem(), DatabasesDatabaseDatabasesPrivilegeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointsEndpointInput)(nil)).Elem(), EndpointsEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointsEndpointArrayInput)(nil)).Elem(), EndpointsEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointsEndpointAddressInput)(nil)).Elem(), EndpointsEndpointAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointsEndpointAddressArrayInput)(nil)).Elem(), EndpointsEndpointAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagInput)(nil)).Elem(), InstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagArrayInput)(nil)).Elem(), InstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceInput)(nil)).Elem(), InstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceArrayInput)(nil)).Elem(), InstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNodeInput)(nil)).Elem(), InstancesInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNodeArrayInput)(nil)).Elem(), InstancesInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceTagInput)(nil)).Elem(), InstancesInstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceTagArrayInput)(nil)).Elem(), InstancesInstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTagInput)(nil)).Elem(), InstancesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesTagArrayInput)(nil)).Elem(), InstancesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountInput)(nil)).Elem(), GetAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountArrayInput)(nil)).Elem(), GetAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountAccountPrivilegeInput)(nil)).Elem(), GetAccountsAccountAccountPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountsAccountAccountPrivilegeArrayInput)(nil)).Elem(), GetAccountsAccountAccountPrivilegeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowlistsAllowListInput)(nil)).Elem(), GetAllowlistsAllowListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowlistsAllowListArrayInput)(nil)).Elem(), GetAllowlistsAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowlistsAllowListAssociatedInstanceInput)(nil)).Elem(), GetAllowlistsAllowListAssociatedInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAllowlistsAllowListAssociatedInstanceArrayInput)(nil)).Elem(), GetAllowlistsAllowListAssociatedInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupInput)(nil)).Elem(), GetBackupsBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupArrayInput)(nil)).Elem(), GetBackupsBackupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupBackupPolicyInput)(nil)).Elem(), GetBackupsBackupBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupsBackupBackupPolicyArrayInput)(nil)).Elem(), GetBackupsBackupBackupPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseInput)(nil)).Elem(), GetDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseArrayInput)(nil)).Elem(), GetDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseDatabasesPrivilegeInput)(nil)).Elem(), GetDatabasesDatabaseDatabasesPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseDatabasesPrivilegeArrayInput)(nil)).Elem(), GetDatabasesDatabaseDatabasesPrivilegeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointInput)(nil)).Elem(), GetEndpointsEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointArrayInput)(nil)).Elem(), GetEndpointsEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointAddressInput)(nil)).Elem(), GetEndpointsEndpointAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointsEndpointAddressArrayInput)(nil)).Elem(), GetEndpointsEndpointAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceInput)(nil)).Elem(), GetInstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceArrayInput)(nil)).Elem(), GetInstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceNodeInput)(nil)).Elem(), GetInstancesInstanceNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceNodeArrayInput)(nil)).Elem(), GetInstancesInstanceNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceTagInput)(nil)).Elem(), GetInstancesInstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceTagArrayInput)(nil)).Elem(), GetInstancesInstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesTagInput)(nil)).Elem(), GetInstancesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesTagArrayInput)(nil)).Elem(), GetInstancesTagArray{})
	pulumi.RegisterOutputType(AccountAccountPrivilegeOutput{})
	pulumi.RegisterOutputType(AccountAccountPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(AccountsAccountOutput{})
	pulumi.RegisterOutputType(AccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(AccountsAccountAccountPrivilegeOutput{})
	pulumi.RegisterOutputType(AccountsAccountAccountPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(AllowlistsAllowListOutput{})
	pulumi.RegisterOutputType(AllowlistsAllowListArrayOutput{})
	pulumi.RegisterOutputType(AllowlistsAllowListAssociatedInstanceOutput{})
	pulumi.RegisterOutputType(AllowlistsAllowListAssociatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(BackupBackupPolicyOutput{})
	pulumi.RegisterOutputType(BackupBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(BackupsBackupOutput{})
	pulumi.RegisterOutputType(BackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(BackupsBackupBackupPolicyOutput{})
	pulumi.RegisterOutputType(BackupsBackupBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(DatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(DatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(DatabasesDatabaseDatabasesPrivilegeOutput{})
	pulumi.RegisterOutputType(DatabasesDatabaseDatabasesPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(EndpointsEndpointOutput{})
	pulumi.RegisterOutputType(EndpointsEndpointArrayOutput{})
	pulumi.RegisterOutputType(EndpointsEndpointAddressOutput{})
	pulumi.RegisterOutputType(EndpointsEndpointAddressArrayOutput{})
	pulumi.RegisterOutputType(InstanceTagOutput{})
	pulumi.RegisterOutputType(InstanceTagArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceOutput{})
	pulumi.RegisterOutputType(InstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNodeOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceTagOutput{})
	pulumi.RegisterOutputType(InstancesInstanceTagArrayOutput{})
	pulumi.RegisterOutputType(InstancesTagOutput{})
	pulumi.RegisterOutputType(InstancesTagArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountAccountPrivilegeOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountAccountPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(GetAllowlistsAllowListOutput{})
	pulumi.RegisterOutputType(GetAllowlistsAllowListArrayOutput{})
	pulumi.RegisterOutputType(GetAllowlistsAllowListAssociatedInstanceOutput{})
	pulumi.RegisterOutputType(GetAllowlistsAllowListAssociatedInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupArrayOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupBackupPolicyOutput{})
	pulumi.RegisterOutputType(GetBackupsBackupBackupPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseDatabasesPrivilegeOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseDatabasesPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointAddressOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointAddressArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceNodeOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceNodeArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceTagOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceTagArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesTagOutput{})
	pulumi.RegisterOutputType(GetInstancesTagArrayOutput{})
}
