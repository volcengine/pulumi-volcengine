// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package veenedge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of veenedge instance types
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/veenedge"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := veenedge.InstanceTypes(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func InstanceTypes(ctx *pulumi.Context, args *InstanceTypesArgs, opts ...pulumi.InvokeOption) (*InstanceTypesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv InstanceTypesResult
	err := ctx.Invoke("volcengine:veenedge/instanceTypes:InstanceTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking InstanceTypes.
type InstanceTypesArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by InstanceTypes.
type InstanceTypesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The collection of instance types query.
	InstanceTypeConfigs []InstanceTypesInstanceTypeConfig `pulumi:"instanceTypeConfigs"`
	OutputFile          *string                           `pulumi:"outputFile"`
	// The total count of instance types query.
	TotalCount int `pulumi:"totalCount"`
}

func InstanceTypesOutput(ctx *pulumi.Context, args InstanceTypesOutputArgs, opts ...pulumi.InvokeOption) InstanceTypesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (InstanceTypesResult, error) {
			args := v.(InstanceTypesArgs)
			r, err := InstanceTypes(ctx, &args, opts...)
			var s InstanceTypesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(InstanceTypesResultOutput)
}

// A collection of arguments for invoking InstanceTypes.
type InstanceTypesOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (InstanceTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypesArgs)(nil)).Elem()
}

// A collection of values returned by InstanceTypes.
type InstanceTypesResultOutput struct{ *pulumi.OutputState }

func (InstanceTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypesResult)(nil)).Elem()
}

func (o InstanceTypesResultOutput) ToInstanceTypesResultOutput() InstanceTypesResultOutput {
	return o
}

func (o InstanceTypesResultOutput) ToInstanceTypesResultOutputWithContext(ctx context.Context) InstanceTypesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o InstanceTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The collection of instance types query.
func (o InstanceTypesResultOutput) InstanceTypeConfigs() InstanceTypesInstanceTypeConfigArrayOutput {
	return o.ApplyT(func(v InstanceTypesResult) []InstanceTypesInstanceTypeConfig { return v.InstanceTypeConfigs }).(InstanceTypesInstanceTypeConfigArrayOutput)
}

func (o InstanceTypesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceTypesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of instance types query.
func (o InstanceTypesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceTypesResultOutput{})
}
