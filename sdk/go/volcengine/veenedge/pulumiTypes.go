// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package veenedge

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AvailableResourcesRegion struct {
	// The config of area.
	Area AvailableResourcesRegionArea `pulumi:"area"`
	// The config of city.
	City AvailableResourcesRegionCity `pulumi:"city"`
	// The config of cluster.
	Cluster AvailableResourcesRegionCluster `pulumi:"cluster"`
	// The config of country.
	Country AvailableResourcesRegionCountry `pulumi:"country"`
	// The config of isp.
	Isp AvailableResourcesRegionIsp `pulumi:"isp"`
}

// AvailableResourcesRegionInput is an input type that accepts AvailableResourcesRegionArgs and AvailableResourcesRegionOutput values.
// You can construct a concrete instance of `AvailableResourcesRegionInput` via:
//
//	AvailableResourcesRegionArgs{...}
type AvailableResourcesRegionInput interface {
	pulumi.Input

	ToAvailableResourcesRegionOutput() AvailableResourcesRegionOutput
	ToAvailableResourcesRegionOutputWithContext(context.Context) AvailableResourcesRegionOutput
}

type AvailableResourcesRegionArgs struct {
	// The config of area.
	Area AvailableResourcesRegionAreaInput `pulumi:"area"`
	// The config of city.
	City AvailableResourcesRegionCityInput `pulumi:"city"`
	// The config of cluster.
	Cluster AvailableResourcesRegionClusterInput `pulumi:"cluster"`
	// The config of country.
	Country AvailableResourcesRegionCountryInput `pulumi:"country"`
	// The config of isp.
	Isp AvailableResourcesRegionIspInput `pulumi:"isp"`
}

func (AvailableResourcesRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegion)(nil)).Elem()
}

func (i AvailableResourcesRegionArgs) ToAvailableResourcesRegionOutput() AvailableResourcesRegionOutput {
	return i.ToAvailableResourcesRegionOutputWithContext(context.Background())
}

func (i AvailableResourcesRegionArgs) ToAvailableResourcesRegionOutputWithContext(ctx context.Context) AvailableResourcesRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailableResourcesRegionOutput)
}

// AvailableResourcesRegionArrayInput is an input type that accepts AvailableResourcesRegionArray and AvailableResourcesRegionArrayOutput values.
// You can construct a concrete instance of `AvailableResourcesRegionArrayInput` via:
//
//	AvailableResourcesRegionArray{ AvailableResourcesRegionArgs{...} }
type AvailableResourcesRegionArrayInput interface {
	pulumi.Input

	ToAvailableResourcesRegionArrayOutput() AvailableResourcesRegionArrayOutput
	ToAvailableResourcesRegionArrayOutputWithContext(context.Context) AvailableResourcesRegionArrayOutput
}

type AvailableResourcesRegionArray []AvailableResourcesRegionInput

func (AvailableResourcesRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AvailableResourcesRegion)(nil)).Elem()
}

func (i AvailableResourcesRegionArray) ToAvailableResourcesRegionArrayOutput() AvailableResourcesRegionArrayOutput {
	return i.ToAvailableResourcesRegionArrayOutputWithContext(context.Background())
}

func (i AvailableResourcesRegionArray) ToAvailableResourcesRegionArrayOutputWithContext(ctx context.Context) AvailableResourcesRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailableResourcesRegionArrayOutput)
}

type AvailableResourcesRegionOutput struct{ *pulumi.OutputState }

func (AvailableResourcesRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegion)(nil)).Elem()
}

func (o AvailableResourcesRegionOutput) ToAvailableResourcesRegionOutput() AvailableResourcesRegionOutput {
	return o
}

func (o AvailableResourcesRegionOutput) ToAvailableResourcesRegionOutputWithContext(ctx context.Context) AvailableResourcesRegionOutput {
	return o
}

// The config of area.
func (o AvailableResourcesRegionOutput) Area() AvailableResourcesRegionAreaOutput {
	return o.ApplyT(func(v AvailableResourcesRegion) AvailableResourcesRegionArea { return v.Area }).(AvailableResourcesRegionAreaOutput)
}

// The config of city.
func (o AvailableResourcesRegionOutput) City() AvailableResourcesRegionCityOutput {
	return o.ApplyT(func(v AvailableResourcesRegion) AvailableResourcesRegionCity { return v.City }).(AvailableResourcesRegionCityOutput)
}

// The config of cluster.
func (o AvailableResourcesRegionOutput) Cluster() AvailableResourcesRegionClusterOutput {
	return o.ApplyT(func(v AvailableResourcesRegion) AvailableResourcesRegionCluster { return v.Cluster }).(AvailableResourcesRegionClusterOutput)
}

// The config of country.
func (o AvailableResourcesRegionOutput) Country() AvailableResourcesRegionCountryOutput {
	return o.ApplyT(func(v AvailableResourcesRegion) AvailableResourcesRegionCountry { return v.Country }).(AvailableResourcesRegionCountryOutput)
}

// The config of isp.
func (o AvailableResourcesRegionOutput) Isp() AvailableResourcesRegionIspOutput {
	return o.ApplyT(func(v AvailableResourcesRegion) AvailableResourcesRegionIsp { return v.Isp }).(AvailableResourcesRegionIspOutput)
}

type AvailableResourcesRegionArrayOutput struct{ *pulumi.OutputState }

func (AvailableResourcesRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AvailableResourcesRegion)(nil)).Elem()
}

func (o AvailableResourcesRegionArrayOutput) ToAvailableResourcesRegionArrayOutput() AvailableResourcesRegionArrayOutput {
	return o
}

func (o AvailableResourcesRegionArrayOutput) ToAvailableResourcesRegionArrayOutputWithContext(ctx context.Context) AvailableResourcesRegionArrayOutput {
	return o
}

func (o AvailableResourcesRegionArrayOutput) Index(i pulumi.IntInput) AvailableResourcesRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AvailableResourcesRegion {
		return vs[0].([]AvailableResourcesRegion)[vs[1].(int)]
	}).(AvailableResourcesRegionOutput)
}

type AvailableResourcesRegionArea struct {
	// The english name of region.
	EnName string `pulumi:"enName"`
	// The id of region.
	Id string `pulumi:"id"`
	// The name of region.
	Name string `pulumi:"name"`
}

// AvailableResourcesRegionAreaInput is an input type that accepts AvailableResourcesRegionAreaArgs and AvailableResourcesRegionAreaOutput values.
// You can construct a concrete instance of `AvailableResourcesRegionAreaInput` via:
//
//	AvailableResourcesRegionAreaArgs{...}
type AvailableResourcesRegionAreaInput interface {
	pulumi.Input

	ToAvailableResourcesRegionAreaOutput() AvailableResourcesRegionAreaOutput
	ToAvailableResourcesRegionAreaOutputWithContext(context.Context) AvailableResourcesRegionAreaOutput
}

type AvailableResourcesRegionAreaArgs struct {
	// The english name of region.
	EnName pulumi.StringInput `pulumi:"enName"`
	// The id of region.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of region.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AvailableResourcesRegionAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionArea)(nil)).Elem()
}

func (i AvailableResourcesRegionAreaArgs) ToAvailableResourcesRegionAreaOutput() AvailableResourcesRegionAreaOutput {
	return i.ToAvailableResourcesRegionAreaOutputWithContext(context.Background())
}

func (i AvailableResourcesRegionAreaArgs) ToAvailableResourcesRegionAreaOutputWithContext(ctx context.Context) AvailableResourcesRegionAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailableResourcesRegionAreaOutput)
}

type AvailableResourcesRegionAreaOutput struct{ *pulumi.OutputState }

func (AvailableResourcesRegionAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionArea)(nil)).Elem()
}

func (o AvailableResourcesRegionAreaOutput) ToAvailableResourcesRegionAreaOutput() AvailableResourcesRegionAreaOutput {
	return o
}

func (o AvailableResourcesRegionAreaOutput) ToAvailableResourcesRegionAreaOutputWithContext(ctx context.Context) AvailableResourcesRegionAreaOutput {
	return o
}

// The english name of region.
func (o AvailableResourcesRegionAreaOutput) EnName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionArea) string { return v.EnName }).(pulumi.StringOutput)
}

// The id of region.
func (o AvailableResourcesRegionAreaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionArea) string { return v.Id }).(pulumi.StringOutput)
}

// The name of region.
func (o AvailableResourcesRegionAreaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionArea) string { return v.Name }).(pulumi.StringOutput)
}

type AvailableResourcesRegionCity struct {
	// The english name of region.
	EnName string `pulumi:"enName"`
	// The id of region.
	Id string `pulumi:"id"`
	// The name of region.
	Name string `pulumi:"name"`
}

// AvailableResourcesRegionCityInput is an input type that accepts AvailableResourcesRegionCityArgs and AvailableResourcesRegionCityOutput values.
// You can construct a concrete instance of `AvailableResourcesRegionCityInput` via:
//
//	AvailableResourcesRegionCityArgs{...}
type AvailableResourcesRegionCityInput interface {
	pulumi.Input

	ToAvailableResourcesRegionCityOutput() AvailableResourcesRegionCityOutput
	ToAvailableResourcesRegionCityOutputWithContext(context.Context) AvailableResourcesRegionCityOutput
}

type AvailableResourcesRegionCityArgs struct {
	// The english name of region.
	EnName pulumi.StringInput `pulumi:"enName"`
	// The id of region.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of region.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AvailableResourcesRegionCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionCity)(nil)).Elem()
}

func (i AvailableResourcesRegionCityArgs) ToAvailableResourcesRegionCityOutput() AvailableResourcesRegionCityOutput {
	return i.ToAvailableResourcesRegionCityOutputWithContext(context.Background())
}

func (i AvailableResourcesRegionCityArgs) ToAvailableResourcesRegionCityOutputWithContext(ctx context.Context) AvailableResourcesRegionCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailableResourcesRegionCityOutput)
}

type AvailableResourcesRegionCityOutput struct{ *pulumi.OutputState }

func (AvailableResourcesRegionCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionCity)(nil)).Elem()
}

func (o AvailableResourcesRegionCityOutput) ToAvailableResourcesRegionCityOutput() AvailableResourcesRegionCityOutput {
	return o
}

func (o AvailableResourcesRegionCityOutput) ToAvailableResourcesRegionCityOutputWithContext(ctx context.Context) AvailableResourcesRegionCityOutput {
	return o
}

// The english name of region.
func (o AvailableResourcesRegionCityOutput) EnName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCity) string { return v.EnName }).(pulumi.StringOutput)
}

// The id of region.
func (o AvailableResourcesRegionCityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCity) string { return v.Id }).(pulumi.StringOutput)
}

// The name of region.
func (o AvailableResourcesRegionCityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCity) string { return v.Name }).(pulumi.StringOutput)
}

type AvailableResourcesRegionCluster struct {
	// The english name of region.
	EnName string `pulumi:"enName"`
	// The id of region.
	Id string `pulumi:"id"`
	// The name of region.
	Name string `pulumi:"name"`
}

// AvailableResourcesRegionClusterInput is an input type that accepts AvailableResourcesRegionClusterArgs and AvailableResourcesRegionClusterOutput values.
// You can construct a concrete instance of `AvailableResourcesRegionClusterInput` via:
//
//	AvailableResourcesRegionClusterArgs{...}
type AvailableResourcesRegionClusterInput interface {
	pulumi.Input

	ToAvailableResourcesRegionClusterOutput() AvailableResourcesRegionClusterOutput
	ToAvailableResourcesRegionClusterOutputWithContext(context.Context) AvailableResourcesRegionClusterOutput
}

type AvailableResourcesRegionClusterArgs struct {
	// The english name of region.
	EnName pulumi.StringInput `pulumi:"enName"`
	// The id of region.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of region.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AvailableResourcesRegionClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionCluster)(nil)).Elem()
}

func (i AvailableResourcesRegionClusterArgs) ToAvailableResourcesRegionClusterOutput() AvailableResourcesRegionClusterOutput {
	return i.ToAvailableResourcesRegionClusterOutputWithContext(context.Background())
}

func (i AvailableResourcesRegionClusterArgs) ToAvailableResourcesRegionClusterOutputWithContext(ctx context.Context) AvailableResourcesRegionClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailableResourcesRegionClusterOutput)
}

type AvailableResourcesRegionClusterOutput struct{ *pulumi.OutputState }

func (AvailableResourcesRegionClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionCluster)(nil)).Elem()
}

func (o AvailableResourcesRegionClusterOutput) ToAvailableResourcesRegionClusterOutput() AvailableResourcesRegionClusterOutput {
	return o
}

func (o AvailableResourcesRegionClusterOutput) ToAvailableResourcesRegionClusterOutputWithContext(ctx context.Context) AvailableResourcesRegionClusterOutput {
	return o
}

// The english name of region.
func (o AvailableResourcesRegionClusterOutput) EnName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCluster) string { return v.EnName }).(pulumi.StringOutput)
}

// The id of region.
func (o AvailableResourcesRegionClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The name of region.
func (o AvailableResourcesRegionClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCluster) string { return v.Name }).(pulumi.StringOutput)
}

type AvailableResourcesRegionCountry struct {
	// The english name of region.
	EnName string `pulumi:"enName"`
	// The id of region.
	Id string `pulumi:"id"`
	// The name of region.
	Name string `pulumi:"name"`
}

// AvailableResourcesRegionCountryInput is an input type that accepts AvailableResourcesRegionCountryArgs and AvailableResourcesRegionCountryOutput values.
// You can construct a concrete instance of `AvailableResourcesRegionCountryInput` via:
//
//	AvailableResourcesRegionCountryArgs{...}
type AvailableResourcesRegionCountryInput interface {
	pulumi.Input

	ToAvailableResourcesRegionCountryOutput() AvailableResourcesRegionCountryOutput
	ToAvailableResourcesRegionCountryOutputWithContext(context.Context) AvailableResourcesRegionCountryOutput
}

type AvailableResourcesRegionCountryArgs struct {
	// The english name of region.
	EnName pulumi.StringInput `pulumi:"enName"`
	// The id of region.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of region.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AvailableResourcesRegionCountryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionCountry)(nil)).Elem()
}

func (i AvailableResourcesRegionCountryArgs) ToAvailableResourcesRegionCountryOutput() AvailableResourcesRegionCountryOutput {
	return i.ToAvailableResourcesRegionCountryOutputWithContext(context.Background())
}

func (i AvailableResourcesRegionCountryArgs) ToAvailableResourcesRegionCountryOutputWithContext(ctx context.Context) AvailableResourcesRegionCountryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailableResourcesRegionCountryOutput)
}

type AvailableResourcesRegionCountryOutput struct{ *pulumi.OutputState }

func (AvailableResourcesRegionCountryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionCountry)(nil)).Elem()
}

func (o AvailableResourcesRegionCountryOutput) ToAvailableResourcesRegionCountryOutput() AvailableResourcesRegionCountryOutput {
	return o
}

func (o AvailableResourcesRegionCountryOutput) ToAvailableResourcesRegionCountryOutputWithContext(ctx context.Context) AvailableResourcesRegionCountryOutput {
	return o
}

// The english name of region.
func (o AvailableResourcesRegionCountryOutput) EnName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCountry) string { return v.EnName }).(pulumi.StringOutput)
}

// The id of region.
func (o AvailableResourcesRegionCountryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCountry) string { return v.Id }).(pulumi.StringOutput)
}

// The name of region.
func (o AvailableResourcesRegionCountryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionCountry) string { return v.Name }).(pulumi.StringOutput)
}

type AvailableResourcesRegionIsp struct {
	// The english name of region.
	EnName string `pulumi:"enName"`
	// The id of region.
	Id string `pulumi:"id"`
	// The name of region.
	Name string `pulumi:"name"`
}

// AvailableResourcesRegionIspInput is an input type that accepts AvailableResourcesRegionIspArgs and AvailableResourcesRegionIspOutput values.
// You can construct a concrete instance of `AvailableResourcesRegionIspInput` via:
//
//	AvailableResourcesRegionIspArgs{...}
type AvailableResourcesRegionIspInput interface {
	pulumi.Input

	ToAvailableResourcesRegionIspOutput() AvailableResourcesRegionIspOutput
	ToAvailableResourcesRegionIspOutputWithContext(context.Context) AvailableResourcesRegionIspOutput
}

type AvailableResourcesRegionIspArgs struct {
	// The english name of region.
	EnName pulumi.StringInput `pulumi:"enName"`
	// The id of region.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of region.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AvailableResourcesRegionIspArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionIsp)(nil)).Elem()
}

func (i AvailableResourcesRegionIspArgs) ToAvailableResourcesRegionIspOutput() AvailableResourcesRegionIspOutput {
	return i.ToAvailableResourcesRegionIspOutputWithContext(context.Background())
}

func (i AvailableResourcesRegionIspArgs) ToAvailableResourcesRegionIspOutputWithContext(ctx context.Context) AvailableResourcesRegionIspOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailableResourcesRegionIspOutput)
}

type AvailableResourcesRegionIspOutput struct{ *pulumi.OutputState }

func (AvailableResourcesRegionIspOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailableResourcesRegionIsp)(nil)).Elem()
}

func (o AvailableResourcesRegionIspOutput) ToAvailableResourcesRegionIspOutput() AvailableResourcesRegionIspOutput {
	return o
}

func (o AvailableResourcesRegionIspOutput) ToAvailableResourcesRegionIspOutputWithContext(ctx context.Context) AvailableResourcesRegionIspOutput {
	return o
}

// The english name of region.
func (o AvailableResourcesRegionIspOutput) EnName() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionIsp) string { return v.EnName }).(pulumi.StringOutput)
}

// The id of region.
func (o AvailableResourcesRegionIspOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionIsp) string { return v.Id }).(pulumi.StringOutput)
}

// The name of region.
func (o AvailableResourcesRegionIspOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AvailableResourcesRegionIsp) string { return v.Name }).(pulumi.StringOutput)
}

type CloudServerBillingConfig struct {
	// The method of bandwidth billing. The value can be `MonthlyP95` or `DailyPeak`.
	BandwidthBillingMethod string `pulumi:"bandwidthBillingMethod"`
	// The method of computing billing. The value can be `MonthlyPeak` or `DailyPeak`.
	ComputingBillingMethod string `pulumi:"computingBillingMethod"`
}

// CloudServerBillingConfigInput is an input type that accepts CloudServerBillingConfigArgs and CloudServerBillingConfigOutput values.
// You can construct a concrete instance of `CloudServerBillingConfigInput` via:
//
//	CloudServerBillingConfigArgs{...}
type CloudServerBillingConfigInput interface {
	pulumi.Input

	ToCloudServerBillingConfigOutput() CloudServerBillingConfigOutput
	ToCloudServerBillingConfigOutputWithContext(context.Context) CloudServerBillingConfigOutput
}

type CloudServerBillingConfigArgs struct {
	// The method of bandwidth billing. The value can be `MonthlyP95` or `DailyPeak`.
	BandwidthBillingMethod pulumi.StringInput `pulumi:"bandwidthBillingMethod"`
	// The method of computing billing. The value can be `MonthlyPeak` or `DailyPeak`.
	ComputingBillingMethod pulumi.StringInput `pulumi:"computingBillingMethod"`
}

func (CloudServerBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerBillingConfig)(nil)).Elem()
}

func (i CloudServerBillingConfigArgs) ToCloudServerBillingConfigOutput() CloudServerBillingConfigOutput {
	return i.ToCloudServerBillingConfigOutputWithContext(context.Background())
}

func (i CloudServerBillingConfigArgs) ToCloudServerBillingConfigOutputWithContext(ctx context.Context) CloudServerBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerBillingConfigOutput)
}

func (i CloudServerBillingConfigArgs) ToCloudServerBillingConfigPtrOutput() CloudServerBillingConfigPtrOutput {
	return i.ToCloudServerBillingConfigPtrOutputWithContext(context.Background())
}

func (i CloudServerBillingConfigArgs) ToCloudServerBillingConfigPtrOutputWithContext(ctx context.Context) CloudServerBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerBillingConfigOutput).ToCloudServerBillingConfigPtrOutputWithContext(ctx)
}

// CloudServerBillingConfigPtrInput is an input type that accepts CloudServerBillingConfigArgs, CloudServerBillingConfigPtr and CloudServerBillingConfigPtrOutput values.
// You can construct a concrete instance of `CloudServerBillingConfigPtrInput` via:
//
//	        CloudServerBillingConfigArgs{...}
//
//	or:
//
//	        nil
type CloudServerBillingConfigPtrInput interface {
	pulumi.Input

	ToCloudServerBillingConfigPtrOutput() CloudServerBillingConfigPtrOutput
	ToCloudServerBillingConfigPtrOutputWithContext(context.Context) CloudServerBillingConfigPtrOutput
}

type cloudServerBillingConfigPtrType CloudServerBillingConfigArgs

func CloudServerBillingConfigPtr(v *CloudServerBillingConfigArgs) CloudServerBillingConfigPtrInput {
	return (*cloudServerBillingConfigPtrType)(v)
}

func (*cloudServerBillingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerBillingConfig)(nil)).Elem()
}

func (i *cloudServerBillingConfigPtrType) ToCloudServerBillingConfigPtrOutput() CloudServerBillingConfigPtrOutput {
	return i.ToCloudServerBillingConfigPtrOutputWithContext(context.Background())
}

func (i *cloudServerBillingConfigPtrType) ToCloudServerBillingConfigPtrOutputWithContext(ctx context.Context) CloudServerBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerBillingConfigPtrOutput)
}

type CloudServerBillingConfigOutput struct{ *pulumi.OutputState }

func (CloudServerBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerBillingConfig)(nil)).Elem()
}

func (o CloudServerBillingConfigOutput) ToCloudServerBillingConfigOutput() CloudServerBillingConfigOutput {
	return o
}

func (o CloudServerBillingConfigOutput) ToCloudServerBillingConfigOutputWithContext(ctx context.Context) CloudServerBillingConfigOutput {
	return o
}

func (o CloudServerBillingConfigOutput) ToCloudServerBillingConfigPtrOutput() CloudServerBillingConfigPtrOutput {
	return o.ToCloudServerBillingConfigPtrOutputWithContext(context.Background())
}

func (o CloudServerBillingConfigOutput) ToCloudServerBillingConfigPtrOutputWithContext(ctx context.Context) CloudServerBillingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServerBillingConfig) *CloudServerBillingConfig {
		return &v
	}).(CloudServerBillingConfigPtrOutput)
}

// The method of bandwidth billing. The value can be `MonthlyP95` or `DailyPeak`.
func (o CloudServerBillingConfigOutput) BandwidthBillingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerBillingConfig) string { return v.BandwidthBillingMethod }).(pulumi.StringOutput)
}

// The method of computing billing. The value can be `MonthlyPeak` or `DailyPeak`.
func (o CloudServerBillingConfigOutput) ComputingBillingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerBillingConfig) string { return v.ComputingBillingMethod }).(pulumi.StringOutput)
}

type CloudServerBillingConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudServerBillingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerBillingConfig)(nil)).Elem()
}

func (o CloudServerBillingConfigPtrOutput) ToCloudServerBillingConfigPtrOutput() CloudServerBillingConfigPtrOutput {
	return o
}

func (o CloudServerBillingConfigPtrOutput) ToCloudServerBillingConfigPtrOutputWithContext(ctx context.Context) CloudServerBillingConfigPtrOutput {
	return o
}

func (o CloudServerBillingConfigPtrOutput) Elem() CloudServerBillingConfigOutput {
	return o.ApplyT(func(v *CloudServerBillingConfig) CloudServerBillingConfig {
		if v != nil {
			return *v
		}
		var ret CloudServerBillingConfig
		return ret
	}).(CloudServerBillingConfigOutput)
}

// The method of bandwidth billing. The value can be `MonthlyP95` or `DailyPeak`.
func (o CloudServerBillingConfigPtrOutput) BandwidthBillingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.BandwidthBillingMethod
	}).(pulumi.StringPtrOutput)
}

// The method of computing billing. The value can be `MonthlyPeak` or `DailyPeak`.
func (o CloudServerBillingConfigPtrOutput) ComputingBillingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ComputingBillingMethod
	}).(pulumi.StringPtrOutput)
}

type CloudServerCustomData struct {
	// The custom data info.
	Data string `pulumi:"data"`
}

// CloudServerCustomDataInput is an input type that accepts CloudServerCustomDataArgs and CloudServerCustomDataOutput values.
// You can construct a concrete instance of `CloudServerCustomDataInput` via:
//
//	CloudServerCustomDataArgs{...}
type CloudServerCustomDataInput interface {
	pulumi.Input

	ToCloudServerCustomDataOutput() CloudServerCustomDataOutput
	ToCloudServerCustomDataOutputWithContext(context.Context) CloudServerCustomDataOutput
}

type CloudServerCustomDataArgs struct {
	// The custom data info.
	Data pulumi.StringInput `pulumi:"data"`
}

func (CloudServerCustomDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerCustomData)(nil)).Elem()
}

func (i CloudServerCustomDataArgs) ToCloudServerCustomDataOutput() CloudServerCustomDataOutput {
	return i.ToCloudServerCustomDataOutputWithContext(context.Background())
}

func (i CloudServerCustomDataArgs) ToCloudServerCustomDataOutputWithContext(ctx context.Context) CloudServerCustomDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerCustomDataOutput)
}

func (i CloudServerCustomDataArgs) ToCloudServerCustomDataPtrOutput() CloudServerCustomDataPtrOutput {
	return i.ToCloudServerCustomDataPtrOutputWithContext(context.Background())
}

func (i CloudServerCustomDataArgs) ToCloudServerCustomDataPtrOutputWithContext(ctx context.Context) CloudServerCustomDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerCustomDataOutput).ToCloudServerCustomDataPtrOutputWithContext(ctx)
}

// CloudServerCustomDataPtrInput is an input type that accepts CloudServerCustomDataArgs, CloudServerCustomDataPtr and CloudServerCustomDataPtrOutput values.
// You can construct a concrete instance of `CloudServerCustomDataPtrInput` via:
//
//	        CloudServerCustomDataArgs{...}
//
//	or:
//
//	        nil
type CloudServerCustomDataPtrInput interface {
	pulumi.Input

	ToCloudServerCustomDataPtrOutput() CloudServerCustomDataPtrOutput
	ToCloudServerCustomDataPtrOutputWithContext(context.Context) CloudServerCustomDataPtrOutput
}

type cloudServerCustomDataPtrType CloudServerCustomDataArgs

func CloudServerCustomDataPtr(v *CloudServerCustomDataArgs) CloudServerCustomDataPtrInput {
	return (*cloudServerCustomDataPtrType)(v)
}

func (*cloudServerCustomDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerCustomData)(nil)).Elem()
}

func (i *cloudServerCustomDataPtrType) ToCloudServerCustomDataPtrOutput() CloudServerCustomDataPtrOutput {
	return i.ToCloudServerCustomDataPtrOutputWithContext(context.Background())
}

func (i *cloudServerCustomDataPtrType) ToCloudServerCustomDataPtrOutputWithContext(ctx context.Context) CloudServerCustomDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerCustomDataPtrOutput)
}

type CloudServerCustomDataOutput struct{ *pulumi.OutputState }

func (CloudServerCustomDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerCustomData)(nil)).Elem()
}

func (o CloudServerCustomDataOutput) ToCloudServerCustomDataOutput() CloudServerCustomDataOutput {
	return o
}

func (o CloudServerCustomDataOutput) ToCloudServerCustomDataOutputWithContext(ctx context.Context) CloudServerCustomDataOutput {
	return o
}

func (o CloudServerCustomDataOutput) ToCloudServerCustomDataPtrOutput() CloudServerCustomDataPtrOutput {
	return o.ToCloudServerCustomDataPtrOutputWithContext(context.Background())
}

func (o CloudServerCustomDataOutput) ToCloudServerCustomDataPtrOutputWithContext(ctx context.Context) CloudServerCustomDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServerCustomData) *CloudServerCustomData {
		return &v
	}).(CloudServerCustomDataPtrOutput)
}

// The custom data info.
func (o CloudServerCustomDataOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerCustomData) string { return v.Data }).(pulumi.StringOutput)
}

type CloudServerCustomDataPtrOutput struct{ *pulumi.OutputState }

func (CloudServerCustomDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerCustomData)(nil)).Elem()
}

func (o CloudServerCustomDataPtrOutput) ToCloudServerCustomDataPtrOutput() CloudServerCustomDataPtrOutput {
	return o
}

func (o CloudServerCustomDataPtrOutput) ToCloudServerCustomDataPtrOutputWithContext(ctx context.Context) CloudServerCustomDataPtrOutput {
	return o
}

func (o CloudServerCustomDataPtrOutput) Elem() CloudServerCustomDataOutput {
	return o.ApplyT(func(v *CloudServerCustomData) CloudServerCustomData {
		if v != nil {
			return *v
		}
		var ret CloudServerCustomData
		return ret
	}).(CloudServerCustomDataOutput)
}

// The custom data info.
func (o CloudServerCustomDataPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerCustomData) *string {
		if v == nil {
			return nil
		}
		return &v.Data
	}).(pulumi.StringPtrOutput)
}

type CloudServerNetworkConfig struct {
	// The peak of bandwidth.
	BandwidthPeak string `pulumi:"bandwidthPeak"`
	// The name of custom external interface.
	CustomExternalInterfaceName *string `pulumi:"customExternalInterfaceName"`
	// The name of custom internal interface.
	CustomInternalInterfaceName *string `pulumi:"customInternalInterfaceName"`
	// Whether enable ipv6.
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// The internal peak of bandwidth.
	InternalBandwidthPeak *string `pulumi:"internalBandwidthPeak"`
}

// CloudServerNetworkConfigInput is an input type that accepts CloudServerNetworkConfigArgs and CloudServerNetworkConfigOutput values.
// You can construct a concrete instance of `CloudServerNetworkConfigInput` via:
//
//	CloudServerNetworkConfigArgs{...}
type CloudServerNetworkConfigInput interface {
	pulumi.Input

	ToCloudServerNetworkConfigOutput() CloudServerNetworkConfigOutput
	ToCloudServerNetworkConfigOutputWithContext(context.Context) CloudServerNetworkConfigOutput
}

type CloudServerNetworkConfigArgs struct {
	// The peak of bandwidth.
	BandwidthPeak pulumi.StringInput `pulumi:"bandwidthPeak"`
	// The name of custom external interface.
	CustomExternalInterfaceName pulumi.StringPtrInput `pulumi:"customExternalInterfaceName"`
	// The name of custom internal interface.
	CustomInternalInterfaceName pulumi.StringPtrInput `pulumi:"customInternalInterfaceName"`
	// Whether enable ipv6.
	EnableIpv6 pulumi.BoolPtrInput `pulumi:"enableIpv6"`
	// The internal peak of bandwidth.
	InternalBandwidthPeak pulumi.StringPtrInput `pulumi:"internalBandwidthPeak"`
}

func (CloudServerNetworkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerNetworkConfig)(nil)).Elem()
}

func (i CloudServerNetworkConfigArgs) ToCloudServerNetworkConfigOutput() CloudServerNetworkConfigOutput {
	return i.ToCloudServerNetworkConfigOutputWithContext(context.Background())
}

func (i CloudServerNetworkConfigArgs) ToCloudServerNetworkConfigOutputWithContext(ctx context.Context) CloudServerNetworkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerNetworkConfigOutput)
}

func (i CloudServerNetworkConfigArgs) ToCloudServerNetworkConfigPtrOutput() CloudServerNetworkConfigPtrOutput {
	return i.ToCloudServerNetworkConfigPtrOutputWithContext(context.Background())
}

func (i CloudServerNetworkConfigArgs) ToCloudServerNetworkConfigPtrOutputWithContext(ctx context.Context) CloudServerNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerNetworkConfigOutput).ToCloudServerNetworkConfigPtrOutputWithContext(ctx)
}

// CloudServerNetworkConfigPtrInput is an input type that accepts CloudServerNetworkConfigArgs, CloudServerNetworkConfigPtr and CloudServerNetworkConfigPtrOutput values.
// You can construct a concrete instance of `CloudServerNetworkConfigPtrInput` via:
//
//	        CloudServerNetworkConfigArgs{...}
//
//	or:
//
//	        nil
type CloudServerNetworkConfigPtrInput interface {
	pulumi.Input

	ToCloudServerNetworkConfigPtrOutput() CloudServerNetworkConfigPtrOutput
	ToCloudServerNetworkConfigPtrOutputWithContext(context.Context) CloudServerNetworkConfigPtrOutput
}

type cloudServerNetworkConfigPtrType CloudServerNetworkConfigArgs

func CloudServerNetworkConfigPtr(v *CloudServerNetworkConfigArgs) CloudServerNetworkConfigPtrInput {
	return (*cloudServerNetworkConfigPtrType)(v)
}

func (*cloudServerNetworkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerNetworkConfig)(nil)).Elem()
}

func (i *cloudServerNetworkConfigPtrType) ToCloudServerNetworkConfigPtrOutput() CloudServerNetworkConfigPtrOutput {
	return i.ToCloudServerNetworkConfigPtrOutputWithContext(context.Background())
}

func (i *cloudServerNetworkConfigPtrType) ToCloudServerNetworkConfigPtrOutputWithContext(ctx context.Context) CloudServerNetworkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerNetworkConfigPtrOutput)
}

type CloudServerNetworkConfigOutput struct{ *pulumi.OutputState }

func (CloudServerNetworkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerNetworkConfig)(nil)).Elem()
}

func (o CloudServerNetworkConfigOutput) ToCloudServerNetworkConfigOutput() CloudServerNetworkConfigOutput {
	return o
}

func (o CloudServerNetworkConfigOutput) ToCloudServerNetworkConfigOutputWithContext(ctx context.Context) CloudServerNetworkConfigOutput {
	return o
}

func (o CloudServerNetworkConfigOutput) ToCloudServerNetworkConfigPtrOutput() CloudServerNetworkConfigPtrOutput {
	return o.ToCloudServerNetworkConfigPtrOutputWithContext(context.Background())
}

func (o CloudServerNetworkConfigOutput) ToCloudServerNetworkConfigPtrOutputWithContext(ctx context.Context) CloudServerNetworkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServerNetworkConfig) *CloudServerNetworkConfig {
		return &v
	}).(CloudServerNetworkConfigPtrOutput)
}

// The peak of bandwidth.
func (o CloudServerNetworkConfigOutput) BandwidthPeak() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerNetworkConfig) string { return v.BandwidthPeak }).(pulumi.StringOutput)
}

// The name of custom external interface.
func (o CloudServerNetworkConfigOutput) CustomExternalInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServerNetworkConfig) *string { return v.CustomExternalInterfaceName }).(pulumi.StringPtrOutput)
}

// The name of custom internal interface.
func (o CloudServerNetworkConfigOutput) CustomInternalInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServerNetworkConfig) *string { return v.CustomInternalInterfaceName }).(pulumi.StringPtrOutput)
}

// Whether enable ipv6.
func (o CloudServerNetworkConfigOutput) EnableIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudServerNetworkConfig) *bool { return v.EnableIpv6 }).(pulumi.BoolPtrOutput)
}

// The internal peak of bandwidth.
func (o CloudServerNetworkConfigOutput) InternalBandwidthPeak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudServerNetworkConfig) *string { return v.InternalBandwidthPeak }).(pulumi.StringPtrOutput)
}

type CloudServerNetworkConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudServerNetworkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerNetworkConfig)(nil)).Elem()
}

func (o CloudServerNetworkConfigPtrOutput) ToCloudServerNetworkConfigPtrOutput() CloudServerNetworkConfigPtrOutput {
	return o
}

func (o CloudServerNetworkConfigPtrOutput) ToCloudServerNetworkConfigPtrOutputWithContext(ctx context.Context) CloudServerNetworkConfigPtrOutput {
	return o
}

func (o CloudServerNetworkConfigPtrOutput) Elem() CloudServerNetworkConfigOutput {
	return o.ApplyT(func(v *CloudServerNetworkConfig) CloudServerNetworkConfig {
		if v != nil {
			return *v
		}
		var ret CloudServerNetworkConfig
		return ret
	}).(CloudServerNetworkConfigOutput)
}

// The peak of bandwidth.
func (o CloudServerNetworkConfigPtrOutput) BandwidthPeak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return &v.BandwidthPeak
	}).(pulumi.StringPtrOutput)
}

// The name of custom external interface.
func (o CloudServerNetworkConfigPtrOutput) CustomExternalInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomExternalInterfaceName
	}).(pulumi.StringPtrOutput)
}

// The name of custom internal interface.
func (o CloudServerNetworkConfigPtrOutput) CustomInternalInterfaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomInternalInterfaceName
	}).(pulumi.StringPtrOutput)
}

// Whether enable ipv6.
func (o CloudServerNetworkConfigPtrOutput) EnableIpv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudServerNetworkConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIpv6
	}).(pulumi.BoolPtrOutput)
}

// The internal peak of bandwidth.
func (o CloudServerNetworkConfigPtrOutput) InternalBandwidthPeak() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerNetworkConfig) *string {
		if v == nil {
			return nil
		}
		return v.InternalBandwidthPeak
	}).(pulumi.StringPtrOutput)
}

type CloudServerScheduleStrategy struct {
	// The network strategy.
	NetworkStrategy string `pulumi:"networkStrategy"`
	// The price strategy. The value can be `highPriority` or `lowPriority`.
	PriceStrategy string `pulumi:"priceStrategy"`
	// The type of schedule strategy. The value can be `dispersion` or `concentration`.
	ScheduleStrategy string `pulumi:"scheduleStrategy"`
}

// CloudServerScheduleStrategyInput is an input type that accepts CloudServerScheduleStrategyArgs and CloudServerScheduleStrategyOutput values.
// You can construct a concrete instance of `CloudServerScheduleStrategyInput` via:
//
//	CloudServerScheduleStrategyArgs{...}
type CloudServerScheduleStrategyInput interface {
	pulumi.Input

	ToCloudServerScheduleStrategyOutput() CloudServerScheduleStrategyOutput
	ToCloudServerScheduleStrategyOutputWithContext(context.Context) CloudServerScheduleStrategyOutput
}

type CloudServerScheduleStrategyArgs struct {
	// The network strategy.
	NetworkStrategy pulumi.StringInput `pulumi:"networkStrategy"`
	// The price strategy. The value can be `highPriority` or `lowPriority`.
	PriceStrategy pulumi.StringInput `pulumi:"priceStrategy"`
	// The type of schedule strategy. The value can be `dispersion` or `concentration`.
	ScheduleStrategy pulumi.StringInput `pulumi:"scheduleStrategy"`
}

func (CloudServerScheduleStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerScheduleStrategy)(nil)).Elem()
}

func (i CloudServerScheduleStrategyArgs) ToCloudServerScheduleStrategyOutput() CloudServerScheduleStrategyOutput {
	return i.ToCloudServerScheduleStrategyOutputWithContext(context.Background())
}

func (i CloudServerScheduleStrategyArgs) ToCloudServerScheduleStrategyOutputWithContext(ctx context.Context) CloudServerScheduleStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerScheduleStrategyOutput)
}

func (i CloudServerScheduleStrategyArgs) ToCloudServerScheduleStrategyPtrOutput() CloudServerScheduleStrategyPtrOutput {
	return i.ToCloudServerScheduleStrategyPtrOutputWithContext(context.Background())
}

func (i CloudServerScheduleStrategyArgs) ToCloudServerScheduleStrategyPtrOutputWithContext(ctx context.Context) CloudServerScheduleStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerScheduleStrategyOutput).ToCloudServerScheduleStrategyPtrOutputWithContext(ctx)
}

// CloudServerScheduleStrategyPtrInput is an input type that accepts CloudServerScheduleStrategyArgs, CloudServerScheduleStrategyPtr and CloudServerScheduleStrategyPtrOutput values.
// You can construct a concrete instance of `CloudServerScheduleStrategyPtrInput` via:
//
//	        CloudServerScheduleStrategyArgs{...}
//
//	or:
//
//	        nil
type CloudServerScheduleStrategyPtrInput interface {
	pulumi.Input

	ToCloudServerScheduleStrategyPtrOutput() CloudServerScheduleStrategyPtrOutput
	ToCloudServerScheduleStrategyPtrOutputWithContext(context.Context) CloudServerScheduleStrategyPtrOutput
}

type cloudServerScheduleStrategyPtrType CloudServerScheduleStrategyArgs

func CloudServerScheduleStrategyPtr(v *CloudServerScheduleStrategyArgs) CloudServerScheduleStrategyPtrInput {
	return (*cloudServerScheduleStrategyPtrType)(v)
}

func (*cloudServerScheduleStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerScheduleStrategy)(nil)).Elem()
}

func (i *cloudServerScheduleStrategyPtrType) ToCloudServerScheduleStrategyPtrOutput() CloudServerScheduleStrategyPtrOutput {
	return i.ToCloudServerScheduleStrategyPtrOutputWithContext(context.Background())
}

func (i *cloudServerScheduleStrategyPtrType) ToCloudServerScheduleStrategyPtrOutputWithContext(ctx context.Context) CloudServerScheduleStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerScheduleStrategyPtrOutput)
}

type CloudServerScheduleStrategyOutput struct{ *pulumi.OutputState }

func (CloudServerScheduleStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerScheduleStrategy)(nil)).Elem()
}

func (o CloudServerScheduleStrategyOutput) ToCloudServerScheduleStrategyOutput() CloudServerScheduleStrategyOutput {
	return o
}

func (o CloudServerScheduleStrategyOutput) ToCloudServerScheduleStrategyOutputWithContext(ctx context.Context) CloudServerScheduleStrategyOutput {
	return o
}

func (o CloudServerScheduleStrategyOutput) ToCloudServerScheduleStrategyPtrOutput() CloudServerScheduleStrategyPtrOutput {
	return o.ToCloudServerScheduleStrategyPtrOutputWithContext(context.Background())
}

func (o CloudServerScheduleStrategyOutput) ToCloudServerScheduleStrategyPtrOutputWithContext(ctx context.Context) CloudServerScheduleStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServerScheduleStrategy) *CloudServerScheduleStrategy {
		return &v
	}).(CloudServerScheduleStrategyPtrOutput)
}

// The network strategy.
func (o CloudServerScheduleStrategyOutput) NetworkStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerScheduleStrategy) string { return v.NetworkStrategy }).(pulumi.StringOutput)
}

// The price strategy. The value can be `highPriority` or `lowPriority`.
func (o CloudServerScheduleStrategyOutput) PriceStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerScheduleStrategy) string { return v.PriceStrategy }).(pulumi.StringOutput)
}

// The type of schedule strategy. The value can be `dispersion` or `concentration`.
func (o CloudServerScheduleStrategyOutput) ScheduleStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerScheduleStrategy) string { return v.ScheduleStrategy }).(pulumi.StringOutput)
}

type CloudServerScheduleStrategyPtrOutput struct{ *pulumi.OutputState }

func (CloudServerScheduleStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerScheduleStrategy)(nil)).Elem()
}

func (o CloudServerScheduleStrategyPtrOutput) ToCloudServerScheduleStrategyPtrOutput() CloudServerScheduleStrategyPtrOutput {
	return o
}

func (o CloudServerScheduleStrategyPtrOutput) ToCloudServerScheduleStrategyPtrOutputWithContext(ctx context.Context) CloudServerScheduleStrategyPtrOutput {
	return o
}

func (o CloudServerScheduleStrategyPtrOutput) Elem() CloudServerScheduleStrategyOutput {
	return o.ApplyT(func(v *CloudServerScheduleStrategy) CloudServerScheduleStrategy {
		if v != nil {
			return *v
		}
		var ret CloudServerScheduleStrategy
		return ret
	}).(CloudServerScheduleStrategyOutput)
}

// The network strategy.
func (o CloudServerScheduleStrategyPtrOutput) NetworkStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerScheduleStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.NetworkStrategy
	}).(pulumi.StringPtrOutput)
}

// The price strategy. The value can be `highPriority` or `lowPriority`.
func (o CloudServerScheduleStrategyPtrOutput) PriceStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerScheduleStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.PriceStrategy
	}).(pulumi.StringPtrOutput)
}

// The type of schedule strategy. The value can be `dispersion` or `concentration`.
func (o CloudServerScheduleStrategyPtrOutput) ScheduleStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerScheduleStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleStrategy
	}).(pulumi.StringPtrOutput)
}

type CloudServerStorageConfig struct {
	// The disk list info of data.
	DataDiskLists []CloudServerStorageConfigDataDiskList `pulumi:"dataDiskLists"`
	// The disk info of system.
	SystemDisk CloudServerStorageConfigSystemDisk `pulumi:"systemDisk"`
}

// CloudServerStorageConfigInput is an input type that accepts CloudServerStorageConfigArgs and CloudServerStorageConfigOutput values.
// You can construct a concrete instance of `CloudServerStorageConfigInput` via:
//
//	CloudServerStorageConfigArgs{...}
type CloudServerStorageConfigInput interface {
	pulumi.Input

	ToCloudServerStorageConfigOutput() CloudServerStorageConfigOutput
	ToCloudServerStorageConfigOutputWithContext(context.Context) CloudServerStorageConfigOutput
}

type CloudServerStorageConfigArgs struct {
	// The disk list info of data.
	DataDiskLists CloudServerStorageConfigDataDiskListArrayInput `pulumi:"dataDiskLists"`
	// The disk info of system.
	SystemDisk CloudServerStorageConfigSystemDiskInput `pulumi:"systemDisk"`
}

func (CloudServerStorageConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerStorageConfig)(nil)).Elem()
}

func (i CloudServerStorageConfigArgs) ToCloudServerStorageConfigOutput() CloudServerStorageConfigOutput {
	return i.ToCloudServerStorageConfigOutputWithContext(context.Background())
}

func (i CloudServerStorageConfigArgs) ToCloudServerStorageConfigOutputWithContext(ctx context.Context) CloudServerStorageConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerStorageConfigOutput)
}

func (i CloudServerStorageConfigArgs) ToCloudServerStorageConfigPtrOutput() CloudServerStorageConfigPtrOutput {
	return i.ToCloudServerStorageConfigPtrOutputWithContext(context.Background())
}

func (i CloudServerStorageConfigArgs) ToCloudServerStorageConfigPtrOutputWithContext(ctx context.Context) CloudServerStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerStorageConfigOutput).ToCloudServerStorageConfigPtrOutputWithContext(ctx)
}

// CloudServerStorageConfigPtrInput is an input type that accepts CloudServerStorageConfigArgs, CloudServerStorageConfigPtr and CloudServerStorageConfigPtrOutput values.
// You can construct a concrete instance of `CloudServerStorageConfigPtrInput` via:
//
//	        CloudServerStorageConfigArgs{...}
//
//	or:
//
//	        nil
type CloudServerStorageConfigPtrInput interface {
	pulumi.Input

	ToCloudServerStorageConfigPtrOutput() CloudServerStorageConfigPtrOutput
	ToCloudServerStorageConfigPtrOutputWithContext(context.Context) CloudServerStorageConfigPtrOutput
}

type cloudServerStorageConfigPtrType CloudServerStorageConfigArgs

func CloudServerStorageConfigPtr(v *CloudServerStorageConfigArgs) CloudServerStorageConfigPtrInput {
	return (*cloudServerStorageConfigPtrType)(v)
}

func (*cloudServerStorageConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerStorageConfig)(nil)).Elem()
}

func (i *cloudServerStorageConfigPtrType) ToCloudServerStorageConfigPtrOutput() CloudServerStorageConfigPtrOutput {
	return i.ToCloudServerStorageConfigPtrOutputWithContext(context.Background())
}

func (i *cloudServerStorageConfigPtrType) ToCloudServerStorageConfigPtrOutputWithContext(ctx context.Context) CloudServerStorageConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerStorageConfigPtrOutput)
}

type CloudServerStorageConfigOutput struct{ *pulumi.OutputState }

func (CloudServerStorageConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerStorageConfig)(nil)).Elem()
}

func (o CloudServerStorageConfigOutput) ToCloudServerStorageConfigOutput() CloudServerStorageConfigOutput {
	return o
}

func (o CloudServerStorageConfigOutput) ToCloudServerStorageConfigOutputWithContext(ctx context.Context) CloudServerStorageConfigOutput {
	return o
}

func (o CloudServerStorageConfigOutput) ToCloudServerStorageConfigPtrOutput() CloudServerStorageConfigPtrOutput {
	return o.ToCloudServerStorageConfigPtrOutputWithContext(context.Background())
}

func (o CloudServerStorageConfigOutput) ToCloudServerStorageConfigPtrOutputWithContext(ctx context.Context) CloudServerStorageConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServerStorageConfig) *CloudServerStorageConfig {
		return &v
	}).(CloudServerStorageConfigPtrOutput)
}

// The disk list info of data.
func (o CloudServerStorageConfigOutput) DataDiskLists() CloudServerStorageConfigDataDiskListArrayOutput {
	return o.ApplyT(func(v CloudServerStorageConfig) []CloudServerStorageConfigDataDiskList { return v.DataDiskLists }).(CloudServerStorageConfigDataDiskListArrayOutput)
}

// The disk info of system.
func (o CloudServerStorageConfigOutput) SystemDisk() CloudServerStorageConfigSystemDiskOutput {
	return o.ApplyT(func(v CloudServerStorageConfig) CloudServerStorageConfigSystemDisk { return v.SystemDisk }).(CloudServerStorageConfigSystemDiskOutput)
}

type CloudServerStorageConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudServerStorageConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerStorageConfig)(nil)).Elem()
}

func (o CloudServerStorageConfigPtrOutput) ToCloudServerStorageConfigPtrOutput() CloudServerStorageConfigPtrOutput {
	return o
}

func (o CloudServerStorageConfigPtrOutput) ToCloudServerStorageConfigPtrOutputWithContext(ctx context.Context) CloudServerStorageConfigPtrOutput {
	return o
}

func (o CloudServerStorageConfigPtrOutput) Elem() CloudServerStorageConfigOutput {
	return o.ApplyT(func(v *CloudServerStorageConfig) CloudServerStorageConfig {
		if v != nil {
			return *v
		}
		var ret CloudServerStorageConfig
		return ret
	}).(CloudServerStorageConfigOutput)
}

// The disk list info of data.
func (o CloudServerStorageConfigPtrOutput) DataDiskLists() CloudServerStorageConfigDataDiskListArrayOutput {
	return o.ApplyT(func(v *CloudServerStorageConfig) []CloudServerStorageConfigDataDiskList {
		if v == nil {
			return nil
		}
		return v.DataDiskLists
	}).(CloudServerStorageConfigDataDiskListArrayOutput)
}

// The disk info of system.
func (o CloudServerStorageConfigPtrOutput) SystemDisk() CloudServerStorageConfigSystemDiskPtrOutput {
	return o.ApplyT(func(v *CloudServerStorageConfig) *CloudServerStorageConfigSystemDisk {
		if v == nil {
			return nil
		}
		return &v.SystemDisk
	}).(CloudServerStorageConfigSystemDiskPtrOutput)
}

type CloudServerStorageConfigDataDiskList struct {
	// The capacity of storage.
	Capacity string `pulumi:"capacity"`
	// The type of storage. The value can be `CloudBlockHDD` or `CloudBlockSSD`.
	StorageType string `pulumi:"storageType"`
}

// CloudServerStorageConfigDataDiskListInput is an input type that accepts CloudServerStorageConfigDataDiskListArgs and CloudServerStorageConfigDataDiskListOutput values.
// You can construct a concrete instance of `CloudServerStorageConfigDataDiskListInput` via:
//
//	CloudServerStorageConfigDataDiskListArgs{...}
type CloudServerStorageConfigDataDiskListInput interface {
	pulumi.Input

	ToCloudServerStorageConfigDataDiskListOutput() CloudServerStorageConfigDataDiskListOutput
	ToCloudServerStorageConfigDataDiskListOutputWithContext(context.Context) CloudServerStorageConfigDataDiskListOutput
}

type CloudServerStorageConfigDataDiskListArgs struct {
	// The capacity of storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The type of storage. The value can be `CloudBlockHDD` or `CloudBlockSSD`.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (CloudServerStorageConfigDataDiskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerStorageConfigDataDiskList)(nil)).Elem()
}

func (i CloudServerStorageConfigDataDiskListArgs) ToCloudServerStorageConfigDataDiskListOutput() CloudServerStorageConfigDataDiskListOutput {
	return i.ToCloudServerStorageConfigDataDiskListOutputWithContext(context.Background())
}

func (i CloudServerStorageConfigDataDiskListArgs) ToCloudServerStorageConfigDataDiskListOutputWithContext(ctx context.Context) CloudServerStorageConfigDataDiskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerStorageConfigDataDiskListOutput)
}

// CloudServerStorageConfigDataDiskListArrayInput is an input type that accepts CloudServerStorageConfigDataDiskListArray and CloudServerStorageConfigDataDiskListArrayOutput values.
// You can construct a concrete instance of `CloudServerStorageConfigDataDiskListArrayInput` via:
//
//	CloudServerStorageConfigDataDiskListArray{ CloudServerStorageConfigDataDiskListArgs{...} }
type CloudServerStorageConfigDataDiskListArrayInput interface {
	pulumi.Input

	ToCloudServerStorageConfigDataDiskListArrayOutput() CloudServerStorageConfigDataDiskListArrayOutput
	ToCloudServerStorageConfigDataDiskListArrayOutputWithContext(context.Context) CloudServerStorageConfigDataDiskListArrayOutput
}

type CloudServerStorageConfigDataDiskListArray []CloudServerStorageConfigDataDiskListInput

func (CloudServerStorageConfigDataDiskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServerStorageConfigDataDiskList)(nil)).Elem()
}

func (i CloudServerStorageConfigDataDiskListArray) ToCloudServerStorageConfigDataDiskListArrayOutput() CloudServerStorageConfigDataDiskListArrayOutput {
	return i.ToCloudServerStorageConfigDataDiskListArrayOutputWithContext(context.Background())
}

func (i CloudServerStorageConfigDataDiskListArray) ToCloudServerStorageConfigDataDiskListArrayOutputWithContext(ctx context.Context) CloudServerStorageConfigDataDiskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerStorageConfigDataDiskListArrayOutput)
}

type CloudServerStorageConfigDataDiskListOutput struct{ *pulumi.OutputState }

func (CloudServerStorageConfigDataDiskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerStorageConfigDataDiskList)(nil)).Elem()
}

func (o CloudServerStorageConfigDataDiskListOutput) ToCloudServerStorageConfigDataDiskListOutput() CloudServerStorageConfigDataDiskListOutput {
	return o
}

func (o CloudServerStorageConfigDataDiskListOutput) ToCloudServerStorageConfigDataDiskListOutputWithContext(ctx context.Context) CloudServerStorageConfigDataDiskListOutput {
	return o
}

// The capacity of storage.
func (o CloudServerStorageConfigDataDiskListOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerStorageConfigDataDiskList) string { return v.Capacity }).(pulumi.StringOutput)
}

// The type of storage. The value can be `CloudBlockHDD` or `CloudBlockSSD`.
func (o CloudServerStorageConfigDataDiskListOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerStorageConfigDataDiskList) string { return v.StorageType }).(pulumi.StringOutput)
}

type CloudServerStorageConfigDataDiskListArrayOutput struct{ *pulumi.OutputState }

func (CloudServerStorageConfigDataDiskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServerStorageConfigDataDiskList)(nil)).Elem()
}

func (o CloudServerStorageConfigDataDiskListArrayOutput) ToCloudServerStorageConfigDataDiskListArrayOutput() CloudServerStorageConfigDataDiskListArrayOutput {
	return o
}

func (o CloudServerStorageConfigDataDiskListArrayOutput) ToCloudServerStorageConfigDataDiskListArrayOutputWithContext(ctx context.Context) CloudServerStorageConfigDataDiskListArrayOutput {
	return o
}

func (o CloudServerStorageConfigDataDiskListArrayOutput) Index(i pulumi.IntInput) CloudServerStorageConfigDataDiskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServerStorageConfigDataDiskList {
		return vs[0].([]CloudServerStorageConfigDataDiskList)[vs[1].(int)]
	}).(CloudServerStorageConfigDataDiskListOutput)
}

type CloudServerStorageConfigSystemDisk struct {
	// The capacity of storage.
	Capacity string `pulumi:"capacity"`
	// The type of storage. The value can be `CloudBlockHDD` or `CloudBlockSSD`.
	StorageType string `pulumi:"storageType"`
}

// CloudServerStorageConfigSystemDiskInput is an input type that accepts CloudServerStorageConfigSystemDiskArgs and CloudServerStorageConfigSystemDiskOutput values.
// You can construct a concrete instance of `CloudServerStorageConfigSystemDiskInput` via:
//
//	CloudServerStorageConfigSystemDiskArgs{...}
type CloudServerStorageConfigSystemDiskInput interface {
	pulumi.Input

	ToCloudServerStorageConfigSystemDiskOutput() CloudServerStorageConfigSystemDiskOutput
	ToCloudServerStorageConfigSystemDiskOutputWithContext(context.Context) CloudServerStorageConfigSystemDiskOutput
}

type CloudServerStorageConfigSystemDiskArgs struct {
	// The capacity of storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The type of storage. The value can be `CloudBlockHDD` or `CloudBlockSSD`.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (CloudServerStorageConfigSystemDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerStorageConfigSystemDisk)(nil)).Elem()
}

func (i CloudServerStorageConfigSystemDiskArgs) ToCloudServerStorageConfigSystemDiskOutput() CloudServerStorageConfigSystemDiskOutput {
	return i.ToCloudServerStorageConfigSystemDiskOutputWithContext(context.Background())
}

func (i CloudServerStorageConfigSystemDiskArgs) ToCloudServerStorageConfigSystemDiskOutputWithContext(ctx context.Context) CloudServerStorageConfigSystemDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerStorageConfigSystemDiskOutput)
}

func (i CloudServerStorageConfigSystemDiskArgs) ToCloudServerStorageConfigSystemDiskPtrOutput() CloudServerStorageConfigSystemDiskPtrOutput {
	return i.ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(context.Background())
}

func (i CloudServerStorageConfigSystemDiskArgs) ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(ctx context.Context) CloudServerStorageConfigSystemDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerStorageConfigSystemDiskOutput).ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(ctx)
}

// CloudServerStorageConfigSystemDiskPtrInput is an input type that accepts CloudServerStorageConfigSystemDiskArgs, CloudServerStorageConfigSystemDiskPtr and CloudServerStorageConfigSystemDiskPtrOutput values.
// You can construct a concrete instance of `CloudServerStorageConfigSystemDiskPtrInput` via:
//
//	        CloudServerStorageConfigSystemDiskArgs{...}
//
//	or:
//
//	        nil
type CloudServerStorageConfigSystemDiskPtrInput interface {
	pulumi.Input

	ToCloudServerStorageConfigSystemDiskPtrOutput() CloudServerStorageConfigSystemDiskPtrOutput
	ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(context.Context) CloudServerStorageConfigSystemDiskPtrOutput
}

type cloudServerStorageConfigSystemDiskPtrType CloudServerStorageConfigSystemDiskArgs

func CloudServerStorageConfigSystemDiskPtr(v *CloudServerStorageConfigSystemDiskArgs) CloudServerStorageConfigSystemDiskPtrInput {
	return (*cloudServerStorageConfigSystemDiskPtrType)(v)
}

func (*cloudServerStorageConfigSystemDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerStorageConfigSystemDisk)(nil)).Elem()
}

func (i *cloudServerStorageConfigSystemDiskPtrType) ToCloudServerStorageConfigSystemDiskPtrOutput() CloudServerStorageConfigSystemDiskPtrOutput {
	return i.ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(context.Background())
}

func (i *cloudServerStorageConfigSystemDiskPtrType) ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(ctx context.Context) CloudServerStorageConfigSystemDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServerStorageConfigSystemDiskPtrOutput)
}

type CloudServerStorageConfigSystemDiskOutput struct{ *pulumi.OutputState }

func (CloudServerStorageConfigSystemDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServerStorageConfigSystemDisk)(nil)).Elem()
}

func (o CloudServerStorageConfigSystemDiskOutput) ToCloudServerStorageConfigSystemDiskOutput() CloudServerStorageConfigSystemDiskOutput {
	return o
}

func (o CloudServerStorageConfigSystemDiskOutput) ToCloudServerStorageConfigSystemDiskOutputWithContext(ctx context.Context) CloudServerStorageConfigSystemDiskOutput {
	return o
}

func (o CloudServerStorageConfigSystemDiskOutput) ToCloudServerStorageConfigSystemDiskPtrOutput() CloudServerStorageConfigSystemDiskPtrOutput {
	return o.ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(context.Background())
}

func (o CloudServerStorageConfigSystemDiskOutput) ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(ctx context.Context) CloudServerStorageConfigSystemDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudServerStorageConfigSystemDisk) *CloudServerStorageConfigSystemDisk {
		return &v
	}).(CloudServerStorageConfigSystemDiskPtrOutput)
}

// The capacity of storage.
func (o CloudServerStorageConfigSystemDiskOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerStorageConfigSystemDisk) string { return v.Capacity }).(pulumi.StringOutput)
}

// The type of storage. The value can be `CloudBlockHDD` or `CloudBlockSSD`.
func (o CloudServerStorageConfigSystemDiskOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServerStorageConfigSystemDisk) string { return v.StorageType }).(pulumi.StringOutput)
}

type CloudServerStorageConfigSystemDiskPtrOutput struct{ *pulumi.OutputState }

func (CloudServerStorageConfigSystemDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudServerStorageConfigSystemDisk)(nil)).Elem()
}

func (o CloudServerStorageConfigSystemDiskPtrOutput) ToCloudServerStorageConfigSystemDiskPtrOutput() CloudServerStorageConfigSystemDiskPtrOutput {
	return o
}

func (o CloudServerStorageConfigSystemDiskPtrOutput) ToCloudServerStorageConfigSystemDiskPtrOutputWithContext(ctx context.Context) CloudServerStorageConfigSystemDiskPtrOutput {
	return o
}

func (o CloudServerStorageConfigSystemDiskPtrOutput) Elem() CloudServerStorageConfigSystemDiskOutput {
	return o.ApplyT(func(v *CloudServerStorageConfigSystemDisk) CloudServerStorageConfigSystemDisk {
		if v != nil {
			return *v
		}
		var ret CloudServerStorageConfigSystemDisk
		return ret
	}).(CloudServerStorageConfigSystemDiskOutput)
}

// The capacity of storage.
func (o CloudServerStorageConfigSystemDiskPtrOutput) Capacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerStorageConfigSystemDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.StringPtrOutput)
}

// The type of storage. The value can be `CloudBlockHDD` or `CloudBlockSSD`.
func (o CloudServerStorageConfigSystemDiskPtrOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudServerStorageConfigSystemDisk) *string {
		if v == nil {
			return nil
		}
		return &v.StorageType
	}).(pulumi.StringPtrOutput)
}

type CloudServersCloudServer struct {
	// The config of billing.
	BillingConfig CloudServersCloudServerBillingConfig `pulumi:"billingConfig"`
	// The Id of cloud server.
	CloudServerIdentity string `pulumi:"cloudServerIdentity"`
	// The cpu info of cloud server.
	Cpu string `pulumi:"cpu"`
	// The create time info.
	CreateTime int `pulumi:"createTime"`
	// The config of custom data.
	CustomData CloudServersCloudServerCustomData `pulumi:"customData"`
	// The config of gpu.
	Gpu CloudServersCloudServerGpu `pulumi:"gpu"`
	// The Id of cloud server.
	Id string `pulumi:"id"`
	// The config of image.
	Image CloudServersCloudServerImage `pulumi:"image"`
	// The count of instance.
	InstanceCount int `pulumi:"instanceCount"`
	// The status of instances.
	InstanceStatuses []CloudServersCloudServerInstanceStatus `pulumi:"instanceStatuses"`
	// The memory info of cloud server.
	Mem string `pulumi:"mem"`
	// The name of cloud server.
	Name string `pulumi:"name"`
	// The config of network.
	Network CloudServersCloudServerNetwork `pulumi:"network"`
	// The config of schedule strategy.
	ScheduleStrategyConfigs CloudServersCloudServerScheduleStrategyConfigs `pulumi:"scheduleStrategyConfigs"`
	// The config of secret.
	SecretConfig CloudServersCloudServerSecretConfig `pulumi:"secretConfig"`
	// The server area count number.
	ServerAreaCount int `pulumi:"serverAreaCount"`
	// The area level of cloud server.
	ServerAreaLevel string `pulumi:"serverAreaLevel"`
	// The server areas info.
	ServerAreas []CloudServersCloudServerServerArea `pulumi:"serverAreas"`
	// The spec info of cloud server.
	Spec string `pulumi:"spec"`
	// The Chinese spec info of cloud server.
	SpecDisplay string `pulumi:"specDisplay"`
	// The spec summary of cloud server.
	SpecSum map[string]interface{} `pulumi:"specSum"`
	// The config of storage.
	Storage CloudServersCloudServerStorage `pulumi:"storage"`
	// The update time info.
	UpdateTime int `pulumi:"updateTime"`
}

// CloudServersCloudServerInput is an input type that accepts CloudServersCloudServerArgs and CloudServersCloudServerOutput values.
// You can construct a concrete instance of `CloudServersCloudServerInput` via:
//
//	CloudServersCloudServerArgs{...}
type CloudServersCloudServerInput interface {
	pulumi.Input

	ToCloudServersCloudServerOutput() CloudServersCloudServerOutput
	ToCloudServersCloudServerOutputWithContext(context.Context) CloudServersCloudServerOutput
}

type CloudServersCloudServerArgs struct {
	// The config of billing.
	BillingConfig CloudServersCloudServerBillingConfigInput `pulumi:"billingConfig"`
	// The Id of cloud server.
	CloudServerIdentity pulumi.StringInput `pulumi:"cloudServerIdentity"`
	// The cpu info of cloud server.
	Cpu pulumi.StringInput `pulumi:"cpu"`
	// The create time info.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The config of custom data.
	CustomData CloudServersCloudServerCustomDataInput `pulumi:"customData"`
	// The config of gpu.
	Gpu CloudServersCloudServerGpuInput `pulumi:"gpu"`
	// The Id of cloud server.
	Id pulumi.StringInput `pulumi:"id"`
	// The config of image.
	Image CloudServersCloudServerImageInput `pulumi:"image"`
	// The count of instance.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The status of instances.
	InstanceStatuses CloudServersCloudServerInstanceStatusArrayInput `pulumi:"instanceStatuses"`
	// The memory info of cloud server.
	Mem pulumi.StringInput `pulumi:"mem"`
	// The name of cloud server.
	Name pulumi.StringInput `pulumi:"name"`
	// The config of network.
	Network CloudServersCloudServerNetworkInput `pulumi:"network"`
	// The config of schedule strategy.
	ScheduleStrategyConfigs CloudServersCloudServerScheduleStrategyConfigsInput `pulumi:"scheduleStrategyConfigs"`
	// The config of secret.
	SecretConfig CloudServersCloudServerSecretConfigInput `pulumi:"secretConfig"`
	// The server area count number.
	ServerAreaCount pulumi.IntInput `pulumi:"serverAreaCount"`
	// The area level of cloud server.
	ServerAreaLevel pulumi.StringInput `pulumi:"serverAreaLevel"`
	// The server areas info.
	ServerAreas CloudServersCloudServerServerAreaArrayInput `pulumi:"serverAreas"`
	// The spec info of cloud server.
	Spec pulumi.StringInput `pulumi:"spec"`
	// The Chinese spec info of cloud server.
	SpecDisplay pulumi.StringInput `pulumi:"specDisplay"`
	// The spec summary of cloud server.
	SpecSum pulumi.MapInput `pulumi:"specSum"`
	// The config of storage.
	Storage CloudServersCloudServerStorageInput `pulumi:"storage"`
	// The update time info.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
}

func (CloudServersCloudServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServer)(nil)).Elem()
}

func (i CloudServersCloudServerArgs) ToCloudServersCloudServerOutput() CloudServersCloudServerOutput {
	return i.ToCloudServersCloudServerOutputWithContext(context.Background())
}

func (i CloudServersCloudServerArgs) ToCloudServersCloudServerOutputWithContext(ctx context.Context) CloudServersCloudServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerOutput)
}

// CloudServersCloudServerArrayInput is an input type that accepts CloudServersCloudServerArray and CloudServersCloudServerArrayOutput values.
// You can construct a concrete instance of `CloudServersCloudServerArrayInput` via:
//
//	CloudServersCloudServerArray{ CloudServersCloudServerArgs{...} }
type CloudServersCloudServerArrayInput interface {
	pulumi.Input

	ToCloudServersCloudServerArrayOutput() CloudServersCloudServerArrayOutput
	ToCloudServersCloudServerArrayOutputWithContext(context.Context) CloudServersCloudServerArrayOutput
}

type CloudServersCloudServerArray []CloudServersCloudServerInput

func (CloudServersCloudServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServer)(nil)).Elem()
}

func (i CloudServersCloudServerArray) ToCloudServersCloudServerArrayOutput() CloudServersCloudServerArrayOutput {
	return i.ToCloudServersCloudServerArrayOutputWithContext(context.Background())
}

func (i CloudServersCloudServerArray) ToCloudServersCloudServerArrayOutputWithContext(ctx context.Context) CloudServersCloudServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerArrayOutput)
}

type CloudServersCloudServerOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServer)(nil)).Elem()
}

func (o CloudServersCloudServerOutput) ToCloudServersCloudServerOutput() CloudServersCloudServerOutput {
	return o
}

func (o CloudServersCloudServerOutput) ToCloudServersCloudServerOutputWithContext(ctx context.Context) CloudServersCloudServerOutput {
	return o
}

// The config of billing.
func (o CloudServersCloudServerOutput) BillingConfig() CloudServersCloudServerBillingConfigOutput {
	return o.ApplyT(func(v CloudServersCloudServer) CloudServersCloudServerBillingConfig { return v.BillingConfig }).(CloudServersCloudServerBillingConfigOutput)
}

// The Id of cloud server.
func (o CloudServersCloudServerOutput) CloudServerIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServer) string { return v.CloudServerIdentity }).(pulumi.StringOutput)
}

// The cpu info of cloud server.
func (o CloudServersCloudServerOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServer) string { return v.Cpu }).(pulumi.StringOutput)
}

// The create time info.
func (o CloudServersCloudServerOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v CloudServersCloudServer) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The config of custom data.
func (o CloudServersCloudServerOutput) CustomData() CloudServersCloudServerCustomDataOutput {
	return o.ApplyT(func(v CloudServersCloudServer) CloudServersCloudServerCustomData { return v.CustomData }).(CloudServersCloudServerCustomDataOutput)
}

// The config of gpu.
func (o CloudServersCloudServerOutput) Gpu() CloudServersCloudServerGpuOutput {
	return o.ApplyT(func(v CloudServersCloudServer) CloudServersCloudServerGpu { return v.Gpu }).(CloudServersCloudServerGpuOutput)
}

// The Id of cloud server.
func (o CloudServersCloudServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServer) string { return v.Id }).(pulumi.StringOutput)
}

// The config of image.
func (o CloudServersCloudServerOutput) Image() CloudServersCloudServerImageOutput {
	return o.ApplyT(func(v CloudServersCloudServer) CloudServersCloudServerImage { return v.Image }).(CloudServersCloudServerImageOutput)
}

// The count of instance.
func (o CloudServersCloudServerOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v CloudServersCloudServer) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The status of instances.
func (o CloudServersCloudServerOutput) InstanceStatuses() CloudServersCloudServerInstanceStatusArrayOutput {
	return o.ApplyT(func(v CloudServersCloudServer) []CloudServersCloudServerInstanceStatus { return v.InstanceStatuses }).(CloudServersCloudServerInstanceStatusArrayOutput)
}

// The memory info of cloud server.
func (o CloudServersCloudServerOutput) Mem() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServer) string { return v.Mem }).(pulumi.StringOutput)
}

// The name of cloud server.
func (o CloudServersCloudServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServer) string { return v.Name }).(pulumi.StringOutput)
}

// The config of network.
func (o CloudServersCloudServerOutput) Network() CloudServersCloudServerNetworkOutput {
	return o.ApplyT(func(v CloudServersCloudServer) CloudServersCloudServerNetwork { return v.Network }).(CloudServersCloudServerNetworkOutput)
}

// The config of schedule strategy.
func (o CloudServersCloudServerOutput) ScheduleStrategyConfigs() CloudServersCloudServerScheduleStrategyConfigsOutput {
	return o.ApplyT(func(v CloudServersCloudServer) CloudServersCloudServerScheduleStrategyConfigs {
		return v.ScheduleStrategyConfigs
	}).(CloudServersCloudServerScheduleStrategyConfigsOutput)
}

// The config of secret.
func (o CloudServersCloudServerOutput) SecretConfig() CloudServersCloudServerSecretConfigOutput {
	return o.ApplyT(func(v CloudServersCloudServer) CloudServersCloudServerSecretConfig { return v.SecretConfig }).(CloudServersCloudServerSecretConfigOutput)
}

// The server area count number.
func (o CloudServersCloudServerOutput) ServerAreaCount() pulumi.IntOutput {
	return o.ApplyT(func(v CloudServersCloudServer) int { return v.ServerAreaCount }).(pulumi.IntOutput)
}

// The area level of cloud server.
func (o CloudServersCloudServerOutput) ServerAreaLevel() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServer) string { return v.ServerAreaLevel }).(pulumi.StringOutput)
}

// The server areas info.
func (o CloudServersCloudServerOutput) ServerAreas() CloudServersCloudServerServerAreaArrayOutput {
	return o.ApplyT(func(v CloudServersCloudServer) []CloudServersCloudServerServerArea { return v.ServerAreas }).(CloudServersCloudServerServerAreaArrayOutput)
}

// The spec info of cloud server.
func (o CloudServersCloudServerOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServer) string { return v.Spec }).(pulumi.StringOutput)
}

// The Chinese spec info of cloud server.
func (o CloudServersCloudServerOutput) SpecDisplay() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServer) string { return v.SpecDisplay }).(pulumi.StringOutput)
}

// The spec summary of cloud server.
func (o CloudServersCloudServerOutput) SpecSum() pulumi.MapOutput {
	return o.ApplyT(func(v CloudServersCloudServer) map[string]interface{} { return v.SpecSum }).(pulumi.MapOutput)
}

// The config of storage.
func (o CloudServersCloudServerOutput) Storage() CloudServersCloudServerStorageOutput {
	return o.ApplyT(func(v CloudServersCloudServer) CloudServersCloudServerStorage { return v.Storage }).(CloudServersCloudServerStorageOutput)
}

// The update time info.
func (o CloudServersCloudServerOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v CloudServersCloudServer) int { return v.UpdateTime }).(pulumi.IntOutput)
}

type CloudServersCloudServerArrayOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServer)(nil)).Elem()
}

func (o CloudServersCloudServerArrayOutput) ToCloudServersCloudServerArrayOutput() CloudServersCloudServerArrayOutput {
	return o
}

func (o CloudServersCloudServerArrayOutput) ToCloudServersCloudServerArrayOutputWithContext(ctx context.Context) CloudServersCloudServerArrayOutput {
	return o
}

func (o CloudServersCloudServerArrayOutput) Index(i pulumi.IntInput) CloudServersCloudServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServersCloudServer {
		return vs[0].([]CloudServersCloudServer)[vs[1].(int)]
	}).(CloudServersCloudServerOutput)
}

type CloudServersCloudServerBillingConfig struct {
	// The bandwidth billing method.
	BandwidthBillingMethod string `pulumi:"bandwidthBillingMethod"`
	// The computing billing method.
	ComputingBillingMethod string `pulumi:"computingBillingMethod"`
}

// CloudServersCloudServerBillingConfigInput is an input type that accepts CloudServersCloudServerBillingConfigArgs and CloudServersCloudServerBillingConfigOutput values.
// You can construct a concrete instance of `CloudServersCloudServerBillingConfigInput` via:
//
//	CloudServersCloudServerBillingConfigArgs{...}
type CloudServersCloudServerBillingConfigInput interface {
	pulumi.Input

	ToCloudServersCloudServerBillingConfigOutput() CloudServersCloudServerBillingConfigOutput
	ToCloudServersCloudServerBillingConfigOutputWithContext(context.Context) CloudServersCloudServerBillingConfigOutput
}

type CloudServersCloudServerBillingConfigArgs struct {
	// The bandwidth billing method.
	BandwidthBillingMethod pulumi.StringInput `pulumi:"bandwidthBillingMethod"`
	// The computing billing method.
	ComputingBillingMethod pulumi.StringInput `pulumi:"computingBillingMethod"`
}

func (CloudServersCloudServerBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerBillingConfig)(nil)).Elem()
}

func (i CloudServersCloudServerBillingConfigArgs) ToCloudServersCloudServerBillingConfigOutput() CloudServersCloudServerBillingConfigOutput {
	return i.ToCloudServersCloudServerBillingConfigOutputWithContext(context.Background())
}

func (i CloudServersCloudServerBillingConfigArgs) ToCloudServersCloudServerBillingConfigOutputWithContext(ctx context.Context) CloudServersCloudServerBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerBillingConfigOutput)
}

type CloudServersCloudServerBillingConfigOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerBillingConfig)(nil)).Elem()
}

func (o CloudServersCloudServerBillingConfigOutput) ToCloudServersCloudServerBillingConfigOutput() CloudServersCloudServerBillingConfigOutput {
	return o
}

func (o CloudServersCloudServerBillingConfigOutput) ToCloudServersCloudServerBillingConfigOutputWithContext(ctx context.Context) CloudServersCloudServerBillingConfigOutput {
	return o
}

// The bandwidth billing method.
func (o CloudServersCloudServerBillingConfigOutput) BandwidthBillingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerBillingConfig) string { return v.BandwidthBillingMethod }).(pulumi.StringOutput)
}

// The computing billing method.
func (o CloudServersCloudServerBillingConfigOutput) ComputingBillingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerBillingConfig) string { return v.ComputingBillingMethod }).(pulumi.StringOutput)
}

type CloudServersCloudServerCustomData struct {
	// The data info.
	Data string `pulumi:"data"`
}

// CloudServersCloudServerCustomDataInput is an input type that accepts CloudServersCloudServerCustomDataArgs and CloudServersCloudServerCustomDataOutput values.
// You can construct a concrete instance of `CloudServersCloudServerCustomDataInput` via:
//
//	CloudServersCloudServerCustomDataArgs{...}
type CloudServersCloudServerCustomDataInput interface {
	pulumi.Input

	ToCloudServersCloudServerCustomDataOutput() CloudServersCloudServerCustomDataOutput
	ToCloudServersCloudServerCustomDataOutputWithContext(context.Context) CloudServersCloudServerCustomDataOutput
}

type CloudServersCloudServerCustomDataArgs struct {
	// The data info.
	Data pulumi.StringInput `pulumi:"data"`
}

func (CloudServersCloudServerCustomDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerCustomData)(nil)).Elem()
}

func (i CloudServersCloudServerCustomDataArgs) ToCloudServersCloudServerCustomDataOutput() CloudServersCloudServerCustomDataOutput {
	return i.ToCloudServersCloudServerCustomDataOutputWithContext(context.Background())
}

func (i CloudServersCloudServerCustomDataArgs) ToCloudServersCloudServerCustomDataOutputWithContext(ctx context.Context) CloudServersCloudServerCustomDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerCustomDataOutput)
}

type CloudServersCloudServerCustomDataOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerCustomDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerCustomData)(nil)).Elem()
}

func (o CloudServersCloudServerCustomDataOutput) ToCloudServersCloudServerCustomDataOutput() CloudServersCloudServerCustomDataOutput {
	return o
}

func (o CloudServersCloudServerCustomDataOutput) ToCloudServersCloudServerCustomDataOutputWithContext(ctx context.Context) CloudServersCloudServerCustomDataOutput {
	return o
}

// The data info.
func (o CloudServersCloudServerCustomDataOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerCustomData) string { return v.Data }).(pulumi.StringOutput)
}

type CloudServersCloudServerGpu struct {
	// The list gpu info.
	Gpuses []CloudServersCloudServerGpuGpus `pulumi:"gpuses"`
}

// CloudServersCloudServerGpuInput is an input type that accepts CloudServersCloudServerGpuArgs and CloudServersCloudServerGpuOutput values.
// You can construct a concrete instance of `CloudServersCloudServerGpuInput` via:
//
//	CloudServersCloudServerGpuArgs{...}
type CloudServersCloudServerGpuInput interface {
	pulumi.Input

	ToCloudServersCloudServerGpuOutput() CloudServersCloudServerGpuOutput
	ToCloudServersCloudServerGpuOutputWithContext(context.Context) CloudServersCloudServerGpuOutput
}

type CloudServersCloudServerGpuArgs struct {
	// The list gpu info.
	Gpuses CloudServersCloudServerGpuGpusArrayInput `pulumi:"gpuses"`
}

func (CloudServersCloudServerGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerGpu)(nil)).Elem()
}

func (i CloudServersCloudServerGpuArgs) ToCloudServersCloudServerGpuOutput() CloudServersCloudServerGpuOutput {
	return i.ToCloudServersCloudServerGpuOutputWithContext(context.Background())
}

func (i CloudServersCloudServerGpuArgs) ToCloudServersCloudServerGpuOutputWithContext(ctx context.Context) CloudServersCloudServerGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerGpuOutput)
}

type CloudServersCloudServerGpuOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerGpu)(nil)).Elem()
}

func (o CloudServersCloudServerGpuOutput) ToCloudServersCloudServerGpuOutput() CloudServersCloudServerGpuOutput {
	return o
}

func (o CloudServersCloudServerGpuOutput) ToCloudServersCloudServerGpuOutputWithContext(ctx context.Context) CloudServersCloudServerGpuOutput {
	return o
}

// The list gpu info.
func (o CloudServersCloudServerGpuOutput) Gpuses() CloudServersCloudServerGpuGpusArrayOutput {
	return o.ApplyT(func(v CloudServersCloudServerGpu) []CloudServersCloudServerGpuGpus { return v.Gpuses }).(CloudServersCloudServerGpuGpusArrayOutput)
}

type CloudServersCloudServerGpuGpus struct {
	// The spec of gpu.
	GpuSpec CloudServersCloudServerGpuGpusGpuSpec `pulumi:"gpuSpec"`
	// The number of gpu.
	Num int `pulumi:"num"`
}

// CloudServersCloudServerGpuGpusInput is an input type that accepts CloudServersCloudServerGpuGpusArgs and CloudServersCloudServerGpuGpusOutput values.
// You can construct a concrete instance of `CloudServersCloudServerGpuGpusInput` via:
//
//	CloudServersCloudServerGpuGpusArgs{...}
type CloudServersCloudServerGpuGpusInput interface {
	pulumi.Input

	ToCloudServersCloudServerGpuGpusOutput() CloudServersCloudServerGpuGpusOutput
	ToCloudServersCloudServerGpuGpusOutputWithContext(context.Context) CloudServersCloudServerGpuGpusOutput
}

type CloudServersCloudServerGpuGpusArgs struct {
	// The spec of gpu.
	GpuSpec CloudServersCloudServerGpuGpusGpuSpecInput `pulumi:"gpuSpec"`
	// The number of gpu.
	Num pulumi.IntInput `pulumi:"num"`
}

func (CloudServersCloudServerGpuGpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerGpuGpus)(nil)).Elem()
}

func (i CloudServersCloudServerGpuGpusArgs) ToCloudServersCloudServerGpuGpusOutput() CloudServersCloudServerGpuGpusOutput {
	return i.ToCloudServersCloudServerGpuGpusOutputWithContext(context.Background())
}

func (i CloudServersCloudServerGpuGpusArgs) ToCloudServersCloudServerGpuGpusOutputWithContext(ctx context.Context) CloudServersCloudServerGpuGpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerGpuGpusOutput)
}

// CloudServersCloudServerGpuGpusArrayInput is an input type that accepts CloudServersCloudServerGpuGpusArray and CloudServersCloudServerGpuGpusArrayOutput values.
// You can construct a concrete instance of `CloudServersCloudServerGpuGpusArrayInput` via:
//
//	CloudServersCloudServerGpuGpusArray{ CloudServersCloudServerGpuGpusArgs{...} }
type CloudServersCloudServerGpuGpusArrayInput interface {
	pulumi.Input

	ToCloudServersCloudServerGpuGpusArrayOutput() CloudServersCloudServerGpuGpusArrayOutput
	ToCloudServersCloudServerGpuGpusArrayOutputWithContext(context.Context) CloudServersCloudServerGpuGpusArrayOutput
}

type CloudServersCloudServerGpuGpusArray []CloudServersCloudServerGpuGpusInput

func (CloudServersCloudServerGpuGpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServerGpuGpus)(nil)).Elem()
}

func (i CloudServersCloudServerGpuGpusArray) ToCloudServersCloudServerGpuGpusArrayOutput() CloudServersCloudServerGpuGpusArrayOutput {
	return i.ToCloudServersCloudServerGpuGpusArrayOutputWithContext(context.Background())
}

func (i CloudServersCloudServerGpuGpusArray) ToCloudServersCloudServerGpuGpusArrayOutputWithContext(ctx context.Context) CloudServersCloudServerGpuGpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerGpuGpusArrayOutput)
}

type CloudServersCloudServerGpuGpusOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerGpuGpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerGpuGpus)(nil)).Elem()
}

func (o CloudServersCloudServerGpuGpusOutput) ToCloudServersCloudServerGpuGpusOutput() CloudServersCloudServerGpuGpusOutput {
	return o
}

func (o CloudServersCloudServerGpuGpusOutput) ToCloudServersCloudServerGpuGpusOutputWithContext(ctx context.Context) CloudServersCloudServerGpuGpusOutput {
	return o
}

// The spec of gpu.
func (o CloudServersCloudServerGpuGpusOutput) GpuSpec() CloudServersCloudServerGpuGpusGpuSpecOutput {
	return o.ApplyT(func(v CloudServersCloudServerGpuGpus) CloudServersCloudServerGpuGpusGpuSpec { return v.GpuSpec }).(CloudServersCloudServerGpuGpusGpuSpecOutput)
}

// The number of gpu.
func (o CloudServersCloudServerGpuGpusOutput) Num() pulumi.IntOutput {
	return o.ApplyT(func(v CloudServersCloudServerGpuGpus) int { return v.Num }).(pulumi.IntOutput)
}

type CloudServersCloudServerGpuGpusArrayOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerGpuGpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServerGpuGpus)(nil)).Elem()
}

func (o CloudServersCloudServerGpuGpusArrayOutput) ToCloudServersCloudServerGpuGpusArrayOutput() CloudServersCloudServerGpuGpusArrayOutput {
	return o
}

func (o CloudServersCloudServerGpuGpusArrayOutput) ToCloudServersCloudServerGpuGpusArrayOutputWithContext(ctx context.Context) CloudServersCloudServerGpuGpusArrayOutput {
	return o
}

func (o CloudServersCloudServerGpuGpusArrayOutput) Index(i pulumi.IntInput) CloudServersCloudServerGpuGpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServersCloudServerGpuGpus {
		return vs[0].([]CloudServersCloudServerGpuGpus)[vs[1].(int)]
	}).(CloudServersCloudServerGpuGpusOutput)
}

type CloudServersCloudServerGpuGpusGpuSpec struct {
	// The type of gpu.
	GpuType string `pulumi:"gpuType"`
}

// CloudServersCloudServerGpuGpusGpuSpecInput is an input type that accepts CloudServersCloudServerGpuGpusGpuSpecArgs and CloudServersCloudServerGpuGpusGpuSpecOutput values.
// You can construct a concrete instance of `CloudServersCloudServerGpuGpusGpuSpecInput` via:
//
//	CloudServersCloudServerGpuGpusGpuSpecArgs{...}
type CloudServersCloudServerGpuGpusGpuSpecInput interface {
	pulumi.Input

	ToCloudServersCloudServerGpuGpusGpuSpecOutput() CloudServersCloudServerGpuGpusGpuSpecOutput
	ToCloudServersCloudServerGpuGpusGpuSpecOutputWithContext(context.Context) CloudServersCloudServerGpuGpusGpuSpecOutput
}

type CloudServersCloudServerGpuGpusGpuSpecArgs struct {
	// The type of gpu.
	GpuType pulumi.StringInput `pulumi:"gpuType"`
}

func (CloudServersCloudServerGpuGpusGpuSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerGpuGpusGpuSpec)(nil)).Elem()
}

func (i CloudServersCloudServerGpuGpusGpuSpecArgs) ToCloudServersCloudServerGpuGpusGpuSpecOutput() CloudServersCloudServerGpuGpusGpuSpecOutput {
	return i.ToCloudServersCloudServerGpuGpusGpuSpecOutputWithContext(context.Background())
}

func (i CloudServersCloudServerGpuGpusGpuSpecArgs) ToCloudServersCloudServerGpuGpusGpuSpecOutputWithContext(ctx context.Context) CloudServersCloudServerGpuGpusGpuSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerGpuGpusGpuSpecOutput)
}

type CloudServersCloudServerGpuGpusGpuSpecOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerGpuGpusGpuSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerGpuGpusGpuSpec)(nil)).Elem()
}

func (o CloudServersCloudServerGpuGpusGpuSpecOutput) ToCloudServersCloudServerGpuGpusGpuSpecOutput() CloudServersCloudServerGpuGpusGpuSpecOutput {
	return o
}

func (o CloudServersCloudServerGpuGpusGpuSpecOutput) ToCloudServersCloudServerGpuGpusGpuSpecOutputWithContext(ctx context.Context) CloudServersCloudServerGpuGpusGpuSpecOutput {
	return o
}

// The type of gpu.
func (o CloudServersCloudServerGpuGpusGpuSpecOutput) GpuType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerGpuGpusGpuSpec) string { return v.GpuType }).(pulumi.StringOutput)
}

type CloudServersCloudServerImage struct {
	// The id of image.
	ImageIdentity string `pulumi:"imageIdentity"`
	// The name of image.
	ImageName string `pulumi:"imageName"`
	// The property of system.
	Property string `pulumi:"property"`
	// The arch of system.
	SystemArch string `pulumi:"systemArch"`
	// The bit of system.
	SystemBit string `pulumi:"systemBit"`
	// The type of system.
	SystemType string `pulumi:"systemType"`
	// The version of system.
	SystemVersion string `pulumi:"systemVersion"`
}

// CloudServersCloudServerImageInput is an input type that accepts CloudServersCloudServerImageArgs and CloudServersCloudServerImageOutput values.
// You can construct a concrete instance of `CloudServersCloudServerImageInput` via:
//
//	CloudServersCloudServerImageArgs{...}
type CloudServersCloudServerImageInput interface {
	pulumi.Input

	ToCloudServersCloudServerImageOutput() CloudServersCloudServerImageOutput
	ToCloudServersCloudServerImageOutputWithContext(context.Context) CloudServersCloudServerImageOutput
}

type CloudServersCloudServerImageArgs struct {
	// The id of image.
	ImageIdentity pulumi.StringInput `pulumi:"imageIdentity"`
	// The name of image.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The property of system.
	Property pulumi.StringInput `pulumi:"property"`
	// The arch of system.
	SystemArch pulumi.StringInput `pulumi:"systemArch"`
	// The bit of system.
	SystemBit pulumi.StringInput `pulumi:"systemBit"`
	// The type of system.
	SystemType pulumi.StringInput `pulumi:"systemType"`
	// The version of system.
	SystemVersion pulumi.StringInput `pulumi:"systemVersion"`
}

func (CloudServersCloudServerImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerImage)(nil)).Elem()
}

func (i CloudServersCloudServerImageArgs) ToCloudServersCloudServerImageOutput() CloudServersCloudServerImageOutput {
	return i.ToCloudServersCloudServerImageOutputWithContext(context.Background())
}

func (i CloudServersCloudServerImageArgs) ToCloudServersCloudServerImageOutputWithContext(ctx context.Context) CloudServersCloudServerImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerImageOutput)
}

type CloudServersCloudServerImageOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerImage)(nil)).Elem()
}

func (o CloudServersCloudServerImageOutput) ToCloudServersCloudServerImageOutput() CloudServersCloudServerImageOutput {
	return o
}

func (o CloudServersCloudServerImageOutput) ToCloudServersCloudServerImageOutputWithContext(ctx context.Context) CloudServersCloudServerImageOutput {
	return o
}

// The id of image.
func (o CloudServersCloudServerImageOutput) ImageIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerImage) string { return v.ImageIdentity }).(pulumi.StringOutput)
}

// The name of image.
func (o CloudServersCloudServerImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The property of system.
func (o CloudServersCloudServerImageOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerImage) string { return v.Property }).(pulumi.StringOutput)
}

// The arch of system.
func (o CloudServersCloudServerImageOutput) SystemArch() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerImage) string { return v.SystemArch }).(pulumi.StringOutput)
}

// The bit of system.
func (o CloudServersCloudServerImageOutput) SystemBit() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerImage) string { return v.SystemBit }).(pulumi.StringOutput)
}

// The type of system.
func (o CloudServersCloudServerImageOutput) SystemType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerImage) string { return v.SystemType }).(pulumi.StringOutput)
}

// The version of system.
func (o CloudServersCloudServerImageOutput) SystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerImage) string { return v.SystemVersion }).(pulumi.StringOutput)
}

type CloudServersCloudServerInstanceStatus struct {
	// The count of instance.
	InstanceCount int `pulumi:"instanceCount"`
	// The status info.
	Status string `pulumi:"status"`
}

// CloudServersCloudServerInstanceStatusInput is an input type that accepts CloudServersCloudServerInstanceStatusArgs and CloudServersCloudServerInstanceStatusOutput values.
// You can construct a concrete instance of `CloudServersCloudServerInstanceStatusInput` via:
//
//	CloudServersCloudServerInstanceStatusArgs{...}
type CloudServersCloudServerInstanceStatusInput interface {
	pulumi.Input

	ToCloudServersCloudServerInstanceStatusOutput() CloudServersCloudServerInstanceStatusOutput
	ToCloudServersCloudServerInstanceStatusOutputWithContext(context.Context) CloudServersCloudServerInstanceStatusOutput
}

type CloudServersCloudServerInstanceStatusArgs struct {
	// The count of instance.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// The status info.
	Status pulumi.StringInput `pulumi:"status"`
}

func (CloudServersCloudServerInstanceStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerInstanceStatus)(nil)).Elem()
}

func (i CloudServersCloudServerInstanceStatusArgs) ToCloudServersCloudServerInstanceStatusOutput() CloudServersCloudServerInstanceStatusOutput {
	return i.ToCloudServersCloudServerInstanceStatusOutputWithContext(context.Background())
}

func (i CloudServersCloudServerInstanceStatusArgs) ToCloudServersCloudServerInstanceStatusOutputWithContext(ctx context.Context) CloudServersCloudServerInstanceStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerInstanceStatusOutput)
}

// CloudServersCloudServerInstanceStatusArrayInput is an input type that accepts CloudServersCloudServerInstanceStatusArray and CloudServersCloudServerInstanceStatusArrayOutput values.
// You can construct a concrete instance of `CloudServersCloudServerInstanceStatusArrayInput` via:
//
//	CloudServersCloudServerInstanceStatusArray{ CloudServersCloudServerInstanceStatusArgs{...} }
type CloudServersCloudServerInstanceStatusArrayInput interface {
	pulumi.Input

	ToCloudServersCloudServerInstanceStatusArrayOutput() CloudServersCloudServerInstanceStatusArrayOutput
	ToCloudServersCloudServerInstanceStatusArrayOutputWithContext(context.Context) CloudServersCloudServerInstanceStatusArrayOutput
}

type CloudServersCloudServerInstanceStatusArray []CloudServersCloudServerInstanceStatusInput

func (CloudServersCloudServerInstanceStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServerInstanceStatus)(nil)).Elem()
}

func (i CloudServersCloudServerInstanceStatusArray) ToCloudServersCloudServerInstanceStatusArrayOutput() CloudServersCloudServerInstanceStatusArrayOutput {
	return i.ToCloudServersCloudServerInstanceStatusArrayOutputWithContext(context.Background())
}

func (i CloudServersCloudServerInstanceStatusArray) ToCloudServersCloudServerInstanceStatusArrayOutputWithContext(ctx context.Context) CloudServersCloudServerInstanceStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerInstanceStatusArrayOutput)
}

type CloudServersCloudServerInstanceStatusOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerInstanceStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerInstanceStatus)(nil)).Elem()
}

func (o CloudServersCloudServerInstanceStatusOutput) ToCloudServersCloudServerInstanceStatusOutput() CloudServersCloudServerInstanceStatusOutput {
	return o
}

func (o CloudServersCloudServerInstanceStatusOutput) ToCloudServersCloudServerInstanceStatusOutputWithContext(ctx context.Context) CloudServersCloudServerInstanceStatusOutput {
	return o
}

// The count of instance.
func (o CloudServersCloudServerInstanceStatusOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v CloudServersCloudServerInstanceStatus) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// The status info.
func (o CloudServersCloudServerInstanceStatusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerInstanceStatus) string { return v.Status }).(pulumi.StringOutput)
}

type CloudServersCloudServerInstanceStatusArrayOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerInstanceStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServerInstanceStatus)(nil)).Elem()
}

func (o CloudServersCloudServerInstanceStatusArrayOutput) ToCloudServersCloudServerInstanceStatusArrayOutput() CloudServersCloudServerInstanceStatusArrayOutput {
	return o
}

func (o CloudServersCloudServerInstanceStatusArrayOutput) ToCloudServersCloudServerInstanceStatusArrayOutputWithContext(ctx context.Context) CloudServersCloudServerInstanceStatusArrayOutput {
	return o
}

func (o CloudServersCloudServerInstanceStatusArrayOutput) Index(i pulumi.IntInput) CloudServersCloudServerInstanceStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServersCloudServerInstanceStatus {
		return vs[0].([]CloudServersCloudServerInstanceStatus)[vs[1].(int)]
	}).(CloudServersCloudServerInstanceStatusOutput)
}

type CloudServersCloudServerNetwork struct {
	// The peak of bandwidth.
	BandwidthPeak string `pulumi:"bandwidthPeak"`
	// Whether enable ipv6.
	EnableIpv6 bool `pulumi:"enableIpv6"`
	// The internal peak of bandwidth.
	InternalBandwidthPeak string `pulumi:"internalBandwidthPeak"`
}

// CloudServersCloudServerNetworkInput is an input type that accepts CloudServersCloudServerNetworkArgs and CloudServersCloudServerNetworkOutput values.
// You can construct a concrete instance of `CloudServersCloudServerNetworkInput` via:
//
//	CloudServersCloudServerNetworkArgs{...}
type CloudServersCloudServerNetworkInput interface {
	pulumi.Input

	ToCloudServersCloudServerNetworkOutput() CloudServersCloudServerNetworkOutput
	ToCloudServersCloudServerNetworkOutputWithContext(context.Context) CloudServersCloudServerNetworkOutput
}

type CloudServersCloudServerNetworkArgs struct {
	// The peak of bandwidth.
	BandwidthPeak pulumi.StringInput `pulumi:"bandwidthPeak"`
	// Whether enable ipv6.
	EnableIpv6 pulumi.BoolInput `pulumi:"enableIpv6"`
	// The internal peak of bandwidth.
	InternalBandwidthPeak pulumi.StringInput `pulumi:"internalBandwidthPeak"`
}

func (CloudServersCloudServerNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerNetwork)(nil)).Elem()
}

func (i CloudServersCloudServerNetworkArgs) ToCloudServersCloudServerNetworkOutput() CloudServersCloudServerNetworkOutput {
	return i.ToCloudServersCloudServerNetworkOutputWithContext(context.Background())
}

func (i CloudServersCloudServerNetworkArgs) ToCloudServersCloudServerNetworkOutputWithContext(ctx context.Context) CloudServersCloudServerNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerNetworkOutput)
}

type CloudServersCloudServerNetworkOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerNetwork)(nil)).Elem()
}

func (o CloudServersCloudServerNetworkOutput) ToCloudServersCloudServerNetworkOutput() CloudServersCloudServerNetworkOutput {
	return o
}

func (o CloudServersCloudServerNetworkOutput) ToCloudServersCloudServerNetworkOutputWithContext(ctx context.Context) CloudServersCloudServerNetworkOutput {
	return o
}

// The peak of bandwidth.
func (o CloudServersCloudServerNetworkOutput) BandwidthPeak() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerNetwork) string { return v.BandwidthPeak }).(pulumi.StringOutput)
}

// Whether enable ipv6.
func (o CloudServersCloudServerNetworkOutput) EnableIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v CloudServersCloudServerNetwork) bool { return v.EnableIpv6 }).(pulumi.BoolOutput)
}

// The internal peak of bandwidth.
func (o CloudServersCloudServerNetworkOutput) InternalBandwidthPeak() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerNetwork) string { return v.InternalBandwidthPeak }).(pulumi.StringOutput)
}

type CloudServersCloudServerScheduleStrategyConfigs struct {
	// The price strategy.
	PriceStrategy string `pulumi:"priceStrategy"`
	// The schedule strategy.
	ScheduleStrategy string `pulumi:"scheduleStrategy"`
}

// CloudServersCloudServerScheduleStrategyConfigsInput is an input type that accepts CloudServersCloudServerScheduleStrategyConfigsArgs and CloudServersCloudServerScheduleStrategyConfigsOutput values.
// You can construct a concrete instance of `CloudServersCloudServerScheduleStrategyConfigsInput` via:
//
//	CloudServersCloudServerScheduleStrategyConfigsArgs{...}
type CloudServersCloudServerScheduleStrategyConfigsInput interface {
	pulumi.Input

	ToCloudServersCloudServerScheduleStrategyConfigsOutput() CloudServersCloudServerScheduleStrategyConfigsOutput
	ToCloudServersCloudServerScheduleStrategyConfigsOutputWithContext(context.Context) CloudServersCloudServerScheduleStrategyConfigsOutput
}

type CloudServersCloudServerScheduleStrategyConfigsArgs struct {
	// The price strategy.
	PriceStrategy pulumi.StringInput `pulumi:"priceStrategy"`
	// The schedule strategy.
	ScheduleStrategy pulumi.StringInput `pulumi:"scheduleStrategy"`
}

func (CloudServersCloudServerScheduleStrategyConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerScheduleStrategyConfigs)(nil)).Elem()
}

func (i CloudServersCloudServerScheduleStrategyConfigsArgs) ToCloudServersCloudServerScheduleStrategyConfigsOutput() CloudServersCloudServerScheduleStrategyConfigsOutput {
	return i.ToCloudServersCloudServerScheduleStrategyConfigsOutputWithContext(context.Background())
}

func (i CloudServersCloudServerScheduleStrategyConfigsArgs) ToCloudServersCloudServerScheduleStrategyConfigsOutputWithContext(ctx context.Context) CloudServersCloudServerScheduleStrategyConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerScheduleStrategyConfigsOutput)
}

type CloudServersCloudServerScheduleStrategyConfigsOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerScheduleStrategyConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerScheduleStrategyConfigs)(nil)).Elem()
}

func (o CloudServersCloudServerScheduleStrategyConfigsOutput) ToCloudServersCloudServerScheduleStrategyConfigsOutput() CloudServersCloudServerScheduleStrategyConfigsOutput {
	return o
}

func (o CloudServersCloudServerScheduleStrategyConfigsOutput) ToCloudServersCloudServerScheduleStrategyConfigsOutputWithContext(ctx context.Context) CloudServersCloudServerScheduleStrategyConfigsOutput {
	return o
}

// The price strategy.
func (o CloudServersCloudServerScheduleStrategyConfigsOutput) PriceStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerScheduleStrategyConfigs) string { return v.PriceStrategy }).(pulumi.StringOutput)
}

// The schedule strategy.
func (o CloudServersCloudServerScheduleStrategyConfigsOutput) ScheduleStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerScheduleStrategyConfigs) string { return v.ScheduleStrategy }).(pulumi.StringOutput)
}

type CloudServersCloudServerSecretConfig struct {
	// The data of secret.
	SecretData string `pulumi:"secretData"`
	// The type of secret.
	SecretType int `pulumi:"secretType"`
}

// CloudServersCloudServerSecretConfigInput is an input type that accepts CloudServersCloudServerSecretConfigArgs and CloudServersCloudServerSecretConfigOutput values.
// You can construct a concrete instance of `CloudServersCloudServerSecretConfigInput` via:
//
//	CloudServersCloudServerSecretConfigArgs{...}
type CloudServersCloudServerSecretConfigInput interface {
	pulumi.Input

	ToCloudServersCloudServerSecretConfigOutput() CloudServersCloudServerSecretConfigOutput
	ToCloudServersCloudServerSecretConfigOutputWithContext(context.Context) CloudServersCloudServerSecretConfigOutput
}

type CloudServersCloudServerSecretConfigArgs struct {
	// The data of secret.
	SecretData pulumi.StringInput `pulumi:"secretData"`
	// The type of secret.
	SecretType pulumi.IntInput `pulumi:"secretType"`
}

func (CloudServersCloudServerSecretConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerSecretConfig)(nil)).Elem()
}

func (i CloudServersCloudServerSecretConfigArgs) ToCloudServersCloudServerSecretConfigOutput() CloudServersCloudServerSecretConfigOutput {
	return i.ToCloudServersCloudServerSecretConfigOutputWithContext(context.Background())
}

func (i CloudServersCloudServerSecretConfigArgs) ToCloudServersCloudServerSecretConfigOutputWithContext(ctx context.Context) CloudServersCloudServerSecretConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerSecretConfigOutput)
}

type CloudServersCloudServerSecretConfigOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerSecretConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerSecretConfig)(nil)).Elem()
}

func (o CloudServersCloudServerSecretConfigOutput) ToCloudServersCloudServerSecretConfigOutput() CloudServersCloudServerSecretConfigOutput {
	return o
}

func (o CloudServersCloudServerSecretConfigOutput) ToCloudServersCloudServerSecretConfigOutputWithContext(ctx context.Context) CloudServersCloudServerSecretConfigOutput {
	return o
}

// The data of secret.
func (o CloudServersCloudServerSecretConfigOutput) SecretData() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerSecretConfig) string { return v.SecretData }).(pulumi.StringOutput)
}

// The type of secret.
func (o CloudServersCloudServerSecretConfigOutput) SecretType() pulumi.IntOutput {
	return o.ApplyT(func(v CloudServersCloudServerSecretConfig) int { return v.SecretType }).(pulumi.IntOutput)
}

type CloudServersCloudServerServerArea struct {
	// The area info.
	Area string `pulumi:"area"`
	// The number of instance.
	InstanceNum int `pulumi:"instanceNum"`
	// The isp info.
	Isp string `pulumi:"isp"`
}

// CloudServersCloudServerServerAreaInput is an input type that accepts CloudServersCloudServerServerAreaArgs and CloudServersCloudServerServerAreaOutput values.
// You can construct a concrete instance of `CloudServersCloudServerServerAreaInput` via:
//
//	CloudServersCloudServerServerAreaArgs{...}
type CloudServersCloudServerServerAreaInput interface {
	pulumi.Input

	ToCloudServersCloudServerServerAreaOutput() CloudServersCloudServerServerAreaOutput
	ToCloudServersCloudServerServerAreaOutputWithContext(context.Context) CloudServersCloudServerServerAreaOutput
}

type CloudServersCloudServerServerAreaArgs struct {
	// The area info.
	Area pulumi.StringInput `pulumi:"area"`
	// The number of instance.
	InstanceNum pulumi.IntInput `pulumi:"instanceNum"`
	// The isp info.
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (CloudServersCloudServerServerAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerServerArea)(nil)).Elem()
}

func (i CloudServersCloudServerServerAreaArgs) ToCloudServersCloudServerServerAreaOutput() CloudServersCloudServerServerAreaOutput {
	return i.ToCloudServersCloudServerServerAreaOutputWithContext(context.Background())
}

func (i CloudServersCloudServerServerAreaArgs) ToCloudServersCloudServerServerAreaOutputWithContext(ctx context.Context) CloudServersCloudServerServerAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerServerAreaOutput)
}

// CloudServersCloudServerServerAreaArrayInput is an input type that accepts CloudServersCloudServerServerAreaArray and CloudServersCloudServerServerAreaArrayOutput values.
// You can construct a concrete instance of `CloudServersCloudServerServerAreaArrayInput` via:
//
//	CloudServersCloudServerServerAreaArray{ CloudServersCloudServerServerAreaArgs{...} }
type CloudServersCloudServerServerAreaArrayInput interface {
	pulumi.Input

	ToCloudServersCloudServerServerAreaArrayOutput() CloudServersCloudServerServerAreaArrayOutput
	ToCloudServersCloudServerServerAreaArrayOutputWithContext(context.Context) CloudServersCloudServerServerAreaArrayOutput
}

type CloudServersCloudServerServerAreaArray []CloudServersCloudServerServerAreaInput

func (CloudServersCloudServerServerAreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServerServerArea)(nil)).Elem()
}

func (i CloudServersCloudServerServerAreaArray) ToCloudServersCloudServerServerAreaArrayOutput() CloudServersCloudServerServerAreaArrayOutput {
	return i.ToCloudServersCloudServerServerAreaArrayOutputWithContext(context.Background())
}

func (i CloudServersCloudServerServerAreaArray) ToCloudServersCloudServerServerAreaArrayOutputWithContext(ctx context.Context) CloudServersCloudServerServerAreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerServerAreaArrayOutput)
}

type CloudServersCloudServerServerAreaOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerServerAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerServerArea)(nil)).Elem()
}

func (o CloudServersCloudServerServerAreaOutput) ToCloudServersCloudServerServerAreaOutput() CloudServersCloudServerServerAreaOutput {
	return o
}

func (o CloudServersCloudServerServerAreaOutput) ToCloudServersCloudServerServerAreaOutputWithContext(ctx context.Context) CloudServersCloudServerServerAreaOutput {
	return o
}

// The area info.
func (o CloudServersCloudServerServerAreaOutput) Area() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerServerArea) string { return v.Area }).(pulumi.StringOutput)
}

// The number of instance.
func (o CloudServersCloudServerServerAreaOutput) InstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v CloudServersCloudServerServerArea) int { return v.InstanceNum }).(pulumi.IntOutput)
}

// The isp info.
func (o CloudServersCloudServerServerAreaOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerServerArea) string { return v.Isp }).(pulumi.StringOutput)
}

type CloudServersCloudServerServerAreaArrayOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerServerAreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServerServerArea)(nil)).Elem()
}

func (o CloudServersCloudServerServerAreaArrayOutput) ToCloudServersCloudServerServerAreaArrayOutput() CloudServersCloudServerServerAreaArrayOutput {
	return o
}

func (o CloudServersCloudServerServerAreaArrayOutput) ToCloudServersCloudServerServerAreaArrayOutputWithContext(ctx context.Context) CloudServersCloudServerServerAreaArrayOutput {
	return o
}

func (o CloudServersCloudServerServerAreaArrayOutput) Index(i pulumi.IntInput) CloudServersCloudServerServerAreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServersCloudServerServerArea {
		return vs[0].([]CloudServersCloudServerServerArea)[vs[1].(int)]
	}).(CloudServersCloudServerServerAreaOutput)
}

type CloudServersCloudServerStorage struct {
	// The disk info of data.
	DataDisk CloudServersCloudServerStorageDataDisk `pulumi:"dataDisk"`
	// The disk list info of data.
	DataDiskLists []CloudServersCloudServerStorageDataDiskList `pulumi:"dataDiskLists"`
	// The disk info of system.
	SystemDisk CloudServersCloudServerStorageSystemDisk `pulumi:"systemDisk"`
}

// CloudServersCloudServerStorageInput is an input type that accepts CloudServersCloudServerStorageArgs and CloudServersCloudServerStorageOutput values.
// You can construct a concrete instance of `CloudServersCloudServerStorageInput` via:
//
//	CloudServersCloudServerStorageArgs{...}
type CloudServersCloudServerStorageInput interface {
	pulumi.Input

	ToCloudServersCloudServerStorageOutput() CloudServersCloudServerStorageOutput
	ToCloudServersCloudServerStorageOutputWithContext(context.Context) CloudServersCloudServerStorageOutput
}

type CloudServersCloudServerStorageArgs struct {
	// The disk info of data.
	DataDisk CloudServersCloudServerStorageDataDiskInput `pulumi:"dataDisk"`
	// The disk list info of data.
	DataDiskLists CloudServersCloudServerStorageDataDiskListArrayInput `pulumi:"dataDiskLists"`
	// The disk info of system.
	SystemDisk CloudServersCloudServerStorageSystemDiskInput `pulumi:"systemDisk"`
}

func (CloudServersCloudServerStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerStorage)(nil)).Elem()
}

func (i CloudServersCloudServerStorageArgs) ToCloudServersCloudServerStorageOutput() CloudServersCloudServerStorageOutput {
	return i.ToCloudServersCloudServerStorageOutputWithContext(context.Background())
}

func (i CloudServersCloudServerStorageArgs) ToCloudServersCloudServerStorageOutputWithContext(ctx context.Context) CloudServersCloudServerStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerStorageOutput)
}

type CloudServersCloudServerStorageOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerStorage)(nil)).Elem()
}

func (o CloudServersCloudServerStorageOutput) ToCloudServersCloudServerStorageOutput() CloudServersCloudServerStorageOutput {
	return o
}

func (o CloudServersCloudServerStorageOutput) ToCloudServersCloudServerStorageOutputWithContext(ctx context.Context) CloudServersCloudServerStorageOutput {
	return o
}

// The disk info of data.
func (o CloudServersCloudServerStorageOutput) DataDisk() CloudServersCloudServerStorageDataDiskOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorage) CloudServersCloudServerStorageDataDisk { return v.DataDisk }).(CloudServersCloudServerStorageDataDiskOutput)
}

// The disk list info of data.
func (o CloudServersCloudServerStorageOutput) DataDiskLists() CloudServersCloudServerStorageDataDiskListArrayOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorage) []CloudServersCloudServerStorageDataDiskList {
		return v.DataDiskLists
	}).(CloudServersCloudServerStorageDataDiskListArrayOutput)
}

// The disk info of system.
func (o CloudServersCloudServerStorageOutput) SystemDisk() CloudServersCloudServerStorageSystemDiskOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorage) CloudServersCloudServerStorageSystemDisk { return v.SystemDisk }).(CloudServersCloudServerStorageSystemDiskOutput)
}

type CloudServersCloudServerStorageDataDisk struct {
	// The capacity of storage.
	Capacity string `pulumi:"capacity"`
	// The type of storage.
	StorageType string `pulumi:"storageType"`
}

// CloudServersCloudServerStorageDataDiskInput is an input type that accepts CloudServersCloudServerStorageDataDiskArgs and CloudServersCloudServerStorageDataDiskOutput values.
// You can construct a concrete instance of `CloudServersCloudServerStorageDataDiskInput` via:
//
//	CloudServersCloudServerStorageDataDiskArgs{...}
type CloudServersCloudServerStorageDataDiskInput interface {
	pulumi.Input

	ToCloudServersCloudServerStorageDataDiskOutput() CloudServersCloudServerStorageDataDiskOutput
	ToCloudServersCloudServerStorageDataDiskOutputWithContext(context.Context) CloudServersCloudServerStorageDataDiskOutput
}

type CloudServersCloudServerStorageDataDiskArgs struct {
	// The capacity of storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The type of storage.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (CloudServersCloudServerStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerStorageDataDisk)(nil)).Elem()
}

func (i CloudServersCloudServerStorageDataDiskArgs) ToCloudServersCloudServerStorageDataDiskOutput() CloudServersCloudServerStorageDataDiskOutput {
	return i.ToCloudServersCloudServerStorageDataDiskOutputWithContext(context.Background())
}

func (i CloudServersCloudServerStorageDataDiskArgs) ToCloudServersCloudServerStorageDataDiskOutputWithContext(ctx context.Context) CloudServersCloudServerStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerStorageDataDiskOutput)
}

type CloudServersCloudServerStorageDataDiskOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerStorageDataDisk)(nil)).Elem()
}

func (o CloudServersCloudServerStorageDataDiskOutput) ToCloudServersCloudServerStorageDataDiskOutput() CloudServersCloudServerStorageDataDiskOutput {
	return o
}

func (o CloudServersCloudServerStorageDataDiskOutput) ToCloudServersCloudServerStorageDataDiskOutputWithContext(ctx context.Context) CloudServersCloudServerStorageDataDiskOutput {
	return o
}

// The capacity of storage.
func (o CloudServersCloudServerStorageDataDiskOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorageDataDisk) string { return v.Capacity }).(pulumi.StringOutput)
}

// The type of storage.
func (o CloudServersCloudServerStorageDataDiskOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorageDataDisk) string { return v.StorageType }).(pulumi.StringOutput)
}

type CloudServersCloudServerStorageDataDiskList struct {
	// The capacity of storage.
	Capacity string `pulumi:"capacity"`
	// The type of storage.
	StorageType string `pulumi:"storageType"`
}

// CloudServersCloudServerStorageDataDiskListInput is an input type that accepts CloudServersCloudServerStorageDataDiskListArgs and CloudServersCloudServerStorageDataDiskListOutput values.
// You can construct a concrete instance of `CloudServersCloudServerStorageDataDiskListInput` via:
//
//	CloudServersCloudServerStorageDataDiskListArgs{...}
type CloudServersCloudServerStorageDataDiskListInput interface {
	pulumi.Input

	ToCloudServersCloudServerStorageDataDiskListOutput() CloudServersCloudServerStorageDataDiskListOutput
	ToCloudServersCloudServerStorageDataDiskListOutputWithContext(context.Context) CloudServersCloudServerStorageDataDiskListOutput
}

type CloudServersCloudServerStorageDataDiskListArgs struct {
	// The capacity of storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The type of storage.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (CloudServersCloudServerStorageDataDiskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerStorageDataDiskList)(nil)).Elem()
}

func (i CloudServersCloudServerStorageDataDiskListArgs) ToCloudServersCloudServerStorageDataDiskListOutput() CloudServersCloudServerStorageDataDiskListOutput {
	return i.ToCloudServersCloudServerStorageDataDiskListOutputWithContext(context.Background())
}

func (i CloudServersCloudServerStorageDataDiskListArgs) ToCloudServersCloudServerStorageDataDiskListOutputWithContext(ctx context.Context) CloudServersCloudServerStorageDataDiskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerStorageDataDiskListOutput)
}

// CloudServersCloudServerStorageDataDiskListArrayInput is an input type that accepts CloudServersCloudServerStorageDataDiskListArray and CloudServersCloudServerStorageDataDiskListArrayOutput values.
// You can construct a concrete instance of `CloudServersCloudServerStorageDataDiskListArrayInput` via:
//
//	CloudServersCloudServerStorageDataDiskListArray{ CloudServersCloudServerStorageDataDiskListArgs{...} }
type CloudServersCloudServerStorageDataDiskListArrayInput interface {
	pulumi.Input

	ToCloudServersCloudServerStorageDataDiskListArrayOutput() CloudServersCloudServerStorageDataDiskListArrayOutput
	ToCloudServersCloudServerStorageDataDiskListArrayOutputWithContext(context.Context) CloudServersCloudServerStorageDataDiskListArrayOutput
}

type CloudServersCloudServerStorageDataDiskListArray []CloudServersCloudServerStorageDataDiskListInput

func (CloudServersCloudServerStorageDataDiskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServerStorageDataDiskList)(nil)).Elem()
}

func (i CloudServersCloudServerStorageDataDiskListArray) ToCloudServersCloudServerStorageDataDiskListArrayOutput() CloudServersCloudServerStorageDataDiskListArrayOutput {
	return i.ToCloudServersCloudServerStorageDataDiskListArrayOutputWithContext(context.Background())
}

func (i CloudServersCloudServerStorageDataDiskListArray) ToCloudServersCloudServerStorageDataDiskListArrayOutputWithContext(ctx context.Context) CloudServersCloudServerStorageDataDiskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerStorageDataDiskListArrayOutput)
}

type CloudServersCloudServerStorageDataDiskListOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerStorageDataDiskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerStorageDataDiskList)(nil)).Elem()
}

func (o CloudServersCloudServerStorageDataDiskListOutput) ToCloudServersCloudServerStorageDataDiskListOutput() CloudServersCloudServerStorageDataDiskListOutput {
	return o
}

func (o CloudServersCloudServerStorageDataDiskListOutput) ToCloudServersCloudServerStorageDataDiskListOutputWithContext(ctx context.Context) CloudServersCloudServerStorageDataDiskListOutput {
	return o
}

// The capacity of storage.
func (o CloudServersCloudServerStorageDataDiskListOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorageDataDiskList) string { return v.Capacity }).(pulumi.StringOutput)
}

// The type of storage.
func (o CloudServersCloudServerStorageDataDiskListOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorageDataDiskList) string { return v.StorageType }).(pulumi.StringOutput)
}

type CloudServersCloudServerStorageDataDiskListArrayOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerStorageDataDiskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudServersCloudServerStorageDataDiskList)(nil)).Elem()
}

func (o CloudServersCloudServerStorageDataDiskListArrayOutput) ToCloudServersCloudServerStorageDataDiskListArrayOutput() CloudServersCloudServerStorageDataDiskListArrayOutput {
	return o
}

func (o CloudServersCloudServerStorageDataDiskListArrayOutput) ToCloudServersCloudServerStorageDataDiskListArrayOutputWithContext(ctx context.Context) CloudServersCloudServerStorageDataDiskListArrayOutput {
	return o
}

func (o CloudServersCloudServerStorageDataDiskListArrayOutput) Index(i pulumi.IntInput) CloudServersCloudServerStorageDataDiskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudServersCloudServerStorageDataDiskList {
		return vs[0].([]CloudServersCloudServerStorageDataDiskList)[vs[1].(int)]
	}).(CloudServersCloudServerStorageDataDiskListOutput)
}

type CloudServersCloudServerStorageSystemDisk struct {
	// The capacity of storage.
	Capacity string `pulumi:"capacity"`
	// The type of storage.
	StorageType string `pulumi:"storageType"`
}

// CloudServersCloudServerStorageSystemDiskInput is an input type that accepts CloudServersCloudServerStorageSystemDiskArgs and CloudServersCloudServerStorageSystemDiskOutput values.
// You can construct a concrete instance of `CloudServersCloudServerStorageSystemDiskInput` via:
//
//	CloudServersCloudServerStorageSystemDiskArgs{...}
type CloudServersCloudServerStorageSystemDiskInput interface {
	pulumi.Input

	ToCloudServersCloudServerStorageSystemDiskOutput() CloudServersCloudServerStorageSystemDiskOutput
	ToCloudServersCloudServerStorageSystemDiskOutputWithContext(context.Context) CloudServersCloudServerStorageSystemDiskOutput
}

type CloudServersCloudServerStorageSystemDiskArgs struct {
	// The capacity of storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The type of storage.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (CloudServersCloudServerStorageSystemDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerStorageSystemDisk)(nil)).Elem()
}

func (i CloudServersCloudServerStorageSystemDiskArgs) ToCloudServersCloudServerStorageSystemDiskOutput() CloudServersCloudServerStorageSystemDiskOutput {
	return i.ToCloudServersCloudServerStorageSystemDiskOutputWithContext(context.Background())
}

func (i CloudServersCloudServerStorageSystemDiskArgs) ToCloudServersCloudServerStorageSystemDiskOutputWithContext(ctx context.Context) CloudServersCloudServerStorageSystemDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudServersCloudServerStorageSystemDiskOutput)
}

type CloudServersCloudServerStorageSystemDiskOutput struct{ *pulumi.OutputState }

func (CloudServersCloudServerStorageSystemDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudServersCloudServerStorageSystemDisk)(nil)).Elem()
}

func (o CloudServersCloudServerStorageSystemDiskOutput) ToCloudServersCloudServerStorageSystemDiskOutput() CloudServersCloudServerStorageSystemDiskOutput {
	return o
}

func (o CloudServersCloudServerStorageSystemDiskOutput) ToCloudServersCloudServerStorageSystemDiskOutputWithContext(ctx context.Context) CloudServersCloudServerStorageSystemDiskOutput {
	return o
}

// The capacity of storage.
func (o CloudServersCloudServerStorageSystemDiskOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorageSystemDisk) string { return v.Capacity }).(pulumi.StringOutput)
}

// The type of storage.
func (o CloudServersCloudServerStorageSystemDiskOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudServersCloudServerStorageSystemDisk) string { return v.StorageType }).(pulumi.StringOutput)
}

type InstanceTypesInstanceTypeConfig struct {
	// The cpu of instance type.
	Cpu int `pulumi:"cpu"`
	// The gpu of instance type.
	Gpu int `pulumi:"gpu"`
	// The gpu spec of instance.
	GpuSpec string `pulumi:"gpuSpec"`
	// The type of instance.
	InstanceType string `pulumi:"instanceType"`
	// The type family of instance.
	InstanceTypeFamily string `pulumi:"instanceTypeFamily"`
	// The name of instance type family.
	InstanceTypeFamilyName string `pulumi:"instanceTypeFamilyName"`
	// The memory of instance type.
	Memory int `pulumi:"memory"`
	// The config of storage.
	Storages []InstanceTypesInstanceTypeConfigStorage `pulumi:"storages"`
}

// InstanceTypesInstanceTypeConfigInput is an input type that accepts InstanceTypesInstanceTypeConfigArgs and InstanceTypesInstanceTypeConfigOutput values.
// You can construct a concrete instance of `InstanceTypesInstanceTypeConfigInput` via:
//
//	InstanceTypesInstanceTypeConfigArgs{...}
type InstanceTypesInstanceTypeConfigInput interface {
	pulumi.Input

	ToInstanceTypesInstanceTypeConfigOutput() InstanceTypesInstanceTypeConfigOutput
	ToInstanceTypesInstanceTypeConfigOutputWithContext(context.Context) InstanceTypesInstanceTypeConfigOutput
}

type InstanceTypesInstanceTypeConfigArgs struct {
	// The cpu of instance type.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// The gpu of instance type.
	Gpu pulumi.IntInput `pulumi:"gpu"`
	// The gpu spec of instance.
	GpuSpec pulumi.StringInput `pulumi:"gpuSpec"`
	// The type of instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The type family of instance.
	InstanceTypeFamily pulumi.StringInput `pulumi:"instanceTypeFamily"`
	// The name of instance type family.
	InstanceTypeFamilyName pulumi.StringInput `pulumi:"instanceTypeFamilyName"`
	// The memory of instance type.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The config of storage.
	Storages InstanceTypesInstanceTypeConfigStorageArrayInput `pulumi:"storages"`
}

func (InstanceTypesInstanceTypeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypesInstanceTypeConfig)(nil)).Elem()
}

func (i InstanceTypesInstanceTypeConfigArgs) ToInstanceTypesInstanceTypeConfigOutput() InstanceTypesInstanceTypeConfigOutput {
	return i.ToInstanceTypesInstanceTypeConfigOutputWithContext(context.Background())
}

func (i InstanceTypesInstanceTypeConfigArgs) ToInstanceTypesInstanceTypeConfigOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypesInstanceTypeConfigOutput)
}

// InstanceTypesInstanceTypeConfigArrayInput is an input type that accepts InstanceTypesInstanceTypeConfigArray and InstanceTypesInstanceTypeConfigArrayOutput values.
// You can construct a concrete instance of `InstanceTypesInstanceTypeConfigArrayInput` via:
//
//	InstanceTypesInstanceTypeConfigArray{ InstanceTypesInstanceTypeConfigArgs{...} }
type InstanceTypesInstanceTypeConfigArrayInput interface {
	pulumi.Input

	ToInstanceTypesInstanceTypeConfigArrayOutput() InstanceTypesInstanceTypeConfigArrayOutput
	ToInstanceTypesInstanceTypeConfigArrayOutputWithContext(context.Context) InstanceTypesInstanceTypeConfigArrayOutput
}

type InstanceTypesInstanceTypeConfigArray []InstanceTypesInstanceTypeConfigInput

func (InstanceTypesInstanceTypeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTypesInstanceTypeConfig)(nil)).Elem()
}

func (i InstanceTypesInstanceTypeConfigArray) ToInstanceTypesInstanceTypeConfigArrayOutput() InstanceTypesInstanceTypeConfigArrayOutput {
	return i.ToInstanceTypesInstanceTypeConfigArrayOutputWithContext(context.Background())
}

func (i InstanceTypesInstanceTypeConfigArray) ToInstanceTypesInstanceTypeConfigArrayOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypesInstanceTypeConfigArrayOutput)
}

type InstanceTypesInstanceTypeConfigOutput struct{ *pulumi.OutputState }

func (InstanceTypesInstanceTypeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypesInstanceTypeConfig)(nil)).Elem()
}

func (o InstanceTypesInstanceTypeConfigOutput) ToInstanceTypesInstanceTypeConfigOutput() InstanceTypesInstanceTypeConfigOutput {
	return o
}

func (o InstanceTypesInstanceTypeConfigOutput) ToInstanceTypesInstanceTypeConfigOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeConfigOutput {
	return o
}

// The cpu of instance type.
func (o InstanceTypesInstanceTypeConfigOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfig) int { return v.Cpu }).(pulumi.IntOutput)
}

// The gpu of instance type.
func (o InstanceTypesInstanceTypeConfigOutput) Gpu() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfig) int { return v.Gpu }).(pulumi.IntOutput)
}

// The gpu spec of instance.
func (o InstanceTypesInstanceTypeConfigOutput) GpuSpec() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfig) string { return v.GpuSpec }).(pulumi.StringOutput)
}

// The type of instance.
func (o InstanceTypesInstanceTypeConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The type family of instance.
func (o InstanceTypesInstanceTypeConfigOutput) InstanceTypeFamily() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfig) string { return v.InstanceTypeFamily }).(pulumi.StringOutput)
}

// The name of instance type family.
func (o InstanceTypesInstanceTypeConfigOutput) InstanceTypeFamilyName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfig) string { return v.InstanceTypeFamilyName }).(pulumi.StringOutput)
}

// The memory of instance type.
func (o InstanceTypesInstanceTypeConfigOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfig) int { return v.Memory }).(pulumi.IntOutput)
}

// The config of storage.
func (o InstanceTypesInstanceTypeConfigOutput) Storages() InstanceTypesInstanceTypeConfigStorageArrayOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfig) []InstanceTypesInstanceTypeConfigStorage { return v.Storages }).(InstanceTypesInstanceTypeConfigStorageArrayOutput)
}

type InstanceTypesInstanceTypeConfigArrayOutput struct{ *pulumi.OutputState }

func (InstanceTypesInstanceTypeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTypesInstanceTypeConfig)(nil)).Elem()
}

func (o InstanceTypesInstanceTypeConfigArrayOutput) ToInstanceTypesInstanceTypeConfigArrayOutput() InstanceTypesInstanceTypeConfigArrayOutput {
	return o
}

func (o InstanceTypesInstanceTypeConfigArrayOutput) ToInstanceTypesInstanceTypeConfigArrayOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeConfigArrayOutput {
	return o
}

func (o InstanceTypesInstanceTypeConfigArrayOutput) Index(i pulumi.IntInput) InstanceTypesInstanceTypeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTypesInstanceTypeConfig {
		return vs[0].([]InstanceTypesInstanceTypeConfig)[vs[1].(int)]
	}).(InstanceTypesInstanceTypeConfigOutput)
}

type InstanceTypesInstanceTypeConfigStorage struct {
	// The amount of local storage.
	LocalStorageAmount int `pulumi:"localStorageAmount"`
	// The capacity of local storage.
	LocalStorageCapacity int `pulumi:"localStorageCapacity"`
	// The local storage category.
	LocalStorageCategory string `pulumi:"localStorageCategory"`
	// The unit of local storage.
	LocalStorageUnit string `pulumi:"localStorageUnit"`
}

// InstanceTypesInstanceTypeConfigStorageInput is an input type that accepts InstanceTypesInstanceTypeConfigStorageArgs and InstanceTypesInstanceTypeConfigStorageOutput values.
// You can construct a concrete instance of `InstanceTypesInstanceTypeConfigStorageInput` via:
//
//	InstanceTypesInstanceTypeConfigStorageArgs{...}
type InstanceTypesInstanceTypeConfigStorageInput interface {
	pulumi.Input

	ToInstanceTypesInstanceTypeConfigStorageOutput() InstanceTypesInstanceTypeConfigStorageOutput
	ToInstanceTypesInstanceTypeConfigStorageOutputWithContext(context.Context) InstanceTypesInstanceTypeConfigStorageOutput
}

type InstanceTypesInstanceTypeConfigStorageArgs struct {
	// The amount of local storage.
	LocalStorageAmount pulumi.IntInput `pulumi:"localStorageAmount"`
	// The capacity of local storage.
	LocalStorageCapacity pulumi.IntInput `pulumi:"localStorageCapacity"`
	// The local storage category.
	LocalStorageCategory pulumi.StringInput `pulumi:"localStorageCategory"`
	// The unit of local storage.
	LocalStorageUnit pulumi.StringInput `pulumi:"localStorageUnit"`
}

func (InstanceTypesInstanceTypeConfigStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypesInstanceTypeConfigStorage)(nil)).Elem()
}

func (i InstanceTypesInstanceTypeConfigStorageArgs) ToInstanceTypesInstanceTypeConfigStorageOutput() InstanceTypesInstanceTypeConfigStorageOutput {
	return i.ToInstanceTypesInstanceTypeConfigStorageOutputWithContext(context.Background())
}

func (i InstanceTypesInstanceTypeConfigStorageArgs) ToInstanceTypesInstanceTypeConfigStorageOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeConfigStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypesInstanceTypeConfigStorageOutput)
}

// InstanceTypesInstanceTypeConfigStorageArrayInput is an input type that accepts InstanceTypesInstanceTypeConfigStorageArray and InstanceTypesInstanceTypeConfigStorageArrayOutput values.
// You can construct a concrete instance of `InstanceTypesInstanceTypeConfigStorageArrayInput` via:
//
//	InstanceTypesInstanceTypeConfigStorageArray{ InstanceTypesInstanceTypeConfigStorageArgs{...} }
type InstanceTypesInstanceTypeConfigStorageArrayInput interface {
	pulumi.Input

	ToInstanceTypesInstanceTypeConfigStorageArrayOutput() InstanceTypesInstanceTypeConfigStorageArrayOutput
	ToInstanceTypesInstanceTypeConfigStorageArrayOutputWithContext(context.Context) InstanceTypesInstanceTypeConfigStorageArrayOutput
}

type InstanceTypesInstanceTypeConfigStorageArray []InstanceTypesInstanceTypeConfigStorageInput

func (InstanceTypesInstanceTypeConfigStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTypesInstanceTypeConfigStorage)(nil)).Elem()
}

func (i InstanceTypesInstanceTypeConfigStorageArray) ToInstanceTypesInstanceTypeConfigStorageArrayOutput() InstanceTypesInstanceTypeConfigStorageArrayOutput {
	return i.ToInstanceTypesInstanceTypeConfigStorageArrayOutputWithContext(context.Background())
}

func (i InstanceTypesInstanceTypeConfigStorageArray) ToInstanceTypesInstanceTypeConfigStorageArrayOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeConfigStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTypesInstanceTypeConfigStorageArrayOutput)
}

type InstanceTypesInstanceTypeConfigStorageOutput struct{ *pulumi.OutputState }

func (InstanceTypesInstanceTypeConfigStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTypesInstanceTypeConfigStorage)(nil)).Elem()
}

func (o InstanceTypesInstanceTypeConfigStorageOutput) ToInstanceTypesInstanceTypeConfigStorageOutput() InstanceTypesInstanceTypeConfigStorageOutput {
	return o
}

func (o InstanceTypesInstanceTypeConfigStorageOutput) ToInstanceTypesInstanceTypeConfigStorageOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeConfigStorageOutput {
	return o
}

// The amount of local storage.
func (o InstanceTypesInstanceTypeConfigStorageOutput) LocalStorageAmount() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfigStorage) int { return v.LocalStorageAmount }).(pulumi.IntOutput)
}

// The capacity of local storage.
func (o InstanceTypesInstanceTypeConfigStorageOutput) LocalStorageCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfigStorage) int { return v.LocalStorageCapacity }).(pulumi.IntOutput)
}

// The local storage category.
func (o InstanceTypesInstanceTypeConfigStorageOutput) LocalStorageCategory() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfigStorage) string { return v.LocalStorageCategory }).(pulumi.StringOutput)
}

// The unit of local storage.
func (o InstanceTypesInstanceTypeConfigStorageOutput) LocalStorageUnit() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTypesInstanceTypeConfigStorage) string { return v.LocalStorageUnit }).(pulumi.StringOutput)
}

type InstanceTypesInstanceTypeConfigStorageArrayOutput struct{ *pulumi.OutputState }

func (InstanceTypesInstanceTypeConfigStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTypesInstanceTypeConfigStorage)(nil)).Elem()
}

func (o InstanceTypesInstanceTypeConfigStorageArrayOutput) ToInstanceTypesInstanceTypeConfigStorageArrayOutput() InstanceTypesInstanceTypeConfigStorageArrayOutput {
	return o
}

func (o InstanceTypesInstanceTypeConfigStorageArrayOutput) ToInstanceTypesInstanceTypeConfigStorageArrayOutputWithContext(ctx context.Context) InstanceTypesInstanceTypeConfigStorageArrayOutput {
	return o
}

func (o InstanceTypesInstanceTypeConfigStorageArrayOutput) Index(i pulumi.IntInput) InstanceTypesInstanceTypeConfigStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTypesInstanceTypeConfigStorage {
		return vs[0].([]InstanceTypesInstanceTypeConfigStorage)[vs[1].(int)]
	}).(InstanceTypesInstanceTypeConfigStorageOutput)
}

type InstancesInstance struct {
	// The id of cloud server.
	CloudServerIdentity string `pulumi:"cloudServerIdentity"`
	// The name of cloud server.
	CloudServerName string `pulumi:"cloudServerName"`
	// The cluster info.
	Cluster InstancesInstanceCluster `pulumi:"cluster"`
	// The cpu of instance.
	Cpu string `pulumi:"cpu"`
	// The create time of instance.
	CreateTime int `pulumi:"createTime"`
	// The creator of instance.
	Creator string `pulumi:"creator"`
	// The delete time of instance.
	DeleteTime int `pulumi:"deleteTime"`
	// The end time of instance.
	EndTime int `pulumi:"endTime"`
	// The config of gpu.
	Gpu InstancesInstanceGpu `pulumi:"gpu"`
	// The Id of instance.
	Id string `pulumi:"id"`
	// The config of image.
	Image InstancesInstanceImage `pulumi:"image"`
	// The Id of instance.
	InstanceIdentity string `pulumi:"instanceIdentity"`
	// The name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The memory of instance.
	Mem string `pulumi:"mem"`
	// The config of network.
	Network InstancesInstanceNetwork `pulumi:"network"`
	// The spec of instance.
	Spec string `pulumi:"spec"`
	// The spec display of instance.
	SpecDisplay string `pulumi:"specDisplay"`
	// The start time of instance.
	StartTime int `pulumi:"startTime"`
	// The status of instance.
	Status string `pulumi:"status"`
	// The config of storage.
	Storage InstancesInstanceStorage `pulumi:"storage"`
	// The subnet cidr.
	SubnetCidr string `pulumi:"subnetCidr"`
	// The update time of instance.
	UpdateTime int `pulumi:"updateTime"`
	// The id of vpc.
	VpcIdentity string `pulumi:"vpcIdentity"`
}

// InstancesInstanceInput is an input type that accepts InstancesInstanceArgs and InstancesInstanceOutput values.
// You can construct a concrete instance of `InstancesInstanceInput` via:
//
//	InstancesInstanceArgs{...}
type InstancesInstanceInput interface {
	pulumi.Input

	ToInstancesInstanceOutput() InstancesInstanceOutput
	ToInstancesInstanceOutputWithContext(context.Context) InstancesInstanceOutput
}

type InstancesInstanceArgs struct {
	// The id of cloud server.
	CloudServerIdentity pulumi.StringInput `pulumi:"cloudServerIdentity"`
	// The name of cloud server.
	CloudServerName pulumi.StringInput `pulumi:"cloudServerName"`
	// The cluster info.
	Cluster InstancesInstanceClusterInput `pulumi:"cluster"`
	// The cpu of instance.
	Cpu pulumi.StringInput `pulumi:"cpu"`
	// The create time of instance.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The creator of instance.
	Creator pulumi.StringInput `pulumi:"creator"`
	// The delete time of instance.
	DeleteTime pulumi.IntInput `pulumi:"deleteTime"`
	// The end time of instance.
	EndTime pulumi.IntInput `pulumi:"endTime"`
	// The config of gpu.
	Gpu InstancesInstanceGpuInput `pulumi:"gpu"`
	// The Id of instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The config of image.
	Image InstancesInstanceImageInput `pulumi:"image"`
	// The Id of instance.
	InstanceIdentity pulumi.StringInput `pulumi:"instanceIdentity"`
	// The name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The memory of instance.
	Mem pulumi.StringInput `pulumi:"mem"`
	// The config of network.
	Network InstancesInstanceNetworkInput `pulumi:"network"`
	// The spec of instance.
	Spec pulumi.StringInput `pulumi:"spec"`
	// The spec display of instance.
	SpecDisplay pulumi.StringInput `pulumi:"specDisplay"`
	// The start time of instance.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// The status of instance.
	Status pulumi.StringInput `pulumi:"status"`
	// The config of storage.
	Storage InstancesInstanceStorageInput `pulumi:"storage"`
	// The subnet cidr.
	SubnetCidr pulumi.StringInput `pulumi:"subnetCidr"`
	// The update time of instance.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
	// The id of vpc.
	VpcIdentity pulumi.StringInput `pulumi:"vpcIdentity"`
}

func (InstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstance)(nil)).Elem()
}

func (i InstancesInstanceArgs) ToInstancesInstanceOutput() InstancesInstanceOutput {
	return i.ToInstancesInstanceOutputWithContext(context.Background())
}

func (i InstancesInstanceArgs) ToInstancesInstanceOutputWithContext(ctx context.Context) InstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceOutput)
}

// InstancesInstanceArrayInput is an input type that accepts InstancesInstanceArray and InstancesInstanceArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceArrayInput` via:
//
//	InstancesInstanceArray{ InstancesInstanceArgs{...} }
type InstancesInstanceArrayInput interface {
	pulumi.Input

	ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput
	ToInstancesInstanceArrayOutputWithContext(context.Context) InstancesInstanceArrayOutput
}

type InstancesInstanceArray []InstancesInstanceInput

func (InstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstance)(nil)).Elem()
}

func (i InstancesInstanceArray) ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput {
	return i.ToInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceArray) ToInstancesInstanceArrayOutputWithContext(ctx context.Context) InstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceArrayOutput)
}

type InstancesInstanceOutput struct{ *pulumi.OutputState }

func (InstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstance)(nil)).Elem()
}

func (o InstancesInstanceOutput) ToInstancesInstanceOutput() InstancesInstanceOutput {
	return o
}

func (o InstancesInstanceOutput) ToInstancesInstanceOutputWithContext(ctx context.Context) InstancesInstanceOutput {
	return o
}

// The id of cloud server.
func (o InstancesInstanceOutput) CloudServerIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.CloudServerIdentity }).(pulumi.StringOutput)
}

// The name of cloud server.
func (o InstancesInstanceOutput) CloudServerName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.CloudServerName }).(pulumi.StringOutput)
}

// The cluster info.
func (o InstancesInstanceOutput) Cluster() InstancesInstanceClusterOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceCluster { return v.Cluster }).(InstancesInstanceClusterOutput)
}

// The cpu of instance.
func (o InstancesInstanceOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Cpu }).(pulumi.StringOutput)
}

// The create time of instance.
func (o InstancesInstanceOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The creator of instance.
func (o InstancesInstanceOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Creator }).(pulumi.StringOutput)
}

// The delete time of instance.
func (o InstancesInstanceOutput) DeleteTime() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.DeleteTime }).(pulumi.IntOutput)
}

// The end time of instance.
func (o InstancesInstanceOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.EndTime }).(pulumi.IntOutput)
}

// The config of gpu.
func (o InstancesInstanceOutput) Gpu() InstancesInstanceGpuOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceGpu { return v.Gpu }).(InstancesInstanceGpuOutput)
}

// The Id of instance.
func (o InstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The config of image.
func (o InstancesInstanceOutput) Image() InstancesInstanceImageOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceImage { return v.Image }).(InstancesInstanceImageOutput)
}

// The Id of instance.
func (o InstancesInstanceOutput) InstanceIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceIdentity }).(pulumi.StringOutput)
}

// The name of instance.
func (o InstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The memory of instance.
func (o InstancesInstanceOutput) Mem() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Mem }).(pulumi.StringOutput)
}

// The config of network.
func (o InstancesInstanceOutput) Network() InstancesInstanceNetworkOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceNetwork { return v.Network }).(InstancesInstanceNetworkOutput)
}

// The spec of instance.
func (o InstancesInstanceOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Spec }).(pulumi.StringOutput)
}

// The spec display of instance.
func (o InstancesInstanceOutput) SpecDisplay() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.SpecDisplay }).(pulumi.StringOutput)
}

// The start time of instance.
func (o InstancesInstanceOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.StartTime }).(pulumi.IntOutput)
}

// The status of instance.
func (o InstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The config of storage.
func (o InstancesInstanceOutput) Storage() InstancesInstanceStorageOutput {
	return o.ApplyT(func(v InstancesInstance) InstancesInstanceStorage { return v.Storage }).(InstancesInstanceStorageOutput)
}

// The subnet cidr.
func (o InstancesInstanceOutput) SubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.SubnetCidr }).(pulumi.StringOutput)
}

// The update time of instance.
func (o InstancesInstanceOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstance) int { return v.UpdateTime }).(pulumi.IntOutput)
}

// The id of vpc.
func (o InstancesInstanceOutput) VpcIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstance) string { return v.VpcIdentity }).(pulumi.StringOutput)
}

type InstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstance)(nil)).Elem()
}

func (o InstancesInstanceArrayOutput) ToInstancesInstanceArrayOutput() InstancesInstanceArrayOutput {
	return o
}

func (o InstancesInstanceArrayOutput) ToInstancesInstanceArrayOutputWithContext(ctx context.Context) InstancesInstanceArrayOutput {
	return o
}

func (o InstancesInstanceArrayOutput) Index(i pulumi.IntInput) InstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstance {
		return vs[0].([]InstancesInstance)[vs[1].(int)]
	}).(InstancesInstanceOutput)
}

type InstancesInstanceCluster struct {
	// The alias of cluster.
	Alias string `pulumi:"alias"`
	// The city of cluster.
	City string `pulumi:"city"`
	// The name of cluster.
	ClusterName string `pulumi:"clusterName"`
	// The country of cluster.
	Country string `pulumi:"country"`
	// The isp info.
	Isp string `pulumi:"isp"`
	// The level of cluster.
	Level string `pulumi:"level"`
	// The province of cluster.
	Province string `pulumi:"province"`
	// The region of cluster.
	Region string `pulumi:"region"`
}

// InstancesInstanceClusterInput is an input type that accepts InstancesInstanceClusterArgs and InstancesInstanceClusterOutput values.
// You can construct a concrete instance of `InstancesInstanceClusterInput` via:
//
//	InstancesInstanceClusterArgs{...}
type InstancesInstanceClusterInput interface {
	pulumi.Input

	ToInstancesInstanceClusterOutput() InstancesInstanceClusterOutput
	ToInstancesInstanceClusterOutputWithContext(context.Context) InstancesInstanceClusterOutput
}

type InstancesInstanceClusterArgs struct {
	// The alias of cluster.
	Alias pulumi.StringInput `pulumi:"alias"`
	// The city of cluster.
	City pulumi.StringInput `pulumi:"city"`
	// The name of cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The country of cluster.
	Country pulumi.StringInput `pulumi:"country"`
	// The isp info.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The level of cluster.
	Level pulumi.StringInput `pulumi:"level"`
	// The province of cluster.
	Province pulumi.StringInput `pulumi:"province"`
	// The region of cluster.
	Region pulumi.StringInput `pulumi:"region"`
}

func (InstancesInstanceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceCluster)(nil)).Elem()
}

func (i InstancesInstanceClusterArgs) ToInstancesInstanceClusterOutput() InstancesInstanceClusterOutput {
	return i.ToInstancesInstanceClusterOutputWithContext(context.Background())
}

func (i InstancesInstanceClusterArgs) ToInstancesInstanceClusterOutputWithContext(ctx context.Context) InstancesInstanceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceClusterOutput)
}

type InstancesInstanceClusterOutput struct{ *pulumi.OutputState }

func (InstancesInstanceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceCluster)(nil)).Elem()
}

func (o InstancesInstanceClusterOutput) ToInstancesInstanceClusterOutput() InstancesInstanceClusterOutput {
	return o
}

func (o InstancesInstanceClusterOutput) ToInstancesInstanceClusterOutputWithContext(ctx context.Context) InstancesInstanceClusterOutput {
	return o
}

// The alias of cluster.
func (o InstancesInstanceClusterOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceCluster) string { return v.Alias }).(pulumi.StringOutput)
}

// The city of cluster.
func (o InstancesInstanceClusterOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceCluster) string { return v.City }).(pulumi.StringOutput)
}

// The name of cluster.
func (o InstancesInstanceClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceCluster) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The country of cluster.
func (o InstancesInstanceClusterOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceCluster) string { return v.Country }).(pulumi.StringOutput)
}

// The isp info.
func (o InstancesInstanceClusterOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceCluster) string { return v.Isp }).(pulumi.StringOutput)
}

// The level of cluster.
func (o InstancesInstanceClusterOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceCluster) string { return v.Level }).(pulumi.StringOutput)
}

// The province of cluster.
func (o InstancesInstanceClusterOutput) Province() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceCluster) string { return v.Province }).(pulumi.StringOutput)
}

// The region of cluster.
func (o InstancesInstanceClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceCluster) string { return v.Region }).(pulumi.StringOutput)
}

type InstancesInstanceGpu struct {
	// The list gpu info.
	Gpuses []InstancesInstanceGpuGpus `pulumi:"gpuses"`
}

// InstancesInstanceGpuInput is an input type that accepts InstancesInstanceGpuArgs and InstancesInstanceGpuOutput values.
// You can construct a concrete instance of `InstancesInstanceGpuInput` via:
//
//	InstancesInstanceGpuArgs{...}
type InstancesInstanceGpuInput interface {
	pulumi.Input

	ToInstancesInstanceGpuOutput() InstancesInstanceGpuOutput
	ToInstancesInstanceGpuOutputWithContext(context.Context) InstancesInstanceGpuOutput
}

type InstancesInstanceGpuArgs struct {
	// The list gpu info.
	Gpuses InstancesInstanceGpuGpusArrayInput `pulumi:"gpuses"`
}

func (InstancesInstanceGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceGpu)(nil)).Elem()
}

func (i InstancesInstanceGpuArgs) ToInstancesInstanceGpuOutput() InstancesInstanceGpuOutput {
	return i.ToInstancesInstanceGpuOutputWithContext(context.Background())
}

func (i InstancesInstanceGpuArgs) ToInstancesInstanceGpuOutputWithContext(ctx context.Context) InstancesInstanceGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceGpuOutput)
}

type InstancesInstanceGpuOutput struct{ *pulumi.OutputState }

func (InstancesInstanceGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceGpu)(nil)).Elem()
}

func (o InstancesInstanceGpuOutput) ToInstancesInstanceGpuOutput() InstancesInstanceGpuOutput {
	return o
}

func (o InstancesInstanceGpuOutput) ToInstancesInstanceGpuOutputWithContext(ctx context.Context) InstancesInstanceGpuOutput {
	return o
}

// The list gpu info.
func (o InstancesInstanceGpuOutput) Gpuses() InstancesInstanceGpuGpusArrayOutput {
	return o.ApplyT(func(v InstancesInstanceGpu) []InstancesInstanceGpuGpus { return v.Gpuses }).(InstancesInstanceGpuGpusArrayOutput)
}

type InstancesInstanceGpuGpus struct {
	// The spec of gpu.
	GpuSpec InstancesInstanceGpuGpusGpuSpec `pulumi:"gpuSpec"`
	// The number of gpu.
	Num int `pulumi:"num"`
}

// InstancesInstanceGpuGpusInput is an input type that accepts InstancesInstanceGpuGpusArgs and InstancesInstanceGpuGpusOutput values.
// You can construct a concrete instance of `InstancesInstanceGpuGpusInput` via:
//
//	InstancesInstanceGpuGpusArgs{...}
type InstancesInstanceGpuGpusInput interface {
	pulumi.Input

	ToInstancesInstanceGpuGpusOutput() InstancesInstanceGpuGpusOutput
	ToInstancesInstanceGpuGpusOutputWithContext(context.Context) InstancesInstanceGpuGpusOutput
}

type InstancesInstanceGpuGpusArgs struct {
	// The spec of gpu.
	GpuSpec InstancesInstanceGpuGpusGpuSpecInput `pulumi:"gpuSpec"`
	// The number of gpu.
	Num pulumi.IntInput `pulumi:"num"`
}

func (InstancesInstanceGpuGpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceGpuGpus)(nil)).Elem()
}

func (i InstancesInstanceGpuGpusArgs) ToInstancesInstanceGpuGpusOutput() InstancesInstanceGpuGpusOutput {
	return i.ToInstancesInstanceGpuGpusOutputWithContext(context.Background())
}

func (i InstancesInstanceGpuGpusArgs) ToInstancesInstanceGpuGpusOutputWithContext(ctx context.Context) InstancesInstanceGpuGpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceGpuGpusOutput)
}

// InstancesInstanceGpuGpusArrayInput is an input type that accepts InstancesInstanceGpuGpusArray and InstancesInstanceGpuGpusArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceGpuGpusArrayInput` via:
//
//	InstancesInstanceGpuGpusArray{ InstancesInstanceGpuGpusArgs{...} }
type InstancesInstanceGpuGpusArrayInput interface {
	pulumi.Input

	ToInstancesInstanceGpuGpusArrayOutput() InstancesInstanceGpuGpusArrayOutput
	ToInstancesInstanceGpuGpusArrayOutputWithContext(context.Context) InstancesInstanceGpuGpusArrayOutput
}

type InstancesInstanceGpuGpusArray []InstancesInstanceGpuGpusInput

func (InstancesInstanceGpuGpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceGpuGpus)(nil)).Elem()
}

func (i InstancesInstanceGpuGpusArray) ToInstancesInstanceGpuGpusArrayOutput() InstancesInstanceGpuGpusArrayOutput {
	return i.ToInstancesInstanceGpuGpusArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceGpuGpusArray) ToInstancesInstanceGpuGpusArrayOutputWithContext(ctx context.Context) InstancesInstanceGpuGpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceGpuGpusArrayOutput)
}

type InstancesInstanceGpuGpusOutput struct{ *pulumi.OutputState }

func (InstancesInstanceGpuGpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceGpuGpus)(nil)).Elem()
}

func (o InstancesInstanceGpuGpusOutput) ToInstancesInstanceGpuGpusOutput() InstancesInstanceGpuGpusOutput {
	return o
}

func (o InstancesInstanceGpuGpusOutput) ToInstancesInstanceGpuGpusOutputWithContext(ctx context.Context) InstancesInstanceGpuGpusOutput {
	return o
}

// The spec of gpu.
func (o InstancesInstanceGpuGpusOutput) GpuSpec() InstancesInstanceGpuGpusGpuSpecOutput {
	return o.ApplyT(func(v InstancesInstanceGpuGpus) InstancesInstanceGpuGpusGpuSpec { return v.GpuSpec }).(InstancesInstanceGpuGpusGpuSpecOutput)
}

// The number of gpu.
func (o InstancesInstanceGpuGpusOutput) Num() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesInstanceGpuGpus) int { return v.Num }).(pulumi.IntOutput)
}

type InstancesInstanceGpuGpusArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceGpuGpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceGpuGpus)(nil)).Elem()
}

func (o InstancesInstanceGpuGpusArrayOutput) ToInstancesInstanceGpuGpusArrayOutput() InstancesInstanceGpuGpusArrayOutput {
	return o
}

func (o InstancesInstanceGpuGpusArrayOutput) ToInstancesInstanceGpuGpusArrayOutputWithContext(ctx context.Context) InstancesInstanceGpuGpusArrayOutput {
	return o
}

func (o InstancesInstanceGpuGpusArrayOutput) Index(i pulumi.IntInput) InstancesInstanceGpuGpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceGpuGpus {
		return vs[0].([]InstancesInstanceGpuGpus)[vs[1].(int)]
	}).(InstancesInstanceGpuGpusOutput)
}

type InstancesInstanceGpuGpusGpuSpec struct {
	// The type of gpu.
	GpuType string `pulumi:"gpuType"`
}

// InstancesInstanceGpuGpusGpuSpecInput is an input type that accepts InstancesInstanceGpuGpusGpuSpecArgs and InstancesInstanceGpuGpusGpuSpecOutput values.
// You can construct a concrete instance of `InstancesInstanceGpuGpusGpuSpecInput` via:
//
//	InstancesInstanceGpuGpusGpuSpecArgs{...}
type InstancesInstanceGpuGpusGpuSpecInput interface {
	pulumi.Input

	ToInstancesInstanceGpuGpusGpuSpecOutput() InstancesInstanceGpuGpusGpuSpecOutput
	ToInstancesInstanceGpuGpusGpuSpecOutputWithContext(context.Context) InstancesInstanceGpuGpusGpuSpecOutput
}

type InstancesInstanceGpuGpusGpuSpecArgs struct {
	// The type of gpu.
	GpuType pulumi.StringInput `pulumi:"gpuType"`
}

func (InstancesInstanceGpuGpusGpuSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceGpuGpusGpuSpec)(nil)).Elem()
}

func (i InstancesInstanceGpuGpusGpuSpecArgs) ToInstancesInstanceGpuGpusGpuSpecOutput() InstancesInstanceGpuGpusGpuSpecOutput {
	return i.ToInstancesInstanceGpuGpusGpuSpecOutputWithContext(context.Background())
}

func (i InstancesInstanceGpuGpusGpuSpecArgs) ToInstancesInstanceGpuGpusGpuSpecOutputWithContext(ctx context.Context) InstancesInstanceGpuGpusGpuSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceGpuGpusGpuSpecOutput)
}

type InstancesInstanceGpuGpusGpuSpecOutput struct{ *pulumi.OutputState }

func (InstancesInstanceGpuGpusGpuSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceGpuGpusGpuSpec)(nil)).Elem()
}

func (o InstancesInstanceGpuGpusGpuSpecOutput) ToInstancesInstanceGpuGpusGpuSpecOutput() InstancesInstanceGpuGpusGpuSpecOutput {
	return o
}

func (o InstancesInstanceGpuGpusGpuSpecOutput) ToInstancesInstanceGpuGpusGpuSpecOutputWithContext(ctx context.Context) InstancesInstanceGpuGpusGpuSpecOutput {
	return o
}

// The type of gpu.
func (o InstancesInstanceGpuGpusGpuSpecOutput) GpuType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceGpuGpusGpuSpec) string { return v.GpuType }).(pulumi.StringOutput)
}

type InstancesInstanceImage struct {
	// The id of image.
	ImageIdentity string `pulumi:"imageIdentity"`
	// The name of image.
	ImageName string `pulumi:"imageName"`
	// The property of system.
	Property string `pulumi:"property"`
	// The arch of system.
	SystemArch string `pulumi:"systemArch"`
	// The bit of system.
	SystemBit string `pulumi:"systemBit"`
	// The type of system.
	SystemType string `pulumi:"systemType"`
	// The version of system.
	SystemVersion string `pulumi:"systemVersion"`
}

// InstancesInstanceImageInput is an input type that accepts InstancesInstanceImageArgs and InstancesInstanceImageOutput values.
// You can construct a concrete instance of `InstancesInstanceImageInput` via:
//
//	InstancesInstanceImageArgs{...}
type InstancesInstanceImageInput interface {
	pulumi.Input

	ToInstancesInstanceImageOutput() InstancesInstanceImageOutput
	ToInstancesInstanceImageOutputWithContext(context.Context) InstancesInstanceImageOutput
}

type InstancesInstanceImageArgs struct {
	// The id of image.
	ImageIdentity pulumi.StringInput `pulumi:"imageIdentity"`
	// The name of image.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The property of system.
	Property pulumi.StringInput `pulumi:"property"`
	// The arch of system.
	SystemArch pulumi.StringInput `pulumi:"systemArch"`
	// The bit of system.
	SystemBit pulumi.StringInput `pulumi:"systemBit"`
	// The type of system.
	SystemType pulumi.StringInput `pulumi:"systemType"`
	// The version of system.
	SystemVersion pulumi.StringInput `pulumi:"systemVersion"`
}

func (InstancesInstanceImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceImage)(nil)).Elem()
}

func (i InstancesInstanceImageArgs) ToInstancesInstanceImageOutput() InstancesInstanceImageOutput {
	return i.ToInstancesInstanceImageOutputWithContext(context.Background())
}

func (i InstancesInstanceImageArgs) ToInstancesInstanceImageOutputWithContext(ctx context.Context) InstancesInstanceImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceImageOutput)
}

type InstancesInstanceImageOutput struct{ *pulumi.OutputState }

func (InstancesInstanceImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceImage)(nil)).Elem()
}

func (o InstancesInstanceImageOutput) ToInstancesInstanceImageOutput() InstancesInstanceImageOutput {
	return o
}

func (o InstancesInstanceImageOutput) ToInstancesInstanceImageOutputWithContext(ctx context.Context) InstancesInstanceImageOutput {
	return o
}

// The id of image.
func (o InstancesInstanceImageOutput) ImageIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceImage) string { return v.ImageIdentity }).(pulumi.StringOutput)
}

// The name of image.
func (o InstancesInstanceImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The property of system.
func (o InstancesInstanceImageOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceImage) string { return v.Property }).(pulumi.StringOutput)
}

// The arch of system.
func (o InstancesInstanceImageOutput) SystemArch() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceImage) string { return v.SystemArch }).(pulumi.StringOutput)
}

// The bit of system.
func (o InstancesInstanceImageOutput) SystemBit() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceImage) string { return v.SystemBit }).(pulumi.StringOutput)
}

// The type of system.
func (o InstancesInstanceImageOutput) SystemType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceImage) string { return v.SystemType }).(pulumi.StringOutput)
}

// The version of system.
func (o InstancesInstanceImageOutput) SystemVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceImage) string { return v.SystemVersion }).(pulumi.StringOutput)
}

type InstancesInstanceNetwork struct {
	// Whether enable ipv6.
	EnableIpv6 bool `pulumi:"enableIpv6"`
	// The external interface of network.
	ExternalInterface InstancesInstanceNetworkExternalInterface `pulumi:"externalInterface"`
	// The internal interface of network.
	InternalInterface InstancesInstanceNetworkInternalInterface `pulumi:"internalInterface"`
	// The passthrough info.
	VfPassthrough bool `pulumi:"vfPassthrough"`
}

// InstancesInstanceNetworkInput is an input type that accepts InstancesInstanceNetworkArgs and InstancesInstanceNetworkOutput values.
// You can construct a concrete instance of `InstancesInstanceNetworkInput` via:
//
//	InstancesInstanceNetworkArgs{...}
type InstancesInstanceNetworkInput interface {
	pulumi.Input

	ToInstancesInstanceNetworkOutput() InstancesInstanceNetworkOutput
	ToInstancesInstanceNetworkOutputWithContext(context.Context) InstancesInstanceNetworkOutput
}

type InstancesInstanceNetworkArgs struct {
	// Whether enable ipv6.
	EnableIpv6 pulumi.BoolInput `pulumi:"enableIpv6"`
	// The external interface of network.
	ExternalInterface InstancesInstanceNetworkExternalInterfaceInput `pulumi:"externalInterface"`
	// The internal interface of network.
	InternalInterface InstancesInstanceNetworkInternalInterfaceInput `pulumi:"internalInterface"`
	// The passthrough info.
	VfPassthrough pulumi.BoolInput `pulumi:"vfPassthrough"`
}

func (InstancesInstanceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetwork)(nil)).Elem()
}

func (i InstancesInstanceNetworkArgs) ToInstancesInstanceNetworkOutput() InstancesInstanceNetworkOutput {
	return i.ToInstancesInstanceNetworkOutputWithContext(context.Background())
}

func (i InstancesInstanceNetworkArgs) ToInstancesInstanceNetworkOutputWithContext(ctx context.Context) InstancesInstanceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNetworkOutput)
}

type InstancesInstanceNetworkOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetwork)(nil)).Elem()
}

func (o InstancesInstanceNetworkOutput) ToInstancesInstanceNetworkOutput() InstancesInstanceNetworkOutput {
	return o
}

func (o InstancesInstanceNetworkOutput) ToInstancesInstanceNetworkOutputWithContext(ctx context.Context) InstancesInstanceNetworkOutput {
	return o
}

// Whether enable ipv6.
func (o InstancesInstanceNetworkOutput) EnableIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceNetwork) bool { return v.EnableIpv6 }).(pulumi.BoolOutput)
}

// The external interface of network.
func (o InstancesInstanceNetworkOutput) ExternalInterface() InstancesInstanceNetworkExternalInterfaceOutput {
	return o.ApplyT(func(v InstancesInstanceNetwork) InstancesInstanceNetworkExternalInterface { return v.ExternalInterface }).(InstancesInstanceNetworkExternalInterfaceOutput)
}

// The internal interface of network.
func (o InstancesInstanceNetworkOutput) InternalInterface() InstancesInstanceNetworkInternalInterfaceOutput {
	return o.ApplyT(func(v InstancesInstanceNetwork) InstancesInstanceNetworkInternalInterface { return v.InternalInterface }).(InstancesInstanceNetworkInternalInterfaceOutput)
}

// The passthrough info.
func (o InstancesInstanceNetworkOutput) VfPassthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v InstancesInstanceNetwork) bool { return v.VfPassthrough }).(pulumi.BoolOutput)
}

type InstancesInstanceNetworkExternalInterface struct {
	// The peak of bandwidth.
	BandwidthPeak string `pulumi:"bandwidthPeak"`
	// The ipv6 address.
	Ip6Addr string `pulumi:"ip6Addr"`
	// The ip address.
	IpAddr string `pulumi:"ipAddr"`
	// The ips of network.
	Ips []InstancesInstanceNetworkExternalInterfaceIp `pulumi:"ips"`
	// The mac address.
	MacAddr string `pulumi:"macAddr"`
	// The mask info.
	Mask string `pulumi:"mask"`
	// The ipv6 mask info.
	Mask6 string `pulumi:"mask6"`
}

// InstancesInstanceNetworkExternalInterfaceInput is an input type that accepts InstancesInstanceNetworkExternalInterfaceArgs and InstancesInstanceNetworkExternalInterfaceOutput values.
// You can construct a concrete instance of `InstancesInstanceNetworkExternalInterfaceInput` via:
//
//	InstancesInstanceNetworkExternalInterfaceArgs{...}
type InstancesInstanceNetworkExternalInterfaceInput interface {
	pulumi.Input

	ToInstancesInstanceNetworkExternalInterfaceOutput() InstancesInstanceNetworkExternalInterfaceOutput
	ToInstancesInstanceNetworkExternalInterfaceOutputWithContext(context.Context) InstancesInstanceNetworkExternalInterfaceOutput
}

type InstancesInstanceNetworkExternalInterfaceArgs struct {
	// The peak of bandwidth.
	BandwidthPeak pulumi.StringInput `pulumi:"bandwidthPeak"`
	// The ipv6 address.
	Ip6Addr pulumi.StringInput `pulumi:"ip6Addr"`
	// The ip address.
	IpAddr pulumi.StringInput `pulumi:"ipAddr"`
	// The ips of network.
	Ips InstancesInstanceNetworkExternalInterfaceIpArrayInput `pulumi:"ips"`
	// The mac address.
	MacAddr pulumi.StringInput `pulumi:"macAddr"`
	// The mask info.
	Mask pulumi.StringInput `pulumi:"mask"`
	// The ipv6 mask info.
	Mask6 pulumi.StringInput `pulumi:"mask6"`
}

func (InstancesInstanceNetworkExternalInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetworkExternalInterface)(nil)).Elem()
}

func (i InstancesInstanceNetworkExternalInterfaceArgs) ToInstancesInstanceNetworkExternalInterfaceOutput() InstancesInstanceNetworkExternalInterfaceOutput {
	return i.ToInstancesInstanceNetworkExternalInterfaceOutputWithContext(context.Background())
}

func (i InstancesInstanceNetworkExternalInterfaceArgs) ToInstancesInstanceNetworkExternalInterfaceOutputWithContext(ctx context.Context) InstancesInstanceNetworkExternalInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNetworkExternalInterfaceOutput)
}

type InstancesInstanceNetworkExternalInterfaceOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNetworkExternalInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetworkExternalInterface)(nil)).Elem()
}

func (o InstancesInstanceNetworkExternalInterfaceOutput) ToInstancesInstanceNetworkExternalInterfaceOutput() InstancesInstanceNetworkExternalInterfaceOutput {
	return o
}

func (o InstancesInstanceNetworkExternalInterfaceOutput) ToInstancesInstanceNetworkExternalInterfaceOutputWithContext(ctx context.Context) InstancesInstanceNetworkExternalInterfaceOutput {
	return o
}

// The peak of bandwidth.
func (o InstancesInstanceNetworkExternalInterfaceOutput) BandwidthPeak() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterface) string { return v.BandwidthPeak }).(pulumi.StringOutput)
}

// The ipv6 address.
func (o InstancesInstanceNetworkExternalInterfaceOutput) Ip6Addr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterface) string { return v.Ip6Addr }).(pulumi.StringOutput)
}

// The ip address.
func (o InstancesInstanceNetworkExternalInterfaceOutput) IpAddr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterface) string { return v.IpAddr }).(pulumi.StringOutput)
}

// The ips of network.
func (o InstancesInstanceNetworkExternalInterfaceOutput) Ips() InstancesInstanceNetworkExternalInterfaceIpArrayOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterface) []InstancesInstanceNetworkExternalInterfaceIp {
		return v.Ips
	}).(InstancesInstanceNetworkExternalInterfaceIpArrayOutput)
}

// The mac address.
func (o InstancesInstanceNetworkExternalInterfaceOutput) MacAddr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterface) string { return v.MacAddr }).(pulumi.StringOutput)
}

// The mask info.
func (o InstancesInstanceNetworkExternalInterfaceOutput) Mask() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterface) string { return v.Mask }).(pulumi.StringOutput)
}

// The ipv6 mask info.
func (o InstancesInstanceNetworkExternalInterfaceOutput) Mask6() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterface) string { return v.Mask6 }).(pulumi.StringOutput)
}

type InstancesInstanceNetworkExternalInterfaceIp struct {
	// The ip address.
	Addr string `pulumi:"addr"`
	// The version of ip address.
	IpVersion string `pulumi:"ipVersion"`
	// The isp info.
	Isp string `pulumi:"isp"`
	// The mask info.
	Mask string `pulumi:"mask"`
}

// InstancesInstanceNetworkExternalInterfaceIpInput is an input type that accepts InstancesInstanceNetworkExternalInterfaceIpArgs and InstancesInstanceNetworkExternalInterfaceIpOutput values.
// You can construct a concrete instance of `InstancesInstanceNetworkExternalInterfaceIpInput` via:
//
//	InstancesInstanceNetworkExternalInterfaceIpArgs{...}
type InstancesInstanceNetworkExternalInterfaceIpInput interface {
	pulumi.Input

	ToInstancesInstanceNetworkExternalInterfaceIpOutput() InstancesInstanceNetworkExternalInterfaceIpOutput
	ToInstancesInstanceNetworkExternalInterfaceIpOutputWithContext(context.Context) InstancesInstanceNetworkExternalInterfaceIpOutput
}

type InstancesInstanceNetworkExternalInterfaceIpArgs struct {
	// The ip address.
	Addr pulumi.StringInput `pulumi:"addr"`
	// The version of ip address.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// The isp info.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The mask info.
	Mask pulumi.StringInput `pulumi:"mask"`
}

func (InstancesInstanceNetworkExternalInterfaceIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetworkExternalInterfaceIp)(nil)).Elem()
}

func (i InstancesInstanceNetworkExternalInterfaceIpArgs) ToInstancesInstanceNetworkExternalInterfaceIpOutput() InstancesInstanceNetworkExternalInterfaceIpOutput {
	return i.ToInstancesInstanceNetworkExternalInterfaceIpOutputWithContext(context.Background())
}

func (i InstancesInstanceNetworkExternalInterfaceIpArgs) ToInstancesInstanceNetworkExternalInterfaceIpOutputWithContext(ctx context.Context) InstancesInstanceNetworkExternalInterfaceIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNetworkExternalInterfaceIpOutput)
}

// InstancesInstanceNetworkExternalInterfaceIpArrayInput is an input type that accepts InstancesInstanceNetworkExternalInterfaceIpArray and InstancesInstanceNetworkExternalInterfaceIpArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceNetworkExternalInterfaceIpArrayInput` via:
//
//	InstancesInstanceNetworkExternalInterfaceIpArray{ InstancesInstanceNetworkExternalInterfaceIpArgs{...} }
type InstancesInstanceNetworkExternalInterfaceIpArrayInput interface {
	pulumi.Input

	ToInstancesInstanceNetworkExternalInterfaceIpArrayOutput() InstancesInstanceNetworkExternalInterfaceIpArrayOutput
	ToInstancesInstanceNetworkExternalInterfaceIpArrayOutputWithContext(context.Context) InstancesInstanceNetworkExternalInterfaceIpArrayOutput
}

type InstancesInstanceNetworkExternalInterfaceIpArray []InstancesInstanceNetworkExternalInterfaceIpInput

func (InstancesInstanceNetworkExternalInterfaceIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceNetworkExternalInterfaceIp)(nil)).Elem()
}

func (i InstancesInstanceNetworkExternalInterfaceIpArray) ToInstancesInstanceNetworkExternalInterfaceIpArrayOutput() InstancesInstanceNetworkExternalInterfaceIpArrayOutput {
	return i.ToInstancesInstanceNetworkExternalInterfaceIpArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceNetworkExternalInterfaceIpArray) ToInstancesInstanceNetworkExternalInterfaceIpArrayOutputWithContext(ctx context.Context) InstancesInstanceNetworkExternalInterfaceIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNetworkExternalInterfaceIpArrayOutput)
}

type InstancesInstanceNetworkExternalInterfaceIpOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNetworkExternalInterfaceIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetworkExternalInterfaceIp)(nil)).Elem()
}

func (o InstancesInstanceNetworkExternalInterfaceIpOutput) ToInstancesInstanceNetworkExternalInterfaceIpOutput() InstancesInstanceNetworkExternalInterfaceIpOutput {
	return o
}

func (o InstancesInstanceNetworkExternalInterfaceIpOutput) ToInstancesInstanceNetworkExternalInterfaceIpOutputWithContext(ctx context.Context) InstancesInstanceNetworkExternalInterfaceIpOutput {
	return o
}

// The ip address.
func (o InstancesInstanceNetworkExternalInterfaceIpOutput) Addr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterfaceIp) string { return v.Addr }).(pulumi.StringOutput)
}

// The version of ip address.
func (o InstancesInstanceNetworkExternalInterfaceIpOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterfaceIp) string { return v.IpVersion }).(pulumi.StringOutput)
}

// The isp info.
func (o InstancesInstanceNetworkExternalInterfaceIpOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterfaceIp) string { return v.Isp }).(pulumi.StringOutput)
}

// The mask info.
func (o InstancesInstanceNetworkExternalInterfaceIpOutput) Mask() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkExternalInterfaceIp) string { return v.Mask }).(pulumi.StringOutput)
}

type InstancesInstanceNetworkExternalInterfaceIpArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNetworkExternalInterfaceIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceNetworkExternalInterfaceIp)(nil)).Elem()
}

func (o InstancesInstanceNetworkExternalInterfaceIpArrayOutput) ToInstancesInstanceNetworkExternalInterfaceIpArrayOutput() InstancesInstanceNetworkExternalInterfaceIpArrayOutput {
	return o
}

func (o InstancesInstanceNetworkExternalInterfaceIpArrayOutput) ToInstancesInstanceNetworkExternalInterfaceIpArrayOutputWithContext(ctx context.Context) InstancesInstanceNetworkExternalInterfaceIpArrayOutput {
	return o
}

func (o InstancesInstanceNetworkExternalInterfaceIpArrayOutput) Index(i pulumi.IntInput) InstancesInstanceNetworkExternalInterfaceIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceNetworkExternalInterfaceIp {
		return vs[0].([]InstancesInstanceNetworkExternalInterfaceIp)[vs[1].(int)]
	}).(InstancesInstanceNetworkExternalInterfaceIpOutput)
}

type InstancesInstanceNetworkInternalInterface struct {
	// The peak of bandwidth.
	BandwidthPeak string `pulumi:"bandwidthPeak"`
	// The ipv6 address.
	Ip6Addr string `pulumi:"ip6Addr"`
	// The ip address.
	IpAddr string `pulumi:"ipAddr"`
	// The ips of network.
	Ips []InstancesInstanceNetworkInternalInterfaceIp `pulumi:"ips"`
	// The mac address.
	MacAddr string `pulumi:"macAddr"`
	// The mask info.
	Mask string `pulumi:"mask"`
	// The ipv6 mask info.
	Mask6 string `pulumi:"mask6"`
}

// InstancesInstanceNetworkInternalInterfaceInput is an input type that accepts InstancesInstanceNetworkInternalInterfaceArgs and InstancesInstanceNetworkInternalInterfaceOutput values.
// You can construct a concrete instance of `InstancesInstanceNetworkInternalInterfaceInput` via:
//
//	InstancesInstanceNetworkInternalInterfaceArgs{...}
type InstancesInstanceNetworkInternalInterfaceInput interface {
	pulumi.Input

	ToInstancesInstanceNetworkInternalInterfaceOutput() InstancesInstanceNetworkInternalInterfaceOutput
	ToInstancesInstanceNetworkInternalInterfaceOutputWithContext(context.Context) InstancesInstanceNetworkInternalInterfaceOutput
}

type InstancesInstanceNetworkInternalInterfaceArgs struct {
	// The peak of bandwidth.
	BandwidthPeak pulumi.StringInput `pulumi:"bandwidthPeak"`
	// The ipv6 address.
	Ip6Addr pulumi.StringInput `pulumi:"ip6Addr"`
	// The ip address.
	IpAddr pulumi.StringInput `pulumi:"ipAddr"`
	// The ips of network.
	Ips InstancesInstanceNetworkInternalInterfaceIpArrayInput `pulumi:"ips"`
	// The mac address.
	MacAddr pulumi.StringInput `pulumi:"macAddr"`
	// The mask info.
	Mask pulumi.StringInput `pulumi:"mask"`
	// The ipv6 mask info.
	Mask6 pulumi.StringInput `pulumi:"mask6"`
}

func (InstancesInstanceNetworkInternalInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetworkInternalInterface)(nil)).Elem()
}

func (i InstancesInstanceNetworkInternalInterfaceArgs) ToInstancesInstanceNetworkInternalInterfaceOutput() InstancesInstanceNetworkInternalInterfaceOutput {
	return i.ToInstancesInstanceNetworkInternalInterfaceOutputWithContext(context.Background())
}

func (i InstancesInstanceNetworkInternalInterfaceArgs) ToInstancesInstanceNetworkInternalInterfaceOutputWithContext(ctx context.Context) InstancesInstanceNetworkInternalInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNetworkInternalInterfaceOutput)
}

type InstancesInstanceNetworkInternalInterfaceOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNetworkInternalInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetworkInternalInterface)(nil)).Elem()
}

func (o InstancesInstanceNetworkInternalInterfaceOutput) ToInstancesInstanceNetworkInternalInterfaceOutput() InstancesInstanceNetworkInternalInterfaceOutput {
	return o
}

func (o InstancesInstanceNetworkInternalInterfaceOutput) ToInstancesInstanceNetworkInternalInterfaceOutputWithContext(ctx context.Context) InstancesInstanceNetworkInternalInterfaceOutput {
	return o
}

// The peak of bandwidth.
func (o InstancesInstanceNetworkInternalInterfaceOutput) BandwidthPeak() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterface) string { return v.BandwidthPeak }).(pulumi.StringOutput)
}

// The ipv6 address.
func (o InstancesInstanceNetworkInternalInterfaceOutput) Ip6Addr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterface) string { return v.Ip6Addr }).(pulumi.StringOutput)
}

// The ip address.
func (o InstancesInstanceNetworkInternalInterfaceOutput) IpAddr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterface) string { return v.IpAddr }).(pulumi.StringOutput)
}

// The ips of network.
func (o InstancesInstanceNetworkInternalInterfaceOutput) Ips() InstancesInstanceNetworkInternalInterfaceIpArrayOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterface) []InstancesInstanceNetworkInternalInterfaceIp {
		return v.Ips
	}).(InstancesInstanceNetworkInternalInterfaceIpArrayOutput)
}

// The mac address.
func (o InstancesInstanceNetworkInternalInterfaceOutput) MacAddr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterface) string { return v.MacAddr }).(pulumi.StringOutput)
}

// The mask info.
func (o InstancesInstanceNetworkInternalInterfaceOutput) Mask() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterface) string { return v.Mask }).(pulumi.StringOutput)
}

// The ipv6 mask info.
func (o InstancesInstanceNetworkInternalInterfaceOutput) Mask6() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterface) string { return v.Mask6 }).(pulumi.StringOutput)
}

type InstancesInstanceNetworkInternalInterfaceIp struct {
	// The ip address.
	Addr string `pulumi:"addr"`
	// The version of ip address.
	IpVersion string `pulumi:"ipVersion"`
	// The isp info.
	Isp string `pulumi:"isp"`
	// The mask info.
	Mask string `pulumi:"mask"`
}

// InstancesInstanceNetworkInternalInterfaceIpInput is an input type that accepts InstancesInstanceNetworkInternalInterfaceIpArgs and InstancesInstanceNetworkInternalInterfaceIpOutput values.
// You can construct a concrete instance of `InstancesInstanceNetworkInternalInterfaceIpInput` via:
//
//	InstancesInstanceNetworkInternalInterfaceIpArgs{...}
type InstancesInstanceNetworkInternalInterfaceIpInput interface {
	pulumi.Input

	ToInstancesInstanceNetworkInternalInterfaceIpOutput() InstancesInstanceNetworkInternalInterfaceIpOutput
	ToInstancesInstanceNetworkInternalInterfaceIpOutputWithContext(context.Context) InstancesInstanceNetworkInternalInterfaceIpOutput
}

type InstancesInstanceNetworkInternalInterfaceIpArgs struct {
	// The ip address.
	Addr pulumi.StringInput `pulumi:"addr"`
	// The version of ip address.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// The isp info.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The mask info.
	Mask pulumi.StringInput `pulumi:"mask"`
}

func (InstancesInstanceNetworkInternalInterfaceIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetworkInternalInterfaceIp)(nil)).Elem()
}

func (i InstancesInstanceNetworkInternalInterfaceIpArgs) ToInstancesInstanceNetworkInternalInterfaceIpOutput() InstancesInstanceNetworkInternalInterfaceIpOutput {
	return i.ToInstancesInstanceNetworkInternalInterfaceIpOutputWithContext(context.Background())
}

func (i InstancesInstanceNetworkInternalInterfaceIpArgs) ToInstancesInstanceNetworkInternalInterfaceIpOutputWithContext(ctx context.Context) InstancesInstanceNetworkInternalInterfaceIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNetworkInternalInterfaceIpOutput)
}

// InstancesInstanceNetworkInternalInterfaceIpArrayInput is an input type that accepts InstancesInstanceNetworkInternalInterfaceIpArray and InstancesInstanceNetworkInternalInterfaceIpArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceNetworkInternalInterfaceIpArrayInput` via:
//
//	InstancesInstanceNetworkInternalInterfaceIpArray{ InstancesInstanceNetworkInternalInterfaceIpArgs{...} }
type InstancesInstanceNetworkInternalInterfaceIpArrayInput interface {
	pulumi.Input

	ToInstancesInstanceNetworkInternalInterfaceIpArrayOutput() InstancesInstanceNetworkInternalInterfaceIpArrayOutput
	ToInstancesInstanceNetworkInternalInterfaceIpArrayOutputWithContext(context.Context) InstancesInstanceNetworkInternalInterfaceIpArrayOutput
}

type InstancesInstanceNetworkInternalInterfaceIpArray []InstancesInstanceNetworkInternalInterfaceIpInput

func (InstancesInstanceNetworkInternalInterfaceIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceNetworkInternalInterfaceIp)(nil)).Elem()
}

func (i InstancesInstanceNetworkInternalInterfaceIpArray) ToInstancesInstanceNetworkInternalInterfaceIpArrayOutput() InstancesInstanceNetworkInternalInterfaceIpArrayOutput {
	return i.ToInstancesInstanceNetworkInternalInterfaceIpArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceNetworkInternalInterfaceIpArray) ToInstancesInstanceNetworkInternalInterfaceIpArrayOutputWithContext(ctx context.Context) InstancesInstanceNetworkInternalInterfaceIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceNetworkInternalInterfaceIpArrayOutput)
}

type InstancesInstanceNetworkInternalInterfaceIpOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNetworkInternalInterfaceIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceNetworkInternalInterfaceIp)(nil)).Elem()
}

func (o InstancesInstanceNetworkInternalInterfaceIpOutput) ToInstancesInstanceNetworkInternalInterfaceIpOutput() InstancesInstanceNetworkInternalInterfaceIpOutput {
	return o
}

func (o InstancesInstanceNetworkInternalInterfaceIpOutput) ToInstancesInstanceNetworkInternalInterfaceIpOutputWithContext(ctx context.Context) InstancesInstanceNetworkInternalInterfaceIpOutput {
	return o
}

// The ip address.
func (o InstancesInstanceNetworkInternalInterfaceIpOutput) Addr() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterfaceIp) string { return v.Addr }).(pulumi.StringOutput)
}

// The version of ip address.
func (o InstancesInstanceNetworkInternalInterfaceIpOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterfaceIp) string { return v.IpVersion }).(pulumi.StringOutput)
}

// The isp info.
func (o InstancesInstanceNetworkInternalInterfaceIpOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterfaceIp) string { return v.Isp }).(pulumi.StringOutput)
}

// The mask info.
func (o InstancesInstanceNetworkInternalInterfaceIpOutput) Mask() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceNetworkInternalInterfaceIp) string { return v.Mask }).(pulumi.StringOutput)
}

type InstancesInstanceNetworkInternalInterfaceIpArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceNetworkInternalInterfaceIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceNetworkInternalInterfaceIp)(nil)).Elem()
}

func (o InstancesInstanceNetworkInternalInterfaceIpArrayOutput) ToInstancesInstanceNetworkInternalInterfaceIpArrayOutput() InstancesInstanceNetworkInternalInterfaceIpArrayOutput {
	return o
}

func (o InstancesInstanceNetworkInternalInterfaceIpArrayOutput) ToInstancesInstanceNetworkInternalInterfaceIpArrayOutputWithContext(ctx context.Context) InstancesInstanceNetworkInternalInterfaceIpArrayOutput {
	return o
}

func (o InstancesInstanceNetworkInternalInterfaceIpArrayOutput) Index(i pulumi.IntInput) InstancesInstanceNetworkInternalInterfaceIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceNetworkInternalInterfaceIp {
		return vs[0].([]InstancesInstanceNetworkInternalInterfaceIp)[vs[1].(int)]
	}).(InstancesInstanceNetworkInternalInterfaceIpOutput)
}

type InstancesInstanceStorage struct {
	// The disk info of data.
	DataDisk InstancesInstanceStorageDataDisk `pulumi:"dataDisk"`
	// The disk list info of data.
	DataDiskLists []InstancesInstanceStorageDataDiskList `pulumi:"dataDiskLists"`
	// The disk info of system.
	SystemDisk InstancesInstanceStorageSystemDisk `pulumi:"systemDisk"`
}

// InstancesInstanceStorageInput is an input type that accepts InstancesInstanceStorageArgs and InstancesInstanceStorageOutput values.
// You can construct a concrete instance of `InstancesInstanceStorageInput` via:
//
//	InstancesInstanceStorageArgs{...}
type InstancesInstanceStorageInput interface {
	pulumi.Input

	ToInstancesInstanceStorageOutput() InstancesInstanceStorageOutput
	ToInstancesInstanceStorageOutputWithContext(context.Context) InstancesInstanceStorageOutput
}

type InstancesInstanceStorageArgs struct {
	// The disk info of data.
	DataDisk InstancesInstanceStorageDataDiskInput `pulumi:"dataDisk"`
	// The disk list info of data.
	DataDiskLists InstancesInstanceStorageDataDiskListArrayInput `pulumi:"dataDiskLists"`
	// The disk info of system.
	SystemDisk InstancesInstanceStorageSystemDiskInput `pulumi:"systemDisk"`
}

func (InstancesInstanceStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceStorage)(nil)).Elem()
}

func (i InstancesInstanceStorageArgs) ToInstancesInstanceStorageOutput() InstancesInstanceStorageOutput {
	return i.ToInstancesInstanceStorageOutputWithContext(context.Background())
}

func (i InstancesInstanceStorageArgs) ToInstancesInstanceStorageOutputWithContext(ctx context.Context) InstancesInstanceStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceStorageOutput)
}

type InstancesInstanceStorageOutput struct{ *pulumi.OutputState }

func (InstancesInstanceStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceStorage)(nil)).Elem()
}

func (o InstancesInstanceStorageOutput) ToInstancesInstanceStorageOutput() InstancesInstanceStorageOutput {
	return o
}

func (o InstancesInstanceStorageOutput) ToInstancesInstanceStorageOutputWithContext(ctx context.Context) InstancesInstanceStorageOutput {
	return o
}

// The disk info of data.
func (o InstancesInstanceStorageOutput) DataDisk() InstancesInstanceStorageDataDiskOutput {
	return o.ApplyT(func(v InstancesInstanceStorage) InstancesInstanceStorageDataDisk { return v.DataDisk }).(InstancesInstanceStorageDataDiskOutput)
}

// The disk list info of data.
func (o InstancesInstanceStorageOutput) DataDiskLists() InstancesInstanceStorageDataDiskListArrayOutput {
	return o.ApplyT(func(v InstancesInstanceStorage) []InstancesInstanceStorageDataDiskList { return v.DataDiskLists }).(InstancesInstanceStorageDataDiskListArrayOutput)
}

// The disk info of system.
func (o InstancesInstanceStorageOutput) SystemDisk() InstancesInstanceStorageSystemDiskOutput {
	return o.ApplyT(func(v InstancesInstanceStorage) InstancesInstanceStorageSystemDisk { return v.SystemDisk }).(InstancesInstanceStorageSystemDiskOutput)
}

type InstancesInstanceStorageDataDisk struct {
	// The capacity of storage.
	Capacity string `pulumi:"capacity"`
	// The type of storage.
	StorageType string `pulumi:"storageType"`
}

// InstancesInstanceStorageDataDiskInput is an input type that accepts InstancesInstanceStorageDataDiskArgs and InstancesInstanceStorageDataDiskOutput values.
// You can construct a concrete instance of `InstancesInstanceStorageDataDiskInput` via:
//
//	InstancesInstanceStorageDataDiskArgs{...}
type InstancesInstanceStorageDataDiskInput interface {
	pulumi.Input

	ToInstancesInstanceStorageDataDiskOutput() InstancesInstanceStorageDataDiskOutput
	ToInstancesInstanceStorageDataDiskOutputWithContext(context.Context) InstancesInstanceStorageDataDiskOutput
}

type InstancesInstanceStorageDataDiskArgs struct {
	// The capacity of storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The type of storage.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (InstancesInstanceStorageDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceStorageDataDisk)(nil)).Elem()
}

func (i InstancesInstanceStorageDataDiskArgs) ToInstancesInstanceStorageDataDiskOutput() InstancesInstanceStorageDataDiskOutput {
	return i.ToInstancesInstanceStorageDataDiskOutputWithContext(context.Background())
}

func (i InstancesInstanceStorageDataDiskArgs) ToInstancesInstanceStorageDataDiskOutputWithContext(ctx context.Context) InstancesInstanceStorageDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceStorageDataDiskOutput)
}

type InstancesInstanceStorageDataDiskOutput struct{ *pulumi.OutputState }

func (InstancesInstanceStorageDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceStorageDataDisk)(nil)).Elem()
}

func (o InstancesInstanceStorageDataDiskOutput) ToInstancesInstanceStorageDataDiskOutput() InstancesInstanceStorageDataDiskOutput {
	return o
}

func (o InstancesInstanceStorageDataDiskOutput) ToInstancesInstanceStorageDataDiskOutputWithContext(ctx context.Context) InstancesInstanceStorageDataDiskOutput {
	return o
}

// The capacity of storage.
func (o InstancesInstanceStorageDataDiskOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceStorageDataDisk) string { return v.Capacity }).(pulumi.StringOutput)
}

// The type of storage.
func (o InstancesInstanceStorageDataDiskOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceStorageDataDisk) string { return v.StorageType }).(pulumi.StringOutput)
}

type InstancesInstanceStorageDataDiskList struct {
	// The capacity of storage.
	Capacity string `pulumi:"capacity"`
	// The type of storage.
	StorageType string `pulumi:"storageType"`
}

// InstancesInstanceStorageDataDiskListInput is an input type that accepts InstancesInstanceStorageDataDiskListArgs and InstancesInstanceStorageDataDiskListOutput values.
// You can construct a concrete instance of `InstancesInstanceStorageDataDiskListInput` via:
//
//	InstancesInstanceStorageDataDiskListArgs{...}
type InstancesInstanceStorageDataDiskListInput interface {
	pulumi.Input

	ToInstancesInstanceStorageDataDiskListOutput() InstancesInstanceStorageDataDiskListOutput
	ToInstancesInstanceStorageDataDiskListOutputWithContext(context.Context) InstancesInstanceStorageDataDiskListOutput
}

type InstancesInstanceStorageDataDiskListArgs struct {
	// The capacity of storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The type of storage.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (InstancesInstanceStorageDataDiskListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceStorageDataDiskList)(nil)).Elem()
}

func (i InstancesInstanceStorageDataDiskListArgs) ToInstancesInstanceStorageDataDiskListOutput() InstancesInstanceStorageDataDiskListOutput {
	return i.ToInstancesInstanceStorageDataDiskListOutputWithContext(context.Background())
}

func (i InstancesInstanceStorageDataDiskListArgs) ToInstancesInstanceStorageDataDiskListOutputWithContext(ctx context.Context) InstancesInstanceStorageDataDiskListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceStorageDataDiskListOutput)
}

// InstancesInstanceStorageDataDiskListArrayInput is an input type that accepts InstancesInstanceStorageDataDiskListArray and InstancesInstanceStorageDataDiskListArrayOutput values.
// You can construct a concrete instance of `InstancesInstanceStorageDataDiskListArrayInput` via:
//
//	InstancesInstanceStorageDataDiskListArray{ InstancesInstanceStorageDataDiskListArgs{...} }
type InstancesInstanceStorageDataDiskListArrayInput interface {
	pulumi.Input

	ToInstancesInstanceStorageDataDiskListArrayOutput() InstancesInstanceStorageDataDiskListArrayOutput
	ToInstancesInstanceStorageDataDiskListArrayOutputWithContext(context.Context) InstancesInstanceStorageDataDiskListArrayOutput
}

type InstancesInstanceStorageDataDiskListArray []InstancesInstanceStorageDataDiskListInput

func (InstancesInstanceStorageDataDiskListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceStorageDataDiskList)(nil)).Elem()
}

func (i InstancesInstanceStorageDataDiskListArray) ToInstancesInstanceStorageDataDiskListArrayOutput() InstancesInstanceStorageDataDiskListArrayOutput {
	return i.ToInstancesInstanceStorageDataDiskListArrayOutputWithContext(context.Background())
}

func (i InstancesInstanceStorageDataDiskListArray) ToInstancesInstanceStorageDataDiskListArrayOutputWithContext(ctx context.Context) InstancesInstanceStorageDataDiskListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceStorageDataDiskListArrayOutput)
}

type InstancesInstanceStorageDataDiskListOutput struct{ *pulumi.OutputState }

func (InstancesInstanceStorageDataDiskListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceStorageDataDiskList)(nil)).Elem()
}

func (o InstancesInstanceStorageDataDiskListOutput) ToInstancesInstanceStorageDataDiskListOutput() InstancesInstanceStorageDataDiskListOutput {
	return o
}

func (o InstancesInstanceStorageDataDiskListOutput) ToInstancesInstanceStorageDataDiskListOutputWithContext(ctx context.Context) InstancesInstanceStorageDataDiskListOutput {
	return o
}

// The capacity of storage.
func (o InstancesInstanceStorageDataDiskListOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceStorageDataDiskList) string { return v.Capacity }).(pulumi.StringOutput)
}

// The type of storage.
func (o InstancesInstanceStorageDataDiskListOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceStorageDataDiskList) string { return v.StorageType }).(pulumi.StringOutput)
}

type InstancesInstanceStorageDataDiskListArrayOutput struct{ *pulumi.OutputState }

func (InstancesInstanceStorageDataDiskListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesInstanceStorageDataDiskList)(nil)).Elem()
}

func (o InstancesInstanceStorageDataDiskListArrayOutput) ToInstancesInstanceStorageDataDiskListArrayOutput() InstancesInstanceStorageDataDiskListArrayOutput {
	return o
}

func (o InstancesInstanceStorageDataDiskListArrayOutput) ToInstancesInstanceStorageDataDiskListArrayOutputWithContext(ctx context.Context) InstancesInstanceStorageDataDiskListArrayOutput {
	return o
}

func (o InstancesInstanceStorageDataDiskListArrayOutput) Index(i pulumi.IntInput) InstancesInstanceStorageDataDiskListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesInstanceStorageDataDiskList {
		return vs[0].([]InstancesInstanceStorageDataDiskList)[vs[1].(int)]
	}).(InstancesInstanceStorageDataDiskListOutput)
}

type InstancesInstanceStorageSystemDisk struct {
	// The capacity of storage.
	Capacity string `pulumi:"capacity"`
	// The type of storage.
	StorageType string `pulumi:"storageType"`
}

// InstancesInstanceStorageSystemDiskInput is an input type that accepts InstancesInstanceStorageSystemDiskArgs and InstancesInstanceStorageSystemDiskOutput values.
// You can construct a concrete instance of `InstancesInstanceStorageSystemDiskInput` via:
//
//	InstancesInstanceStorageSystemDiskArgs{...}
type InstancesInstanceStorageSystemDiskInput interface {
	pulumi.Input

	ToInstancesInstanceStorageSystemDiskOutput() InstancesInstanceStorageSystemDiskOutput
	ToInstancesInstanceStorageSystemDiskOutputWithContext(context.Context) InstancesInstanceStorageSystemDiskOutput
}

type InstancesInstanceStorageSystemDiskArgs struct {
	// The capacity of storage.
	Capacity pulumi.StringInput `pulumi:"capacity"`
	// The type of storage.
	StorageType pulumi.StringInput `pulumi:"storageType"`
}

func (InstancesInstanceStorageSystemDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceStorageSystemDisk)(nil)).Elem()
}

func (i InstancesInstanceStorageSystemDiskArgs) ToInstancesInstanceStorageSystemDiskOutput() InstancesInstanceStorageSystemDiskOutput {
	return i.ToInstancesInstanceStorageSystemDiskOutputWithContext(context.Background())
}

func (i InstancesInstanceStorageSystemDiskArgs) ToInstancesInstanceStorageSystemDiskOutputWithContext(ctx context.Context) InstancesInstanceStorageSystemDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesInstanceStorageSystemDiskOutput)
}

type InstancesInstanceStorageSystemDiskOutput struct{ *pulumi.OutputState }

func (InstancesInstanceStorageSystemDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesInstanceStorageSystemDisk)(nil)).Elem()
}

func (o InstancesInstanceStorageSystemDiskOutput) ToInstancesInstanceStorageSystemDiskOutput() InstancesInstanceStorageSystemDiskOutput {
	return o
}

func (o InstancesInstanceStorageSystemDiskOutput) ToInstancesInstanceStorageSystemDiskOutputWithContext(ctx context.Context) InstancesInstanceStorageSystemDiskOutput {
	return o
}

// The capacity of storage.
func (o InstancesInstanceStorageSystemDiskOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceStorageSystemDisk) string { return v.Capacity }).(pulumi.StringOutput)
}

// The type of storage.
func (o InstancesInstanceStorageSystemDiskOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesInstanceStorageSystemDisk) string { return v.StorageType }).(pulumi.StringOutput)
}

type VpcsVpcInstance struct {
	// The account id.
	AccountIdentity int `pulumi:"accountIdentity"`
	// The cluster info.
	Cluster VpcsVpcInstanceCluster `pulumi:"cluster"`
	// The cluster vpc id.
	ClusterVpcId int `pulumi:"clusterVpcId"`
	// The creation time.
	CreateTime int `pulumi:"createTime"`
	// The description of VPC.
	Desc string `pulumi:"desc"`
	// The ID of VPC.
	Id string `pulumi:"id"`
	// Is default vpc.
	IsDefault bool `pulumi:"isDefault"`
	// The resource statistic info.
	ResourceStatistics []VpcsVpcInstanceResourceStatistic `pulumi:"resourceStatistics"`
	// The status of VPC.
	Status string `pulumi:"status"`
	// The subnets info.
	SubNets []VpcsVpcInstanceSubNet `pulumi:"subNets"`
	// The update time of VPC.
	UpdateTime int `pulumi:"updateTime"`
	// The id of user.
	UserIdentity int `pulumi:"userIdentity"`
	// The ID of VPC.
	VpcIdentity string `pulumi:"vpcIdentity"`
	// The name of VPC.
	VpcName string `pulumi:"vpcName"`
	// The namespace of VPC.
	VpcNs string `pulumi:"vpcNs"`
}

// VpcsVpcInstanceInput is an input type that accepts VpcsVpcInstanceArgs and VpcsVpcInstanceOutput values.
// You can construct a concrete instance of `VpcsVpcInstanceInput` via:
//
//	VpcsVpcInstanceArgs{...}
type VpcsVpcInstanceInput interface {
	pulumi.Input

	ToVpcsVpcInstanceOutput() VpcsVpcInstanceOutput
	ToVpcsVpcInstanceOutputWithContext(context.Context) VpcsVpcInstanceOutput
}

type VpcsVpcInstanceArgs struct {
	// The account id.
	AccountIdentity pulumi.IntInput `pulumi:"accountIdentity"`
	// The cluster info.
	Cluster VpcsVpcInstanceClusterInput `pulumi:"cluster"`
	// The cluster vpc id.
	ClusterVpcId pulumi.IntInput `pulumi:"clusterVpcId"`
	// The creation time.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The description of VPC.
	Desc pulumi.StringInput `pulumi:"desc"`
	// The ID of VPC.
	Id pulumi.StringInput `pulumi:"id"`
	// Is default vpc.
	IsDefault pulumi.BoolInput `pulumi:"isDefault"`
	// The resource statistic info.
	ResourceStatistics VpcsVpcInstanceResourceStatisticArrayInput `pulumi:"resourceStatistics"`
	// The status of VPC.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnets info.
	SubNets VpcsVpcInstanceSubNetArrayInput `pulumi:"subNets"`
	// The update time of VPC.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
	// The id of user.
	UserIdentity pulumi.IntInput `pulumi:"userIdentity"`
	// The ID of VPC.
	VpcIdentity pulumi.StringInput `pulumi:"vpcIdentity"`
	// The name of VPC.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
	// The namespace of VPC.
	VpcNs pulumi.StringInput `pulumi:"vpcNs"`
}

func (VpcsVpcInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcInstance)(nil)).Elem()
}

func (i VpcsVpcInstanceArgs) ToVpcsVpcInstanceOutput() VpcsVpcInstanceOutput {
	return i.ToVpcsVpcInstanceOutputWithContext(context.Background())
}

func (i VpcsVpcInstanceArgs) ToVpcsVpcInstanceOutputWithContext(ctx context.Context) VpcsVpcInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcInstanceOutput)
}

// VpcsVpcInstanceArrayInput is an input type that accepts VpcsVpcInstanceArray and VpcsVpcInstanceArrayOutput values.
// You can construct a concrete instance of `VpcsVpcInstanceArrayInput` via:
//
//	VpcsVpcInstanceArray{ VpcsVpcInstanceArgs{...} }
type VpcsVpcInstanceArrayInput interface {
	pulumi.Input

	ToVpcsVpcInstanceArrayOutput() VpcsVpcInstanceArrayOutput
	ToVpcsVpcInstanceArrayOutputWithContext(context.Context) VpcsVpcInstanceArrayOutput
}

type VpcsVpcInstanceArray []VpcsVpcInstanceInput

func (VpcsVpcInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcInstance)(nil)).Elem()
}

func (i VpcsVpcInstanceArray) ToVpcsVpcInstanceArrayOutput() VpcsVpcInstanceArrayOutput {
	return i.ToVpcsVpcInstanceArrayOutputWithContext(context.Background())
}

func (i VpcsVpcInstanceArray) ToVpcsVpcInstanceArrayOutputWithContext(ctx context.Context) VpcsVpcInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcInstanceArrayOutput)
}

type VpcsVpcInstanceOutput struct{ *pulumi.OutputState }

func (VpcsVpcInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcInstance)(nil)).Elem()
}

func (o VpcsVpcInstanceOutput) ToVpcsVpcInstanceOutput() VpcsVpcInstanceOutput {
	return o
}

func (o VpcsVpcInstanceOutput) ToVpcsVpcInstanceOutputWithContext(ctx context.Context) VpcsVpcInstanceOutput {
	return o
}

// The account id.
func (o VpcsVpcInstanceOutput) AccountIdentity() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstance) int { return v.AccountIdentity }).(pulumi.IntOutput)
}

// The cluster info.
func (o VpcsVpcInstanceOutput) Cluster() VpcsVpcInstanceClusterOutput {
	return o.ApplyT(func(v VpcsVpcInstance) VpcsVpcInstanceCluster { return v.Cluster }).(VpcsVpcInstanceClusterOutput)
}

// The cluster vpc id.
func (o VpcsVpcInstanceOutput) ClusterVpcId() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstance) int { return v.ClusterVpcId }).(pulumi.IntOutput)
}

// The creation time.
func (o VpcsVpcInstanceOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstance) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The description of VPC.
func (o VpcsVpcInstanceOutput) Desc() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstance) string { return v.Desc }).(pulumi.StringOutput)
}

// The ID of VPC.
func (o VpcsVpcInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Is default vpc.
func (o VpcsVpcInstanceOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v VpcsVpcInstance) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The resource statistic info.
func (o VpcsVpcInstanceOutput) ResourceStatistics() VpcsVpcInstanceResourceStatisticArrayOutput {
	return o.ApplyT(func(v VpcsVpcInstance) []VpcsVpcInstanceResourceStatistic { return v.ResourceStatistics }).(VpcsVpcInstanceResourceStatisticArrayOutput)
}

// The status of VPC.
func (o VpcsVpcInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The subnets info.
func (o VpcsVpcInstanceOutput) SubNets() VpcsVpcInstanceSubNetArrayOutput {
	return o.ApplyT(func(v VpcsVpcInstance) []VpcsVpcInstanceSubNet { return v.SubNets }).(VpcsVpcInstanceSubNetArrayOutput)
}

// The update time of VPC.
func (o VpcsVpcInstanceOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstance) int { return v.UpdateTime }).(pulumi.IntOutput)
}

// The id of user.
func (o VpcsVpcInstanceOutput) UserIdentity() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstance) int { return v.UserIdentity }).(pulumi.IntOutput)
}

// The ID of VPC.
func (o VpcsVpcInstanceOutput) VpcIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstance) string { return v.VpcIdentity }).(pulumi.StringOutput)
}

// The name of VPC.
func (o VpcsVpcInstanceOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstance) string { return v.VpcName }).(pulumi.StringOutput)
}

// The namespace of VPC.
func (o VpcsVpcInstanceOutput) VpcNs() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstance) string { return v.VpcNs }).(pulumi.StringOutput)
}

type VpcsVpcInstanceArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcInstance)(nil)).Elem()
}

func (o VpcsVpcInstanceArrayOutput) ToVpcsVpcInstanceArrayOutput() VpcsVpcInstanceArrayOutput {
	return o
}

func (o VpcsVpcInstanceArrayOutput) ToVpcsVpcInstanceArrayOutputWithContext(ctx context.Context) VpcsVpcInstanceArrayOutput {
	return o
}

func (o VpcsVpcInstanceArrayOutput) Index(i pulumi.IntInput) VpcsVpcInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpcInstance {
		return vs[0].([]VpcsVpcInstance)[vs[1].(int)]
	}).(VpcsVpcInstanceOutput)
}

type VpcsVpcInstanceCluster struct {
	// The alias of cluster.
	Alias string `pulumi:"alias"`
	// The city of cluster.
	City string `pulumi:"city"`
	// The name of cluster.
	ClusterName string `pulumi:"clusterName"`
	// The country of cluster.
	Country string `pulumi:"country"`
	// The isp of cluster.
	Isp string `pulumi:"isp"`
	// The level of cluster.
	Level string `pulumi:"level"`
	// The province of cluster.
	Province string `pulumi:"province"`
	// The region of cluster.
	Region string `pulumi:"region"`
}

// VpcsVpcInstanceClusterInput is an input type that accepts VpcsVpcInstanceClusterArgs and VpcsVpcInstanceClusterOutput values.
// You can construct a concrete instance of `VpcsVpcInstanceClusterInput` via:
//
//	VpcsVpcInstanceClusterArgs{...}
type VpcsVpcInstanceClusterInput interface {
	pulumi.Input

	ToVpcsVpcInstanceClusterOutput() VpcsVpcInstanceClusterOutput
	ToVpcsVpcInstanceClusterOutputWithContext(context.Context) VpcsVpcInstanceClusterOutput
}

type VpcsVpcInstanceClusterArgs struct {
	// The alias of cluster.
	Alias pulumi.StringInput `pulumi:"alias"`
	// The city of cluster.
	City pulumi.StringInput `pulumi:"city"`
	// The name of cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The country of cluster.
	Country pulumi.StringInput `pulumi:"country"`
	// The isp of cluster.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The level of cluster.
	Level pulumi.StringInput `pulumi:"level"`
	// The province of cluster.
	Province pulumi.StringInput `pulumi:"province"`
	// The region of cluster.
	Region pulumi.StringInput `pulumi:"region"`
}

func (VpcsVpcInstanceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcInstanceCluster)(nil)).Elem()
}

func (i VpcsVpcInstanceClusterArgs) ToVpcsVpcInstanceClusterOutput() VpcsVpcInstanceClusterOutput {
	return i.ToVpcsVpcInstanceClusterOutputWithContext(context.Background())
}

func (i VpcsVpcInstanceClusterArgs) ToVpcsVpcInstanceClusterOutputWithContext(ctx context.Context) VpcsVpcInstanceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcInstanceClusterOutput)
}

type VpcsVpcInstanceClusterOutput struct{ *pulumi.OutputState }

func (VpcsVpcInstanceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcInstanceCluster)(nil)).Elem()
}

func (o VpcsVpcInstanceClusterOutput) ToVpcsVpcInstanceClusterOutput() VpcsVpcInstanceClusterOutput {
	return o
}

func (o VpcsVpcInstanceClusterOutput) ToVpcsVpcInstanceClusterOutputWithContext(ctx context.Context) VpcsVpcInstanceClusterOutput {
	return o
}

// The alias of cluster.
func (o VpcsVpcInstanceClusterOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceCluster) string { return v.Alias }).(pulumi.StringOutput)
}

// The city of cluster.
func (o VpcsVpcInstanceClusterOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceCluster) string { return v.City }).(pulumi.StringOutput)
}

// The name of cluster.
func (o VpcsVpcInstanceClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceCluster) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The country of cluster.
func (o VpcsVpcInstanceClusterOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceCluster) string { return v.Country }).(pulumi.StringOutput)
}

// The isp of cluster.
func (o VpcsVpcInstanceClusterOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceCluster) string { return v.Isp }).(pulumi.StringOutput)
}

// The level of cluster.
func (o VpcsVpcInstanceClusterOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceCluster) string { return v.Level }).(pulumi.StringOutput)
}

// The province of cluster.
func (o VpcsVpcInstanceClusterOutput) Province() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceCluster) string { return v.Province }).(pulumi.StringOutput)
}

// The region of cluster.
func (o VpcsVpcInstanceClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceCluster) string { return v.Region }).(pulumi.StringOutput)
}

type VpcsVpcInstanceResourceStatistic struct {
	// The count of instance.
	VeenInstanceCount int `pulumi:"veenInstanceCount"`
	// The count of load balancers.
	VeewLbInstanceCount int `pulumi:"veewLbInstanceCount"`
	// The count of security groups.
	VeewSgInstanceCount int `pulumi:"veewSgInstanceCount"`
}

// VpcsVpcInstanceResourceStatisticInput is an input type that accepts VpcsVpcInstanceResourceStatisticArgs and VpcsVpcInstanceResourceStatisticOutput values.
// You can construct a concrete instance of `VpcsVpcInstanceResourceStatisticInput` via:
//
//	VpcsVpcInstanceResourceStatisticArgs{...}
type VpcsVpcInstanceResourceStatisticInput interface {
	pulumi.Input

	ToVpcsVpcInstanceResourceStatisticOutput() VpcsVpcInstanceResourceStatisticOutput
	ToVpcsVpcInstanceResourceStatisticOutputWithContext(context.Context) VpcsVpcInstanceResourceStatisticOutput
}

type VpcsVpcInstanceResourceStatisticArgs struct {
	// The count of instance.
	VeenInstanceCount pulumi.IntInput `pulumi:"veenInstanceCount"`
	// The count of load balancers.
	VeewLbInstanceCount pulumi.IntInput `pulumi:"veewLbInstanceCount"`
	// The count of security groups.
	VeewSgInstanceCount pulumi.IntInput `pulumi:"veewSgInstanceCount"`
}

func (VpcsVpcInstanceResourceStatisticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcInstanceResourceStatistic)(nil)).Elem()
}

func (i VpcsVpcInstanceResourceStatisticArgs) ToVpcsVpcInstanceResourceStatisticOutput() VpcsVpcInstanceResourceStatisticOutput {
	return i.ToVpcsVpcInstanceResourceStatisticOutputWithContext(context.Background())
}

func (i VpcsVpcInstanceResourceStatisticArgs) ToVpcsVpcInstanceResourceStatisticOutputWithContext(ctx context.Context) VpcsVpcInstanceResourceStatisticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcInstanceResourceStatisticOutput)
}

// VpcsVpcInstanceResourceStatisticArrayInput is an input type that accepts VpcsVpcInstanceResourceStatisticArray and VpcsVpcInstanceResourceStatisticArrayOutput values.
// You can construct a concrete instance of `VpcsVpcInstanceResourceStatisticArrayInput` via:
//
//	VpcsVpcInstanceResourceStatisticArray{ VpcsVpcInstanceResourceStatisticArgs{...} }
type VpcsVpcInstanceResourceStatisticArrayInput interface {
	pulumi.Input

	ToVpcsVpcInstanceResourceStatisticArrayOutput() VpcsVpcInstanceResourceStatisticArrayOutput
	ToVpcsVpcInstanceResourceStatisticArrayOutputWithContext(context.Context) VpcsVpcInstanceResourceStatisticArrayOutput
}

type VpcsVpcInstanceResourceStatisticArray []VpcsVpcInstanceResourceStatisticInput

func (VpcsVpcInstanceResourceStatisticArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcInstanceResourceStatistic)(nil)).Elem()
}

func (i VpcsVpcInstanceResourceStatisticArray) ToVpcsVpcInstanceResourceStatisticArrayOutput() VpcsVpcInstanceResourceStatisticArrayOutput {
	return i.ToVpcsVpcInstanceResourceStatisticArrayOutputWithContext(context.Background())
}

func (i VpcsVpcInstanceResourceStatisticArray) ToVpcsVpcInstanceResourceStatisticArrayOutputWithContext(ctx context.Context) VpcsVpcInstanceResourceStatisticArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcInstanceResourceStatisticArrayOutput)
}

type VpcsVpcInstanceResourceStatisticOutput struct{ *pulumi.OutputState }

func (VpcsVpcInstanceResourceStatisticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcInstanceResourceStatistic)(nil)).Elem()
}

func (o VpcsVpcInstanceResourceStatisticOutput) ToVpcsVpcInstanceResourceStatisticOutput() VpcsVpcInstanceResourceStatisticOutput {
	return o
}

func (o VpcsVpcInstanceResourceStatisticOutput) ToVpcsVpcInstanceResourceStatisticOutputWithContext(ctx context.Context) VpcsVpcInstanceResourceStatisticOutput {
	return o
}

// The count of instance.
func (o VpcsVpcInstanceResourceStatisticOutput) VeenInstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstanceResourceStatistic) int { return v.VeenInstanceCount }).(pulumi.IntOutput)
}

// The count of load balancers.
func (o VpcsVpcInstanceResourceStatisticOutput) VeewLbInstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstanceResourceStatistic) int { return v.VeewLbInstanceCount }).(pulumi.IntOutput)
}

// The count of security groups.
func (o VpcsVpcInstanceResourceStatisticOutput) VeewSgInstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstanceResourceStatistic) int { return v.VeewSgInstanceCount }).(pulumi.IntOutput)
}

type VpcsVpcInstanceResourceStatisticArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcInstanceResourceStatisticArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcInstanceResourceStatistic)(nil)).Elem()
}

func (o VpcsVpcInstanceResourceStatisticArrayOutput) ToVpcsVpcInstanceResourceStatisticArrayOutput() VpcsVpcInstanceResourceStatisticArrayOutput {
	return o
}

func (o VpcsVpcInstanceResourceStatisticArrayOutput) ToVpcsVpcInstanceResourceStatisticArrayOutputWithContext(ctx context.Context) VpcsVpcInstanceResourceStatisticArrayOutput {
	return o
}

func (o VpcsVpcInstanceResourceStatisticArrayOutput) Index(i pulumi.IntInput) VpcsVpcInstanceResourceStatisticOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpcInstanceResourceStatistic {
		return vs[0].([]VpcsVpcInstanceResourceStatistic)[vs[1].(int)]
	}).(VpcsVpcInstanceResourceStatisticOutput)
}

type VpcsVpcInstanceSubNet struct {
	// The account id.
	AccountIdentity int `pulumi:"accountIdentity"`
	// The ip of cidr.
	CidrIp string `pulumi:"cidrIp"`
	// The mask of cidr.
	CidrMask int `pulumi:"cidrMask"`
	// The creation time.
	CreateTime int `pulumi:"createTime"`
	// The id of subnet.
	SubnetIdentity string `pulumi:"subnetIdentity"`
	// The update time of VPC.
	UpdateTime int `pulumi:"updateTime"`
	// The id of user.
	UserIdentity int `pulumi:"userIdentity"`
}

// VpcsVpcInstanceSubNetInput is an input type that accepts VpcsVpcInstanceSubNetArgs and VpcsVpcInstanceSubNetOutput values.
// You can construct a concrete instance of `VpcsVpcInstanceSubNetInput` via:
//
//	VpcsVpcInstanceSubNetArgs{...}
type VpcsVpcInstanceSubNetInput interface {
	pulumi.Input

	ToVpcsVpcInstanceSubNetOutput() VpcsVpcInstanceSubNetOutput
	ToVpcsVpcInstanceSubNetOutputWithContext(context.Context) VpcsVpcInstanceSubNetOutput
}

type VpcsVpcInstanceSubNetArgs struct {
	// The account id.
	AccountIdentity pulumi.IntInput `pulumi:"accountIdentity"`
	// The ip of cidr.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The mask of cidr.
	CidrMask pulumi.IntInput `pulumi:"cidrMask"`
	// The creation time.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The id of subnet.
	SubnetIdentity pulumi.StringInput `pulumi:"subnetIdentity"`
	// The update time of VPC.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
	// The id of user.
	UserIdentity pulumi.IntInput `pulumi:"userIdentity"`
}

func (VpcsVpcInstanceSubNetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcInstanceSubNet)(nil)).Elem()
}

func (i VpcsVpcInstanceSubNetArgs) ToVpcsVpcInstanceSubNetOutput() VpcsVpcInstanceSubNetOutput {
	return i.ToVpcsVpcInstanceSubNetOutputWithContext(context.Background())
}

func (i VpcsVpcInstanceSubNetArgs) ToVpcsVpcInstanceSubNetOutputWithContext(ctx context.Context) VpcsVpcInstanceSubNetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcInstanceSubNetOutput)
}

// VpcsVpcInstanceSubNetArrayInput is an input type that accepts VpcsVpcInstanceSubNetArray and VpcsVpcInstanceSubNetArrayOutput values.
// You can construct a concrete instance of `VpcsVpcInstanceSubNetArrayInput` via:
//
//	VpcsVpcInstanceSubNetArray{ VpcsVpcInstanceSubNetArgs{...} }
type VpcsVpcInstanceSubNetArrayInput interface {
	pulumi.Input

	ToVpcsVpcInstanceSubNetArrayOutput() VpcsVpcInstanceSubNetArrayOutput
	ToVpcsVpcInstanceSubNetArrayOutputWithContext(context.Context) VpcsVpcInstanceSubNetArrayOutput
}

type VpcsVpcInstanceSubNetArray []VpcsVpcInstanceSubNetInput

func (VpcsVpcInstanceSubNetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcInstanceSubNet)(nil)).Elem()
}

func (i VpcsVpcInstanceSubNetArray) ToVpcsVpcInstanceSubNetArrayOutput() VpcsVpcInstanceSubNetArrayOutput {
	return i.ToVpcsVpcInstanceSubNetArrayOutputWithContext(context.Background())
}

func (i VpcsVpcInstanceSubNetArray) ToVpcsVpcInstanceSubNetArrayOutputWithContext(ctx context.Context) VpcsVpcInstanceSubNetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcInstanceSubNetArrayOutput)
}

type VpcsVpcInstanceSubNetOutput struct{ *pulumi.OutputState }

func (VpcsVpcInstanceSubNetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcInstanceSubNet)(nil)).Elem()
}

func (o VpcsVpcInstanceSubNetOutput) ToVpcsVpcInstanceSubNetOutput() VpcsVpcInstanceSubNetOutput {
	return o
}

func (o VpcsVpcInstanceSubNetOutput) ToVpcsVpcInstanceSubNetOutputWithContext(ctx context.Context) VpcsVpcInstanceSubNetOutput {
	return o
}

// The account id.
func (o VpcsVpcInstanceSubNetOutput) AccountIdentity() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstanceSubNet) int { return v.AccountIdentity }).(pulumi.IntOutput)
}

// The ip of cidr.
func (o VpcsVpcInstanceSubNetOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceSubNet) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The mask of cidr.
func (o VpcsVpcInstanceSubNetOutput) CidrMask() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstanceSubNet) int { return v.CidrMask }).(pulumi.IntOutput)
}

// The creation time.
func (o VpcsVpcInstanceSubNetOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstanceSubNet) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The id of subnet.
func (o VpcsVpcInstanceSubNetOutput) SubnetIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcInstanceSubNet) string { return v.SubnetIdentity }).(pulumi.StringOutput)
}

// The update time of VPC.
func (o VpcsVpcInstanceSubNetOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstanceSubNet) int { return v.UpdateTime }).(pulumi.IntOutput)
}

// The id of user.
func (o VpcsVpcInstanceSubNetOutput) UserIdentity() pulumi.IntOutput {
	return o.ApplyT(func(v VpcsVpcInstanceSubNet) int { return v.UserIdentity }).(pulumi.IntOutput)
}

type VpcsVpcInstanceSubNetArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcInstanceSubNetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcInstanceSubNet)(nil)).Elem()
}

func (o VpcsVpcInstanceSubNetArrayOutput) ToVpcsVpcInstanceSubNetArrayOutput() VpcsVpcInstanceSubNetArrayOutput {
	return o
}

func (o VpcsVpcInstanceSubNetArrayOutput) ToVpcsVpcInstanceSubNetArrayOutputWithContext(ctx context.Context) VpcsVpcInstanceSubNetArrayOutput {
	return o
}

func (o VpcsVpcInstanceSubNetArrayOutput) Index(i pulumi.IntInput) VpcsVpcInstanceSubNetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpcInstanceSubNet {
		return vs[0].([]VpcsVpcInstanceSubNet)[vs[1].(int)]
	}).(VpcsVpcInstanceSubNetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AvailableResourcesRegionInput)(nil)).Elem(), AvailableResourcesRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AvailableResourcesRegionArrayInput)(nil)).Elem(), AvailableResourcesRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AvailableResourcesRegionAreaInput)(nil)).Elem(), AvailableResourcesRegionAreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AvailableResourcesRegionCityInput)(nil)).Elem(), AvailableResourcesRegionCityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AvailableResourcesRegionClusterInput)(nil)).Elem(), AvailableResourcesRegionClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AvailableResourcesRegionCountryInput)(nil)).Elem(), AvailableResourcesRegionCountryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AvailableResourcesRegionIspInput)(nil)).Elem(), AvailableResourcesRegionIspArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerBillingConfigInput)(nil)).Elem(), CloudServerBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerBillingConfigPtrInput)(nil)).Elem(), CloudServerBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerCustomDataInput)(nil)).Elem(), CloudServerCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerCustomDataPtrInput)(nil)).Elem(), CloudServerCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerNetworkConfigInput)(nil)).Elem(), CloudServerNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerNetworkConfigPtrInput)(nil)).Elem(), CloudServerNetworkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerScheduleStrategyInput)(nil)).Elem(), CloudServerScheduleStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerScheduleStrategyPtrInput)(nil)).Elem(), CloudServerScheduleStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerStorageConfigInput)(nil)).Elem(), CloudServerStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerStorageConfigPtrInput)(nil)).Elem(), CloudServerStorageConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerStorageConfigDataDiskListInput)(nil)).Elem(), CloudServerStorageConfigDataDiskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerStorageConfigDataDiskListArrayInput)(nil)).Elem(), CloudServerStorageConfigDataDiskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerStorageConfigSystemDiskInput)(nil)).Elem(), CloudServerStorageConfigSystemDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServerStorageConfigSystemDiskPtrInput)(nil)).Elem(), CloudServerStorageConfigSystemDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerInput)(nil)).Elem(), CloudServersCloudServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerArrayInput)(nil)).Elem(), CloudServersCloudServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerBillingConfigInput)(nil)).Elem(), CloudServersCloudServerBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerCustomDataInput)(nil)).Elem(), CloudServersCloudServerCustomDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerGpuInput)(nil)).Elem(), CloudServersCloudServerGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerGpuGpusInput)(nil)).Elem(), CloudServersCloudServerGpuGpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerGpuGpusArrayInput)(nil)).Elem(), CloudServersCloudServerGpuGpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerGpuGpusGpuSpecInput)(nil)).Elem(), CloudServersCloudServerGpuGpusGpuSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerImageInput)(nil)).Elem(), CloudServersCloudServerImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerInstanceStatusInput)(nil)).Elem(), CloudServersCloudServerInstanceStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerInstanceStatusArrayInput)(nil)).Elem(), CloudServersCloudServerInstanceStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerNetworkInput)(nil)).Elem(), CloudServersCloudServerNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerScheduleStrategyConfigsInput)(nil)).Elem(), CloudServersCloudServerScheduleStrategyConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerSecretConfigInput)(nil)).Elem(), CloudServersCloudServerSecretConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerServerAreaInput)(nil)).Elem(), CloudServersCloudServerServerAreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerServerAreaArrayInput)(nil)).Elem(), CloudServersCloudServerServerAreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerStorageInput)(nil)).Elem(), CloudServersCloudServerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerStorageDataDiskInput)(nil)).Elem(), CloudServersCloudServerStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerStorageDataDiskListInput)(nil)).Elem(), CloudServersCloudServerStorageDataDiskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerStorageDataDiskListArrayInput)(nil)).Elem(), CloudServersCloudServerStorageDataDiskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudServersCloudServerStorageSystemDiskInput)(nil)).Elem(), CloudServersCloudServerStorageSystemDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTypesInstanceTypeConfigInput)(nil)).Elem(), InstanceTypesInstanceTypeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTypesInstanceTypeConfigArrayInput)(nil)).Elem(), InstanceTypesInstanceTypeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTypesInstanceTypeConfigStorageInput)(nil)).Elem(), InstanceTypesInstanceTypeConfigStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTypesInstanceTypeConfigStorageArrayInput)(nil)).Elem(), InstanceTypesInstanceTypeConfigStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceInput)(nil)).Elem(), InstancesInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceArrayInput)(nil)).Elem(), InstancesInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceClusterInput)(nil)).Elem(), InstancesInstanceClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceGpuInput)(nil)).Elem(), InstancesInstanceGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceGpuGpusInput)(nil)).Elem(), InstancesInstanceGpuGpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceGpuGpusArrayInput)(nil)).Elem(), InstancesInstanceGpuGpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceGpuGpusGpuSpecInput)(nil)).Elem(), InstancesInstanceGpuGpusGpuSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceImageInput)(nil)).Elem(), InstancesInstanceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNetworkInput)(nil)).Elem(), InstancesInstanceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNetworkExternalInterfaceInput)(nil)).Elem(), InstancesInstanceNetworkExternalInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNetworkExternalInterfaceIpInput)(nil)).Elem(), InstancesInstanceNetworkExternalInterfaceIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNetworkExternalInterfaceIpArrayInput)(nil)).Elem(), InstancesInstanceNetworkExternalInterfaceIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNetworkInternalInterfaceInput)(nil)).Elem(), InstancesInstanceNetworkInternalInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNetworkInternalInterfaceIpInput)(nil)).Elem(), InstancesInstanceNetworkInternalInterfaceIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceNetworkInternalInterfaceIpArrayInput)(nil)).Elem(), InstancesInstanceNetworkInternalInterfaceIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceStorageInput)(nil)).Elem(), InstancesInstanceStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceStorageDataDiskInput)(nil)).Elem(), InstancesInstanceStorageDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceStorageDataDiskListInput)(nil)).Elem(), InstancesInstanceStorageDataDiskListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceStorageDataDiskListArrayInput)(nil)).Elem(), InstancesInstanceStorageDataDiskListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesInstanceStorageSystemDiskInput)(nil)).Elem(), InstancesInstanceStorageSystemDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInstanceInput)(nil)).Elem(), VpcsVpcInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInstanceArrayInput)(nil)).Elem(), VpcsVpcInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInstanceClusterInput)(nil)).Elem(), VpcsVpcInstanceClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInstanceResourceStatisticInput)(nil)).Elem(), VpcsVpcInstanceResourceStatisticArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInstanceResourceStatisticArrayInput)(nil)).Elem(), VpcsVpcInstanceResourceStatisticArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInstanceSubNetInput)(nil)).Elem(), VpcsVpcInstanceSubNetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInstanceSubNetArrayInput)(nil)).Elem(), VpcsVpcInstanceSubNetArray{})
	pulumi.RegisterOutputType(AvailableResourcesRegionOutput{})
	pulumi.RegisterOutputType(AvailableResourcesRegionArrayOutput{})
	pulumi.RegisterOutputType(AvailableResourcesRegionAreaOutput{})
	pulumi.RegisterOutputType(AvailableResourcesRegionCityOutput{})
	pulumi.RegisterOutputType(AvailableResourcesRegionClusterOutput{})
	pulumi.RegisterOutputType(AvailableResourcesRegionCountryOutput{})
	pulumi.RegisterOutputType(AvailableResourcesRegionIspOutput{})
	pulumi.RegisterOutputType(CloudServerBillingConfigOutput{})
	pulumi.RegisterOutputType(CloudServerBillingConfigPtrOutput{})
	pulumi.RegisterOutputType(CloudServerCustomDataOutput{})
	pulumi.RegisterOutputType(CloudServerCustomDataPtrOutput{})
	pulumi.RegisterOutputType(CloudServerNetworkConfigOutput{})
	pulumi.RegisterOutputType(CloudServerNetworkConfigPtrOutput{})
	pulumi.RegisterOutputType(CloudServerScheduleStrategyOutput{})
	pulumi.RegisterOutputType(CloudServerScheduleStrategyPtrOutput{})
	pulumi.RegisterOutputType(CloudServerStorageConfigOutput{})
	pulumi.RegisterOutputType(CloudServerStorageConfigPtrOutput{})
	pulumi.RegisterOutputType(CloudServerStorageConfigDataDiskListOutput{})
	pulumi.RegisterOutputType(CloudServerStorageConfigDataDiskListArrayOutput{})
	pulumi.RegisterOutputType(CloudServerStorageConfigSystemDiskOutput{})
	pulumi.RegisterOutputType(CloudServerStorageConfigSystemDiskPtrOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerArrayOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerBillingConfigOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerCustomDataOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerGpuOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerGpuGpusOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerGpuGpusArrayOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerGpuGpusGpuSpecOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerImageOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerInstanceStatusOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerInstanceStatusArrayOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerNetworkOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerScheduleStrategyConfigsOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerSecretConfigOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerServerAreaOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerServerAreaArrayOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerStorageOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerStorageDataDiskOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerStorageDataDiskListOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerStorageDataDiskListArrayOutput{})
	pulumi.RegisterOutputType(CloudServersCloudServerStorageSystemDiskOutput{})
	pulumi.RegisterOutputType(InstanceTypesInstanceTypeConfigOutput{})
	pulumi.RegisterOutputType(InstanceTypesInstanceTypeConfigArrayOutput{})
	pulumi.RegisterOutputType(InstanceTypesInstanceTypeConfigStorageOutput{})
	pulumi.RegisterOutputType(InstanceTypesInstanceTypeConfigStorageArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceOutput{})
	pulumi.RegisterOutputType(InstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceClusterOutput{})
	pulumi.RegisterOutputType(InstancesInstanceGpuOutput{})
	pulumi.RegisterOutputType(InstancesInstanceGpuGpusOutput{})
	pulumi.RegisterOutputType(InstancesInstanceGpuGpusArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceGpuGpusGpuSpecOutput{})
	pulumi.RegisterOutputType(InstancesInstanceImageOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNetworkOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNetworkExternalInterfaceOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNetworkExternalInterfaceIpOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNetworkExternalInterfaceIpArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNetworkInternalInterfaceOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNetworkInternalInterfaceIpOutput{})
	pulumi.RegisterOutputType(InstancesInstanceNetworkInternalInterfaceIpArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceStorageOutput{})
	pulumi.RegisterOutputType(InstancesInstanceStorageDataDiskOutput{})
	pulumi.RegisterOutputType(InstancesInstanceStorageDataDiskListOutput{})
	pulumi.RegisterOutputType(InstancesInstanceStorageDataDiskListArrayOutput{})
	pulumi.RegisterOutputType(InstancesInstanceStorageSystemDiskOutput{})
	pulumi.RegisterOutputType(VpcsVpcInstanceOutput{})
	pulumi.RegisterOutputType(VpcsVpcInstanceArrayOutput{})
	pulumi.RegisterOutputType(VpcsVpcInstanceClusterOutput{})
	pulumi.RegisterOutputType(VpcsVpcInstanceResourceStatisticOutput{})
	pulumi.RegisterOutputType(VpcsVpcInstanceResourceStatisticArrayOutput{})
	pulumi.RegisterOutputType(VpcsVpcInstanceSubNetOutput{})
	pulumi.RegisterOutputType(VpcsVpcInstanceSubNetArrayOutput{})
}
