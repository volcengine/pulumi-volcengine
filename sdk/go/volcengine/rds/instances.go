// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// (Deprecated! Recommend use volcengine_rds_mysql_*** replace) Use this data source to query detailed information of rds instances
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds.Instances(ctx, &rds.InstancesArgs{
//				InstanceId: pulumi.StringRef("mysql-0fdd3bab2e7c"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func Instances(ctx *pulumi.Context, args *InstancesArgs, opts ...pulumi.InvokeOption) (*InstancesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv InstancesResult
	err := ctx.Invoke("volcengine:rds/instances:Instances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Instances.
type InstancesArgs struct {
	// The end time of creating RDS instance.
	CreateEndTime *string `pulumi:"createEndTime"`
	// The start time of creating RDS instance.
	CreateStartTime *string `pulumi:"createStartTime"`
	// The id of the RDS instance.
	InstanceId *string `pulumi:"instanceId"`
	// The status of the RDS instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// The type of the RDS instance.
	InstanceType *string `pulumi:"instanceType"`
	// A Name Regex of RDS instance.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The region of the RDS instance.
	Region *string `pulumi:"region"`
	// The available zone of the RDS instance.
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by Instances.
type InstancesResult struct {
	CreateEndTime   *string `pulumi:"createEndTime"`
	CreateStartTime *string `pulumi:"createStartTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the RDS instance.
	InstanceId *string `pulumi:"instanceId"`
	// The status of the RDS instance.
	InstanceStatus *string `pulumi:"instanceStatus"`
	// The type of the RDS instance.
	InstanceType *string `pulumi:"instanceType"`
	NameRegex    *string `pulumi:"nameRegex"`
	OutputFile   *string `pulumi:"outputFile"`
	// The collection of RDS instance query.
	RdsInstances []InstancesRdsInstance `pulumi:"rdsInstances"`
	// The region of the RDS instance.
	Region *string `pulumi:"region"`
	// The total count of RDS instance query.
	TotalCount int `pulumi:"totalCount"`
	// The available zone of the RDS instance.
	Zone *string `pulumi:"zone"`
}

func InstancesOutput(ctx *pulumi.Context, args InstancesOutputArgs, opts ...pulumi.InvokeOption) InstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (InstancesResult, error) {
			args := v.(InstancesArgs)
			r, err := Instances(ctx, &args, opts...)
			var s InstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(InstancesResultOutput)
}

// A collection of arguments for invoking Instances.
type InstancesOutputArgs struct {
	// The end time of creating RDS instance.
	CreateEndTime pulumi.StringPtrInput `pulumi:"createEndTime"`
	// The start time of creating RDS instance.
	CreateStartTime pulumi.StringPtrInput `pulumi:"createStartTime"`
	// The id of the RDS instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The status of the RDS instance.
	InstanceStatus pulumi.StringPtrInput `pulumi:"instanceStatus"`
	// The type of the RDS instance.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// A Name Regex of RDS instance.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The region of the RDS instance.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The available zone of the RDS instance.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesArgs)(nil)).Elem()
}

// A collection of values returned by Instances.
type InstancesResultOutput struct{ *pulumi.OutputState }

func (InstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesResult)(nil)).Elem()
}

func (o InstancesResultOutput) ToInstancesResultOutput() InstancesResultOutput {
	return o
}

func (o InstancesResultOutput) ToInstancesResultOutputWithContext(ctx context.Context) InstancesResultOutput {
	return o
}

func (o InstancesResultOutput) CreateEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.CreateEndTime }).(pulumi.StringPtrOutput)
}

func (o InstancesResultOutput) CreateStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.CreateStartTime }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o InstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the RDS instance.
func (o InstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The status of the RDS instance.
func (o InstancesResultOutput) InstanceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.InstanceStatus }).(pulumi.StringPtrOutput)
}

// The type of the RDS instance.
func (o InstancesResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o InstancesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o InstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of RDS instance query.
func (o InstancesResultOutput) RdsInstances() InstancesRdsInstanceArrayOutput {
	return o.ApplyT(func(v InstancesResult) []InstancesRdsInstance { return v.RdsInstances }).(InstancesRdsInstanceArrayOutput)
}

// The region of the RDS instance.
func (o InstancesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The total count of RDS instance query.
func (o InstancesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The available zone of the RDS instance.
func (o InstancesResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancesResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(InstancesResultOutput{})
}
