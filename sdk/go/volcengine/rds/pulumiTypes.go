// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AccountPrivilegeDbPrivilege struct {
	// The privilege type of the account.
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The privilege string of the account.
	AccountPrivilegeStr *string `pulumi:"accountPrivilegeStr"`
	// The name of database.
	DbName string `pulumi:"dbName"`
}

// AccountPrivilegeDbPrivilegeInput is an input type that accepts AccountPrivilegeDbPrivilegeArgs and AccountPrivilegeDbPrivilegeOutput values.
// You can construct a concrete instance of `AccountPrivilegeDbPrivilegeInput` via:
//
//	AccountPrivilegeDbPrivilegeArgs{...}
type AccountPrivilegeDbPrivilegeInput interface {
	pulumi.Input

	ToAccountPrivilegeDbPrivilegeOutput() AccountPrivilegeDbPrivilegeOutput
	ToAccountPrivilegeDbPrivilegeOutputWithContext(context.Context) AccountPrivilegeDbPrivilegeOutput
}

type AccountPrivilegeDbPrivilegeArgs struct {
	// The privilege type of the account.
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The privilege string of the account.
	AccountPrivilegeStr pulumi.StringPtrInput `pulumi:"accountPrivilegeStr"`
	// The name of database.
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (AccountPrivilegeDbPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPrivilegeDbPrivilege)(nil)).Elem()
}

func (i AccountPrivilegeDbPrivilegeArgs) ToAccountPrivilegeDbPrivilegeOutput() AccountPrivilegeDbPrivilegeOutput {
	return i.ToAccountPrivilegeDbPrivilegeOutputWithContext(context.Background())
}

func (i AccountPrivilegeDbPrivilegeArgs) ToAccountPrivilegeDbPrivilegeOutputWithContext(ctx context.Context) AccountPrivilegeDbPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPrivilegeDbPrivilegeOutput)
}

// AccountPrivilegeDbPrivilegeArrayInput is an input type that accepts AccountPrivilegeDbPrivilegeArray and AccountPrivilegeDbPrivilegeArrayOutput values.
// You can construct a concrete instance of `AccountPrivilegeDbPrivilegeArrayInput` via:
//
//	AccountPrivilegeDbPrivilegeArray{ AccountPrivilegeDbPrivilegeArgs{...} }
type AccountPrivilegeDbPrivilegeArrayInput interface {
	pulumi.Input

	ToAccountPrivilegeDbPrivilegeArrayOutput() AccountPrivilegeDbPrivilegeArrayOutput
	ToAccountPrivilegeDbPrivilegeArrayOutputWithContext(context.Context) AccountPrivilegeDbPrivilegeArrayOutput
}

type AccountPrivilegeDbPrivilegeArray []AccountPrivilegeDbPrivilegeInput

func (AccountPrivilegeDbPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountPrivilegeDbPrivilege)(nil)).Elem()
}

func (i AccountPrivilegeDbPrivilegeArray) ToAccountPrivilegeDbPrivilegeArrayOutput() AccountPrivilegeDbPrivilegeArrayOutput {
	return i.ToAccountPrivilegeDbPrivilegeArrayOutputWithContext(context.Background())
}

func (i AccountPrivilegeDbPrivilegeArray) ToAccountPrivilegeDbPrivilegeArrayOutputWithContext(ctx context.Context) AccountPrivilegeDbPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPrivilegeDbPrivilegeArrayOutput)
}

type AccountPrivilegeDbPrivilegeOutput struct{ *pulumi.OutputState }

func (AccountPrivilegeDbPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountPrivilegeDbPrivilege)(nil)).Elem()
}

func (o AccountPrivilegeDbPrivilegeOutput) ToAccountPrivilegeDbPrivilegeOutput() AccountPrivilegeDbPrivilegeOutput {
	return o
}

func (o AccountPrivilegeDbPrivilegeOutput) ToAccountPrivilegeDbPrivilegeOutputWithContext(ctx context.Context) AccountPrivilegeDbPrivilegeOutput {
	return o
}

// The privilege type of the account.
func (o AccountPrivilegeDbPrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPrivilegeDbPrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The privilege string of the account.
func (o AccountPrivilegeDbPrivilegeOutput) AccountPrivilegeStr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountPrivilegeDbPrivilege) *string { return v.AccountPrivilegeStr }).(pulumi.StringPtrOutput)
}

// The name of database.
func (o AccountPrivilegeDbPrivilegeOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountPrivilegeDbPrivilege) string { return v.DbName }).(pulumi.StringOutput)
}

type AccountPrivilegeDbPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (AccountPrivilegeDbPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountPrivilegeDbPrivilege)(nil)).Elem()
}

func (o AccountPrivilegeDbPrivilegeArrayOutput) ToAccountPrivilegeDbPrivilegeArrayOutput() AccountPrivilegeDbPrivilegeArrayOutput {
	return o
}

func (o AccountPrivilegeDbPrivilegeArrayOutput) ToAccountPrivilegeDbPrivilegeArrayOutputWithContext(ctx context.Context) AccountPrivilegeDbPrivilegeArrayOutput {
	return o
}

func (o AccountPrivilegeDbPrivilegeArrayOutput) Index(i pulumi.IntInput) AccountPrivilegeDbPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountPrivilegeDbPrivilege {
		return vs[0].([]AccountPrivilegeDbPrivilege)[vs[1].(int)]
	}).(AccountPrivilegeDbPrivilegeOutput)
}

type AccountsRdsAccount struct {
	// The name of the database account.
	AccountName string `pulumi:"accountName"`
	// The status of the database account.
	AccountStatus string `pulumi:"accountStatus"`
	// The type of the database account.
	AccountType string `pulumi:"accountType"`
	// The privilege detail list of RDS instance account.
	DbPrivileges []AccountsRdsAccountDbPrivilege `pulumi:"dbPrivileges"`
	// The ID of the RDS instance account.
	Id string `pulumi:"id"`
}

// AccountsRdsAccountInput is an input type that accepts AccountsRdsAccountArgs and AccountsRdsAccountOutput values.
// You can construct a concrete instance of `AccountsRdsAccountInput` via:
//
//	AccountsRdsAccountArgs{...}
type AccountsRdsAccountInput interface {
	pulumi.Input

	ToAccountsRdsAccountOutput() AccountsRdsAccountOutput
	ToAccountsRdsAccountOutputWithContext(context.Context) AccountsRdsAccountOutput
}

type AccountsRdsAccountArgs struct {
	// The name of the database account.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The status of the database account.
	AccountStatus pulumi.StringInput `pulumi:"accountStatus"`
	// The type of the database account.
	AccountType pulumi.StringInput `pulumi:"accountType"`
	// The privilege detail list of RDS instance account.
	DbPrivileges AccountsRdsAccountDbPrivilegeArrayInput `pulumi:"dbPrivileges"`
	// The ID of the RDS instance account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (AccountsRdsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsRdsAccount)(nil)).Elem()
}

func (i AccountsRdsAccountArgs) ToAccountsRdsAccountOutput() AccountsRdsAccountOutput {
	return i.ToAccountsRdsAccountOutputWithContext(context.Background())
}

func (i AccountsRdsAccountArgs) ToAccountsRdsAccountOutputWithContext(ctx context.Context) AccountsRdsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsRdsAccountOutput)
}

// AccountsRdsAccountArrayInput is an input type that accepts AccountsRdsAccountArray and AccountsRdsAccountArrayOutput values.
// You can construct a concrete instance of `AccountsRdsAccountArrayInput` via:
//
//	AccountsRdsAccountArray{ AccountsRdsAccountArgs{...} }
type AccountsRdsAccountArrayInput interface {
	pulumi.Input

	ToAccountsRdsAccountArrayOutput() AccountsRdsAccountArrayOutput
	ToAccountsRdsAccountArrayOutputWithContext(context.Context) AccountsRdsAccountArrayOutput
}

type AccountsRdsAccountArray []AccountsRdsAccountInput

func (AccountsRdsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsRdsAccount)(nil)).Elem()
}

func (i AccountsRdsAccountArray) ToAccountsRdsAccountArrayOutput() AccountsRdsAccountArrayOutput {
	return i.ToAccountsRdsAccountArrayOutputWithContext(context.Background())
}

func (i AccountsRdsAccountArray) ToAccountsRdsAccountArrayOutputWithContext(ctx context.Context) AccountsRdsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsRdsAccountArrayOutput)
}

type AccountsRdsAccountOutput struct{ *pulumi.OutputState }

func (AccountsRdsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsRdsAccount)(nil)).Elem()
}

func (o AccountsRdsAccountOutput) ToAccountsRdsAccountOutput() AccountsRdsAccountOutput {
	return o
}

func (o AccountsRdsAccountOutput) ToAccountsRdsAccountOutputWithContext(ctx context.Context) AccountsRdsAccountOutput {
	return o
}

// The name of the database account.
func (o AccountsRdsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsRdsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// The status of the database account.
func (o AccountsRdsAccountOutput) AccountStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsRdsAccount) string { return v.AccountStatus }).(pulumi.StringOutput)
}

// The type of the database account.
func (o AccountsRdsAccountOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsRdsAccount) string { return v.AccountType }).(pulumi.StringOutput)
}

// The privilege detail list of RDS instance account.
func (o AccountsRdsAccountOutput) DbPrivileges() AccountsRdsAccountDbPrivilegeArrayOutput {
	return o.ApplyT(func(v AccountsRdsAccount) []AccountsRdsAccountDbPrivilege { return v.DbPrivileges }).(AccountsRdsAccountDbPrivilegeArrayOutput)
}

// The ID of the RDS instance account.
func (o AccountsRdsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsRdsAccount) string { return v.Id }).(pulumi.StringOutput)
}

type AccountsRdsAccountArrayOutput struct{ *pulumi.OutputState }

func (AccountsRdsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsRdsAccount)(nil)).Elem()
}

func (o AccountsRdsAccountArrayOutput) ToAccountsRdsAccountArrayOutput() AccountsRdsAccountArrayOutput {
	return o
}

func (o AccountsRdsAccountArrayOutput) ToAccountsRdsAccountArrayOutputWithContext(ctx context.Context) AccountsRdsAccountArrayOutput {
	return o
}

func (o AccountsRdsAccountArrayOutput) Index(i pulumi.IntInput) AccountsRdsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountsRdsAccount {
		return vs[0].([]AccountsRdsAccount)[vs[1].(int)]
	}).(AccountsRdsAccountOutput)
}

type AccountsRdsAccountDbPrivilege struct {
	// The privilege type of the account.
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The privilege string of the account.
	AccountPrivilegeStr string `pulumi:"accountPrivilegeStr"`
	// The name of database.
	DbName string `pulumi:"dbName"`
}

// AccountsRdsAccountDbPrivilegeInput is an input type that accepts AccountsRdsAccountDbPrivilegeArgs and AccountsRdsAccountDbPrivilegeOutput values.
// You can construct a concrete instance of `AccountsRdsAccountDbPrivilegeInput` via:
//
//	AccountsRdsAccountDbPrivilegeArgs{...}
type AccountsRdsAccountDbPrivilegeInput interface {
	pulumi.Input

	ToAccountsRdsAccountDbPrivilegeOutput() AccountsRdsAccountDbPrivilegeOutput
	ToAccountsRdsAccountDbPrivilegeOutputWithContext(context.Context) AccountsRdsAccountDbPrivilegeOutput
}

type AccountsRdsAccountDbPrivilegeArgs struct {
	// The privilege type of the account.
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The privilege string of the account.
	AccountPrivilegeStr pulumi.StringInput `pulumi:"accountPrivilegeStr"`
	// The name of database.
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (AccountsRdsAccountDbPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsRdsAccountDbPrivilege)(nil)).Elem()
}

func (i AccountsRdsAccountDbPrivilegeArgs) ToAccountsRdsAccountDbPrivilegeOutput() AccountsRdsAccountDbPrivilegeOutput {
	return i.ToAccountsRdsAccountDbPrivilegeOutputWithContext(context.Background())
}

func (i AccountsRdsAccountDbPrivilegeArgs) ToAccountsRdsAccountDbPrivilegeOutputWithContext(ctx context.Context) AccountsRdsAccountDbPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsRdsAccountDbPrivilegeOutput)
}

// AccountsRdsAccountDbPrivilegeArrayInput is an input type that accepts AccountsRdsAccountDbPrivilegeArray and AccountsRdsAccountDbPrivilegeArrayOutput values.
// You can construct a concrete instance of `AccountsRdsAccountDbPrivilegeArrayInput` via:
//
//	AccountsRdsAccountDbPrivilegeArray{ AccountsRdsAccountDbPrivilegeArgs{...} }
type AccountsRdsAccountDbPrivilegeArrayInput interface {
	pulumi.Input

	ToAccountsRdsAccountDbPrivilegeArrayOutput() AccountsRdsAccountDbPrivilegeArrayOutput
	ToAccountsRdsAccountDbPrivilegeArrayOutputWithContext(context.Context) AccountsRdsAccountDbPrivilegeArrayOutput
}

type AccountsRdsAccountDbPrivilegeArray []AccountsRdsAccountDbPrivilegeInput

func (AccountsRdsAccountDbPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsRdsAccountDbPrivilege)(nil)).Elem()
}

func (i AccountsRdsAccountDbPrivilegeArray) ToAccountsRdsAccountDbPrivilegeArrayOutput() AccountsRdsAccountDbPrivilegeArrayOutput {
	return i.ToAccountsRdsAccountDbPrivilegeArrayOutputWithContext(context.Background())
}

func (i AccountsRdsAccountDbPrivilegeArray) ToAccountsRdsAccountDbPrivilegeArrayOutputWithContext(ctx context.Context) AccountsRdsAccountDbPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountsRdsAccountDbPrivilegeArrayOutput)
}

type AccountsRdsAccountDbPrivilegeOutput struct{ *pulumi.OutputState }

func (AccountsRdsAccountDbPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountsRdsAccountDbPrivilege)(nil)).Elem()
}

func (o AccountsRdsAccountDbPrivilegeOutput) ToAccountsRdsAccountDbPrivilegeOutput() AccountsRdsAccountDbPrivilegeOutput {
	return o
}

func (o AccountsRdsAccountDbPrivilegeOutput) ToAccountsRdsAccountDbPrivilegeOutputWithContext(ctx context.Context) AccountsRdsAccountDbPrivilegeOutput {
	return o
}

// The privilege type of the account.
func (o AccountsRdsAccountDbPrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsRdsAccountDbPrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The privilege string of the account.
func (o AccountsRdsAccountDbPrivilegeOutput) AccountPrivilegeStr() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsRdsAccountDbPrivilege) string { return v.AccountPrivilegeStr }).(pulumi.StringOutput)
}

// The name of database.
func (o AccountsRdsAccountDbPrivilegeOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v AccountsRdsAccountDbPrivilege) string { return v.DbName }).(pulumi.StringOutput)
}

type AccountsRdsAccountDbPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (AccountsRdsAccountDbPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountsRdsAccountDbPrivilege)(nil)).Elem()
}

func (o AccountsRdsAccountDbPrivilegeArrayOutput) ToAccountsRdsAccountDbPrivilegeArrayOutput() AccountsRdsAccountDbPrivilegeArrayOutput {
	return o
}

func (o AccountsRdsAccountDbPrivilegeArrayOutput) ToAccountsRdsAccountDbPrivilegeArrayOutputWithContext(ctx context.Context) AccountsRdsAccountDbPrivilegeArrayOutput {
	return o
}

func (o AccountsRdsAccountDbPrivilegeArrayOutput) Index(i pulumi.IntInput) AccountsRdsAccountDbPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountsRdsAccountDbPrivilege {
		return vs[0].([]AccountsRdsAccountDbPrivilege)[vs[1].(int)]
	}).(AccountsRdsAccountDbPrivilegeOutput)
}

type DatabasesRdsDatabase struct {
	// The account names of the RDS database.
	AccountNames string `pulumi:"accountNames"`
	// The character set of the RDS database.
	CharacterSetName string `pulumi:"characterSetName"`
	// The name of the RDS database.
	DbName string `pulumi:"dbName"`
	// The status of the RDS database.
	DbStatus string `pulumi:"dbStatus"`
	// The ID of the RDS database.
	Id string `pulumi:"id"`
}

// DatabasesRdsDatabaseInput is an input type that accepts DatabasesRdsDatabaseArgs and DatabasesRdsDatabaseOutput values.
// You can construct a concrete instance of `DatabasesRdsDatabaseInput` via:
//
//	DatabasesRdsDatabaseArgs{...}
type DatabasesRdsDatabaseInput interface {
	pulumi.Input

	ToDatabasesRdsDatabaseOutput() DatabasesRdsDatabaseOutput
	ToDatabasesRdsDatabaseOutputWithContext(context.Context) DatabasesRdsDatabaseOutput
}

type DatabasesRdsDatabaseArgs struct {
	// The account names of the RDS database.
	AccountNames pulumi.StringInput `pulumi:"accountNames"`
	// The character set of the RDS database.
	CharacterSetName pulumi.StringInput `pulumi:"characterSetName"`
	// The name of the RDS database.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// The status of the RDS database.
	DbStatus pulumi.StringInput `pulumi:"dbStatus"`
	// The ID of the RDS database.
	Id pulumi.StringInput `pulumi:"id"`
}

func (DatabasesRdsDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasesRdsDatabase)(nil)).Elem()
}

func (i DatabasesRdsDatabaseArgs) ToDatabasesRdsDatabaseOutput() DatabasesRdsDatabaseOutput {
	return i.ToDatabasesRdsDatabaseOutputWithContext(context.Background())
}

func (i DatabasesRdsDatabaseArgs) ToDatabasesRdsDatabaseOutputWithContext(ctx context.Context) DatabasesRdsDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasesRdsDatabaseOutput)
}

// DatabasesRdsDatabaseArrayInput is an input type that accepts DatabasesRdsDatabaseArray and DatabasesRdsDatabaseArrayOutput values.
// You can construct a concrete instance of `DatabasesRdsDatabaseArrayInput` via:
//
//	DatabasesRdsDatabaseArray{ DatabasesRdsDatabaseArgs{...} }
type DatabasesRdsDatabaseArrayInput interface {
	pulumi.Input

	ToDatabasesRdsDatabaseArrayOutput() DatabasesRdsDatabaseArrayOutput
	ToDatabasesRdsDatabaseArrayOutputWithContext(context.Context) DatabasesRdsDatabaseArrayOutput
}

type DatabasesRdsDatabaseArray []DatabasesRdsDatabaseInput

func (DatabasesRdsDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasesRdsDatabase)(nil)).Elem()
}

func (i DatabasesRdsDatabaseArray) ToDatabasesRdsDatabaseArrayOutput() DatabasesRdsDatabaseArrayOutput {
	return i.ToDatabasesRdsDatabaseArrayOutputWithContext(context.Background())
}

func (i DatabasesRdsDatabaseArray) ToDatabasesRdsDatabaseArrayOutputWithContext(ctx context.Context) DatabasesRdsDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasesRdsDatabaseArrayOutput)
}

type DatabasesRdsDatabaseOutput struct{ *pulumi.OutputState }

func (DatabasesRdsDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabasesRdsDatabase)(nil)).Elem()
}

func (o DatabasesRdsDatabaseOutput) ToDatabasesRdsDatabaseOutput() DatabasesRdsDatabaseOutput {
	return o
}

func (o DatabasesRdsDatabaseOutput) ToDatabasesRdsDatabaseOutputWithContext(ctx context.Context) DatabasesRdsDatabaseOutput {
	return o
}

// The account names of the RDS database.
func (o DatabasesRdsDatabaseOutput) AccountNames() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesRdsDatabase) string { return v.AccountNames }).(pulumi.StringOutput)
}

// The character set of the RDS database.
func (o DatabasesRdsDatabaseOutput) CharacterSetName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesRdsDatabase) string { return v.CharacterSetName }).(pulumi.StringOutput)
}

// The name of the RDS database.
func (o DatabasesRdsDatabaseOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesRdsDatabase) string { return v.DbName }).(pulumi.StringOutput)
}

// The status of the RDS database.
func (o DatabasesRdsDatabaseOutput) DbStatus() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesRdsDatabase) string { return v.DbStatus }).(pulumi.StringOutput)
}

// The ID of the RDS database.
func (o DatabasesRdsDatabaseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DatabasesRdsDatabase) string { return v.Id }).(pulumi.StringOutput)
}

type DatabasesRdsDatabaseArrayOutput struct{ *pulumi.OutputState }

func (DatabasesRdsDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabasesRdsDatabase)(nil)).Elem()
}

func (o DatabasesRdsDatabaseArrayOutput) ToDatabasesRdsDatabaseArrayOutput() DatabasesRdsDatabaseArrayOutput {
	return o
}

func (o DatabasesRdsDatabaseArrayOutput) ToDatabasesRdsDatabaseArrayOutputWithContext(ctx context.Context) DatabasesRdsDatabaseArrayOutput {
	return o
}

func (o DatabasesRdsDatabaseArrayOutput) Index(i pulumi.IntInput) DatabasesRdsDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabasesRdsDatabase {
		return vs[0].([]DatabasesRdsDatabase)[vs[1].(int)]
	}).(DatabasesRdsDatabaseOutput)
}

type InstanceConnectionInfo struct {
	// Whether global read-only is enabled.
	EnableReadOnly *string `pulumi:"enableReadOnly"`
	// Whether read-write separation is enabled.
	EnableReadWriteSplitting *string `pulumi:"enableReadWriteSplitting"`
	// The internal domain of the RDS instance.
	InternalDomain *string `pulumi:"internalDomain"`
	// The interval port of the RDS instance.
	InternalPort *string `pulumi:"internalPort"`
	// The public domain of the RDS instance.
	PublicDomain *string `pulumi:"publicDomain"`
	// The public port of the RDS instance.
	PublicPort *string `pulumi:"publicPort"`
}

// InstanceConnectionInfoInput is an input type that accepts InstanceConnectionInfoArgs and InstanceConnectionInfoOutput values.
// You can construct a concrete instance of `InstanceConnectionInfoInput` via:
//
//	InstanceConnectionInfoArgs{...}
type InstanceConnectionInfoInput interface {
	pulumi.Input

	ToInstanceConnectionInfoOutput() InstanceConnectionInfoOutput
	ToInstanceConnectionInfoOutputWithContext(context.Context) InstanceConnectionInfoOutput
}

type InstanceConnectionInfoArgs struct {
	// Whether global read-only is enabled.
	EnableReadOnly pulumi.StringPtrInput `pulumi:"enableReadOnly"`
	// Whether read-write separation is enabled.
	EnableReadWriteSplitting pulumi.StringPtrInput `pulumi:"enableReadWriteSplitting"`
	// The internal domain of the RDS instance.
	InternalDomain pulumi.StringPtrInput `pulumi:"internalDomain"`
	// The interval port of the RDS instance.
	InternalPort pulumi.StringPtrInput `pulumi:"internalPort"`
	// The public domain of the RDS instance.
	PublicDomain pulumi.StringPtrInput `pulumi:"publicDomain"`
	// The public port of the RDS instance.
	PublicPort pulumi.StringPtrInput `pulumi:"publicPort"`
}

func (InstanceConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectionInfo)(nil)).Elem()
}

func (i InstanceConnectionInfoArgs) ToInstanceConnectionInfoOutput() InstanceConnectionInfoOutput {
	return i.ToInstanceConnectionInfoOutputWithContext(context.Background())
}

func (i InstanceConnectionInfoArgs) ToInstanceConnectionInfoOutputWithContext(ctx context.Context) InstanceConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConnectionInfoOutput)
}

func (i InstanceConnectionInfoArgs) ToInstanceConnectionInfoPtrOutput() InstanceConnectionInfoPtrOutput {
	return i.ToInstanceConnectionInfoPtrOutputWithContext(context.Background())
}

func (i InstanceConnectionInfoArgs) ToInstanceConnectionInfoPtrOutputWithContext(ctx context.Context) InstanceConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConnectionInfoOutput).ToInstanceConnectionInfoPtrOutputWithContext(ctx)
}

// InstanceConnectionInfoPtrInput is an input type that accepts InstanceConnectionInfoArgs, InstanceConnectionInfoPtr and InstanceConnectionInfoPtrOutput values.
// You can construct a concrete instance of `InstanceConnectionInfoPtrInput` via:
//
//	        InstanceConnectionInfoArgs{...}
//
//	or:
//
//	        nil
type InstanceConnectionInfoPtrInput interface {
	pulumi.Input

	ToInstanceConnectionInfoPtrOutput() InstanceConnectionInfoPtrOutput
	ToInstanceConnectionInfoPtrOutputWithContext(context.Context) InstanceConnectionInfoPtrOutput
}

type instanceConnectionInfoPtrType InstanceConnectionInfoArgs

func InstanceConnectionInfoPtr(v *InstanceConnectionInfoArgs) InstanceConnectionInfoPtrInput {
	return (*instanceConnectionInfoPtrType)(v)
}

func (*instanceConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConnectionInfo)(nil)).Elem()
}

func (i *instanceConnectionInfoPtrType) ToInstanceConnectionInfoPtrOutput() InstanceConnectionInfoPtrOutput {
	return i.ToInstanceConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *instanceConnectionInfoPtrType) ToInstanceConnectionInfoPtrOutputWithContext(ctx context.Context) InstanceConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceConnectionInfoPtrOutput)
}

type InstanceConnectionInfoOutput struct{ *pulumi.OutputState }

func (InstanceConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceConnectionInfo)(nil)).Elem()
}

func (o InstanceConnectionInfoOutput) ToInstanceConnectionInfoOutput() InstanceConnectionInfoOutput {
	return o
}

func (o InstanceConnectionInfoOutput) ToInstanceConnectionInfoOutputWithContext(ctx context.Context) InstanceConnectionInfoOutput {
	return o
}

func (o InstanceConnectionInfoOutput) ToInstanceConnectionInfoPtrOutput() InstanceConnectionInfoPtrOutput {
	return o.ToInstanceConnectionInfoPtrOutputWithContext(context.Background())
}

func (o InstanceConnectionInfoOutput) ToInstanceConnectionInfoPtrOutputWithContext(ctx context.Context) InstanceConnectionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceConnectionInfo) *InstanceConnectionInfo {
		return &v
	}).(InstanceConnectionInfoPtrOutput)
}

// Whether global read-only is enabled.
func (o InstanceConnectionInfoOutput) EnableReadOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConnectionInfo) *string { return v.EnableReadOnly }).(pulumi.StringPtrOutput)
}

// Whether read-write separation is enabled.
func (o InstanceConnectionInfoOutput) EnableReadWriteSplitting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConnectionInfo) *string { return v.EnableReadWriteSplitting }).(pulumi.StringPtrOutput)
}

// The internal domain of the RDS instance.
func (o InstanceConnectionInfoOutput) InternalDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConnectionInfo) *string { return v.InternalDomain }).(pulumi.StringPtrOutput)
}

// The interval port of the RDS instance.
func (o InstanceConnectionInfoOutput) InternalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConnectionInfo) *string { return v.InternalPort }).(pulumi.StringPtrOutput)
}

// The public domain of the RDS instance.
func (o InstanceConnectionInfoOutput) PublicDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConnectionInfo) *string { return v.PublicDomain }).(pulumi.StringPtrOutput)
}

// The public port of the RDS instance.
func (o InstanceConnectionInfoOutput) PublicPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceConnectionInfo) *string { return v.PublicPort }).(pulumi.StringPtrOutput)
}

type InstanceConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (InstanceConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceConnectionInfo)(nil)).Elem()
}

func (o InstanceConnectionInfoPtrOutput) ToInstanceConnectionInfoPtrOutput() InstanceConnectionInfoPtrOutput {
	return o
}

func (o InstanceConnectionInfoPtrOutput) ToInstanceConnectionInfoPtrOutputWithContext(ctx context.Context) InstanceConnectionInfoPtrOutput {
	return o
}

func (o InstanceConnectionInfoPtrOutput) Elem() InstanceConnectionInfoOutput {
	return o.ApplyT(func(v *InstanceConnectionInfo) InstanceConnectionInfo {
		if v != nil {
			return *v
		}
		var ret InstanceConnectionInfo
		return ret
	}).(InstanceConnectionInfoOutput)
}

// Whether global read-only is enabled.
func (o InstanceConnectionInfoPtrOutput) EnableReadOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.EnableReadOnly
	}).(pulumi.StringPtrOutput)
}

// Whether read-write separation is enabled.
func (o InstanceConnectionInfoPtrOutput) EnableReadWriteSplitting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.EnableReadWriteSplitting
	}).(pulumi.StringPtrOutput)
}

// The internal domain of the RDS instance.
func (o InstanceConnectionInfoPtrOutput) InternalDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.InternalDomain
	}).(pulumi.StringPtrOutput)
}

// The interval port of the RDS instance.
func (o InstanceConnectionInfoPtrOutput) InternalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.InternalPort
	}).(pulumi.StringPtrOutput)
}

// The public domain of the RDS instance.
func (o InstanceConnectionInfoPtrOutput) PublicDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.PublicDomain
	}).(pulumi.StringPtrOutput)
}

// The public port of the RDS instance.
func (o InstanceConnectionInfoPtrOutput) PublicPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.PublicPort
	}).(pulumi.StringPtrOutput)
}

type InstancesRdsInstance struct {
	// The charge status of the RDS instance.
	ChargeStatus string `pulumi:"chargeStatus"`
	// The charge type of the RDS instance.
	ChargeType string `pulumi:"chargeType"`
	// The connection info ot the RDS instance.
	ConnectionInfo InstancesRdsInstanceConnectionInfo `pulumi:"connectionInfo"`
	// The create time of the RDS instance.
	CreateTime string `pulumi:"createTime"`
	// The engine of the RDS instance.
	DbEngine string `pulumi:"dbEngine"`
	// The engine version of the RDS instance.
	DbEngineVersion string `pulumi:"dbEngineVersion"`
	// The ID of the RDS instance.
	Id string `pulumi:"id"`
	// The id of the RDS instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of the RDS instance.
	InstanceName string `pulumi:"instanceName"`
	// The spec type detail of RDS instance.
	InstanceSpec InstancesRdsInstanceInstanceSpec `pulumi:"instanceSpec"`
	// The status of the RDS instance.
	InstanceStatus string `pulumi:"instanceStatus"`
	// The type of the RDS instance.
	InstanceType        string   `pulumi:"instanceType"`
	ReadOnlyInstanceIds []string `pulumi:"readOnlyInstanceIds"`
	// The region of the RDS instance.
	Region string `pulumi:"region"`
	// The total storage GB of the RDS instance.
	StorageSpaceGb int `pulumi:"storageSpaceGb"`
	// The update time of the RDS instance.
	UpdateTime string `pulumi:"updateTime"`
	// The vpc ID of the RDS instance.
	VpcId string `pulumi:"vpcId"`
	// The available zone of the RDS instance.
	Zone string `pulumi:"zone"`
}

// InstancesRdsInstanceInput is an input type that accepts InstancesRdsInstanceArgs and InstancesRdsInstanceOutput values.
// You can construct a concrete instance of `InstancesRdsInstanceInput` via:
//
//	InstancesRdsInstanceArgs{...}
type InstancesRdsInstanceInput interface {
	pulumi.Input

	ToInstancesRdsInstanceOutput() InstancesRdsInstanceOutput
	ToInstancesRdsInstanceOutputWithContext(context.Context) InstancesRdsInstanceOutput
}

type InstancesRdsInstanceArgs struct {
	// The charge status of the RDS instance.
	ChargeStatus pulumi.StringInput `pulumi:"chargeStatus"`
	// The charge type of the RDS instance.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The connection info ot the RDS instance.
	ConnectionInfo InstancesRdsInstanceConnectionInfoInput `pulumi:"connectionInfo"`
	// The create time of the RDS instance.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The engine of the RDS instance.
	DbEngine pulumi.StringInput `pulumi:"dbEngine"`
	// The engine version of the RDS instance.
	DbEngineVersion pulumi.StringInput `pulumi:"dbEngineVersion"`
	// The ID of the RDS instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the RDS instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the RDS instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The spec type detail of RDS instance.
	InstanceSpec InstancesRdsInstanceInstanceSpecInput `pulumi:"instanceSpec"`
	// The status of the RDS instance.
	InstanceStatus pulumi.StringInput `pulumi:"instanceStatus"`
	// The type of the RDS instance.
	InstanceType        pulumi.StringInput      `pulumi:"instanceType"`
	ReadOnlyInstanceIds pulumi.StringArrayInput `pulumi:"readOnlyInstanceIds"`
	// The region of the RDS instance.
	Region pulumi.StringInput `pulumi:"region"`
	// The total storage GB of the RDS instance.
	StorageSpaceGb pulumi.IntInput `pulumi:"storageSpaceGb"`
	// The update time of the RDS instance.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The vpc ID of the RDS instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The available zone of the RDS instance.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (InstancesRdsInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesRdsInstance)(nil)).Elem()
}

func (i InstancesRdsInstanceArgs) ToInstancesRdsInstanceOutput() InstancesRdsInstanceOutput {
	return i.ToInstancesRdsInstanceOutputWithContext(context.Background())
}

func (i InstancesRdsInstanceArgs) ToInstancesRdsInstanceOutputWithContext(ctx context.Context) InstancesRdsInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRdsInstanceOutput)
}

// InstancesRdsInstanceArrayInput is an input type that accepts InstancesRdsInstanceArray and InstancesRdsInstanceArrayOutput values.
// You can construct a concrete instance of `InstancesRdsInstanceArrayInput` via:
//
//	InstancesRdsInstanceArray{ InstancesRdsInstanceArgs{...} }
type InstancesRdsInstanceArrayInput interface {
	pulumi.Input

	ToInstancesRdsInstanceArrayOutput() InstancesRdsInstanceArrayOutput
	ToInstancesRdsInstanceArrayOutputWithContext(context.Context) InstancesRdsInstanceArrayOutput
}

type InstancesRdsInstanceArray []InstancesRdsInstanceInput

func (InstancesRdsInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesRdsInstance)(nil)).Elem()
}

func (i InstancesRdsInstanceArray) ToInstancesRdsInstanceArrayOutput() InstancesRdsInstanceArrayOutput {
	return i.ToInstancesRdsInstanceArrayOutputWithContext(context.Background())
}

func (i InstancesRdsInstanceArray) ToInstancesRdsInstanceArrayOutputWithContext(ctx context.Context) InstancesRdsInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRdsInstanceArrayOutput)
}

type InstancesRdsInstanceOutput struct{ *pulumi.OutputState }

func (InstancesRdsInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesRdsInstance)(nil)).Elem()
}

func (o InstancesRdsInstanceOutput) ToInstancesRdsInstanceOutput() InstancesRdsInstanceOutput {
	return o
}

func (o InstancesRdsInstanceOutput) ToInstancesRdsInstanceOutputWithContext(ctx context.Context) InstancesRdsInstanceOutput {
	return o
}

// The charge status of the RDS instance.
func (o InstancesRdsInstanceOutput) ChargeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.ChargeStatus }).(pulumi.StringOutput)
}

// The charge type of the RDS instance.
func (o InstancesRdsInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The connection info ot the RDS instance.
func (o InstancesRdsInstanceOutput) ConnectionInfo() InstancesRdsInstanceConnectionInfoOutput {
	return o.ApplyT(func(v InstancesRdsInstance) InstancesRdsInstanceConnectionInfo { return v.ConnectionInfo }).(InstancesRdsInstanceConnectionInfoOutput)
}

// The create time of the RDS instance.
func (o InstancesRdsInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The engine of the RDS instance.
func (o InstancesRdsInstanceOutput) DbEngine() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.DbEngine }).(pulumi.StringOutput)
}

// The engine version of the RDS instance.
func (o InstancesRdsInstanceOutput) DbEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.DbEngineVersion }).(pulumi.StringOutput)
}

// The ID of the RDS instance.
func (o InstancesRdsInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the RDS instance.
func (o InstancesRdsInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the RDS instance.
func (o InstancesRdsInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The spec type detail of RDS instance.
func (o InstancesRdsInstanceOutput) InstanceSpec() InstancesRdsInstanceInstanceSpecOutput {
	return o.ApplyT(func(v InstancesRdsInstance) InstancesRdsInstanceInstanceSpec { return v.InstanceSpec }).(InstancesRdsInstanceInstanceSpecOutput)
}

// The status of the RDS instance.
func (o InstancesRdsInstanceOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.InstanceStatus }).(pulumi.StringOutput)
}

// The type of the RDS instance.
func (o InstancesRdsInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o InstancesRdsInstanceOutput) ReadOnlyInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancesRdsInstance) []string { return v.ReadOnlyInstanceIds }).(pulumi.StringArrayOutput)
}

// The region of the RDS instance.
func (o InstancesRdsInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.Region }).(pulumi.StringOutput)
}

// The total storage GB of the RDS instance.
func (o InstancesRdsInstanceOutput) StorageSpaceGb() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesRdsInstance) int { return v.StorageSpaceGb }).(pulumi.IntOutput)
}

// The update time of the RDS instance.
func (o InstancesRdsInstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The vpc ID of the RDS instance.
func (o InstancesRdsInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// The available zone of the RDS instance.
func (o InstancesRdsInstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstance) string { return v.Zone }).(pulumi.StringOutput)
}

type InstancesRdsInstanceArrayOutput struct{ *pulumi.OutputState }

func (InstancesRdsInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancesRdsInstance)(nil)).Elem()
}

func (o InstancesRdsInstanceArrayOutput) ToInstancesRdsInstanceArrayOutput() InstancesRdsInstanceArrayOutput {
	return o
}

func (o InstancesRdsInstanceArrayOutput) ToInstancesRdsInstanceArrayOutputWithContext(ctx context.Context) InstancesRdsInstanceArrayOutput {
	return o
}

func (o InstancesRdsInstanceArrayOutput) Index(i pulumi.IntInput) InstancesRdsInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancesRdsInstance {
		return vs[0].([]InstancesRdsInstance)[vs[1].(int)]
	}).(InstancesRdsInstanceOutput)
}

type InstancesRdsInstanceConnectionInfo struct {
	// Whether global read-only is enabled.
	EnableReadOnly string `pulumi:"enableReadOnly"`
	// Whether read-write separation is enabled.
	EnableReadWriteSplitting string `pulumi:"enableReadWriteSplitting"`
	// The internal domain of the RDS instance.
	InternalDomain string `pulumi:"internalDomain"`
	// The interval port of the RDS instance.
	InternalPort string `pulumi:"internalPort"`
	// The public domain of the RDS instance.
	PublicDomain string `pulumi:"publicDomain"`
	// The public port of the RDS instance.
	PublicPort string `pulumi:"publicPort"`
}

// InstancesRdsInstanceConnectionInfoInput is an input type that accepts InstancesRdsInstanceConnectionInfoArgs and InstancesRdsInstanceConnectionInfoOutput values.
// You can construct a concrete instance of `InstancesRdsInstanceConnectionInfoInput` via:
//
//	InstancesRdsInstanceConnectionInfoArgs{...}
type InstancesRdsInstanceConnectionInfoInput interface {
	pulumi.Input

	ToInstancesRdsInstanceConnectionInfoOutput() InstancesRdsInstanceConnectionInfoOutput
	ToInstancesRdsInstanceConnectionInfoOutputWithContext(context.Context) InstancesRdsInstanceConnectionInfoOutput
}

type InstancesRdsInstanceConnectionInfoArgs struct {
	// Whether global read-only is enabled.
	EnableReadOnly pulumi.StringInput `pulumi:"enableReadOnly"`
	// Whether read-write separation is enabled.
	EnableReadWriteSplitting pulumi.StringInput `pulumi:"enableReadWriteSplitting"`
	// The internal domain of the RDS instance.
	InternalDomain pulumi.StringInput `pulumi:"internalDomain"`
	// The interval port of the RDS instance.
	InternalPort pulumi.StringInput `pulumi:"internalPort"`
	// The public domain of the RDS instance.
	PublicDomain pulumi.StringInput `pulumi:"publicDomain"`
	// The public port of the RDS instance.
	PublicPort pulumi.StringInput `pulumi:"publicPort"`
}

func (InstancesRdsInstanceConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesRdsInstanceConnectionInfo)(nil)).Elem()
}

func (i InstancesRdsInstanceConnectionInfoArgs) ToInstancesRdsInstanceConnectionInfoOutput() InstancesRdsInstanceConnectionInfoOutput {
	return i.ToInstancesRdsInstanceConnectionInfoOutputWithContext(context.Background())
}

func (i InstancesRdsInstanceConnectionInfoArgs) ToInstancesRdsInstanceConnectionInfoOutputWithContext(ctx context.Context) InstancesRdsInstanceConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRdsInstanceConnectionInfoOutput)
}

type InstancesRdsInstanceConnectionInfoOutput struct{ *pulumi.OutputState }

func (InstancesRdsInstanceConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesRdsInstanceConnectionInfo)(nil)).Elem()
}

func (o InstancesRdsInstanceConnectionInfoOutput) ToInstancesRdsInstanceConnectionInfoOutput() InstancesRdsInstanceConnectionInfoOutput {
	return o
}

func (o InstancesRdsInstanceConnectionInfoOutput) ToInstancesRdsInstanceConnectionInfoOutputWithContext(ctx context.Context) InstancesRdsInstanceConnectionInfoOutput {
	return o
}

// Whether global read-only is enabled.
func (o InstancesRdsInstanceConnectionInfoOutput) EnableReadOnly() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstanceConnectionInfo) string { return v.EnableReadOnly }).(pulumi.StringOutput)
}

// Whether read-write separation is enabled.
func (o InstancesRdsInstanceConnectionInfoOutput) EnableReadWriteSplitting() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstanceConnectionInfo) string { return v.EnableReadWriteSplitting }).(pulumi.StringOutput)
}

// The internal domain of the RDS instance.
func (o InstancesRdsInstanceConnectionInfoOutput) InternalDomain() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstanceConnectionInfo) string { return v.InternalDomain }).(pulumi.StringOutput)
}

// The interval port of the RDS instance.
func (o InstancesRdsInstanceConnectionInfoOutput) InternalPort() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstanceConnectionInfo) string { return v.InternalPort }).(pulumi.StringOutput)
}

// The public domain of the RDS instance.
func (o InstancesRdsInstanceConnectionInfoOutput) PublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstanceConnectionInfo) string { return v.PublicDomain }).(pulumi.StringOutput)
}

// The public port of the RDS instance.
func (o InstancesRdsInstanceConnectionInfoOutput) PublicPort() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstanceConnectionInfo) string { return v.PublicPort }).(pulumi.StringOutput)
}

type InstancesRdsInstanceInstanceSpec struct {
	// The cpu core count of spec type.
	CpuNum int `pulumi:"cpuNum"`
	// The memory size(GB) of spec type.
	MemInGb int `pulumi:"memInGb"`
	// The name of spec type.
	SpecName string `pulumi:"specName"`
}

// InstancesRdsInstanceInstanceSpecInput is an input type that accepts InstancesRdsInstanceInstanceSpecArgs and InstancesRdsInstanceInstanceSpecOutput values.
// You can construct a concrete instance of `InstancesRdsInstanceInstanceSpecInput` via:
//
//	InstancesRdsInstanceInstanceSpecArgs{...}
type InstancesRdsInstanceInstanceSpecInput interface {
	pulumi.Input

	ToInstancesRdsInstanceInstanceSpecOutput() InstancesRdsInstanceInstanceSpecOutput
	ToInstancesRdsInstanceInstanceSpecOutputWithContext(context.Context) InstancesRdsInstanceInstanceSpecOutput
}

type InstancesRdsInstanceInstanceSpecArgs struct {
	// The cpu core count of spec type.
	CpuNum pulumi.IntInput `pulumi:"cpuNum"`
	// The memory size(GB) of spec type.
	MemInGb pulumi.IntInput `pulumi:"memInGb"`
	// The name of spec type.
	SpecName pulumi.StringInput `pulumi:"specName"`
}

func (InstancesRdsInstanceInstanceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesRdsInstanceInstanceSpec)(nil)).Elem()
}

func (i InstancesRdsInstanceInstanceSpecArgs) ToInstancesRdsInstanceInstanceSpecOutput() InstancesRdsInstanceInstanceSpecOutput {
	return i.ToInstancesRdsInstanceInstanceSpecOutputWithContext(context.Background())
}

func (i InstancesRdsInstanceInstanceSpecArgs) ToInstancesRdsInstanceInstanceSpecOutputWithContext(ctx context.Context) InstancesRdsInstanceInstanceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancesRdsInstanceInstanceSpecOutput)
}

type InstancesRdsInstanceInstanceSpecOutput struct{ *pulumi.OutputState }

func (InstancesRdsInstanceInstanceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancesRdsInstanceInstanceSpec)(nil)).Elem()
}

func (o InstancesRdsInstanceInstanceSpecOutput) ToInstancesRdsInstanceInstanceSpecOutput() InstancesRdsInstanceInstanceSpecOutput {
	return o
}

func (o InstancesRdsInstanceInstanceSpecOutput) ToInstancesRdsInstanceInstanceSpecOutputWithContext(ctx context.Context) InstancesRdsInstanceInstanceSpecOutput {
	return o
}

// The cpu core count of spec type.
func (o InstancesRdsInstanceInstanceSpecOutput) CpuNum() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesRdsInstanceInstanceSpec) int { return v.CpuNum }).(pulumi.IntOutput)
}

// The memory size(GB) of spec type.
func (o InstancesRdsInstanceInstanceSpecOutput) MemInGb() pulumi.IntOutput {
	return o.ApplyT(func(v InstancesRdsInstanceInstanceSpec) int { return v.MemInGb }).(pulumi.IntOutput)
}

// The name of spec type.
func (o InstancesRdsInstanceInstanceSpecOutput) SpecName() pulumi.StringOutput {
	return o.ApplyT(func(v InstancesRdsInstanceInstanceSpec) string { return v.SpecName }).(pulumi.StringOutput)
}

type IpListsRdsIpList struct {
	// The name of the RDS ip list.
	GroupName string `pulumi:"groupName"`
	// The ID of the RDS ip list.
	Id string `pulumi:"id"`
	// The list of IP address.
	IpLists []string `pulumi:"ipLists"`
}

// IpListsRdsIpListInput is an input type that accepts IpListsRdsIpListArgs and IpListsRdsIpListOutput values.
// You can construct a concrete instance of `IpListsRdsIpListInput` via:
//
//	IpListsRdsIpListArgs{...}
type IpListsRdsIpListInput interface {
	pulumi.Input

	ToIpListsRdsIpListOutput() IpListsRdsIpListOutput
	ToIpListsRdsIpListOutputWithContext(context.Context) IpListsRdsIpListOutput
}

type IpListsRdsIpListArgs struct {
	// The name of the RDS ip list.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The ID of the RDS ip list.
	Id pulumi.StringInput `pulumi:"id"`
	// The list of IP address.
	IpLists pulumi.StringArrayInput `pulumi:"ipLists"`
}

func (IpListsRdsIpListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpListsRdsIpList)(nil)).Elem()
}

func (i IpListsRdsIpListArgs) ToIpListsRdsIpListOutput() IpListsRdsIpListOutput {
	return i.ToIpListsRdsIpListOutputWithContext(context.Background())
}

func (i IpListsRdsIpListArgs) ToIpListsRdsIpListOutputWithContext(ctx context.Context) IpListsRdsIpListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpListsRdsIpListOutput)
}

// IpListsRdsIpListArrayInput is an input type that accepts IpListsRdsIpListArray and IpListsRdsIpListArrayOutput values.
// You can construct a concrete instance of `IpListsRdsIpListArrayInput` via:
//
//	IpListsRdsIpListArray{ IpListsRdsIpListArgs{...} }
type IpListsRdsIpListArrayInput interface {
	pulumi.Input

	ToIpListsRdsIpListArrayOutput() IpListsRdsIpListArrayOutput
	ToIpListsRdsIpListArrayOutputWithContext(context.Context) IpListsRdsIpListArrayOutput
}

type IpListsRdsIpListArray []IpListsRdsIpListInput

func (IpListsRdsIpListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpListsRdsIpList)(nil)).Elem()
}

func (i IpListsRdsIpListArray) ToIpListsRdsIpListArrayOutput() IpListsRdsIpListArrayOutput {
	return i.ToIpListsRdsIpListArrayOutputWithContext(context.Background())
}

func (i IpListsRdsIpListArray) ToIpListsRdsIpListArrayOutputWithContext(ctx context.Context) IpListsRdsIpListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpListsRdsIpListArrayOutput)
}

type IpListsRdsIpListOutput struct{ *pulumi.OutputState }

func (IpListsRdsIpListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpListsRdsIpList)(nil)).Elem()
}

func (o IpListsRdsIpListOutput) ToIpListsRdsIpListOutput() IpListsRdsIpListOutput {
	return o
}

func (o IpListsRdsIpListOutput) ToIpListsRdsIpListOutputWithContext(ctx context.Context) IpListsRdsIpListOutput {
	return o
}

// The name of the RDS ip list.
func (o IpListsRdsIpListOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v IpListsRdsIpList) string { return v.GroupName }).(pulumi.StringOutput)
}

// The ID of the RDS ip list.
func (o IpListsRdsIpListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IpListsRdsIpList) string { return v.Id }).(pulumi.StringOutput)
}

// The list of IP address.
func (o IpListsRdsIpListOutput) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IpListsRdsIpList) []string { return v.IpLists }).(pulumi.StringArrayOutput)
}

type IpListsRdsIpListArrayOutput struct{ *pulumi.OutputState }

func (IpListsRdsIpListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpListsRdsIpList)(nil)).Elem()
}

func (o IpListsRdsIpListArrayOutput) ToIpListsRdsIpListArrayOutput() IpListsRdsIpListArrayOutput {
	return o
}

func (o IpListsRdsIpListArrayOutput) ToIpListsRdsIpListArrayOutputWithContext(ctx context.Context) IpListsRdsIpListArrayOutput {
	return o
}

func (o IpListsRdsIpListArrayOutput) Index(i pulumi.IntInput) IpListsRdsIpListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpListsRdsIpList {
		return vs[0].([]IpListsRdsIpList)[vs[1].(int)]
	}).(IpListsRdsIpListOutput)
}

type ParameterTemplateTemplateParam struct {
	// Parameter name.
	Name *string `pulumi:"name"`
	// Parameter running value.
	RunningValue *string `pulumi:"runningValue"`
}

// ParameterTemplateTemplateParamInput is an input type that accepts ParameterTemplateTemplateParamArgs and ParameterTemplateTemplateParamOutput values.
// You can construct a concrete instance of `ParameterTemplateTemplateParamInput` via:
//
//	ParameterTemplateTemplateParamArgs{...}
type ParameterTemplateTemplateParamInput interface {
	pulumi.Input

	ToParameterTemplateTemplateParamOutput() ParameterTemplateTemplateParamOutput
	ToParameterTemplateTemplateParamOutputWithContext(context.Context) ParameterTemplateTemplateParamOutput
}

type ParameterTemplateTemplateParamArgs struct {
	// Parameter name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Parameter running value.
	RunningValue pulumi.StringPtrInput `pulumi:"runningValue"`
}

func (ParameterTemplateTemplateParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterTemplateTemplateParam)(nil)).Elem()
}

func (i ParameterTemplateTemplateParamArgs) ToParameterTemplateTemplateParamOutput() ParameterTemplateTemplateParamOutput {
	return i.ToParameterTemplateTemplateParamOutputWithContext(context.Background())
}

func (i ParameterTemplateTemplateParamArgs) ToParameterTemplateTemplateParamOutputWithContext(ctx context.Context) ParameterTemplateTemplateParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterTemplateTemplateParamOutput)
}

// ParameterTemplateTemplateParamArrayInput is an input type that accepts ParameterTemplateTemplateParamArray and ParameterTemplateTemplateParamArrayOutput values.
// You can construct a concrete instance of `ParameterTemplateTemplateParamArrayInput` via:
//
//	ParameterTemplateTemplateParamArray{ ParameterTemplateTemplateParamArgs{...} }
type ParameterTemplateTemplateParamArrayInput interface {
	pulumi.Input

	ToParameterTemplateTemplateParamArrayOutput() ParameterTemplateTemplateParamArrayOutput
	ToParameterTemplateTemplateParamArrayOutputWithContext(context.Context) ParameterTemplateTemplateParamArrayOutput
}

type ParameterTemplateTemplateParamArray []ParameterTemplateTemplateParamInput

func (ParameterTemplateTemplateParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterTemplateTemplateParam)(nil)).Elem()
}

func (i ParameterTemplateTemplateParamArray) ToParameterTemplateTemplateParamArrayOutput() ParameterTemplateTemplateParamArrayOutput {
	return i.ToParameterTemplateTemplateParamArrayOutputWithContext(context.Background())
}

func (i ParameterTemplateTemplateParamArray) ToParameterTemplateTemplateParamArrayOutputWithContext(ctx context.Context) ParameterTemplateTemplateParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterTemplateTemplateParamArrayOutput)
}

type ParameterTemplateTemplateParamOutput struct{ *pulumi.OutputState }

func (ParameterTemplateTemplateParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterTemplateTemplateParam)(nil)).Elem()
}

func (o ParameterTemplateTemplateParamOutput) ToParameterTemplateTemplateParamOutput() ParameterTemplateTemplateParamOutput {
	return o
}

func (o ParameterTemplateTemplateParamOutput) ToParameterTemplateTemplateParamOutputWithContext(ctx context.Context) ParameterTemplateTemplateParamOutput {
	return o
}

// Parameter name.
func (o ParameterTemplateTemplateParamOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterTemplateTemplateParam) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Parameter running value.
func (o ParameterTemplateTemplateParamOutput) RunningValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterTemplateTemplateParam) *string { return v.RunningValue }).(pulumi.StringPtrOutput)
}

type ParameterTemplateTemplateParamArrayOutput struct{ *pulumi.OutputState }

func (ParameterTemplateTemplateParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterTemplateTemplateParam)(nil)).Elem()
}

func (o ParameterTemplateTemplateParamArrayOutput) ToParameterTemplateTemplateParamArrayOutput() ParameterTemplateTemplateParamArrayOutput {
	return o
}

func (o ParameterTemplateTemplateParamArrayOutput) ToParameterTemplateTemplateParamArrayOutputWithContext(ctx context.Context) ParameterTemplateTemplateParamArrayOutput {
	return o
}

func (o ParameterTemplateTemplateParamArrayOutput) Index(i pulumi.IntInput) ParameterTemplateTemplateParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterTemplateTemplateParam {
		return vs[0].([]ParameterTemplateTemplateParam)[vs[1].(int)]
	}).(ParameterTemplateTemplateParamOutput)
}

type ParameterTemplatesRdsParameterTemplate struct {
	// Creation time.
	CreateTime string `pulumi:"createTime"`
	// The ID of the RDS parameter template.
	Id string `pulumi:"id"`
	// Whether the template contains parameters that need to be restarted.
	NeedRestart bool `pulumi:"needRestart"`
	// The number of parameters the template contains.
	ParameterNum int `pulumi:"parameterNum"`
	// The description of the RDS parameter template.
	TemplateDesc string `pulumi:"templateDesc"`
	// The ID of the RDS parameter template.
	TemplateId string `pulumi:"templateId"`
	// The name of the RDS parameter template.
	TemplateName string `pulumi:"templateName"`
	// Parameters contained in the template.
	TemplateParams []ParameterTemplatesRdsParameterTemplateTemplateParam `pulumi:"templateParams"`
	// Parameter template database type, range of values:
	// MySQL - MySQL database.
	TemplateType string `pulumi:"templateType"`
	// Parameter template database version, value range:
	// MySQL_Community_5_7 - MySQL 5.7
	// MySQL_8_0 - MySQL 8.0.
	TemplateTypeVersion string `pulumi:"templateTypeVersion"`
	// Update time.
	UpdateTime string `pulumi:"updateTime"`
}

// ParameterTemplatesRdsParameterTemplateInput is an input type that accepts ParameterTemplatesRdsParameterTemplateArgs and ParameterTemplatesRdsParameterTemplateOutput values.
// You can construct a concrete instance of `ParameterTemplatesRdsParameterTemplateInput` via:
//
//	ParameterTemplatesRdsParameterTemplateArgs{...}
type ParameterTemplatesRdsParameterTemplateInput interface {
	pulumi.Input

	ToParameterTemplatesRdsParameterTemplateOutput() ParameterTemplatesRdsParameterTemplateOutput
	ToParameterTemplatesRdsParameterTemplateOutputWithContext(context.Context) ParameterTemplatesRdsParameterTemplateOutput
}

type ParameterTemplatesRdsParameterTemplateArgs struct {
	// Creation time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of the RDS parameter template.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether the template contains parameters that need to be restarted.
	NeedRestart pulumi.BoolInput `pulumi:"needRestart"`
	// The number of parameters the template contains.
	ParameterNum pulumi.IntInput `pulumi:"parameterNum"`
	// The description of the RDS parameter template.
	TemplateDesc pulumi.StringInput `pulumi:"templateDesc"`
	// The ID of the RDS parameter template.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// The name of the RDS parameter template.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// Parameters contained in the template.
	TemplateParams ParameterTemplatesRdsParameterTemplateTemplateParamArrayInput `pulumi:"templateParams"`
	// Parameter template database type, range of values:
	// MySQL - MySQL database.
	TemplateType pulumi.StringInput `pulumi:"templateType"`
	// Parameter template database version, value range:
	// MySQL_Community_5_7 - MySQL 5.7
	// MySQL_8_0 - MySQL 8.0.
	TemplateTypeVersion pulumi.StringInput `pulumi:"templateTypeVersion"`
	// Update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (ParameterTemplatesRdsParameterTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterTemplatesRdsParameterTemplate)(nil)).Elem()
}

func (i ParameterTemplatesRdsParameterTemplateArgs) ToParameterTemplatesRdsParameterTemplateOutput() ParameterTemplatesRdsParameterTemplateOutput {
	return i.ToParameterTemplatesRdsParameterTemplateOutputWithContext(context.Background())
}

func (i ParameterTemplatesRdsParameterTemplateArgs) ToParameterTemplatesRdsParameterTemplateOutputWithContext(ctx context.Context) ParameterTemplatesRdsParameterTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterTemplatesRdsParameterTemplateOutput)
}

// ParameterTemplatesRdsParameterTemplateArrayInput is an input type that accepts ParameterTemplatesRdsParameterTemplateArray and ParameterTemplatesRdsParameterTemplateArrayOutput values.
// You can construct a concrete instance of `ParameterTemplatesRdsParameterTemplateArrayInput` via:
//
//	ParameterTemplatesRdsParameterTemplateArray{ ParameterTemplatesRdsParameterTemplateArgs{...} }
type ParameterTemplatesRdsParameterTemplateArrayInput interface {
	pulumi.Input

	ToParameterTemplatesRdsParameterTemplateArrayOutput() ParameterTemplatesRdsParameterTemplateArrayOutput
	ToParameterTemplatesRdsParameterTemplateArrayOutputWithContext(context.Context) ParameterTemplatesRdsParameterTemplateArrayOutput
}

type ParameterTemplatesRdsParameterTemplateArray []ParameterTemplatesRdsParameterTemplateInput

func (ParameterTemplatesRdsParameterTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterTemplatesRdsParameterTemplate)(nil)).Elem()
}

func (i ParameterTemplatesRdsParameterTemplateArray) ToParameterTemplatesRdsParameterTemplateArrayOutput() ParameterTemplatesRdsParameterTemplateArrayOutput {
	return i.ToParameterTemplatesRdsParameterTemplateArrayOutputWithContext(context.Background())
}

func (i ParameterTemplatesRdsParameterTemplateArray) ToParameterTemplatesRdsParameterTemplateArrayOutputWithContext(ctx context.Context) ParameterTemplatesRdsParameterTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterTemplatesRdsParameterTemplateArrayOutput)
}

type ParameterTemplatesRdsParameterTemplateOutput struct{ *pulumi.OutputState }

func (ParameterTemplatesRdsParameterTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterTemplatesRdsParameterTemplate)(nil)).Elem()
}

func (o ParameterTemplatesRdsParameterTemplateOutput) ToParameterTemplatesRdsParameterTemplateOutput() ParameterTemplatesRdsParameterTemplateOutput {
	return o
}

func (o ParameterTemplatesRdsParameterTemplateOutput) ToParameterTemplatesRdsParameterTemplateOutputWithContext(ctx context.Context) ParameterTemplatesRdsParameterTemplateOutput {
	return o
}

// Creation time.
func (o ParameterTemplatesRdsParameterTemplateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of the RDS parameter template.
func (o ParameterTemplatesRdsParameterTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// Whether the template contains parameters that need to be restarted.
func (o ParameterTemplatesRdsParameterTemplateOutput) NeedRestart() pulumi.BoolOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) bool { return v.NeedRestart }).(pulumi.BoolOutput)
}

// The number of parameters the template contains.
func (o ParameterTemplatesRdsParameterTemplateOutput) ParameterNum() pulumi.IntOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) int { return v.ParameterNum }).(pulumi.IntOutput)
}

// The description of the RDS parameter template.
func (o ParameterTemplatesRdsParameterTemplateOutput) TemplateDesc() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) string { return v.TemplateDesc }).(pulumi.StringOutput)
}

// The ID of the RDS parameter template.
func (o ParameterTemplatesRdsParameterTemplateOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) string { return v.TemplateId }).(pulumi.StringOutput)
}

// The name of the RDS parameter template.
func (o ParameterTemplatesRdsParameterTemplateOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) string { return v.TemplateName }).(pulumi.StringOutput)
}

// Parameters contained in the template.
func (o ParameterTemplatesRdsParameterTemplateOutput) TemplateParams() ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) []ParameterTemplatesRdsParameterTemplateTemplateParam {
		return v.TemplateParams
	}).(ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput)
}

// Parameter template database type, range of values:
// MySQL - MySQL database.
func (o ParameterTemplatesRdsParameterTemplateOutput) TemplateType() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) string { return v.TemplateType }).(pulumi.StringOutput)
}

// Parameter template database version, value range:
// MySQL_Community_5_7 - MySQL 5.7
// MySQL_8_0 - MySQL 8.0.
func (o ParameterTemplatesRdsParameterTemplateOutput) TemplateTypeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) string { return v.TemplateTypeVersion }).(pulumi.StringOutput)
}

// Update time.
func (o ParameterTemplatesRdsParameterTemplateOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplate) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type ParameterTemplatesRdsParameterTemplateArrayOutput struct{ *pulumi.OutputState }

func (ParameterTemplatesRdsParameterTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterTemplatesRdsParameterTemplate)(nil)).Elem()
}

func (o ParameterTemplatesRdsParameterTemplateArrayOutput) ToParameterTemplatesRdsParameterTemplateArrayOutput() ParameterTemplatesRdsParameterTemplateArrayOutput {
	return o
}

func (o ParameterTemplatesRdsParameterTemplateArrayOutput) ToParameterTemplatesRdsParameterTemplateArrayOutputWithContext(ctx context.Context) ParameterTemplatesRdsParameterTemplateArrayOutput {
	return o
}

func (o ParameterTemplatesRdsParameterTemplateArrayOutput) Index(i pulumi.IntInput) ParameterTemplatesRdsParameterTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterTemplatesRdsParameterTemplate {
		return vs[0].([]ParameterTemplatesRdsParameterTemplate)[vs[1].(int)]
	}).(ParameterTemplatesRdsParameterTemplateOutput)
}

type ParameterTemplatesRdsParameterTemplateTemplateParam struct {
	// Parameter default value.
	DefaultValue string `pulumi:"defaultValue"`
	// Parameter description.
	Description string `pulumi:"description"`
	// Parameter name.
	Name string `pulumi:"name"`
	// Whether the modified parameters need to be restarted to take effect.
	Restart bool `pulumi:"restart"`
	// Parameter running value.
	RunningValue string `pulumi:"runningValue"`
	// Parameter value range.
	ValueRange string `pulumi:"valueRange"`
}

// ParameterTemplatesRdsParameterTemplateTemplateParamInput is an input type that accepts ParameterTemplatesRdsParameterTemplateTemplateParamArgs and ParameterTemplatesRdsParameterTemplateTemplateParamOutput values.
// You can construct a concrete instance of `ParameterTemplatesRdsParameterTemplateTemplateParamInput` via:
//
//	ParameterTemplatesRdsParameterTemplateTemplateParamArgs{...}
type ParameterTemplatesRdsParameterTemplateTemplateParamInput interface {
	pulumi.Input

	ToParameterTemplatesRdsParameterTemplateTemplateParamOutput() ParameterTemplatesRdsParameterTemplateTemplateParamOutput
	ToParameterTemplatesRdsParameterTemplateTemplateParamOutputWithContext(context.Context) ParameterTemplatesRdsParameterTemplateTemplateParamOutput
}

type ParameterTemplatesRdsParameterTemplateTemplateParamArgs struct {
	// Parameter default value.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// Parameter description.
	Description pulumi.StringInput `pulumi:"description"`
	// Parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether the modified parameters need to be restarted to take effect.
	Restart pulumi.BoolInput `pulumi:"restart"`
	// Parameter running value.
	RunningValue pulumi.StringInput `pulumi:"runningValue"`
	// Parameter value range.
	ValueRange pulumi.StringInput `pulumi:"valueRange"`
}

func (ParameterTemplatesRdsParameterTemplateTemplateParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterTemplatesRdsParameterTemplateTemplateParam)(nil)).Elem()
}

func (i ParameterTemplatesRdsParameterTemplateTemplateParamArgs) ToParameterTemplatesRdsParameterTemplateTemplateParamOutput() ParameterTemplatesRdsParameterTemplateTemplateParamOutput {
	return i.ToParameterTemplatesRdsParameterTemplateTemplateParamOutputWithContext(context.Background())
}

func (i ParameterTemplatesRdsParameterTemplateTemplateParamArgs) ToParameterTemplatesRdsParameterTemplateTemplateParamOutputWithContext(ctx context.Context) ParameterTemplatesRdsParameterTemplateTemplateParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterTemplatesRdsParameterTemplateTemplateParamOutput)
}

// ParameterTemplatesRdsParameterTemplateTemplateParamArrayInput is an input type that accepts ParameterTemplatesRdsParameterTemplateTemplateParamArray and ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput values.
// You can construct a concrete instance of `ParameterTemplatesRdsParameterTemplateTemplateParamArrayInput` via:
//
//	ParameterTemplatesRdsParameterTemplateTemplateParamArray{ ParameterTemplatesRdsParameterTemplateTemplateParamArgs{...} }
type ParameterTemplatesRdsParameterTemplateTemplateParamArrayInput interface {
	pulumi.Input

	ToParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput() ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput
	ToParameterTemplatesRdsParameterTemplateTemplateParamArrayOutputWithContext(context.Context) ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput
}

type ParameterTemplatesRdsParameterTemplateTemplateParamArray []ParameterTemplatesRdsParameterTemplateTemplateParamInput

func (ParameterTemplatesRdsParameterTemplateTemplateParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterTemplatesRdsParameterTemplateTemplateParam)(nil)).Elem()
}

func (i ParameterTemplatesRdsParameterTemplateTemplateParamArray) ToParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput() ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput {
	return i.ToParameterTemplatesRdsParameterTemplateTemplateParamArrayOutputWithContext(context.Background())
}

func (i ParameterTemplatesRdsParameterTemplateTemplateParamArray) ToParameterTemplatesRdsParameterTemplateTemplateParamArrayOutputWithContext(ctx context.Context) ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput)
}

type ParameterTemplatesRdsParameterTemplateTemplateParamOutput struct{ *pulumi.OutputState }

func (ParameterTemplatesRdsParameterTemplateTemplateParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterTemplatesRdsParameterTemplateTemplateParam)(nil)).Elem()
}

func (o ParameterTemplatesRdsParameterTemplateTemplateParamOutput) ToParameterTemplatesRdsParameterTemplateTemplateParamOutput() ParameterTemplatesRdsParameterTemplateTemplateParamOutput {
	return o
}

func (o ParameterTemplatesRdsParameterTemplateTemplateParamOutput) ToParameterTemplatesRdsParameterTemplateTemplateParamOutputWithContext(ctx context.Context) ParameterTemplatesRdsParameterTemplateTemplateParamOutput {
	return o
}

// Parameter default value.
func (o ParameterTemplatesRdsParameterTemplateTemplateParamOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplateTemplateParam) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// Parameter description.
func (o ParameterTemplatesRdsParameterTemplateTemplateParamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplateTemplateParam) string { return v.Description }).(pulumi.StringOutput)
}

// Parameter name.
func (o ParameterTemplatesRdsParameterTemplateTemplateParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplateTemplateParam) string { return v.Name }).(pulumi.StringOutput)
}

// Whether the modified parameters need to be restarted to take effect.
func (o ParameterTemplatesRdsParameterTemplateTemplateParamOutput) Restart() pulumi.BoolOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplateTemplateParam) bool { return v.Restart }).(pulumi.BoolOutput)
}

// Parameter running value.
func (o ParameterTemplatesRdsParameterTemplateTemplateParamOutput) RunningValue() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplateTemplateParam) string { return v.RunningValue }).(pulumi.StringOutput)
}

// Parameter value range.
func (o ParameterTemplatesRdsParameterTemplateTemplateParamOutput) ValueRange() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterTemplatesRdsParameterTemplateTemplateParam) string { return v.ValueRange }).(pulumi.StringOutput)
}

type ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput struct{ *pulumi.OutputState }

func (ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterTemplatesRdsParameterTemplateTemplateParam)(nil)).Elem()
}

func (o ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput) ToParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput() ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput {
	return o
}

func (o ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput) ToParameterTemplatesRdsParameterTemplateTemplateParamArrayOutputWithContext(ctx context.Context) ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput {
	return o
}

func (o ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput) Index(i pulumi.IntInput) ParameterTemplatesRdsParameterTemplateTemplateParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterTemplatesRdsParameterTemplateTemplateParam {
		return vs[0].([]ParameterTemplatesRdsParameterTemplateTemplateParam)[vs[1].(int)]
	}).(ParameterTemplatesRdsParameterTemplateTemplateParamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPrivilegeDbPrivilegeInput)(nil)).Elem(), AccountPrivilegeDbPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPrivilegeDbPrivilegeArrayInput)(nil)).Elem(), AccountPrivilegeDbPrivilegeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsRdsAccountInput)(nil)).Elem(), AccountsRdsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsRdsAccountArrayInput)(nil)).Elem(), AccountsRdsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsRdsAccountDbPrivilegeInput)(nil)).Elem(), AccountsRdsAccountDbPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountsRdsAccountDbPrivilegeArrayInput)(nil)).Elem(), AccountsRdsAccountDbPrivilegeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasesRdsDatabaseInput)(nil)).Elem(), DatabasesRdsDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasesRdsDatabaseArrayInput)(nil)).Elem(), DatabasesRdsDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConnectionInfoInput)(nil)).Elem(), InstanceConnectionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceConnectionInfoPtrInput)(nil)).Elem(), InstanceConnectionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRdsInstanceInput)(nil)).Elem(), InstancesRdsInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRdsInstanceArrayInput)(nil)).Elem(), InstancesRdsInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRdsInstanceConnectionInfoInput)(nil)).Elem(), InstancesRdsInstanceConnectionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancesRdsInstanceInstanceSpecInput)(nil)).Elem(), InstancesRdsInstanceInstanceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpListsRdsIpListInput)(nil)).Elem(), IpListsRdsIpListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpListsRdsIpListArrayInput)(nil)).Elem(), IpListsRdsIpListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterTemplateTemplateParamInput)(nil)).Elem(), ParameterTemplateTemplateParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterTemplateTemplateParamArrayInput)(nil)).Elem(), ParameterTemplateTemplateParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterTemplatesRdsParameterTemplateInput)(nil)).Elem(), ParameterTemplatesRdsParameterTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterTemplatesRdsParameterTemplateArrayInput)(nil)).Elem(), ParameterTemplatesRdsParameterTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterTemplatesRdsParameterTemplateTemplateParamInput)(nil)).Elem(), ParameterTemplatesRdsParameterTemplateTemplateParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterTemplatesRdsParameterTemplateTemplateParamArrayInput)(nil)).Elem(), ParameterTemplatesRdsParameterTemplateTemplateParamArray{})
	pulumi.RegisterOutputType(AccountPrivilegeDbPrivilegeOutput{})
	pulumi.RegisterOutputType(AccountPrivilegeDbPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(AccountsRdsAccountOutput{})
	pulumi.RegisterOutputType(AccountsRdsAccountArrayOutput{})
	pulumi.RegisterOutputType(AccountsRdsAccountDbPrivilegeOutput{})
	pulumi.RegisterOutputType(AccountsRdsAccountDbPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(DatabasesRdsDatabaseOutput{})
	pulumi.RegisterOutputType(DatabasesRdsDatabaseArrayOutput{})
	pulumi.RegisterOutputType(InstanceConnectionInfoOutput{})
	pulumi.RegisterOutputType(InstanceConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(InstancesRdsInstanceOutput{})
	pulumi.RegisterOutputType(InstancesRdsInstanceArrayOutput{})
	pulumi.RegisterOutputType(InstancesRdsInstanceConnectionInfoOutput{})
	pulumi.RegisterOutputType(InstancesRdsInstanceInstanceSpecOutput{})
	pulumi.RegisterOutputType(IpListsRdsIpListOutput{})
	pulumi.RegisterOutputType(IpListsRdsIpListArrayOutput{})
	pulumi.RegisterOutputType(ParameterTemplateTemplateParamOutput{})
	pulumi.RegisterOutputType(ParameterTemplateTemplateParamArrayOutput{})
	pulumi.RegisterOutputType(ParameterTemplatesRdsParameterTemplateOutput{})
	pulumi.RegisterOutputType(ParameterTemplatesRdsParameterTemplateArrayOutput{})
	pulumi.RegisterOutputType(ParameterTemplatesRdsParameterTemplateTemplateParamOutput{})
	pulumi.RegisterOutputType(ParameterTemplatesRdsParameterTemplateTemplateParamArrayOutput{})
}
