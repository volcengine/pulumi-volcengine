// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/rds"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds.NewInstance(ctx, "foo", &rds.InstanceArgs{
//				ChargeType:       pulumi.String("PostPaid"),
//				DbEngine:         pulumi.String("MySQL"),
//				DbEngineVersion:  pulumi.String("MySQL_Community_5_7"),
//				InstanceName:     pulumi.String("tf-test"),
//				InstanceSpecName: pulumi.String("rds.mysql.1c2g"),
//				InstanceType:     pulumi.String("HA"),
//				Region:           pulumi.String("cn-north-4"),
//				StorageSpaceGb:   pulumi.Int(100),
//				StorageType:      pulumi.String("LocalSSD"),
//				SubnetId:         pulumi.String("subnet-1g0d4fkh1nabk8ibuxx1jtvss"),
//				VpcId:            pulumi.String("vpc-3cj17x7u9bzeo6c6rrtzfpaeb"),
//				Zone:             pulumi.String("cn-langfang-b"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// RDS Instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:rds/instance:Instance default mysql-42b38c769c4b
//
// ```
type Instance struct {
	pulumi.CustomResourceState

	// Whether to automatically renew. Default: false. Value:
	// true: yes.
	// false: no. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// Billing type. Value:
	// PostPaid: Postpaid (pay-as-you-go).
	// Prepaid: Prepaid (yearly and monthly).
	ChargeType pulumi.StringOutput `pulumi:"chargeType"`
	// The connection info ot the RDS instance.
	ConnectionInfo InstanceConnectionInfoOutput `pulumi:"connectionInfo"`
	// Database type. Value:
	// MySQL (default).
	DbEngine pulumi.StringPtrOutput `pulumi:"dbEngine"`
	// Instance type. Value:
	// MySQL_Community_5_7
	// MySQL_8_0.
	DbEngineVersion pulumi.StringOutput `pulumi:"dbEngineVersion"`
	// Set the name of the instance. The naming rules are as follows:
	//
	// Cannot start with a number, a dash (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_) and underscores (-).
	// The length needs to be within 1~128 characters.
	InstanceName pulumi.StringPtrOutput `pulumi:"instanceName"`
	// Instance specification name, you can specify the specification name of the instance to be created. Value:
	// rds.mysql.1c2g
	// rds.mysql.2c4g
	// rds.mysql.4c8g
	// rds.mysql.4c16g
	// rds.mysql.8c32g
	// rds.mysql.16c64g
	// rds.mysql.16c128g
	// rds.mysql.32c128g
	// rds.mysql.32c256g.
	InstanceSpecName pulumi.StringOutput `pulumi:"instanceSpecName"`
	// Instance type. Value:
	// HA: High availability version.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// The purchase cycle in the prepaid scenario. Value:
	// Month: monthly subscription.
	// Year: yearly subscription. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PrepaidPeriod pulumi.StringPtrOutput `pulumi:"prepaidPeriod"`
	// Select the project to which the instance belongs. If this parameter is left blank, the new instance will not be added to any project. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ProjectName pulumi.StringPtrOutput `pulumi:"projectName"`
	// The region of the RDS instance.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// The storage space(GB) of the RDS instance.
	StorageSpaceGb pulumi.IntOutput `pulumi:"storageSpaceGb"`
	// Instance storage type. Value:
	// LocalSSD: Local SSD disk.
	StorageType pulumi.StringOutput `pulumi:"storageType"`
	// Subnet ID. The subnet must belong to the selected Availability Zone.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Fill in the high-privileged user account name. The naming rules are as follows:
	// Unique name.
	// Start with a letter and end with a letter or number.
	// Consists of lowercase letters, numbers, or underscores (_).
	// The length is 2~32 characters.
	// [Keywords](https://www.volcengine.com/docs/6313/66162) are not allowed for account names.
	SuperAccountName pulumi.StringPtrOutput `pulumi:"superAccountName"`
	// Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	SuperAccountPassword pulumi.StringPtrOutput `pulumi:"superAccountPassword"`
	// supper_account_password is deprecated, use superAccountPassword instead Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	//
	// Deprecated: supper_account_password is deprecated, use super_account_password instead
	SupperAccountPassword pulumi.StringPtrOutput `pulumi:"supperAccountPassword"`
	// The purchase time of RDS instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	UsedTime pulumi.IntPtrOutput `pulumi:"usedTime"`
	// The vpc ID of the RDS instance.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The available zone of the RDS instance.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ChargeType == nil {
		return nil, errors.New("invalid value for required argument 'ChargeType'")
	}
	if args.DbEngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'DbEngineVersion'")
	}
	if args.InstanceSpecName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceSpecName'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	if args.StorageSpaceGb == nil {
		return nil, errors.New("invalid value for required argument 'StorageSpaceGb'")
	}
	if args.StorageType == nil {
		return nil, errors.New("invalid value for required argument 'StorageType'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("volcengine:rds/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("volcengine:rds/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// Whether to automatically renew. Default: false. Value:
	// true: yes.
	// false: no. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Billing type. Value:
	// PostPaid: Postpaid (pay-as-you-go).
	// Prepaid: Prepaid (yearly and monthly).
	ChargeType *string `pulumi:"chargeType"`
	// The connection info ot the RDS instance.
	ConnectionInfo *InstanceConnectionInfo `pulumi:"connectionInfo"`
	// Database type. Value:
	// MySQL (default).
	DbEngine *string `pulumi:"dbEngine"`
	// Instance type. Value:
	// MySQL_Community_5_7
	// MySQL_8_0.
	DbEngineVersion *string `pulumi:"dbEngineVersion"`
	// Set the name of the instance. The naming rules are as follows:
	//
	// Cannot start with a number, a dash (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_) and underscores (-).
	// The length needs to be within 1~128 characters.
	InstanceName *string `pulumi:"instanceName"`
	// Instance specification name, you can specify the specification name of the instance to be created. Value:
	// rds.mysql.1c2g
	// rds.mysql.2c4g
	// rds.mysql.4c8g
	// rds.mysql.4c16g
	// rds.mysql.8c32g
	// rds.mysql.16c64g
	// rds.mysql.16c128g
	// rds.mysql.32c128g
	// rds.mysql.32c256g.
	InstanceSpecName *string `pulumi:"instanceSpecName"`
	// Instance type. Value:
	// HA: High availability version.
	InstanceType *string `pulumi:"instanceType"`
	// The purchase cycle in the prepaid scenario. Value:
	// Month: monthly subscription.
	// Year: yearly subscription. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PrepaidPeriod *string `pulumi:"prepaidPeriod"`
	// Select the project to which the instance belongs. If this parameter is left blank, the new instance will not be added to any project. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ProjectName *string `pulumi:"projectName"`
	// The region of the RDS instance.
	Region *string `pulumi:"region"`
	// The storage space(GB) of the RDS instance.
	StorageSpaceGb *int `pulumi:"storageSpaceGb"`
	// Instance storage type. Value:
	// LocalSSD: Local SSD disk.
	StorageType *string `pulumi:"storageType"`
	// Subnet ID. The subnet must belong to the selected Availability Zone.
	SubnetId *string `pulumi:"subnetId"`
	// Fill in the high-privileged user account name. The naming rules are as follows:
	// Unique name.
	// Start with a letter and end with a letter or number.
	// Consists of lowercase letters, numbers, or underscores (_).
	// The length is 2~32 characters.
	// [Keywords](https://www.volcengine.com/docs/6313/66162) are not allowed for account names.
	SuperAccountName *string `pulumi:"superAccountName"`
	// Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	SuperAccountPassword *string `pulumi:"superAccountPassword"`
	// supper_account_password is deprecated, use superAccountPassword instead Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	//
	// Deprecated: supper_account_password is deprecated, use super_account_password instead
	SupperAccountPassword *string `pulumi:"supperAccountPassword"`
	// The purchase time of RDS instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	UsedTime *int `pulumi:"usedTime"`
	// The vpc ID of the RDS instance.
	VpcId *string `pulumi:"vpcId"`
	// The available zone of the RDS instance.
	Zone *string `pulumi:"zone"`
}

type InstanceState struct {
	// Whether to automatically renew. Default: false. Value:
	// true: yes.
	// false: no. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrInput
	// Billing type. Value:
	// PostPaid: Postpaid (pay-as-you-go).
	// Prepaid: Prepaid (yearly and monthly).
	ChargeType pulumi.StringPtrInput
	// The connection info ot the RDS instance.
	ConnectionInfo InstanceConnectionInfoPtrInput
	// Database type. Value:
	// MySQL (default).
	DbEngine pulumi.StringPtrInput
	// Instance type. Value:
	// MySQL_Community_5_7
	// MySQL_8_0.
	DbEngineVersion pulumi.StringPtrInput
	// Set the name of the instance. The naming rules are as follows:
	//
	// Cannot start with a number, a dash (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_) and underscores (-).
	// The length needs to be within 1~128 characters.
	InstanceName pulumi.StringPtrInput
	// Instance specification name, you can specify the specification name of the instance to be created. Value:
	// rds.mysql.1c2g
	// rds.mysql.2c4g
	// rds.mysql.4c8g
	// rds.mysql.4c16g
	// rds.mysql.8c32g
	// rds.mysql.16c64g
	// rds.mysql.16c128g
	// rds.mysql.32c128g
	// rds.mysql.32c256g.
	InstanceSpecName pulumi.StringPtrInput
	// Instance type. Value:
	// HA: High availability version.
	InstanceType pulumi.StringPtrInput
	// The purchase cycle in the prepaid scenario. Value:
	// Month: monthly subscription.
	// Year: yearly subscription. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PrepaidPeriod pulumi.StringPtrInput
	// Select the project to which the instance belongs. If this parameter is left blank, the new instance will not be added to any project. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ProjectName pulumi.StringPtrInput
	// The region of the RDS instance.
	Region pulumi.StringPtrInput
	// The storage space(GB) of the RDS instance.
	StorageSpaceGb pulumi.IntPtrInput
	// Instance storage type. Value:
	// LocalSSD: Local SSD disk.
	StorageType pulumi.StringPtrInput
	// Subnet ID. The subnet must belong to the selected Availability Zone.
	SubnetId pulumi.StringPtrInput
	// Fill in the high-privileged user account name. The naming rules are as follows:
	// Unique name.
	// Start with a letter and end with a letter or number.
	// Consists of lowercase letters, numbers, or underscores (_).
	// The length is 2~32 characters.
	// [Keywords](https://www.volcengine.com/docs/6313/66162) are not allowed for account names.
	SuperAccountName pulumi.StringPtrInput
	// Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	SuperAccountPassword pulumi.StringPtrInput
	// supper_account_password is deprecated, use superAccountPassword instead Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	//
	// Deprecated: supper_account_password is deprecated, use super_account_password instead
	SupperAccountPassword pulumi.StringPtrInput
	// The purchase time of RDS instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	UsedTime pulumi.IntPtrInput
	// The vpc ID of the RDS instance.
	VpcId pulumi.StringPtrInput
	// The available zone of the RDS instance.
	Zone pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// Whether to automatically renew. Default: false. Value:
	// true: yes.
	// false: no. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Billing type. Value:
	// PostPaid: Postpaid (pay-as-you-go).
	// Prepaid: Prepaid (yearly and monthly).
	ChargeType string `pulumi:"chargeType"`
	// Database type. Value:
	// MySQL (default).
	DbEngine *string `pulumi:"dbEngine"`
	// Instance type. Value:
	// MySQL_Community_5_7
	// MySQL_8_0.
	DbEngineVersion string `pulumi:"dbEngineVersion"`
	// Set the name of the instance. The naming rules are as follows:
	//
	// Cannot start with a number, a dash (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_) and underscores (-).
	// The length needs to be within 1~128 characters.
	InstanceName *string `pulumi:"instanceName"`
	// Instance specification name, you can specify the specification name of the instance to be created. Value:
	// rds.mysql.1c2g
	// rds.mysql.2c4g
	// rds.mysql.4c8g
	// rds.mysql.4c16g
	// rds.mysql.8c32g
	// rds.mysql.16c64g
	// rds.mysql.16c128g
	// rds.mysql.32c128g
	// rds.mysql.32c256g.
	InstanceSpecName string `pulumi:"instanceSpecName"`
	// Instance type. Value:
	// HA: High availability version.
	InstanceType string `pulumi:"instanceType"`
	// The purchase cycle in the prepaid scenario. Value:
	// Month: monthly subscription.
	// Year: yearly subscription. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PrepaidPeriod *string `pulumi:"prepaidPeriod"`
	// Select the project to which the instance belongs. If this parameter is left blank, the new instance will not be added to any project. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ProjectName *string `pulumi:"projectName"`
	// The region of the RDS instance.
	Region *string `pulumi:"region"`
	// The storage space(GB) of the RDS instance.
	StorageSpaceGb int `pulumi:"storageSpaceGb"`
	// Instance storage type. Value:
	// LocalSSD: Local SSD disk.
	StorageType string `pulumi:"storageType"`
	// Subnet ID. The subnet must belong to the selected Availability Zone.
	SubnetId string `pulumi:"subnetId"`
	// Fill in the high-privileged user account name. The naming rules are as follows:
	// Unique name.
	// Start with a letter and end with a letter or number.
	// Consists of lowercase letters, numbers, or underscores (_).
	// The length is 2~32 characters.
	// [Keywords](https://www.volcengine.com/docs/6313/66162) are not allowed for account names.
	SuperAccountName *string `pulumi:"superAccountName"`
	// Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	SuperAccountPassword *string `pulumi:"superAccountPassword"`
	// supper_account_password is deprecated, use superAccountPassword instead Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	//
	// Deprecated: supper_account_password is deprecated, use super_account_password instead
	SupperAccountPassword *string `pulumi:"supperAccountPassword"`
	// The purchase time of RDS instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	UsedTime *int `pulumi:"usedTime"`
	// The vpc ID of the RDS instance.
	VpcId string `pulumi:"vpcId"`
	// The available zone of the RDS instance.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Whether to automatically renew. Default: false. Value:
	// true: yes.
	// false: no. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AutoRenew pulumi.BoolPtrInput
	// Billing type. Value:
	// PostPaid: Postpaid (pay-as-you-go).
	// Prepaid: Prepaid (yearly and monthly).
	ChargeType pulumi.StringInput
	// Database type. Value:
	// MySQL (default).
	DbEngine pulumi.StringPtrInput
	// Instance type. Value:
	// MySQL_Community_5_7
	// MySQL_8_0.
	DbEngineVersion pulumi.StringInput
	// Set the name of the instance. The naming rules are as follows:
	//
	// Cannot start with a number, a dash (-).
	// It can only contain Chinese characters, letters, numbers, underscores (_) and underscores (-).
	// The length needs to be within 1~128 characters.
	InstanceName pulumi.StringPtrInput
	// Instance specification name, you can specify the specification name of the instance to be created. Value:
	// rds.mysql.1c2g
	// rds.mysql.2c4g
	// rds.mysql.4c8g
	// rds.mysql.4c16g
	// rds.mysql.8c32g
	// rds.mysql.16c64g
	// rds.mysql.16c128g
	// rds.mysql.32c128g
	// rds.mysql.32c256g.
	InstanceSpecName pulumi.StringInput
	// Instance type. Value:
	// HA: High availability version.
	InstanceType pulumi.StringInput
	// The purchase cycle in the prepaid scenario. Value:
	// Month: monthly subscription.
	// Year: yearly subscription. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	PrepaidPeriod pulumi.StringPtrInput
	// Select the project to which the instance belongs. If this parameter is left blank, the new instance will not be added to any project. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	ProjectName pulumi.StringPtrInput
	// The region of the RDS instance.
	Region pulumi.StringPtrInput
	// The storage space(GB) of the RDS instance.
	StorageSpaceGb pulumi.IntInput
	// Instance storage type. Value:
	// LocalSSD: Local SSD disk.
	StorageType pulumi.StringInput
	// Subnet ID. The subnet must belong to the selected Availability Zone.
	SubnetId pulumi.StringInput
	// Fill in the high-privileged user account name. The naming rules are as follows:
	// Unique name.
	// Start with a letter and end with a letter or number.
	// Consists of lowercase letters, numbers, or underscores (_).
	// The length is 2~32 characters.
	// [Keywords](https://www.volcengine.com/docs/6313/66162) are not allowed for account names.
	SuperAccountName pulumi.StringPtrInput
	// Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	SuperAccountPassword pulumi.StringPtrInput
	// supper_account_password is deprecated, use superAccountPassword instead Set a high-privilege account password. The rules are as follows:
	// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
	// The length needs to be within 8~32 characters.
	// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
	//
	// Deprecated: supper_account_password is deprecated, use super_account_password instead
	SupperAccountPassword pulumi.StringPtrInput
	// The purchase time of RDS instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	UsedTime pulumi.IntPtrInput
	// The vpc ID of the RDS instance.
	VpcId pulumi.StringInput
	// The available zone of the RDS instance.
	Zone pulumi.StringInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// Whether to automatically renew. Default: false. Value:
// true: yes.
// false: no. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// Billing type. Value:
// PostPaid: Postpaid (pay-as-you-go).
// Prepaid: Prepaid (yearly and monthly).
func (o InstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ChargeType }).(pulumi.StringOutput)
}

// The connection info ot the RDS instance.
func (o InstanceOutput) ConnectionInfo() InstanceConnectionInfoOutput {
	return o.ApplyT(func(v *Instance) InstanceConnectionInfoOutput { return v.ConnectionInfo }).(InstanceConnectionInfoOutput)
}

// Database type. Value:
// MySQL (default).
func (o InstanceOutput) DbEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.DbEngine }).(pulumi.StringPtrOutput)
}

// Instance type. Value:
// MySQL_Community_5_7
// MySQL_8_0.
func (o InstanceOutput) DbEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DbEngineVersion }).(pulumi.StringOutput)
}

// Set the name of the instance. The naming rules are as follows:
//
// Cannot start with a number, a dash (-).
// It can only contain Chinese characters, letters, numbers, underscores (_) and underscores (-).
// The length needs to be within 1~128 characters.
func (o InstanceOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Instance specification name, you can specify the specification name of the instance to be created. Value:
// rds.mysql.1c2g
// rds.mysql.2c4g
// rds.mysql.4c8g
// rds.mysql.4c16g
// rds.mysql.8c32g
// rds.mysql.16c64g
// rds.mysql.16c128g
// rds.mysql.32c128g
// rds.mysql.32c256g.
func (o InstanceOutput) InstanceSpecName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceSpecName }).(pulumi.StringOutput)
}

// Instance type. Value:
// HA: High availability version.
func (o InstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// The purchase cycle in the prepaid scenario. Value:
// Month: monthly subscription.
// Year: yearly subscription. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) PrepaidPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.PrepaidPeriod }).(pulumi.StringPtrOutput)
}

// Select the project to which the instance belongs. If this parameter is left blank, the new instance will not be added to any project. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// The region of the RDS instance.
func (o InstanceOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// The storage space(GB) of the RDS instance.
func (o InstanceOutput) StorageSpaceGb() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.StorageSpaceGb }).(pulumi.IntOutput)
}

// Instance storage type. Value:
// LocalSSD: Local SSD disk.
func (o InstanceOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.StorageType }).(pulumi.StringOutput)
}

// Subnet ID. The subnet must belong to the selected Availability Zone.
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Fill in the high-privileged user account name. The naming rules are as follows:
// Unique name.
// Start with a letter and end with a letter or number.
// Consists of lowercase letters, numbers, or underscores (_).
// The length is 2~32 characters.
// [Keywords](https://www.volcengine.com/docs/6313/66162) are not allowed for account names.
func (o InstanceOutput) SuperAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SuperAccountName }).(pulumi.StringPtrOutput)
}

// Set a high-privilege account password. The rules are as follows:
// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
// The length needs to be within 8~32 characters.
// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
func (o InstanceOutput) SuperAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SuperAccountPassword }).(pulumi.StringPtrOutput)
}

// supper_account_password is deprecated, use superAccountPassword instead Set a high-privilege account password. The rules are as follows:
// Only uppercase and lowercase letters, numbers and the following special characters _#!@$%^*()+=-.
// The length needs to be within 8~32 characters.
// Contains at least 3 of uppercase letters, lowercase letters, numbers or special characters.
//
// Deprecated: supper_account_password is deprecated, use super_account_password instead
func (o InstanceOutput) SupperAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringPtrOutput { return v.SupperAccountPassword }).(pulumi.StringPtrOutput)
}

// The purchase time of RDS instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o InstanceOutput) UsedTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntPtrOutput { return v.UsedTime }).(pulumi.IntPtrOutput)
}

// The vpc ID of the RDS instance.
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// The available zone of the RDS instance.
func (o InstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
