// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kafka

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of kafka allow lists
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/kafka"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kafka.GetAllowLists(ctx, &kafka.GetAllowListsArgs{
//				InstanceId: pulumi.StringRef("kafka-xxx"),
//				RegionId:   "cn-beijing",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.kafka.AllowLists has been deprecated in favor of volcengine.kafka.getAllowLists
func AllowLists(ctx *pulumi.Context, args *AllowListsArgs, opts ...pulumi.InvokeOption) (*AllowListsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv AllowListsResult
	err := ctx.Invoke("volcengine:kafka/allowLists:AllowLists", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking AllowLists.
type AllowListsArgs struct {
	// The instance ID to query.
	InstanceId *string `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The region ID.
	RegionId string `pulumi:"regionId"`
}

// A collection of values returned by AllowLists.
type AllowListsResult struct {
	// The collection of query.
	AllowLists []AllowListsAllowList `pulumi:"allowLists"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The id of the instance.
	InstanceId *string `pulumi:"instanceId"`
	OutputFile *string `pulumi:"outputFile"`
	RegionId   string  `pulumi:"regionId"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func AllowListsOutput(ctx *pulumi.Context, args AllowListsOutputArgs, opts ...pulumi.InvokeOption) AllowListsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AllowListsResult, error) {
			args := v.(AllowListsArgs)
			r, err := AllowLists(ctx, &args, opts...)
			var s AllowListsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AllowListsResultOutput)
}

// A collection of arguments for invoking AllowLists.
type AllowListsOutputArgs struct {
	// The instance ID to query.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The region ID.
	RegionId pulumi.StringInput `pulumi:"regionId"`
}

func (AllowListsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsArgs)(nil)).Elem()
}

// A collection of values returned by AllowLists.
type AllowListsResultOutput struct{ *pulumi.OutputState }

func (AllowListsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowListsResult)(nil)).Elem()
}

func (o AllowListsResultOutput) ToAllowListsResultOutput() AllowListsResultOutput {
	return o
}

func (o AllowListsResultOutput) ToAllowListsResultOutputWithContext(ctx context.Context) AllowListsResultOutput {
	return o
}

// The collection of query.
func (o AllowListsResultOutput) AllowLists() AllowListsAllowListArrayOutput {
	return o.ApplyT(func(v AllowListsResult) []AllowListsAllowList { return v.AllowLists }).(AllowListsAllowListArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o AllowListsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the instance.
func (o AllowListsResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListsResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o AllowListsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AllowListsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o AllowListsResultOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v AllowListsResult) string { return v.RegionId }).(pulumi.StringOutput)
}

// The total count of query.
func (o AllowListsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AllowListsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(AllowListsResultOutput{})
}
