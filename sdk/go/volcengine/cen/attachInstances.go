// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cen attach instances
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cen"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cen.AttachInstances(ctx, &cen.AttachInstancesArgs{
//				CenId: pulumi.StringRef("cen-2bzrl3srxsv0g2dx0efyoojn3"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func AttachInstances(ctx *pulumi.Context, args *AttachInstancesArgs, opts ...pulumi.InvokeOption) (*AttachInstancesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv AttachInstancesResult
	err := ctx.Invoke("volcengine:cen/attachInstances:AttachInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking AttachInstances.
type AttachInstancesArgs struct {
	// A cen ID.
	CenId *string `pulumi:"cenId"`
	// An instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// A region id of instance.
	InstanceRegionId *string `pulumi:"instanceRegionId"`
	// An instance type.
	InstanceType *string `pulumi:"instanceType"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by AttachInstances.
type AttachInstancesResult struct {
	// The collection of cen attach instance query.
	AttachInstances []AttachInstancesAttachInstance `pulumi:"attachInstances"`
	// The ID of the cen.
	CenId *string `pulumi:"cenId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// The region id of the instance.
	InstanceRegionId *string `pulumi:"instanceRegionId"`
	// The type of the instance.
	InstanceType *string `pulumi:"instanceType"`
	OutputFile   *string `pulumi:"outputFile"`
	// The total count of cen attach instance query.
	TotalCount int `pulumi:"totalCount"`
}

func AttachInstancesOutput(ctx *pulumi.Context, args AttachInstancesOutputArgs, opts ...pulumi.InvokeOption) AttachInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AttachInstancesResult, error) {
			args := v.(AttachInstancesArgs)
			r, err := AttachInstances(ctx, &args, opts...)
			var s AttachInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AttachInstancesResultOutput)
}

// A collection of arguments for invoking AttachInstances.
type AttachInstancesOutputArgs struct {
	// A cen ID.
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// An instance ID.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// A region id of instance.
	InstanceRegionId pulumi.StringPtrInput `pulumi:"instanceRegionId"`
	// An instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (AttachInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachInstancesArgs)(nil)).Elem()
}

// A collection of values returned by AttachInstances.
type AttachInstancesResultOutput struct{ *pulumi.OutputState }

func (AttachInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachInstancesResult)(nil)).Elem()
}

func (o AttachInstancesResultOutput) ToAttachInstancesResultOutput() AttachInstancesResultOutput {
	return o
}

func (o AttachInstancesResultOutput) ToAttachInstancesResultOutputWithContext(ctx context.Context) AttachInstancesResultOutput {
	return o
}

// The collection of cen attach instance query.
func (o AttachInstancesResultOutput) AttachInstances() AttachInstancesAttachInstanceArrayOutput {
	return o.ApplyT(func(v AttachInstancesResult) []AttachInstancesAttachInstance { return v.AttachInstances }).(AttachInstancesAttachInstanceArrayOutput)
}

// The ID of the cen.
func (o AttachInstancesResultOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachInstancesResult) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o AttachInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AttachInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o AttachInstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachInstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The region id of the instance.
func (o AttachInstancesResultOutput) InstanceRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachInstancesResult) *string { return v.InstanceRegionId }).(pulumi.StringPtrOutput)
}

// The type of the instance.
func (o AttachInstancesResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachInstancesResult) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o AttachInstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachInstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of cen attach instance query.
func (o AttachInstancesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AttachInstancesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(AttachInstancesResultOutput{})
}
