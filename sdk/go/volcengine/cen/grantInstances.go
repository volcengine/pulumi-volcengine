// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cen grant instances
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cen"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cen.GetGrantInstances(ctx, &cen.GetGrantInstancesArgs{
//				InstanceId:       pulumi.StringRef("vpc-2bysvq1xx543k2dx0eeul****"),
//				InstanceRegionId: pulumi.StringRef("cn-beijing"),
//				InstanceType:     pulumi.StringRef("VPC"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.cen.GrantInstances has been deprecated in favor of volcengine.cen.getGrantInstances
func GrantInstances(ctx *pulumi.Context, args *GrantInstancesArgs, opts ...pulumi.InvokeOption) (*GrantInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GrantInstancesResult
	err := ctx.Invoke("volcengine:cen/grantInstances:GrantInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking GrantInstances.
type GrantInstancesArgs struct {
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// The region ID of the instance.
	InstanceRegionId *string `pulumi:"instanceRegionId"`
	// The type of the instance. Valid values: `VPC`, `DCGW`.
	InstanceType *string `pulumi:"instanceType"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by GrantInstances.
type GrantInstancesResult struct {
	// The collection of query.
	GrantRules []GrantInstancesGrantRule `pulumi:"grantRules"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// The region ID of the instance.
	InstanceRegionId *string `pulumi:"instanceRegionId"`
	// The type of the instance.
	InstanceType *string `pulumi:"instanceType"`
	OutputFile   *string `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GrantInstancesOutput(ctx *pulumi.Context, args GrantInstancesOutputArgs, opts ...pulumi.InvokeOption) GrantInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GrantInstancesResult, error) {
			args := v.(GrantInstancesArgs)
			r, err := GrantInstances(ctx, &args, opts...)
			var s GrantInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GrantInstancesResultOutput)
}

// A collection of arguments for invoking GrantInstances.
type GrantInstancesOutputArgs struct {
	// The ID of the instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The region ID of the instance.
	InstanceRegionId pulumi.StringPtrInput `pulumi:"instanceRegionId"`
	// The type of the instance. Valid values: `VPC`, `DCGW`.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GrantInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantInstancesArgs)(nil)).Elem()
}

// A collection of values returned by GrantInstances.
type GrantInstancesResultOutput struct{ *pulumi.OutputState }

func (GrantInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GrantInstancesResult)(nil)).Elem()
}

func (o GrantInstancesResultOutput) ToGrantInstancesResultOutput() GrantInstancesResultOutput {
	return o
}

func (o GrantInstancesResultOutput) ToGrantInstancesResultOutputWithContext(ctx context.Context) GrantInstancesResultOutput {
	return o
}

// The collection of query.
func (o GrantInstancesResultOutput) GrantRules() GrantInstancesGrantRuleArrayOutput {
	return o.ApplyT(func(v GrantInstancesResult) []GrantInstancesGrantRule { return v.GrantRules }).(GrantInstancesGrantRuleArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GrantInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GrantInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GrantInstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrantInstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The region ID of the instance.
func (o GrantInstancesResultOutput) InstanceRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrantInstancesResult) *string { return v.InstanceRegionId }).(pulumi.StringPtrOutput)
}

// The type of the instance.
func (o GrantInstancesResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrantInstancesResult) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o GrantInstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GrantInstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GrantInstancesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GrantInstancesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GrantInstancesResultOutput{})
}
