// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cen bandwidth packages
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cen"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// var fooBandwidthPackage []*cen.BandwidthPackage
//
//	for index := 0; index < 2; index++ {
//	    key0 := index
//	    val0 := index
//
// __res, err := cen.NewBandwidthPackage(ctx, fmt.Sprintf("fooBandwidthPackage-%v", key0), &cen.BandwidthPackageArgs{
// LocalGeographicRegionSetId: pulumi.String("China"),
// PeerGeographicRegionSetId: pulumi.String("China"),
// Bandwidth: pulumi.Int(2),
// CenBandwidthPackageName: pulumi.String(fmt.Sprintf("acc-test-cen-bp-%v", val0)),
// Description: pulumi.String("acc-test"),
// BillingType: pulumi.String("PrePaid"),
// PeriodUnit: pulumi.String("Month"),
// Period: pulumi.Int(1),
// ProjectName: pulumi.String("default"),
// Tags: cen.BandwidthPackageTagArray{
// &cen.BandwidthPackageTagArgs{
// Key: pulumi.String("k1"),
// Value: pulumi.String("v1"),
// },
// },
// })
// if err != nil {
// return err
// }
// fooBandwidthPackage = append(fooBandwidthPackage, __res)
// }
// _ = cen.GetBandwidthPackagesOutput(ctx, cen.GetBandwidthPackagesOutputArgs{
// Ids: %!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-functions-volcengine:cen-getBandwidthPackages:getBandwidthPackages.pp:20,9-34),
// }, nil);
// return nil
// })
// }
// ```
func GetBandwidthPackages(ctx *pulumi.Context, args *GetBandwidthPackagesArgs, opts ...pulumi.InvokeOption) (*GetBandwidthPackagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBandwidthPackagesResult
	err := ctx.Invoke("volcengine:cen/getBandwidthPackages:getBandwidthPackages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBandwidthPackages.
type GetBandwidthPackagesArgs struct {
	// A list of cen bandwidth package names.
	CenBandwidthPackageNames []string `pulumi:"cenBandwidthPackageNames"`
	// A cen id.
	CenId *string `pulumi:"cenId"`
	// A list of cen bandwidth package IDs.
	Ids []string `pulumi:"ids"`
	// A local geographic region set id.
	LocalGeographicRegionSetId *string `pulumi:"localGeographicRegionSetId"`
	// A Name Regex of cen bandwidth package.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// A peer geographic region set id.
	PeerGeographicRegionSetId *string `pulumi:"peerGeographicRegionSetId"`
	// Tags.
	Tags []GetBandwidthPackagesTag `pulumi:"tags"`
}

// A collection of values returned by getBandwidthPackages.
type GetBandwidthPackagesResult struct {
	// The collection of cen bandwidth package query.
	BandwidthPackages        []GetBandwidthPackagesBandwidthPackage `pulumi:"bandwidthPackages"`
	CenBandwidthPackageNames []string                               `pulumi:"cenBandwidthPackageNames"`
	CenId                    *string                                `pulumi:"cenId"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The local geographic region set id of the cen bandwidth package.
	LocalGeographicRegionSetId *string `pulumi:"localGeographicRegionSetId"`
	NameRegex                  *string `pulumi:"nameRegex"`
	OutputFile                 *string `pulumi:"outputFile"`
	// The peer geographic region set id of the cen bandwidth package.
	PeerGeographicRegionSetId *string `pulumi:"peerGeographicRegionSetId"`
	// Tags.
	Tags []GetBandwidthPackagesTag `pulumi:"tags"`
	// The total count of cen bandwidth package query.
	TotalCount int `pulumi:"totalCount"`
}

func GetBandwidthPackagesOutput(ctx *pulumi.Context, args GetBandwidthPackagesOutputArgs, opts ...pulumi.InvokeOption) GetBandwidthPackagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBandwidthPackagesResult, error) {
			args := v.(GetBandwidthPackagesArgs)
			r, err := GetBandwidthPackages(ctx, &args, opts...)
			var s GetBandwidthPackagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBandwidthPackagesResultOutput)
}

// A collection of arguments for invoking getBandwidthPackages.
type GetBandwidthPackagesOutputArgs struct {
	// A list of cen bandwidth package names.
	CenBandwidthPackageNames pulumi.StringArrayInput `pulumi:"cenBandwidthPackageNames"`
	// A cen id.
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// A list of cen bandwidth package IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A local geographic region set id.
	LocalGeographicRegionSetId pulumi.StringPtrInput `pulumi:"localGeographicRegionSetId"`
	// A Name Regex of cen bandwidth package.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// A peer geographic region set id.
	PeerGeographicRegionSetId pulumi.StringPtrInput `pulumi:"peerGeographicRegionSetId"`
	// Tags.
	Tags GetBandwidthPackagesTagArrayInput `pulumi:"tags"`
}

func (GetBandwidthPackagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesArgs)(nil)).Elem()
}

// A collection of values returned by getBandwidthPackages.
type GetBandwidthPackagesResultOutput struct{ *pulumi.OutputState }

func (GetBandwidthPackagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBandwidthPackagesResult)(nil)).Elem()
}

func (o GetBandwidthPackagesResultOutput) ToGetBandwidthPackagesResultOutput() GetBandwidthPackagesResultOutput {
	return o
}

func (o GetBandwidthPackagesResultOutput) ToGetBandwidthPackagesResultOutputWithContext(ctx context.Context) GetBandwidthPackagesResultOutput {
	return o
}

// The collection of cen bandwidth package query.
func (o GetBandwidthPackagesResultOutput) BandwidthPackages() GetBandwidthPackagesBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) []GetBandwidthPackagesBandwidthPackage { return v.BandwidthPackages }).(GetBandwidthPackagesBandwidthPackageArrayOutput)
}

func (o GetBandwidthPackagesResultOutput) CenBandwidthPackageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) []string { return v.CenBandwidthPackageNames }).(pulumi.StringArrayOutput)
}

func (o GetBandwidthPackagesResultOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBandwidthPackagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBandwidthPackagesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The local geographic region set id of the cen bandwidth package.
func (o GetBandwidthPackagesResultOutput) LocalGeographicRegionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.LocalGeographicRegionSetId }).(pulumi.StringPtrOutput)
}

func (o GetBandwidthPackagesResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetBandwidthPackagesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The peer geographic region set id of the cen bandwidth package.
func (o GetBandwidthPackagesResultOutput) PeerGeographicRegionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) *string { return v.PeerGeographicRegionSetId }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetBandwidthPackagesResultOutput) Tags() GetBandwidthPackagesTagArrayOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) []GetBandwidthPackagesTag { return v.Tags }).(GetBandwidthPackagesTagArrayOutput)
}

// The total count of cen bandwidth package query.
func (o GetBandwidthPackagesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBandwidthPackagesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBandwidthPackagesResultOutput{})
}
