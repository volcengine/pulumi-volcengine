// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cen service route entries
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cen"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			var fooVpc []*vpc.Vpc
//			for index := 0; index < 3; index++ {
//				key0 := index
//				_ := index
//				__res, err := vpc.NewVpc(ctx, fmt.Sprintf("fooVpc-%v", key0), &vpc.VpcArgs{
//					VpcName:   pulumi.String("acc-test-vpc"),
//					CidrBlock: pulumi.String("172.16.0.0/16"),
//				})
//				if err != nil {
//					return err
//				}
//				fooVpc = append(fooVpc, __res)
//			}
//			fooCen, err := cen.NewCen(ctx, "fooCen", &cen.CenArgs{
//				CenName:     pulumi.String("acc-test-cen"),
//				Description: pulumi.String("acc-test"),
//				ProjectName: pulumi.String("default"),
//				Tags: cen.CenTagArray{
//					&cen.CenTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			var fooAttachInstance []*cen.AttachInstance
//			for index := 0; index < 3; index++ {
//				key0 := index
//				val0 := index
//				__res, err := cen.NewAttachInstance(ctx, fmt.Sprintf("fooAttachInstance-%v", key0), &cen.AttachInstanceArgs{
//					CenId:            fooCen.ID(),
//					InstanceId:       fooVpc[val0].ID(),
//					InstanceRegionId: pulumi.String("cn-beijing"),
//					InstanceType:     pulumi.String("VPC"),
//				})
//				if err != nil {
//					return err
//				}
//				fooAttachInstance = append(fooAttachInstance, __res)
//			}
//			fooServiceRouteEntry, err := cen.NewServiceRouteEntry(ctx, "fooServiceRouteEntry", &cen.ServiceRouteEntryArgs{
//				CenId:                fooCen.ID(),
//				DestinationCidrBlock: pulumi.String("100.64.0.0/11"),
//				ServiceRegionId:      pulumi.String("cn-beijing"),
//				ServiceVpcId:         fooAttachInstance[0].InstanceId,
//				Description:          pulumi.String("acc-test"),
//				PublishMode:          pulumi.String("Custom"),
//				PublishToInstances: cen.ServiceRouteEntryPublishToInstanceArray{
//					&cen.ServiceRouteEntryPublishToInstanceArgs{
//						InstanceRegionId: pulumi.String("cn-beijing"),
//						InstanceType:     pulumi.String("VPC"),
//						InstanceId:       fooAttachInstance[1].InstanceId,
//					},
//					&cen.ServiceRouteEntryPublishToInstanceArgs{
//						InstanceRegionId: pulumi.String("cn-beijing"),
//						InstanceType:     pulumi.String("VPC"),
//						InstanceId:       fooAttachInstance[2].InstanceId,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = cen.GetServiceRouteEntriesOutput(ctx, cen.GetServiceRouteEntriesOutputArgs{
//				CenId:                fooCen.ID(),
//				DestinationCidrBlock: fooServiceRouteEntry.DestinationCidrBlock,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetServiceRouteEntries(ctx *pulumi.Context, args *GetServiceRouteEntriesArgs, opts ...pulumi.InvokeOption) (*GetServiceRouteEntriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceRouteEntriesResult
	err := ctx.Invoke("volcengine:cen/getServiceRouteEntries:getServiceRouteEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceRouteEntries.
type GetServiceRouteEntriesArgs struct {
	// A cen ID.
	CenId *string `pulumi:"cenId"`
	// A destination cidr block.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// A service region id.
	ServiceRegionId *string `pulumi:"serviceRegionId"`
	// A service VPC id.
	ServiceVpcId *string `pulumi:"serviceVpcId"`
}

// A collection of values returned by getServiceRouteEntries.
type GetServiceRouteEntriesResult struct {
	// The cen ID of the cen service route entry.
	CenId *string `pulumi:"cenId"`
	// The destination cidr block of the cen service route entry.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The service region id of the cen service route entry.
	ServiceRegionId *string `pulumi:"serviceRegionId"`
	// The collection of cen service route entry query.
	ServiceRouteEntries []GetServiceRouteEntriesServiceRouteEntry `pulumi:"serviceRouteEntries"`
	// The service VPC id of the cen service route entry.
	ServiceVpcId *string `pulumi:"serviceVpcId"`
	// The total count of cen service route entry.
	TotalCount int `pulumi:"totalCount"`
}

func GetServiceRouteEntriesOutput(ctx *pulumi.Context, args GetServiceRouteEntriesOutputArgs, opts ...pulumi.InvokeOption) GetServiceRouteEntriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServiceRouteEntriesResult, error) {
			args := v.(GetServiceRouteEntriesArgs)
			r, err := GetServiceRouteEntries(ctx, &args, opts...)
			var s GetServiceRouteEntriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServiceRouteEntriesResultOutput)
}

// A collection of arguments for invoking getServiceRouteEntries.
type GetServiceRouteEntriesOutputArgs struct {
	// A cen ID.
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// A destination cidr block.
	DestinationCidrBlock pulumi.StringPtrInput `pulumi:"destinationCidrBlock"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// A service region id.
	ServiceRegionId pulumi.StringPtrInput `pulumi:"serviceRegionId"`
	// A service VPC id.
	ServiceVpcId pulumi.StringPtrInput `pulumi:"serviceVpcId"`
}

func (GetServiceRouteEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRouteEntriesArgs)(nil)).Elem()
}

// A collection of values returned by getServiceRouteEntries.
type GetServiceRouteEntriesResultOutput struct{ *pulumi.OutputState }

func (GetServiceRouteEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRouteEntriesResult)(nil)).Elem()
}

func (o GetServiceRouteEntriesResultOutput) ToGetServiceRouteEntriesResultOutput() GetServiceRouteEntriesResultOutput {
	return o
}

func (o GetServiceRouteEntriesResultOutput) ToGetServiceRouteEntriesResultOutputWithContext(ctx context.Context) GetServiceRouteEntriesResultOutput {
	return o
}

// The cen ID of the cen service route entry.
func (o GetServiceRouteEntriesResultOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRouteEntriesResult) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// The destination cidr block of the cen service route entry.
func (o GetServiceRouteEntriesResultOutput) DestinationCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRouteEntriesResult) *string { return v.DestinationCidrBlock }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceRouteEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceRouteEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServiceRouteEntriesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRouteEntriesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The service region id of the cen service route entry.
func (o GetServiceRouteEntriesResultOutput) ServiceRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRouteEntriesResult) *string { return v.ServiceRegionId }).(pulumi.StringPtrOutput)
}

// The collection of cen service route entry query.
func (o GetServiceRouteEntriesResultOutput) ServiceRouteEntries() GetServiceRouteEntriesServiceRouteEntryArrayOutput {
	return o.ApplyT(func(v GetServiceRouteEntriesResult) []GetServiceRouteEntriesServiceRouteEntry {
		return v.ServiceRouteEntries
	}).(GetServiceRouteEntriesServiceRouteEntryArrayOutput)
}

// The service VPC id of the cen service route entry.
func (o GetServiceRouteEntriesResultOutput) ServiceVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetServiceRouteEntriesResult) *string { return v.ServiceVpcId }).(pulumi.StringPtrOutput)
}

// The total count of cen service route entry.
func (o GetServiceRouteEntriesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceRouteEntriesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceRouteEntriesResultOutput{})
}
