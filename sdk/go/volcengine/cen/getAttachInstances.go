// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cen attach instances
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cen"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooCen, err := cen.NewCen(ctx, "fooCen", &cen.CenArgs{
//				CenName:     pulumi.String("acc-test-cen"),
//				Description: pulumi.String("acc-test"),
//				ProjectName: pulumi.String("default"),
//				Tags: cen.CenTagArray{
//					&cen.CenTagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooAttachInstance, err := cen.NewAttachInstance(ctx, "fooAttachInstance", &cen.AttachInstanceArgs{
//				CenId:            fooCen.ID(),
//				InstanceId:       fooVpc.ID(),
//				InstanceRegionId: pulumi.String("cn-beijing"),
//				InstanceType:     pulumi.String("VPC"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = cen.GetAttachInstancesOutput(ctx, cen.GetAttachInstancesOutputArgs{
//				CenId: fooAttachInstance.CenId,
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetAttachInstances(ctx *pulumi.Context, args *GetAttachInstancesArgs, opts ...pulumi.InvokeOption) (*GetAttachInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAttachInstancesResult
	err := ctx.Invoke("volcengine:cen/getAttachInstances:getAttachInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAttachInstances.
type GetAttachInstancesArgs struct {
	// A cen ID.
	CenId *string `pulumi:"cenId"`
	// An instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// A region id of instance.
	InstanceRegionId *string `pulumi:"instanceRegionId"`
	// An instance type.
	InstanceType *string `pulumi:"instanceType"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getAttachInstances.
type GetAttachInstancesResult struct {
	// The collection of cen attach instance query.
	AttachInstances []GetAttachInstancesAttachInstance `pulumi:"attachInstances"`
	// The ID of the cen.
	CenId *string `pulumi:"cenId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// The region id of the instance.
	InstanceRegionId *string `pulumi:"instanceRegionId"`
	// The type of the instance.
	InstanceType *string `pulumi:"instanceType"`
	OutputFile   *string `pulumi:"outputFile"`
	// The total count of cen attach instance query.
	TotalCount int `pulumi:"totalCount"`
}

func GetAttachInstancesOutput(ctx *pulumi.Context, args GetAttachInstancesOutputArgs, opts ...pulumi.InvokeOption) GetAttachInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAttachInstancesResult, error) {
			args := v.(GetAttachInstancesArgs)
			r, err := GetAttachInstances(ctx, &args, opts...)
			var s GetAttachInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAttachInstancesResultOutput)
}

// A collection of arguments for invoking getAttachInstances.
type GetAttachInstancesOutputArgs struct {
	// A cen ID.
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// An instance ID.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// A region id of instance.
	InstanceRegionId pulumi.StringPtrInput `pulumi:"instanceRegionId"`
	// An instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetAttachInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getAttachInstances.
type GetAttachInstancesResultOutput struct{ *pulumi.OutputState }

func (GetAttachInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachInstancesResult)(nil)).Elem()
}

func (o GetAttachInstancesResultOutput) ToGetAttachInstancesResultOutput() GetAttachInstancesResultOutput {
	return o
}

func (o GetAttachInstancesResultOutput) ToGetAttachInstancesResultOutputWithContext(ctx context.Context) GetAttachInstancesResultOutput {
	return o
}

// The collection of cen attach instance query.
func (o GetAttachInstancesResultOutput) AttachInstances() GetAttachInstancesAttachInstanceArrayOutput {
	return o.ApplyT(func(v GetAttachInstancesResult) []GetAttachInstancesAttachInstance { return v.AttachInstances }).(GetAttachInstancesAttachInstanceArrayOutput)
}

// The ID of the cen.
func (o GetAttachInstancesResultOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAttachInstancesResult) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAttachInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the instance.
func (o GetAttachInstancesResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAttachInstancesResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The region id of the instance.
func (o GetAttachInstancesResultOutput) InstanceRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAttachInstancesResult) *string { return v.InstanceRegionId }).(pulumi.StringPtrOutput)
}

// The type of the instance.
func (o GetAttachInstancesResultOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAttachInstancesResult) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o GetAttachInstancesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAttachInstancesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of cen attach instance query.
func (o GetAttachInstancesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttachInstancesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAttachInstancesResultOutput{})
}
