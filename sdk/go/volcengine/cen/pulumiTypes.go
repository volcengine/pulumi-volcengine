// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AttachInstancesAttachInstance struct {
	// A cen ID.
	CenId string `pulumi:"cenId"`
	// The create time of the cen attaching instance.
	CreationTime string `pulumi:"creationTime"`
	// An instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The owner ID of the instance.
	InstanceOwnerId string `pulumi:"instanceOwnerId"`
	// A region id of instance.
	InstanceRegionId string `pulumi:"instanceRegionId"`
	// An instance type.
	InstanceType string `pulumi:"instanceType"`
	// The status of the cen attaching instance.
	Status string `pulumi:"status"`
}

// AttachInstancesAttachInstanceInput is an input type that accepts AttachInstancesAttachInstanceArgs and AttachInstancesAttachInstanceOutput values.
// You can construct a concrete instance of `AttachInstancesAttachInstanceInput` via:
//
//	AttachInstancesAttachInstanceArgs{...}
type AttachInstancesAttachInstanceInput interface {
	pulumi.Input

	ToAttachInstancesAttachInstanceOutput() AttachInstancesAttachInstanceOutput
	ToAttachInstancesAttachInstanceOutputWithContext(context.Context) AttachInstancesAttachInstanceOutput
}

type AttachInstancesAttachInstanceArgs struct {
	// A cen ID.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The create time of the cen attaching instance.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// An instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The owner ID of the instance.
	InstanceOwnerId pulumi.StringInput `pulumi:"instanceOwnerId"`
	// A region id of instance.
	InstanceRegionId pulumi.StringInput `pulumi:"instanceRegionId"`
	// An instance type.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The status of the cen attaching instance.
	Status pulumi.StringInput `pulumi:"status"`
}

func (AttachInstancesAttachInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachInstancesAttachInstance)(nil)).Elem()
}

func (i AttachInstancesAttachInstanceArgs) ToAttachInstancesAttachInstanceOutput() AttachInstancesAttachInstanceOutput {
	return i.ToAttachInstancesAttachInstanceOutputWithContext(context.Background())
}

func (i AttachInstancesAttachInstanceArgs) ToAttachInstancesAttachInstanceOutputWithContext(ctx context.Context) AttachInstancesAttachInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachInstancesAttachInstanceOutput)
}

// AttachInstancesAttachInstanceArrayInput is an input type that accepts AttachInstancesAttachInstanceArray and AttachInstancesAttachInstanceArrayOutput values.
// You can construct a concrete instance of `AttachInstancesAttachInstanceArrayInput` via:
//
//	AttachInstancesAttachInstanceArray{ AttachInstancesAttachInstanceArgs{...} }
type AttachInstancesAttachInstanceArrayInput interface {
	pulumi.Input

	ToAttachInstancesAttachInstanceArrayOutput() AttachInstancesAttachInstanceArrayOutput
	ToAttachInstancesAttachInstanceArrayOutputWithContext(context.Context) AttachInstancesAttachInstanceArrayOutput
}

type AttachInstancesAttachInstanceArray []AttachInstancesAttachInstanceInput

func (AttachInstancesAttachInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachInstancesAttachInstance)(nil)).Elem()
}

func (i AttachInstancesAttachInstanceArray) ToAttachInstancesAttachInstanceArrayOutput() AttachInstancesAttachInstanceArrayOutput {
	return i.ToAttachInstancesAttachInstanceArrayOutputWithContext(context.Background())
}

func (i AttachInstancesAttachInstanceArray) ToAttachInstancesAttachInstanceArrayOutputWithContext(ctx context.Context) AttachInstancesAttachInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachInstancesAttachInstanceArrayOutput)
}

type AttachInstancesAttachInstanceOutput struct{ *pulumi.OutputState }

func (AttachInstancesAttachInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachInstancesAttachInstance)(nil)).Elem()
}

func (o AttachInstancesAttachInstanceOutput) ToAttachInstancesAttachInstanceOutput() AttachInstancesAttachInstanceOutput {
	return o
}

func (o AttachInstancesAttachInstanceOutput) ToAttachInstancesAttachInstanceOutputWithContext(ctx context.Context) AttachInstancesAttachInstanceOutput {
	return o
}

// A cen ID.
func (o AttachInstancesAttachInstanceOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v AttachInstancesAttachInstance) string { return v.CenId }).(pulumi.StringOutput)
}

// The create time of the cen attaching instance.
func (o AttachInstancesAttachInstanceOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v AttachInstancesAttachInstance) string { return v.CreationTime }).(pulumi.StringOutput)
}

// An instance ID.
func (o AttachInstancesAttachInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v AttachInstancesAttachInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The owner ID of the instance.
func (o AttachInstancesAttachInstanceOutput) InstanceOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v AttachInstancesAttachInstance) string { return v.InstanceOwnerId }).(pulumi.StringOutput)
}

// A region id of instance.
func (o AttachInstancesAttachInstanceOutput) InstanceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v AttachInstancesAttachInstance) string { return v.InstanceRegionId }).(pulumi.StringOutput)
}

// An instance type.
func (o AttachInstancesAttachInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v AttachInstancesAttachInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The status of the cen attaching instance.
func (o AttachInstancesAttachInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AttachInstancesAttachInstance) string { return v.Status }).(pulumi.StringOutput)
}

type AttachInstancesAttachInstanceArrayOutput struct{ *pulumi.OutputState }

func (AttachInstancesAttachInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachInstancesAttachInstance)(nil)).Elem()
}

func (o AttachInstancesAttachInstanceArrayOutput) ToAttachInstancesAttachInstanceArrayOutput() AttachInstancesAttachInstanceArrayOutput {
	return o
}

func (o AttachInstancesAttachInstanceArrayOutput) ToAttachInstancesAttachInstanceArrayOutputWithContext(ctx context.Context) AttachInstancesAttachInstanceArrayOutput {
	return o
}

func (o AttachInstancesAttachInstanceArrayOutput) Index(i pulumi.IntInput) AttachInstancesAttachInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AttachInstancesAttachInstance {
		return vs[0].([]AttachInstancesAttachInstance)[vs[1].(int)]
	}).(AttachInstancesAttachInstanceOutput)
}

type BandwidthPackageTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// BandwidthPackageTagInput is an input type that accepts BandwidthPackageTagArgs and BandwidthPackageTagOutput values.
// You can construct a concrete instance of `BandwidthPackageTagInput` via:
//
//	BandwidthPackageTagArgs{...}
type BandwidthPackageTagInput interface {
	pulumi.Input

	ToBandwidthPackageTagOutput() BandwidthPackageTagOutput
	ToBandwidthPackageTagOutputWithContext(context.Context) BandwidthPackageTagOutput
}

type BandwidthPackageTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BandwidthPackageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageTag)(nil)).Elem()
}

func (i BandwidthPackageTagArgs) ToBandwidthPackageTagOutput() BandwidthPackageTagOutput {
	return i.ToBandwidthPackageTagOutputWithContext(context.Background())
}

func (i BandwidthPackageTagArgs) ToBandwidthPackageTagOutputWithContext(ctx context.Context) BandwidthPackageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageTagOutput)
}

// BandwidthPackageTagArrayInput is an input type that accepts BandwidthPackageTagArray and BandwidthPackageTagArrayOutput values.
// You can construct a concrete instance of `BandwidthPackageTagArrayInput` via:
//
//	BandwidthPackageTagArray{ BandwidthPackageTagArgs{...} }
type BandwidthPackageTagArrayInput interface {
	pulumi.Input

	ToBandwidthPackageTagArrayOutput() BandwidthPackageTagArrayOutput
	ToBandwidthPackageTagArrayOutputWithContext(context.Context) BandwidthPackageTagArrayOutput
}

type BandwidthPackageTagArray []BandwidthPackageTagInput

func (BandwidthPackageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackageTag)(nil)).Elem()
}

func (i BandwidthPackageTagArray) ToBandwidthPackageTagArrayOutput() BandwidthPackageTagArrayOutput {
	return i.ToBandwidthPackageTagArrayOutputWithContext(context.Background())
}

func (i BandwidthPackageTagArray) ToBandwidthPackageTagArrayOutputWithContext(ctx context.Context) BandwidthPackageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageTagArrayOutput)
}

type BandwidthPackageTagOutput struct{ *pulumi.OutputState }

func (BandwidthPackageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageTag)(nil)).Elem()
}

func (o BandwidthPackageTagOutput) ToBandwidthPackageTagOutput() BandwidthPackageTagOutput {
	return o
}

func (o BandwidthPackageTagOutput) ToBandwidthPackageTagOutputWithContext(ctx context.Context) BandwidthPackageTagOutput {
	return o
}

// The Key of Tags.
func (o BandwidthPackageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o BandwidthPackageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackageTag) string { return v.Value }).(pulumi.StringOutput)
}

type BandwidthPackageTagArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackageTag)(nil)).Elem()
}

func (o BandwidthPackageTagArrayOutput) ToBandwidthPackageTagArrayOutput() BandwidthPackageTagArrayOutput {
	return o
}

func (o BandwidthPackageTagArrayOutput) ToBandwidthPackageTagArrayOutputWithContext(ctx context.Context) BandwidthPackageTagArrayOutput {
	return o
}

func (o BandwidthPackageTagArrayOutput) Index(i pulumi.IntInput) BandwidthPackageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackageTag {
		return vs[0].([]BandwidthPackageTag)[vs[1].(int)]
	}).(BandwidthPackageTagOutput)
}

type BandwidthPackagesBandwidthPackage struct {
	// The account ID of the cen bandwidth package.
	AccountId string `pulumi:"accountId"`
	// The bandwidth of the cen bandwidth package.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing type of the cen bandwidth package.
	BillingType string `pulumi:"billingType"`
	// The business status of the cen bandwidth package.
	BusinessStatus string `pulumi:"businessStatus"`
	// The ID of the cen bandwidth package.
	CenBandwidthPackageId string `pulumi:"cenBandwidthPackageId"`
	// The name of the cen bandwidth package.
	CenBandwidthPackageName string `pulumi:"cenBandwidthPackageName"`
	// The cen IDs of the bandwidth package.
	CenIds []string `pulumi:"cenIds"`
	// The create time of the cen bandwidth package.
	CreationTime string `pulumi:"creationTime"`
	// The deleted time of the cen bandwidth package.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of the cen bandwidth package.
	Description string `pulumi:"description"`
	// The expired time of the cen bandwidth package.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the cen bandwidth package.
	Id string `pulumi:"id"`
	// A local geographic region set id.
	LocalGeographicRegionSetId string `pulumi:"localGeographicRegionSetId"`
	// A peer geographic region set id.
	PeerGeographicRegionSetId string `pulumi:"peerGeographicRegionSetId"`
	// The ProjectName of the cen bandwidth package.
	ProjectName string `pulumi:"projectName"`
	// The remain bandwidth of the cen bandwidth package.
	RemainingBandwidth int `pulumi:"remainingBandwidth"`
	// The status of the cen bandwidth package.
	Status string `pulumi:"status"`
	// Tags.
	Tags []BandwidthPackagesBandwidthPackageTag `pulumi:"tags"`
	// The update time of the cen bandwidth package.
	UpdateTime string `pulumi:"updateTime"`
}

// BandwidthPackagesBandwidthPackageInput is an input type that accepts BandwidthPackagesBandwidthPackageArgs and BandwidthPackagesBandwidthPackageOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageInput` via:
//
//	BandwidthPackagesBandwidthPackageArgs{...}
type BandwidthPackagesBandwidthPackageInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput
	ToBandwidthPackagesBandwidthPackageOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageOutput
}

type BandwidthPackagesBandwidthPackageArgs struct {
	// The account ID of the cen bandwidth package.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The bandwidth of the cen bandwidth package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing type of the cen bandwidth package.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The business status of the cen bandwidth package.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The ID of the cen bandwidth package.
	CenBandwidthPackageId pulumi.StringInput `pulumi:"cenBandwidthPackageId"`
	// The name of the cen bandwidth package.
	CenBandwidthPackageName pulumi.StringInput `pulumi:"cenBandwidthPackageName"`
	// The cen IDs of the bandwidth package.
	CenIds pulumi.StringArrayInput `pulumi:"cenIds"`
	// The create time of the cen bandwidth package.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The deleted time of the cen bandwidth package.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of the cen bandwidth package.
	Description pulumi.StringInput `pulumi:"description"`
	// The expired time of the cen bandwidth package.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the cen bandwidth package.
	Id pulumi.StringInput `pulumi:"id"`
	// A local geographic region set id.
	LocalGeographicRegionSetId pulumi.StringInput `pulumi:"localGeographicRegionSetId"`
	// A peer geographic region set id.
	PeerGeographicRegionSetId pulumi.StringInput `pulumi:"peerGeographicRegionSetId"`
	// The ProjectName of the cen bandwidth package.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The remain bandwidth of the cen bandwidth package.
	RemainingBandwidth pulumi.IntInput `pulumi:"remainingBandwidth"`
	// The status of the cen bandwidth package.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags BandwidthPackagesBandwidthPackageTagArrayInput `pulumi:"tags"`
	// The update time of the cen bandwidth package.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (BandwidthPackagesBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageArgs) ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput {
	return i.ToBandwidthPackagesBandwidthPackageOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageArgs) ToBandwidthPackagesBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageOutput)
}

// BandwidthPackagesBandwidthPackageArrayInput is an input type that accepts BandwidthPackagesBandwidthPackageArray and BandwidthPackagesBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageArrayInput` via:
//
//	BandwidthPackagesBandwidthPackageArray{ BandwidthPackagesBandwidthPackageArgs{...} }
type BandwidthPackagesBandwidthPackageArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput
	ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageArrayOutput
}

type BandwidthPackagesBandwidthPackageArray []BandwidthPackagesBandwidthPackageInput

func (BandwidthPackagesBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageArray) ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput {
	return i.ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageArray) ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageArrayOutput)
}

type BandwidthPackagesBandwidthPackageOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageOutput) ToBandwidthPackagesBandwidthPackageOutput() BandwidthPackagesBandwidthPackageOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageOutput) ToBandwidthPackagesBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageOutput {
	return o
}

// The account ID of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.AccountId }).(pulumi.StringOutput)
}

// The bandwidth of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing type of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.BillingType }).(pulumi.StringOutput)
}

// The business status of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The ID of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) CenBandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.CenBandwidthPackageId }).(pulumi.StringOutput)
}

// The name of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) CenBandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.CenBandwidthPackageName }).(pulumi.StringOutput)
}

// The cen IDs of the bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) CenIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) []string { return v.CenIds }).(pulumi.StringArrayOutput)
}

// The create time of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The deleted time of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Description }).(pulumi.StringOutput)
}

// The expired time of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Id }).(pulumi.StringOutput)
}

// A local geographic region set id.
func (o BandwidthPackagesBandwidthPackageOutput) LocalGeographicRegionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.LocalGeographicRegionSetId }).(pulumi.StringOutput)
}

// A peer geographic region set id.
func (o BandwidthPackagesBandwidthPackageOutput) PeerGeographicRegionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.PeerGeographicRegionSetId }).(pulumi.StringOutput)
}

// The ProjectName of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The remain bandwidth of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) RemainingBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) int { return v.RemainingBandwidth }).(pulumi.IntOutput)
}

// The status of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o BandwidthPackagesBandwidthPackageOutput) Tags() BandwidthPackagesBandwidthPackageTagArrayOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) []BandwidthPackagesBandwidthPackageTag { return v.Tags }).(BandwidthPackagesBandwidthPackageTagArrayOutput)
}

// The update time of the cen bandwidth package.
func (o BandwidthPackagesBandwidthPackageOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackage) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type BandwidthPackagesBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) ToBandwidthPackagesBandwidthPackageArrayOutput() BandwidthPackagesBandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) ToBandwidthPackagesBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesBandwidthPackage {
		return vs[0].([]BandwidthPackagesBandwidthPackage)[vs[1].(int)]
	}).(BandwidthPackagesBandwidthPackageOutput)
}

type BandwidthPackagesBandwidthPackageTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// BandwidthPackagesBandwidthPackageTagInput is an input type that accepts BandwidthPackagesBandwidthPackageTagArgs and BandwidthPackagesBandwidthPackageTagOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageTagInput` via:
//
//	BandwidthPackagesBandwidthPackageTagArgs{...}
type BandwidthPackagesBandwidthPackageTagInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageTagOutput() BandwidthPackagesBandwidthPackageTagOutput
	ToBandwidthPackagesBandwidthPackageTagOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageTagOutput
}

type BandwidthPackagesBandwidthPackageTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BandwidthPackagesBandwidthPackageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackageTag)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageTagArgs) ToBandwidthPackagesBandwidthPackageTagOutput() BandwidthPackagesBandwidthPackageTagOutput {
	return i.ToBandwidthPackagesBandwidthPackageTagOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageTagArgs) ToBandwidthPackagesBandwidthPackageTagOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageTagOutput)
}

// BandwidthPackagesBandwidthPackageTagArrayInput is an input type that accepts BandwidthPackagesBandwidthPackageTagArray and BandwidthPackagesBandwidthPackageTagArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesBandwidthPackageTagArrayInput` via:
//
//	BandwidthPackagesBandwidthPackageTagArray{ BandwidthPackagesBandwidthPackageTagArgs{...} }
type BandwidthPackagesBandwidthPackageTagArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesBandwidthPackageTagArrayOutput() BandwidthPackagesBandwidthPackageTagArrayOutput
	ToBandwidthPackagesBandwidthPackageTagArrayOutputWithContext(context.Context) BandwidthPackagesBandwidthPackageTagArrayOutput
}

type BandwidthPackagesBandwidthPackageTagArray []BandwidthPackagesBandwidthPackageTagInput

func (BandwidthPackagesBandwidthPackageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackageTag)(nil)).Elem()
}

func (i BandwidthPackagesBandwidthPackageTagArray) ToBandwidthPackagesBandwidthPackageTagArrayOutput() BandwidthPackagesBandwidthPackageTagArrayOutput {
	return i.ToBandwidthPackagesBandwidthPackageTagArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesBandwidthPackageTagArray) ToBandwidthPackagesBandwidthPackageTagArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesBandwidthPackageTagArrayOutput)
}

type BandwidthPackagesBandwidthPackageTagOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesBandwidthPackageTag)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageTagOutput) ToBandwidthPackagesBandwidthPackageTagOutput() BandwidthPackagesBandwidthPackageTagOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageTagOutput) ToBandwidthPackagesBandwidthPackageTagOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageTagOutput {
	return o
}

// The Key of Tags.
func (o BandwidthPackagesBandwidthPackageTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o BandwidthPackagesBandwidthPackageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesBandwidthPackageTag) string { return v.Value }).(pulumi.StringOutput)
}

type BandwidthPackagesBandwidthPackageTagArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesBandwidthPackageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesBandwidthPackageTag)(nil)).Elem()
}

func (o BandwidthPackagesBandwidthPackageTagArrayOutput) ToBandwidthPackagesBandwidthPackageTagArrayOutput() BandwidthPackagesBandwidthPackageTagArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageTagArrayOutput) ToBandwidthPackagesBandwidthPackageTagArrayOutputWithContext(ctx context.Context) BandwidthPackagesBandwidthPackageTagArrayOutput {
	return o
}

func (o BandwidthPackagesBandwidthPackageTagArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesBandwidthPackageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesBandwidthPackageTag {
		return vs[0].([]BandwidthPackagesBandwidthPackageTag)[vs[1].(int)]
	}).(BandwidthPackagesBandwidthPackageTagOutput)
}

type BandwidthPackagesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// BandwidthPackagesTagInput is an input type that accepts BandwidthPackagesTagArgs and BandwidthPackagesTagOutput values.
// You can construct a concrete instance of `BandwidthPackagesTagInput` via:
//
//	BandwidthPackagesTagArgs{...}
type BandwidthPackagesTagInput interface {
	pulumi.Input

	ToBandwidthPackagesTagOutput() BandwidthPackagesTagOutput
	ToBandwidthPackagesTagOutputWithContext(context.Context) BandwidthPackagesTagOutput
}

type BandwidthPackagesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (BandwidthPackagesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesTag)(nil)).Elem()
}

func (i BandwidthPackagesTagArgs) ToBandwidthPackagesTagOutput() BandwidthPackagesTagOutput {
	return i.ToBandwidthPackagesTagOutputWithContext(context.Background())
}

func (i BandwidthPackagesTagArgs) ToBandwidthPackagesTagOutputWithContext(ctx context.Context) BandwidthPackagesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesTagOutput)
}

// BandwidthPackagesTagArrayInput is an input type that accepts BandwidthPackagesTagArray and BandwidthPackagesTagArrayOutput values.
// You can construct a concrete instance of `BandwidthPackagesTagArrayInput` via:
//
//	BandwidthPackagesTagArray{ BandwidthPackagesTagArgs{...} }
type BandwidthPackagesTagArrayInput interface {
	pulumi.Input

	ToBandwidthPackagesTagArrayOutput() BandwidthPackagesTagArrayOutput
	ToBandwidthPackagesTagArrayOutputWithContext(context.Context) BandwidthPackagesTagArrayOutput
}

type BandwidthPackagesTagArray []BandwidthPackagesTagInput

func (BandwidthPackagesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesTag)(nil)).Elem()
}

func (i BandwidthPackagesTagArray) ToBandwidthPackagesTagArrayOutput() BandwidthPackagesTagArrayOutput {
	return i.ToBandwidthPackagesTagArrayOutputWithContext(context.Background())
}

func (i BandwidthPackagesTagArray) ToBandwidthPackagesTagArrayOutputWithContext(ctx context.Context) BandwidthPackagesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackagesTagArrayOutput)
}

type BandwidthPackagesTagOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackagesTag)(nil)).Elem()
}

func (o BandwidthPackagesTagOutput) ToBandwidthPackagesTagOutput() BandwidthPackagesTagOutput {
	return o
}

func (o BandwidthPackagesTagOutput) ToBandwidthPackagesTagOutputWithContext(ctx context.Context) BandwidthPackagesTagOutput {
	return o
}

// The Key of Tags.
func (o BandwidthPackagesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o BandwidthPackagesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BandwidthPackagesTag) string { return v.Value }).(pulumi.StringOutput)
}

type BandwidthPackagesTagArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackagesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BandwidthPackagesTag)(nil)).Elem()
}

func (o BandwidthPackagesTagArrayOutput) ToBandwidthPackagesTagArrayOutput() BandwidthPackagesTagArrayOutput {
	return o
}

func (o BandwidthPackagesTagArrayOutput) ToBandwidthPackagesTagArrayOutputWithContext(ctx context.Context) BandwidthPackagesTagArrayOutput {
	return o
}

func (o BandwidthPackagesTagArrayOutput) Index(i pulumi.IntInput) BandwidthPackagesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BandwidthPackagesTag {
		return vs[0].([]BandwidthPackagesTag)[vs[1].(int)]
	}).(BandwidthPackagesTagOutput)
}

type CenTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// CenTagInput is an input type that accepts CenTagArgs and CenTagOutput values.
// You can construct a concrete instance of `CenTagInput` via:
//
//	CenTagArgs{...}
type CenTagInput interface {
	pulumi.Input

	ToCenTagOutput() CenTagOutput
	ToCenTagOutputWithContext(context.Context) CenTagOutput
}

type CenTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CenTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CenTag)(nil)).Elem()
}

func (i CenTagArgs) ToCenTagOutput() CenTagOutput {
	return i.ToCenTagOutputWithContext(context.Background())
}

func (i CenTagArgs) ToCenTagOutputWithContext(ctx context.Context) CenTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CenTagOutput)
}

// CenTagArrayInput is an input type that accepts CenTagArray and CenTagArrayOutput values.
// You can construct a concrete instance of `CenTagArrayInput` via:
//
//	CenTagArray{ CenTagArgs{...} }
type CenTagArrayInput interface {
	pulumi.Input

	ToCenTagArrayOutput() CenTagArrayOutput
	ToCenTagArrayOutputWithContext(context.Context) CenTagArrayOutput
}

type CenTagArray []CenTagInput

func (CenTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CenTag)(nil)).Elem()
}

func (i CenTagArray) ToCenTagArrayOutput() CenTagArrayOutput {
	return i.ToCenTagArrayOutputWithContext(context.Background())
}

func (i CenTagArray) ToCenTagArrayOutputWithContext(ctx context.Context) CenTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CenTagArrayOutput)
}

type CenTagOutput struct{ *pulumi.OutputState }

func (CenTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CenTag)(nil)).Elem()
}

func (o CenTagOutput) ToCenTagOutput() CenTagOutput {
	return o
}

func (o CenTagOutput) ToCenTagOutputWithContext(ctx context.Context) CenTagOutput {
	return o
}

// The Key of Tags.
func (o CenTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CenTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o CenTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CenTag) string { return v.Value }).(pulumi.StringOutput)
}

type CenTagArrayOutput struct{ *pulumi.OutputState }

func (CenTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CenTag)(nil)).Elem()
}

func (o CenTagArrayOutput) ToCenTagArrayOutput() CenTagArrayOutput {
	return o
}

func (o CenTagArrayOutput) ToCenTagArrayOutputWithContext(ctx context.Context) CenTagArrayOutput {
	return o
}

func (o CenTagArrayOutput) Index(i pulumi.IntInput) CenTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CenTag {
		return vs[0].([]CenTag)[vs[1].(int)]
	}).(CenTagOutput)
}

type CensCen struct {
	// The account ID of the cen.
	AccountId string `pulumi:"accountId"`
	// A list of bandwidth package IDs of the cen.
	CenBandwidthPackageIds []string `pulumi:"cenBandwidthPackageIds"`
	// The ID of the cen.
	CenId string `pulumi:"cenId"`
	// The name of the cen.
	CenName string `pulumi:"cenName"`
	// The create time of the cen.
	CreationTime string `pulumi:"creationTime"`
	// The description of the cen.
	Description string `pulumi:"description"`
	// The ID of the cen.
	Id string `pulumi:"id"`
	// The ProjectName of the cen instance.
	ProjectName string `pulumi:"projectName"`
	// The status of the cen.
	Status string `pulumi:"status"`
	// Tags.
	Tags []CensCenTag `pulumi:"tags"`
	// The update time of the cen.
	UpdateTime string `pulumi:"updateTime"`
}

// CensCenInput is an input type that accepts CensCenArgs and CensCenOutput values.
// You can construct a concrete instance of `CensCenInput` via:
//
//	CensCenArgs{...}
type CensCenInput interface {
	pulumi.Input

	ToCensCenOutput() CensCenOutput
	ToCensCenOutputWithContext(context.Context) CensCenOutput
}

type CensCenArgs struct {
	// The account ID of the cen.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// A list of bandwidth package IDs of the cen.
	CenBandwidthPackageIds pulumi.StringArrayInput `pulumi:"cenBandwidthPackageIds"`
	// The ID of the cen.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The name of the cen.
	CenName pulumi.StringInput `pulumi:"cenName"`
	// The create time of the cen.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the cen.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the cen.
	Id pulumi.StringInput `pulumi:"id"`
	// The ProjectName of the cen instance.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of the cen.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags CensCenTagArrayInput `pulumi:"tags"`
	// The update time of the cen.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (CensCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CensCen)(nil)).Elem()
}

func (i CensCenArgs) ToCensCenOutput() CensCenOutput {
	return i.ToCensCenOutputWithContext(context.Background())
}

func (i CensCenArgs) ToCensCenOutputWithContext(ctx context.Context) CensCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CensCenOutput)
}

// CensCenArrayInput is an input type that accepts CensCenArray and CensCenArrayOutput values.
// You can construct a concrete instance of `CensCenArrayInput` via:
//
//	CensCenArray{ CensCenArgs{...} }
type CensCenArrayInput interface {
	pulumi.Input

	ToCensCenArrayOutput() CensCenArrayOutput
	ToCensCenArrayOutputWithContext(context.Context) CensCenArrayOutput
}

type CensCenArray []CensCenInput

func (CensCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CensCen)(nil)).Elem()
}

func (i CensCenArray) ToCensCenArrayOutput() CensCenArrayOutput {
	return i.ToCensCenArrayOutputWithContext(context.Background())
}

func (i CensCenArray) ToCensCenArrayOutputWithContext(ctx context.Context) CensCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CensCenArrayOutput)
}

type CensCenOutput struct{ *pulumi.OutputState }

func (CensCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CensCen)(nil)).Elem()
}

func (o CensCenOutput) ToCensCenOutput() CensCenOutput {
	return o
}

func (o CensCenOutput) ToCensCenOutputWithContext(ctx context.Context) CensCenOutput {
	return o
}

// The account ID of the cen.
func (o CensCenOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.AccountId }).(pulumi.StringOutput)
}

// A list of bandwidth package IDs of the cen.
func (o CensCenOutput) CenBandwidthPackageIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CensCen) []string { return v.CenBandwidthPackageIds }).(pulumi.StringArrayOutput)
}

// The ID of the cen.
func (o CensCenOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.CenId }).(pulumi.StringOutput)
}

// The name of the cen.
func (o CensCenOutput) CenName() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.CenName }).(pulumi.StringOutput)
}

// The create time of the cen.
func (o CensCenOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the cen.
func (o CensCenOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the cen.
func (o CensCenOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.Id }).(pulumi.StringOutput)
}

// The ProjectName of the cen instance.
func (o CensCenOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of the cen.
func (o CensCenOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o CensCenOutput) Tags() CensCenTagArrayOutput {
	return o.ApplyT(func(v CensCen) []CensCenTag { return v.Tags }).(CensCenTagArrayOutput)
}

// The update time of the cen.
func (o CensCenOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CensCen) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type CensCenArrayOutput struct{ *pulumi.OutputState }

func (CensCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CensCen)(nil)).Elem()
}

func (o CensCenArrayOutput) ToCensCenArrayOutput() CensCenArrayOutput {
	return o
}

func (o CensCenArrayOutput) ToCensCenArrayOutputWithContext(ctx context.Context) CensCenArrayOutput {
	return o
}

func (o CensCenArrayOutput) Index(i pulumi.IntInput) CensCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CensCen {
		return vs[0].([]CensCen)[vs[1].(int)]
	}).(CensCenOutput)
}

type CensCenTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// CensCenTagInput is an input type that accepts CensCenTagArgs and CensCenTagOutput values.
// You can construct a concrete instance of `CensCenTagInput` via:
//
//	CensCenTagArgs{...}
type CensCenTagInput interface {
	pulumi.Input

	ToCensCenTagOutput() CensCenTagOutput
	ToCensCenTagOutputWithContext(context.Context) CensCenTagOutput
}

type CensCenTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CensCenTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CensCenTag)(nil)).Elem()
}

func (i CensCenTagArgs) ToCensCenTagOutput() CensCenTagOutput {
	return i.ToCensCenTagOutputWithContext(context.Background())
}

func (i CensCenTagArgs) ToCensCenTagOutputWithContext(ctx context.Context) CensCenTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CensCenTagOutput)
}

// CensCenTagArrayInput is an input type that accepts CensCenTagArray and CensCenTagArrayOutput values.
// You can construct a concrete instance of `CensCenTagArrayInput` via:
//
//	CensCenTagArray{ CensCenTagArgs{...} }
type CensCenTagArrayInput interface {
	pulumi.Input

	ToCensCenTagArrayOutput() CensCenTagArrayOutput
	ToCensCenTagArrayOutputWithContext(context.Context) CensCenTagArrayOutput
}

type CensCenTagArray []CensCenTagInput

func (CensCenTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CensCenTag)(nil)).Elem()
}

func (i CensCenTagArray) ToCensCenTagArrayOutput() CensCenTagArrayOutput {
	return i.ToCensCenTagArrayOutputWithContext(context.Background())
}

func (i CensCenTagArray) ToCensCenTagArrayOutputWithContext(ctx context.Context) CensCenTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CensCenTagArrayOutput)
}

type CensCenTagOutput struct{ *pulumi.OutputState }

func (CensCenTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CensCenTag)(nil)).Elem()
}

func (o CensCenTagOutput) ToCensCenTagOutput() CensCenTagOutput {
	return o
}

func (o CensCenTagOutput) ToCensCenTagOutputWithContext(ctx context.Context) CensCenTagOutput {
	return o
}

// The Key of Tags.
func (o CensCenTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CensCenTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o CensCenTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CensCenTag) string { return v.Value }).(pulumi.StringOutput)
}

type CensCenTagArrayOutput struct{ *pulumi.OutputState }

func (CensCenTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CensCenTag)(nil)).Elem()
}

func (o CensCenTagArrayOutput) ToCensCenTagArrayOutput() CensCenTagArrayOutput {
	return o
}

func (o CensCenTagArrayOutput) ToCensCenTagArrayOutputWithContext(ctx context.Context) CensCenTagArrayOutput {
	return o
}

func (o CensCenTagArrayOutput) Index(i pulumi.IntInput) CensCenTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CensCenTag {
		return vs[0].([]CensCenTag)[vs[1].(int)]
	}).(CensCenTagOutput)
}

type CensTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// CensTagInput is an input type that accepts CensTagArgs and CensTagOutput values.
// You can construct a concrete instance of `CensTagInput` via:
//
//	CensTagArgs{...}
type CensTagInput interface {
	pulumi.Input

	ToCensTagOutput() CensTagOutput
	ToCensTagOutputWithContext(context.Context) CensTagOutput
}

type CensTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CensTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CensTag)(nil)).Elem()
}

func (i CensTagArgs) ToCensTagOutput() CensTagOutput {
	return i.ToCensTagOutputWithContext(context.Background())
}

func (i CensTagArgs) ToCensTagOutputWithContext(ctx context.Context) CensTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CensTagOutput)
}

// CensTagArrayInput is an input type that accepts CensTagArray and CensTagArrayOutput values.
// You can construct a concrete instance of `CensTagArrayInput` via:
//
//	CensTagArray{ CensTagArgs{...} }
type CensTagArrayInput interface {
	pulumi.Input

	ToCensTagArrayOutput() CensTagArrayOutput
	ToCensTagArrayOutputWithContext(context.Context) CensTagArrayOutput
}

type CensTagArray []CensTagInput

func (CensTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CensTag)(nil)).Elem()
}

func (i CensTagArray) ToCensTagArrayOutput() CensTagArrayOutput {
	return i.ToCensTagArrayOutputWithContext(context.Background())
}

func (i CensTagArray) ToCensTagArrayOutputWithContext(ctx context.Context) CensTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CensTagArrayOutput)
}

type CensTagOutput struct{ *pulumi.OutputState }

func (CensTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CensTag)(nil)).Elem()
}

func (o CensTagOutput) ToCensTagOutput() CensTagOutput {
	return o
}

func (o CensTagOutput) ToCensTagOutputWithContext(ctx context.Context) CensTagOutput {
	return o
}

// The Key of Tags.
func (o CensTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CensTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o CensTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CensTag) string { return v.Value }).(pulumi.StringOutput)
}

type CensTagArrayOutput struct{ *pulumi.OutputState }

func (CensTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CensTag)(nil)).Elem()
}

func (o CensTagArrayOutput) ToCensTagArrayOutput() CensTagArrayOutput {
	return o
}

func (o CensTagArrayOutput) ToCensTagArrayOutputWithContext(ctx context.Context) CensTagArrayOutput {
	return o
}

func (o CensTagArrayOutput) Index(i pulumi.IntInput) CensTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CensTag {
		return vs[0].([]CensTag)[vs[1].(int)]
	}).(CensTagOutput)
}

type InterRegionBandwidthsInterRegionBandwidth struct {
	// The bandwidth of the cen inter region bandwidth.
	Bandwidth int `pulumi:"bandwidth"`
	// The cen ID of the cen inter region bandwidth.
	CenId string `pulumi:"cenId"`
	// The create time of the cen inter region bandwidth.
	CreationTime string `pulumi:"creationTime"`
	// The ID of the cen inter region bandwidth.
	Id string `pulumi:"id"`
	// The ID of the cen inter region bandwidth.
	InterRegionBandwidthId string `pulumi:"interRegionBandwidthId"`
	// The local region id of the cen inter region bandwidth.
	LocalRegionId string `pulumi:"localRegionId"`
	// The peer region id of the cen inter region bandwidth.
	PeerRegionId string `pulumi:"peerRegionId"`
	// The status of the cen inter region bandwidth.
	Status string `pulumi:"status"`
	// The update time of the cen inter region bandwidth.
	UpdateTime string `pulumi:"updateTime"`
}

// InterRegionBandwidthsInterRegionBandwidthInput is an input type that accepts InterRegionBandwidthsInterRegionBandwidthArgs and InterRegionBandwidthsInterRegionBandwidthOutput values.
// You can construct a concrete instance of `InterRegionBandwidthsInterRegionBandwidthInput` via:
//
//	InterRegionBandwidthsInterRegionBandwidthArgs{...}
type InterRegionBandwidthsInterRegionBandwidthInput interface {
	pulumi.Input

	ToInterRegionBandwidthsInterRegionBandwidthOutput() InterRegionBandwidthsInterRegionBandwidthOutput
	ToInterRegionBandwidthsInterRegionBandwidthOutputWithContext(context.Context) InterRegionBandwidthsInterRegionBandwidthOutput
}

type InterRegionBandwidthsInterRegionBandwidthArgs struct {
	// The bandwidth of the cen inter region bandwidth.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The cen ID of the cen inter region bandwidth.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The create time of the cen inter region bandwidth.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The ID of the cen inter region bandwidth.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the cen inter region bandwidth.
	InterRegionBandwidthId pulumi.StringInput `pulumi:"interRegionBandwidthId"`
	// The local region id of the cen inter region bandwidth.
	LocalRegionId pulumi.StringInput `pulumi:"localRegionId"`
	// The peer region id of the cen inter region bandwidth.
	PeerRegionId pulumi.StringInput `pulumi:"peerRegionId"`
	// The status of the cen inter region bandwidth.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of the cen inter region bandwidth.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (InterRegionBandwidthsInterRegionBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterRegionBandwidthsInterRegionBandwidth)(nil)).Elem()
}

func (i InterRegionBandwidthsInterRegionBandwidthArgs) ToInterRegionBandwidthsInterRegionBandwidthOutput() InterRegionBandwidthsInterRegionBandwidthOutput {
	return i.ToInterRegionBandwidthsInterRegionBandwidthOutputWithContext(context.Background())
}

func (i InterRegionBandwidthsInterRegionBandwidthArgs) ToInterRegionBandwidthsInterRegionBandwidthOutputWithContext(ctx context.Context) InterRegionBandwidthsInterRegionBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterRegionBandwidthsInterRegionBandwidthOutput)
}

// InterRegionBandwidthsInterRegionBandwidthArrayInput is an input type that accepts InterRegionBandwidthsInterRegionBandwidthArray and InterRegionBandwidthsInterRegionBandwidthArrayOutput values.
// You can construct a concrete instance of `InterRegionBandwidthsInterRegionBandwidthArrayInput` via:
//
//	InterRegionBandwidthsInterRegionBandwidthArray{ InterRegionBandwidthsInterRegionBandwidthArgs{...} }
type InterRegionBandwidthsInterRegionBandwidthArrayInput interface {
	pulumi.Input

	ToInterRegionBandwidthsInterRegionBandwidthArrayOutput() InterRegionBandwidthsInterRegionBandwidthArrayOutput
	ToInterRegionBandwidthsInterRegionBandwidthArrayOutputWithContext(context.Context) InterRegionBandwidthsInterRegionBandwidthArrayOutput
}

type InterRegionBandwidthsInterRegionBandwidthArray []InterRegionBandwidthsInterRegionBandwidthInput

func (InterRegionBandwidthsInterRegionBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterRegionBandwidthsInterRegionBandwidth)(nil)).Elem()
}

func (i InterRegionBandwidthsInterRegionBandwidthArray) ToInterRegionBandwidthsInterRegionBandwidthArrayOutput() InterRegionBandwidthsInterRegionBandwidthArrayOutput {
	return i.ToInterRegionBandwidthsInterRegionBandwidthArrayOutputWithContext(context.Background())
}

func (i InterRegionBandwidthsInterRegionBandwidthArray) ToInterRegionBandwidthsInterRegionBandwidthArrayOutputWithContext(ctx context.Context) InterRegionBandwidthsInterRegionBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterRegionBandwidthsInterRegionBandwidthArrayOutput)
}

type InterRegionBandwidthsInterRegionBandwidthOutput struct{ *pulumi.OutputState }

func (InterRegionBandwidthsInterRegionBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterRegionBandwidthsInterRegionBandwidth)(nil)).Elem()
}

func (o InterRegionBandwidthsInterRegionBandwidthOutput) ToInterRegionBandwidthsInterRegionBandwidthOutput() InterRegionBandwidthsInterRegionBandwidthOutput {
	return o
}

func (o InterRegionBandwidthsInterRegionBandwidthOutput) ToInterRegionBandwidthsInterRegionBandwidthOutputWithContext(ctx context.Context) InterRegionBandwidthsInterRegionBandwidthOutput {
	return o
}

// The bandwidth of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The cen ID of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) string { return v.CenId }).(pulumi.StringOutput)
}

// The create time of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The ID of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) InterRegionBandwidthId() pulumi.StringOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) string { return v.InterRegionBandwidthId }).(pulumi.StringOutput)
}

// The local region id of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) LocalRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) string { return v.LocalRegionId }).(pulumi.StringOutput)
}

// The peer region id of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) PeerRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) string { return v.PeerRegionId }).(pulumi.StringOutput)
}

// The status of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of the cen inter region bandwidth.
func (o InterRegionBandwidthsInterRegionBandwidthOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v InterRegionBandwidthsInterRegionBandwidth) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type InterRegionBandwidthsInterRegionBandwidthArrayOutput struct{ *pulumi.OutputState }

func (InterRegionBandwidthsInterRegionBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InterRegionBandwidthsInterRegionBandwidth)(nil)).Elem()
}

func (o InterRegionBandwidthsInterRegionBandwidthArrayOutput) ToInterRegionBandwidthsInterRegionBandwidthArrayOutput() InterRegionBandwidthsInterRegionBandwidthArrayOutput {
	return o
}

func (o InterRegionBandwidthsInterRegionBandwidthArrayOutput) ToInterRegionBandwidthsInterRegionBandwidthArrayOutputWithContext(ctx context.Context) InterRegionBandwidthsInterRegionBandwidthArrayOutput {
	return o
}

func (o InterRegionBandwidthsInterRegionBandwidthArrayOutput) Index(i pulumi.IntInput) InterRegionBandwidthsInterRegionBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InterRegionBandwidthsInterRegionBandwidth {
		return vs[0].([]InterRegionBandwidthsInterRegionBandwidth)[vs[1].(int)]
	}).(InterRegionBandwidthsInterRegionBandwidthOutput)
}

type RouteEntriesCenRouteEntry struct {
	// The AS path of the cen route entry.
	AsPaths []string `pulumi:"asPaths"`
	// A cen ID.
	CenId string `pulumi:"cenId"`
	// A destination cidr block.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// An instance ID.
	InstanceId string `pulumi:"instanceId"`
	// An instance region ID.
	InstanceRegionId string `pulumi:"instanceRegionId"`
	// An instance type.
	InstanceType string `pulumi:"instanceType"`
	// The publish status of the cen route entry.
	PublishStatus string `pulumi:"publishStatus"`
	// The status of the cen route entry.
	Status string `pulumi:"status"`
}

// RouteEntriesCenRouteEntryInput is an input type that accepts RouteEntriesCenRouteEntryArgs and RouteEntriesCenRouteEntryOutput values.
// You can construct a concrete instance of `RouteEntriesCenRouteEntryInput` via:
//
//	RouteEntriesCenRouteEntryArgs{...}
type RouteEntriesCenRouteEntryInput interface {
	pulumi.Input

	ToRouteEntriesCenRouteEntryOutput() RouteEntriesCenRouteEntryOutput
	ToRouteEntriesCenRouteEntryOutputWithContext(context.Context) RouteEntriesCenRouteEntryOutput
}

type RouteEntriesCenRouteEntryArgs struct {
	// The AS path of the cen route entry.
	AsPaths pulumi.StringArrayInput `pulumi:"asPaths"`
	// A cen ID.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// A destination cidr block.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// An instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// An instance region ID.
	InstanceRegionId pulumi.StringInput `pulumi:"instanceRegionId"`
	// An instance type.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The publish status of the cen route entry.
	PublishStatus pulumi.StringInput `pulumi:"publishStatus"`
	// The status of the cen route entry.
	Status pulumi.StringInput `pulumi:"status"`
}

func (RouteEntriesCenRouteEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesCenRouteEntry)(nil)).Elem()
}

func (i RouteEntriesCenRouteEntryArgs) ToRouteEntriesCenRouteEntryOutput() RouteEntriesCenRouteEntryOutput {
	return i.ToRouteEntriesCenRouteEntryOutputWithContext(context.Background())
}

func (i RouteEntriesCenRouteEntryArgs) ToRouteEntriesCenRouteEntryOutputWithContext(ctx context.Context) RouteEntriesCenRouteEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesCenRouteEntryOutput)
}

// RouteEntriesCenRouteEntryArrayInput is an input type that accepts RouteEntriesCenRouteEntryArray and RouteEntriesCenRouteEntryArrayOutput values.
// You can construct a concrete instance of `RouteEntriesCenRouteEntryArrayInput` via:
//
//	RouteEntriesCenRouteEntryArray{ RouteEntriesCenRouteEntryArgs{...} }
type RouteEntriesCenRouteEntryArrayInput interface {
	pulumi.Input

	ToRouteEntriesCenRouteEntryArrayOutput() RouteEntriesCenRouteEntryArrayOutput
	ToRouteEntriesCenRouteEntryArrayOutputWithContext(context.Context) RouteEntriesCenRouteEntryArrayOutput
}

type RouteEntriesCenRouteEntryArray []RouteEntriesCenRouteEntryInput

func (RouteEntriesCenRouteEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesCenRouteEntry)(nil)).Elem()
}

func (i RouteEntriesCenRouteEntryArray) ToRouteEntriesCenRouteEntryArrayOutput() RouteEntriesCenRouteEntryArrayOutput {
	return i.ToRouteEntriesCenRouteEntryArrayOutputWithContext(context.Background())
}

func (i RouteEntriesCenRouteEntryArray) ToRouteEntriesCenRouteEntryArrayOutputWithContext(ctx context.Context) RouteEntriesCenRouteEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesCenRouteEntryArrayOutput)
}

type RouteEntriesCenRouteEntryOutput struct{ *pulumi.OutputState }

func (RouteEntriesCenRouteEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesCenRouteEntry)(nil)).Elem()
}

func (o RouteEntriesCenRouteEntryOutput) ToRouteEntriesCenRouteEntryOutput() RouteEntriesCenRouteEntryOutput {
	return o
}

func (o RouteEntriesCenRouteEntryOutput) ToRouteEntriesCenRouteEntryOutputWithContext(ctx context.Context) RouteEntriesCenRouteEntryOutput {
	return o
}

// The AS path of the cen route entry.
func (o RouteEntriesCenRouteEntryOutput) AsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteEntriesCenRouteEntry) []string { return v.AsPaths }).(pulumi.StringArrayOutput)
}

// A cen ID.
func (o RouteEntriesCenRouteEntryOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesCenRouteEntry) string { return v.CenId }).(pulumi.StringOutput)
}

// A destination cidr block.
func (o RouteEntriesCenRouteEntryOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesCenRouteEntry) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// An instance ID.
func (o RouteEntriesCenRouteEntryOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesCenRouteEntry) string { return v.InstanceId }).(pulumi.StringOutput)
}

// An instance region ID.
func (o RouteEntriesCenRouteEntryOutput) InstanceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesCenRouteEntry) string { return v.InstanceRegionId }).(pulumi.StringOutput)
}

// An instance type.
func (o RouteEntriesCenRouteEntryOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesCenRouteEntry) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The publish status of the cen route entry.
func (o RouteEntriesCenRouteEntryOutput) PublishStatus() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesCenRouteEntry) string { return v.PublishStatus }).(pulumi.StringOutput)
}

// The status of the cen route entry.
func (o RouteEntriesCenRouteEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesCenRouteEntry) string { return v.Status }).(pulumi.StringOutput)
}

type RouteEntriesCenRouteEntryArrayOutput struct{ *pulumi.OutputState }

func (RouteEntriesCenRouteEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesCenRouteEntry)(nil)).Elem()
}

func (o RouteEntriesCenRouteEntryArrayOutput) ToRouteEntriesCenRouteEntryArrayOutput() RouteEntriesCenRouteEntryArrayOutput {
	return o
}

func (o RouteEntriesCenRouteEntryArrayOutput) ToRouteEntriesCenRouteEntryArrayOutputWithContext(ctx context.Context) RouteEntriesCenRouteEntryArrayOutput {
	return o
}

func (o RouteEntriesCenRouteEntryArrayOutput) Index(i pulumi.IntInput) RouteEntriesCenRouteEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteEntriesCenRouteEntry {
		return vs[0].([]RouteEntriesCenRouteEntry)[vs[1].(int)]
	}).(RouteEntriesCenRouteEntryOutput)
}

type ServiceRouteEntriesServiceRouteEntry struct {
	// A cen ID.
	CenId string `pulumi:"cenId"`
	// The create time of the cen service route entry.
	CreationTime string `pulumi:"creationTime"`
	// The description of the cen service route entry.
	Description string `pulumi:"description"`
	// A destination cidr block.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
	PublishMode string `pulumi:"publishMode"`
	// The publish instances. A maximum of 100 can be uploaded in one request.
	PublishToInstances []ServiceRouteEntriesServiceRouteEntryPublishToInstance `pulumi:"publishToInstances"`
	// A service region id.
	ServiceRegionId string `pulumi:"serviceRegionId"`
	// A service VPC id.
	ServiceVpcId string `pulumi:"serviceVpcId"`
	// The status of the cen service route entry.
	Status string `pulumi:"status"`
}

// ServiceRouteEntriesServiceRouteEntryInput is an input type that accepts ServiceRouteEntriesServiceRouteEntryArgs and ServiceRouteEntriesServiceRouteEntryOutput values.
// You can construct a concrete instance of `ServiceRouteEntriesServiceRouteEntryInput` via:
//
//	ServiceRouteEntriesServiceRouteEntryArgs{...}
type ServiceRouteEntriesServiceRouteEntryInput interface {
	pulumi.Input

	ToServiceRouteEntriesServiceRouteEntryOutput() ServiceRouteEntriesServiceRouteEntryOutput
	ToServiceRouteEntriesServiceRouteEntryOutputWithContext(context.Context) ServiceRouteEntriesServiceRouteEntryOutput
}

type ServiceRouteEntriesServiceRouteEntryArgs struct {
	// A cen ID.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The create time of the cen service route entry.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the cen service route entry.
	Description pulumi.StringInput `pulumi:"description"`
	// A destination cidr block.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
	PublishMode pulumi.StringInput `pulumi:"publishMode"`
	// The publish instances. A maximum of 100 can be uploaded in one request.
	PublishToInstances ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayInput `pulumi:"publishToInstances"`
	// A service region id.
	ServiceRegionId pulumi.StringInput `pulumi:"serviceRegionId"`
	// A service VPC id.
	ServiceVpcId pulumi.StringInput `pulumi:"serviceVpcId"`
	// The status of the cen service route entry.
	Status pulumi.StringInput `pulumi:"status"`
}

func (ServiceRouteEntriesServiceRouteEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRouteEntriesServiceRouteEntry)(nil)).Elem()
}

func (i ServiceRouteEntriesServiceRouteEntryArgs) ToServiceRouteEntriesServiceRouteEntryOutput() ServiceRouteEntriesServiceRouteEntryOutput {
	return i.ToServiceRouteEntriesServiceRouteEntryOutputWithContext(context.Background())
}

func (i ServiceRouteEntriesServiceRouteEntryArgs) ToServiceRouteEntriesServiceRouteEntryOutputWithContext(ctx context.Context) ServiceRouteEntriesServiceRouteEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntriesServiceRouteEntryOutput)
}

// ServiceRouteEntriesServiceRouteEntryArrayInput is an input type that accepts ServiceRouteEntriesServiceRouteEntryArray and ServiceRouteEntriesServiceRouteEntryArrayOutput values.
// You can construct a concrete instance of `ServiceRouteEntriesServiceRouteEntryArrayInput` via:
//
//	ServiceRouteEntriesServiceRouteEntryArray{ ServiceRouteEntriesServiceRouteEntryArgs{...} }
type ServiceRouteEntriesServiceRouteEntryArrayInput interface {
	pulumi.Input

	ToServiceRouteEntriesServiceRouteEntryArrayOutput() ServiceRouteEntriesServiceRouteEntryArrayOutput
	ToServiceRouteEntriesServiceRouteEntryArrayOutputWithContext(context.Context) ServiceRouteEntriesServiceRouteEntryArrayOutput
}

type ServiceRouteEntriesServiceRouteEntryArray []ServiceRouteEntriesServiceRouteEntryInput

func (ServiceRouteEntriesServiceRouteEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRouteEntriesServiceRouteEntry)(nil)).Elem()
}

func (i ServiceRouteEntriesServiceRouteEntryArray) ToServiceRouteEntriesServiceRouteEntryArrayOutput() ServiceRouteEntriesServiceRouteEntryArrayOutput {
	return i.ToServiceRouteEntriesServiceRouteEntryArrayOutputWithContext(context.Background())
}

func (i ServiceRouteEntriesServiceRouteEntryArray) ToServiceRouteEntriesServiceRouteEntryArrayOutputWithContext(ctx context.Context) ServiceRouteEntriesServiceRouteEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntriesServiceRouteEntryArrayOutput)
}

type ServiceRouteEntriesServiceRouteEntryOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntriesServiceRouteEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRouteEntriesServiceRouteEntry)(nil)).Elem()
}

func (o ServiceRouteEntriesServiceRouteEntryOutput) ToServiceRouteEntriesServiceRouteEntryOutput() ServiceRouteEntriesServiceRouteEntryOutput {
	return o
}

func (o ServiceRouteEntriesServiceRouteEntryOutput) ToServiceRouteEntriesServiceRouteEntryOutputWithContext(ctx context.Context) ServiceRouteEntriesServiceRouteEntryOutput {
	return o
}

// A cen ID.
func (o ServiceRouteEntriesServiceRouteEntryOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) string { return v.CenId }).(pulumi.StringOutput)
}

// The create time of the cen service route entry.
func (o ServiceRouteEntriesServiceRouteEntryOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the cen service route entry.
func (o ServiceRouteEntriesServiceRouteEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) string { return v.Description }).(pulumi.StringOutput)
}

// A destination cidr block.
func (o ServiceRouteEntriesServiceRouteEntryOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
func (o ServiceRouteEntriesServiceRouteEntryOutput) PublishMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) string { return v.PublishMode }).(pulumi.StringOutput)
}

// The publish instances. A maximum of 100 can be uploaded in one request.
func (o ServiceRouteEntriesServiceRouteEntryOutput) PublishToInstances() ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) []ServiceRouteEntriesServiceRouteEntryPublishToInstance {
		return v.PublishToInstances
	}).(ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput)
}

// A service region id.
func (o ServiceRouteEntriesServiceRouteEntryOutput) ServiceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) string { return v.ServiceRegionId }).(pulumi.StringOutput)
}

// A service VPC id.
func (o ServiceRouteEntriesServiceRouteEntryOutput) ServiceVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) string { return v.ServiceVpcId }).(pulumi.StringOutput)
}

// The status of the cen service route entry.
func (o ServiceRouteEntriesServiceRouteEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntry) string { return v.Status }).(pulumi.StringOutput)
}

type ServiceRouteEntriesServiceRouteEntryArrayOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntriesServiceRouteEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRouteEntriesServiceRouteEntry)(nil)).Elem()
}

func (o ServiceRouteEntriesServiceRouteEntryArrayOutput) ToServiceRouteEntriesServiceRouteEntryArrayOutput() ServiceRouteEntriesServiceRouteEntryArrayOutput {
	return o
}

func (o ServiceRouteEntriesServiceRouteEntryArrayOutput) ToServiceRouteEntriesServiceRouteEntryArrayOutputWithContext(ctx context.Context) ServiceRouteEntriesServiceRouteEntryArrayOutput {
	return o
}

func (o ServiceRouteEntriesServiceRouteEntryArrayOutput) Index(i pulumi.IntInput) ServiceRouteEntriesServiceRouteEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceRouteEntriesServiceRouteEntry {
		return vs[0].([]ServiceRouteEntriesServiceRouteEntry)[vs[1].(int)]
	}).(ServiceRouteEntriesServiceRouteEntryOutput)
}

type ServiceRouteEntriesServiceRouteEntryPublishToInstance struct {
	// Cloud service access routes need to publish the network instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The region where the cloud service access route needs to be published.
	InstanceRegionId string `pulumi:"instanceRegionId"`
	// The network instance type that needs to be published for cloud service access routes. The values are as follows: `VPC`, `DCGW`.
	InstanceType string `pulumi:"instanceType"`
}

// ServiceRouteEntriesServiceRouteEntryPublishToInstanceInput is an input type that accepts ServiceRouteEntriesServiceRouteEntryPublishToInstanceArgs and ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput values.
// You can construct a concrete instance of `ServiceRouteEntriesServiceRouteEntryPublishToInstanceInput` via:
//
//	ServiceRouteEntriesServiceRouteEntryPublishToInstanceArgs{...}
type ServiceRouteEntriesServiceRouteEntryPublishToInstanceInput interface {
	pulumi.Input

	ToServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput() ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput
	ToServiceRouteEntriesServiceRouteEntryPublishToInstanceOutputWithContext(context.Context) ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput
}

type ServiceRouteEntriesServiceRouteEntryPublishToInstanceArgs struct {
	// Cloud service access routes need to publish the network instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The region where the cloud service access route needs to be published.
	InstanceRegionId pulumi.StringInput `pulumi:"instanceRegionId"`
	// The network instance type that needs to be published for cloud service access routes. The values are as follows: `VPC`, `DCGW`.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
}

func (ServiceRouteEntriesServiceRouteEntryPublishToInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRouteEntriesServiceRouteEntryPublishToInstance)(nil)).Elem()
}

func (i ServiceRouteEntriesServiceRouteEntryPublishToInstanceArgs) ToServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput() ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput {
	return i.ToServiceRouteEntriesServiceRouteEntryPublishToInstanceOutputWithContext(context.Background())
}

func (i ServiceRouteEntriesServiceRouteEntryPublishToInstanceArgs) ToServiceRouteEntriesServiceRouteEntryPublishToInstanceOutputWithContext(ctx context.Context) ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput)
}

// ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayInput is an input type that accepts ServiceRouteEntriesServiceRouteEntryPublishToInstanceArray and ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput values.
// You can construct a concrete instance of `ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayInput` via:
//
//	ServiceRouteEntriesServiceRouteEntryPublishToInstanceArray{ ServiceRouteEntriesServiceRouteEntryPublishToInstanceArgs{...} }
type ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayInput interface {
	pulumi.Input

	ToServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput() ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput
	ToServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutputWithContext(context.Context) ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput
}

type ServiceRouteEntriesServiceRouteEntryPublishToInstanceArray []ServiceRouteEntriesServiceRouteEntryPublishToInstanceInput

func (ServiceRouteEntriesServiceRouteEntryPublishToInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRouteEntriesServiceRouteEntryPublishToInstance)(nil)).Elem()
}

func (i ServiceRouteEntriesServiceRouteEntryPublishToInstanceArray) ToServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput() ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput {
	return i.ToServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutputWithContext(context.Background())
}

func (i ServiceRouteEntriesServiceRouteEntryPublishToInstanceArray) ToServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutputWithContext(ctx context.Context) ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput)
}

type ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRouteEntriesServiceRouteEntryPublishToInstance)(nil)).Elem()
}

func (o ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput) ToServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput() ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput {
	return o
}

func (o ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput) ToServiceRouteEntriesServiceRouteEntryPublishToInstanceOutputWithContext(ctx context.Context) ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput {
	return o
}

// Cloud service access routes need to publish the network instance ID.
func (o ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntryPublishToInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The region where the cloud service access route needs to be published.
func (o ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput) InstanceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntryPublishToInstance) string { return v.InstanceRegionId }).(pulumi.StringOutput)
}

// The network instance type that needs to be published for cloud service access routes. The values are as follows: `VPC`, `DCGW`.
func (o ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesServiceRouteEntryPublishToInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

type ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRouteEntriesServiceRouteEntryPublishToInstance)(nil)).Elem()
}

func (o ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput) ToServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput() ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput {
	return o
}

func (o ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput) ToServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutputWithContext(ctx context.Context) ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput {
	return o
}

func (o ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput) Index(i pulumi.IntInput) ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceRouteEntriesServiceRouteEntryPublishToInstance {
		return vs[0].([]ServiceRouteEntriesServiceRouteEntryPublishToInstance)[vs[1].(int)]
	}).(ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput)
}

type ServiceRouteEntryPublishToInstance struct {
	// Cloud service access routes need to publish the network instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// The region where the cloud service access route needs to be published.
	InstanceRegionId *string `pulumi:"instanceRegionId"`
	// The network instance type that needs to be published for cloud service access routes. The values are as follows: `VPC`, `DCGW`.
	InstanceType *string `pulumi:"instanceType"`
}

// ServiceRouteEntryPublishToInstanceInput is an input type that accepts ServiceRouteEntryPublishToInstanceArgs and ServiceRouteEntryPublishToInstanceOutput values.
// You can construct a concrete instance of `ServiceRouteEntryPublishToInstanceInput` via:
//
//	ServiceRouteEntryPublishToInstanceArgs{...}
type ServiceRouteEntryPublishToInstanceInput interface {
	pulumi.Input

	ToServiceRouteEntryPublishToInstanceOutput() ServiceRouteEntryPublishToInstanceOutput
	ToServiceRouteEntryPublishToInstanceOutputWithContext(context.Context) ServiceRouteEntryPublishToInstanceOutput
}

type ServiceRouteEntryPublishToInstanceArgs struct {
	// Cloud service access routes need to publish the network instance ID.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The region where the cloud service access route needs to be published.
	InstanceRegionId pulumi.StringPtrInput `pulumi:"instanceRegionId"`
	// The network instance type that needs to be published for cloud service access routes. The values are as follows: `VPC`, `DCGW`.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
}

func (ServiceRouteEntryPublishToInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRouteEntryPublishToInstance)(nil)).Elem()
}

func (i ServiceRouteEntryPublishToInstanceArgs) ToServiceRouteEntryPublishToInstanceOutput() ServiceRouteEntryPublishToInstanceOutput {
	return i.ToServiceRouteEntryPublishToInstanceOutputWithContext(context.Background())
}

func (i ServiceRouteEntryPublishToInstanceArgs) ToServiceRouteEntryPublishToInstanceOutputWithContext(ctx context.Context) ServiceRouteEntryPublishToInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntryPublishToInstanceOutput)
}

// ServiceRouteEntryPublishToInstanceArrayInput is an input type that accepts ServiceRouteEntryPublishToInstanceArray and ServiceRouteEntryPublishToInstanceArrayOutput values.
// You can construct a concrete instance of `ServiceRouteEntryPublishToInstanceArrayInput` via:
//
//	ServiceRouteEntryPublishToInstanceArray{ ServiceRouteEntryPublishToInstanceArgs{...} }
type ServiceRouteEntryPublishToInstanceArrayInput interface {
	pulumi.Input

	ToServiceRouteEntryPublishToInstanceArrayOutput() ServiceRouteEntryPublishToInstanceArrayOutput
	ToServiceRouteEntryPublishToInstanceArrayOutputWithContext(context.Context) ServiceRouteEntryPublishToInstanceArrayOutput
}

type ServiceRouteEntryPublishToInstanceArray []ServiceRouteEntryPublishToInstanceInput

func (ServiceRouteEntryPublishToInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRouteEntryPublishToInstance)(nil)).Elem()
}

func (i ServiceRouteEntryPublishToInstanceArray) ToServiceRouteEntryPublishToInstanceArrayOutput() ServiceRouteEntryPublishToInstanceArrayOutput {
	return i.ToServiceRouteEntryPublishToInstanceArrayOutputWithContext(context.Background())
}

func (i ServiceRouteEntryPublishToInstanceArray) ToServiceRouteEntryPublishToInstanceArrayOutputWithContext(ctx context.Context) ServiceRouteEntryPublishToInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntryPublishToInstanceArrayOutput)
}

type ServiceRouteEntryPublishToInstanceOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntryPublishToInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRouteEntryPublishToInstance)(nil)).Elem()
}

func (o ServiceRouteEntryPublishToInstanceOutput) ToServiceRouteEntryPublishToInstanceOutput() ServiceRouteEntryPublishToInstanceOutput {
	return o
}

func (o ServiceRouteEntryPublishToInstanceOutput) ToServiceRouteEntryPublishToInstanceOutputWithContext(ctx context.Context) ServiceRouteEntryPublishToInstanceOutput {
	return o
}

// Cloud service access routes need to publish the network instance ID.
func (o ServiceRouteEntryPublishToInstanceOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRouteEntryPublishToInstance) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The region where the cloud service access route needs to be published.
func (o ServiceRouteEntryPublishToInstanceOutput) InstanceRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRouteEntryPublishToInstance) *string { return v.InstanceRegionId }).(pulumi.StringPtrOutput)
}

// The network instance type that needs to be published for cloud service access routes. The values are as follows: `VPC`, `DCGW`.
func (o ServiceRouteEntryPublishToInstanceOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRouteEntryPublishToInstance) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

type ServiceRouteEntryPublishToInstanceArrayOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntryPublishToInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceRouteEntryPublishToInstance)(nil)).Elem()
}

func (o ServiceRouteEntryPublishToInstanceArrayOutput) ToServiceRouteEntryPublishToInstanceArrayOutput() ServiceRouteEntryPublishToInstanceArrayOutput {
	return o
}

func (o ServiceRouteEntryPublishToInstanceArrayOutput) ToServiceRouteEntryPublishToInstanceArrayOutputWithContext(ctx context.Context) ServiceRouteEntryPublishToInstanceArrayOutput {
	return o
}

func (o ServiceRouteEntryPublishToInstanceArrayOutput) Index(i pulumi.IntInput) ServiceRouteEntryPublishToInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceRouteEntryPublishToInstance {
		return vs[0].([]ServiceRouteEntryPublishToInstance)[vs[1].(int)]
	}).(ServiceRouteEntryPublishToInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AttachInstancesAttachInstanceInput)(nil)).Elem(), AttachInstancesAttachInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachInstancesAttachInstanceArrayInput)(nil)).Elem(), AttachInstancesAttachInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageTagInput)(nil)).Elem(), BandwidthPackageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageTagArrayInput)(nil)).Elem(), BandwidthPackageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageArrayInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageTagInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesBandwidthPackageTagArrayInput)(nil)).Elem(), BandwidthPackagesBandwidthPackageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesTagInput)(nil)).Elem(), BandwidthPackagesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackagesTagArrayInput)(nil)).Elem(), BandwidthPackagesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CenTagInput)(nil)).Elem(), CenTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CenTagArrayInput)(nil)).Elem(), CenTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CensCenInput)(nil)).Elem(), CensCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CensCenArrayInput)(nil)).Elem(), CensCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CensCenTagInput)(nil)).Elem(), CensCenTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CensCenTagArrayInput)(nil)).Elem(), CensCenTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CensTagInput)(nil)).Elem(), CensTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CensTagArrayInput)(nil)).Elem(), CensTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterRegionBandwidthsInterRegionBandwidthInput)(nil)).Elem(), InterRegionBandwidthsInterRegionBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InterRegionBandwidthsInterRegionBandwidthArrayInput)(nil)).Elem(), InterRegionBandwidthsInterRegionBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesCenRouteEntryInput)(nil)).Elem(), RouteEntriesCenRouteEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesCenRouteEntryArrayInput)(nil)).Elem(), RouteEntriesCenRouteEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntriesServiceRouteEntryInput)(nil)).Elem(), ServiceRouteEntriesServiceRouteEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntriesServiceRouteEntryArrayInput)(nil)).Elem(), ServiceRouteEntriesServiceRouteEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntriesServiceRouteEntryPublishToInstanceInput)(nil)).Elem(), ServiceRouteEntriesServiceRouteEntryPublishToInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayInput)(nil)).Elem(), ServiceRouteEntriesServiceRouteEntryPublishToInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntryPublishToInstanceInput)(nil)).Elem(), ServiceRouteEntryPublishToInstanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntryPublishToInstanceArrayInput)(nil)).Elem(), ServiceRouteEntryPublishToInstanceArray{})
	pulumi.RegisterOutputType(AttachInstancesAttachInstanceOutput{})
	pulumi.RegisterOutputType(AttachInstancesAttachInstanceArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackageTagOutput{})
	pulumi.RegisterOutputType(BandwidthPackageTagArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageTagOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesBandwidthPackageTagArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesTagOutput{})
	pulumi.RegisterOutputType(BandwidthPackagesTagArrayOutput{})
	pulumi.RegisterOutputType(CenTagOutput{})
	pulumi.RegisterOutputType(CenTagArrayOutput{})
	pulumi.RegisterOutputType(CensCenOutput{})
	pulumi.RegisterOutputType(CensCenArrayOutput{})
	pulumi.RegisterOutputType(CensCenTagOutput{})
	pulumi.RegisterOutputType(CensCenTagArrayOutput{})
	pulumi.RegisterOutputType(CensTagOutput{})
	pulumi.RegisterOutputType(CensTagArrayOutput{})
	pulumi.RegisterOutputType(InterRegionBandwidthsInterRegionBandwidthOutput{})
	pulumi.RegisterOutputType(InterRegionBandwidthsInterRegionBandwidthArrayOutput{})
	pulumi.RegisterOutputType(RouteEntriesCenRouteEntryOutput{})
	pulumi.RegisterOutputType(RouteEntriesCenRouteEntryArrayOutput{})
	pulumi.RegisterOutputType(ServiceRouteEntriesServiceRouteEntryOutput{})
	pulumi.RegisterOutputType(ServiceRouteEntriesServiceRouteEntryArrayOutput{})
	pulumi.RegisterOutputType(ServiceRouteEntriesServiceRouteEntryPublishToInstanceOutput{})
	pulumi.RegisterOutputType(ServiceRouteEntriesServiceRouteEntryPublishToInstanceArrayOutput{})
	pulumi.RegisterOutputType(ServiceRouteEntryPublishToInstanceOutput{})
	pulumi.RegisterOutputType(ServiceRouteEntryPublishToInstanceArrayOutput{})
}
