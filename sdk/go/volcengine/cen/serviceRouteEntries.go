// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of cen service route entries
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cen"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cen.ServiceRouteEntries(ctx, &cen.ServiceRouteEntriesArgs{
//				CenId: pulumi.StringRef("cen-12ar8uclj68sg17q7y20v9gil"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func ServiceRouteEntries(ctx *pulumi.Context, args *ServiceRouteEntriesArgs, opts ...pulumi.InvokeOption) (*ServiceRouteEntriesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv ServiceRouteEntriesResult
	err := ctx.Invoke("volcengine:cen/serviceRouteEntries:ServiceRouteEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ServiceRouteEntries.
type ServiceRouteEntriesArgs struct {
	// A cen ID.
	CenId *string `pulumi:"cenId"`
	// A destination cidr block.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// A service region id.
	ServiceRegionId *string `pulumi:"serviceRegionId"`
	// A service VPC id.
	ServiceVpcId *string `pulumi:"serviceVpcId"`
}

// A collection of values returned by ServiceRouteEntries.
type ServiceRouteEntriesResult struct {
	// The cen ID of the cen service route entry.
	CenId *string `pulumi:"cenId"`
	// The destination cidr block of the cen service route entry.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The service region id of the cen service route entry.
	ServiceRegionId *string `pulumi:"serviceRegionId"`
	// The collection of cen service route entry query.
	ServiceRouteEntries []ServiceRouteEntriesServiceRouteEntry `pulumi:"serviceRouteEntries"`
	// The service VPC id of the cen service route entry.
	ServiceVpcId *string `pulumi:"serviceVpcId"`
	// The total count of cen service route entry.
	TotalCount int `pulumi:"totalCount"`
}

func ServiceRouteEntriesOutput(ctx *pulumi.Context, args ServiceRouteEntriesOutputArgs, opts ...pulumi.InvokeOption) ServiceRouteEntriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ServiceRouteEntriesResult, error) {
			args := v.(ServiceRouteEntriesArgs)
			r, err := ServiceRouteEntries(ctx, &args, opts...)
			var s ServiceRouteEntriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ServiceRouteEntriesResultOutput)
}

// A collection of arguments for invoking ServiceRouteEntries.
type ServiceRouteEntriesOutputArgs struct {
	// A cen ID.
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// A destination cidr block.
	DestinationCidrBlock pulumi.StringPtrInput `pulumi:"destinationCidrBlock"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// A service region id.
	ServiceRegionId pulumi.StringPtrInput `pulumi:"serviceRegionId"`
	// A service VPC id.
	ServiceVpcId pulumi.StringPtrInput `pulumi:"serviceVpcId"`
}

func (ServiceRouteEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRouteEntriesArgs)(nil)).Elem()
}

// A collection of values returned by ServiceRouteEntries.
type ServiceRouteEntriesResultOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceRouteEntriesResult)(nil)).Elem()
}

func (o ServiceRouteEntriesResultOutput) ToServiceRouteEntriesResultOutput() ServiceRouteEntriesResultOutput {
	return o
}

func (o ServiceRouteEntriesResultOutput) ToServiceRouteEntriesResultOutputWithContext(ctx context.Context) ServiceRouteEntriesResultOutput {
	return o
}

// The cen ID of the cen service route entry.
func (o ServiceRouteEntriesResultOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRouteEntriesResult) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// The destination cidr block of the cen service route entry.
func (o ServiceRouteEntriesResultOutput) DestinationCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRouteEntriesResult) *string { return v.DestinationCidrBlock }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ServiceRouteEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceRouteEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ServiceRouteEntriesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRouteEntriesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The service region id of the cen service route entry.
func (o ServiceRouteEntriesResultOutput) ServiceRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRouteEntriesResult) *string { return v.ServiceRegionId }).(pulumi.StringPtrOutput)
}

// The collection of cen service route entry query.
func (o ServiceRouteEntriesResultOutput) ServiceRouteEntries() ServiceRouteEntriesServiceRouteEntryArrayOutput {
	return o.ApplyT(func(v ServiceRouteEntriesResult) []ServiceRouteEntriesServiceRouteEntry { return v.ServiceRouteEntries }).(ServiceRouteEntriesServiceRouteEntryArrayOutput)
}

// The service VPC id of the cen service route entry.
func (o ServiceRouteEntriesResultOutput) ServiceVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceRouteEntriesResult) *string { return v.ServiceVpcId }).(pulumi.StringPtrOutput)
}

// The total count of cen service route entry.
func (o ServiceRouteEntriesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceRouteEntriesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceRouteEntriesResultOutput{})
}
