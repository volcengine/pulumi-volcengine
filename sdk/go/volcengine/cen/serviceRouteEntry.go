// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage cen service route entry
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cen"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cen.NewServiceRouteEntry(ctx, "foo", &cen.ServiceRouteEntryArgs{
//				CenId:                pulumi.String("cen-12ar8uclj68sg17q7y20v9gil"),
//				Description:          pulumi.String("test-tf"),
//				DestinationCidrBlock: pulumi.String("100.64.0.0/11"),
//				PublishMode:          pulumi.String("Custom"),
//				PublishToInstances: cen.ServiceRouteEntryPublishToInstanceArray{
//					&cen.ServiceRouteEntryPublishToInstanceArgs{
//						InstanceId:       pulumi.String("vpc-2fepz36a5ra4g59gp67w197xo"),
//						InstanceRegionId: pulumi.String("cn-beijing"),
//						InstanceType:     pulumi.String("VPC"),
//					},
//					&cen.ServiceRouteEntryPublishToInstanceArgs{
//						InstanceId:       pulumi.String("vpc-im67wjcikxkw8gbssx8ufpj8"),
//						InstanceRegionId: pulumi.String("cn-beijing"),
//						InstanceType:     pulumi.String("VPC"),
//					},
//				},
//				ServiceRegionId: pulumi.String("cn-beijing"),
//				ServiceVpcId:    pulumi.String("vpc-im67wjcikxkw8gbssx8ufpj8"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cen.NewServiceRouteEntry(ctx, "foo1", &cen.ServiceRouteEntryArgs{
//				CenId:                pulumi.String("cen-12ar8uclj68sg17q7y20v9gil"),
//				Description:          pulumi.String("test-tf"),
//				DestinationCidrBlock: pulumi.String("100.64.0.0/10"),
//				PublishMode:          pulumi.String("Custom"),
//				PublishToInstances: cen.ServiceRouteEntryPublishToInstanceArray{
//					&cen.ServiceRouteEntryPublishToInstanceArgs{
//						InstanceId:       pulumi.String("vpc-2fepz36a5ra4g59gp67w197xo"),
//						InstanceRegionId: pulumi.String("cn-beijing"),
//						InstanceType:     pulumi.String("VPC"),
//					},
//					&cen.ServiceRouteEntryPublishToInstanceArgs{
//						InstanceId:       pulumi.String("vpc-im67wjcikxkw8gbssx8ufpj8"),
//						InstanceRegionId: pulumi.String("cn-beijing"),
//						InstanceType:     pulumi.String("VPC"),
//					},
//				},
//				ServiceRegionId: pulumi.String("cn-beijing"),
//				ServiceVpcId:    pulumi.String("vpc-im67wjcikxkw8gbssx8ufpj8"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cen.NewServiceRouteEntry(ctx, "foo2", &cen.ServiceRouteEntryArgs{
//				CenId:                pulumi.String("cen-12ar8uclj68sg17q7y20v9gil"),
//				Description:          pulumi.String("test-tf"),
//				DestinationCidrBlock: pulumi.String("100.64.0.0/12"),
//				PublishMode:          pulumi.String("Custom"),
//				PublishToInstances: cen.ServiceRouteEntryPublishToInstanceArray{
//					&cen.ServiceRouteEntryPublishToInstanceArgs{
//						InstanceId:       pulumi.String("vpc-2fepz36a5ra4g59gp67w197xo"),
//						InstanceRegionId: pulumi.String("cn-beijing"),
//						InstanceType:     pulumi.String("VPC"),
//					},
//					&cen.ServiceRouteEntryPublishToInstanceArgs{
//						InstanceId:       pulumi.String("vpc-im67wjcikxkw8gbssx8ufpj8"),
//						InstanceRegionId: pulumi.String("cn-beijing"),
//						InstanceType:     pulumi.String("VPC"),
//					},
//				},
//				ServiceRegionId: pulumi.String("cn-beijing"),
//				ServiceVpcId:    pulumi.String("vpc-im67wjcikxkw8gbssx8ufpj8"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CenServiceRouteEntry can be imported using the CenId:DestinationCidrBlock:ServiceRegionId:ServiceVpcId, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:cen/serviceRouteEntry:ServiceRouteEntry default cen-2nim00ybaylts7trquyzt****:100.XX.XX.0/24:cn-beijing:vpc-3rlkeggyn6tc010exd32q****
//
// ```
type ServiceRouteEntry struct {
	pulumi.CustomResourceState

	// The cen ID of the cen service route entry.
	CenId pulumi.StringOutput `pulumi:"cenId"`
	// The create time of the cen service route entry.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The description of the cen service route entry.
	Description pulumi.StringOutput `pulumi:"description"`
	// The destination cidr block of the cen service route entry.
	DestinationCidrBlock pulumi.StringOutput `pulumi:"destinationCidrBlock"`
	// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
	PublishMode pulumi.StringPtrOutput `pulumi:"publishMode"`
	// The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
	PublishToInstances ServiceRouteEntryPublishToInstanceArrayOutput `pulumi:"publishToInstances"`
	// The service region id of the cen service route entry.
	ServiceRegionId pulumi.StringOutput `pulumi:"serviceRegionId"`
	// The service VPC id of the cen service route entry.
	ServiceVpcId pulumi.StringOutput `pulumi:"serviceVpcId"`
	// The status of the cen service route entry.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewServiceRouteEntry registers a new resource with the given unique name, arguments, and options.
func NewServiceRouteEntry(ctx *pulumi.Context,
	name string, args *ServiceRouteEntryArgs, opts ...pulumi.ResourceOption) (*ServiceRouteEntry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CenId == nil {
		return nil, errors.New("invalid value for required argument 'CenId'")
	}
	if args.DestinationCidrBlock == nil {
		return nil, errors.New("invalid value for required argument 'DestinationCidrBlock'")
	}
	if args.ServiceRegionId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRegionId'")
	}
	if args.ServiceVpcId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceVpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ServiceRouteEntry
	err := ctx.RegisterResource("volcengine:cen/serviceRouteEntry:ServiceRouteEntry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceRouteEntry gets an existing ServiceRouteEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceRouteEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceRouteEntryState, opts ...pulumi.ResourceOption) (*ServiceRouteEntry, error) {
	var resource ServiceRouteEntry
	err := ctx.ReadResource("volcengine:cen/serviceRouteEntry:ServiceRouteEntry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceRouteEntry resources.
type serviceRouteEntryState struct {
	// The cen ID of the cen service route entry.
	CenId *string `pulumi:"cenId"`
	// The create time of the cen service route entry.
	CreationTime *string `pulumi:"creationTime"`
	// The description of the cen service route entry.
	Description *string `pulumi:"description"`
	// The destination cidr block of the cen service route entry.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
	PublishMode *string `pulumi:"publishMode"`
	// The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
	PublishToInstances []ServiceRouteEntryPublishToInstance `pulumi:"publishToInstances"`
	// The service region id of the cen service route entry.
	ServiceRegionId *string `pulumi:"serviceRegionId"`
	// The service VPC id of the cen service route entry.
	ServiceVpcId *string `pulumi:"serviceVpcId"`
	// The status of the cen service route entry.
	Status *string `pulumi:"status"`
}

type ServiceRouteEntryState struct {
	// The cen ID of the cen service route entry.
	CenId pulumi.StringPtrInput
	// The create time of the cen service route entry.
	CreationTime pulumi.StringPtrInput
	// The description of the cen service route entry.
	Description pulumi.StringPtrInput
	// The destination cidr block of the cen service route entry.
	DestinationCidrBlock pulumi.StringPtrInput
	// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
	PublishMode pulumi.StringPtrInput
	// The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
	PublishToInstances ServiceRouteEntryPublishToInstanceArrayInput
	// The service region id of the cen service route entry.
	ServiceRegionId pulumi.StringPtrInput
	// The service VPC id of the cen service route entry.
	ServiceVpcId pulumi.StringPtrInput
	// The status of the cen service route entry.
	Status pulumi.StringPtrInput
}

func (ServiceRouteEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceRouteEntryState)(nil)).Elem()
}

type serviceRouteEntryArgs struct {
	// The cen ID of the cen service route entry.
	CenId string `pulumi:"cenId"`
	// The description of the cen service route entry.
	Description *string `pulumi:"description"`
	// The destination cidr block of the cen service route entry.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
	PublishMode *string `pulumi:"publishMode"`
	// The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
	PublishToInstances []ServiceRouteEntryPublishToInstance `pulumi:"publishToInstances"`
	// The service region id of the cen service route entry.
	ServiceRegionId string `pulumi:"serviceRegionId"`
	// The service VPC id of the cen service route entry.
	ServiceVpcId string `pulumi:"serviceVpcId"`
}

// The set of arguments for constructing a ServiceRouteEntry resource.
type ServiceRouteEntryArgs struct {
	// The cen ID of the cen service route entry.
	CenId pulumi.StringInput
	// The description of the cen service route entry.
	Description pulumi.StringPtrInput
	// The destination cidr block of the cen service route entry.
	DestinationCidrBlock pulumi.StringInput
	// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
	PublishMode pulumi.StringPtrInput
	// The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
	PublishToInstances ServiceRouteEntryPublishToInstanceArrayInput
	// The service region id of the cen service route entry.
	ServiceRegionId pulumi.StringInput
	// The service VPC id of the cen service route entry.
	ServiceVpcId pulumi.StringInput
}

func (ServiceRouteEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceRouteEntryArgs)(nil)).Elem()
}

type ServiceRouteEntryInput interface {
	pulumi.Input

	ToServiceRouteEntryOutput() ServiceRouteEntryOutput
	ToServiceRouteEntryOutputWithContext(ctx context.Context) ServiceRouteEntryOutput
}

func (*ServiceRouteEntry) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRouteEntry)(nil)).Elem()
}

func (i *ServiceRouteEntry) ToServiceRouteEntryOutput() ServiceRouteEntryOutput {
	return i.ToServiceRouteEntryOutputWithContext(context.Background())
}

func (i *ServiceRouteEntry) ToServiceRouteEntryOutputWithContext(ctx context.Context) ServiceRouteEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntryOutput)
}

// ServiceRouteEntryArrayInput is an input type that accepts ServiceRouteEntryArray and ServiceRouteEntryArrayOutput values.
// You can construct a concrete instance of `ServiceRouteEntryArrayInput` via:
//
//	ServiceRouteEntryArray{ ServiceRouteEntryArgs{...} }
type ServiceRouteEntryArrayInput interface {
	pulumi.Input

	ToServiceRouteEntryArrayOutput() ServiceRouteEntryArrayOutput
	ToServiceRouteEntryArrayOutputWithContext(context.Context) ServiceRouteEntryArrayOutput
}

type ServiceRouteEntryArray []ServiceRouteEntryInput

func (ServiceRouteEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceRouteEntry)(nil)).Elem()
}

func (i ServiceRouteEntryArray) ToServiceRouteEntryArrayOutput() ServiceRouteEntryArrayOutput {
	return i.ToServiceRouteEntryArrayOutputWithContext(context.Background())
}

func (i ServiceRouteEntryArray) ToServiceRouteEntryArrayOutputWithContext(ctx context.Context) ServiceRouteEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntryArrayOutput)
}

// ServiceRouteEntryMapInput is an input type that accepts ServiceRouteEntryMap and ServiceRouteEntryMapOutput values.
// You can construct a concrete instance of `ServiceRouteEntryMapInput` via:
//
//	ServiceRouteEntryMap{ "key": ServiceRouteEntryArgs{...} }
type ServiceRouteEntryMapInput interface {
	pulumi.Input

	ToServiceRouteEntryMapOutput() ServiceRouteEntryMapOutput
	ToServiceRouteEntryMapOutputWithContext(context.Context) ServiceRouteEntryMapOutput
}

type ServiceRouteEntryMap map[string]ServiceRouteEntryInput

func (ServiceRouteEntryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceRouteEntry)(nil)).Elem()
}

func (i ServiceRouteEntryMap) ToServiceRouteEntryMapOutput() ServiceRouteEntryMapOutput {
	return i.ToServiceRouteEntryMapOutputWithContext(context.Background())
}

func (i ServiceRouteEntryMap) ToServiceRouteEntryMapOutputWithContext(ctx context.Context) ServiceRouteEntryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceRouteEntryMapOutput)
}

type ServiceRouteEntryOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceRouteEntry)(nil)).Elem()
}

func (o ServiceRouteEntryOutput) ToServiceRouteEntryOutput() ServiceRouteEntryOutput {
	return o
}

func (o ServiceRouteEntryOutput) ToServiceRouteEntryOutputWithContext(ctx context.Context) ServiceRouteEntryOutput {
	return o
}

// The cen ID of the cen service route entry.
func (o ServiceRouteEntryOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) pulumi.StringOutput { return v.CenId }).(pulumi.StringOutput)
}

// The create time of the cen service route entry.
func (o ServiceRouteEntryOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the cen service route entry.
func (o ServiceRouteEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The destination cidr block of the cen service route entry.
func (o ServiceRouteEntryOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) pulumi.StringOutput { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
func (o ServiceRouteEntryOutput) PublishMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) pulumi.StringPtrOutput { return v.PublishMode }).(pulumi.StringPtrOutput)
}

// The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
func (o ServiceRouteEntryOutput) PublishToInstances() ServiceRouteEntryPublishToInstanceArrayOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) ServiceRouteEntryPublishToInstanceArrayOutput { return v.PublishToInstances }).(ServiceRouteEntryPublishToInstanceArrayOutput)
}

// The service region id of the cen service route entry.
func (o ServiceRouteEntryOutput) ServiceRegionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) pulumi.StringOutput { return v.ServiceRegionId }).(pulumi.StringOutput)
}

// The service VPC id of the cen service route entry.
func (o ServiceRouteEntryOutput) ServiceVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) pulumi.StringOutput { return v.ServiceVpcId }).(pulumi.StringOutput)
}

// The status of the cen service route entry.
func (o ServiceRouteEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceRouteEntry) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type ServiceRouteEntryArrayOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceRouteEntry)(nil)).Elem()
}

func (o ServiceRouteEntryArrayOutput) ToServiceRouteEntryArrayOutput() ServiceRouteEntryArrayOutput {
	return o
}

func (o ServiceRouteEntryArrayOutput) ToServiceRouteEntryArrayOutputWithContext(ctx context.Context) ServiceRouteEntryArrayOutput {
	return o
}

func (o ServiceRouteEntryArrayOutput) Index(i pulumi.IntInput) ServiceRouteEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceRouteEntry {
		return vs[0].([]*ServiceRouteEntry)[vs[1].(int)]
	}).(ServiceRouteEntryOutput)
}

type ServiceRouteEntryMapOutput struct{ *pulumi.OutputState }

func (ServiceRouteEntryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceRouteEntry)(nil)).Elem()
}

func (o ServiceRouteEntryMapOutput) ToServiceRouteEntryMapOutput() ServiceRouteEntryMapOutput {
	return o
}

func (o ServiceRouteEntryMapOutput) ToServiceRouteEntryMapOutputWithContext(ctx context.Context) ServiceRouteEntryMapOutput {
	return o
}

func (o ServiceRouteEntryMapOutput) MapIndex(k pulumi.StringInput) ServiceRouteEntryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceRouteEntry {
		return vs[0].(map[string]*ServiceRouteEntry)[vs[1].(string)]
	}).(ServiceRouteEntryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntryInput)(nil)).Elem(), &ServiceRouteEntry{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntryArrayInput)(nil)).Elem(), ServiceRouteEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceRouteEntryMapInput)(nil)).Elem(), ServiceRouteEntryMap{})
	pulumi.RegisterOutputType(ServiceRouteEntryOutput{})
	pulumi.RegisterOutputType(ServiceRouteEntryArrayOutput{})
	pulumi.RegisterOutputType(ServiceRouteEntryMapOutput{})
}
