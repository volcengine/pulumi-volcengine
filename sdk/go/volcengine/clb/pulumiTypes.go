// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AclAclEntry struct {
	// The description of the AclEntry.
	Description *string `pulumi:"description"`
	// The content of the AclEntry.
	Entry string `pulumi:"entry"`
}

// AclAclEntryInput is an input type that accepts AclAclEntryArgs and AclAclEntryOutput values.
// You can construct a concrete instance of `AclAclEntryInput` via:
//
//	AclAclEntryArgs{...}
type AclAclEntryInput interface {
	pulumi.Input

	ToAclAclEntryOutput() AclAclEntryOutput
	ToAclAclEntryOutputWithContext(context.Context) AclAclEntryOutput
}

type AclAclEntryArgs struct {
	// The description of the AclEntry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The content of the AclEntry.
	Entry pulumi.StringInput `pulumi:"entry"`
}

func (AclAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAclEntry)(nil)).Elem()
}

func (i AclAclEntryArgs) ToAclAclEntryOutput() AclAclEntryOutput {
	return i.ToAclAclEntryOutputWithContext(context.Background())
}

func (i AclAclEntryArgs) ToAclAclEntryOutputWithContext(ctx context.Context) AclAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAclEntryOutput)
}

// AclAclEntryArrayInput is an input type that accepts AclAclEntryArray and AclAclEntryArrayOutput values.
// You can construct a concrete instance of `AclAclEntryArrayInput` via:
//
//	AclAclEntryArray{ AclAclEntryArgs{...} }
type AclAclEntryArrayInput interface {
	pulumi.Input

	ToAclAclEntryArrayOutput() AclAclEntryArrayOutput
	ToAclAclEntryArrayOutputWithContext(context.Context) AclAclEntryArrayOutput
}

type AclAclEntryArray []AclAclEntryInput

func (AclAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAclEntry)(nil)).Elem()
}

func (i AclAclEntryArray) ToAclAclEntryArrayOutput() AclAclEntryArrayOutput {
	return i.ToAclAclEntryArrayOutputWithContext(context.Background())
}

func (i AclAclEntryArray) ToAclAclEntryArrayOutputWithContext(ctx context.Context) AclAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAclEntryArrayOutput)
}

type AclAclEntryOutput struct{ *pulumi.OutputState }

func (AclAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAclEntry)(nil)).Elem()
}

func (o AclAclEntryOutput) ToAclAclEntryOutput() AclAclEntryOutput {
	return o
}

func (o AclAclEntryOutput) ToAclAclEntryOutputWithContext(ctx context.Context) AclAclEntryOutput {
	return o
}

// The description of the AclEntry.
func (o AclAclEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclAclEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The content of the AclEntry.
func (o AclAclEntryOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v AclAclEntry) string { return v.Entry }).(pulumi.StringOutput)
}

type AclAclEntryArrayOutput struct{ *pulumi.OutputState }

func (AclAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAclEntry)(nil)).Elem()
}

func (o AclAclEntryArrayOutput) ToAclAclEntryArrayOutput() AclAclEntryArrayOutput {
	return o
}

func (o AclAclEntryArrayOutput) ToAclAclEntryArrayOutputWithContext(ctx context.Context) AclAclEntryArrayOutput {
	return o
}

func (o AclAclEntryArrayOutput) Index(i pulumi.IntInput) AclAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclAclEntry {
		return vs[0].([]AclAclEntry)[vs[1].(int)]
	}).(AclAclEntryOutput)
}

type AclsAcl struct {
	// The count of acl entry.
	AclEntryCount int `pulumi:"aclEntryCount"`
	// The ID of Acl.
	AclId string `pulumi:"aclId"`
	// The name of acl.
	AclName string `pulumi:"aclName"`
	// Creation time of Acl.
	CreateTime string `pulumi:"createTime"`
	// The description of Acl.
	Description string `pulumi:"description"`
	// The ID of Acl.
	Id string `pulumi:"id"`
	// The listeners of Acl.
	Listeners []string `pulumi:"listeners"`
	// The ProjectName of Acl.
	ProjectName string `pulumi:"projectName"`
	// Update time of Acl.
	UpdateTime string `pulumi:"updateTime"`
}

// AclsAclInput is an input type that accepts AclsAclArgs and AclsAclOutput values.
// You can construct a concrete instance of `AclsAclInput` via:
//
//	AclsAclArgs{...}
type AclsAclInput interface {
	pulumi.Input

	ToAclsAclOutput() AclsAclOutput
	ToAclsAclOutputWithContext(context.Context) AclsAclOutput
}

type AclsAclArgs struct {
	// The count of acl entry.
	AclEntryCount pulumi.IntInput `pulumi:"aclEntryCount"`
	// The ID of Acl.
	AclId pulumi.StringInput `pulumi:"aclId"`
	// The name of acl.
	AclName pulumi.StringInput `pulumi:"aclName"`
	// Creation time of Acl.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of Acl.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of Acl.
	Id pulumi.StringInput `pulumi:"id"`
	// The listeners of Acl.
	Listeners pulumi.StringArrayInput `pulumi:"listeners"`
	// The ProjectName of Acl.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Update time of Acl.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (AclsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAcl)(nil)).Elem()
}

func (i AclsAclArgs) ToAclsAclOutput() AclsAclOutput {
	return i.ToAclsAclOutputWithContext(context.Background())
}

func (i AclsAclArgs) ToAclsAclOutputWithContext(ctx context.Context) AclsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclOutput)
}

// AclsAclArrayInput is an input type that accepts AclsAclArray and AclsAclArrayOutput values.
// You can construct a concrete instance of `AclsAclArrayInput` via:
//
//	AclsAclArray{ AclsAclArgs{...} }
type AclsAclArrayInput interface {
	pulumi.Input

	ToAclsAclArrayOutput() AclsAclArrayOutput
	ToAclsAclArrayOutputWithContext(context.Context) AclsAclArrayOutput
}

type AclsAclArray []AclsAclInput

func (AclsAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAcl)(nil)).Elem()
}

func (i AclsAclArray) ToAclsAclArrayOutput() AclsAclArrayOutput {
	return i.ToAclsAclArrayOutputWithContext(context.Background())
}

func (i AclsAclArray) ToAclsAclArrayOutputWithContext(ctx context.Context) AclsAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclArrayOutput)
}

type AclsAclOutput struct{ *pulumi.OutputState }

func (AclsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAcl)(nil)).Elem()
}

func (o AclsAclOutput) ToAclsAclOutput() AclsAclOutput {
	return o
}

func (o AclsAclOutput) ToAclsAclOutputWithContext(ctx context.Context) AclsAclOutput {
	return o
}

// The count of acl entry.
func (o AclsAclOutput) AclEntryCount() pulumi.IntOutput {
	return o.ApplyT(func(v AclsAcl) int { return v.AclEntryCount }).(pulumi.IntOutput)
}

// The ID of Acl.
func (o AclsAclOutput) AclId() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.AclId }).(pulumi.StringOutput)
}

// The name of acl.
func (o AclsAclOutput) AclName() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.AclName }).(pulumi.StringOutput)
}

// Creation time of Acl.
func (o AclsAclOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of Acl.
func (o AclsAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of Acl.
func (o AclsAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.Id }).(pulumi.StringOutput)
}

// The listeners of Acl.
func (o AclsAclOutput) Listeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AclsAcl) []string { return v.Listeners }).(pulumi.StringArrayOutput)
}

// The ProjectName of Acl.
func (o AclsAclOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Update time of Acl.
func (o AclsAclOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type AclsAclArrayOutput struct{ *pulumi.OutputState }

func (AclsAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAcl)(nil)).Elem()
}

func (o AclsAclArrayOutput) ToAclsAclArrayOutput() AclsAclArrayOutput {
	return o
}

func (o AclsAclArrayOutput) ToAclsAclArrayOutputWithContext(ctx context.Context) AclsAclArrayOutput {
	return o
}

func (o AclsAclArrayOutput) Index(i pulumi.IntInput) AclsAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclsAcl {
		return vs[0].([]AclsAcl)[vs[1].(int)]
	}).(AclsAclOutput)
}

type CertificateTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// CertificateTagInput is an input type that accepts CertificateTagArgs and CertificateTagOutput values.
// You can construct a concrete instance of `CertificateTagInput` via:
//
//	CertificateTagArgs{...}
type CertificateTagInput interface {
	pulumi.Input

	ToCertificateTagOutput() CertificateTagOutput
	ToCertificateTagOutputWithContext(context.Context) CertificateTagOutput
}

type CertificateTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CertificateTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTag)(nil)).Elem()
}

func (i CertificateTagArgs) ToCertificateTagOutput() CertificateTagOutput {
	return i.ToCertificateTagOutputWithContext(context.Background())
}

func (i CertificateTagArgs) ToCertificateTagOutputWithContext(ctx context.Context) CertificateTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTagOutput)
}

// CertificateTagArrayInput is an input type that accepts CertificateTagArray and CertificateTagArrayOutput values.
// You can construct a concrete instance of `CertificateTagArrayInput` via:
//
//	CertificateTagArray{ CertificateTagArgs{...} }
type CertificateTagArrayInput interface {
	pulumi.Input

	ToCertificateTagArrayOutput() CertificateTagArrayOutput
	ToCertificateTagArrayOutputWithContext(context.Context) CertificateTagArrayOutput
}

type CertificateTagArray []CertificateTagInput

func (CertificateTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTag)(nil)).Elem()
}

func (i CertificateTagArray) ToCertificateTagArrayOutput() CertificateTagArrayOutput {
	return i.ToCertificateTagArrayOutputWithContext(context.Background())
}

func (i CertificateTagArray) ToCertificateTagArrayOutputWithContext(ctx context.Context) CertificateTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateTagArrayOutput)
}

type CertificateTagOutput struct{ *pulumi.OutputState }

func (CertificateTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTag)(nil)).Elem()
}

func (o CertificateTagOutput) ToCertificateTagOutput() CertificateTagOutput {
	return o
}

func (o CertificateTagOutput) ToCertificateTagOutputWithContext(ctx context.Context) CertificateTagOutput {
	return o
}

// The Key of Tags.
func (o CertificateTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o CertificateTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateTag) string { return v.Value }).(pulumi.StringOutput)
}

type CertificateTagArrayOutput struct{ *pulumi.OutputState }

func (CertificateTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateTag)(nil)).Elem()
}

func (o CertificateTagArrayOutput) ToCertificateTagArrayOutput() CertificateTagArrayOutput {
	return o
}

func (o CertificateTagArrayOutput) ToCertificateTagArrayOutputWithContext(ctx context.Context) CertificateTagArrayOutput {
	return o
}

func (o CertificateTagArrayOutput) Index(i pulumi.IntInput) CertificateTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateTag {
		return vs[0].([]CertificateTag)[vs[1].(int)]
	}).(CertificateTagOutput)
}

type CertificatesCertificate struct {
	// The ID of the Certificate.
	CertificateId string `pulumi:"certificateId"`
	// The name of the Certificate.
	CertificateName string `pulumi:"certificateName"`
	// The create time of the Certificate.
	CreateTime string `pulumi:"createTime"`
	// The description of the Certificate.
	Description string `pulumi:"description"`
	// The domain name of the Certificate.
	DomainName string `pulumi:"domainName"`
	// The expire time of the Certificate.
	ExpiredAt string `pulumi:"expiredAt"`
	// The ID of the Certificate.
	Id string `pulumi:"id"`
	// The ID list of the Listener.
	Listeners []string `pulumi:"listeners"`
	// The ProjectName of Certificate.
	ProjectName string `pulumi:"projectName"`
	// Tags.
	Tags []CertificatesCertificateTag `pulumi:"tags"`
}

// CertificatesCertificateInput is an input type that accepts CertificatesCertificateArgs and CertificatesCertificateOutput values.
// You can construct a concrete instance of `CertificatesCertificateInput` via:
//
//	CertificatesCertificateArgs{...}
type CertificatesCertificateInput interface {
	pulumi.Input

	ToCertificatesCertificateOutput() CertificatesCertificateOutput
	ToCertificatesCertificateOutputWithContext(context.Context) CertificatesCertificateOutput
}

type CertificatesCertificateArgs struct {
	// The ID of the Certificate.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The name of the Certificate.
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// The create time of the Certificate.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the Certificate.
	Description pulumi.StringInput `pulumi:"description"`
	// The domain name of the Certificate.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The expire time of the Certificate.
	ExpiredAt pulumi.StringInput `pulumi:"expiredAt"`
	// The ID of the Certificate.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID list of the Listener.
	Listeners pulumi.StringArrayInput `pulumi:"listeners"`
	// The ProjectName of Certificate.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Tags.
	Tags CertificatesCertificateTagArrayInput `pulumi:"tags"`
}

func (CertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesCertificate)(nil)).Elem()
}

func (i CertificatesCertificateArgs) ToCertificatesCertificateOutput() CertificatesCertificateOutput {
	return i.ToCertificatesCertificateOutputWithContext(context.Background())
}

func (i CertificatesCertificateArgs) ToCertificatesCertificateOutputWithContext(ctx context.Context) CertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesCertificateOutput)
}

// CertificatesCertificateArrayInput is an input type that accepts CertificatesCertificateArray and CertificatesCertificateArrayOutput values.
// You can construct a concrete instance of `CertificatesCertificateArrayInput` via:
//
//	CertificatesCertificateArray{ CertificatesCertificateArgs{...} }
type CertificatesCertificateArrayInput interface {
	pulumi.Input

	ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput
	ToCertificatesCertificateArrayOutputWithContext(context.Context) CertificatesCertificateArrayOutput
}

type CertificatesCertificateArray []CertificatesCertificateInput

func (CertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesCertificate)(nil)).Elem()
}

func (i CertificatesCertificateArray) ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput {
	return i.ToCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i CertificatesCertificateArray) ToCertificatesCertificateArrayOutputWithContext(ctx context.Context) CertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesCertificateArrayOutput)
}

type CertificatesCertificateOutput struct{ *pulumi.OutputState }

func (CertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesCertificate)(nil)).Elem()
}

func (o CertificatesCertificateOutput) ToCertificatesCertificateOutput() CertificatesCertificateOutput {
	return o
}

func (o CertificatesCertificateOutput) ToCertificatesCertificateOutputWithContext(ctx context.Context) CertificatesCertificateOutput {
	return o
}

// The ID of the Certificate.
func (o CertificatesCertificateOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The name of the Certificate.
func (o CertificatesCertificateOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.CertificateName }).(pulumi.StringOutput)
}

// The create time of the Certificate.
func (o CertificatesCertificateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the Certificate.
func (o CertificatesCertificateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.Description }).(pulumi.StringOutput)
}

// The domain name of the Certificate.
func (o CertificatesCertificateOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.DomainName }).(pulumi.StringOutput)
}

// The expire time of the Certificate.
func (o CertificatesCertificateOutput) ExpiredAt() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.ExpiredAt }).(pulumi.StringOutput)
}

// The ID of the Certificate.
func (o CertificatesCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The ID list of the Listener.
func (o CertificatesCertificateOutput) Listeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificatesCertificate) []string { return v.Listeners }).(pulumi.StringArrayOutput)
}

// The ProjectName of Certificate.
func (o CertificatesCertificateOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Tags.
func (o CertificatesCertificateOutput) Tags() CertificatesCertificateTagArrayOutput {
	return o.ApplyT(func(v CertificatesCertificate) []CertificatesCertificateTag { return v.Tags }).(CertificatesCertificateTagArrayOutput)
}

type CertificatesCertificateArrayOutput struct{ *pulumi.OutputState }

func (CertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesCertificate)(nil)).Elem()
}

func (o CertificatesCertificateArrayOutput) ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput {
	return o
}

func (o CertificatesCertificateArrayOutput) ToCertificatesCertificateArrayOutputWithContext(ctx context.Context) CertificatesCertificateArrayOutput {
	return o
}

func (o CertificatesCertificateArrayOutput) Index(i pulumi.IntInput) CertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificatesCertificate {
		return vs[0].([]CertificatesCertificate)[vs[1].(int)]
	}).(CertificatesCertificateOutput)
}

type CertificatesCertificateTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// CertificatesCertificateTagInput is an input type that accepts CertificatesCertificateTagArgs and CertificatesCertificateTagOutput values.
// You can construct a concrete instance of `CertificatesCertificateTagInput` via:
//
//	CertificatesCertificateTagArgs{...}
type CertificatesCertificateTagInput interface {
	pulumi.Input

	ToCertificatesCertificateTagOutput() CertificatesCertificateTagOutput
	ToCertificatesCertificateTagOutputWithContext(context.Context) CertificatesCertificateTagOutput
}

type CertificatesCertificateTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CertificatesCertificateTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesCertificateTag)(nil)).Elem()
}

func (i CertificatesCertificateTagArgs) ToCertificatesCertificateTagOutput() CertificatesCertificateTagOutput {
	return i.ToCertificatesCertificateTagOutputWithContext(context.Background())
}

func (i CertificatesCertificateTagArgs) ToCertificatesCertificateTagOutputWithContext(ctx context.Context) CertificatesCertificateTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesCertificateTagOutput)
}

// CertificatesCertificateTagArrayInput is an input type that accepts CertificatesCertificateTagArray and CertificatesCertificateTagArrayOutput values.
// You can construct a concrete instance of `CertificatesCertificateTagArrayInput` via:
//
//	CertificatesCertificateTagArray{ CertificatesCertificateTagArgs{...} }
type CertificatesCertificateTagArrayInput interface {
	pulumi.Input

	ToCertificatesCertificateTagArrayOutput() CertificatesCertificateTagArrayOutput
	ToCertificatesCertificateTagArrayOutputWithContext(context.Context) CertificatesCertificateTagArrayOutput
}

type CertificatesCertificateTagArray []CertificatesCertificateTagInput

func (CertificatesCertificateTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesCertificateTag)(nil)).Elem()
}

func (i CertificatesCertificateTagArray) ToCertificatesCertificateTagArrayOutput() CertificatesCertificateTagArrayOutput {
	return i.ToCertificatesCertificateTagArrayOutputWithContext(context.Background())
}

func (i CertificatesCertificateTagArray) ToCertificatesCertificateTagArrayOutputWithContext(ctx context.Context) CertificatesCertificateTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesCertificateTagArrayOutput)
}

type CertificatesCertificateTagOutput struct{ *pulumi.OutputState }

func (CertificatesCertificateTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesCertificateTag)(nil)).Elem()
}

func (o CertificatesCertificateTagOutput) ToCertificatesCertificateTagOutput() CertificatesCertificateTagOutput {
	return o
}

func (o CertificatesCertificateTagOutput) ToCertificatesCertificateTagOutputWithContext(ctx context.Context) CertificatesCertificateTagOutput {
	return o
}

// The Key of Tags.
func (o CertificatesCertificateTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificateTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o CertificatesCertificateTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificateTag) string { return v.Value }).(pulumi.StringOutput)
}

type CertificatesCertificateTagArrayOutput struct{ *pulumi.OutputState }

func (CertificatesCertificateTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesCertificateTag)(nil)).Elem()
}

func (o CertificatesCertificateTagArrayOutput) ToCertificatesCertificateTagArrayOutput() CertificatesCertificateTagArrayOutput {
	return o
}

func (o CertificatesCertificateTagArrayOutput) ToCertificatesCertificateTagArrayOutputWithContext(ctx context.Context) CertificatesCertificateTagArrayOutput {
	return o
}

func (o CertificatesCertificateTagArrayOutput) Index(i pulumi.IntInput) CertificatesCertificateTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificatesCertificateTag {
		return vs[0].([]CertificatesCertificateTag)[vs[1].(int)]
	}).(CertificatesCertificateTagOutput)
}

type CertificatesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// CertificatesTagInput is an input type that accepts CertificatesTagArgs and CertificatesTagOutput values.
// You can construct a concrete instance of `CertificatesTagInput` via:
//
//	CertificatesTagArgs{...}
type CertificatesTagInput interface {
	pulumi.Input

	ToCertificatesTagOutput() CertificatesTagOutput
	ToCertificatesTagOutputWithContext(context.Context) CertificatesTagOutput
}

type CertificatesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CertificatesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesTag)(nil)).Elem()
}

func (i CertificatesTagArgs) ToCertificatesTagOutput() CertificatesTagOutput {
	return i.ToCertificatesTagOutputWithContext(context.Background())
}

func (i CertificatesTagArgs) ToCertificatesTagOutputWithContext(ctx context.Context) CertificatesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesTagOutput)
}

// CertificatesTagArrayInput is an input type that accepts CertificatesTagArray and CertificatesTagArrayOutput values.
// You can construct a concrete instance of `CertificatesTagArrayInput` via:
//
//	CertificatesTagArray{ CertificatesTagArgs{...} }
type CertificatesTagArrayInput interface {
	pulumi.Input

	ToCertificatesTagArrayOutput() CertificatesTagArrayOutput
	ToCertificatesTagArrayOutputWithContext(context.Context) CertificatesTagArrayOutput
}

type CertificatesTagArray []CertificatesTagInput

func (CertificatesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesTag)(nil)).Elem()
}

func (i CertificatesTagArray) ToCertificatesTagArrayOutput() CertificatesTagArrayOutput {
	return i.ToCertificatesTagArrayOutputWithContext(context.Background())
}

func (i CertificatesTagArray) ToCertificatesTagArrayOutputWithContext(ctx context.Context) CertificatesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesTagArrayOutput)
}

type CertificatesTagOutput struct{ *pulumi.OutputState }

func (CertificatesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesTag)(nil)).Elem()
}

func (o CertificatesTagOutput) ToCertificatesTagOutput() CertificatesTagOutput {
	return o
}

func (o CertificatesTagOutput) ToCertificatesTagOutputWithContext(ctx context.Context) CertificatesTagOutput {
	return o
}

// The Key of Tags.
func (o CertificatesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o CertificatesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesTag) string { return v.Value }).(pulumi.StringOutput)
}

type CertificatesTagArrayOutput struct{ *pulumi.OutputState }

func (CertificatesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesTag)(nil)).Elem()
}

func (o CertificatesTagArrayOutput) ToCertificatesTagArrayOutput() CertificatesTagArrayOutput {
	return o
}

func (o CertificatesTagArrayOutput) ToCertificatesTagArrayOutputWithContext(ctx context.Context) CertificatesTagArrayOutput {
	return o
}

func (o CertificatesTagArrayOutput) Index(i pulumi.IntInput) CertificatesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificatesTag {
		return vs[0].([]CertificatesTag)[vs[1].(int)]
	}).(CertificatesTagOutput)
}

type ClbEipBillingConfig struct {
	// The peek bandwidth of the EIP which automatically assigned to CLB.
	Bandwidth *int `pulumi:"bandwidth"`
	// The billing type of the EIP which automatically assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.When creating a `PrePaid` public CLB, this field must be specified as `PrePaid` simultaneously.When the LoadBalancerBillingType changes from `PostPaid` to `PrePaid`, please manually modify the value of this field to `PrePaid` simultaneously.
	EipBillingType string `pulumi:"eipBillingType"`
	// The ISP of the EIP which automatically associated to CLB, the value can be `BGP` or `ChinaMobile` or `ChinaUnicom` or `ChinaTelecom` or `SingleLine_BGP` or `Static_BGP` or `Fusion_BGP`.
	Isp string `pulumi:"isp"`
}

// ClbEipBillingConfigInput is an input type that accepts ClbEipBillingConfigArgs and ClbEipBillingConfigOutput values.
// You can construct a concrete instance of `ClbEipBillingConfigInput` via:
//
//	ClbEipBillingConfigArgs{...}
type ClbEipBillingConfigInput interface {
	pulumi.Input

	ToClbEipBillingConfigOutput() ClbEipBillingConfigOutput
	ToClbEipBillingConfigOutputWithContext(context.Context) ClbEipBillingConfigOutput
}

type ClbEipBillingConfigArgs struct {
	// The peek bandwidth of the EIP which automatically assigned to CLB.
	Bandwidth pulumi.IntPtrInput `pulumi:"bandwidth"`
	// The billing type of the EIP which automatically assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.When creating a `PrePaid` public CLB, this field must be specified as `PrePaid` simultaneously.When the LoadBalancerBillingType changes from `PostPaid` to `PrePaid`, please manually modify the value of this field to `PrePaid` simultaneously.
	EipBillingType pulumi.StringInput `pulumi:"eipBillingType"`
	// The ISP of the EIP which automatically associated to CLB, the value can be `BGP` or `ChinaMobile` or `ChinaUnicom` or `ChinaTelecom` or `SingleLine_BGP` or `Static_BGP` or `Fusion_BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (ClbEipBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbEipBillingConfig)(nil)).Elem()
}

func (i ClbEipBillingConfigArgs) ToClbEipBillingConfigOutput() ClbEipBillingConfigOutput {
	return i.ToClbEipBillingConfigOutputWithContext(context.Background())
}

func (i ClbEipBillingConfigArgs) ToClbEipBillingConfigOutputWithContext(ctx context.Context) ClbEipBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbEipBillingConfigOutput)
}

func (i ClbEipBillingConfigArgs) ToClbEipBillingConfigPtrOutput() ClbEipBillingConfigPtrOutput {
	return i.ToClbEipBillingConfigPtrOutputWithContext(context.Background())
}

func (i ClbEipBillingConfigArgs) ToClbEipBillingConfigPtrOutputWithContext(ctx context.Context) ClbEipBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbEipBillingConfigOutput).ToClbEipBillingConfigPtrOutputWithContext(ctx)
}

// ClbEipBillingConfigPtrInput is an input type that accepts ClbEipBillingConfigArgs, ClbEipBillingConfigPtr and ClbEipBillingConfigPtrOutput values.
// You can construct a concrete instance of `ClbEipBillingConfigPtrInput` via:
//
//	        ClbEipBillingConfigArgs{...}
//
//	or:
//
//	        nil
type ClbEipBillingConfigPtrInput interface {
	pulumi.Input

	ToClbEipBillingConfigPtrOutput() ClbEipBillingConfigPtrOutput
	ToClbEipBillingConfigPtrOutputWithContext(context.Context) ClbEipBillingConfigPtrOutput
}

type clbEipBillingConfigPtrType ClbEipBillingConfigArgs

func ClbEipBillingConfigPtr(v *ClbEipBillingConfigArgs) ClbEipBillingConfigPtrInput {
	return (*clbEipBillingConfigPtrType)(v)
}

func (*clbEipBillingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClbEipBillingConfig)(nil)).Elem()
}

func (i *clbEipBillingConfigPtrType) ToClbEipBillingConfigPtrOutput() ClbEipBillingConfigPtrOutput {
	return i.ToClbEipBillingConfigPtrOutputWithContext(context.Background())
}

func (i *clbEipBillingConfigPtrType) ToClbEipBillingConfigPtrOutputWithContext(ctx context.Context) ClbEipBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbEipBillingConfigPtrOutput)
}

type ClbEipBillingConfigOutput struct{ *pulumi.OutputState }

func (ClbEipBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbEipBillingConfig)(nil)).Elem()
}

func (o ClbEipBillingConfigOutput) ToClbEipBillingConfigOutput() ClbEipBillingConfigOutput {
	return o
}

func (o ClbEipBillingConfigOutput) ToClbEipBillingConfigOutputWithContext(ctx context.Context) ClbEipBillingConfigOutput {
	return o
}

func (o ClbEipBillingConfigOutput) ToClbEipBillingConfigPtrOutput() ClbEipBillingConfigPtrOutput {
	return o.ToClbEipBillingConfigPtrOutputWithContext(context.Background())
}

func (o ClbEipBillingConfigOutput) ToClbEipBillingConfigPtrOutputWithContext(ctx context.Context) ClbEipBillingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClbEipBillingConfig) *ClbEipBillingConfig {
		return &v
	}).(ClbEipBillingConfigPtrOutput)
}

// The peek bandwidth of the EIP which automatically assigned to CLB.
func (o ClbEipBillingConfigOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClbEipBillingConfig) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// The billing type of the EIP which automatically assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.When creating a `PrePaid` public CLB, this field must be specified as `PrePaid` simultaneously.When the LoadBalancerBillingType changes from `PostPaid` to `PrePaid`, please manually modify the value of this field to `PrePaid` simultaneously.
func (o ClbEipBillingConfigOutput) EipBillingType() pulumi.StringOutput {
	return o.ApplyT(func(v ClbEipBillingConfig) string { return v.EipBillingType }).(pulumi.StringOutput)
}

// The ISP of the EIP which automatically associated to CLB, the value can be `BGP` or `ChinaMobile` or `ChinaUnicom` or `ChinaTelecom` or `SingleLine_BGP` or `Static_BGP` or `Fusion_BGP`.
func (o ClbEipBillingConfigOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v ClbEipBillingConfig) string { return v.Isp }).(pulumi.StringOutput)
}

type ClbEipBillingConfigPtrOutput struct{ *pulumi.OutputState }

func (ClbEipBillingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClbEipBillingConfig)(nil)).Elem()
}

func (o ClbEipBillingConfigPtrOutput) ToClbEipBillingConfigPtrOutput() ClbEipBillingConfigPtrOutput {
	return o
}

func (o ClbEipBillingConfigPtrOutput) ToClbEipBillingConfigPtrOutputWithContext(ctx context.Context) ClbEipBillingConfigPtrOutput {
	return o
}

func (o ClbEipBillingConfigPtrOutput) Elem() ClbEipBillingConfigOutput {
	return o.ApplyT(func(v *ClbEipBillingConfig) ClbEipBillingConfig {
		if v != nil {
			return *v
		}
		var ret ClbEipBillingConfig
		return ret
	}).(ClbEipBillingConfigOutput)
}

// The peek bandwidth of the EIP which automatically assigned to CLB.
func (o ClbEipBillingConfigPtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClbEipBillingConfig) *int {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// The billing type of the EIP which automatically assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.When creating a `PrePaid` public CLB, this field must be specified as `PrePaid` simultaneously.When the LoadBalancerBillingType changes from `PostPaid` to `PrePaid`, please manually modify the value of this field to `PrePaid` simultaneously.
func (o ClbEipBillingConfigPtrOutput) EipBillingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClbEipBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EipBillingType
	}).(pulumi.StringPtrOutput)
}

// The ISP of the EIP which automatically associated to CLB, the value can be `BGP` or `ChinaMobile` or `ChinaUnicom` or `ChinaTelecom` or `SingleLine_BGP` or `Static_BGP` or `Fusion_BGP`.
func (o ClbEipBillingConfigPtrOutput) Isp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClbEipBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Isp
	}).(pulumi.StringPtrOutput)
}

type ClbTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// ClbTagInput is an input type that accepts ClbTagArgs and ClbTagOutput values.
// You can construct a concrete instance of `ClbTagInput` via:
//
//	ClbTagArgs{...}
type ClbTagInput interface {
	pulumi.Input

	ToClbTagOutput() ClbTagOutput
	ToClbTagOutputWithContext(context.Context) ClbTagOutput
}

type ClbTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClbTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbTag)(nil)).Elem()
}

func (i ClbTagArgs) ToClbTagOutput() ClbTagOutput {
	return i.ToClbTagOutputWithContext(context.Background())
}

func (i ClbTagArgs) ToClbTagOutputWithContext(ctx context.Context) ClbTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbTagOutput)
}

// ClbTagArrayInput is an input type that accepts ClbTagArray and ClbTagArrayOutput values.
// You can construct a concrete instance of `ClbTagArrayInput` via:
//
//	ClbTagArray{ ClbTagArgs{...} }
type ClbTagArrayInput interface {
	pulumi.Input

	ToClbTagArrayOutput() ClbTagArrayOutput
	ToClbTagArrayOutputWithContext(context.Context) ClbTagArrayOutput
}

type ClbTagArray []ClbTagInput

func (ClbTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbTag)(nil)).Elem()
}

func (i ClbTagArray) ToClbTagArrayOutput() ClbTagArrayOutput {
	return i.ToClbTagArrayOutputWithContext(context.Background())
}

func (i ClbTagArray) ToClbTagArrayOutputWithContext(ctx context.Context) ClbTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbTagArrayOutput)
}

type ClbTagOutput struct{ *pulumi.OutputState }

func (ClbTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbTag)(nil)).Elem()
}

func (o ClbTagOutput) ToClbTagOutput() ClbTagOutput {
	return o
}

func (o ClbTagOutput) ToClbTagOutputWithContext(ctx context.Context) ClbTagOutput {
	return o
}

// The Key of Tags.
func (o ClbTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClbTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o ClbTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClbTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClbTagArrayOutput struct{ *pulumi.OutputState }

func (ClbTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbTag)(nil)).Elem()
}

func (o ClbTagArrayOutput) ToClbTagArrayOutput() ClbTagArrayOutput {
	return o
}

func (o ClbTagArrayOutput) ToClbTagArrayOutputWithContext(ctx context.Context) ClbTagArrayOutput {
	return o
}

func (o ClbTagArrayOutput) Index(i pulumi.IntInput) ClbTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClbTag {
		return vs[0].([]ClbTag)[vs[1].(int)]
	}).(ClbTagOutput)
}

type ClbsClb struct {
	// The address ip version of the Clb.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// The business status of the Clb.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time of the Clb.
	CreateTime string `pulumi:"createTime"`
	// The expected recycle time of the Clb.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of the Clb.
	Description string `pulumi:"description"`
	// The Eip address of the Clb.
	EipAddress string `pulumi:"eipAddress"`
	// The eip billing config of the Clb.
	EipBillingConfigs []ClbsClbEipBillingConfig `pulumi:"eipBillingConfigs"`
	// The Eip ID of the Clb.
	EipId string `pulumi:"eipId"`
	// The private ip address of the Clb.
	EniAddress string `pulumi:"eniAddress"`
	// The Eni ID of the Clb.
	EniId string `pulumi:"eniId"`
	// The eni ipv6 address of the Clb.
	EniIpv6Address string `pulumi:"eniIpv6Address"`
	// The expired time of the CLB.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the Clb.
	Id string `pulumi:"id"`
	// The billing status of the CLB.
	InstanceStatus int `pulumi:"instanceStatus"`
	// The ipv6 address bandwidth information of the Clb.
	Ipv6AddressBandwidths []ClbsClbIpv6AddressBandwidth `pulumi:"ipv6AddressBandwidths"`
	// The Ipv6 Eip ID of the Clb.
	Ipv6EipId string `pulumi:"ipv6EipId"`
	// The billing type of the Clb.
	LoadBalancerBillingType string `pulumi:"loadBalancerBillingType"`
	// The ID of the Clb.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The name of the Clb.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// The specifications of the Clb.
	LoadBalancerSpec string `pulumi:"loadBalancerSpec"`
	// The reason why Clb is locked.
	LockReason string `pulumi:"lockReason"`
	// The master zone ID of the CLB.
	MasterZoneId string `pulumi:"masterZoneId"`
	// The modification protection reason of the Clb.
	ModificationProtectionReason string `pulumi:"modificationProtectionReason"`
	// The modification protection status of the Clb.
	ModificationProtectionStatus string `pulumi:"modificationProtectionStatus"`
	// The over reclaim time of the CLB.
	OverdueReclaimTime string `pulumi:"overdueReclaimTime"`
	// The overdue time of the Clb.
	OverdueTime string `pulumi:"overdueTime"`
	// The ProjectName of Clb.
	ProjectName string `pulumi:"projectName"`
	// The reclaim time of the CLB.
	ReclaimTime string `pulumi:"reclaimTime"`
	// The remain renew times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
	RemainRenewTimes int `pulumi:"remainRenewTimes"`
	// The renew period times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
	RenewPeriodTimes int `pulumi:"renewPeriodTimes"`
	// The renew type of the CLB. When the value of the loadBalancerBillingType is `PrePaid`, the query returns this field.
	RenewType string `pulumi:"renewType"`
	// The slave zone ID of the CLB.
	SlaveZoneId string `pulumi:"slaveZoneId"`
	// The status of the Clb.
	Status string `pulumi:"status"`
	// The subnet ID of the Clb.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []ClbsClbTag `pulumi:"tags"`
	// The type of the Clb.
	Type string `pulumi:"type"`
	// The update time of the Clb.
	UpdateTime string `pulumi:"updateTime"`
	// The id of the VPC.
	VpcId string `pulumi:"vpcId"`
}

// ClbsClbInput is an input type that accepts ClbsClbArgs and ClbsClbOutput values.
// You can construct a concrete instance of `ClbsClbInput` via:
//
//	ClbsClbArgs{...}
type ClbsClbInput interface {
	pulumi.Input

	ToClbsClbOutput() ClbsClbOutput
	ToClbsClbOutputWithContext(context.Context) ClbsClbOutput
}

type ClbsClbArgs struct {
	// The address ip version of the Clb.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// The business status of the Clb.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time of the Clb.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The expected recycle time of the Clb.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of the Clb.
	Description pulumi.StringInput `pulumi:"description"`
	// The Eip address of the Clb.
	EipAddress pulumi.StringInput `pulumi:"eipAddress"`
	// The eip billing config of the Clb.
	EipBillingConfigs ClbsClbEipBillingConfigArrayInput `pulumi:"eipBillingConfigs"`
	// The Eip ID of the Clb.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// The private ip address of the Clb.
	EniAddress pulumi.StringInput `pulumi:"eniAddress"`
	// The Eni ID of the Clb.
	EniId pulumi.StringInput `pulumi:"eniId"`
	// The eni ipv6 address of the Clb.
	EniIpv6Address pulumi.StringInput `pulumi:"eniIpv6Address"`
	// The expired time of the CLB.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the Clb.
	Id pulumi.StringInput `pulumi:"id"`
	// The billing status of the CLB.
	InstanceStatus pulumi.IntInput `pulumi:"instanceStatus"`
	// The ipv6 address bandwidth information of the Clb.
	Ipv6AddressBandwidths ClbsClbIpv6AddressBandwidthArrayInput `pulumi:"ipv6AddressBandwidths"`
	// The Ipv6 Eip ID of the Clb.
	Ipv6EipId pulumi.StringInput `pulumi:"ipv6EipId"`
	// The billing type of the Clb.
	LoadBalancerBillingType pulumi.StringInput `pulumi:"loadBalancerBillingType"`
	// The ID of the Clb.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// The name of the Clb.
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	// The specifications of the Clb.
	LoadBalancerSpec pulumi.StringInput `pulumi:"loadBalancerSpec"`
	// The reason why Clb is locked.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The master zone ID of the CLB.
	MasterZoneId pulumi.StringInput `pulumi:"masterZoneId"`
	// The modification protection reason of the Clb.
	ModificationProtectionReason pulumi.StringInput `pulumi:"modificationProtectionReason"`
	// The modification protection status of the Clb.
	ModificationProtectionStatus pulumi.StringInput `pulumi:"modificationProtectionStatus"`
	// The over reclaim time of the CLB.
	OverdueReclaimTime pulumi.StringInput `pulumi:"overdueReclaimTime"`
	// The overdue time of the Clb.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The ProjectName of Clb.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The reclaim time of the CLB.
	ReclaimTime pulumi.StringInput `pulumi:"reclaimTime"`
	// The remain renew times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
	RemainRenewTimes pulumi.IntInput `pulumi:"remainRenewTimes"`
	// The renew period times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
	RenewPeriodTimes pulumi.IntInput `pulumi:"renewPeriodTimes"`
	// The renew type of the CLB. When the value of the loadBalancerBillingType is `PrePaid`, the query returns this field.
	RenewType pulumi.StringInput `pulumi:"renewType"`
	// The slave zone ID of the CLB.
	SlaveZoneId pulumi.StringInput `pulumi:"slaveZoneId"`
	// The status of the Clb.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet ID of the Clb.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags ClbsClbTagArrayInput `pulumi:"tags"`
	// The type of the Clb.
	Type pulumi.StringInput `pulumi:"type"`
	// The update time of the Clb.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The id of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (ClbsClbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsClb)(nil)).Elem()
}

func (i ClbsClbArgs) ToClbsClbOutput() ClbsClbOutput {
	return i.ToClbsClbOutputWithContext(context.Background())
}

func (i ClbsClbArgs) ToClbsClbOutputWithContext(ctx context.Context) ClbsClbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsClbOutput)
}

// ClbsClbArrayInput is an input type that accepts ClbsClbArray and ClbsClbArrayOutput values.
// You can construct a concrete instance of `ClbsClbArrayInput` via:
//
//	ClbsClbArray{ ClbsClbArgs{...} }
type ClbsClbArrayInput interface {
	pulumi.Input

	ToClbsClbArrayOutput() ClbsClbArrayOutput
	ToClbsClbArrayOutputWithContext(context.Context) ClbsClbArrayOutput
}

type ClbsClbArray []ClbsClbInput

func (ClbsClbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsClb)(nil)).Elem()
}

func (i ClbsClbArray) ToClbsClbArrayOutput() ClbsClbArrayOutput {
	return i.ToClbsClbArrayOutputWithContext(context.Background())
}

func (i ClbsClbArray) ToClbsClbArrayOutputWithContext(ctx context.Context) ClbsClbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsClbArrayOutput)
}

type ClbsClbOutput struct{ *pulumi.OutputState }

func (ClbsClbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsClb)(nil)).Elem()
}

func (o ClbsClbOutput) ToClbsClbOutput() ClbsClbOutput {
	return o
}

func (o ClbsClbOutput) ToClbsClbOutputWithContext(ctx context.Context) ClbsClbOutput {
	return o
}

// The address ip version of the Clb.
func (o ClbsClbOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The business status of the Clb.
func (o ClbsClbOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time of the Clb.
func (o ClbsClbOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The expected recycle time of the Clb.
func (o ClbsClbOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the Clb.
func (o ClbsClbOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.Description }).(pulumi.StringOutput)
}

// The Eip address of the Clb.
func (o ClbsClbOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.EipAddress }).(pulumi.StringOutput)
}

// The eip billing config of the Clb.
func (o ClbsClbOutput) EipBillingConfigs() ClbsClbEipBillingConfigArrayOutput {
	return o.ApplyT(func(v ClbsClb) []ClbsClbEipBillingConfig { return v.EipBillingConfigs }).(ClbsClbEipBillingConfigArrayOutput)
}

// The Eip ID of the Clb.
func (o ClbsClbOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.EipId }).(pulumi.StringOutput)
}

// The private ip address of the Clb.
func (o ClbsClbOutput) EniAddress() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.EniAddress }).(pulumi.StringOutput)
}

// The Eni ID of the Clb.
func (o ClbsClbOutput) EniId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.EniId }).(pulumi.StringOutput)
}

// The eni ipv6 address of the Clb.
func (o ClbsClbOutput) EniIpv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.EniIpv6Address }).(pulumi.StringOutput)
}

// The expired time of the CLB.
func (o ClbsClbOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the Clb.
func (o ClbsClbOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.Id }).(pulumi.StringOutput)
}

// The billing status of the CLB.
func (o ClbsClbOutput) InstanceStatus() pulumi.IntOutput {
	return o.ApplyT(func(v ClbsClb) int { return v.InstanceStatus }).(pulumi.IntOutput)
}

// The ipv6 address bandwidth information of the Clb.
func (o ClbsClbOutput) Ipv6AddressBandwidths() ClbsClbIpv6AddressBandwidthArrayOutput {
	return o.ApplyT(func(v ClbsClb) []ClbsClbIpv6AddressBandwidth { return v.Ipv6AddressBandwidths }).(ClbsClbIpv6AddressBandwidthArrayOutput)
}

// The Ipv6 Eip ID of the Clb.
func (o ClbsClbOutput) Ipv6EipId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.Ipv6EipId }).(pulumi.StringOutput)
}

// The billing type of the Clb.
func (o ClbsClbOutput) LoadBalancerBillingType() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.LoadBalancerBillingType }).(pulumi.StringOutput)
}

// The ID of the Clb.
func (o ClbsClbOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// The name of the Clb.
func (o ClbsClbOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// The specifications of the Clb.
func (o ClbsClbOutput) LoadBalancerSpec() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.LoadBalancerSpec }).(pulumi.StringOutput)
}

// The reason why Clb is locked.
func (o ClbsClbOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.LockReason }).(pulumi.StringOutput)
}

// The master zone ID of the CLB.
func (o ClbsClbOutput) MasterZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.MasterZoneId }).(pulumi.StringOutput)
}

// The modification protection reason of the Clb.
func (o ClbsClbOutput) ModificationProtectionReason() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.ModificationProtectionReason }).(pulumi.StringOutput)
}

// The modification protection status of the Clb.
func (o ClbsClbOutput) ModificationProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.ModificationProtectionStatus }).(pulumi.StringOutput)
}

// The over reclaim time of the CLB.
func (o ClbsClbOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// The overdue time of the Clb.
func (o ClbsClbOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The ProjectName of Clb.
func (o ClbsClbOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The reclaim time of the CLB.
func (o ClbsClbOutput) ReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.ReclaimTime }).(pulumi.StringOutput)
}

// The remain renew times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
func (o ClbsClbOutput) RemainRenewTimes() pulumi.IntOutput {
	return o.ApplyT(func(v ClbsClb) int { return v.RemainRenewTimes }).(pulumi.IntOutput)
}

// The renew period times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
func (o ClbsClbOutput) RenewPeriodTimes() pulumi.IntOutput {
	return o.ApplyT(func(v ClbsClb) int { return v.RenewPeriodTimes }).(pulumi.IntOutput)
}

// The renew type of the CLB. When the value of the loadBalancerBillingType is `PrePaid`, the query returns this field.
func (o ClbsClbOutput) RenewType() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.RenewType }).(pulumi.StringOutput)
}

// The slave zone ID of the CLB.
func (o ClbsClbOutput) SlaveZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.SlaveZoneId }).(pulumi.StringOutput)
}

// The status of the Clb.
func (o ClbsClbOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet ID of the Clb.
func (o ClbsClbOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o ClbsClbOutput) Tags() ClbsClbTagArrayOutput {
	return o.ApplyT(func(v ClbsClb) []ClbsClbTag { return v.Tags }).(ClbsClbTagArrayOutput)
}

// The type of the Clb.
func (o ClbsClbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.Type }).(pulumi.StringOutput)
}

// The update time of the Clb.
func (o ClbsClbOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of the VPC.
func (o ClbsClbOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClb) string { return v.VpcId }).(pulumi.StringOutput)
}

type ClbsClbArrayOutput struct{ *pulumi.OutputState }

func (ClbsClbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsClb)(nil)).Elem()
}

func (o ClbsClbArrayOutput) ToClbsClbArrayOutput() ClbsClbArrayOutput {
	return o
}

func (o ClbsClbArrayOutput) ToClbsClbArrayOutputWithContext(ctx context.Context) ClbsClbArrayOutput {
	return o
}

func (o ClbsClbArrayOutput) Index(i pulumi.IntInput) ClbsClbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClbsClb {
		return vs[0].([]ClbsClb)[vs[1].(int)]
	}).(ClbsClbOutput)
}

type ClbsClbEipBillingConfig struct {
	// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing type of the EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.
	EipBillingType string `pulumi:"eipBillingType"`
	// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
	Isp string `pulumi:"isp"`
}

// ClbsClbEipBillingConfigInput is an input type that accepts ClbsClbEipBillingConfigArgs and ClbsClbEipBillingConfigOutput values.
// You can construct a concrete instance of `ClbsClbEipBillingConfigInput` via:
//
//	ClbsClbEipBillingConfigArgs{...}
type ClbsClbEipBillingConfigInput interface {
	pulumi.Input

	ToClbsClbEipBillingConfigOutput() ClbsClbEipBillingConfigOutput
	ToClbsClbEipBillingConfigOutputWithContext(context.Context) ClbsClbEipBillingConfigOutput
}

type ClbsClbEipBillingConfigArgs struct {
	// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing type of the EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.
	EipBillingType pulumi.StringInput `pulumi:"eipBillingType"`
	// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (ClbsClbEipBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsClbEipBillingConfig)(nil)).Elem()
}

func (i ClbsClbEipBillingConfigArgs) ToClbsClbEipBillingConfigOutput() ClbsClbEipBillingConfigOutput {
	return i.ToClbsClbEipBillingConfigOutputWithContext(context.Background())
}

func (i ClbsClbEipBillingConfigArgs) ToClbsClbEipBillingConfigOutputWithContext(ctx context.Context) ClbsClbEipBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsClbEipBillingConfigOutput)
}

// ClbsClbEipBillingConfigArrayInput is an input type that accepts ClbsClbEipBillingConfigArray and ClbsClbEipBillingConfigArrayOutput values.
// You can construct a concrete instance of `ClbsClbEipBillingConfigArrayInput` via:
//
//	ClbsClbEipBillingConfigArray{ ClbsClbEipBillingConfigArgs{...} }
type ClbsClbEipBillingConfigArrayInput interface {
	pulumi.Input

	ToClbsClbEipBillingConfigArrayOutput() ClbsClbEipBillingConfigArrayOutput
	ToClbsClbEipBillingConfigArrayOutputWithContext(context.Context) ClbsClbEipBillingConfigArrayOutput
}

type ClbsClbEipBillingConfigArray []ClbsClbEipBillingConfigInput

func (ClbsClbEipBillingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsClbEipBillingConfig)(nil)).Elem()
}

func (i ClbsClbEipBillingConfigArray) ToClbsClbEipBillingConfigArrayOutput() ClbsClbEipBillingConfigArrayOutput {
	return i.ToClbsClbEipBillingConfigArrayOutputWithContext(context.Background())
}

func (i ClbsClbEipBillingConfigArray) ToClbsClbEipBillingConfigArrayOutputWithContext(ctx context.Context) ClbsClbEipBillingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsClbEipBillingConfigArrayOutput)
}

type ClbsClbEipBillingConfigOutput struct{ *pulumi.OutputState }

func (ClbsClbEipBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsClbEipBillingConfig)(nil)).Elem()
}

func (o ClbsClbEipBillingConfigOutput) ToClbsClbEipBillingConfigOutput() ClbsClbEipBillingConfigOutput {
	return o
}

func (o ClbsClbEipBillingConfigOutput) ToClbsClbEipBillingConfigOutputWithContext(ctx context.Context) ClbsClbEipBillingConfigOutput {
	return o
}

// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
func (o ClbsClbEipBillingConfigOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v ClbsClbEipBillingConfig) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing type of the EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.
func (o ClbsClbEipBillingConfigOutput) EipBillingType() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClbEipBillingConfig) string { return v.EipBillingType }).(pulumi.StringOutput)
}

// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
func (o ClbsClbEipBillingConfigOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClbEipBillingConfig) string { return v.Isp }).(pulumi.StringOutput)
}

type ClbsClbEipBillingConfigArrayOutput struct{ *pulumi.OutputState }

func (ClbsClbEipBillingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsClbEipBillingConfig)(nil)).Elem()
}

func (o ClbsClbEipBillingConfigArrayOutput) ToClbsClbEipBillingConfigArrayOutput() ClbsClbEipBillingConfigArrayOutput {
	return o
}

func (o ClbsClbEipBillingConfigArrayOutput) ToClbsClbEipBillingConfigArrayOutputWithContext(ctx context.Context) ClbsClbEipBillingConfigArrayOutput {
	return o
}

func (o ClbsClbEipBillingConfigArrayOutput) Index(i pulumi.IntInput) ClbsClbEipBillingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClbsClbEipBillingConfig {
		return vs[0].([]ClbsClbEipBillingConfig)[vs[1].(int)]
	}).(ClbsClbEipBillingConfigOutput)
}

type ClbsClbIpv6AddressBandwidth struct {
	// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The bandwidth package id of the Ipv6 EIP assigned to CLB.
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// The billing type of the Ipv6 EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
	BillingType string `pulumi:"billingType"`
	// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
	Isp string `pulumi:"isp"`
	// The network type of the CLB Ipv6 address.
	NetworkType string `pulumi:"networkType"`
}

// ClbsClbIpv6AddressBandwidthInput is an input type that accepts ClbsClbIpv6AddressBandwidthArgs and ClbsClbIpv6AddressBandwidthOutput values.
// You can construct a concrete instance of `ClbsClbIpv6AddressBandwidthInput` via:
//
//	ClbsClbIpv6AddressBandwidthArgs{...}
type ClbsClbIpv6AddressBandwidthInput interface {
	pulumi.Input

	ToClbsClbIpv6AddressBandwidthOutput() ClbsClbIpv6AddressBandwidthOutput
	ToClbsClbIpv6AddressBandwidthOutputWithContext(context.Context) ClbsClbIpv6AddressBandwidthOutput
}

type ClbsClbIpv6AddressBandwidthArgs struct {
	// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The bandwidth package id of the Ipv6 EIP assigned to CLB.
	BandwidthPackageId pulumi.StringInput `pulumi:"bandwidthPackageId"`
	// The billing type of the Ipv6 EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The network type of the CLB Ipv6 address.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
}

func (ClbsClbIpv6AddressBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsClbIpv6AddressBandwidth)(nil)).Elem()
}

func (i ClbsClbIpv6AddressBandwidthArgs) ToClbsClbIpv6AddressBandwidthOutput() ClbsClbIpv6AddressBandwidthOutput {
	return i.ToClbsClbIpv6AddressBandwidthOutputWithContext(context.Background())
}

func (i ClbsClbIpv6AddressBandwidthArgs) ToClbsClbIpv6AddressBandwidthOutputWithContext(ctx context.Context) ClbsClbIpv6AddressBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsClbIpv6AddressBandwidthOutput)
}

// ClbsClbIpv6AddressBandwidthArrayInput is an input type that accepts ClbsClbIpv6AddressBandwidthArray and ClbsClbIpv6AddressBandwidthArrayOutput values.
// You can construct a concrete instance of `ClbsClbIpv6AddressBandwidthArrayInput` via:
//
//	ClbsClbIpv6AddressBandwidthArray{ ClbsClbIpv6AddressBandwidthArgs{...} }
type ClbsClbIpv6AddressBandwidthArrayInput interface {
	pulumi.Input

	ToClbsClbIpv6AddressBandwidthArrayOutput() ClbsClbIpv6AddressBandwidthArrayOutput
	ToClbsClbIpv6AddressBandwidthArrayOutputWithContext(context.Context) ClbsClbIpv6AddressBandwidthArrayOutput
}

type ClbsClbIpv6AddressBandwidthArray []ClbsClbIpv6AddressBandwidthInput

func (ClbsClbIpv6AddressBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsClbIpv6AddressBandwidth)(nil)).Elem()
}

func (i ClbsClbIpv6AddressBandwidthArray) ToClbsClbIpv6AddressBandwidthArrayOutput() ClbsClbIpv6AddressBandwidthArrayOutput {
	return i.ToClbsClbIpv6AddressBandwidthArrayOutputWithContext(context.Background())
}

func (i ClbsClbIpv6AddressBandwidthArray) ToClbsClbIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) ClbsClbIpv6AddressBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsClbIpv6AddressBandwidthArrayOutput)
}

type ClbsClbIpv6AddressBandwidthOutput struct{ *pulumi.OutputState }

func (ClbsClbIpv6AddressBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsClbIpv6AddressBandwidth)(nil)).Elem()
}

func (o ClbsClbIpv6AddressBandwidthOutput) ToClbsClbIpv6AddressBandwidthOutput() ClbsClbIpv6AddressBandwidthOutput {
	return o
}

func (o ClbsClbIpv6AddressBandwidthOutput) ToClbsClbIpv6AddressBandwidthOutputWithContext(ctx context.Context) ClbsClbIpv6AddressBandwidthOutput {
	return o
}

// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
func (o ClbsClbIpv6AddressBandwidthOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v ClbsClbIpv6AddressBandwidth) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The bandwidth package id of the Ipv6 EIP assigned to CLB.
func (o ClbsClbIpv6AddressBandwidthOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClbIpv6AddressBandwidth) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// The billing type of the Ipv6 EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
func (o ClbsClbIpv6AddressBandwidthOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClbIpv6AddressBandwidth) string { return v.BillingType }).(pulumi.StringOutput)
}

// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
func (o ClbsClbIpv6AddressBandwidthOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClbIpv6AddressBandwidth) string { return v.Isp }).(pulumi.StringOutput)
}

// The network type of the CLB Ipv6 address.
func (o ClbsClbIpv6AddressBandwidthOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClbIpv6AddressBandwidth) string { return v.NetworkType }).(pulumi.StringOutput)
}

type ClbsClbIpv6AddressBandwidthArrayOutput struct{ *pulumi.OutputState }

func (ClbsClbIpv6AddressBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsClbIpv6AddressBandwidth)(nil)).Elem()
}

func (o ClbsClbIpv6AddressBandwidthArrayOutput) ToClbsClbIpv6AddressBandwidthArrayOutput() ClbsClbIpv6AddressBandwidthArrayOutput {
	return o
}

func (o ClbsClbIpv6AddressBandwidthArrayOutput) ToClbsClbIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) ClbsClbIpv6AddressBandwidthArrayOutput {
	return o
}

func (o ClbsClbIpv6AddressBandwidthArrayOutput) Index(i pulumi.IntInput) ClbsClbIpv6AddressBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClbsClbIpv6AddressBandwidth {
		return vs[0].([]ClbsClbIpv6AddressBandwidth)[vs[1].(int)]
	}).(ClbsClbIpv6AddressBandwidthOutput)
}

type ClbsClbTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// ClbsClbTagInput is an input type that accepts ClbsClbTagArgs and ClbsClbTagOutput values.
// You can construct a concrete instance of `ClbsClbTagInput` via:
//
//	ClbsClbTagArgs{...}
type ClbsClbTagInput interface {
	pulumi.Input

	ToClbsClbTagOutput() ClbsClbTagOutput
	ToClbsClbTagOutputWithContext(context.Context) ClbsClbTagOutput
}

type ClbsClbTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClbsClbTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsClbTag)(nil)).Elem()
}

func (i ClbsClbTagArgs) ToClbsClbTagOutput() ClbsClbTagOutput {
	return i.ToClbsClbTagOutputWithContext(context.Background())
}

func (i ClbsClbTagArgs) ToClbsClbTagOutputWithContext(ctx context.Context) ClbsClbTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsClbTagOutput)
}

// ClbsClbTagArrayInput is an input type that accepts ClbsClbTagArray and ClbsClbTagArrayOutput values.
// You can construct a concrete instance of `ClbsClbTagArrayInput` via:
//
//	ClbsClbTagArray{ ClbsClbTagArgs{...} }
type ClbsClbTagArrayInput interface {
	pulumi.Input

	ToClbsClbTagArrayOutput() ClbsClbTagArrayOutput
	ToClbsClbTagArrayOutputWithContext(context.Context) ClbsClbTagArrayOutput
}

type ClbsClbTagArray []ClbsClbTagInput

func (ClbsClbTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsClbTag)(nil)).Elem()
}

func (i ClbsClbTagArray) ToClbsClbTagArrayOutput() ClbsClbTagArrayOutput {
	return i.ToClbsClbTagArrayOutputWithContext(context.Background())
}

func (i ClbsClbTagArray) ToClbsClbTagArrayOutputWithContext(ctx context.Context) ClbsClbTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsClbTagArrayOutput)
}

type ClbsClbTagOutput struct{ *pulumi.OutputState }

func (ClbsClbTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsClbTag)(nil)).Elem()
}

func (o ClbsClbTagOutput) ToClbsClbTagOutput() ClbsClbTagOutput {
	return o
}

func (o ClbsClbTagOutput) ToClbsClbTagOutputWithContext(ctx context.Context) ClbsClbTagOutput {
	return o
}

// The Key of Tags.
func (o ClbsClbTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClbTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o ClbsClbTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsClbTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClbsClbTagArrayOutput struct{ *pulumi.OutputState }

func (ClbsClbTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsClbTag)(nil)).Elem()
}

func (o ClbsClbTagArrayOutput) ToClbsClbTagArrayOutput() ClbsClbTagArrayOutput {
	return o
}

func (o ClbsClbTagArrayOutput) ToClbsClbTagArrayOutputWithContext(ctx context.Context) ClbsClbTagArrayOutput {
	return o
}

func (o ClbsClbTagArrayOutput) Index(i pulumi.IntInput) ClbsClbTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClbsClbTag {
		return vs[0].([]ClbsClbTag)[vs[1].(int)]
	}).(ClbsClbTagOutput)
}

type ClbsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// ClbsTagInput is an input type that accepts ClbsTagArgs and ClbsTagOutput values.
// You can construct a concrete instance of `ClbsTagInput` via:
//
//	ClbsTagArgs{...}
type ClbsTagInput interface {
	pulumi.Input

	ToClbsTagOutput() ClbsTagOutput
	ToClbsTagOutputWithContext(context.Context) ClbsTagOutput
}

type ClbsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClbsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsTag)(nil)).Elem()
}

func (i ClbsTagArgs) ToClbsTagOutput() ClbsTagOutput {
	return i.ToClbsTagOutputWithContext(context.Background())
}

func (i ClbsTagArgs) ToClbsTagOutputWithContext(ctx context.Context) ClbsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsTagOutput)
}

// ClbsTagArrayInput is an input type that accepts ClbsTagArray and ClbsTagArrayOutput values.
// You can construct a concrete instance of `ClbsTagArrayInput` via:
//
//	ClbsTagArray{ ClbsTagArgs{...} }
type ClbsTagArrayInput interface {
	pulumi.Input

	ToClbsTagArrayOutput() ClbsTagArrayOutput
	ToClbsTagArrayOutputWithContext(context.Context) ClbsTagArrayOutput
}

type ClbsTagArray []ClbsTagInput

func (ClbsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsTag)(nil)).Elem()
}

func (i ClbsTagArray) ToClbsTagArrayOutput() ClbsTagArrayOutput {
	return i.ToClbsTagArrayOutputWithContext(context.Background())
}

func (i ClbsTagArray) ToClbsTagArrayOutputWithContext(ctx context.Context) ClbsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbsTagArrayOutput)
}

type ClbsTagOutput struct{ *pulumi.OutputState }

func (ClbsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbsTag)(nil)).Elem()
}

func (o ClbsTagOutput) ToClbsTagOutput() ClbsTagOutput {
	return o
}

func (o ClbsTagOutput) ToClbsTagOutputWithContext(ctx context.Context) ClbsTagOutput {
	return o
}

// The Key of Tags.
func (o ClbsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o ClbsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClbsTag) string { return v.Value }).(pulumi.StringOutput)
}

type ClbsTagArrayOutput struct{ *pulumi.OutputState }

func (ClbsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbsTag)(nil)).Elem()
}

func (o ClbsTagArrayOutput) ToClbsTagArrayOutput() ClbsTagArrayOutput {
	return o
}

func (o ClbsTagArrayOutput) ToClbsTagArrayOutputWithContext(ctx context.Context) ClbsTagArrayOutput {
	return o
}

func (o ClbsTagArrayOutput) Index(i pulumi.IntInput) ClbsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClbsTag {
		return vs[0].([]ClbsTag)[vs[1].(int)]
	}).(ClbsTagOutput)
}

type ListenerHealthCheck struct {
	// The domain of health check.
	Domain *string `pulumi:"domain"`
	// The enable status of health check function. Optional choice contains `on`, `off`.
	Enabled *string `pulumi:"enabled"`
	// The healthy threshold of health check, default 3, range in 2~10.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// The normal http status code of health check, the value can be `http2xx` or `http3xx` or `http4xx` or `http5xx`.
	HttpCode *string `pulumi:"httpCode"`
	// The interval executing health check, default 2, range in 1~300.
	Interval *int `pulumi:"interval"`
	// The method of health check, the value can be `GET` or `HEAD`.
	Method *string `pulumi:"method"`
	// The response timeout of health check, default 2, range in 1~60..
	Timeout *int `pulumi:"timeout"`
	// The UDP expect of health check. This field must be specified simultaneously with field `udpRequest`.
	UdpExpect *string `pulumi:"udpExpect"`
	// The UDP request of health check. This field must be specified simultaneously with field `udpExpect`.
	UdpRequest *string `pulumi:"udpRequest"`
	// The unhealthy threshold of health check, default 3, range in 2~10.
	UnHealthyThreshold *int `pulumi:"unHealthyThreshold"`
	// The uri of health check.
	Uri *string `pulumi:"uri"`
}

// ListenerHealthCheckInput is an input type that accepts ListenerHealthCheckArgs and ListenerHealthCheckOutput values.
// You can construct a concrete instance of `ListenerHealthCheckInput` via:
//
//	ListenerHealthCheckArgs{...}
type ListenerHealthCheckInput interface {
	pulumi.Input

	ToListenerHealthCheckOutput() ListenerHealthCheckOutput
	ToListenerHealthCheckOutputWithContext(context.Context) ListenerHealthCheckOutput
}

type ListenerHealthCheckArgs struct {
	// The domain of health check.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The enable status of health check function. Optional choice contains `on`, `off`.
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// The healthy threshold of health check, default 3, range in 2~10.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// The normal http status code of health check, the value can be `http2xx` or `http3xx` or `http4xx` or `http5xx`.
	HttpCode pulumi.StringPtrInput `pulumi:"httpCode"`
	// The interval executing health check, default 2, range in 1~300.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The method of health check, the value can be `GET` or `HEAD`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The response timeout of health check, default 2, range in 1~60..
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The UDP expect of health check. This field must be specified simultaneously with field `udpRequest`.
	UdpExpect pulumi.StringPtrInput `pulumi:"udpExpect"`
	// The UDP request of health check. This field must be specified simultaneously with field `udpExpect`.
	UdpRequest pulumi.StringPtrInput `pulumi:"udpRequest"`
	// The unhealthy threshold of health check, default 3, range in 2~10.
	UnHealthyThreshold pulumi.IntPtrInput `pulumi:"unHealthyThreshold"`
	// The uri of health check.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ListenerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerHealthCheck)(nil)).Elem()
}

func (i ListenerHealthCheckArgs) ToListenerHealthCheckOutput() ListenerHealthCheckOutput {
	return i.ToListenerHealthCheckOutputWithContext(context.Background())
}

func (i ListenerHealthCheckArgs) ToListenerHealthCheckOutputWithContext(ctx context.Context) ListenerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerHealthCheckOutput)
}

func (i ListenerHealthCheckArgs) ToListenerHealthCheckPtrOutput() ListenerHealthCheckPtrOutput {
	return i.ToListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i ListenerHealthCheckArgs) ToListenerHealthCheckPtrOutputWithContext(ctx context.Context) ListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerHealthCheckOutput).ToListenerHealthCheckPtrOutputWithContext(ctx)
}

// ListenerHealthCheckPtrInput is an input type that accepts ListenerHealthCheckArgs, ListenerHealthCheckPtr and ListenerHealthCheckPtrOutput values.
// You can construct a concrete instance of `ListenerHealthCheckPtrInput` via:
//
//	        ListenerHealthCheckArgs{...}
//
//	or:
//
//	        nil
type ListenerHealthCheckPtrInput interface {
	pulumi.Input

	ToListenerHealthCheckPtrOutput() ListenerHealthCheckPtrOutput
	ToListenerHealthCheckPtrOutputWithContext(context.Context) ListenerHealthCheckPtrOutput
}

type listenerHealthCheckPtrType ListenerHealthCheckArgs

func ListenerHealthCheckPtr(v *ListenerHealthCheckArgs) ListenerHealthCheckPtrInput {
	return (*listenerHealthCheckPtrType)(v)
}

func (*listenerHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerHealthCheck)(nil)).Elem()
}

func (i *listenerHealthCheckPtrType) ToListenerHealthCheckPtrOutput() ListenerHealthCheckPtrOutput {
	return i.ToListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i *listenerHealthCheckPtrType) ToListenerHealthCheckPtrOutputWithContext(ctx context.Context) ListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerHealthCheckPtrOutput)
}

type ListenerHealthCheckOutput struct{ *pulumi.OutputState }

func (ListenerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerHealthCheck)(nil)).Elem()
}

func (o ListenerHealthCheckOutput) ToListenerHealthCheckOutput() ListenerHealthCheckOutput {
	return o
}

func (o ListenerHealthCheckOutput) ToListenerHealthCheckOutputWithContext(ctx context.Context) ListenerHealthCheckOutput {
	return o
}

func (o ListenerHealthCheckOutput) ToListenerHealthCheckPtrOutput() ListenerHealthCheckPtrOutput {
	return o.ToListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (o ListenerHealthCheckOutput) ToListenerHealthCheckPtrOutputWithContext(ctx context.Context) ListenerHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerHealthCheck) *ListenerHealthCheck {
		return &v
	}).(ListenerHealthCheckPtrOutput)
}

// The domain of health check.
func (o ListenerHealthCheckOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The enable status of health check function. Optional choice contains `on`, `off`.
func (o ListenerHealthCheckOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The healthy threshold of health check, default 3, range in 2~10.
func (o ListenerHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The normal http status code of health check, the value can be `http2xx` or `http3xx` or `http4xx` or `http5xx`.
func (o ListenerHealthCheckOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *string { return v.HttpCode }).(pulumi.StringPtrOutput)
}

// The interval executing health check, default 2, range in 1~300.
func (o ListenerHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The method of health check, the value can be `GET` or `HEAD`.
func (o ListenerHealthCheckOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The response timeout of health check, default 2, range in 1~60..
func (o ListenerHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The UDP expect of health check. This field must be specified simultaneously with field `udpRequest`.
func (o ListenerHealthCheckOutput) UdpExpect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *string { return v.UdpExpect }).(pulumi.StringPtrOutput)
}

// The UDP request of health check. This field must be specified simultaneously with field `udpExpect`.
func (o ListenerHealthCheckOutput) UdpRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *string { return v.UdpRequest }).(pulumi.StringPtrOutput)
}

// The unhealthy threshold of health check, default 3, range in 2~10.
func (o ListenerHealthCheckOutput) UnHealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *int { return v.UnHealthyThreshold }).(pulumi.IntPtrOutput)
}

// The uri of health check.
func (o ListenerHealthCheckOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerHealthCheck) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ListenerHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (ListenerHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerHealthCheck)(nil)).Elem()
}

func (o ListenerHealthCheckPtrOutput) ToListenerHealthCheckPtrOutput() ListenerHealthCheckPtrOutput {
	return o
}

func (o ListenerHealthCheckPtrOutput) ToListenerHealthCheckPtrOutputWithContext(ctx context.Context) ListenerHealthCheckPtrOutput {
	return o
}

func (o ListenerHealthCheckPtrOutput) Elem() ListenerHealthCheckOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) ListenerHealthCheck {
		if v != nil {
			return *v
		}
		var ret ListenerHealthCheck
		return ret
	}).(ListenerHealthCheckOutput)
}

// The domain of health check.
func (o ListenerHealthCheckPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// The enable status of health check function. Optional choice contains `on`, `off`.
func (o ListenerHealthCheckPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// The healthy threshold of health check, default 3, range in 2~10.
func (o ListenerHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The normal http status code of health check, the value can be `http2xx` or `http3xx` or `http4xx` or `http5xx`.
func (o ListenerHealthCheckPtrOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.HttpCode
	}).(pulumi.StringPtrOutput)
}

// The interval executing health check, default 2, range in 1~300.
func (o ListenerHealthCheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// The method of health check, the value can be `GET` or `HEAD`.
func (o ListenerHealthCheckPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The response timeout of health check, default 2, range in 1~60..
func (o ListenerHealthCheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The UDP expect of health check. This field must be specified simultaneously with field `udpRequest`.
func (o ListenerHealthCheckPtrOutput) UdpExpect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.UdpExpect
	}).(pulumi.StringPtrOutput)
}

// The UDP request of health check. This field must be specified simultaneously with field `udpExpect`.
func (o ListenerHealthCheckPtrOutput) UdpRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.UdpRequest
	}).(pulumi.StringPtrOutput)
}

// The unhealthy threshold of health check, default 3, range in 2~10.
func (o ListenerHealthCheckPtrOutput) UnHealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.UnHealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The uri of health check.
func (o ListenerHealthCheckPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ListenerHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type ListenersListener struct {
	// The acl ID list to which the Listener is bound.
	AclIds []string `pulumi:"aclIds"`
	// The acl status of the Listener.
	AclStatus string `pulumi:"aclStatus"`
	// The acl type of the Listener.
	AclType string `pulumi:"aclType"`
	// The bandwidth of the Listener. Unit: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The ID of the certificate which is associated with the Listener.
	CertificateId string `pulumi:"certificateId"`
	// Whether to enable connection drain of the Listener.
	ConnectionDrainEnabled string `pulumi:"connectionDrainEnabled"`
	// The connection drain timeout of the Listener.
	ConnectionDrainTimeout int `pulumi:"connectionDrainTimeout"`
	// The name of the cookie for session persistence configured on the backend server.
	Cookie string `pulumi:"cookie"`
	// The create time of the Listener.
	CreateTime string `pulumi:"createTime"`
	// The enable status of the Listener.
	Enabled string `pulumi:"enabled"`
	// The domain of health check.
	HealthCheckDomain string `pulumi:"healthCheckDomain"`
	// The enable status of health check function.
	HealthCheckEnabled string `pulumi:"healthCheckEnabled"`
	// The healthy threshold of health check.
	HealthCheckHealthyThreshold int `pulumi:"healthCheckHealthyThreshold"`
	// The normal http status code of health check.
	HealthCheckHttpCode string `pulumi:"healthCheckHttpCode"`
	// The interval executing health check.
	HealthCheckInterval int `pulumi:"healthCheckInterval"`
	// The method of health check.
	HealthCheckMethod string `pulumi:"healthCheckMethod"`
	// The response timeout of health check.
	HealthCheckTimeout int `pulumi:"healthCheckTimeout"`
	// The expected response string for the health check.
	HealthCheckUdpExpect string `pulumi:"healthCheckUdpExpect"`
	// A request string to perform a health check.
	HealthCheckUdpRequest string `pulumi:"healthCheckUdpRequest"`
	// The unhealthy threshold of health check.
	HealthCheckUnHealthyThreshold int `pulumi:"healthCheckUnHealthyThreshold"`
	// The uri of health check.
	HealthCheckUri string `pulumi:"healthCheckUri"`
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The ID of the Listener.
	ListenerId string `pulumi:"listenerId"`
	// The name of the Listener.
	ListenerName string `pulumi:"listenerName"`
	// The persistence timeout of the Listener.
	PersistenceTimeout int `pulumi:"persistenceTimeout"`
	// The persistence type of the Listener.
	PersistenceType string `pulumi:"persistenceType"`
	// The port receiving request of the Listener.
	Port int `pulumi:"port"`
	// The protocol of the Listener.
	Protocol string `pulumi:"protocol"`
	// Whether to enable proxy protocol.
	ProxyProtocolType string `pulumi:"proxyProtocolType"`
	// The ID of the backend server group which is associated with the Listener.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The status of the Listener.
	Status string `pulumi:"status"`
	// The update time of the Listener.
	UpdateTime string `pulumi:"updateTime"`
}

// ListenersListenerInput is an input type that accepts ListenersListenerArgs and ListenersListenerOutput values.
// You can construct a concrete instance of `ListenersListenerInput` via:
//
//	ListenersListenerArgs{...}
type ListenersListenerInput interface {
	pulumi.Input

	ToListenersListenerOutput() ListenersListenerOutput
	ToListenersListenerOutputWithContext(context.Context) ListenersListenerOutput
}

type ListenersListenerArgs struct {
	// The acl ID list to which the Listener is bound.
	AclIds pulumi.StringArrayInput `pulumi:"aclIds"`
	// The acl status of the Listener.
	AclStatus pulumi.StringInput `pulumi:"aclStatus"`
	// The acl type of the Listener.
	AclType pulumi.StringInput `pulumi:"aclType"`
	// The bandwidth of the Listener. Unit: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The ID of the certificate which is associated with the Listener.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// Whether to enable connection drain of the Listener.
	ConnectionDrainEnabled pulumi.StringInput `pulumi:"connectionDrainEnabled"`
	// The connection drain timeout of the Listener.
	ConnectionDrainTimeout pulumi.IntInput `pulumi:"connectionDrainTimeout"`
	// The name of the cookie for session persistence configured on the backend server.
	Cookie pulumi.StringInput `pulumi:"cookie"`
	// The create time of the Listener.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The enable status of the Listener.
	Enabled pulumi.StringInput `pulumi:"enabled"`
	// The domain of health check.
	HealthCheckDomain pulumi.StringInput `pulumi:"healthCheckDomain"`
	// The enable status of health check function.
	HealthCheckEnabled pulumi.StringInput `pulumi:"healthCheckEnabled"`
	// The healthy threshold of health check.
	HealthCheckHealthyThreshold pulumi.IntInput `pulumi:"healthCheckHealthyThreshold"`
	// The normal http status code of health check.
	HealthCheckHttpCode pulumi.StringInput `pulumi:"healthCheckHttpCode"`
	// The interval executing health check.
	HealthCheckInterval pulumi.IntInput `pulumi:"healthCheckInterval"`
	// The method of health check.
	HealthCheckMethod pulumi.StringInput `pulumi:"healthCheckMethod"`
	// The response timeout of health check.
	HealthCheckTimeout pulumi.IntInput `pulumi:"healthCheckTimeout"`
	// The expected response string for the health check.
	HealthCheckUdpExpect pulumi.StringInput `pulumi:"healthCheckUdpExpect"`
	// A request string to perform a health check.
	HealthCheckUdpRequest pulumi.StringInput `pulumi:"healthCheckUdpRequest"`
	// The unhealthy threshold of health check.
	HealthCheckUnHealthyThreshold pulumi.IntInput `pulumi:"healthCheckUnHealthyThreshold"`
	// The uri of health check.
	HealthCheckUri pulumi.StringInput `pulumi:"healthCheckUri"`
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The name of the Listener.
	ListenerName pulumi.StringInput `pulumi:"listenerName"`
	// The persistence timeout of the Listener.
	PersistenceTimeout pulumi.IntInput `pulumi:"persistenceTimeout"`
	// The persistence type of the Listener.
	PersistenceType pulumi.StringInput `pulumi:"persistenceType"`
	// The port receiving request of the Listener.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the Listener.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Whether to enable proxy protocol.
	ProxyProtocolType pulumi.StringInput `pulumi:"proxyProtocolType"`
	// The ID of the backend server group which is associated with the Listener.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The status of the Listener.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of the Listener.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (ListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListener)(nil)).Elem()
}

func (i ListenersListenerArgs) ToListenersListenerOutput() ListenersListenerOutput {
	return i.ToListenersListenerOutputWithContext(context.Background())
}

func (i ListenersListenerArgs) ToListenersListenerOutputWithContext(ctx context.Context) ListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerOutput)
}

// ListenersListenerArrayInput is an input type that accepts ListenersListenerArray and ListenersListenerArrayOutput values.
// You can construct a concrete instance of `ListenersListenerArrayInput` via:
//
//	ListenersListenerArray{ ListenersListenerArgs{...} }
type ListenersListenerArrayInput interface {
	pulumi.Input

	ToListenersListenerArrayOutput() ListenersListenerArrayOutput
	ToListenersListenerArrayOutputWithContext(context.Context) ListenersListenerArrayOutput
}

type ListenersListenerArray []ListenersListenerInput

func (ListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListener)(nil)).Elem()
}

func (i ListenersListenerArray) ToListenersListenerArrayOutput() ListenersListenerArrayOutput {
	return i.ToListenersListenerArrayOutputWithContext(context.Background())
}

func (i ListenersListenerArray) ToListenersListenerArrayOutputWithContext(ctx context.Context) ListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerArrayOutput)
}

type ListenersListenerOutput struct{ *pulumi.OutputState }

func (ListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListener)(nil)).Elem()
}

func (o ListenersListenerOutput) ToListenersListenerOutput() ListenersListenerOutput {
	return o
}

func (o ListenersListenerOutput) ToListenersListenerOutputWithContext(ctx context.Context) ListenersListenerOutput {
	return o
}

// The acl ID list to which the Listener is bound.
func (o ListenersListenerOutput) AclIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenersListener) []string { return v.AclIds }).(pulumi.StringArrayOutput)
}

// The acl status of the Listener.
func (o ListenersListenerOutput) AclStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.AclStatus }).(pulumi.StringOutput)
}

// The acl type of the Listener.
func (o ListenersListenerOutput) AclType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.AclType }).(pulumi.StringOutput)
}

// The bandwidth of the Listener. Unit: Mbps.
func (o ListenersListenerOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The ID of the certificate which is associated with the Listener.
func (o ListenersListenerOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.CertificateId }).(pulumi.StringOutput)
}

// Whether to enable connection drain of the Listener.
func (o ListenersListenerOutput) ConnectionDrainEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ConnectionDrainEnabled }).(pulumi.StringOutput)
}

// The connection drain timeout of the Listener.
func (o ListenersListenerOutput) ConnectionDrainTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.ConnectionDrainTimeout }).(pulumi.IntOutput)
}

// The name of the cookie for session persistence configured on the backend server.
func (o ListenersListenerOutput) Cookie() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Cookie }).(pulumi.StringOutput)
}

// The create time of the Listener.
func (o ListenersListenerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The enable status of the Listener.
func (o ListenersListenerOutput) Enabled() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Enabled }).(pulumi.StringOutput)
}

// The domain of health check.
func (o ListenersListenerOutput) HealthCheckDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.HealthCheckDomain }).(pulumi.StringOutput)
}

// The enable status of health check function.
func (o ListenersListenerOutput) HealthCheckEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.HealthCheckEnabled }).(pulumi.StringOutput)
}

// The healthy threshold of health check.
func (o ListenersListenerOutput) HealthCheckHealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.HealthCheckHealthyThreshold }).(pulumi.IntOutput)
}

// The normal http status code of health check.
func (o ListenersListenerOutput) HealthCheckHttpCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.HealthCheckHttpCode }).(pulumi.StringOutput)
}

// The interval executing health check.
func (o ListenersListenerOutput) HealthCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.HealthCheckInterval }).(pulumi.IntOutput)
}

// The method of health check.
func (o ListenersListenerOutput) HealthCheckMethod() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.HealthCheckMethod }).(pulumi.StringOutput)
}

// The response timeout of health check.
func (o ListenersListenerOutput) HealthCheckTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.HealthCheckTimeout }).(pulumi.IntOutput)
}

// The expected response string for the health check.
func (o ListenersListenerOutput) HealthCheckUdpExpect() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.HealthCheckUdpExpect }).(pulumi.StringOutput)
}

// A request string to perform a health check.
func (o ListenersListenerOutput) HealthCheckUdpRequest() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.HealthCheckUdpRequest }).(pulumi.StringOutput)
}

// The unhealthy threshold of health check.
func (o ListenersListenerOutput) HealthCheckUnHealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.HealthCheckUnHealthyThreshold }).(pulumi.IntOutput)
}

// The uri of health check.
func (o ListenersListenerOutput) HealthCheckUri() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.HealthCheckUri }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o ListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o ListenersListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The name of the Listener.
func (o ListenersListenerOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ListenerName }).(pulumi.StringOutput)
}

// The persistence timeout of the Listener.
func (o ListenersListenerOutput) PersistenceTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.PersistenceTimeout }).(pulumi.IntOutput)
}

// The persistence type of the Listener.
func (o ListenersListenerOutput) PersistenceType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.PersistenceType }).(pulumi.StringOutput)
}

// The port receiving request of the Listener.
func (o ListenersListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the Listener.
func (o ListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// Whether to enable proxy protocol.
func (o ListenersListenerOutput) ProxyProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ProxyProtocolType }).(pulumi.StringOutput)
}

// The ID of the backend server group which is associated with the Listener.
func (o ListenersListenerOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The status of the Listener.
func (o ListenersListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of the Listener.
func (o ListenersListenerOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type ListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (ListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListener)(nil)).Elem()
}

func (o ListenersListenerArrayOutput) ToListenersListenerArrayOutput() ListenersListenerArrayOutput {
	return o
}

func (o ListenersListenerArrayOutput) ToListenersListenerArrayOutputWithContext(ctx context.Context) ListenersListenerArrayOutput {
	return o
}

func (o ListenersListenerArrayOutput) Index(i pulumi.IntInput) ListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenersListener {
		return vs[0].([]ListenersListener)[vs[1].(int)]
	}).(ListenersListenerOutput)
}

type RulesRule struct {
	// The Description of Rule.
	Description string `pulumi:"description"`
	// The Domain of Rule.
	Domain string `pulumi:"domain"`
	// The Id of Rule.
	Id string `pulumi:"id"`
	// The Id of Rule.
	RuleId string `pulumi:"ruleId"`
	// The Id of Server Group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The Url of Rule.
	Url string `pulumi:"url"`
}

// RulesRuleInput is an input type that accepts RulesRuleArgs and RulesRuleOutput values.
// You can construct a concrete instance of `RulesRuleInput` via:
//
//	RulesRuleArgs{...}
type RulesRuleInput interface {
	pulumi.Input

	ToRulesRuleOutput() RulesRuleOutput
	ToRulesRuleOutputWithContext(context.Context) RulesRuleOutput
}

type RulesRuleArgs struct {
	// The Description of Rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The Domain of Rule.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The Id of Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The Id of Rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The Id of Server Group.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The Url of Rule.
	Url pulumi.StringInput `pulumi:"url"`
}

func (RulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRule)(nil)).Elem()
}

func (i RulesRuleArgs) ToRulesRuleOutput() RulesRuleOutput {
	return i.ToRulesRuleOutputWithContext(context.Background())
}

func (i RulesRuleArgs) ToRulesRuleOutputWithContext(ctx context.Context) RulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleOutput)
}

// RulesRuleArrayInput is an input type that accepts RulesRuleArray and RulesRuleArrayOutput values.
// You can construct a concrete instance of `RulesRuleArrayInput` via:
//
//	RulesRuleArray{ RulesRuleArgs{...} }
type RulesRuleArrayInput interface {
	pulumi.Input

	ToRulesRuleArrayOutput() RulesRuleArrayOutput
	ToRulesRuleArrayOutputWithContext(context.Context) RulesRuleArrayOutput
}

type RulesRuleArray []RulesRuleInput

func (RulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRule)(nil)).Elem()
}

func (i RulesRuleArray) ToRulesRuleArrayOutput() RulesRuleArrayOutput {
	return i.ToRulesRuleArrayOutputWithContext(context.Background())
}

func (i RulesRuleArray) ToRulesRuleArrayOutputWithContext(ctx context.Context) RulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleArrayOutput)
}

type RulesRuleOutput struct{ *pulumi.OutputState }

func (RulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRule)(nil)).Elem()
}

func (o RulesRuleOutput) ToRulesRuleOutput() RulesRuleOutput {
	return o
}

func (o RulesRuleOutput) ToRulesRuleOutputWithContext(ctx context.Context) RulesRuleOutput {
	return o
}

// The Description of Rule.
func (o RulesRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Description }).(pulumi.StringOutput)
}

// The Domain of Rule.
func (o RulesRuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Domain }).(pulumi.StringOutput)
}

// The Id of Rule.
func (o RulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The Id of Rule.
func (o RulesRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The Id of Server Group.
func (o RulesRuleOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The Url of Rule.
func (o RulesRuleOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Url }).(pulumi.StringOutput)
}

type RulesRuleArrayOutput struct{ *pulumi.OutputState }

func (RulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRule)(nil)).Elem()
}

func (o RulesRuleArrayOutput) ToRulesRuleArrayOutput() RulesRuleArrayOutput {
	return o
}

func (o RulesRuleArrayOutput) ToRulesRuleArrayOutputWithContext(ctx context.Context) RulesRuleArrayOutput {
	return o
}

func (o RulesRuleArrayOutput) Index(i pulumi.IntInput) RulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesRule {
		return vs[0].([]RulesRule)[vs[1].(int)]
	}).(RulesRuleOutput)
}

type ServerGroupServersServer struct {
	// The description of the instance.
	Description string `pulumi:"description"`
	// The server id of instance in ServerGroup.
	Id string `pulumi:"id"`
	// The ID of ecs instance or the network card bound to ecs instance.
	InstanceId string `pulumi:"instanceId"`
	// The private ip of the instance.
	Ip string `pulumi:"ip"`
	// The port receiving request.
	Port int `pulumi:"port"`
	// The server id of instance in ServerGroup.
	ServerId string `pulumi:"serverId"`
	// The type of instance. Optional choice contains `ecs`, `eni`.
	Type string `pulumi:"type"`
	// The weight of the instance.
	Weight int `pulumi:"weight"`
}

// ServerGroupServersServerInput is an input type that accepts ServerGroupServersServerArgs and ServerGroupServersServerOutput values.
// You can construct a concrete instance of `ServerGroupServersServerInput` via:
//
//	ServerGroupServersServerArgs{...}
type ServerGroupServersServerInput interface {
	pulumi.Input

	ToServerGroupServersServerOutput() ServerGroupServersServerOutput
	ToServerGroupServersServerOutputWithContext(context.Context) ServerGroupServersServerOutput
}

type ServerGroupServersServerArgs struct {
	// The description of the instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The server id of instance in ServerGroup.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of ecs instance or the network card bound to ecs instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The private ip of the instance.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The port receiving request.
	Port pulumi.IntInput `pulumi:"port"`
	// The server id of instance in ServerGroup.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The type of instance. Optional choice contains `ecs`, `eni`.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of the instance.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ServerGroupServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupServersServer)(nil)).Elem()
}

func (i ServerGroupServersServerArgs) ToServerGroupServersServerOutput() ServerGroupServersServerOutput {
	return i.ToServerGroupServersServerOutputWithContext(context.Background())
}

func (i ServerGroupServersServerArgs) ToServerGroupServersServerOutputWithContext(ctx context.Context) ServerGroupServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupServersServerOutput)
}

// ServerGroupServersServerArrayInput is an input type that accepts ServerGroupServersServerArray and ServerGroupServersServerArrayOutput values.
// You can construct a concrete instance of `ServerGroupServersServerArrayInput` via:
//
//	ServerGroupServersServerArray{ ServerGroupServersServerArgs{...} }
type ServerGroupServersServerArrayInput interface {
	pulumi.Input

	ToServerGroupServersServerArrayOutput() ServerGroupServersServerArrayOutput
	ToServerGroupServersServerArrayOutputWithContext(context.Context) ServerGroupServersServerArrayOutput
}

type ServerGroupServersServerArray []ServerGroupServersServerInput

func (ServerGroupServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupServersServer)(nil)).Elem()
}

func (i ServerGroupServersServerArray) ToServerGroupServersServerArrayOutput() ServerGroupServersServerArrayOutput {
	return i.ToServerGroupServersServerArrayOutputWithContext(context.Background())
}

func (i ServerGroupServersServerArray) ToServerGroupServersServerArrayOutputWithContext(ctx context.Context) ServerGroupServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupServersServerArrayOutput)
}

type ServerGroupServersServerOutput struct{ *pulumi.OutputState }

func (ServerGroupServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupServersServer)(nil)).Elem()
}

func (o ServerGroupServersServerOutput) ToServerGroupServersServerOutput() ServerGroupServersServerOutput {
	return o
}

func (o ServerGroupServersServerOutput) ToServerGroupServersServerOutputWithContext(ctx context.Context) ServerGroupServersServerOutput {
	return o
}

// The description of the instance.
func (o ServerGroupServersServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.Description }).(pulumi.StringOutput)
}

// The server id of instance in ServerGroup.
func (o ServerGroupServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of ecs instance or the network card bound to ecs instance.
func (o ServerGroupServersServerOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The private ip of the instance.
func (o ServerGroupServersServerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.Ip }).(pulumi.StringOutput)
}

// The port receiving request.
func (o ServerGroupServersServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupServersServer) int { return v.Port }).(pulumi.IntOutput)
}

// The server id of instance in ServerGroup.
func (o ServerGroupServersServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.ServerId }).(pulumi.StringOutput)
}

// The type of instance. Optional choice contains `ecs`, `eni`.
func (o ServerGroupServersServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of the instance.
func (o ServerGroupServersServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupServersServer) int { return v.Weight }).(pulumi.IntOutput)
}

type ServerGroupServersServerArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupServersServer)(nil)).Elem()
}

func (o ServerGroupServersServerArrayOutput) ToServerGroupServersServerArrayOutput() ServerGroupServersServerArrayOutput {
	return o
}

func (o ServerGroupServersServerArrayOutput) ToServerGroupServersServerArrayOutputWithContext(ctx context.Context) ServerGroupServersServerArrayOutput {
	return o
}

func (o ServerGroupServersServerArrayOutput) Index(i pulumi.IntInput) ServerGroupServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupServersServer {
		return vs[0].([]ServerGroupServersServer)[vs[1].(int)]
	}).(ServerGroupServersServerOutput)
}

type ServerGroupsGroup struct {
	// The address ip version of the ServerGroup.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// The create time of the ServerGroup.
	CreateTime string `pulumi:"createTime"`
	// The description of the ServerGroup.
	Description string `pulumi:"description"`
	// The ID of the ServerGroup.
	Id string `pulumi:"id"`
	// The ID of the ServerGroup.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The name of the ServerGroup.
	ServerGroupName string `pulumi:"serverGroupName"`
	// The update time of the ServerGroup.
	UpdateTime string `pulumi:"updateTime"`
}

// ServerGroupsGroupInput is an input type that accepts ServerGroupsGroupArgs and ServerGroupsGroupOutput values.
// You can construct a concrete instance of `ServerGroupsGroupInput` via:
//
//	ServerGroupsGroupArgs{...}
type ServerGroupsGroupInput interface {
	pulumi.Input

	ToServerGroupsGroupOutput() ServerGroupsGroupOutput
	ToServerGroupsGroupOutputWithContext(context.Context) ServerGroupsGroupOutput
}

type ServerGroupsGroupArgs struct {
	// The address ip version of the ServerGroup.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// The create time of the ServerGroup.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the ServerGroup.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the ServerGroup.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the ServerGroup.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The name of the ServerGroup.
	ServerGroupName pulumi.StringInput `pulumi:"serverGroupName"`
	// The update time of the ServerGroup.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (ServerGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsGroup)(nil)).Elem()
}

func (i ServerGroupsGroupArgs) ToServerGroupsGroupOutput() ServerGroupsGroupOutput {
	return i.ToServerGroupsGroupOutputWithContext(context.Background())
}

func (i ServerGroupsGroupArgs) ToServerGroupsGroupOutputWithContext(ctx context.Context) ServerGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsGroupOutput)
}

// ServerGroupsGroupArrayInput is an input type that accepts ServerGroupsGroupArray and ServerGroupsGroupArrayOutput values.
// You can construct a concrete instance of `ServerGroupsGroupArrayInput` via:
//
//	ServerGroupsGroupArray{ ServerGroupsGroupArgs{...} }
type ServerGroupsGroupArrayInput interface {
	pulumi.Input

	ToServerGroupsGroupArrayOutput() ServerGroupsGroupArrayOutput
	ToServerGroupsGroupArrayOutputWithContext(context.Context) ServerGroupsGroupArrayOutput
}

type ServerGroupsGroupArray []ServerGroupsGroupInput

func (ServerGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsGroup)(nil)).Elem()
}

func (i ServerGroupsGroupArray) ToServerGroupsGroupArrayOutput() ServerGroupsGroupArrayOutput {
	return i.ToServerGroupsGroupArrayOutputWithContext(context.Background())
}

func (i ServerGroupsGroupArray) ToServerGroupsGroupArrayOutputWithContext(ctx context.Context) ServerGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsGroupArrayOutput)
}

type ServerGroupsGroupOutput struct{ *pulumi.OutputState }

func (ServerGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsGroup)(nil)).Elem()
}

func (o ServerGroupsGroupOutput) ToServerGroupsGroupOutput() ServerGroupsGroupOutput {
	return o
}

func (o ServerGroupsGroupOutput) ToServerGroupsGroupOutputWithContext(ctx context.Context) ServerGroupsGroupOutput {
	return o
}

// The address ip version of the ServerGroup.
func (o ServerGroupsGroupOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsGroup) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The create time of the ServerGroup.
func (o ServerGroupsGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the ServerGroup.
func (o ServerGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the ServerGroup.
func (o ServerGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the ServerGroup.
func (o ServerGroupsGroupOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsGroup) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The name of the ServerGroup.
func (o ServerGroupsGroupOutput) ServerGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsGroup) string { return v.ServerGroupName }).(pulumi.StringOutput)
}

// The update time of the ServerGroup.
func (o ServerGroupsGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsGroup) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type ServerGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsGroup)(nil)).Elem()
}

func (o ServerGroupsGroupArrayOutput) ToServerGroupsGroupArrayOutput() ServerGroupsGroupArrayOutput {
	return o
}

func (o ServerGroupsGroupArrayOutput) ToServerGroupsGroupArrayOutputWithContext(ctx context.Context) ServerGroupsGroupArrayOutput {
	return o
}

func (o ServerGroupsGroupArrayOutput) Index(i pulumi.IntInput) ServerGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupsGroup {
		return vs[0].([]ServerGroupsGroup)[vs[1].(int)]
	}).(ServerGroupsGroupOutput)
}

type ZonesMasterZone struct {
	// The slave zones list.
	SlaveZones []ZonesMasterZoneSlaveZone `pulumi:"slaveZones"`
	// The master zone id.
	ZoneId string `pulumi:"zoneId"`
}

// ZonesMasterZoneInput is an input type that accepts ZonesMasterZoneArgs and ZonesMasterZoneOutput values.
// You can construct a concrete instance of `ZonesMasterZoneInput` via:
//
//	ZonesMasterZoneArgs{...}
type ZonesMasterZoneInput interface {
	pulumi.Input

	ToZonesMasterZoneOutput() ZonesMasterZoneOutput
	ToZonesMasterZoneOutputWithContext(context.Context) ZonesMasterZoneOutput
}

type ZonesMasterZoneArgs struct {
	// The slave zones list.
	SlaveZones ZonesMasterZoneSlaveZoneArrayInput `pulumi:"slaveZones"`
	// The master zone id.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (ZonesMasterZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesMasterZone)(nil)).Elem()
}

func (i ZonesMasterZoneArgs) ToZonesMasterZoneOutput() ZonesMasterZoneOutput {
	return i.ToZonesMasterZoneOutputWithContext(context.Background())
}

func (i ZonesMasterZoneArgs) ToZonesMasterZoneOutputWithContext(ctx context.Context) ZonesMasterZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesMasterZoneOutput)
}

// ZonesMasterZoneArrayInput is an input type that accepts ZonesMasterZoneArray and ZonesMasterZoneArrayOutput values.
// You can construct a concrete instance of `ZonesMasterZoneArrayInput` via:
//
//	ZonesMasterZoneArray{ ZonesMasterZoneArgs{...} }
type ZonesMasterZoneArrayInput interface {
	pulumi.Input

	ToZonesMasterZoneArrayOutput() ZonesMasterZoneArrayOutput
	ToZonesMasterZoneArrayOutputWithContext(context.Context) ZonesMasterZoneArrayOutput
}

type ZonesMasterZoneArray []ZonesMasterZoneInput

func (ZonesMasterZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesMasterZone)(nil)).Elem()
}

func (i ZonesMasterZoneArray) ToZonesMasterZoneArrayOutput() ZonesMasterZoneArrayOutput {
	return i.ToZonesMasterZoneArrayOutputWithContext(context.Background())
}

func (i ZonesMasterZoneArray) ToZonesMasterZoneArrayOutputWithContext(ctx context.Context) ZonesMasterZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesMasterZoneArrayOutput)
}

type ZonesMasterZoneOutput struct{ *pulumi.OutputState }

func (ZonesMasterZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesMasterZone)(nil)).Elem()
}

func (o ZonesMasterZoneOutput) ToZonesMasterZoneOutput() ZonesMasterZoneOutput {
	return o
}

func (o ZonesMasterZoneOutput) ToZonesMasterZoneOutputWithContext(ctx context.Context) ZonesMasterZoneOutput {
	return o
}

// The slave zones list.
func (o ZonesMasterZoneOutput) SlaveZones() ZonesMasterZoneSlaveZoneArrayOutput {
	return o.ApplyT(func(v ZonesMasterZone) []ZonesMasterZoneSlaveZone { return v.SlaveZones }).(ZonesMasterZoneSlaveZoneArrayOutput)
}

// The master zone id.
func (o ZonesMasterZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesMasterZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type ZonesMasterZoneArrayOutput struct{ *pulumi.OutputState }

func (ZonesMasterZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesMasterZone)(nil)).Elem()
}

func (o ZonesMasterZoneArrayOutput) ToZonesMasterZoneArrayOutput() ZonesMasterZoneArrayOutput {
	return o
}

func (o ZonesMasterZoneArrayOutput) ToZonesMasterZoneArrayOutputWithContext(ctx context.Context) ZonesMasterZoneArrayOutput {
	return o
}

func (o ZonesMasterZoneArrayOutput) Index(i pulumi.IntInput) ZonesMasterZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZonesMasterZone {
		return vs[0].([]ZonesMasterZone)[vs[1].(int)]
	}).(ZonesMasterZoneOutput)
}

type ZonesMasterZoneSlaveZone struct {
	// The master zone id.
	ZoneId string `pulumi:"zoneId"`
}

// ZonesMasterZoneSlaveZoneInput is an input type that accepts ZonesMasterZoneSlaveZoneArgs and ZonesMasterZoneSlaveZoneOutput values.
// You can construct a concrete instance of `ZonesMasterZoneSlaveZoneInput` via:
//
//	ZonesMasterZoneSlaveZoneArgs{...}
type ZonesMasterZoneSlaveZoneInput interface {
	pulumi.Input

	ToZonesMasterZoneSlaveZoneOutput() ZonesMasterZoneSlaveZoneOutput
	ToZonesMasterZoneSlaveZoneOutputWithContext(context.Context) ZonesMasterZoneSlaveZoneOutput
}

type ZonesMasterZoneSlaveZoneArgs struct {
	// The master zone id.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (ZonesMasterZoneSlaveZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesMasterZoneSlaveZone)(nil)).Elem()
}

func (i ZonesMasterZoneSlaveZoneArgs) ToZonesMasterZoneSlaveZoneOutput() ZonesMasterZoneSlaveZoneOutput {
	return i.ToZonesMasterZoneSlaveZoneOutputWithContext(context.Background())
}

func (i ZonesMasterZoneSlaveZoneArgs) ToZonesMasterZoneSlaveZoneOutputWithContext(ctx context.Context) ZonesMasterZoneSlaveZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesMasterZoneSlaveZoneOutput)
}

// ZonesMasterZoneSlaveZoneArrayInput is an input type that accepts ZonesMasterZoneSlaveZoneArray and ZonesMasterZoneSlaveZoneArrayOutput values.
// You can construct a concrete instance of `ZonesMasterZoneSlaveZoneArrayInput` via:
//
//	ZonesMasterZoneSlaveZoneArray{ ZonesMasterZoneSlaveZoneArgs{...} }
type ZonesMasterZoneSlaveZoneArrayInput interface {
	pulumi.Input

	ToZonesMasterZoneSlaveZoneArrayOutput() ZonesMasterZoneSlaveZoneArrayOutput
	ToZonesMasterZoneSlaveZoneArrayOutputWithContext(context.Context) ZonesMasterZoneSlaveZoneArrayOutput
}

type ZonesMasterZoneSlaveZoneArray []ZonesMasterZoneSlaveZoneInput

func (ZonesMasterZoneSlaveZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesMasterZoneSlaveZone)(nil)).Elem()
}

func (i ZonesMasterZoneSlaveZoneArray) ToZonesMasterZoneSlaveZoneArrayOutput() ZonesMasterZoneSlaveZoneArrayOutput {
	return i.ToZonesMasterZoneSlaveZoneArrayOutputWithContext(context.Background())
}

func (i ZonesMasterZoneSlaveZoneArray) ToZonesMasterZoneSlaveZoneArrayOutputWithContext(ctx context.Context) ZonesMasterZoneSlaveZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesMasterZoneSlaveZoneArrayOutput)
}

type ZonesMasterZoneSlaveZoneOutput struct{ *pulumi.OutputState }

func (ZonesMasterZoneSlaveZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesMasterZoneSlaveZone)(nil)).Elem()
}

func (o ZonesMasterZoneSlaveZoneOutput) ToZonesMasterZoneSlaveZoneOutput() ZonesMasterZoneSlaveZoneOutput {
	return o
}

func (o ZonesMasterZoneSlaveZoneOutput) ToZonesMasterZoneSlaveZoneOutputWithContext(ctx context.Context) ZonesMasterZoneSlaveZoneOutput {
	return o
}

// The master zone id.
func (o ZonesMasterZoneSlaveZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesMasterZoneSlaveZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type ZonesMasterZoneSlaveZoneArrayOutput struct{ *pulumi.OutputState }

func (ZonesMasterZoneSlaveZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesMasterZoneSlaveZone)(nil)).Elem()
}

func (o ZonesMasterZoneSlaveZoneArrayOutput) ToZonesMasterZoneSlaveZoneArrayOutput() ZonesMasterZoneSlaveZoneArrayOutput {
	return o
}

func (o ZonesMasterZoneSlaveZoneArrayOutput) ToZonesMasterZoneSlaveZoneArrayOutputWithContext(ctx context.Context) ZonesMasterZoneSlaveZoneArrayOutput {
	return o
}

func (o ZonesMasterZoneSlaveZoneArrayOutput) Index(i pulumi.IntInput) ZonesMasterZoneSlaveZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZonesMasterZoneSlaveZone {
		return vs[0].([]ZonesMasterZoneSlaveZone)[vs[1].(int)]
	}).(ZonesMasterZoneSlaveZoneOutput)
}

type GetAclsAcl struct {
	// The count of acl entry.
	AclEntryCount int `pulumi:"aclEntryCount"`
	// The ID of Acl.
	AclId string `pulumi:"aclId"`
	// The name of acl.
	AclName string `pulumi:"aclName"`
	// Creation time of Acl.
	CreateTime string `pulumi:"createTime"`
	// The description of Acl.
	Description string `pulumi:"description"`
	// The ID of Acl.
	Id string `pulumi:"id"`
	// The listeners of Acl.
	Listeners []string `pulumi:"listeners"`
	// The ProjectName of Acl.
	ProjectName string `pulumi:"projectName"`
	// Update time of Acl.
	UpdateTime string `pulumi:"updateTime"`
}

// GetAclsAclInput is an input type that accepts GetAclsAclArgs and GetAclsAclOutput values.
// You can construct a concrete instance of `GetAclsAclInput` via:
//
//	GetAclsAclArgs{...}
type GetAclsAclInput interface {
	pulumi.Input

	ToGetAclsAclOutput() GetAclsAclOutput
	ToGetAclsAclOutputWithContext(context.Context) GetAclsAclOutput
}

type GetAclsAclArgs struct {
	// The count of acl entry.
	AclEntryCount pulumi.IntInput `pulumi:"aclEntryCount"`
	// The ID of Acl.
	AclId pulumi.StringInput `pulumi:"aclId"`
	// The name of acl.
	AclName pulumi.StringInput `pulumi:"aclName"`
	// Creation time of Acl.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of Acl.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of Acl.
	Id pulumi.StringInput `pulumi:"id"`
	// The listeners of Acl.
	Listeners pulumi.StringArrayInput `pulumi:"listeners"`
	// The ProjectName of Acl.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Update time of Acl.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetAclsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAcl)(nil)).Elem()
}

func (i GetAclsAclArgs) ToGetAclsAclOutput() GetAclsAclOutput {
	return i.ToGetAclsAclOutputWithContext(context.Background())
}

func (i GetAclsAclArgs) ToGetAclsAclOutputWithContext(ctx context.Context) GetAclsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclOutput)
}

// GetAclsAclArrayInput is an input type that accepts GetAclsAclArray and GetAclsAclArrayOutput values.
// You can construct a concrete instance of `GetAclsAclArrayInput` via:
//
//	GetAclsAclArray{ GetAclsAclArgs{...} }
type GetAclsAclArrayInput interface {
	pulumi.Input

	ToGetAclsAclArrayOutput() GetAclsAclArrayOutput
	ToGetAclsAclArrayOutputWithContext(context.Context) GetAclsAclArrayOutput
}

type GetAclsAclArray []GetAclsAclInput

func (GetAclsAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAcl)(nil)).Elem()
}

func (i GetAclsAclArray) ToGetAclsAclArrayOutput() GetAclsAclArrayOutput {
	return i.ToGetAclsAclArrayOutputWithContext(context.Background())
}

func (i GetAclsAclArray) ToGetAclsAclArrayOutputWithContext(ctx context.Context) GetAclsAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAclsAclArrayOutput)
}

type GetAclsAclOutput struct{ *pulumi.OutputState }

func (GetAclsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsAcl)(nil)).Elem()
}

func (o GetAclsAclOutput) ToGetAclsAclOutput() GetAclsAclOutput {
	return o
}

func (o GetAclsAclOutput) ToGetAclsAclOutputWithContext(ctx context.Context) GetAclsAclOutput {
	return o
}

// The count of acl entry.
func (o GetAclsAclOutput) AclEntryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAclsAcl) int { return v.AclEntryCount }).(pulumi.IntOutput)
}

// The ID of Acl.
func (o GetAclsAclOutput) AclId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.AclId }).(pulumi.StringOutput)
}

// The name of acl.
func (o GetAclsAclOutput) AclName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.AclName }).(pulumi.StringOutput)
}

// Creation time of Acl.
func (o GetAclsAclOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of Acl.
func (o GetAclsAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of Acl.
func (o GetAclsAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.Id }).(pulumi.StringOutput)
}

// The listeners of Acl.
func (o GetAclsAclOutput) Listeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAclsAcl) []string { return v.Listeners }).(pulumi.StringArrayOutput)
}

// The ProjectName of Acl.
func (o GetAclsAclOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Update time of Acl.
func (o GetAclsAclOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsAcl) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetAclsAclArrayOutput struct{ *pulumi.OutputState }

func (GetAclsAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAclsAcl)(nil)).Elem()
}

func (o GetAclsAclArrayOutput) ToGetAclsAclArrayOutput() GetAclsAclArrayOutput {
	return o
}

func (o GetAclsAclArrayOutput) ToGetAclsAclArrayOutputWithContext(ctx context.Context) GetAclsAclArrayOutput {
	return o
}

func (o GetAclsAclArrayOutput) Index(i pulumi.IntInput) GetAclsAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAclsAcl {
		return vs[0].([]GetAclsAcl)[vs[1].(int)]
	}).(GetAclsAclOutput)
}

type GetCertificatesCertificate struct {
	// The ID of the Certificate.
	CertificateId string `pulumi:"certificateId"`
	// The name of the Certificate.
	CertificateName string `pulumi:"certificateName"`
	// The create time of the Certificate.
	CreateTime string `pulumi:"createTime"`
	// The description of the Certificate.
	Description string `pulumi:"description"`
	// The domain name of the Certificate.
	DomainName string `pulumi:"domainName"`
	// The expire time of the Certificate.
	ExpiredAt string `pulumi:"expiredAt"`
	// The ID of the Certificate.
	Id string `pulumi:"id"`
	// The ID list of the Listener.
	Listeners []string `pulumi:"listeners"`
	// The ProjectName of Certificate.
	ProjectName string `pulumi:"projectName"`
	// Tags.
	Tags []GetCertificatesCertificateTag `pulumi:"tags"`
}

// GetCertificatesCertificateInput is an input type that accepts GetCertificatesCertificateArgs and GetCertificatesCertificateOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateInput` via:
//
//	GetCertificatesCertificateArgs{...}
type GetCertificatesCertificateInput interface {
	pulumi.Input

	ToGetCertificatesCertificateOutput() GetCertificatesCertificateOutput
	ToGetCertificatesCertificateOutputWithContext(context.Context) GetCertificatesCertificateOutput
}

type GetCertificatesCertificateArgs struct {
	// The ID of the Certificate.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The name of the Certificate.
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// The create time of the Certificate.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the Certificate.
	Description pulumi.StringInput `pulumi:"description"`
	// The domain name of the Certificate.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The expire time of the Certificate.
	ExpiredAt pulumi.StringInput `pulumi:"expiredAt"`
	// The ID of the Certificate.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID list of the Listener.
	Listeners pulumi.StringArrayInput `pulumi:"listeners"`
	// The ProjectName of Certificate.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Tags.
	Tags GetCertificatesCertificateTagArrayInput `pulumi:"tags"`
}

func (GetCertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificate)(nil)).Elem()
}

func (i GetCertificatesCertificateArgs) ToGetCertificatesCertificateOutput() GetCertificatesCertificateOutput {
	return i.ToGetCertificatesCertificateOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateArgs) ToGetCertificatesCertificateOutputWithContext(ctx context.Context) GetCertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateOutput)
}

// GetCertificatesCertificateArrayInput is an input type that accepts GetCertificatesCertificateArray and GetCertificatesCertificateArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateArrayInput` via:
//
//	GetCertificatesCertificateArray{ GetCertificatesCertificateArgs{...} }
type GetCertificatesCertificateArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateArrayOutput() GetCertificatesCertificateArrayOutput
	ToGetCertificatesCertificateArrayOutputWithContext(context.Context) GetCertificatesCertificateArrayOutput
}

type GetCertificatesCertificateArray []GetCertificatesCertificateInput

func (GetCertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificate)(nil)).Elem()
}

func (i GetCertificatesCertificateArray) ToGetCertificatesCertificateArrayOutput() GetCertificatesCertificateArrayOutput {
	return i.ToGetCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateArray) ToGetCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateArrayOutput)
}

type GetCertificatesCertificateOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificate)(nil)).Elem()
}

func (o GetCertificatesCertificateOutput) ToGetCertificatesCertificateOutput() GetCertificatesCertificateOutput {
	return o
}

func (o GetCertificatesCertificateOutput) ToGetCertificatesCertificateOutputWithContext(ctx context.Context) GetCertificatesCertificateOutput {
	return o
}

// The ID of the Certificate.
func (o GetCertificatesCertificateOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The name of the Certificate.
func (o GetCertificatesCertificateOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) string { return v.CertificateName }).(pulumi.StringOutput)
}

// The create time of the Certificate.
func (o GetCertificatesCertificateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the Certificate.
func (o GetCertificatesCertificateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) string { return v.Description }).(pulumi.StringOutput)
}

// The domain name of the Certificate.
func (o GetCertificatesCertificateOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) string { return v.DomainName }).(pulumi.StringOutput)
}

// The expire time of the Certificate.
func (o GetCertificatesCertificateOutput) ExpiredAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) string { return v.ExpiredAt }).(pulumi.StringOutput)
}

// The ID of the Certificate.
func (o GetCertificatesCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The ID list of the Listener.
func (o GetCertificatesCertificateOutput) Listeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) []string { return v.Listeners }).(pulumi.StringArrayOutput)
}

// The ProjectName of Certificate.
func (o GetCertificatesCertificateOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Tags.
func (o GetCertificatesCertificateOutput) Tags() GetCertificatesCertificateTagArrayOutput {
	return o.ApplyT(func(v GetCertificatesCertificate) []GetCertificatesCertificateTag { return v.Tags }).(GetCertificatesCertificateTagArrayOutput)
}

type GetCertificatesCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificate)(nil)).Elem()
}

func (o GetCertificatesCertificateArrayOutput) ToGetCertificatesCertificateArrayOutput() GetCertificatesCertificateArrayOutput {
	return o
}

func (o GetCertificatesCertificateArrayOutput) ToGetCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateArrayOutput {
	return o
}

func (o GetCertificatesCertificateArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificate {
		return vs[0].([]GetCertificatesCertificate)[vs[1].(int)]
	}).(GetCertificatesCertificateOutput)
}

type GetCertificatesCertificateTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetCertificatesCertificateTagInput is an input type that accepts GetCertificatesCertificateTagArgs and GetCertificatesCertificateTagOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateTagInput` via:
//
//	GetCertificatesCertificateTagArgs{...}
type GetCertificatesCertificateTagInput interface {
	pulumi.Input

	ToGetCertificatesCertificateTagOutput() GetCertificatesCertificateTagOutput
	ToGetCertificatesCertificateTagOutputWithContext(context.Context) GetCertificatesCertificateTagOutput
}

type GetCertificatesCertificateTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificatesCertificateTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateTag)(nil)).Elem()
}

func (i GetCertificatesCertificateTagArgs) ToGetCertificatesCertificateTagOutput() GetCertificatesCertificateTagOutput {
	return i.ToGetCertificatesCertificateTagOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateTagArgs) ToGetCertificatesCertificateTagOutputWithContext(ctx context.Context) GetCertificatesCertificateTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateTagOutput)
}

// GetCertificatesCertificateTagArrayInput is an input type that accepts GetCertificatesCertificateTagArray and GetCertificatesCertificateTagArrayOutput values.
// You can construct a concrete instance of `GetCertificatesCertificateTagArrayInput` via:
//
//	GetCertificatesCertificateTagArray{ GetCertificatesCertificateTagArgs{...} }
type GetCertificatesCertificateTagArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateTagArrayOutput() GetCertificatesCertificateTagArrayOutput
	ToGetCertificatesCertificateTagArrayOutputWithContext(context.Context) GetCertificatesCertificateTagArrayOutput
}

type GetCertificatesCertificateTagArray []GetCertificatesCertificateTagInput

func (GetCertificatesCertificateTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateTag)(nil)).Elem()
}

func (i GetCertificatesCertificateTagArray) ToGetCertificatesCertificateTagArrayOutput() GetCertificatesCertificateTagArrayOutput {
	return i.ToGetCertificatesCertificateTagArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateTagArray) ToGetCertificatesCertificateTagArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateTagArrayOutput)
}

type GetCertificatesCertificateTagOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificateTag)(nil)).Elem()
}

func (o GetCertificatesCertificateTagOutput) ToGetCertificatesCertificateTagOutput() GetCertificatesCertificateTagOutput {
	return o
}

func (o GetCertificatesCertificateTagOutput) ToGetCertificatesCertificateTagOutputWithContext(ctx context.Context) GetCertificatesCertificateTagOutput {
	return o
}

// The Key of Tags.
func (o GetCertificatesCertificateTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetCertificatesCertificateTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesCertificateTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetCertificatesCertificateTagArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesCertificateTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificateTag)(nil)).Elem()
}

func (o GetCertificatesCertificateTagArrayOutput) ToGetCertificatesCertificateTagArrayOutput() GetCertificatesCertificateTagArrayOutput {
	return o
}

func (o GetCertificatesCertificateTagArrayOutput) ToGetCertificatesCertificateTagArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateTagArrayOutput {
	return o
}

func (o GetCertificatesCertificateTagArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesCertificateTag {
		return vs[0].([]GetCertificatesCertificateTag)[vs[1].(int)]
	}).(GetCertificatesCertificateTagOutput)
}

type GetCertificatesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetCertificatesTagInput is an input type that accepts GetCertificatesTagArgs and GetCertificatesTagOutput values.
// You can construct a concrete instance of `GetCertificatesTagInput` via:
//
//	GetCertificatesTagArgs{...}
type GetCertificatesTagInput interface {
	pulumi.Input

	ToGetCertificatesTagOutput() GetCertificatesTagOutput
	ToGetCertificatesTagOutputWithContext(context.Context) GetCertificatesTagOutput
}

type GetCertificatesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCertificatesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesTag)(nil)).Elem()
}

func (i GetCertificatesTagArgs) ToGetCertificatesTagOutput() GetCertificatesTagOutput {
	return i.ToGetCertificatesTagOutputWithContext(context.Background())
}

func (i GetCertificatesTagArgs) ToGetCertificatesTagOutputWithContext(ctx context.Context) GetCertificatesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesTagOutput)
}

// GetCertificatesTagArrayInput is an input type that accepts GetCertificatesTagArray and GetCertificatesTagArrayOutput values.
// You can construct a concrete instance of `GetCertificatesTagArrayInput` via:
//
//	GetCertificatesTagArray{ GetCertificatesTagArgs{...} }
type GetCertificatesTagArrayInput interface {
	pulumi.Input

	ToGetCertificatesTagArrayOutput() GetCertificatesTagArrayOutput
	ToGetCertificatesTagArrayOutputWithContext(context.Context) GetCertificatesTagArrayOutput
}

type GetCertificatesTagArray []GetCertificatesTagInput

func (GetCertificatesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesTag)(nil)).Elem()
}

func (i GetCertificatesTagArray) ToGetCertificatesTagArrayOutput() GetCertificatesTagArrayOutput {
	return i.ToGetCertificatesTagArrayOutputWithContext(context.Background())
}

func (i GetCertificatesTagArray) ToGetCertificatesTagArrayOutputWithContext(ctx context.Context) GetCertificatesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesTagArrayOutput)
}

type GetCertificatesTagOutput struct{ *pulumi.OutputState }

func (GetCertificatesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesTag)(nil)).Elem()
}

func (o GetCertificatesTagOutput) ToGetCertificatesTagOutput() GetCertificatesTagOutput {
	return o
}

func (o GetCertificatesTagOutput) ToGetCertificatesTagOutputWithContext(ctx context.Context) GetCertificatesTagOutput {
	return o
}

// The Key of Tags.
func (o GetCertificatesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetCertificatesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificatesTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetCertificatesTagArrayOutput struct{ *pulumi.OutputState }

func (GetCertificatesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesTag)(nil)).Elem()
}

func (o GetCertificatesTagArrayOutput) ToGetCertificatesTagArrayOutput() GetCertificatesTagArrayOutput {
	return o
}

func (o GetCertificatesTagArrayOutput) ToGetCertificatesTagArrayOutputWithContext(ctx context.Context) GetCertificatesTagArrayOutput {
	return o
}

func (o GetCertificatesTagArrayOutput) Index(i pulumi.IntInput) GetCertificatesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCertificatesTag {
		return vs[0].([]GetCertificatesTag)[vs[1].(int)]
	}).(GetCertificatesTagOutput)
}

type GetClbsClb struct {
	// The address ip version of the Clb.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// The business status of the Clb.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time of the Clb.
	CreateTime string `pulumi:"createTime"`
	// The expected recycle time of the Clb.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of the Clb.
	Description string `pulumi:"description"`
	// The Eip address of the Clb.
	EipAddress string `pulumi:"eipAddress"`
	// The eip billing config of the Clb.
	EipBillingConfigs []GetClbsClbEipBillingConfig `pulumi:"eipBillingConfigs"`
	// The Eip ID of the Clb.
	EipId string `pulumi:"eipId"`
	// The private ip address of the Clb.
	EniAddress string `pulumi:"eniAddress"`
	// The Eni ID of the Clb.
	EniId string `pulumi:"eniId"`
	// The eni ipv6 address of the Clb.
	EniIpv6Address string `pulumi:"eniIpv6Address"`
	// The expired time of the CLB.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the Clb.
	Id string `pulumi:"id"`
	// The billing status of the CLB.
	InstanceStatus int `pulumi:"instanceStatus"`
	// The ipv6 address bandwidth information of the Clb.
	Ipv6AddressBandwidths []GetClbsClbIpv6AddressBandwidth `pulumi:"ipv6AddressBandwidths"`
	// The Ipv6 Eip ID of the Clb.
	Ipv6EipId string `pulumi:"ipv6EipId"`
	// The billing type of the Clb.
	LoadBalancerBillingType string `pulumi:"loadBalancerBillingType"`
	// The ID of the Clb.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The name of the Clb.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// The specifications of the Clb.
	LoadBalancerSpec string `pulumi:"loadBalancerSpec"`
	// The reason why Clb is locked.
	LockReason string `pulumi:"lockReason"`
	// The master zone ID of the CLB.
	MasterZoneId string `pulumi:"masterZoneId"`
	// The modification protection reason of the Clb.
	ModificationProtectionReason string `pulumi:"modificationProtectionReason"`
	// The modification protection status of the Clb.
	ModificationProtectionStatus string `pulumi:"modificationProtectionStatus"`
	// The over reclaim time of the CLB.
	OverdueReclaimTime string `pulumi:"overdueReclaimTime"`
	// The overdue time of the Clb.
	OverdueTime string `pulumi:"overdueTime"`
	// The ProjectName of Clb.
	ProjectName string `pulumi:"projectName"`
	// The reclaim time of the CLB.
	ReclaimTime string `pulumi:"reclaimTime"`
	// The remain renew times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
	RemainRenewTimes int `pulumi:"remainRenewTimes"`
	// The renew period times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
	RenewPeriodTimes int `pulumi:"renewPeriodTimes"`
	// The renew type of the CLB. When the value of the loadBalancerBillingType is `PrePaid`, the query returns this field.
	RenewType string `pulumi:"renewType"`
	// The slave zone ID of the CLB.
	SlaveZoneId string `pulumi:"slaveZoneId"`
	// The status of the Clb.
	Status string `pulumi:"status"`
	// The subnet ID of the Clb.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []GetClbsClbTag `pulumi:"tags"`
	// The type of the Clb.
	Type string `pulumi:"type"`
	// The update time of the Clb.
	UpdateTime string `pulumi:"updateTime"`
	// The id of the VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetClbsClbInput is an input type that accepts GetClbsClbArgs and GetClbsClbOutput values.
// You can construct a concrete instance of `GetClbsClbInput` via:
//
//	GetClbsClbArgs{...}
type GetClbsClbInput interface {
	pulumi.Input

	ToGetClbsClbOutput() GetClbsClbOutput
	ToGetClbsClbOutputWithContext(context.Context) GetClbsClbOutput
}

type GetClbsClbArgs struct {
	// The address ip version of the Clb.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// The business status of the Clb.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time of the Clb.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The expected recycle time of the Clb.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of the Clb.
	Description pulumi.StringInput `pulumi:"description"`
	// The Eip address of the Clb.
	EipAddress pulumi.StringInput `pulumi:"eipAddress"`
	// The eip billing config of the Clb.
	EipBillingConfigs GetClbsClbEipBillingConfigArrayInput `pulumi:"eipBillingConfigs"`
	// The Eip ID of the Clb.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// The private ip address of the Clb.
	EniAddress pulumi.StringInput `pulumi:"eniAddress"`
	// The Eni ID of the Clb.
	EniId pulumi.StringInput `pulumi:"eniId"`
	// The eni ipv6 address of the Clb.
	EniIpv6Address pulumi.StringInput `pulumi:"eniIpv6Address"`
	// The expired time of the CLB.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the Clb.
	Id pulumi.StringInput `pulumi:"id"`
	// The billing status of the CLB.
	InstanceStatus pulumi.IntInput `pulumi:"instanceStatus"`
	// The ipv6 address bandwidth information of the Clb.
	Ipv6AddressBandwidths GetClbsClbIpv6AddressBandwidthArrayInput `pulumi:"ipv6AddressBandwidths"`
	// The Ipv6 Eip ID of the Clb.
	Ipv6EipId pulumi.StringInput `pulumi:"ipv6EipId"`
	// The billing type of the Clb.
	LoadBalancerBillingType pulumi.StringInput `pulumi:"loadBalancerBillingType"`
	// The ID of the Clb.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// The name of the Clb.
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	// The specifications of the Clb.
	LoadBalancerSpec pulumi.StringInput `pulumi:"loadBalancerSpec"`
	// The reason why Clb is locked.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The master zone ID of the CLB.
	MasterZoneId pulumi.StringInput `pulumi:"masterZoneId"`
	// The modification protection reason of the Clb.
	ModificationProtectionReason pulumi.StringInput `pulumi:"modificationProtectionReason"`
	// The modification protection status of the Clb.
	ModificationProtectionStatus pulumi.StringInput `pulumi:"modificationProtectionStatus"`
	// The over reclaim time of the CLB.
	OverdueReclaimTime pulumi.StringInput `pulumi:"overdueReclaimTime"`
	// The overdue time of the Clb.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The ProjectName of Clb.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The reclaim time of the CLB.
	ReclaimTime pulumi.StringInput `pulumi:"reclaimTime"`
	// The remain renew times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
	RemainRenewTimes pulumi.IntInput `pulumi:"remainRenewTimes"`
	// The renew period times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
	RenewPeriodTimes pulumi.IntInput `pulumi:"renewPeriodTimes"`
	// The renew type of the CLB. When the value of the loadBalancerBillingType is `PrePaid`, the query returns this field.
	RenewType pulumi.StringInput `pulumi:"renewType"`
	// The slave zone ID of the CLB.
	SlaveZoneId pulumi.StringInput `pulumi:"slaveZoneId"`
	// The status of the Clb.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet ID of the Clb.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags GetClbsClbTagArrayInput `pulumi:"tags"`
	// The type of the Clb.
	Type pulumi.StringInput `pulumi:"type"`
	// The update time of the Clb.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The id of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetClbsClbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsClb)(nil)).Elem()
}

func (i GetClbsClbArgs) ToGetClbsClbOutput() GetClbsClbOutput {
	return i.ToGetClbsClbOutputWithContext(context.Background())
}

func (i GetClbsClbArgs) ToGetClbsClbOutputWithContext(ctx context.Context) GetClbsClbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsClbOutput)
}

// GetClbsClbArrayInput is an input type that accepts GetClbsClbArray and GetClbsClbArrayOutput values.
// You can construct a concrete instance of `GetClbsClbArrayInput` via:
//
//	GetClbsClbArray{ GetClbsClbArgs{...} }
type GetClbsClbArrayInput interface {
	pulumi.Input

	ToGetClbsClbArrayOutput() GetClbsClbArrayOutput
	ToGetClbsClbArrayOutputWithContext(context.Context) GetClbsClbArrayOutput
}

type GetClbsClbArray []GetClbsClbInput

func (GetClbsClbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsClb)(nil)).Elem()
}

func (i GetClbsClbArray) ToGetClbsClbArrayOutput() GetClbsClbArrayOutput {
	return i.ToGetClbsClbArrayOutputWithContext(context.Background())
}

func (i GetClbsClbArray) ToGetClbsClbArrayOutputWithContext(ctx context.Context) GetClbsClbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsClbArrayOutput)
}

type GetClbsClbOutput struct{ *pulumi.OutputState }

func (GetClbsClbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsClb)(nil)).Elem()
}

func (o GetClbsClbOutput) ToGetClbsClbOutput() GetClbsClbOutput {
	return o
}

func (o GetClbsClbOutput) ToGetClbsClbOutputWithContext(ctx context.Context) GetClbsClbOutput {
	return o
}

// The address ip version of the Clb.
func (o GetClbsClbOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The business status of the Clb.
func (o GetClbsClbOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time of the Clb.
func (o GetClbsClbOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The expected recycle time of the Clb.
func (o GetClbsClbOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the Clb.
func (o GetClbsClbOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.Description }).(pulumi.StringOutput)
}

// The Eip address of the Clb.
func (o GetClbsClbOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.EipAddress }).(pulumi.StringOutput)
}

// The eip billing config of the Clb.
func (o GetClbsClbOutput) EipBillingConfigs() GetClbsClbEipBillingConfigArrayOutput {
	return o.ApplyT(func(v GetClbsClb) []GetClbsClbEipBillingConfig { return v.EipBillingConfigs }).(GetClbsClbEipBillingConfigArrayOutput)
}

// The Eip ID of the Clb.
func (o GetClbsClbOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.EipId }).(pulumi.StringOutput)
}

// The private ip address of the Clb.
func (o GetClbsClbOutput) EniAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.EniAddress }).(pulumi.StringOutput)
}

// The Eni ID of the Clb.
func (o GetClbsClbOutput) EniId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.EniId }).(pulumi.StringOutput)
}

// The eni ipv6 address of the Clb.
func (o GetClbsClbOutput) EniIpv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.EniIpv6Address }).(pulumi.StringOutput)
}

// The expired time of the CLB.
func (o GetClbsClbOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the Clb.
func (o GetClbsClbOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.Id }).(pulumi.StringOutput)
}

// The billing status of the CLB.
func (o GetClbsClbOutput) InstanceStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetClbsClb) int { return v.InstanceStatus }).(pulumi.IntOutput)
}

// The ipv6 address bandwidth information of the Clb.
func (o GetClbsClbOutput) Ipv6AddressBandwidths() GetClbsClbIpv6AddressBandwidthArrayOutput {
	return o.ApplyT(func(v GetClbsClb) []GetClbsClbIpv6AddressBandwidth { return v.Ipv6AddressBandwidths }).(GetClbsClbIpv6AddressBandwidthArrayOutput)
}

// The Ipv6 Eip ID of the Clb.
func (o GetClbsClbOutput) Ipv6EipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.Ipv6EipId }).(pulumi.StringOutput)
}

// The billing type of the Clb.
func (o GetClbsClbOutput) LoadBalancerBillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.LoadBalancerBillingType }).(pulumi.StringOutput)
}

// The ID of the Clb.
func (o GetClbsClbOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// The name of the Clb.
func (o GetClbsClbOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// The specifications of the Clb.
func (o GetClbsClbOutput) LoadBalancerSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.LoadBalancerSpec }).(pulumi.StringOutput)
}

// The reason why Clb is locked.
func (o GetClbsClbOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.LockReason }).(pulumi.StringOutput)
}

// The master zone ID of the CLB.
func (o GetClbsClbOutput) MasterZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.MasterZoneId }).(pulumi.StringOutput)
}

// The modification protection reason of the Clb.
func (o GetClbsClbOutput) ModificationProtectionReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.ModificationProtectionReason }).(pulumi.StringOutput)
}

// The modification protection status of the Clb.
func (o GetClbsClbOutput) ModificationProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.ModificationProtectionStatus }).(pulumi.StringOutput)
}

// The over reclaim time of the CLB.
func (o GetClbsClbOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// The overdue time of the Clb.
func (o GetClbsClbOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The ProjectName of Clb.
func (o GetClbsClbOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The reclaim time of the CLB.
func (o GetClbsClbOutput) ReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.ReclaimTime }).(pulumi.StringOutput)
}

// The remain renew times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
func (o GetClbsClbOutput) RemainRenewTimes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClbsClb) int { return v.RemainRenewTimes }).(pulumi.IntOutput)
}

// The renew period times of the CLB. When the value of the renewType is `AutoRenew`, the query returns this field.
func (o GetClbsClbOutput) RenewPeriodTimes() pulumi.IntOutput {
	return o.ApplyT(func(v GetClbsClb) int { return v.RenewPeriodTimes }).(pulumi.IntOutput)
}

// The renew type of the CLB. When the value of the loadBalancerBillingType is `PrePaid`, the query returns this field.
func (o GetClbsClbOutput) RenewType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.RenewType }).(pulumi.StringOutput)
}

// The slave zone ID of the CLB.
func (o GetClbsClbOutput) SlaveZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.SlaveZoneId }).(pulumi.StringOutput)
}

// The status of the Clb.
func (o GetClbsClbOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet ID of the Clb.
func (o GetClbsClbOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o GetClbsClbOutput) Tags() GetClbsClbTagArrayOutput {
	return o.ApplyT(func(v GetClbsClb) []GetClbsClbTag { return v.Tags }).(GetClbsClbTagArrayOutput)
}

// The type of the Clb.
func (o GetClbsClbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.Type }).(pulumi.StringOutput)
}

// The update time of the Clb.
func (o GetClbsClbOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of the VPC.
func (o GetClbsClbOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClb) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetClbsClbArrayOutput struct{ *pulumi.OutputState }

func (GetClbsClbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsClb)(nil)).Elem()
}

func (o GetClbsClbArrayOutput) ToGetClbsClbArrayOutput() GetClbsClbArrayOutput {
	return o
}

func (o GetClbsClbArrayOutput) ToGetClbsClbArrayOutputWithContext(ctx context.Context) GetClbsClbArrayOutput {
	return o
}

func (o GetClbsClbArrayOutput) Index(i pulumi.IntInput) GetClbsClbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClbsClb {
		return vs[0].([]GetClbsClb)[vs[1].(int)]
	}).(GetClbsClbOutput)
}

type GetClbsClbEipBillingConfig struct {
	// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing type of the EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.
	EipBillingType string `pulumi:"eipBillingType"`
	// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
	Isp string `pulumi:"isp"`
}

// GetClbsClbEipBillingConfigInput is an input type that accepts GetClbsClbEipBillingConfigArgs and GetClbsClbEipBillingConfigOutput values.
// You can construct a concrete instance of `GetClbsClbEipBillingConfigInput` via:
//
//	GetClbsClbEipBillingConfigArgs{...}
type GetClbsClbEipBillingConfigInput interface {
	pulumi.Input

	ToGetClbsClbEipBillingConfigOutput() GetClbsClbEipBillingConfigOutput
	ToGetClbsClbEipBillingConfigOutputWithContext(context.Context) GetClbsClbEipBillingConfigOutput
}

type GetClbsClbEipBillingConfigArgs struct {
	// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing type of the EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.
	EipBillingType pulumi.StringInput `pulumi:"eipBillingType"`
	// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (GetClbsClbEipBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsClbEipBillingConfig)(nil)).Elem()
}

func (i GetClbsClbEipBillingConfigArgs) ToGetClbsClbEipBillingConfigOutput() GetClbsClbEipBillingConfigOutput {
	return i.ToGetClbsClbEipBillingConfigOutputWithContext(context.Background())
}

func (i GetClbsClbEipBillingConfigArgs) ToGetClbsClbEipBillingConfigOutputWithContext(ctx context.Context) GetClbsClbEipBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsClbEipBillingConfigOutput)
}

// GetClbsClbEipBillingConfigArrayInput is an input type that accepts GetClbsClbEipBillingConfigArray and GetClbsClbEipBillingConfigArrayOutput values.
// You can construct a concrete instance of `GetClbsClbEipBillingConfigArrayInput` via:
//
//	GetClbsClbEipBillingConfigArray{ GetClbsClbEipBillingConfigArgs{...} }
type GetClbsClbEipBillingConfigArrayInput interface {
	pulumi.Input

	ToGetClbsClbEipBillingConfigArrayOutput() GetClbsClbEipBillingConfigArrayOutput
	ToGetClbsClbEipBillingConfigArrayOutputWithContext(context.Context) GetClbsClbEipBillingConfigArrayOutput
}

type GetClbsClbEipBillingConfigArray []GetClbsClbEipBillingConfigInput

func (GetClbsClbEipBillingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsClbEipBillingConfig)(nil)).Elem()
}

func (i GetClbsClbEipBillingConfigArray) ToGetClbsClbEipBillingConfigArrayOutput() GetClbsClbEipBillingConfigArrayOutput {
	return i.ToGetClbsClbEipBillingConfigArrayOutputWithContext(context.Background())
}

func (i GetClbsClbEipBillingConfigArray) ToGetClbsClbEipBillingConfigArrayOutputWithContext(ctx context.Context) GetClbsClbEipBillingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsClbEipBillingConfigArrayOutput)
}

type GetClbsClbEipBillingConfigOutput struct{ *pulumi.OutputState }

func (GetClbsClbEipBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsClbEipBillingConfig)(nil)).Elem()
}

func (o GetClbsClbEipBillingConfigOutput) ToGetClbsClbEipBillingConfigOutput() GetClbsClbEipBillingConfigOutput {
	return o
}

func (o GetClbsClbEipBillingConfigOutput) ToGetClbsClbEipBillingConfigOutputWithContext(ctx context.Context) GetClbsClbEipBillingConfigOutput {
	return o
}

// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
func (o GetClbsClbEipBillingConfigOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetClbsClbEipBillingConfig) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing type of the EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic` or `PrePaid`.
func (o GetClbsClbEipBillingConfigOutput) EipBillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClbEipBillingConfig) string { return v.EipBillingType }).(pulumi.StringOutput)
}

// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
func (o GetClbsClbEipBillingConfigOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClbEipBillingConfig) string { return v.Isp }).(pulumi.StringOutput)
}

type GetClbsClbEipBillingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClbsClbEipBillingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsClbEipBillingConfig)(nil)).Elem()
}

func (o GetClbsClbEipBillingConfigArrayOutput) ToGetClbsClbEipBillingConfigArrayOutput() GetClbsClbEipBillingConfigArrayOutput {
	return o
}

func (o GetClbsClbEipBillingConfigArrayOutput) ToGetClbsClbEipBillingConfigArrayOutputWithContext(ctx context.Context) GetClbsClbEipBillingConfigArrayOutput {
	return o
}

func (o GetClbsClbEipBillingConfigArrayOutput) Index(i pulumi.IntInput) GetClbsClbEipBillingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClbsClbEipBillingConfig {
		return vs[0].([]GetClbsClbEipBillingConfig)[vs[1].(int)]
	}).(GetClbsClbEipBillingConfigOutput)
}

type GetClbsClbIpv6AddressBandwidth struct {
	// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The bandwidth package id of the Ipv6 EIP assigned to CLB.
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// The billing type of the Ipv6 EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
	BillingType string `pulumi:"billingType"`
	// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
	Isp string `pulumi:"isp"`
	// The network type of the CLB Ipv6 address.
	NetworkType string `pulumi:"networkType"`
}

// GetClbsClbIpv6AddressBandwidthInput is an input type that accepts GetClbsClbIpv6AddressBandwidthArgs and GetClbsClbIpv6AddressBandwidthOutput values.
// You can construct a concrete instance of `GetClbsClbIpv6AddressBandwidthInput` via:
//
//	GetClbsClbIpv6AddressBandwidthArgs{...}
type GetClbsClbIpv6AddressBandwidthInput interface {
	pulumi.Input

	ToGetClbsClbIpv6AddressBandwidthOutput() GetClbsClbIpv6AddressBandwidthOutput
	ToGetClbsClbIpv6AddressBandwidthOutputWithContext(context.Context) GetClbsClbIpv6AddressBandwidthOutput
}

type GetClbsClbIpv6AddressBandwidthArgs struct {
	// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The bandwidth package id of the Ipv6 EIP assigned to CLB.
	BandwidthPackageId pulumi.StringInput `pulumi:"bandwidthPackageId"`
	// The billing type of the Ipv6 EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The network type of the CLB Ipv6 address.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
}

func (GetClbsClbIpv6AddressBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsClbIpv6AddressBandwidth)(nil)).Elem()
}

func (i GetClbsClbIpv6AddressBandwidthArgs) ToGetClbsClbIpv6AddressBandwidthOutput() GetClbsClbIpv6AddressBandwidthOutput {
	return i.ToGetClbsClbIpv6AddressBandwidthOutputWithContext(context.Background())
}

func (i GetClbsClbIpv6AddressBandwidthArgs) ToGetClbsClbIpv6AddressBandwidthOutputWithContext(ctx context.Context) GetClbsClbIpv6AddressBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsClbIpv6AddressBandwidthOutput)
}

// GetClbsClbIpv6AddressBandwidthArrayInput is an input type that accepts GetClbsClbIpv6AddressBandwidthArray and GetClbsClbIpv6AddressBandwidthArrayOutput values.
// You can construct a concrete instance of `GetClbsClbIpv6AddressBandwidthArrayInput` via:
//
//	GetClbsClbIpv6AddressBandwidthArray{ GetClbsClbIpv6AddressBandwidthArgs{...} }
type GetClbsClbIpv6AddressBandwidthArrayInput interface {
	pulumi.Input

	ToGetClbsClbIpv6AddressBandwidthArrayOutput() GetClbsClbIpv6AddressBandwidthArrayOutput
	ToGetClbsClbIpv6AddressBandwidthArrayOutputWithContext(context.Context) GetClbsClbIpv6AddressBandwidthArrayOutput
}

type GetClbsClbIpv6AddressBandwidthArray []GetClbsClbIpv6AddressBandwidthInput

func (GetClbsClbIpv6AddressBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsClbIpv6AddressBandwidth)(nil)).Elem()
}

func (i GetClbsClbIpv6AddressBandwidthArray) ToGetClbsClbIpv6AddressBandwidthArrayOutput() GetClbsClbIpv6AddressBandwidthArrayOutput {
	return i.ToGetClbsClbIpv6AddressBandwidthArrayOutputWithContext(context.Background())
}

func (i GetClbsClbIpv6AddressBandwidthArray) ToGetClbsClbIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) GetClbsClbIpv6AddressBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsClbIpv6AddressBandwidthArrayOutput)
}

type GetClbsClbIpv6AddressBandwidthOutput struct{ *pulumi.OutputState }

func (GetClbsClbIpv6AddressBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsClbIpv6AddressBandwidth)(nil)).Elem()
}

func (o GetClbsClbIpv6AddressBandwidthOutput) ToGetClbsClbIpv6AddressBandwidthOutput() GetClbsClbIpv6AddressBandwidthOutput {
	return o
}

func (o GetClbsClbIpv6AddressBandwidthOutput) ToGetClbsClbIpv6AddressBandwidthOutputWithContext(ctx context.Context) GetClbsClbIpv6AddressBandwidthOutput {
	return o
}

// The peek bandwidth of the Ipv6 EIP assigned to CLB. Units: Mbps.
func (o GetClbsClbIpv6AddressBandwidthOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetClbsClbIpv6AddressBandwidth) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The bandwidth package id of the Ipv6 EIP assigned to CLB.
func (o GetClbsClbIpv6AddressBandwidthOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClbIpv6AddressBandwidth) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// The billing type of the Ipv6 EIP assigned to CLB. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
func (o GetClbsClbIpv6AddressBandwidthOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClbIpv6AddressBandwidth) string { return v.BillingType }).(pulumi.StringOutput)
}

// The ISP of the Ipv6 EIP assigned to CLB, the value can be `BGP`.
func (o GetClbsClbIpv6AddressBandwidthOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClbIpv6AddressBandwidth) string { return v.Isp }).(pulumi.StringOutput)
}

// The network type of the CLB Ipv6 address.
func (o GetClbsClbIpv6AddressBandwidthOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClbIpv6AddressBandwidth) string { return v.NetworkType }).(pulumi.StringOutput)
}

type GetClbsClbIpv6AddressBandwidthArrayOutput struct{ *pulumi.OutputState }

func (GetClbsClbIpv6AddressBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsClbIpv6AddressBandwidth)(nil)).Elem()
}

func (o GetClbsClbIpv6AddressBandwidthArrayOutput) ToGetClbsClbIpv6AddressBandwidthArrayOutput() GetClbsClbIpv6AddressBandwidthArrayOutput {
	return o
}

func (o GetClbsClbIpv6AddressBandwidthArrayOutput) ToGetClbsClbIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) GetClbsClbIpv6AddressBandwidthArrayOutput {
	return o
}

func (o GetClbsClbIpv6AddressBandwidthArrayOutput) Index(i pulumi.IntInput) GetClbsClbIpv6AddressBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClbsClbIpv6AddressBandwidth {
		return vs[0].([]GetClbsClbIpv6AddressBandwidth)[vs[1].(int)]
	}).(GetClbsClbIpv6AddressBandwidthOutput)
}

type GetClbsClbTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetClbsClbTagInput is an input type that accepts GetClbsClbTagArgs and GetClbsClbTagOutput values.
// You can construct a concrete instance of `GetClbsClbTagInput` via:
//
//	GetClbsClbTagArgs{...}
type GetClbsClbTagInput interface {
	pulumi.Input

	ToGetClbsClbTagOutput() GetClbsClbTagOutput
	ToGetClbsClbTagOutputWithContext(context.Context) GetClbsClbTagOutput
}

type GetClbsClbTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClbsClbTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsClbTag)(nil)).Elem()
}

func (i GetClbsClbTagArgs) ToGetClbsClbTagOutput() GetClbsClbTagOutput {
	return i.ToGetClbsClbTagOutputWithContext(context.Background())
}

func (i GetClbsClbTagArgs) ToGetClbsClbTagOutputWithContext(ctx context.Context) GetClbsClbTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsClbTagOutput)
}

// GetClbsClbTagArrayInput is an input type that accepts GetClbsClbTagArray and GetClbsClbTagArrayOutput values.
// You can construct a concrete instance of `GetClbsClbTagArrayInput` via:
//
//	GetClbsClbTagArray{ GetClbsClbTagArgs{...} }
type GetClbsClbTagArrayInput interface {
	pulumi.Input

	ToGetClbsClbTagArrayOutput() GetClbsClbTagArrayOutput
	ToGetClbsClbTagArrayOutputWithContext(context.Context) GetClbsClbTagArrayOutput
}

type GetClbsClbTagArray []GetClbsClbTagInput

func (GetClbsClbTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsClbTag)(nil)).Elem()
}

func (i GetClbsClbTagArray) ToGetClbsClbTagArrayOutput() GetClbsClbTagArrayOutput {
	return i.ToGetClbsClbTagArrayOutputWithContext(context.Background())
}

func (i GetClbsClbTagArray) ToGetClbsClbTagArrayOutputWithContext(ctx context.Context) GetClbsClbTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsClbTagArrayOutput)
}

type GetClbsClbTagOutput struct{ *pulumi.OutputState }

func (GetClbsClbTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsClbTag)(nil)).Elem()
}

func (o GetClbsClbTagOutput) ToGetClbsClbTagOutput() GetClbsClbTagOutput {
	return o
}

func (o GetClbsClbTagOutput) ToGetClbsClbTagOutputWithContext(ctx context.Context) GetClbsClbTagOutput {
	return o
}

// The Key of Tags.
func (o GetClbsClbTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClbTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetClbsClbTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsClbTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetClbsClbTagArrayOutput struct{ *pulumi.OutputState }

func (GetClbsClbTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsClbTag)(nil)).Elem()
}

func (o GetClbsClbTagArrayOutput) ToGetClbsClbTagArrayOutput() GetClbsClbTagArrayOutput {
	return o
}

func (o GetClbsClbTagArrayOutput) ToGetClbsClbTagArrayOutputWithContext(ctx context.Context) GetClbsClbTagArrayOutput {
	return o
}

func (o GetClbsClbTagArrayOutput) Index(i pulumi.IntInput) GetClbsClbTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClbsClbTag {
		return vs[0].([]GetClbsClbTag)[vs[1].(int)]
	}).(GetClbsClbTagOutput)
}

type GetClbsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetClbsTagInput is an input type that accepts GetClbsTagArgs and GetClbsTagOutput values.
// You can construct a concrete instance of `GetClbsTagInput` via:
//
//	GetClbsTagArgs{...}
type GetClbsTagInput interface {
	pulumi.Input

	ToGetClbsTagOutput() GetClbsTagOutput
	ToGetClbsTagOutputWithContext(context.Context) GetClbsTagOutput
}

type GetClbsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClbsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsTag)(nil)).Elem()
}

func (i GetClbsTagArgs) ToGetClbsTagOutput() GetClbsTagOutput {
	return i.ToGetClbsTagOutputWithContext(context.Background())
}

func (i GetClbsTagArgs) ToGetClbsTagOutputWithContext(ctx context.Context) GetClbsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsTagOutput)
}

// GetClbsTagArrayInput is an input type that accepts GetClbsTagArray and GetClbsTagArrayOutput values.
// You can construct a concrete instance of `GetClbsTagArrayInput` via:
//
//	GetClbsTagArray{ GetClbsTagArgs{...} }
type GetClbsTagArrayInput interface {
	pulumi.Input

	ToGetClbsTagArrayOutput() GetClbsTagArrayOutput
	ToGetClbsTagArrayOutputWithContext(context.Context) GetClbsTagArrayOutput
}

type GetClbsTagArray []GetClbsTagInput

func (GetClbsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsTag)(nil)).Elem()
}

func (i GetClbsTagArray) ToGetClbsTagArrayOutput() GetClbsTagArrayOutput {
	return i.ToGetClbsTagArrayOutputWithContext(context.Background())
}

func (i GetClbsTagArray) ToGetClbsTagArrayOutputWithContext(ctx context.Context) GetClbsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClbsTagArrayOutput)
}

type GetClbsTagOutput struct{ *pulumi.OutputState }

func (GetClbsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClbsTag)(nil)).Elem()
}

func (o GetClbsTagOutput) ToGetClbsTagOutput() GetClbsTagOutput {
	return o
}

func (o GetClbsTagOutput) ToGetClbsTagOutputWithContext(ctx context.Context) GetClbsTagOutput {
	return o
}

// The Key of Tags.
func (o GetClbsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetClbsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClbsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetClbsTagArrayOutput struct{ *pulumi.OutputState }

func (GetClbsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClbsTag)(nil)).Elem()
}

func (o GetClbsTagArrayOutput) ToGetClbsTagArrayOutput() GetClbsTagArrayOutput {
	return o
}

func (o GetClbsTagArrayOutput) ToGetClbsTagArrayOutputWithContext(ctx context.Context) GetClbsTagArrayOutput {
	return o
}

func (o GetClbsTagArrayOutput) Index(i pulumi.IntInput) GetClbsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClbsTag {
		return vs[0].([]GetClbsTag)[vs[1].(int)]
	}).(GetClbsTagOutput)
}

type GetListenersListener struct {
	// The acl ID list to which the Listener is bound.
	AclIds []string `pulumi:"aclIds"`
	// The acl status of the Listener.
	AclStatus string `pulumi:"aclStatus"`
	// The acl type of the Listener.
	AclType string `pulumi:"aclType"`
	// The bandwidth of the Listener. Unit: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The ID of the certificate which is associated with the Listener.
	CertificateId string `pulumi:"certificateId"`
	// Whether to enable connection drain of the Listener.
	ConnectionDrainEnabled string `pulumi:"connectionDrainEnabled"`
	// The connection drain timeout of the Listener.
	ConnectionDrainTimeout int `pulumi:"connectionDrainTimeout"`
	// The name of the cookie for session persistence configured on the backend server.
	Cookie string `pulumi:"cookie"`
	// The create time of the Listener.
	CreateTime string `pulumi:"createTime"`
	// The enable status of the Listener.
	Enabled string `pulumi:"enabled"`
	// The domain of health check.
	HealthCheckDomain string `pulumi:"healthCheckDomain"`
	// The enable status of health check function.
	HealthCheckEnabled string `pulumi:"healthCheckEnabled"`
	// The healthy threshold of health check.
	HealthCheckHealthyThreshold int `pulumi:"healthCheckHealthyThreshold"`
	// The normal http status code of health check.
	HealthCheckHttpCode string `pulumi:"healthCheckHttpCode"`
	// The interval executing health check.
	HealthCheckInterval int `pulumi:"healthCheckInterval"`
	// The method of health check.
	HealthCheckMethod string `pulumi:"healthCheckMethod"`
	// The response timeout of health check.
	HealthCheckTimeout int `pulumi:"healthCheckTimeout"`
	// The expected response string for the health check.
	HealthCheckUdpExpect string `pulumi:"healthCheckUdpExpect"`
	// A request string to perform a health check.
	HealthCheckUdpRequest string `pulumi:"healthCheckUdpRequest"`
	// The unhealthy threshold of health check.
	HealthCheckUnHealthyThreshold int `pulumi:"healthCheckUnHealthyThreshold"`
	// The uri of health check.
	HealthCheckUri string `pulumi:"healthCheckUri"`
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The ID of the Listener.
	ListenerId string `pulumi:"listenerId"`
	// The name of the Listener.
	ListenerName string `pulumi:"listenerName"`
	// The persistence timeout of the Listener.
	PersistenceTimeout int `pulumi:"persistenceTimeout"`
	// The persistence type of the Listener.
	PersistenceType string `pulumi:"persistenceType"`
	// The port receiving request of the Listener.
	Port int `pulumi:"port"`
	// The protocol of the Listener.
	Protocol string `pulumi:"protocol"`
	// Whether to enable proxy protocol.
	ProxyProtocolType string `pulumi:"proxyProtocolType"`
	// The ID of the backend server group which is associated with the Listener.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The status of the Listener.
	Status string `pulumi:"status"`
	// The update time of the Listener.
	UpdateTime string `pulumi:"updateTime"`
}

// GetListenersListenerInput is an input type that accepts GetListenersListenerArgs and GetListenersListenerOutput values.
// You can construct a concrete instance of `GetListenersListenerInput` via:
//
//	GetListenersListenerArgs{...}
type GetListenersListenerInput interface {
	pulumi.Input

	ToGetListenersListenerOutput() GetListenersListenerOutput
	ToGetListenersListenerOutputWithContext(context.Context) GetListenersListenerOutput
}

type GetListenersListenerArgs struct {
	// The acl ID list to which the Listener is bound.
	AclIds pulumi.StringArrayInput `pulumi:"aclIds"`
	// The acl status of the Listener.
	AclStatus pulumi.StringInput `pulumi:"aclStatus"`
	// The acl type of the Listener.
	AclType pulumi.StringInput `pulumi:"aclType"`
	// The bandwidth of the Listener. Unit: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The ID of the certificate which is associated with the Listener.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// Whether to enable connection drain of the Listener.
	ConnectionDrainEnabled pulumi.StringInput `pulumi:"connectionDrainEnabled"`
	// The connection drain timeout of the Listener.
	ConnectionDrainTimeout pulumi.IntInput `pulumi:"connectionDrainTimeout"`
	// The name of the cookie for session persistence configured on the backend server.
	Cookie pulumi.StringInput `pulumi:"cookie"`
	// The create time of the Listener.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The enable status of the Listener.
	Enabled pulumi.StringInput `pulumi:"enabled"`
	// The domain of health check.
	HealthCheckDomain pulumi.StringInput `pulumi:"healthCheckDomain"`
	// The enable status of health check function.
	HealthCheckEnabled pulumi.StringInput `pulumi:"healthCheckEnabled"`
	// The healthy threshold of health check.
	HealthCheckHealthyThreshold pulumi.IntInput `pulumi:"healthCheckHealthyThreshold"`
	// The normal http status code of health check.
	HealthCheckHttpCode pulumi.StringInput `pulumi:"healthCheckHttpCode"`
	// The interval executing health check.
	HealthCheckInterval pulumi.IntInput `pulumi:"healthCheckInterval"`
	// The method of health check.
	HealthCheckMethod pulumi.StringInput `pulumi:"healthCheckMethod"`
	// The response timeout of health check.
	HealthCheckTimeout pulumi.IntInput `pulumi:"healthCheckTimeout"`
	// The expected response string for the health check.
	HealthCheckUdpExpect pulumi.StringInput `pulumi:"healthCheckUdpExpect"`
	// A request string to perform a health check.
	HealthCheckUdpRequest pulumi.StringInput `pulumi:"healthCheckUdpRequest"`
	// The unhealthy threshold of health check.
	HealthCheckUnHealthyThreshold pulumi.IntInput `pulumi:"healthCheckUnHealthyThreshold"`
	// The uri of health check.
	HealthCheckUri pulumi.StringInput `pulumi:"healthCheckUri"`
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The name of the Listener.
	ListenerName pulumi.StringInput `pulumi:"listenerName"`
	// The persistence timeout of the Listener.
	PersistenceTimeout pulumi.IntInput `pulumi:"persistenceTimeout"`
	// The persistence type of the Listener.
	PersistenceType pulumi.StringInput `pulumi:"persistenceType"`
	// The port receiving request of the Listener.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the Listener.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Whether to enable proxy protocol.
	ProxyProtocolType pulumi.StringInput `pulumi:"proxyProtocolType"`
	// The ID of the backend server group which is associated with the Listener.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The status of the Listener.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of the Listener.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListener)(nil)).Elem()
}

func (i GetListenersListenerArgs) ToGetListenersListenerOutput() GetListenersListenerOutput {
	return i.ToGetListenersListenerOutputWithContext(context.Background())
}

func (i GetListenersListenerArgs) ToGetListenersListenerOutputWithContext(ctx context.Context) GetListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerOutput)
}

// GetListenersListenerArrayInput is an input type that accepts GetListenersListenerArray and GetListenersListenerArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerArrayInput` via:
//
//	GetListenersListenerArray{ GetListenersListenerArgs{...} }
type GetListenersListenerArrayInput interface {
	pulumi.Input

	ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput
	ToGetListenersListenerArrayOutputWithContext(context.Context) GetListenersListenerArrayOutput
}

type GetListenersListenerArray []GetListenersListenerInput

func (GetListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListener)(nil)).Elem()
}

func (i GetListenersListenerArray) ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput {
	return i.ToGetListenersListenerArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerArray) ToGetListenersListenerArrayOutputWithContext(ctx context.Context) GetListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerArrayOutput)
}

type GetListenersListenerOutput struct{ *pulumi.OutputState }

func (GetListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListener)(nil)).Elem()
}

func (o GetListenersListenerOutput) ToGetListenersListenerOutput() GetListenersListenerOutput {
	return o
}

func (o GetListenersListenerOutput) ToGetListenersListenerOutputWithContext(ctx context.Context) GetListenersListenerOutput {
	return o
}

// The acl ID list to which the Listener is bound.
func (o GetListenersListenerOutput) AclIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetListenersListener) []string { return v.AclIds }).(pulumi.StringArrayOutput)
}

// The acl status of the Listener.
func (o GetListenersListenerOutput) AclStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.AclStatus }).(pulumi.StringOutput)
}

// The acl type of the Listener.
func (o GetListenersListenerOutput) AclType() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.AclType }).(pulumi.StringOutput)
}

// The bandwidth of the Listener. Unit: Mbps.
func (o GetListenersListenerOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListener) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The ID of the certificate which is associated with the Listener.
func (o GetListenersListenerOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.CertificateId }).(pulumi.StringOutput)
}

// Whether to enable connection drain of the Listener.
func (o GetListenersListenerOutput) ConnectionDrainEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ConnectionDrainEnabled }).(pulumi.StringOutput)
}

// The connection drain timeout of the Listener.
func (o GetListenersListenerOutput) ConnectionDrainTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListener) int { return v.ConnectionDrainTimeout }).(pulumi.IntOutput)
}

// The name of the cookie for session persistence configured on the backend server.
func (o GetListenersListenerOutput) Cookie() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Cookie }).(pulumi.StringOutput)
}

// The create time of the Listener.
func (o GetListenersListenerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The enable status of the Listener.
func (o GetListenersListenerOutput) Enabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Enabled }).(pulumi.StringOutput)
}

// The domain of health check.
func (o GetListenersListenerOutput) HealthCheckDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.HealthCheckDomain }).(pulumi.StringOutput)
}

// The enable status of health check function.
func (o GetListenersListenerOutput) HealthCheckEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.HealthCheckEnabled }).(pulumi.StringOutput)
}

// The healthy threshold of health check.
func (o GetListenersListenerOutput) HealthCheckHealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListener) int { return v.HealthCheckHealthyThreshold }).(pulumi.IntOutput)
}

// The normal http status code of health check.
func (o GetListenersListenerOutput) HealthCheckHttpCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.HealthCheckHttpCode }).(pulumi.StringOutput)
}

// The interval executing health check.
func (o GetListenersListenerOutput) HealthCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListener) int { return v.HealthCheckInterval }).(pulumi.IntOutput)
}

// The method of health check.
func (o GetListenersListenerOutput) HealthCheckMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.HealthCheckMethod }).(pulumi.StringOutput)
}

// The response timeout of health check.
func (o GetListenersListenerOutput) HealthCheckTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListener) int { return v.HealthCheckTimeout }).(pulumi.IntOutput)
}

// The expected response string for the health check.
func (o GetListenersListenerOutput) HealthCheckUdpExpect() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.HealthCheckUdpExpect }).(pulumi.StringOutput)
}

// A request string to perform a health check.
func (o GetListenersListenerOutput) HealthCheckUdpRequest() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.HealthCheckUdpRequest }).(pulumi.StringOutput)
}

// The unhealthy threshold of health check.
func (o GetListenersListenerOutput) HealthCheckUnHealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListener) int { return v.HealthCheckUnHealthyThreshold }).(pulumi.IntOutput)
}

// The uri of health check.
func (o GetListenersListenerOutput) HealthCheckUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.HealthCheckUri }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o GetListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o GetListenersListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The name of the Listener.
func (o GetListenersListenerOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ListenerName }).(pulumi.StringOutput)
}

// The persistence timeout of the Listener.
func (o GetListenersListenerOutput) PersistenceTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListener) int { return v.PersistenceTimeout }).(pulumi.IntOutput)
}

// The persistence type of the Listener.
func (o GetListenersListenerOutput) PersistenceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.PersistenceType }).(pulumi.StringOutput)
}

// The port receiving request of the Listener.
func (o GetListenersListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListener) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the Listener.
func (o GetListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// Whether to enable proxy protocol.
func (o GetListenersListenerOutput) ProxyProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ProxyProtocolType }).(pulumi.StringOutput)
}

// The ID of the backend server group which is associated with the Listener.
func (o GetListenersListenerOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The status of the Listener.
func (o GetListenersListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of the Listener.
func (o GetListenersListenerOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListener)(nil)).Elem()
}

func (o GetListenersListenerArrayOutput) ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput {
	return o
}

func (o GetListenersListenerArrayOutput) ToGetListenersListenerArrayOutputWithContext(ctx context.Context) GetListenersListenerArrayOutput {
	return o
}

func (o GetListenersListenerArrayOutput) Index(i pulumi.IntInput) GetListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListener {
		return vs[0].([]GetListenersListener)[vs[1].(int)]
	}).(GetListenersListenerOutput)
}

type GetRulesRule struct {
	// The Description of Rule.
	Description string `pulumi:"description"`
	// The Domain of Rule.
	Domain string `pulumi:"domain"`
	// The Id of Rule.
	Id string `pulumi:"id"`
	// The Id of Rule.
	RuleId string `pulumi:"ruleId"`
	// The Id of Server Group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The Url of Rule.
	Url string `pulumi:"url"`
}

// GetRulesRuleInput is an input type that accepts GetRulesRuleArgs and GetRulesRuleOutput values.
// You can construct a concrete instance of `GetRulesRuleInput` via:
//
//	GetRulesRuleArgs{...}
type GetRulesRuleInput interface {
	pulumi.Input

	ToGetRulesRuleOutput() GetRulesRuleOutput
	ToGetRulesRuleOutputWithContext(context.Context) GetRulesRuleOutput
}

type GetRulesRuleArgs struct {
	// The Description of Rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The Domain of Rule.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The Id of Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The Id of Rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The Id of Server Group.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The Url of Rule.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRule)(nil)).Elem()
}

func (i GetRulesRuleArgs) ToGetRulesRuleOutput() GetRulesRuleOutput {
	return i.ToGetRulesRuleOutputWithContext(context.Background())
}

func (i GetRulesRuleArgs) ToGetRulesRuleOutputWithContext(ctx context.Context) GetRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleOutput)
}

// GetRulesRuleArrayInput is an input type that accepts GetRulesRuleArray and GetRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetRulesRuleArrayInput` via:
//
//	GetRulesRuleArray{ GetRulesRuleArgs{...} }
type GetRulesRuleArrayInput interface {
	pulumi.Input

	ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput
	ToGetRulesRuleArrayOutputWithContext(context.Context) GetRulesRuleArrayOutput
}

type GetRulesRuleArray []GetRulesRuleInput

func (GetRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRule)(nil)).Elem()
}

func (i GetRulesRuleArray) ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput {
	return i.ToGetRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetRulesRuleArray) ToGetRulesRuleArrayOutputWithContext(ctx context.Context) GetRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRulesRuleArrayOutput)
}

type GetRulesRuleOutput struct{ *pulumi.OutputState }

func (GetRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRulesRule)(nil)).Elem()
}

func (o GetRulesRuleOutput) ToGetRulesRuleOutput() GetRulesRuleOutput {
	return o
}

func (o GetRulesRuleOutput) ToGetRulesRuleOutputWithContext(ctx context.Context) GetRulesRuleOutput {
	return o
}

// The Description of Rule.
func (o GetRulesRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Description }).(pulumi.StringOutput)
}

// The Domain of Rule.
func (o GetRulesRuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Domain }).(pulumi.StringOutput)
}

// The Id of Rule.
func (o GetRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The Id of Rule.
func (o GetRulesRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The Id of Server Group.
func (o GetRulesRuleOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The Url of Rule.
func (o GetRulesRuleOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetRulesRule) string { return v.Url }).(pulumi.StringOutput)
}

type GetRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRulesRule)(nil)).Elem()
}

func (o GetRulesRuleArrayOutput) ToGetRulesRuleArrayOutput() GetRulesRuleArrayOutput {
	return o
}

func (o GetRulesRuleArrayOutput) ToGetRulesRuleArrayOutputWithContext(ctx context.Context) GetRulesRuleArrayOutput {
	return o
}

func (o GetRulesRuleArrayOutput) Index(i pulumi.IntInput) GetRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRulesRule {
		return vs[0].([]GetRulesRule)[vs[1].(int)]
	}).(GetRulesRuleOutput)
}

type GetServerGroupServersServer struct {
	// The description of the instance.
	Description string `pulumi:"description"`
	// The server id of instance in ServerGroup.
	Id string `pulumi:"id"`
	// The ID of ecs instance or the network card bound to ecs instance.
	InstanceId string `pulumi:"instanceId"`
	// The private ip of the instance.
	Ip string `pulumi:"ip"`
	// The port receiving request.
	Port int `pulumi:"port"`
	// The server id of instance in ServerGroup.
	ServerId string `pulumi:"serverId"`
	// The type of instance. Optional choice contains `ecs`, `eni`.
	Type string `pulumi:"type"`
	// The weight of the instance.
	Weight int `pulumi:"weight"`
}

// GetServerGroupServersServerInput is an input type that accepts GetServerGroupServersServerArgs and GetServerGroupServersServerOutput values.
// You can construct a concrete instance of `GetServerGroupServersServerInput` via:
//
//	GetServerGroupServersServerArgs{...}
type GetServerGroupServersServerInput interface {
	pulumi.Input

	ToGetServerGroupServersServerOutput() GetServerGroupServersServerOutput
	ToGetServerGroupServersServerOutputWithContext(context.Context) GetServerGroupServersServerOutput
}

type GetServerGroupServersServerArgs struct {
	// The description of the instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The server id of instance in ServerGroup.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of ecs instance or the network card bound to ecs instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The private ip of the instance.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The port receiving request.
	Port pulumi.IntInput `pulumi:"port"`
	// The server id of instance in ServerGroup.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The type of instance. Optional choice contains `ecs`, `eni`.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of the instance.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetServerGroupServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupServersServer)(nil)).Elem()
}

func (i GetServerGroupServersServerArgs) ToGetServerGroupServersServerOutput() GetServerGroupServersServerOutput {
	return i.ToGetServerGroupServersServerOutputWithContext(context.Background())
}

func (i GetServerGroupServersServerArgs) ToGetServerGroupServersServerOutputWithContext(ctx context.Context) GetServerGroupServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupServersServerOutput)
}

// GetServerGroupServersServerArrayInput is an input type that accepts GetServerGroupServersServerArray and GetServerGroupServersServerArrayOutput values.
// You can construct a concrete instance of `GetServerGroupServersServerArrayInput` via:
//
//	GetServerGroupServersServerArray{ GetServerGroupServersServerArgs{...} }
type GetServerGroupServersServerArrayInput interface {
	pulumi.Input

	ToGetServerGroupServersServerArrayOutput() GetServerGroupServersServerArrayOutput
	ToGetServerGroupServersServerArrayOutputWithContext(context.Context) GetServerGroupServersServerArrayOutput
}

type GetServerGroupServersServerArray []GetServerGroupServersServerInput

func (GetServerGroupServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupServersServer)(nil)).Elem()
}

func (i GetServerGroupServersServerArray) ToGetServerGroupServersServerArrayOutput() GetServerGroupServersServerArrayOutput {
	return i.ToGetServerGroupServersServerArrayOutputWithContext(context.Background())
}

func (i GetServerGroupServersServerArray) ToGetServerGroupServersServerArrayOutputWithContext(ctx context.Context) GetServerGroupServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupServersServerArrayOutput)
}

type GetServerGroupServersServerOutput struct{ *pulumi.OutputState }

func (GetServerGroupServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupServersServer)(nil)).Elem()
}

func (o GetServerGroupServersServerOutput) ToGetServerGroupServersServerOutput() GetServerGroupServersServerOutput {
	return o
}

func (o GetServerGroupServersServerOutput) ToGetServerGroupServersServerOutputWithContext(ctx context.Context) GetServerGroupServersServerOutput {
	return o
}

// The description of the instance.
func (o GetServerGroupServersServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupServersServer) string { return v.Description }).(pulumi.StringOutput)
}

// The server id of instance in ServerGroup.
func (o GetServerGroupServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupServersServer) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of ecs instance or the network card bound to ecs instance.
func (o GetServerGroupServersServerOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupServersServer) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The private ip of the instance.
func (o GetServerGroupServersServerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupServersServer) string { return v.Ip }).(pulumi.StringOutput)
}

// The port receiving request.
func (o GetServerGroupServersServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupServersServer) int { return v.Port }).(pulumi.IntOutput)
}

// The server id of instance in ServerGroup.
func (o GetServerGroupServersServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupServersServer) string { return v.ServerId }).(pulumi.StringOutput)
}

// The type of instance. Optional choice contains `ecs`, `eni`.
func (o GetServerGroupServersServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupServersServer) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of the instance.
func (o GetServerGroupServersServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupServersServer) int { return v.Weight }).(pulumi.IntOutput)
}

type GetServerGroupServersServerArrayOutput struct{ *pulumi.OutputState }

func (GetServerGroupServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupServersServer)(nil)).Elem()
}

func (o GetServerGroupServersServerArrayOutput) ToGetServerGroupServersServerArrayOutput() GetServerGroupServersServerArrayOutput {
	return o
}

func (o GetServerGroupServersServerArrayOutput) ToGetServerGroupServersServerArrayOutputWithContext(ctx context.Context) GetServerGroupServersServerArrayOutput {
	return o
}

func (o GetServerGroupServersServerArrayOutput) Index(i pulumi.IntInput) GetServerGroupServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerGroupServersServer {
		return vs[0].([]GetServerGroupServersServer)[vs[1].(int)]
	}).(GetServerGroupServersServerOutput)
}

type GetServerGroupsGroup struct {
	// The address ip version of the ServerGroup.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// The create time of the ServerGroup.
	CreateTime string `pulumi:"createTime"`
	// The description of the ServerGroup.
	Description string `pulumi:"description"`
	// The ID of the ServerGroup.
	Id string `pulumi:"id"`
	// The ID of the ServerGroup.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The name of the ServerGroup.
	ServerGroupName string `pulumi:"serverGroupName"`
	// The update time of the ServerGroup.
	UpdateTime string `pulumi:"updateTime"`
}

// GetServerGroupsGroupInput is an input type that accepts GetServerGroupsGroupArgs and GetServerGroupsGroupOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupInput` via:
//
//	GetServerGroupsGroupArgs{...}
type GetServerGroupsGroupInput interface {
	pulumi.Input

	ToGetServerGroupsGroupOutput() GetServerGroupsGroupOutput
	ToGetServerGroupsGroupOutputWithContext(context.Context) GetServerGroupsGroupOutput
}

type GetServerGroupsGroupArgs struct {
	// The address ip version of the ServerGroup.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// The create time of the ServerGroup.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the ServerGroup.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the ServerGroup.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the ServerGroup.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The name of the ServerGroup.
	ServerGroupName pulumi.StringInput `pulumi:"serverGroupName"`
	// The update time of the ServerGroup.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetServerGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroup)(nil)).Elem()
}

func (i GetServerGroupsGroupArgs) ToGetServerGroupsGroupOutput() GetServerGroupsGroupOutput {
	return i.ToGetServerGroupsGroupOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupArgs) ToGetServerGroupsGroupOutputWithContext(ctx context.Context) GetServerGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupOutput)
}

// GetServerGroupsGroupArrayInput is an input type that accepts GetServerGroupsGroupArray and GetServerGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupArrayInput` via:
//
//	GetServerGroupsGroupArray{ GetServerGroupsGroupArgs{...} }
type GetServerGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetServerGroupsGroupArrayOutput() GetServerGroupsGroupArrayOutput
	ToGetServerGroupsGroupArrayOutputWithContext(context.Context) GetServerGroupsGroupArrayOutput
}

type GetServerGroupsGroupArray []GetServerGroupsGroupInput

func (GetServerGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroup)(nil)).Elem()
}

func (i GetServerGroupsGroupArray) ToGetServerGroupsGroupArrayOutput() GetServerGroupsGroupArrayOutput {
	return i.ToGetServerGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupArray) ToGetServerGroupsGroupArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupArrayOutput)
}

type GetServerGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroup)(nil)).Elem()
}

func (o GetServerGroupsGroupOutput) ToGetServerGroupsGroupOutput() GetServerGroupsGroupOutput {
	return o
}

func (o GetServerGroupsGroupOutput) ToGetServerGroupsGroupOutputWithContext(ctx context.Context) GetServerGroupsGroupOutput {
	return o
}

// The address ip version of the ServerGroup.
func (o GetServerGroupsGroupOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The create time of the ServerGroup.
func (o GetServerGroupsGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the ServerGroup.
func (o GetServerGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the ServerGroup.
func (o GetServerGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the ServerGroup.
func (o GetServerGroupsGroupOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The name of the ServerGroup.
func (o GetServerGroupsGroupOutput) ServerGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.ServerGroupName }).(pulumi.StringOutput)
}

// The update time of the ServerGroup.
func (o GetServerGroupsGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetServerGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroup)(nil)).Elem()
}

func (o GetServerGroupsGroupArrayOutput) ToGetServerGroupsGroupArrayOutput() GetServerGroupsGroupArrayOutput {
	return o
}

func (o GetServerGroupsGroupArrayOutput) ToGetServerGroupsGroupArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupArrayOutput {
	return o
}

func (o GetServerGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetServerGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerGroupsGroup {
		return vs[0].([]GetServerGroupsGroup)[vs[1].(int)]
	}).(GetServerGroupsGroupOutput)
}

type GetZonesMasterZone struct {
	// The slave zones list.
	SlaveZones []GetZonesMasterZoneSlaveZone `pulumi:"slaveZones"`
	// The master zone id.
	ZoneId string `pulumi:"zoneId"`
}

// GetZonesMasterZoneInput is an input type that accepts GetZonesMasterZoneArgs and GetZonesMasterZoneOutput values.
// You can construct a concrete instance of `GetZonesMasterZoneInput` via:
//
//	GetZonesMasterZoneArgs{...}
type GetZonesMasterZoneInput interface {
	pulumi.Input

	ToGetZonesMasterZoneOutput() GetZonesMasterZoneOutput
	ToGetZonesMasterZoneOutputWithContext(context.Context) GetZonesMasterZoneOutput
}

type GetZonesMasterZoneArgs struct {
	// The slave zones list.
	SlaveZones GetZonesMasterZoneSlaveZoneArrayInput `pulumi:"slaveZones"`
	// The master zone id.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetZonesMasterZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesMasterZone)(nil)).Elem()
}

func (i GetZonesMasterZoneArgs) ToGetZonesMasterZoneOutput() GetZonesMasterZoneOutput {
	return i.ToGetZonesMasterZoneOutputWithContext(context.Background())
}

func (i GetZonesMasterZoneArgs) ToGetZonesMasterZoneOutputWithContext(ctx context.Context) GetZonesMasterZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesMasterZoneOutput)
}

// GetZonesMasterZoneArrayInput is an input type that accepts GetZonesMasterZoneArray and GetZonesMasterZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesMasterZoneArrayInput` via:
//
//	GetZonesMasterZoneArray{ GetZonesMasterZoneArgs{...} }
type GetZonesMasterZoneArrayInput interface {
	pulumi.Input

	ToGetZonesMasterZoneArrayOutput() GetZonesMasterZoneArrayOutput
	ToGetZonesMasterZoneArrayOutputWithContext(context.Context) GetZonesMasterZoneArrayOutput
}

type GetZonesMasterZoneArray []GetZonesMasterZoneInput

func (GetZonesMasterZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesMasterZone)(nil)).Elem()
}

func (i GetZonesMasterZoneArray) ToGetZonesMasterZoneArrayOutput() GetZonesMasterZoneArrayOutput {
	return i.ToGetZonesMasterZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesMasterZoneArray) ToGetZonesMasterZoneArrayOutputWithContext(ctx context.Context) GetZonesMasterZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesMasterZoneArrayOutput)
}

type GetZonesMasterZoneOutput struct{ *pulumi.OutputState }

func (GetZonesMasterZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesMasterZone)(nil)).Elem()
}

func (o GetZonesMasterZoneOutput) ToGetZonesMasterZoneOutput() GetZonesMasterZoneOutput {
	return o
}

func (o GetZonesMasterZoneOutput) ToGetZonesMasterZoneOutputWithContext(ctx context.Context) GetZonesMasterZoneOutput {
	return o
}

// The slave zones list.
func (o GetZonesMasterZoneOutput) SlaveZones() GetZonesMasterZoneSlaveZoneArrayOutput {
	return o.ApplyT(func(v GetZonesMasterZone) []GetZonesMasterZoneSlaveZone { return v.SlaveZones }).(GetZonesMasterZoneSlaveZoneArrayOutput)
}

// The master zone id.
func (o GetZonesMasterZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesMasterZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetZonesMasterZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesMasterZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesMasterZone)(nil)).Elem()
}

func (o GetZonesMasterZoneArrayOutput) ToGetZonesMasterZoneArrayOutput() GetZonesMasterZoneArrayOutput {
	return o
}

func (o GetZonesMasterZoneArrayOutput) ToGetZonesMasterZoneArrayOutputWithContext(ctx context.Context) GetZonesMasterZoneArrayOutput {
	return o
}

func (o GetZonesMasterZoneArrayOutput) Index(i pulumi.IntInput) GetZonesMasterZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesMasterZone {
		return vs[0].([]GetZonesMasterZone)[vs[1].(int)]
	}).(GetZonesMasterZoneOutput)
}

type GetZonesMasterZoneSlaveZone struct {
	// The master zone id.
	ZoneId string `pulumi:"zoneId"`
}

// GetZonesMasterZoneSlaveZoneInput is an input type that accepts GetZonesMasterZoneSlaveZoneArgs and GetZonesMasterZoneSlaveZoneOutput values.
// You can construct a concrete instance of `GetZonesMasterZoneSlaveZoneInput` via:
//
//	GetZonesMasterZoneSlaveZoneArgs{...}
type GetZonesMasterZoneSlaveZoneInput interface {
	pulumi.Input

	ToGetZonesMasterZoneSlaveZoneOutput() GetZonesMasterZoneSlaveZoneOutput
	ToGetZonesMasterZoneSlaveZoneOutputWithContext(context.Context) GetZonesMasterZoneSlaveZoneOutput
}

type GetZonesMasterZoneSlaveZoneArgs struct {
	// The master zone id.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetZonesMasterZoneSlaveZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesMasterZoneSlaveZone)(nil)).Elem()
}

func (i GetZonesMasterZoneSlaveZoneArgs) ToGetZonesMasterZoneSlaveZoneOutput() GetZonesMasterZoneSlaveZoneOutput {
	return i.ToGetZonesMasterZoneSlaveZoneOutputWithContext(context.Background())
}

func (i GetZonesMasterZoneSlaveZoneArgs) ToGetZonesMasterZoneSlaveZoneOutputWithContext(ctx context.Context) GetZonesMasterZoneSlaveZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesMasterZoneSlaveZoneOutput)
}

// GetZonesMasterZoneSlaveZoneArrayInput is an input type that accepts GetZonesMasterZoneSlaveZoneArray and GetZonesMasterZoneSlaveZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesMasterZoneSlaveZoneArrayInput` via:
//
//	GetZonesMasterZoneSlaveZoneArray{ GetZonesMasterZoneSlaveZoneArgs{...} }
type GetZonesMasterZoneSlaveZoneArrayInput interface {
	pulumi.Input

	ToGetZonesMasterZoneSlaveZoneArrayOutput() GetZonesMasterZoneSlaveZoneArrayOutput
	ToGetZonesMasterZoneSlaveZoneArrayOutputWithContext(context.Context) GetZonesMasterZoneSlaveZoneArrayOutput
}

type GetZonesMasterZoneSlaveZoneArray []GetZonesMasterZoneSlaveZoneInput

func (GetZonesMasterZoneSlaveZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesMasterZoneSlaveZone)(nil)).Elem()
}

func (i GetZonesMasterZoneSlaveZoneArray) ToGetZonesMasterZoneSlaveZoneArrayOutput() GetZonesMasterZoneSlaveZoneArrayOutput {
	return i.ToGetZonesMasterZoneSlaveZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesMasterZoneSlaveZoneArray) ToGetZonesMasterZoneSlaveZoneArrayOutputWithContext(ctx context.Context) GetZonesMasterZoneSlaveZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesMasterZoneSlaveZoneArrayOutput)
}

type GetZonesMasterZoneSlaveZoneOutput struct{ *pulumi.OutputState }

func (GetZonesMasterZoneSlaveZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesMasterZoneSlaveZone)(nil)).Elem()
}

func (o GetZonesMasterZoneSlaveZoneOutput) ToGetZonesMasterZoneSlaveZoneOutput() GetZonesMasterZoneSlaveZoneOutput {
	return o
}

func (o GetZonesMasterZoneSlaveZoneOutput) ToGetZonesMasterZoneSlaveZoneOutputWithContext(ctx context.Context) GetZonesMasterZoneSlaveZoneOutput {
	return o
}

// The master zone id.
func (o GetZonesMasterZoneSlaveZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesMasterZoneSlaveZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetZonesMasterZoneSlaveZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesMasterZoneSlaveZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesMasterZoneSlaveZone)(nil)).Elem()
}

func (o GetZonesMasterZoneSlaveZoneArrayOutput) ToGetZonesMasterZoneSlaveZoneArrayOutput() GetZonesMasterZoneSlaveZoneArrayOutput {
	return o
}

func (o GetZonesMasterZoneSlaveZoneArrayOutput) ToGetZonesMasterZoneSlaveZoneArrayOutputWithContext(ctx context.Context) GetZonesMasterZoneSlaveZoneArrayOutput {
	return o
}

func (o GetZonesMasterZoneSlaveZoneArrayOutput) Index(i pulumi.IntInput) GetZonesMasterZoneSlaveZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesMasterZoneSlaveZone {
		return vs[0].([]GetZonesMasterZoneSlaveZone)[vs[1].(int)]
	}).(GetZonesMasterZoneSlaveZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclAclEntryInput)(nil)).Elem(), AclAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclAclEntryArrayInput)(nil)).Elem(), AclAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclInput)(nil)).Elem(), AclsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclArrayInput)(nil)).Elem(), AclsAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTagInput)(nil)).Elem(), CertificateTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateTagArrayInput)(nil)).Elem(), CertificateTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesCertificateInput)(nil)).Elem(), CertificatesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesCertificateArrayInput)(nil)).Elem(), CertificatesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesCertificateTagInput)(nil)).Elem(), CertificatesCertificateTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesCertificateTagArrayInput)(nil)).Elem(), CertificatesCertificateTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesTagInput)(nil)).Elem(), CertificatesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesTagArrayInput)(nil)).Elem(), CertificatesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbEipBillingConfigInput)(nil)).Elem(), ClbEipBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbEipBillingConfigPtrInput)(nil)).Elem(), ClbEipBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbTagInput)(nil)).Elem(), ClbTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbTagArrayInput)(nil)).Elem(), ClbTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsClbInput)(nil)).Elem(), ClbsClbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsClbArrayInput)(nil)).Elem(), ClbsClbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsClbEipBillingConfigInput)(nil)).Elem(), ClbsClbEipBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsClbEipBillingConfigArrayInput)(nil)).Elem(), ClbsClbEipBillingConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsClbIpv6AddressBandwidthInput)(nil)).Elem(), ClbsClbIpv6AddressBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsClbIpv6AddressBandwidthArrayInput)(nil)).Elem(), ClbsClbIpv6AddressBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsClbTagInput)(nil)).Elem(), ClbsClbTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsClbTagArrayInput)(nil)).Elem(), ClbsClbTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsTagInput)(nil)).Elem(), ClbsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbsTagArrayInput)(nil)).Elem(), ClbsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerHealthCheckInput)(nil)).Elem(), ListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerHealthCheckPtrInput)(nil)).Elem(), ListenerHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerInput)(nil)).Elem(), ListenersListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerArrayInput)(nil)).Elem(), ListenersListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleInput)(nil)).Elem(), RulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleArrayInput)(nil)).Elem(), RulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupServersServerInput)(nil)).Elem(), ServerGroupServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupServersServerArrayInput)(nil)).Elem(), ServerGroupServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsGroupInput)(nil)).Elem(), ServerGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsGroupArrayInput)(nil)).Elem(), ServerGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesMasterZoneInput)(nil)).Elem(), ZonesMasterZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesMasterZoneArrayInput)(nil)).Elem(), ZonesMasterZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesMasterZoneSlaveZoneInput)(nil)).Elem(), ZonesMasterZoneSlaveZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesMasterZoneSlaveZoneArrayInput)(nil)).Elem(), ZonesMasterZoneSlaveZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclInput)(nil)).Elem(), GetAclsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAclsAclArrayInput)(nil)).Elem(), GetAclsAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateInput)(nil)).Elem(), GetCertificatesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateArrayInput)(nil)).Elem(), GetCertificatesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateTagInput)(nil)).Elem(), GetCertificatesCertificateTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesCertificateTagArrayInput)(nil)).Elem(), GetCertificatesCertificateTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesTagInput)(nil)).Elem(), GetCertificatesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificatesTagArrayInput)(nil)).Elem(), GetCertificatesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsClbInput)(nil)).Elem(), GetClbsClbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsClbArrayInput)(nil)).Elem(), GetClbsClbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsClbEipBillingConfigInput)(nil)).Elem(), GetClbsClbEipBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsClbEipBillingConfigArrayInput)(nil)).Elem(), GetClbsClbEipBillingConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsClbIpv6AddressBandwidthInput)(nil)).Elem(), GetClbsClbIpv6AddressBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsClbIpv6AddressBandwidthArrayInput)(nil)).Elem(), GetClbsClbIpv6AddressBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsClbTagInput)(nil)).Elem(), GetClbsClbTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsClbTagArrayInput)(nil)).Elem(), GetClbsClbTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsTagInput)(nil)).Elem(), GetClbsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClbsTagArrayInput)(nil)).Elem(), GetClbsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerInput)(nil)).Elem(), GetListenersListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetListenersListenerArrayInput)(nil)).Elem(), GetListenersListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleInput)(nil)).Elem(), GetRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRulesRuleArrayInput)(nil)).Elem(), GetRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerGroupServersServerInput)(nil)).Elem(), GetServerGroupServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerGroupServersServerArrayInput)(nil)).Elem(), GetServerGroupServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerGroupsGroupInput)(nil)).Elem(), GetServerGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerGroupsGroupArrayInput)(nil)).Elem(), GetServerGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesMasterZoneInput)(nil)).Elem(), GetZonesMasterZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesMasterZoneArrayInput)(nil)).Elem(), GetZonesMasterZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesMasterZoneSlaveZoneInput)(nil)).Elem(), GetZonesMasterZoneSlaveZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZonesMasterZoneSlaveZoneArrayInput)(nil)).Elem(), GetZonesMasterZoneSlaveZoneArray{})
	pulumi.RegisterOutputType(AclAclEntryOutput{})
	pulumi.RegisterOutputType(AclAclEntryArrayOutput{})
	pulumi.RegisterOutputType(AclsAclOutput{})
	pulumi.RegisterOutputType(AclsAclArrayOutput{})
	pulumi.RegisterOutputType(CertificateTagOutput{})
	pulumi.RegisterOutputType(CertificateTagArrayOutput{})
	pulumi.RegisterOutputType(CertificatesCertificateOutput{})
	pulumi.RegisterOutputType(CertificatesCertificateArrayOutput{})
	pulumi.RegisterOutputType(CertificatesCertificateTagOutput{})
	pulumi.RegisterOutputType(CertificatesCertificateTagArrayOutput{})
	pulumi.RegisterOutputType(CertificatesTagOutput{})
	pulumi.RegisterOutputType(CertificatesTagArrayOutput{})
	pulumi.RegisterOutputType(ClbEipBillingConfigOutput{})
	pulumi.RegisterOutputType(ClbEipBillingConfigPtrOutput{})
	pulumi.RegisterOutputType(ClbTagOutput{})
	pulumi.RegisterOutputType(ClbTagArrayOutput{})
	pulumi.RegisterOutputType(ClbsClbOutput{})
	pulumi.RegisterOutputType(ClbsClbArrayOutput{})
	pulumi.RegisterOutputType(ClbsClbEipBillingConfigOutput{})
	pulumi.RegisterOutputType(ClbsClbEipBillingConfigArrayOutput{})
	pulumi.RegisterOutputType(ClbsClbIpv6AddressBandwidthOutput{})
	pulumi.RegisterOutputType(ClbsClbIpv6AddressBandwidthArrayOutput{})
	pulumi.RegisterOutputType(ClbsClbTagOutput{})
	pulumi.RegisterOutputType(ClbsClbTagArrayOutput{})
	pulumi.RegisterOutputType(ClbsTagOutput{})
	pulumi.RegisterOutputType(ClbsTagArrayOutput{})
	pulumi.RegisterOutputType(ListenerHealthCheckOutput{})
	pulumi.RegisterOutputType(ListenerHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ListenersListenerOutput{})
	pulumi.RegisterOutputType(ListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(RulesRuleOutput{})
	pulumi.RegisterOutputType(RulesRuleArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupServersServerOutput{})
	pulumi.RegisterOutputType(ServerGroupServersServerArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupsGroupOutput{})
	pulumi.RegisterOutputType(ServerGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(ZonesMasterZoneOutput{})
	pulumi.RegisterOutputType(ZonesMasterZoneArrayOutput{})
	pulumi.RegisterOutputType(ZonesMasterZoneSlaveZoneOutput{})
	pulumi.RegisterOutputType(ZonesMasterZoneSlaveZoneArrayOutput{})
	pulumi.RegisterOutputType(GetAclsAclOutput{})
	pulumi.RegisterOutputType(GetAclsAclArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateTagOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateTagArrayOutput{})
	pulumi.RegisterOutputType(GetCertificatesTagOutput{})
	pulumi.RegisterOutputType(GetCertificatesTagArrayOutput{})
	pulumi.RegisterOutputType(GetClbsClbOutput{})
	pulumi.RegisterOutputType(GetClbsClbArrayOutput{})
	pulumi.RegisterOutputType(GetClbsClbEipBillingConfigOutput{})
	pulumi.RegisterOutputType(GetClbsClbEipBillingConfigArrayOutput{})
	pulumi.RegisterOutputType(GetClbsClbIpv6AddressBandwidthOutput{})
	pulumi.RegisterOutputType(GetClbsClbIpv6AddressBandwidthArrayOutput{})
	pulumi.RegisterOutputType(GetClbsClbTagOutput{})
	pulumi.RegisterOutputType(GetClbsClbTagArrayOutput{})
	pulumi.RegisterOutputType(GetClbsTagOutput{})
	pulumi.RegisterOutputType(GetClbsTagArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerOutput{})
	pulumi.RegisterOutputType(GetListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(GetRulesRuleOutput{})
	pulumi.RegisterOutputType(GetRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetServerGroupServersServerOutput{})
	pulumi.RegisterOutputType(GetServerGroupServersServerArrayOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetZonesMasterZoneOutput{})
	pulumi.RegisterOutputType(GetZonesMasterZoneArrayOutput{})
	pulumi.RegisterOutputType(GetZonesMasterZoneSlaveZoneOutput{})
	pulumi.RegisterOutputType(GetZonesMasterZoneSlaveZoneArrayOutput{})
}
