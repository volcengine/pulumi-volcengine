// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cloudfs quotas
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloudfs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudfs.Quotas(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func Quotas(ctx *pulumi.Context, args *QuotasArgs, opts ...pulumi.InvokeOption) (*QuotasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv QuotasResult
	err := ctx.Invoke("volcengine:cloudfs/quotas:Quotas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Quotas.
type QuotasArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by Quotas.
type QuotasResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The collection of query.
	Quotas []QuotasQuota `pulumi:"quotas"`
	// The total count of cloud fs quota query.
	TotalCount int `pulumi:"totalCount"`
}

func QuotasOutput(ctx *pulumi.Context, args QuotasOutputArgs, opts ...pulumi.InvokeOption) QuotasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (QuotasResult, error) {
			args := v.(QuotasArgs)
			r, err := Quotas(ctx, &args, opts...)
			var s QuotasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(QuotasResultOutput)
}

// A collection of arguments for invoking Quotas.
type QuotasOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (QuotasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuotasArgs)(nil)).Elem()
}

// A collection of values returned by Quotas.
type QuotasResultOutput struct{ *pulumi.OutputState }

func (QuotasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuotasResult)(nil)).Elem()
}

func (o QuotasResultOutput) ToQuotasResultOutput() QuotasResultOutput {
	return o
}

func (o QuotasResultOutput) ToQuotasResultOutputWithContext(ctx context.Context) QuotasResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o QuotasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v QuotasResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o QuotasResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuotasResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o QuotasResultOutput) Quotas() QuotasQuotaArrayOutput {
	return o.ApplyT(func(v QuotasResult) []QuotasQuota { return v.Quotas }).(QuotasQuotaArrayOutput)
}

// The total count of cloud fs quota query.
func (o QuotasResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v QuotasResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(QuotasResultOutput{})
}
