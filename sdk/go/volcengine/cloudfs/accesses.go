// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cloudfs accesses
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloudfs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudfs.GetAccesses(ctx, &cloudfs.GetAccessesArgs{
//				FsName: "tftest2",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.cloudfs.Accesses has been deprecated in favor of volcengine.cloudfs.getAccesses
func Accesses(ctx *pulumi.Context, args *AccessesArgs, opts ...pulumi.InvokeOption) (*AccessesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv AccessesResult
	err := ctx.Invoke("volcengine:cloudfs/accesses:Accesses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Accesses.
type AccessesArgs struct {
	// The name of file system.
	FsName string `pulumi:"fsName"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by Accesses.
type AccessesResult struct {
	// The collection of query.
	Accesses []AccessesAccess `pulumi:"accesses"`
	// The name of cloud fs.
	FsName string `pulumi:"fsName"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func AccessesOutput(ctx *pulumi.Context, args AccessesOutputArgs, opts ...pulumi.InvokeOption) AccessesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (AccessesResult, error) {
			args := v.(AccessesArgs)
			r, err := Accesses(ctx, &args, opts...)
			var s AccessesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(AccessesResultOutput)
}

// A collection of arguments for invoking Accesses.
type AccessesOutputArgs struct {
	// The name of file system.
	FsName pulumi.StringInput `pulumi:"fsName"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (AccessesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessesArgs)(nil)).Elem()
}

// A collection of values returned by Accesses.
type AccessesResultOutput struct{ *pulumi.OutputState }

func (AccessesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessesResult)(nil)).Elem()
}

func (o AccessesResultOutput) ToAccessesResultOutput() AccessesResultOutput {
	return o
}

func (o AccessesResultOutput) ToAccessesResultOutputWithContext(ctx context.Context) AccessesResultOutput {
	return o
}

// The collection of query.
func (o AccessesResultOutput) Accesses() AccessesAccessArrayOutput {
	return o.ApplyT(func(v AccessesResult) []AccessesAccess { return v.Accesses }).(AccessesAccessArrayOutput)
}

// The name of cloud fs.
func (o AccessesResultOutput) FsName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessesResult) string { return v.FsName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o AccessesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccessesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o AccessesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o AccessesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v AccessesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(AccessesResultOutput{})
}
