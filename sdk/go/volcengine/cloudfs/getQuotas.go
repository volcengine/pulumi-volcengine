// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cloudfs quotas
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloudfs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudfs.GetQuotas(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetQuotas(ctx *pulumi.Context, args *GetQuotasArgs, opts ...pulumi.InvokeOption) (*GetQuotasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQuotasResult
	err := ctx.Invoke("volcengine:cloudfs/getQuotas:getQuotas", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQuotas.
type GetQuotasArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getQuotas.
type GetQuotasResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The collection of query.
	Quotas []GetQuotasQuota `pulumi:"quotas"`
	// The total count of cloud fs quota query.
	TotalCount int `pulumi:"totalCount"`
}

func GetQuotasOutput(ctx *pulumi.Context, args GetQuotasOutputArgs, opts ...pulumi.InvokeOption) GetQuotasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQuotasResult, error) {
			args := v.(GetQuotasArgs)
			r, err := GetQuotas(ctx, &args, opts...)
			var s GetQuotasResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQuotasResultOutput)
}

// A collection of arguments for invoking getQuotas.
type GetQuotasOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetQuotasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasArgs)(nil)).Elem()
}

// A collection of values returned by getQuotas.
type GetQuotasResultOutput struct{ *pulumi.OutputState }

func (GetQuotasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasResult)(nil)).Elem()
}

func (o GetQuotasResultOutput) ToGetQuotasResultOutput() GetQuotasResultOutput {
	return o
}

func (o GetQuotasResultOutput) ToGetQuotasResultOutputWithContext(ctx context.Context) GetQuotasResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetQuotasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetQuotasResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQuotasResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetQuotasResultOutput) Quotas() GetQuotasQuotaArrayOutput {
	return o.ApplyT(func(v GetQuotasResult) []GetQuotasQuota { return v.Quotas }).(GetQuotasQuotaArrayOutput)
}

// The total count of cloud fs quota query.
func (o GetQuotasResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotasResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQuotasResultOutput{})
}
