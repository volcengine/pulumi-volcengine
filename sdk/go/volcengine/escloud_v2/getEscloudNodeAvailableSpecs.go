// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package escloud_v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of escloud node available specs
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/escloud_v2"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := escloud_v2.GetEscloudNodeAvailableSpecs(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEscloudNodeAvailableSpecs(ctx *pulumi.Context, args *GetEscloudNodeAvailableSpecsArgs, opts ...pulumi.InvokeOption) (*GetEscloudNodeAvailableSpecsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEscloudNodeAvailableSpecsResult
	err := ctx.Invoke("volcengine:escloud_v2/getEscloudNodeAvailableSpecs:getEscloudNodeAvailableSpecs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEscloudNodeAvailableSpecs.
type GetEscloudNodeAvailableSpecsArgs struct {
	// The id of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getEscloudNodeAvailableSpecs.
type GetEscloudNodeAvailableSpecsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	InstanceId *string `pulumi:"instanceId"`
	// The collection of query.
	NodeSpecs  []GetEscloudNodeAvailableSpecsNodeSpec `pulumi:"nodeSpecs"`
	OutputFile *string                                `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetEscloudNodeAvailableSpecsOutput(ctx *pulumi.Context, args GetEscloudNodeAvailableSpecsOutputArgs, opts ...pulumi.InvokeOption) GetEscloudNodeAvailableSpecsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEscloudNodeAvailableSpecsResult, error) {
			args := v.(GetEscloudNodeAvailableSpecsArgs)
			r, err := GetEscloudNodeAvailableSpecs(ctx, &args, opts...)
			var s GetEscloudNodeAvailableSpecsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEscloudNodeAvailableSpecsResultOutput)
}

// A collection of arguments for invoking getEscloudNodeAvailableSpecs.
type GetEscloudNodeAvailableSpecsOutputArgs struct {
	// The id of the instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetEscloudNodeAvailableSpecsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEscloudNodeAvailableSpecsArgs)(nil)).Elem()
}

// A collection of values returned by getEscloudNodeAvailableSpecs.
type GetEscloudNodeAvailableSpecsResultOutput struct{ *pulumi.OutputState }

func (GetEscloudNodeAvailableSpecsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEscloudNodeAvailableSpecsResult)(nil)).Elem()
}

func (o GetEscloudNodeAvailableSpecsResultOutput) ToGetEscloudNodeAvailableSpecsResultOutput() GetEscloudNodeAvailableSpecsResultOutput {
	return o
}

func (o GetEscloudNodeAvailableSpecsResultOutput) ToGetEscloudNodeAvailableSpecsResultOutputWithContext(ctx context.Context) GetEscloudNodeAvailableSpecsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetEscloudNodeAvailableSpecsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEscloudNodeAvailableSpecsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEscloudNodeAvailableSpecsResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEscloudNodeAvailableSpecsResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetEscloudNodeAvailableSpecsResultOutput) NodeSpecs() GetEscloudNodeAvailableSpecsNodeSpecArrayOutput {
	return o.ApplyT(func(v GetEscloudNodeAvailableSpecsResult) []GetEscloudNodeAvailableSpecsNodeSpec { return v.NodeSpecs }).(GetEscloudNodeAvailableSpecsNodeSpecArrayOutput)
}

func (o GetEscloudNodeAvailableSpecsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEscloudNodeAvailableSpecsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetEscloudNodeAvailableSpecsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetEscloudNodeAvailableSpecsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEscloudNodeAvailableSpecsResultOutput{})
}
