// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package escloud_v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of escloud zones v2
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/escloud_v2"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := escloud_v2.GetEscloudZonesV2(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEscloudZonesV2(ctx *pulumi.Context, args *GetEscloudZonesV2Args, opts ...pulumi.InvokeOption) (*GetEscloudZonesV2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEscloudZonesV2Result
	err := ctx.Invoke("volcengine:escloud_v2/getEscloudZonesV2:getEscloudZonesV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEscloudZonesV2.
type GetEscloudZonesV2Args struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getEscloudZonesV2.
type GetEscloudZonesV2Result struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The collection of query.
	Zones []GetEscloudZonesV2Zone `pulumi:"zones"`
}

func GetEscloudZonesV2Output(ctx *pulumi.Context, args GetEscloudZonesV2OutputArgs, opts ...pulumi.InvokeOption) GetEscloudZonesV2ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEscloudZonesV2Result, error) {
			args := v.(GetEscloudZonesV2Args)
			r, err := GetEscloudZonesV2(ctx, &args, opts...)
			var s GetEscloudZonesV2Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEscloudZonesV2ResultOutput)
}

// A collection of arguments for invoking getEscloudZonesV2.
type GetEscloudZonesV2OutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetEscloudZonesV2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEscloudZonesV2Args)(nil)).Elem()
}

// A collection of values returned by getEscloudZonesV2.
type GetEscloudZonesV2ResultOutput struct{ *pulumi.OutputState }

func (GetEscloudZonesV2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEscloudZonesV2Result)(nil)).Elem()
}

func (o GetEscloudZonesV2ResultOutput) ToGetEscloudZonesV2ResultOutput() GetEscloudZonesV2ResultOutput {
	return o
}

func (o GetEscloudZonesV2ResultOutput) ToGetEscloudZonesV2ResultOutputWithContext(ctx context.Context) GetEscloudZonesV2ResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetEscloudZonesV2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEscloudZonesV2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEscloudZonesV2ResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEscloudZonesV2Result) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of query.
func (o GetEscloudZonesV2ResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetEscloudZonesV2Result) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The collection of query.
func (o GetEscloudZonesV2ResultOutput) Zones() GetEscloudZonesV2ZoneArrayOutput {
	return o.ApplyT(func(v GetEscloudZonesV2Result) []GetEscloudZonesV2Zone { return v.Zones }).(GetEscloudZonesV2ZoneArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEscloudZonesV2ResultOutput{})
}
