// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package escloud_v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/ecs"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/escloud_v2"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooZones, err := ecs.GetZones(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			// create vpc
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//				DnsServers: pulumi.StringArray{
//					pulumi.String("8.8.8.8"),
//					pulumi.String("114.114.114.114"),
//				},
//				ProjectName: pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			// create subnet
//			fooSubnet, err := vpc.NewSubnet(ctx, "fooSubnet", &vpc.SubnetArgs{
//				SubnetName: pulumi.String("acc-test-subnet"),
//				CidrBlock:  pulumi.String("172.16.0.0/24"),
//				ZoneId:     pulumi.String(fooZones.Zones[0].Id),
//				VpcId:      fooVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			// create escloud instance
//			fooEscloudInstanceV2, err := escloud_v2.NewEscloudInstanceV2(ctx, "fooEscloudInstanceV2", &escloud_v2.EscloudInstanceV2Args{
//				InstanceName: pulumi.String("acc-test-escloud-instance"),
//				Version:      pulumi.String("V7_10"),
//				ZoneIds: pulumi.StringArray{
//					pulumi.String(fooZones.Zones[0].Id),
//					pulumi.String(fooZones.Zones[1].Id),
//					pulumi.String(fooZones.Zones[2].Id),
//				},
//				SubnetId:           fooSubnet.ID(),
//				EnableHttps:        pulumi.Bool(false),
//				AdminPassword:      pulumi.String("Password@@123"),
//				ChargeType:         pulumi.String("PostPaid"),
//				AutoRenew:          pulumi.Bool(false),
//				Period:             pulumi.Int(1),
//				ConfigurationCode:  pulumi.String("es.standard"),
//				EnablePureMaster:   pulumi.Bool(true),
//				DeletionProtection: pulumi.Bool(false),
//				ProjectName:        pulumi.String("default"),
//				NodeSpecsAssigns: escloud_v2.EscloudInstanceV2NodeSpecsAssignArray{
//					&escloud_v2.EscloudInstanceV2NodeSpecsAssignArgs{
//						Type:             pulumi.String("Master"),
//						Number:           pulumi.Int(3),
//						ResourceSpecName: pulumi.String("es.x2.medium"),
//						StorageSpecName:  pulumi.String("es.volume.essd.pl0"),
//						StorageSize:      pulumi.Int(20),
//					},
//					&escloud_v2.EscloudInstanceV2NodeSpecsAssignArgs{
//						Type:             pulumi.String("Hot"),
//						Number:           pulumi.Int(6),
//						ResourceSpecName: pulumi.String("es.x2.medium"),
//						StorageSpecName:  pulumi.String("es.volume.essd.flexpl-standard"),
//						StorageSize:      pulumi.Int(500),
//						ExtraPerformance: &escloud_v2.EscloudInstanceV2NodeSpecsAssignExtraPerformanceArgs{
//							Throughput: pulumi.Int(65),
//						},
//					},
//					&escloud_v2.EscloudInstanceV2NodeSpecsAssignArgs{
//						Type:             pulumi.String("Kibana"),
//						Number:           pulumi.Int(1),
//						ResourceSpecName: pulumi.String("kibana.x2.small"),
//						StorageSpecName:  pulumi.String(""),
//						StorageSize:      pulumi.Int(0),
//					},
//				},
//				NetworkSpecs: escloud_v2.EscloudInstanceV2NetworkSpecArray{
//					&escloud_v2.EscloudInstanceV2NetworkSpecArgs{
//						Type:      pulumi.String("Elasticsearch"),
//						Bandwidth: pulumi.Int(1),
//						IsOpen:    pulumi.Bool(true),
//						SpecName:  pulumi.String("es.eip.bgp_fixed_bandwidth"),
//					},
//					&escloud_v2.EscloudInstanceV2NetworkSpecArgs{
//						Type:      pulumi.String("Kibana"),
//						Bandwidth: pulumi.Int(1),
//						IsOpen:    pulumi.Bool(true),
//						SpecName:  pulumi.String("es.eip.bgp_fixed_bandwidth"),
//					},
//				},
//				Tags: escloud_v2.EscloudInstanceV2TagArray{
//					&escloud_v2.EscloudInstanceV2TagArgs{
//						Key:   pulumi.String("k1"),
//						Value: pulumi.String("v1"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// create escloud ip white list
//			_, err = escloud_v2.NewEscloudIpWhiteList(ctx, "fooEscloudIpWhiteList", &escloud_v2.EscloudIpWhiteListArgs{
//				InstanceId: fooEscloudInstanceV2.ID(),
//				Type:       pulumi.String("public"),
//				Component:  pulumi.String("es"),
//				IpLists: pulumi.StringArray{
//					pulumi.String("172.16.0.10"),
//					pulumi.String("172.16.0.11"),
//					pulumi.String("172.16.0.12"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// EscloudInstanceV2 can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2 default resource_id
// ```
type EscloudInstanceV2 struct {
	pulumi.CustomResourceState

	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword pulumi.StringOutput `pulumi:"adminPassword"`
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// The cerebro private domain of instance.
	CerebroPrivateDomain pulumi.StringOutput `pulumi:"cerebroPrivateDomain"`
	// The cerebro public domain of instance.
	CerebroPublicDomain pulumi.StringOutput `pulumi:"cerebroPublicDomain"`
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringOutput `pulumi:"chargeType"`
	// Configuration code used for billing.
	ConfigurationCode pulumi.StringOutput `pulumi:"configurationCode"`
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// Whether Https access is enabled.
	EnableHttps pulumi.BoolOutput `pulumi:"enableHttps"`
	// Whether the Master node is independent.
	EnablePureMaster pulumi.BoolOutput `pulumi:"enablePureMaster"`
	// The eip address of instance.
	EsEip pulumi.StringOutput `pulumi:"esEip"`
	// The eip id associated with the instance.
	EsEipId pulumi.StringOutput `pulumi:"esEipId"`
	// The es private domain of instance.
	EsPrivateDomain pulumi.StringOutput `pulumi:"esPrivateDomain"`
	// The es private endpoint of instance.
	EsPrivateEndpoint pulumi.StringOutput `pulumi:"esPrivateEndpoint"`
	// The whitelist of es private ip.
	EsPrivateIpWhitelist pulumi.StringOutput `pulumi:"esPrivateIpWhitelist"`
	// The es public domain of instance.
	EsPublicDomain pulumi.StringOutput `pulumi:"esPublicDomain"`
	// The es public endpoint of instance.
	EsPublicEndpoint pulumi.StringOutput `pulumi:"esPublicEndpoint"`
	// The whitelist of es public ip.
	EsPublicIpWhitelist pulumi.StringOutput `pulumi:"esPublicIpWhitelist"`
	// The name of ESCloud instance.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The eip address of kibana.
	KibanaEip pulumi.StringOutput `pulumi:"kibanaEip"`
	// The eip id associated with kibana.
	KibanaEipId pulumi.StringOutput `pulumi:"kibanaEipId"`
	// The kibana private domain of instance.
	KibanaPrivateDomain pulumi.StringOutput `pulumi:"kibanaPrivateDomain"`
	// The whitelist of kibana private ip.
	KibanaPrivateIpWhitelist pulumi.StringOutput `pulumi:"kibanaPrivateIpWhitelist"`
	// The kibana public domain of instance.
	KibanaPublicDomain pulumi.StringOutput `pulumi:"kibanaPublicDomain"`
	// The whitelist of kibana public ip.
	KibanaPublicIpWhitelist pulumi.StringOutput `pulumi:"kibanaPublicIpWhitelist"`
	// The main zone id of instance.
	MainZoneId pulumi.StringOutput `pulumi:"mainZoneId"`
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays pulumi.StringArrayOutput `pulumi:"maintenanceDays"`
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime pulumi.StringOutput `pulumi:"maintenanceTime"`
	// The public network config of the ESCloud instance.
	NetworkSpecs EscloudInstanceV2NetworkSpecArrayOutput `pulumi:"networkSpecs"`
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns EscloudInstanceV2NodeSpecsAssignArrayOutput `pulumi:"nodeSpecsAssigns"`
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// The project name to which the ESCloud instance belongs.
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// The status of instance.
	Status pulumi.StringOutput `pulumi:"status"`
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Tags.
	Tags EscloudInstanceV2TagArrayOutput `pulumi:"tags"`
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version pulumi.StringOutput `pulumi:"version"`
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds pulumi.StringArrayOutput `pulumi:"zoneIds"`
}

// NewEscloudInstanceV2 registers a new resource with the given unique name, arguments, and options.
func NewEscloudInstanceV2(ctx *pulumi.Context,
	name string, args *EscloudInstanceV2Args, opts ...pulumi.ResourceOption) (*EscloudInstanceV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'AdminPassword'")
	}
	if args.ChargeType == nil {
		return nil, errors.New("invalid value for required argument 'ChargeType'")
	}
	if args.ConfigurationCode == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationCode'")
	}
	if args.EnableHttps == nil {
		return nil, errors.New("invalid value for required argument 'EnableHttps'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.NodeSpecsAssigns == nil {
		return nil, errors.New("invalid value for required argument 'NodeSpecsAssigns'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	if args.ZoneIds == nil {
		return nil, errors.New("invalid value for required argument 'ZoneIds'")
	}
	if args.AdminPassword != nil {
		args.AdminPassword = pulumi.ToSecret(args.AdminPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"adminPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EscloudInstanceV2
	err := ctx.RegisterResource("volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEscloudInstanceV2 gets an existing EscloudInstanceV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEscloudInstanceV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EscloudInstanceV2State, opts ...pulumi.ResourceOption) (*EscloudInstanceV2, error) {
	var resource EscloudInstanceV2
	err := ctx.ReadResource("volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EscloudInstanceV2 resources.
type escloudInstanceV2State struct {
	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword *string `pulumi:"adminPassword"`
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The cerebro private domain of instance.
	CerebroPrivateDomain *string `pulumi:"cerebroPrivateDomain"`
	// The cerebro public domain of instance.
	CerebroPublicDomain *string `pulumi:"cerebroPublicDomain"`
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType *string `pulumi:"chargeType"`
	// Configuration code used for billing.
	ConfigurationCode *string `pulumi:"configurationCode"`
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Whether Https access is enabled.
	EnableHttps *bool `pulumi:"enableHttps"`
	// Whether the Master node is independent.
	EnablePureMaster *bool `pulumi:"enablePureMaster"`
	// The eip address of instance.
	EsEip *string `pulumi:"esEip"`
	// The eip id associated with the instance.
	EsEipId *string `pulumi:"esEipId"`
	// The es private domain of instance.
	EsPrivateDomain *string `pulumi:"esPrivateDomain"`
	// The es private endpoint of instance.
	EsPrivateEndpoint *string `pulumi:"esPrivateEndpoint"`
	// The whitelist of es private ip.
	EsPrivateIpWhitelist *string `pulumi:"esPrivateIpWhitelist"`
	// The es public domain of instance.
	EsPublicDomain *string `pulumi:"esPublicDomain"`
	// The es public endpoint of instance.
	EsPublicEndpoint *string `pulumi:"esPublicEndpoint"`
	// The whitelist of es public ip.
	EsPublicIpWhitelist *string `pulumi:"esPublicIpWhitelist"`
	// The name of ESCloud instance.
	InstanceName *string `pulumi:"instanceName"`
	// The eip address of kibana.
	KibanaEip *string `pulumi:"kibanaEip"`
	// The eip id associated with kibana.
	KibanaEipId *string `pulumi:"kibanaEipId"`
	// The kibana private domain of instance.
	KibanaPrivateDomain *string `pulumi:"kibanaPrivateDomain"`
	// The whitelist of kibana private ip.
	KibanaPrivateIpWhitelist *string `pulumi:"kibanaPrivateIpWhitelist"`
	// The kibana public domain of instance.
	KibanaPublicDomain *string `pulumi:"kibanaPublicDomain"`
	// The whitelist of kibana public ip.
	KibanaPublicIpWhitelist *string `pulumi:"kibanaPublicIpWhitelist"`
	// The main zone id of instance.
	MainZoneId *string `pulumi:"mainZoneId"`
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays []string `pulumi:"maintenanceDays"`
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime *string `pulumi:"maintenanceTime"`
	// The public network config of the ESCloud instance.
	NetworkSpecs []EscloudInstanceV2NetworkSpec `pulumi:"networkSpecs"`
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns []EscloudInstanceV2NodeSpecsAssign `pulumi:"nodeSpecsAssigns"`
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period *int `pulumi:"period"`
	// The project name to which the ESCloud instance belongs.
	ProjectName *string `pulumi:"projectName"`
	// The status of instance.
	Status *string `pulumi:"status"`
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId *string `pulumi:"subnetId"`
	// Tags.
	Tags []EscloudInstanceV2Tag `pulumi:"tags"`
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version *string `pulumi:"version"`
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds []string `pulumi:"zoneIds"`
}

type EscloudInstanceV2State struct {
	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword pulumi.StringPtrInput
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew pulumi.BoolPtrInput
	// The cerebro private domain of instance.
	CerebroPrivateDomain pulumi.StringPtrInput
	// The cerebro public domain of instance.
	CerebroPublicDomain pulumi.StringPtrInput
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringPtrInput
	// Configuration code used for billing.
	ConfigurationCode pulumi.StringPtrInput
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection pulumi.BoolPtrInput
	// Whether Https access is enabled.
	EnableHttps pulumi.BoolPtrInput
	// Whether the Master node is independent.
	EnablePureMaster pulumi.BoolPtrInput
	// The eip address of instance.
	EsEip pulumi.StringPtrInput
	// The eip id associated with the instance.
	EsEipId pulumi.StringPtrInput
	// The es private domain of instance.
	EsPrivateDomain pulumi.StringPtrInput
	// The es private endpoint of instance.
	EsPrivateEndpoint pulumi.StringPtrInput
	// The whitelist of es private ip.
	EsPrivateIpWhitelist pulumi.StringPtrInput
	// The es public domain of instance.
	EsPublicDomain pulumi.StringPtrInput
	// The es public endpoint of instance.
	EsPublicEndpoint pulumi.StringPtrInput
	// The whitelist of es public ip.
	EsPublicIpWhitelist pulumi.StringPtrInput
	// The name of ESCloud instance.
	InstanceName pulumi.StringPtrInput
	// The eip address of kibana.
	KibanaEip pulumi.StringPtrInput
	// The eip id associated with kibana.
	KibanaEipId pulumi.StringPtrInput
	// The kibana private domain of instance.
	KibanaPrivateDomain pulumi.StringPtrInput
	// The whitelist of kibana private ip.
	KibanaPrivateIpWhitelist pulumi.StringPtrInput
	// The kibana public domain of instance.
	KibanaPublicDomain pulumi.StringPtrInput
	// The whitelist of kibana public ip.
	KibanaPublicIpWhitelist pulumi.StringPtrInput
	// The main zone id of instance.
	MainZoneId pulumi.StringPtrInput
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays pulumi.StringArrayInput
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime pulumi.StringPtrInput
	// The public network config of the ESCloud instance.
	NetworkSpecs EscloudInstanceV2NetworkSpecArrayInput
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns EscloudInstanceV2NodeSpecsAssignArrayInput
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period pulumi.IntPtrInput
	// The project name to which the ESCloud instance belongs.
	ProjectName pulumi.StringPtrInput
	// The status of instance.
	Status pulumi.StringPtrInput
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId pulumi.StringPtrInput
	// Tags.
	Tags EscloudInstanceV2TagArrayInput
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version pulumi.StringPtrInput
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds pulumi.StringArrayInput
}

func (EscloudInstanceV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*escloudInstanceV2State)(nil)).Elem()
}

type escloudInstanceV2Args struct {
	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword string `pulumi:"adminPassword"`
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew *bool `pulumi:"autoRenew"`
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType string `pulumi:"chargeType"`
	// Configuration code used for billing.
	ConfigurationCode string `pulumi:"configurationCode"`
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Whether Https access is enabled.
	EnableHttps bool `pulumi:"enableHttps"`
	// Whether the Master node is independent.
	EnablePureMaster *bool `pulumi:"enablePureMaster"`
	// The name of ESCloud instance.
	InstanceName string `pulumi:"instanceName"`
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays []string `pulumi:"maintenanceDays"`
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime *string `pulumi:"maintenanceTime"`
	// The public network config of the ESCloud instance.
	NetworkSpecs []EscloudInstanceV2NetworkSpec `pulumi:"networkSpecs"`
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns []EscloudInstanceV2NodeSpecsAssign `pulumi:"nodeSpecsAssigns"`
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period *int `pulumi:"period"`
	// The project name to which the ESCloud instance belongs.
	ProjectName *string `pulumi:"projectName"`
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []EscloudInstanceV2Tag `pulumi:"tags"`
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version string `pulumi:"version"`
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds []string `pulumi:"zoneIds"`
}

// The set of arguments for constructing a EscloudInstanceV2 resource.
type EscloudInstanceV2Args struct {
	// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
	AdminPassword pulumi.StringInput
	// Whether to automatically renew in prepaid scenarios. Default is false.
	AutoRenew pulumi.BoolPtrInput
	// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
	ChargeType pulumi.StringInput
	// Configuration code used for billing.
	ConfigurationCode pulumi.StringInput
	// Whether enable deletion protection for ESCloud instance. Default is false.
	DeletionProtection pulumi.BoolPtrInput
	// Whether Https access is enabled.
	EnableHttps pulumi.BoolInput
	// Whether the Master node is independent.
	EnablePureMaster pulumi.BoolPtrInput
	// The name of ESCloud instance.
	InstanceName pulumi.StringInput
	// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
	MaintenanceDays pulumi.StringArrayInput
	// The maintainable time period for the instance. Works only on modified scenes.
	MaintenanceTime pulumi.StringPtrInput
	// The public network config of the ESCloud instance.
	NetworkSpecs EscloudInstanceV2NetworkSpecArrayInput
	// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
	NodeSpecsAssigns EscloudInstanceV2NodeSpecsAssignArrayInput
	// Purchase duration in prepaid scenarios. Unit: Monthly.
	Period pulumi.IntPtrInput
	// The project name to which the ESCloud instance belongs.
	ProjectName pulumi.StringPtrInput
	// The id of subnet, the subnet must belong to the AZ selected.
	SubnetId pulumi.StringInput
	// Tags.
	Tags EscloudInstanceV2TagArrayInput
	// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
	Version pulumi.StringInput
	// The zone id of the ESCloud instance. Support specifying multiple availability zones.
	// The first zone id is the primary availability zone, while the rest are backup availability zones.
	ZoneIds pulumi.StringArrayInput
}

func (EscloudInstanceV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*escloudInstanceV2Args)(nil)).Elem()
}

type EscloudInstanceV2Input interface {
	pulumi.Input

	ToEscloudInstanceV2Output() EscloudInstanceV2Output
	ToEscloudInstanceV2OutputWithContext(ctx context.Context) EscloudInstanceV2Output
}

func (*EscloudInstanceV2) ElementType() reflect.Type {
	return reflect.TypeOf((**EscloudInstanceV2)(nil)).Elem()
}

func (i *EscloudInstanceV2) ToEscloudInstanceV2Output() EscloudInstanceV2Output {
	return i.ToEscloudInstanceV2OutputWithContext(context.Background())
}

func (i *EscloudInstanceV2) ToEscloudInstanceV2OutputWithContext(ctx context.Context) EscloudInstanceV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(EscloudInstanceV2Output)
}

// EscloudInstanceV2ArrayInput is an input type that accepts EscloudInstanceV2Array and EscloudInstanceV2ArrayOutput values.
// You can construct a concrete instance of `EscloudInstanceV2ArrayInput` via:
//
//	EscloudInstanceV2Array{ EscloudInstanceV2Args{...} }
type EscloudInstanceV2ArrayInput interface {
	pulumi.Input

	ToEscloudInstanceV2ArrayOutput() EscloudInstanceV2ArrayOutput
	ToEscloudInstanceV2ArrayOutputWithContext(context.Context) EscloudInstanceV2ArrayOutput
}

type EscloudInstanceV2Array []EscloudInstanceV2Input

func (EscloudInstanceV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EscloudInstanceV2)(nil)).Elem()
}

func (i EscloudInstanceV2Array) ToEscloudInstanceV2ArrayOutput() EscloudInstanceV2ArrayOutput {
	return i.ToEscloudInstanceV2ArrayOutputWithContext(context.Background())
}

func (i EscloudInstanceV2Array) ToEscloudInstanceV2ArrayOutputWithContext(ctx context.Context) EscloudInstanceV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EscloudInstanceV2ArrayOutput)
}

// EscloudInstanceV2MapInput is an input type that accepts EscloudInstanceV2Map and EscloudInstanceV2MapOutput values.
// You can construct a concrete instance of `EscloudInstanceV2MapInput` via:
//
//	EscloudInstanceV2Map{ "key": EscloudInstanceV2Args{...} }
type EscloudInstanceV2MapInput interface {
	pulumi.Input

	ToEscloudInstanceV2MapOutput() EscloudInstanceV2MapOutput
	ToEscloudInstanceV2MapOutputWithContext(context.Context) EscloudInstanceV2MapOutput
}

type EscloudInstanceV2Map map[string]EscloudInstanceV2Input

func (EscloudInstanceV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EscloudInstanceV2)(nil)).Elem()
}

func (i EscloudInstanceV2Map) ToEscloudInstanceV2MapOutput() EscloudInstanceV2MapOutput {
	return i.ToEscloudInstanceV2MapOutputWithContext(context.Background())
}

func (i EscloudInstanceV2Map) ToEscloudInstanceV2MapOutputWithContext(ctx context.Context) EscloudInstanceV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EscloudInstanceV2MapOutput)
}

type EscloudInstanceV2Output struct{ *pulumi.OutputState }

func (EscloudInstanceV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**EscloudInstanceV2)(nil)).Elem()
}

func (o EscloudInstanceV2Output) ToEscloudInstanceV2Output() EscloudInstanceV2Output {
	return o
}

func (o EscloudInstanceV2Output) ToEscloudInstanceV2OutputWithContext(ctx context.Context) EscloudInstanceV2Output {
	return o
}

// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
func (o EscloudInstanceV2Output) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.AdminPassword }).(pulumi.StringOutput)
}

// Whether to automatically renew in prepaid scenarios. Default is false.
func (o EscloudInstanceV2Output) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// The cerebro private domain of instance.
func (o EscloudInstanceV2Output) CerebroPrivateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.CerebroPrivateDomain }).(pulumi.StringOutput)
}

// The cerebro public domain of instance.
func (o EscloudInstanceV2Output) CerebroPublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.CerebroPublicDomain }).(pulumi.StringOutput)
}

// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
func (o EscloudInstanceV2Output) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.ChargeType }).(pulumi.StringOutput)
}

// Configuration code used for billing.
func (o EscloudInstanceV2Output) ConfigurationCode() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.ConfigurationCode }).(pulumi.StringOutput)
}

// Whether enable deletion protection for ESCloud instance. Default is false.
func (o EscloudInstanceV2Output) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// Whether Https access is enabled.
func (o EscloudInstanceV2Output) EnableHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.BoolOutput { return v.EnableHttps }).(pulumi.BoolOutput)
}

// Whether the Master node is independent.
func (o EscloudInstanceV2Output) EnablePureMaster() pulumi.BoolOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.BoolOutput { return v.EnablePureMaster }).(pulumi.BoolOutput)
}

// The eip address of instance.
func (o EscloudInstanceV2Output) EsEip() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.EsEip }).(pulumi.StringOutput)
}

// The eip id associated with the instance.
func (o EscloudInstanceV2Output) EsEipId() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.EsEipId }).(pulumi.StringOutput)
}

// The es private domain of instance.
func (o EscloudInstanceV2Output) EsPrivateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.EsPrivateDomain }).(pulumi.StringOutput)
}

// The es private endpoint of instance.
func (o EscloudInstanceV2Output) EsPrivateEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.EsPrivateEndpoint }).(pulumi.StringOutput)
}

// The whitelist of es private ip.
func (o EscloudInstanceV2Output) EsPrivateIpWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.EsPrivateIpWhitelist }).(pulumi.StringOutput)
}

// The es public domain of instance.
func (o EscloudInstanceV2Output) EsPublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.EsPublicDomain }).(pulumi.StringOutput)
}

// The es public endpoint of instance.
func (o EscloudInstanceV2Output) EsPublicEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.EsPublicEndpoint }).(pulumi.StringOutput)
}

// The whitelist of es public ip.
func (o EscloudInstanceV2Output) EsPublicIpWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.EsPublicIpWhitelist }).(pulumi.StringOutput)
}

// The name of ESCloud instance.
func (o EscloudInstanceV2Output) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// The eip address of kibana.
func (o EscloudInstanceV2Output) KibanaEip() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.KibanaEip }).(pulumi.StringOutput)
}

// The eip id associated with kibana.
func (o EscloudInstanceV2Output) KibanaEipId() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.KibanaEipId }).(pulumi.StringOutput)
}

// The kibana private domain of instance.
func (o EscloudInstanceV2Output) KibanaPrivateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.KibanaPrivateDomain }).(pulumi.StringOutput)
}

// The whitelist of kibana private ip.
func (o EscloudInstanceV2Output) KibanaPrivateIpWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.KibanaPrivateIpWhitelist }).(pulumi.StringOutput)
}

// The kibana public domain of instance.
func (o EscloudInstanceV2Output) KibanaPublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.KibanaPublicDomain }).(pulumi.StringOutput)
}

// The whitelist of kibana public ip.
func (o EscloudInstanceV2Output) KibanaPublicIpWhitelist() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.KibanaPublicIpWhitelist }).(pulumi.StringOutput)
}

// The main zone id of instance.
func (o EscloudInstanceV2Output) MainZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.MainZoneId }).(pulumi.StringOutput)
}

// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
func (o EscloudInstanceV2Output) MaintenanceDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringArrayOutput { return v.MaintenanceDays }).(pulumi.StringArrayOutput)
}

// The maintainable time period for the instance. Works only on modified scenes.
func (o EscloudInstanceV2Output) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// The public network config of the ESCloud instance.
func (o EscloudInstanceV2Output) NetworkSpecs() EscloudInstanceV2NetworkSpecArrayOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) EscloudInstanceV2NetworkSpecArrayOutput { return v.NetworkSpecs }).(EscloudInstanceV2NetworkSpecArrayOutput)
}

// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
func (o EscloudInstanceV2Output) NodeSpecsAssigns() EscloudInstanceV2NodeSpecsAssignArrayOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) EscloudInstanceV2NodeSpecsAssignArrayOutput { return v.NodeSpecsAssigns }).(EscloudInstanceV2NodeSpecsAssignArrayOutput)
}

// Purchase duration in prepaid scenarios. Unit: Monthly.
func (o EscloudInstanceV2Output) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// The project name to which the ESCloud instance belongs.
func (o EscloudInstanceV2Output) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of instance.
func (o EscloudInstanceV2Output) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The id of subnet, the subnet must belong to the AZ selected.
func (o EscloudInstanceV2Output) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o EscloudInstanceV2Output) Tags() EscloudInstanceV2TagArrayOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) EscloudInstanceV2TagArrayOutput { return v.Tags }).(EscloudInstanceV2TagArrayOutput)
}

// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
func (o EscloudInstanceV2Output) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// The zone id of the ESCloud instance. Support specifying multiple availability zones.
// The first zone id is the primary availability zone, while the rest are backup availability zones.
func (o EscloudInstanceV2Output) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EscloudInstanceV2) pulumi.StringArrayOutput { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type EscloudInstanceV2ArrayOutput struct{ *pulumi.OutputState }

func (EscloudInstanceV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EscloudInstanceV2)(nil)).Elem()
}

func (o EscloudInstanceV2ArrayOutput) ToEscloudInstanceV2ArrayOutput() EscloudInstanceV2ArrayOutput {
	return o
}

func (o EscloudInstanceV2ArrayOutput) ToEscloudInstanceV2ArrayOutputWithContext(ctx context.Context) EscloudInstanceV2ArrayOutput {
	return o
}

func (o EscloudInstanceV2ArrayOutput) Index(i pulumi.IntInput) EscloudInstanceV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EscloudInstanceV2 {
		return vs[0].([]*EscloudInstanceV2)[vs[1].(int)]
	}).(EscloudInstanceV2Output)
}

type EscloudInstanceV2MapOutput struct{ *pulumi.OutputState }

func (EscloudInstanceV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EscloudInstanceV2)(nil)).Elem()
}

func (o EscloudInstanceV2MapOutput) ToEscloudInstanceV2MapOutput() EscloudInstanceV2MapOutput {
	return o
}

func (o EscloudInstanceV2MapOutput) ToEscloudInstanceV2MapOutputWithContext(ctx context.Context) EscloudInstanceV2MapOutput {
	return o
}

func (o EscloudInstanceV2MapOutput) MapIndex(k pulumi.StringInput) EscloudInstanceV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EscloudInstanceV2 {
		return vs[0].(map[string]*EscloudInstanceV2)[vs[1].(string)]
	}).(EscloudInstanceV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EscloudInstanceV2Input)(nil)).Elem(), &EscloudInstanceV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*EscloudInstanceV2ArrayInput)(nil)).Elem(), EscloudInstanceV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*EscloudInstanceV2MapInput)(nil)).Elem(), EscloudInstanceV2Map{})
	pulumi.RegisterOutputType(EscloudInstanceV2Output{})
	pulumi.RegisterOutputType(EscloudInstanceV2ArrayOutput{})
	pulumi.RegisterOutputType(EscloudInstanceV2MapOutput{})
}
