// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package private_zone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage private zone
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/private_zone"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := private_zone.NewPrivateZone(ctx, "foo", &private_zone.PrivateZoneArgs{
//				IntelligentMode: pulumi.Bool(true),
//				LoadBalanceMode: pulumi.Bool(true),
//				RecursionMode:   pulumi.Bool(true),
//				Remark:          pulumi.String("acc-test-new"),
//				Vpcs: private_zone.PrivateZoneVpcArray{
//					&private_zone.PrivateZoneVpcArgs{
//						VpcId: pulumi.String("vpc-rs4mi0jedipsv0x57pf****"),
//					},
//					&private_zone.PrivateZoneVpcArgs{
//						Region: pulumi.String("cn-shanghai"),
//						VpcId:  pulumi.String("vpc-3qdzk9xju6o747prml0jk****"),
//					},
//				},
//				ZoneName: pulumi.String("acc-test-pz.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// PrivateZone can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:private_zone/privateZone:PrivateZone default resource_id
// ```
type PrivateZone struct {
	pulumi.CustomResourceState

	// Whether to enable the intelligent mode of the private zone.
	IntelligentMode pulumi.BoolPtrOutput `pulumi:"intelligentMode"`
	// Whether to enable the load balance mode of the private zone.
	LoadBalanceMode pulumi.BoolPtrOutput `pulumi:"loadBalanceMode"`
	// Whether to enable the recursion mode of the private zone.
	RecursionMode pulumi.BoolPtrOutput `pulumi:"recursionMode"`
	// The remark of the private zone.
	Remark pulumi.StringPtrOutput `pulumi:"remark"`
	// The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource private_zone.UserVpcAuthorization to complete the authorization.
	Vpcs PrivateZoneVpcArrayOutput `pulumi:"vpcs"`
	// The name of the private zone.
	ZoneName pulumi.StringOutput `pulumi:"zoneName"`
}

// NewPrivateZone registers a new resource with the given unique name, arguments, and options.
func NewPrivateZone(ctx *pulumi.Context,
	name string, args *PrivateZoneArgs, opts ...pulumi.ResourceOption) (*PrivateZone, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Vpcs == nil {
		return nil, errors.New("invalid value for required argument 'Vpcs'")
	}
	if args.ZoneName == nil {
		return nil, errors.New("invalid value for required argument 'ZoneName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateZone
	err := ctx.RegisterResource("volcengine:private_zone/privateZone:PrivateZone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateZone gets an existing PrivateZone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateZone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateZoneState, opts ...pulumi.ResourceOption) (*PrivateZone, error) {
	var resource PrivateZone
	err := ctx.ReadResource("volcengine:private_zone/privateZone:PrivateZone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateZone resources.
type privateZoneState struct {
	// Whether to enable the intelligent mode of the private zone.
	IntelligentMode *bool `pulumi:"intelligentMode"`
	// Whether to enable the load balance mode of the private zone.
	LoadBalanceMode *bool `pulumi:"loadBalanceMode"`
	// Whether to enable the recursion mode of the private zone.
	RecursionMode *bool `pulumi:"recursionMode"`
	// The remark of the private zone.
	Remark *string `pulumi:"remark"`
	// The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource private_zone.UserVpcAuthorization to complete the authorization.
	Vpcs []PrivateZoneVpc `pulumi:"vpcs"`
	// The name of the private zone.
	ZoneName *string `pulumi:"zoneName"`
}

type PrivateZoneState struct {
	// Whether to enable the intelligent mode of the private zone.
	IntelligentMode pulumi.BoolPtrInput
	// Whether to enable the load balance mode of the private zone.
	LoadBalanceMode pulumi.BoolPtrInput
	// Whether to enable the recursion mode of the private zone.
	RecursionMode pulumi.BoolPtrInput
	// The remark of the private zone.
	Remark pulumi.StringPtrInput
	// The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource private_zone.UserVpcAuthorization to complete the authorization.
	Vpcs PrivateZoneVpcArrayInput
	// The name of the private zone.
	ZoneName pulumi.StringPtrInput
}

func (PrivateZoneState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateZoneState)(nil)).Elem()
}

type privateZoneArgs struct {
	// Whether to enable the intelligent mode of the private zone.
	IntelligentMode *bool `pulumi:"intelligentMode"`
	// Whether to enable the load balance mode of the private zone.
	LoadBalanceMode *bool `pulumi:"loadBalanceMode"`
	// Whether to enable the recursion mode of the private zone.
	RecursionMode *bool `pulumi:"recursionMode"`
	// The remark of the private zone.
	Remark *string `pulumi:"remark"`
	// The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource private_zone.UserVpcAuthorization to complete the authorization.
	Vpcs []PrivateZoneVpc `pulumi:"vpcs"`
	// The name of the private zone.
	ZoneName string `pulumi:"zoneName"`
}

// The set of arguments for constructing a PrivateZone resource.
type PrivateZoneArgs struct {
	// Whether to enable the intelligent mode of the private zone.
	IntelligentMode pulumi.BoolPtrInput
	// Whether to enable the load balance mode of the private zone.
	LoadBalanceMode pulumi.BoolPtrInput
	// Whether to enable the recursion mode of the private zone.
	RecursionMode pulumi.BoolPtrInput
	// The remark of the private zone.
	Remark pulumi.StringPtrInput
	// The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource private_zone.UserVpcAuthorization to complete the authorization.
	Vpcs PrivateZoneVpcArrayInput
	// The name of the private zone.
	ZoneName pulumi.StringInput
}

func (PrivateZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateZoneArgs)(nil)).Elem()
}

type PrivateZoneInput interface {
	pulumi.Input

	ToPrivateZoneOutput() PrivateZoneOutput
	ToPrivateZoneOutputWithContext(ctx context.Context) PrivateZoneOutput
}

func (*PrivateZone) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateZone)(nil)).Elem()
}

func (i *PrivateZone) ToPrivateZoneOutput() PrivateZoneOutput {
	return i.ToPrivateZoneOutputWithContext(context.Background())
}

func (i *PrivateZone) ToPrivateZoneOutputWithContext(ctx context.Context) PrivateZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateZoneOutput)
}

// PrivateZoneArrayInput is an input type that accepts PrivateZoneArray and PrivateZoneArrayOutput values.
// You can construct a concrete instance of `PrivateZoneArrayInput` via:
//
//	PrivateZoneArray{ PrivateZoneArgs{...} }
type PrivateZoneArrayInput interface {
	pulumi.Input

	ToPrivateZoneArrayOutput() PrivateZoneArrayOutput
	ToPrivateZoneArrayOutputWithContext(context.Context) PrivateZoneArrayOutput
}

type PrivateZoneArray []PrivateZoneInput

func (PrivateZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateZone)(nil)).Elem()
}

func (i PrivateZoneArray) ToPrivateZoneArrayOutput() PrivateZoneArrayOutput {
	return i.ToPrivateZoneArrayOutputWithContext(context.Background())
}

func (i PrivateZoneArray) ToPrivateZoneArrayOutputWithContext(ctx context.Context) PrivateZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateZoneArrayOutput)
}

// PrivateZoneMapInput is an input type that accepts PrivateZoneMap and PrivateZoneMapOutput values.
// You can construct a concrete instance of `PrivateZoneMapInput` via:
//
//	PrivateZoneMap{ "key": PrivateZoneArgs{...} }
type PrivateZoneMapInput interface {
	pulumi.Input

	ToPrivateZoneMapOutput() PrivateZoneMapOutput
	ToPrivateZoneMapOutputWithContext(context.Context) PrivateZoneMapOutput
}

type PrivateZoneMap map[string]PrivateZoneInput

func (PrivateZoneMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateZone)(nil)).Elem()
}

func (i PrivateZoneMap) ToPrivateZoneMapOutput() PrivateZoneMapOutput {
	return i.ToPrivateZoneMapOutputWithContext(context.Background())
}

func (i PrivateZoneMap) ToPrivateZoneMapOutputWithContext(ctx context.Context) PrivateZoneMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateZoneMapOutput)
}

type PrivateZoneOutput struct{ *pulumi.OutputState }

func (PrivateZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateZone)(nil)).Elem()
}

func (o PrivateZoneOutput) ToPrivateZoneOutput() PrivateZoneOutput {
	return o
}

func (o PrivateZoneOutput) ToPrivateZoneOutputWithContext(ctx context.Context) PrivateZoneOutput {
	return o
}

// Whether to enable the intelligent mode of the private zone.
func (o PrivateZoneOutput) IntelligentMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateZone) pulumi.BoolPtrOutput { return v.IntelligentMode }).(pulumi.BoolPtrOutput)
}

// Whether to enable the load balance mode of the private zone.
func (o PrivateZoneOutput) LoadBalanceMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateZone) pulumi.BoolPtrOutput { return v.LoadBalanceMode }).(pulumi.BoolPtrOutput)
}

// Whether to enable the recursion mode of the private zone.
func (o PrivateZoneOutput) RecursionMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateZone) pulumi.BoolPtrOutput { return v.RecursionMode }).(pulumi.BoolPtrOutput)
}

// The remark of the private zone.
func (o PrivateZoneOutput) Remark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateZone) pulumi.StringPtrOutput { return v.Remark }).(pulumi.StringPtrOutput)
}

// The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource private_zone.UserVpcAuthorization to complete the authorization.
func (o PrivateZoneOutput) Vpcs() PrivateZoneVpcArrayOutput {
	return o.ApplyT(func(v *PrivateZone) PrivateZoneVpcArrayOutput { return v.Vpcs }).(PrivateZoneVpcArrayOutput)
}

// The name of the private zone.
func (o PrivateZoneOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateZone) pulumi.StringOutput { return v.ZoneName }).(pulumi.StringOutput)
}

type PrivateZoneArrayOutput struct{ *pulumi.OutputState }

func (PrivateZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateZone)(nil)).Elem()
}

func (o PrivateZoneArrayOutput) ToPrivateZoneArrayOutput() PrivateZoneArrayOutput {
	return o
}

func (o PrivateZoneArrayOutput) ToPrivateZoneArrayOutputWithContext(ctx context.Context) PrivateZoneArrayOutput {
	return o
}

func (o PrivateZoneArrayOutput) Index(i pulumi.IntInput) PrivateZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateZone {
		return vs[0].([]*PrivateZone)[vs[1].(int)]
	}).(PrivateZoneOutput)
}

type PrivateZoneMapOutput struct{ *pulumi.OutputState }

func (PrivateZoneMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateZone)(nil)).Elem()
}

func (o PrivateZoneMapOutput) ToPrivateZoneMapOutput() PrivateZoneMapOutput {
	return o
}

func (o PrivateZoneMapOutput) ToPrivateZoneMapOutputWithContext(ctx context.Context) PrivateZoneMapOutput {
	return o
}

func (o PrivateZoneMapOutput) MapIndex(k pulumi.StringInput) PrivateZoneOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateZone {
		return vs[0].(map[string]*PrivateZone)[vs[1].(string)]
	}).(PrivateZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateZoneInput)(nil)).Elem(), &PrivateZone{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateZoneArrayInput)(nil)).Elem(), PrivateZoneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateZoneMapInput)(nil)).Elem(), PrivateZoneMap{})
	pulumi.RegisterOutputType(PrivateZoneOutput{})
	pulumi.RegisterOutputType(PrivateZoneArrayOutput{})
	pulumi.RegisterOutputType(PrivateZoneMapOutput{})
}
