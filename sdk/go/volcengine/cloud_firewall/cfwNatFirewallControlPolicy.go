// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage cfw nat firewall control policy
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooCfwAddressBook, err := cloud_firewall.NewCfwAddressBook(ctx, "fooCfwAddressBook", &cloud_firewall.CfwAddressBookArgs{
//				GroupName:   pulumi.String("acc-test-address-book"),
//				Description: pulumi.String("acc-test"),
//				GroupType:   pulumi.String("ip"),
//				AddressLists: pulumi.StringArray{
//					pulumi.String("192.168.1.1"),
//					pulumi.String("192.168.2.2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloud_firewall.NewCfwNatFirewallControlPolicy(ctx, "fooCfwNatFirewallControlPolicy", &cloud_firewall.CfwNatFirewallControlPolicyArgs{
//				Direction:       pulumi.String("in"),
//				NatFirewallId:   pulumi.String("nfw-ydmkayvjsw2vsavx****"),
//				Action:          pulumi.String("accept"),
//				DestinationType: pulumi.String("group"),
//				Destination:     fooCfwAddressBook.ID(),
//				Proto:           pulumi.String("TCP"),
//				SourceType:      pulumi.String("net"),
//				Source:          pulumi.String("0.0.0.0/0"),
//				Description:     pulumi.String("acc-test-control-policy"),
//				DestPortType:    pulumi.String("port"),
//				DestPort:        pulumi.String("300"),
//				RepeatType:      pulumi.String("Weekly"),
//				RepeatStartTime: pulumi.String("01:00"),
//				RepeatEndTime:   pulumi.String("11:00"),
//				RepeatDays: pulumi.IntArray{
//					pulumi.Int(2),
//					pulumi.Int(5),
//					pulumi.Int(4),
//				},
//				StartTime: pulumi.Int(1736092800),
//				EndTime:   pulumi.Int(1738339140),
//				Priority:  pulumi.Int(1),
//				Status:    pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NatFirewallControlPolicy can be imported using the direction_nat_firewall_id:rule_id, e.g.
//
// ```sh
// $ pulumi import volcengine:cloud_firewall/cfwNatFirewallControlPolicy:CfwNatFirewallControlPolicy default resource_id
// ```
type CfwNatFirewallControlPolicy struct {
	pulumi.CustomResourceState

	// The account id of the nat firewall control policy.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
	Action pulumi.StringOutput `pulumi:"action"`
	// The description of the nat firewall control policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The dest port of the nat firewall control policy.
	DestPort pulumi.StringOutput `pulumi:"destPort"`
	// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
	DestPortType pulumi.StringOutput `pulumi:"destPortType"`
	// The destination of the nat firewall control policy.
	Destination pulumi.StringOutput `pulumi:"destination"`
	// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
	DestinationType pulumi.StringOutput `pulumi:"destinationType"`
	// The direction of the nat firewall control policy. Valid values: `in`, `out`.
	Direction pulumi.StringOutput `pulumi:"direction"`
	// The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
	EffectStatus pulumi.IntOutput `pulumi:"effectStatus"`
	// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	EndTime pulumi.IntPtrOutput `pulumi:"endTime"`
	// The hit count of the nat firewall control policy.
	HitCnt pulumi.IntOutput `pulumi:"hitCnt"`
	// Whether the nat firewall control policy is effected.
	IsEffected pulumi.BoolOutput `pulumi:"isEffected"`
	// The id of the nat firewall.
	NatFirewallId pulumi.StringOutput `pulumi:"natFirewallId"`
	// The name of the nat firewall.
	NatFirewallName pulumi.StringOutput `pulumi:"natFirewallName"`
	// The priority of the nat firewall control policy.
	Prio pulumi.IntOutput `pulumi:"prio"`
	// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destinationType is `domain`, The proto must be `TCP`.
	Proto pulumi.StringOutput `pulumi:"proto"`
	// The repeat days of the nat firewall control policy. When the value of repeatType is one of `Weekly`, `Monthly`, this field is required.
	// When the repeatType is `Weekly`, the valid value range is 0~6.
	// When the repeatType is `Monthly`, the valid value range is 1~31.
	RepeatDays pulumi.IntArrayOutput `pulumi:"repeatDays"`
	// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatEndTime pulumi.StringPtrOutput `pulumi:"repeatEndTime"`
	// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatStartTime pulumi.StringPtrOutput `pulumi:"repeatStartTime"`
	// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
	RepeatType pulumi.StringOutput `pulumi:"repeatType"`
	// The rule id of the nat firewall control policy.
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
	// The source of the nat firewall control policy.
	Source pulumi.StringOutput `pulumi:"source"`
	// The source type of the nat firewall control policy. Valid values: `net`, `group`.
	SourceType pulumi.StringOutput `pulumi:"sourceType"`
	// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	StartTime pulumi.IntPtrOutput `pulumi:"startTime"`
	// Whether to enable the nat firewall control policy. Default is false.
	Status pulumi.BoolOutput `pulumi:"status"`
	// The update time of the nat firewall control policy.
	UpdateTime pulumi.IntOutput `pulumi:"updateTime"`
	// The use count of the nat firewall control policy.
	UseCount pulumi.IntOutput `pulumi:"useCount"`
}

// NewCfwNatFirewallControlPolicy registers a new resource with the given unique name, arguments, and options.
func NewCfwNatFirewallControlPolicy(ctx *pulumi.Context,
	name string, args *CfwNatFirewallControlPolicyArgs, opts ...pulumi.ResourceOption) (*CfwNatFirewallControlPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.DestinationType == nil {
		return nil, errors.New("invalid value for required argument 'DestinationType'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.NatFirewallId == nil {
		return nil, errors.New("invalid value for required argument 'NatFirewallId'")
	}
	if args.Proto == nil {
		return nil, errors.New("invalid value for required argument 'Proto'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	if args.SourceType == nil {
		return nil, errors.New("invalid value for required argument 'SourceType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CfwNatFirewallControlPolicy
	err := ctx.RegisterResource("volcengine:cloud_firewall/cfwNatFirewallControlPolicy:CfwNatFirewallControlPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCfwNatFirewallControlPolicy gets an existing CfwNatFirewallControlPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCfwNatFirewallControlPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CfwNatFirewallControlPolicyState, opts ...pulumi.ResourceOption) (*CfwNatFirewallControlPolicy, error) {
	var resource CfwNatFirewallControlPolicy
	err := ctx.ReadResource("volcengine:cloud_firewall/cfwNatFirewallControlPolicy:CfwNatFirewallControlPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CfwNatFirewallControlPolicy resources.
type cfwNatFirewallControlPolicyState struct {
	// The account id of the nat firewall control policy.
	AccountId *string `pulumi:"accountId"`
	// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
	Action *string `pulumi:"action"`
	// The description of the nat firewall control policy.
	Description *string `pulumi:"description"`
	// The dest port of the nat firewall control policy.
	DestPort *string `pulumi:"destPort"`
	// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
	DestPortType *string `pulumi:"destPortType"`
	// The destination of the nat firewall control policy.
	Destination *string `pulumi:"destination"`
	// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
	DestinationType *string `pulumi:"destinationType"`
	// The direction of the nat firewall control policy. Valid values: `in`, `out`.
	Direction *string `pulumi:"direction"`
	// The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
	EffectStatus *int `pulumi:"effectStatus"`
	// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	EndTime *int `pulumi:"endTime"`
	// The hit count of the nat firewall control policy.
	HitCnt *int `pulumi:"hitCnt"`
	// Whether the nat firewall control policy is effected.
	IsEffected *bool `pulumi:"isEffected"`
	// The id of the nat firewall.
	NatFirewallId *string `pulumi:"natFirewallId"`
	// The name of the nat firewall.
	NatFirewallName *string `pulumi:"natFirewallName"`
	// The priority of the nat firewall control policy.
	Prio *int `pulumi:"prio"`
	// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
	Priority *int `pulumi:"priority"`
	// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destinationType is `domain`, The proto must be `TCP`.
	Proto *string `pulumi:"proto"`
	// The repeat days of the nat firewall control policy. When the value of repeatType is one of `Weekly`, `Monthly`, this field is required.
	// When the repeatType is `Weekly`, the valid value range is 0~6.
	// When the repeatType is `Monthly`, the valid value range is 1~31.
	RepeatDays []int `pulumi:"repeatDays"`
	// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatEndTime *string `pulumi:"repeatEndTime"`
	// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatStartTime *string `pulumi:"repeatStartTime"`
	// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
	RepeatType *string `pulumi:"repeatType"`
	// The rule id of the nat firewall control policy.
	RuleId *string `pulumi:"ruleId"`
	// The source of the nat firewall control policy.
	Source *string `pulumi:"source"`
	// The source type of the nat firewall control policy. Valid values: `net`, `group`.
	SourceType *string `pulumi:"sourceType"`
	// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	StartTime *int `pulumi:"startTime"`
	// Whether to enable the nat firewall control policy. Default is false.
	Status *bool `pulumi:"status"`
	// The update time of the nat firewall control policy.
	UpdateTime *int `pulumi:"updateTime"`
	// The use count of the nat firewall control policy.
	UseCount *int `pulumi:"useCount"`
}

type CfwNatFirewallControlPolicyState struct {
	// The account id of the nat firewall control policy.
	AccountId pulumi.StringPtrInput
	// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
	Action pulumi.StringPtrInput
	// The description of the nat firewall control policy.
	Description pulumi.StringPtrInput
	// The dest port of the nat firewall control policy.
	DestPort pulumi.StringPtrInput
	// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
	DestPortType pulumi.StringPtrInput
	// The destination of the nat firewall control policy.
	Destination pulumi.StringPtrInput
	// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
	DestinationType pulumi.StringPtrInput
	// The direction of the nat firewall control policy. Valid values: `in`, `out`.
	Direction pulumi.StringPtrInput
	// The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
	EffectStatus pulumi.IntPtrInput
	// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	EndTime pulumi.IntPtrInput
	// The hit count of the nat firewall control policy.
	HitCnt pulumi.IntPtrInput
	// Whether the nat firewall control policy is effected.
	IsEffected pulumi.BoolPtrInput
	// The id of the nat firewall.
	NatFirewallId pulumi.StringPtrInput
	// The name of the nat firewall.
	NatFirewallName pulumi.StringPtrInput
	// The priority of the nat firewall control policy.
	Prio pulumi.IntPtrInput
	// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
	Priority pulumi.IntPtrInput
	// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destinationType is `domain`, The proto must be `TCP`.
	Proto pulumi.StringPtrInput
	// The repeat days of the nat firewall control policy. When the value of repeatType is one of `Weekly`, `Monthly`, this field is required.
	// When the repeatType is `Weekly`, the valid value range is 0~6.
	// When the repeatType is `Monthly`, the valid value range is 1~31.
	RepeatDays pulumi.IntArrayInput
	// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatEndTime pulumi.StringPtrInput
	// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatStartTime pulumi.StringPtrInput
	// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
	RepeatType pulumi.StringPtrInput
	// The rule id of the nat firewall control policy.
	RuleId pulumi.StringPtrInput
	// The source of the nat firewall control policy.
	Source pulumi.StringPtrInput
	// The source type of the nat firewall control policy. Valid values: `net`, `group`.
	SourceType pulumi.StringPtrInput
	// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	StartTime pulumi.IntPtrInput
	// Whether to enable the nat firewall control policy. Default is false.
	Status pulumi.BoolPtrInput
	// The update time of the nat firewall control policy.
	UpdateTime pulumi.IntPtrInput
	// The use count of the nat firewall control policy.
	UseCount pulumi.IntPtrInput
}

func (CfwNatFirewallControlPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*cfwNatFirewallControlPolicyState)(nil)).Elem()
}

type cfwNatFirewallControlPolicyArgs struct {
	// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
	Action string `pulumi:"action"`
	// The description of the nat firewall control policy.
	Description *string `pulumi:"description"`
	// The dest port of the nat firewall control policy.
	DestPort *string `pulumi:"destPort"`
	// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
	DestPortType *string `pulumi:"destPortType"`
	// The destination of the nat firewall control policy.
	Destination string `pulumi:"destination"`
	// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
	DestinationType string `pulumi:"destinationType"`
	// The direction of the nat firewall control policy. Valid values: `in`, `out`.
	Direction string `pulumi:"direction"`
	// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	EndTime *int `pulumi:"endTime"`
	// The id of the nat firewall.
	NatFirewallId string `pulumi:"natFirewallId"`
	// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
	Priority *int `pulumi:"priority"`
	// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destinationType is `domain`, The proto must be `TCP`.
	Proto string `pulumi:"proto"`
	// The repeat days of the nat firewall control policy. When the value of repeatType is one of `Weekly`, `Monthly`, this field is required.
	// When the repeatType is `Weekly`, the valid value range is 0~6.
	// When the repeatType is `Monthly`, the valid value range is 1~31.
	RepeatDays []int `pulumi:"repeatDays"`
	// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatEndTime *string `pulumi:"repeatEndTime"`
	// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatStartTime *string `pulumi:"repeatStartTime"`
	// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
	RepeatType *string `pulumi:"repeatType"`
	// The source of the nat firewall control policy.
	Source string `pulumi:"source"`
	// The source type of the nat firewall control policy. Valid values: `net`, `group`.
	SourceType string `pulumi:"sourceType"`
	// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	StartTime *int `pulumi:"startTime"`
	// Whether to enable the nat firewall control policy. Default is false.
	Status *bool `pulumi:"status"`
}

// The set of arguments for constructing a CfwNatFirewallControlPolicy resource.
type CfwNatFirewallControlPolicyArgs struct {
	// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
	Action pulumi.StringInput
	// The description of the nat firewall control policy.
	Description pulumi.StringPtrInput
	// The dest port of the nat firewall control policy.
	DestPort pulumi.StringPtrInput
	// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
	DestPortType pulumi.StringPtrInput
	// The destination of the nat firewall control policy.
	Destination pulumi.StringInput
	// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
	DestinationType pulumi.StringInput
	// The direction of the nat firewall control policy. Valid values: `in`, `out`.
	Direction pulumi.StringInput
	// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	EndTime pulumi.IntPtrInput
	// The id of the nat firewall.
	NatFirewallId pulumi.StringInput
	// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
	Priority pulumi.IntPtrInput
	// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destinationType is `domain`, The proto must be `TCP`.
	Proto pulumi.StringInput
	// The repeat days of the nat firewall control policy. When the value of repeatType is one of `Weekly`, `Monthly`, this field is required.
	// When the repeatType is `Weekly`, the valid value range is 0~6.
	// When the repeatType is `Monthly`, the valid value range is 1~31.
	RepeatDays pulumi.IntArrayInput
	// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatEndTime pulumi.StringPtrInput
	// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
	// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
	RepeatStartTime pulumi.StringPtrInput
	// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
	RepeatType pulumi.StringPtrInput
	// The source of the nat firewall control policy.
	Source pulumi.StringInput
	// The source type of the nat firewall control policy. Valid values: `net`, `group`.
	SourceType pulumi.StringInput
	// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
	// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
	StartTime pulumi.IntPtrInput
	// Whether to enable the nat firewall control policy. Default is false.
	Status pulumi.BoolPtrInput
}

func (CfwNatFirewallControlPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cfwNatFirewallControlPolicyArgs)(nil)).Elem()
}

type CfwNatFirewallControlPolicyInput interface {
	pulumi.Input

	ToCfwNatFirewallControlPolicyOutput() CfwNatFirewallControlPolicyOutput
	ToCfwNatFirewallControlPolicyOutputWithContext(ctx context.Context) CfwNatFirewallControlPolicyOutput
}

func (*CfwNatFirewallControlPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**CfwNatFirewallControlPolicy)(nil)).Elem()
}

func (i *CfwNatFirewallControlPolicy) ToCfwNatFirewallControlPolicyOutput() CfwNatFirewallControlPolicyOutput {
	return i.ToCfwNatFirewallControlPolicyOutputWithContext(context.Background())
}

func (i *CfwNatFirewallControlPolicy) ToCfwNatFirewallControlPolicyOutputWithContext(ctx context.Context) CfwNatFirewallControlPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CfwNatFirewallControlPolicyOutput)
}

// CfwNatFirewallControlPolicyArrayInput is an input type that accepts CfwNatFirewallControlPolicyArray and CfwNatFirewallControlPolicyArrayOutput values.
// You can construct a concrete instance of `CfwNatFirewallControlPolicyArrayInput` via:
//
//	CfwNatFirewallControlPolicyArray{ CfwNatFirewallControlPolicyArgs{...} }
type CfwNatFirewallControlPolicyArrayInput interface {
	pulumi.Input

	ToCfwNatFirewallControlPolicyArrayOutput() CfwNatFirewallControlPolicyArrayOutput
	ToCfwNatFirewallControlPolicyArrayOutputWithContext(context.Context) CfwNatFirewallControlPolicyArrayOutput
}

type CfwNatFirewallControlPolicyArray []CfwNatFirewallControlPolicyInput

func (CfwNatFirewallControlPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CfwNatFirewallControlPolicy)(nil)).Elem()
}

func (i CfwNatFirewallControlPolicyArray) ToCfwNatFirewallControlPolicyArrayOutput() CfwNatFirewallControlPolicyArrayOutput {
	return i.ToCfwNatFirewallControlPolicyArrayOutputWithContext(context.Background())
}

func (i CfwNatFirewallControlPolicyArray) ToCfwNatFirewallControlPolicyArrayOutputWithContext(ctx context.Context) CfwNatFirewallControlPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CfwNatFirewallControlPolicyArrayOutput)
}

// CfwNatFirewallControlPolicyMapInput is an input type that accepts CfwNatFirewallControlPolicyMap and CfwNatFirewallControlPolicyMapOutput values.
// You can construct a concrete instance of `CfwNatFirewallControlPolicyMapInput` via:
//
//	CfwNatFirewallControlPolicyMap{ "key": CfwNatFirewallControlPolicyArgs{...} }
type CfwNatFirewallControlPolicyMapInput interface {
	pulumi.Input

	ToCfwNatFirewallControlPolicyMapOutput() CfwNatFirewallControlPolicyMapOutput
	ToCfwNatFirewallControlPolicyMapOutputWithContext(context.Context) CfwNatFirewallControlPolicyMapOutput
}

type CfwNatFirewallControlPolicyMap map[string]CfwNatFirewallControlPolicyInput

func (CfwNatFirewallControlPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CfwNatFirewallControlPolicy)(nil)).Elem()
}

func (i CfwNatFirewallControlPolicyMap) ToCfwNatFirewallControlPolicyMapOutput() CfwNatFirewallControlPolicyMapOutput {
	return i.ToCfwNatFirewallControlPolicyMapOutputWithContext(context.Background())
}

func (i CfwNatFirewallControlPolicyMap) ToCfwNatFirewallControlPolicyMapOutputWithContext(ctx context.Context) CfwNatFirewallControlPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CfwNatFirewallControlPolicyMapOutput)
}

type CfwNatFirewallControlPolicyOutput struct{ *pulumi.OutputState }

func (CfwNatFirewallControlPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CfwNatFirewallControlPolicy)(nil)).Elem()
}

func (o CfwNatFirewallControlPolicyOutput) ToCfwNatFirewallControlPolicyOutput() CfwNatFirewallControlPolicyOutput {
	return o
}

func (o CfwNatFirewallControlPolicyOutput) ToCfwNatFirewallControlPolicyOutputWithContext(ctx context.Context) CfwNatFirewallControlPolicyOutput {
	return o
}

// The account id of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
func (o CfwNatFirewallControlPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The description of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The dest port of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) DestPort() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.DestPort }).(pulumi.StringOutput)
}

// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
func (o CfwNatFirewallControlPolicyOutput) DestPortType() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.DestPortType }).(pulumi.StringOutput)
}

// The destination of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
func (o CfwNatFirewallControlPolicyOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

// The direction of the nat firewall control policy. Valid values: `in`, `out`.
func (o CfwNatFirewallControlPolicyOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
func (o CfwNatFirewallControlPolicyOutput) EffectStatus() pulumi.IntOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntOutput { return v.EffectStatus }).(pulumi.IntOutput)
}

// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
func (o CfwNatFirewallControlPolicyOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntPtrOutput { return v.EndTime }).(pulumi.IntPtrOutput)
}

// The hit count of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) HitCnt() pulumi.IntOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntOutput { return v.HitCnt }).(pulumi.IntOutput)
}

// Whether the nat firewall control policy is effected.
func (o CfwNatFirewallControlPolicyOutput) IsEffected() pulumi.BoolOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.BoolOutput { return v.IsEffected }).(pulumi.BoolOutput)
}

// The id of the nat firewall.
func (o CfwNatFirewallControlPolicyOutput) NatFirewallId() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.NatFirewallId }).(pulumi.StringOutput)
}

// The name of the nat firewall.
func (o CfwNatFirewallControlPolicyOutput) NatFirewallName() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.NatFirewallName }).(pulumi.StringOutput)
}

// The priority of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) Prio() pulumi.IntOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntOutput { return v.Prio }).(pulumi.IntOutput)
}

// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
func (o CfwNatFirewallControlPolicyOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntPtrOutput { return v.Priority }).(pulumi.IntPtrOutput)
}

// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destinationType is `domain`, The proto must be `TCP`.
func (o CfwNatFirewallControlPolicyOutput) Proto() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.Proto }).(pulumi.StringOutput)
}

// The repeat days of the nat firewall control policy. When the value of repeatType is one of `Weekly`, `Monthly`, this field is required.
// When the repeatType is `Weekly`, the valid value range is 0~6.
// When the repeatType is `Monthly`, the valid value range is 1~31.
func (o CfwNatFirewallControlPolicyOutput) RepeatDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntArrayOutput { return v.RepeatDays }).(pulumi.IntArrayOutput)
}

// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
func (o CfwNatFirewallControlPolicyOutput) RepeatEndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringPtrOutput { return v.RepeatEndTime }).(pulumi.StringPtrOutput)
}

// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
// When the value of repeatType is one of `Daily`, `Weekly`, `Monthly`, this field is required.
func (o CfwNatFirewallControlPolicyOutput) RepeatStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringPtrOutput { return v.RepeatStartTime }).(pulumi.StringPtrOutput)
}

// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
func (o CfwNatFirewallControlPolicyOutput) RepeatType() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.RepeatType }).(pulumi.StringOutput)
}

// The rule id of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

// The source of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// The source type of the nat firewall control policy. Valid values: `net`, `group`.
func (o CfwNatFirewallControlPolicyOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
// When the value of repeatType is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
func (o CfwNatFirewallControlPolicyOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntPtrOutput { return v.StartTime }).(pulumi.IntPtrOutput)
}

// Whether to enable the nat firewall control policy. Default is false.
func (o CfwNatFirewallControlPolicyOutput) Status() pulumi.BoolOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.BoolOutput { return v.Status }).(pulumi.BoolOutput)
}

// The update time of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntOutput { return v.UpdateTime }).(pulumi.IntOutput)
}

// The use count of the nat firewall control policy.
func (o CfwNatFirewallControlPolicyOutput) UseCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CfwNatFirewallControlPolicy) pulumi.IntOutput { return v.UseCount }).(pulumi.IntOutput)
}

type CfwNatFirewallControlPolicyArrayOutput struct{ *pulumi.OutputState }

func (CfwNatFirewallControlPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CfwNatFirewallControlPolicy)(nil)).Elem()
}

func (o CfwNatFirewallControlPolicyArrayOutput) ToCfwNatFirewallControlPolicyArrayOutput() CfwNatFirewallControlPolicyArrayOutput {
	return o
}

func (o CfwNatFirewallControlPolicyArrayOutput) ToCfwNatFirewallControlPolicyArrayOutputWithContext(ctx context.Context) CfwNatFirewallControlPolicyArrayOutput {
	return o
}

func (o CfwNatFirewallControlPolicyArrayOutput) Index(i pulumi.IntInput) CfwNatFirewallControlPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CfwNatFirewallControlPolicy {
		return vs[0].([]*CfwNatFirewallControlPolicy)[vs[1].(int)]
	}).(CfwNatFirewallControlPolicyOutput)
}

type CfwNatFirewallControlPolicyMapOutput struct{ *pulumi.OutputState }

func (CfwNatFirewallControlPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CfwNatFirewallControlPolicy)(nil)).Elem()
}

func (o CfwNatFirewallControlPolicyMapOutput) ToCfwNatFirewallControlPolicyMapOutput() CfwNatFirewallControlPolicyMapOutput {
	return o
}

func (o CfwNatFirewallControlPolicyMapOutput) ToCfwNatFirewallControlPolicyMapOutputWithContext(ctx context.Context) CfwNatFirewallControlPolicyMapOutput {
	return o
}

func (o CfwNatFirewallControlPolicyMapOutput) MapIndex(k pulumi.StringInput) CfwNatFirewallControlPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CfwNatFirewallControlPolicy {
		return vs[0].(map[string]*CfwNatFirewallControlPolicy)[vs[1].(string)]
	}).(CfwNatFirewallControlPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CfwNatFirewallControlPolicyInput)(nil)).Elem(), &CfwNatFirewallControlPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*CfwNatFirewallControlPolicyArrayInput)(nil)).Elem(), CfwNatFirewallControlPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CfwNatFirewallControlPolicyMapInput)(nil)).Elem(), CfwNatFirewallControlPolicyMap{})
	pulumi.RegisterOutputType(CfwNatFirewallControlPolicyOutput{})
	pulumi.RegisterOutputType(CfwNatFirewallControlPolicyArrayOutput{})
	pulumi.RegisterOutputType(CfwNatFirewallControlPolicyMapOutput{})
}
