// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_firewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of cfw dns control policies
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_firewall"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooVpc, err := vpc.NewVpc(ctx, "fooVpc", &vpc.VpcArgs{
//				VpcName:   pulumi.String("acc-test-vpc"),
//				CidrBlock: pulumi.String("172.16.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			fooCfwDnsControlPolicy, err := cloud_firewall.NewCfwDnsControlPolicy(ctx, "fooCfwDnsControlPolicy", &cloud_firewall.CfwDnsControlPolicyArgs{
//				Description:     pulumi.String("acc-test-dns-control-policy"),
//				DestinationType: pulumi.String("domain"),
//				Destination:     pulumi.String("www.test.com"),
//				Sources: cloud_firewall.CfwDnsControlPolicySourceArray{
//					&cloud_firewall.CfwDnsControlPolicySourceArgs{
//						VpcId:  fooVpc.ID(),
//						Region: pulumi.String("cn-beijing"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_ = cloud_firewall.GetCfwDnsControlPoliciesOutput(ctx, cloud_firewall.GetCfwDnsControlPoliciesOutputArgs{
//				Ids: pulumi.StringArray{
//					fooCfwDnsControlPolicy.ID(),
//				},
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetCfwDnsControlPolicies(ctx *pulumi.Context, args *GetCfwDnsControlPoliciesArgs, opts ...pulumi.InvokeOption) (*GetCfwDnsControlPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCfwDnsControlPoliciesResult
	err := ctx.Invoke("volcengine:cloud_firewall/getCfwDnsControlPolicies:getCfwDnsControlPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCfwDnsControlPolicies.
type GetCfwDnsControlPoliciesArgs struct {
	// The description of the dns control policy. This field support fuzzy query.
	Description *string `pulumi:"description"`
	// The destination list of the dns control policy. This field support fuzzy query.
	Destinations []string `pulumi:"destinations"`
	// The rule id list of the dns control policy. This field support fuzzy query.
	Ids []string `pulumi:"ids"`
	// The internet firewall id of the dns control policy.
	InternetFirewallId *string `pulumi:"internetFirewallId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The source list of the dns control policy. This field support fuzzy query.
	Sources []string `pulumi:"sources"`
	// The enable status list of the dns control policy. This field support fuzzy query.
	Statuses []bool `pulumi:"statuses"`
}

// A collection of values returned by getCfwDnsControlPolicies.
type GetCfwDnsControlPoliciesResult struct {
	// The description of the dns control policy.
	Description *string `pulumi:"description"`
	// The destination of the dns control policy.
	Destinations []string `pulumi:"destinations"`
	// The collection of query.
	DnsControlPolicies []GetCfwDnsControlPoliciesDnsControlPolicy `pulumi:"dnsControlPolicies"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string   `pulumi:"id"`
	Ids                []string `pulumi:"ids"`
	InternetFirewallId *string  `pulumi:"internetFirewallId"`
	OutputFile         *string  `pulumi:"outputFile"`
	// The source vpc list of the dns control policy.
	Sources []string `pulumi:"sources"`
	// Whether to enable the dns control policy.
	Statuses []bool `pulumi:"statuses"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
}

func GetCfwDnsControlPoliciesOutput(ctx *pulumi.Context, args GetCfwDnsControlPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetCfwDnsControlPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCfwDnsControlPoliciesResult, error) {
			args := v.(GetCfwDnsControlPoliciesArgs)
			r, err := GetCfwDnsControlPolicies(ctx, &args, opts...)
			var s GetCfwDnsControlPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCfwDnsControlPoliciesResultOutput)
}

// A collection of arguments for invoking getCfwDnsControlPolicies.
type GetCfwDnsControlPoliciesOutputArgs struct {
	// The description of the dns control policy. This field support fuzzy query.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination list of the dns control policy. This field support fuzzy query.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The rule id list of the dns control policy. This field support fuzzy query.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The internet firewall id of the dns control policy.
	InternetFirewallId pulumi.StringPtrInput `pulumi:"internetFirewallId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The source list of the dns control policy. This field support fuzzy query.
	Sources pulumi.StringArrayInput `pulumi:"sources"`
	// The enable status list of the dns control policy. This field support fuzzy query.
	Statuses pulumi.BoolArrayInput `pulumi:"statuses"`
}

func (GetCfwDnsControlPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCfwDnsControlPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getCfwDnsControlPolicies.
type GetCfwDnsControlPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetCfwDnsControlPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCfwDnsControlPoliciesResult)(nil)).Elem()
}

func (o GetCfwDnsControlPoliciesResultOutput) ToGetCfwDnsControlPoliciesResultOutput() GetCfwDnsControlPoliciesResultOutput {
	return o
}

func (o GetCfwDnsControlPoliciesResultOutput) ToGetCfwDnsControlPoliciesResultOutputWithContext(ctx context.Context) GetCfwDnsControlPoliciesResultOutput {
	return o
}

// The description of the dns control policy.
func (o GetCfwDnsControlPoliciesResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination of the dns control policy.
func (o GetCfwDnsControlPoliciesResultOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o GetCfwDnsControlPoliciesResultOutput) DnsControlPolicies() GetCfwDnsControlPoliciesDnsControlPolicyArrayOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) []GetCfwDnsControlPoliciesDnsControlPolicy {
		return v.DnsControlPolicies
	}).(GetCfwDnsControlPoliciesDnsControlPolicyArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCfwDnsControlPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCfwDnsControlPoliciesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetCfwDnsControlPoliciesResultOutput) InternetFirewallId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) *string { return v.InternetFirewallId }).(pulumi.StringPtrOutput)
}

func (o GetCfwDnsControlPoliciesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The source vpc list of the dns control policy.
func (o GetCfwDnsControlPoliciesResultOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

// Whether to enable the dns control policy.
func (o GetCfwDnsControlPoliciesResultOutput) Statuses() pulumi.BoolArrayOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) []bool { return v.Statuses }).(pulumi.BoolArrayOutput)
}

// The total count of query.
func (o GetCfwDnsControlPoliciesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetCfwDnsControlPoliciesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCfwDnsControlPoliciesResultOutput{})
}
