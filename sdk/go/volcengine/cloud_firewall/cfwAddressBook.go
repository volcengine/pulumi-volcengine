// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud_firewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Provides a resource to manage cfw address book
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/cloud_firewall"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloud_firewall.NewCfwAddressBook(ctx, "foo", &cloud_firewall.CfwAddressBookArgs{
//				AddressLists: pulumi.StringArray{
//					pulumi.String("192.168.1.1"),
//					pulumi.String("192.168.2.2"),
//				},
//				Description: pulumi.String("acc-test"),
//				GroupName:   pulumi.String("acc-test-address-book"),
//				GroupType:   pulumi.String("ip"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AddressBook can be imported using the id, e.g.
//
// ```sh
// $ pulumi import volcengine:cloud_firewall/cfwAddressBook:CfwAddressBook default resource_id
// ```
type CfwAddressBook struct {
	pulumi.CustomResourceState

	// The address list of the address book.
	// When groupType is `ip`, fill in IPv4/CIDRV4 addresses in the address list.
	// When groupType is `port`, fill in the port information in the address list, supporting two formats: 22 and 100/200.
	// When groupType is `domain`, fill in the domain name information in the address list.
	AddressLists pulumi.StringArrayOutput `pulumi:"addressLists"`
	// The description of the address book.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the address book.
	GroupName pulumi.StringOutput `pulumi:"groupName"`
	// The type of the address book. Valid values: `ip`, `port`, `domain`.
	GroupType pulumi.StringOutput `pulumi:"groupType"`
	// The reference count of the address book.
	RefCnt pulumi.IntOutput `pulumi:"refCnt"`
}

// NewCfwAddressBook registers a new resource with the given unique name, arguments, and options.
func NewCfwAddressBook(ctx *pulumi.Context,
	name string, args *CfwAddressBookArgs, opts ...pulumi.ResourceOption) (*CfwAddressBook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressLists == nil {
		return nil, errors.New("invalid value for required argument 'AddressLists'")
	}
	if args.GroupName == nil {
		return nil, errors.New("invalid value for required argument 'GroupName'")
	}
	if args.GroupType == nil {
		return nil, errors.New("invalid value for required argument 'GroupType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CfwAddressBook
	err := ctx.RegisterResource("volcengine:cloud_firewall/cfwAddressBook:CfwAddressBook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCfwAddressBook gets an existing CfwAddressBook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCfwAddressBook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CfwAddressBookState, opts ...pulumi.ResourceOption) (*CfwAddressBook, error) {
	var resource CfwAddressBook
	err := ctx.ReadResource("volcengine:cloud_firewall/cfwAddressBook:CfwAddressBook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CfwAddressBook resources.
type cfwAddressBookState struct {
	// The address list of the address book.
	// When groupType is `ip`, fill in IPv4/CIDRV4 addresses in the address list.
	// When groupType is `port`, fill in the port information in the address list, supporting two formats: 22 and 100/200.
	// When groupType is `domain`, fill in the domain name information in the address list.
	AddressLists []string `pulumi:"addressLists"`
	// The description of the address book.
	Description *string `pulumi:"description"`
	// The name of the address book.
	GroupName *string `pulumi:"groupName"`
	// The type of the address book. Valid values: `ip`, `port`, `domain`.
	GroupType *string `pulumi:"groupType"`
	// The reference count of the address book.
	RefCnt *int `pulumi:"refCnt"`
}

type CfwAddressBookState struct {
	// The address list of the address book.
	// When groupType is `ip`, fill in IPv4/CIDRV4 addresses in the address list.
	// When groupType is `port`, fill in the port information in the address list, supporting two formats: 22 and 100/200.
	// When groupType is `domain`, fill in the domain name information in the address list.
	AddressLists pulumi.StringArrayInput
	// The description of the address book.
	Description pulumi.StringPtrInput
	// The name of the address book.
	GroupName pulumi.StringPtrInput
	// The type of the address book. Valid values: `ip`, `port`, `domain`.
	GroupType pulumi.StringPtrInput
	// The reference count of the address book.
	RefCnt pulumi.IntPtrInput
}

func (CfwAddressBookState) ElementType() reflect.Type {
	return reflect.TypeOf((*cfwAddressBookState)(nil)).Elem()
}

type cfwAddressBookArgs struct {
	// The address list of the address book.
	// When groupType is `ip`, fill in IPv4/CIDRV4 addresses in the address list.
	// When groupType is `port`, fill in the port information in the address list, supporting two formats: 22 and 100/200.
	// When groupType is `domain`, fill in the domain name information in the address list.
	AddressLists []string `pulumi:"addressLists"`
	// The description of the address book.
	Description *string `pulumi:"description"`
	// The name of the address book.
	GroupName string `pulumi:"groupName"`
	// The type of the address book. Valid values: `ip`, `port`, `domain`.
	GroupType string `pulumi:"groupType"`
}

// The set of arguments for constructing a CfwAddressBook resource.
type CfwAddressBookArgs struct {
	// The address list of the address book.
	// When groupType is `ip`, fill in IPv4/CIDRV4 addresses in the address list.
	// When groupType is `port`, fill in the port information in the address list, supporting two formats: 22 and 100/200.
	// When groupType is `domain`, fill in the domain name information in the address list.
	AddressLists pulumi.StringArrayInput
	// The description of the address book.
	Description pulumi.StringPtrInput
	// The name of the address book.
	GroupName pulumi.StringInput
	// The type of the address book. Valid values: `ip`, `port`, `domain`.
	GroupType pulumi.StringInput
}

func (CfwAddressBookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cfwAddressBookArgs)(nil)).Elem()
}

type CfwAddressBookInput interface {
	pulumi.Input

	ToCfwAddressBookOutput() CfwAddressBookOutput
	ToCfwAddressBookOutputWithContext(ctx context.Context) CfwAddressBookOutput
}

func (*CfwAddressBook) ElementType() reflect.Type {
	return reflect.TypeOf((**CfwAddressBook)(nil)).Elem()
}

func (i *CfwAddressBook) ToCfwAddressBookOutput() CfwAddressBookOutput {
	return i.ToCfwAddressBookOutputWithContext(context.Background())
}

func (i *CfwAddressBook) ToCfwAddressBookOutputWithContext(ctx context.Context) CfwAddressBookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CfwAddressBookOutput)
}

// CfwAddressBookArrayInput is an input type that accepts CfwAddressBookArray and CfwAddressBookArrayOutput values.
// You can construct a concrete instance of `CfwAddressBookArrayInput` via:
//
//	CfwAddressBookArray{ CfwAddressBookArgs{...} }
type CfwAddressBookArrayInput interface {
	pulumi.Input

	ToCfwAddressBookArrayOutput() CfwAddressBookArrayOutput
	ToCfwAddressBookArrayOutputWithContext(context.Context) CfwAddressBookArrayOutput
}

type CfwAddressBookArray []CfwAddressBookInput

func (CfwAddressBookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CfwAddressBook)(nil)).Elem()
}

func (i CfwAddressBookArray) ToCfwAddressBookArrayOutput() CfwAddressBookArrayOutput {
	return i.ToCfwAddressBookArrayOutputWithContext(context.Background())
}

func (i CfwAddressBookArray) ToCfwAddressBookArrayOutputWithContext(ctx context.Context) CfwAddressBookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CfwAddressBookArrayOutput)
}

// CfwAddressBookMapInput is an input type that accepts CfwAddressBookMap and CfwAddressBookMapOutput values.
// You can construct a concrete instance of `CfwAddressBookMapInput` via:
//
//	CfwAddressBookMap{ "key": CfwAddressBookArgs{...} }
type CfwAddressBookMapInput interface {
	pulumi.Input

	ToCfwAddressBookMapOutput() CfwAddressBookMapOutput
	ToCfwAddressBookMapOutputWithContext(context.Context) CfwAddressBookMapOutput
}

type CfwAddressBookMap map[string]CfwAddressBookInput

func (CfwAddressBookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CfwAddressBook)(nil)).Elem()
}

func (i CfwAddressBookMap) ToCfwAddressBookMapOutput() CfwAddressBookMapOutput {
	return i.ToCfwAddressBookMapOutputWithContext(context.Background())
}

func (i CfwAddressBookMap) ToCfwAddressBookMapOutputWithContext(ctx context.Context) CfwAddressBookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CfwAddressBookMapOutput)
}

type CfwAddressBookOutput struct{ *pulumi.OutputState }

func (CfwAddressBookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CfwAddressBook)(nil)).Elem()
}

func (o CfwAddressBookOutput) ToCfwAddressBookOutput() CfwAddressBookOutput {
	return o
}

func (o CfwAddressBookOutput) ToCfwAddressBookOutputWithContext(ctx context.Context) CfwAddressBookOutput {
	return o
}

// The address list of the address book.
// When groupType is `ip`, fill in IPv4/CIDRV4 addresses in the address list.
// When groupType is `port`, fill in the port information in the address list, supporting two formats: 22 and 100/200.
// When groupType is `domain`, fill in the domain name information in the address list.
func (o CfwAddressBookOutput) AddressLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CfwAddressBook) pulumi.StringArrayOutput { return v.AddressLists }).(pulumi.StringArrayOutput)
}

// The description of the address book.
func (o CfwAddressBookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CfwAddressBook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the address book.
func (o CfwAddressBookOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwAddressBook) pulumi.StringOutput { return v.GroupName }).(pulumi.StringOutput)
}

// The type of the address book. Valid values: `ip`, `port`, `domain`.
func (o CfwAddressBookOutput) GroupType() pulumi.StringOutput {
	return o.ApplyT(func(v *CfwAddressBook) pulumi.StringOutput { return v.GroupType }).(pulumi.StringOutput)
}

// The reference count of the address book.
func (o CfwAddressBookOutput) RefCnt() pulumi.IntOutput {
	return o.ApplyT(func(v *CfwAddressBook) pulumi.IntOutput { return v.RefCnt }).(pulumi.IntOutput)
}

type CfwAddressBookArrayOutput struct{ *pulumi.OutputState }

func (CfwAddressBookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CfwAddressBook)(nil)).Elem()
}

func (o CfwAddressBookArrayOutput) ToCfwAddressBookArrayOutput() CfwAddressBookArrayOutput {
	return o
}

func (o CfwAddressBookArrayOutput) ToCfwAddressBookArrayOutputWithContext(ctx context.Context) CfwAddressBookArrayOutput {
	return o
}

func (o CfwAddressBookArrayOutput) Index(i pulumi.IntInput) CfwAddressBookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CfwAddressBook {
		return vs[0].([]*CfwAddressBook)[vs[1].(int)]
	}).(CfwAddressBookOutput)
}

type CfwAddressBookMapOutput struct{ *pulumi.OutputState }

func (CfwAddressBookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CfwAddressBook)(nil)).Elem()
}

func (o CfwAddressBookMapOutput) ToCfwAddressBookMapOutput() CfwAddressBookMapOutput {
	return o
}

func (o CfwAddressBookMapOutput) ToCfwAddressBookMapOutputWithContext(ctx context.Context) CfwAddressBookMapOutput {
	return o
}

func (o CfwAddressBookMapOutput) MapIndex(k pulumi.StringInput) CfwAddressBookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CfwAddressBook {
		return vs[0].(map[string]*CfwAddressBook)[vs[1].(string)]
	}).(CfwAddressBookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CfwAddressBookInput)(nil)).Elem(), &CfwAddressBook{})
	pulumi.RegisterInputType(reflect.TypeOf((*CfwAddressBookArrayInput)(nil)).Elem(), CfwAddressBookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CfwAddressBookMapInput)(nil)).Elem(), CfwAddressBookMap{})
	pulumi.RegisterOutputType(CfwAddressBookOutput{})
	pulumi.RegisterOutputType(CfwAddressBookArrayOutput{})
	pulumi.RegisterOutputType(CfwAddressBookMapOutput{})
}
