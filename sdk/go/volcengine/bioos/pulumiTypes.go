// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bioos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type ClusterSharedConfig struct {
	// Whether to enable a shared cluster. This value must be `true`.
	Enable bool `pulumi:"enable"`
}

// ClusterSharedConfigInput is an input type that accepts ClusterSharedConfigArgs and ClusterSharedConfigOutput values.
// You can construct a concrete instance of `ClusterSharedConfigInput` via:
//
//	ClusterSharedConfigArgs{...}
type ClusterSharedConfigInput interface {
	pulumi.Input

	ToClusterSharedConfigOutput() ClusterSharedConfigOutput
	ToClusterSharedConfigOutputWithContext(context.Context) ClusterSharedConfigOutput
}

type ClusterSharedConfigArgs struct {
	// Whether to enable a shared cluster. This value must be `true`.
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (ClusterSharedConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSharedConfig)(nil)).Elem()
}

func (i ClusterSharedConfigArgs) ToClusterSharedConfigOutput() ClusterSharedConfigOutput {
	return i.ToClusterSharedConfigOutputWithContext(context.Background())
}

func (i ClusterSharedConfigArgs) ToClusterSharedConfigOutputWithContext(ctx context.Context) ClusterSharedConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSharedConfigOutput)
}

func (i ClusterSharedConfigArgs) ToClusterSharedConfigPtrOutput() ClusterSharedConfigPtrOutput {
	return i.ToClusterSharedConfigPtrOutputWithContext(context.Background())
}

func (i ClusterSharedConfigArgs) ToClusterSharedConfigPtrOutputWithContext(ctx context.Context) ClusterSharedConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSharedConfigOutput).ToClusterSharedConfigPtrOutputWithContext(ctx)
}

// ClusterSharedConfigPtrInput is an input type that accepts ClusterSharedConfigArgs, ClusterSharedConfigPtr and ClusterSharedConfigPtrOutput values.
// You can construct a concrete instance of `ClusterSharedConfigPtrInput` via:
//
//	        ClusterSharedConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterSharedConfigPtrInput interface {
	pulumi.Input

	ToClusterSharedConfigPtrOutput() ClusterSharedConfigPtrOutput
	ToClusterSharedConfigPtrOutputWithContext(context.Context) ClusterSharedConfigPtrOutput
}

type clusterSharedConfigPtrType ClusterSharedConfigArgs

func ClusterSharedConfigPtr(v *ClusterSharedConfigArgs) ClusterSharedConfigPtrInput {
	return (*clusterSharedConfigPtrType)(v)
}

func (*clusterSharedConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSharedConfig)(nil)).Elem()
}

func (i *clusterSharedConfigPtrType) ToClusterSharedConfigPtrOutput() ClusterSharedConfigPtrOutput {
	return i.ToClusterSharedConfigPtrOutputWithContext(context.Background())
}

func (i *clusterSharedConfigPtrType) ToClusterSharedConfigPtrOutputWithContext(ctx context.Context) ClusterSharedConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSharedConfigPtrOutput)
}

type ClusterSharedConfigOutput struct{ *pulumi.OutputState }

func (ClusterSharedConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSharedConfig)(nil)).Elem()
}

func (o ClusterSharedConfigOutput) ToClusterSharedConfigOutput() ClusterSharedConfigOutput {
	return o
}

func (o ClusterSharedConfigOutput) ToClusterSharedConfigOutputWithContext(ctx context.Context) ClusterSharedConfigOutput {
	return o
}

func (o ClusterSharedConfigOutput) ToClusterSharedConfigPtrOutput() ClusterSharedConfigPtrOutput {
	return o.ToClusterSharedConfigPtrOutputWithContext(context.Background())
}

func (o ClusterSharedConfigOutput) ToClusterSharedConfigPtrOutputWithContext(ctx context.Context) ClusterSharedConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSharedConfig) *ClusterSharedConfig {
		return &v
	}).(ClusterSharedConfigPtrOutput)
}

// Whether to enable a shared cluster. This value must be `true`.
func (o ClusterSharedConfigOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterSharedConfig) bool { return v.Enable }).(pulumi.BoolOutput)
}

type ClusterSharedConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterSharedConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSharedConfig)(nil)).Elem()
}

func (o ClusterSharedConfigPtrOutput) ToClusterSharedConfigPtrOutput() ClusterSharedConfigPtrOutput {
	return o
}

func (o ClusterSharedConfigPtrOutput) ToClusterSharedConfigPtrOutputWithContext(ctx context.Context) ClusterSharedConfigPtrOutput {
	return o
}

func (o ClusterSharedConfigPtrOutput) Elem() ClusterSharedConfigOutput {
	return o.ApplyT(func(v *ClusterSharedConfig) ClusterSharedConfig {
		if v != nil {
			return *v
		}
		var ret ClusterSharedConfig
		return ret
	}).(ClusterSharedConfigOutput)
}

// Whether to enable a shared cluster. This value must be `true`.
func (o ClusterSharedConfigPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterSharedConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ClusterVkeConfig struct {
	// The id of the vke cluster.
	ClusterId string `pulumi:"clusterId"`
	// The name of the StorageClass that the vke cluster has installed.
	StorageClass string `pulumi:"storageClass"`
}

// ClusterVkeConfigInput is an input type that accepts ClusterVkeConfigArgs and ClusterVkeConfigOutput values.
// You can construct a concrete instance of `ClusterVkeConfigInput` via:
//
//	ClusterVkeConfigArgs{...}
type ClusterVkeConfigInput interface {
	pulumi.Input

	ToClusterVkeConfigOutput() ClusterVkeConfigOutput
	ToClusterVkeConfigOutputWithContext(context.Context) ClusterVkeConfigOutput
}

type ClusterVkeConfigArgs struct {
	// The id of the vke cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The name of the StorageClass that the vke cluster has installed.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (ClusterVkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVkeConfig)(nil)).Elem()
}

func (i ClusterVkeConfigArgs) ToClusterVkeConfigOutput() ClusterVkeConfigOutput {
	return i.ToClusterVkeConfigOutputWithContext(context.Background())
}

func (i ClusterVkeConfigArgs) ToClusterVkeConfigOutputWithContext(ctx context.Context) ClusterVkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVkeConfigOutput)
}

func (i ClusterVkeConfigArgs) ToClusterVkeConfigPtrOutput() ClusterVkeConfigPtrOutput {
	return i.ToClusterVkeConfigPtrOutputWithContext(context.Background())
}

func (i ClusterVkeConfigArgs) ToClusterVkeConfigPtrOutputWithContext(ctx context.Context) ClusterVkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVkeConfigOutput).ToClusterVkeConfigPtrOutputWithContext(ctx)
}

// ClusterVkeConfigPtrInput is an input type that accepts ClusterVkeConfigArgs, ClusterVkeConfigPtr and ClusterVkeConfigPtrOutput values.
// You can construct a concrete instance of `ClusterVkeConfigPtrInput` via:
//
//	        ClusterVkeConfigArgs{...}
//
//	or:
//
//	        nil
type ClusterVkeConfigPtrInput interface {
	pulumi.Input

	ToClusterVkeConfigPtrOutput() ClusterVkeConfigPtrOutput
	ToClusterVkeConfigPtrOutputWithContext(context.Context) ClusterVkeConfigPtrOutput
}

type clusterVkeConfigPtrType ClusterVkeConfigArgs

func ClusterVkeConfigPtr(v *ClusterVkeConfigArgs) ClusterVkeConfigPtrInput {
	return (*clusterVkeConfigPtrType)(v)
}

func (*clusterVkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVkeConfig)(nil)).Elem()
}

func (i *clusterVkeConfigPtrType) ToClusterVkeConfigPtrOutput() ClusterVkeConfigPtrOutput {
	return i.ToClusterVkeConfigPtrOutputWithContext(context.Background())
}

func (i *clusterVkeConfigPtrType) ToClusterVkeConfigPtrOutputWithContext(ctx context.Context) ClusterVkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVkeConfigPtrOutput)
}

type ClusterVkeConfigOutput struct{ *pulumi.OutputState }

func (ClusterVkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVkeConfig)(nil)).Elem()
}

func (o ClusterVkeConfigOutput) ToClusterVkeConfigOutput() ClusterVkeConfigOutput {
	return o
}

func (o ClusterVkeConfigOutput) ToClusterVkeConfigOutputWithContext(ctx context.Context) ClusterVkeConfigOutput {
	return o
}

func (o ClusterVkeConfigOutput) ToClusterVkeConfigPtrOutput() ClusterVkeConfigPtrOutput {
	return o.ToClusterVkeConfigPtrOutputWithContext(context.Background())
}

func (o ClusterVkeConfigOutput) ToClusterVkeConfigPtrOutputWithContext(ctx context.Context) ClusterVkeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterVkeConfig) *ClusterVkeConfig {
		return &v
	}).(ClusterVkeConfigPtrOutput)
}

// The id of the vke cluster.
func (o ClusterVkeConfigOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterVkeConfig) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The name of the StorageClass that the vke cluster has installed.
func (o ClusterVkeConfigOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterVkeConfig) string { return v.StorageClass }).(pulumi.StringOutput)
}

type ClusterVkeConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterVkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVkeConfig)(nil)).Elem()
}

func (o ClusterVkeConfigPtrOutput) ToClusterVkeConfigPtrOutput() ClusterVkeConfigPtrOutput {
	return o
}

func (o ClusterVkeConfigPtrOutput) ToClusterVkeConfigPtrOutputWithContext(ctx context.Context) ClusterVkeConfigPtrOutput {
	return o
}

func (o ClusterVkeConfigPtrOutput) Elem() ClusterVkeConfigOutput {
	return o.ApplyT(func(v *ClusterVkeConfig) ClusterVkeConfig {
		if v != nil {
			return *v
		}
		var ret ClusterVkeConfig
		return ret
	}).(ClusterVkeConfigOutput)
}

// The id of the vke cluster.
func (o ClusterVkeConfigPtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterVkeConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// The name of the StorageClass that the vke cluster has installed.
func (o ClusterVkeConfigPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterVkeConfig) *string {
		if v == nil {
			return nil
		}
		return &v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type ClustersItem struct {
	// Whether there is a bound workspace.
	Bound bool `pulumi:"bound"`
	// The description of the cluster.
	Description string `pulumi:"description"`
	// The id of the bioos cluster.
	Id string `pulumi:"id"`
	// The name of the cluster.
	Name string `pulumi:"name"`
	// whether it is a public cluster.
	Public bool `pulumi:"public"`
	// The configuration of the shared cluster.
	SharedConfigs []ClustersItemSharedConfig `pulumi:"sharedConfigs"`
	// The start time of the cluster.
	StartTime int `pulumi:"startTime"`
	// The status of the clusters.
	Status string `pulumi:"status"`
	// The end time of the cluster.
	StoppedTime int `pulumi:"stoppedTime"`
	// The id of the vke cluster.
	VkeConfigId string `pulumi:"vkeConfigId"`
	// The name of the StorageClass that the vke cluster has installed.
	VkeConfigStorageClass string `pulumi:"vkeConfigStorageClass"`
}

// ClustersItemInput is an input type that accepts ClustersItemArgs and ClustersItemOutput values.
// You can construct a concrete instance of `ClustersItemInput` via:
//
//	ClustersItemArgs{...}
type ClustersItemInput interface {
	pulumi.Input

	ToClustersItemOutput() ClustersItemOutput
	ToClustersItemOutputWithContext(context.Context) ClustersItemOutput
}

type ClustersItemArgs struct {
	// Whether there is a bound workspace.
	Bound pulumi.BoolInput `pulumi:"bound"`
	// The description of the cluster.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the bioos cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// whether it is a public cluster.
	Public pulumi.BoolInput `pulumi:"public"`
	// The configuration of the shared cluster.
	SharedConfigs ClustersItemSharedConfigArrayInput `pulumi:"sharedConfigs"`
	// The start time of the cluster.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// The status of the clusters.
	Status pulumi.StringInput `pulumi:"status"`
	// The end time of the cluster.
	StoppedTime pulumi.IntInput `pulumi:"stoppedTime"`
	// The id of the vke cluster.
	VkeConfigId pulumi.StringInput `pulumi:"vkeConfigId"`
	// The name of the StorageClass that the vke cluster has installed.
	VkeConfigStorageClass pulumi.StringInput `pulumi:"vkeConfigStorageClass"`
}

func (ClustersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersItem)(nil)).Elem()
}

func (i ClustersItemArgs) ToClustersItemOutput() ClustersItemOutput {
	return i.ToClustersItemOutputWithContext(context.Background())
}

func (i ClustersItemArgs) ToClustersItemOutputWithContext(ctx context.Context) ClustersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersItemOutput)
}

// ClustersItemArrayInput is an input type that accepts ClustersItemArray and ClustersItemArrayOutput values.
// You can construct a concrete instance of `ClustersItemArrayInput` via:
//
//	ClustersItemArray{ ClustersItemArgs{...} }
type ClustersItemArrayInput interface {
	pulumi.Input

	ToClustersItemArrayOutput() ClustersItemArrayOutput
	ToClustersItemArrayOutputWithContext(context.Context) ClustersItemArrayOutput
}

type ClustersItemArray []ClustersItemInput

func (ClustersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersItem)(nil)).Elem()
}

func (i ClustersItemArray) ToClustersItemArrayOutput() ClustersItemArrayOutput {
	return i.ToClustersItemArrayOutputWithContext(context.Background())
}

func (i ClustersItemArray) ToClustersItemArrayOutputWithContext(ctx context.Context) ClustersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersItemArrayOutput)
}

type ClustersItemOutput struct{ *pulumi.OutputState }

func (ClustersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersItem)(nil)).Elem()
}

func (o ClustersItemOutput) ToClustersItemOutput() ClustersItemOutput {
	return o
}

func (o ClustersItemOutput) ToClustersItemOutputWithContext(ctx context.Context) ClustersItemOutput {
	return o
}

// Whether there is a bound workspace.
func (o ClustersItemOutput) Bound() pulumi.BoolOutput {
	return o.ApplyT(func(v ClustersItem) bool { return v.Bound }).(pulumi.BoolOutput)
}

// The description of the cluster.
func (o ClustersItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ClustersItem) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the bioos cluster.
func (o ClustersItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClustersItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the cluster.
func (o ClustersItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClustersItem) string { return v.Name }).(pulumi.StringOutput)
}

// whether it is a public cluster.
func (o ClustersItemOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v ClustersItem) bool { return v.Public }).(pulumi.BoolOutput)
}

// The configuration of the shared cluster.
func (o ClustersItemOutput) SharedConfigs() ClustersItemSharedConfigArrayOutput {
	return o.ApplyT(func(v ClustersItem) []ClustersItemSharedConfig { return v.SharedConfigs }).(ClustersItemSharedConfigArrayOutput)
}

// The start time of the cluster.
func (o ClustersItemOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v ClustersItem) int { return v.StartTime }).(pulumi.IntOutput)
}

// The status of the clusters.
func (o ClustersItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClustersItem) string { return v.Status }).(pulumi.StringOutput)
}

// The end time of the cluster.
func (o ClustersItemOutput) StoppedTime() pulumi.IntOutput {
	return o.ApplyT(func(v ClustersItem) int { return v.StoppedTime }).(pulumi.IntOutput)
}

// The id of the vke cluster.
func (o ClustersItemOutput) VkeConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v ClustersItem) string { return v.VkeConfigId }).(pulumi.StringOutput)
}

// The name of the StorageClass that the vke cluster has installed.
func (o ClustersItemOutput) VkeConfigStorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v ClustersItem) string { return v.VkeConfigStorageClass }).(pulumi.StringOutput)
}

type ClustersItemArrayOutput struct{ *pulumi.OutputState }

func (ClustersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersItem)(nil)).Elem()
}

func (o ClustersItemArrayOutput) ToClustersItemArrayOutput() ClustersItemArrayOutput {
	return o
}

func (o ClustersItemArrayOutput) ToClustersItemArrayOutputWithContext(ctx context.Context) ClustersItemArrayOutput {
	return o
}

func (o ClustersItemArrayOutput) Index(i pulumi.IntInput) ClustersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClustersItem {
		return vs[0].([]ClustersItem)[vs[1].(int)]
	}).(ClustersItemOutput)
}

type ClustersItemSharedConfig struct {
	// Whether to enable a shared cluster. This value must be `true`.
	Enable bool `pulumi:"enable"`
}

// ClustersItemSharedConfigInput is an input type that accepts ClustersItemSharedConfigArgs and ClustersItemSharedConfigOutput values.
// You can construct a concrete instance of `ClustersItemSharedConfigInput` via:
//
//	ClustersItemSharedConfigArgs{...}
type ClustersItemSharedConfigInput interface {
	pulumi.Input

	ToClustersItemSharedConfigOutput() ClustersItemSharedConfigOutput
	ToClustersItemSharedConfigOutputWithContext(context.Context) ClustersItemSharedConfigOutput
}

type ClustersItemSharedConfigArgs struct {
	// Whether to enable a shared cluster. This value must be `true`.
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (ClustersItemSharedConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersItemSharedConfig)(nil)).Elem()
}

func (i ClustersItemSharedConfigArgs) ToClustersItemSharedConfigOutput() ClustersItemSharedConfigOutput {
	return i.ToClustersItemSharedConfigOutputWithContext(context.Background())
}

func (i ClustersItemSharedConfigArgs) ToClustersItemSharedConfigOutputWithContext(ctx context.Context) ClustersItemSharedConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersItemSharedConfigOutput)
}

// ClustersItemSharedConfigArrayInput is an input type that accepts ClustersItemSharedConfigArray and ClustersItemSharedConfigArrayOutput values.
// You can construct a concrete instance of `ClustersItemSharedConfigArrayInput` via:
//
//	ClustersItemSharedConfigArray{ ClustersItemSharedConfigArgs{...} }
type ClustersItemSharedConfigArrayInput interface {
	pulumi.Input

	ToClustersItemSharedConfigArrayOutput() ClustersItemSharedConfigArrayOutput
	ToClustersItemSharedConfigArrayOutputWithContext(context.Context) ClustersItemSharedConfigArrayOutput
}

type ClustersItemSharedConfigArray []ClustersItemSharedConfigInput

func (ClustersItemSharedConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersItemSharedConfig)(nil)).Elem()
}

func (i ClustersItemSharedConfigArray) ToClustersItemSharedConfigArrayOutput() ClustersItemSharedConfigArrayOutput {
	return i.ToClustersItemSharedConfigArrayOutputWithContext(context.Background())
}

func (i ClustersItemSharedConfigArray) ToClustersItemSharedConfigArrayOutputWithContext(ctx context.Context) ClustersItemSharedConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClustersItemSharedConfigArrayOutput)
}

type ClustersItemSharedConfigOutput struct{ *pulumi.OutputState }

func (ClustersItemSharedConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersItemSharedConfig)(nil)).Elem()
}

func (o ClustersItemSharedConfigOutput) ToClustersItemSharedConfigOutput() ClustersItemSharedConfigOutput {
	return o
}

func (o ClustersItemSharedConfigOutput) ToClustersItemSharedConfigOutputWithContext(ctx context.Context) ClustersItemSharedConfigOutput {
	return o
}

// Whether to enable a shared cluster. This value must be `true`.
func (o ClustersItemSharedConfigOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v ClustersItemSharedConfig) bool { return v.Enable }).(pulumi.BoolOutput)
}

type ClustersItemSharedConfigArrayOutput struct{ *pulumi.OutputState }

func (ClustersItemSharedConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClustersItemSharedConfig)(nil)).Elem()
}

func (o ClustersItemSharedConfigArrayOutput) ToClustersItemSharedConfigArrayOutput() ClustersItemSharedConfigArrayOutput {
	return o
}

func (o ClustersItemSharedConfigArrayOutput) ToClustersItemSharedConfigArrayOutputWithContext(ctx context.Context) ClustersItemSharedConfigArrayOutput {
	return o
}

func (o ClustersItemSharedConfigArrayOutput) Index(i pulumi.IntInput) ClustersItemSharedConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClustersItemSharedConfig {
		return vs[0].([]ClustersItemSharedConfig)[vs[1].(int)]
	}).(ClustersItemSharedConfigOutput)
}

type WorkspacesItem struct {
	// The URL of the cover.
	CoverDownloadUrl string `pulumi:"coverDownloadUrl"`
	// The creation time of the workspace.
	CreateTime int `pulumi:"createTime"`
	// The description of the workspace.
	Description string `pulumi:"description"`
	// The id of the workspace.
	Id string `pulumi:"id"`
	// The name of the workspace.
	Name string `pulumi:"name"`
	// The name of the owner of the workspace.
	OwnerName string `pulumi:"ownerName"`
	// The role of the user.
	Role string `pulumi:"role"`
	// S3 bucket address.
	S3Bucket string `pulumi:"s3Bucket"`
	// The update time of the workspace.
	UpdateTime int `pulumi:"updateTime"`
}

// WorkspacesItemInput is an input type that accepts WorkspacesItemArgs and WorkspacesItemOutput values.
// You can construct a concrete instance of `WorkspacesItemInput` via:
//
//	WorkspacesItemArgs{...}
type WorkspacesItemInput interface {
	pulumi.Input

	ToWorkspacesItemOutput() WorkspacesItemOutput
	ToWorkspacesItemOutputWithContext(context.Context) WorkspacesItemOutput
}

type WorkspacesItemArgs struct {
	// The URL of the cover.
	CoverDownloadUrl pulumi.StringInput `pulumi:"coverDownloadUrl"`
	// The creation time of the workspace.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The description of the workspace.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the workspace.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the workspace.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the owner of the workspace.
	OwnerName pulumi.StringInput `pulumi:"ownerName"`
	// The role of the user.
	Role pulumi.StringInput `pulumi:"role"`
	// S3 bucket address.
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	// The update time of the workspace.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
}

func (WorkspacesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesItem)(nil)).Elem()
}

func (i WorkspacesItemArgs) ToWorkspacesItemOutput() WorkspacesItemOutput {
	return i.ToWorkspacesItemOutputWithContext(context.Background())
}

func (i WorkspacesItemArgs) ToWorkspacesItemOutputWithContext(ctx context.Context) WorkspacesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesItemOutput)
}

// WorkspacesItemArrayInput is an input type that accepts WorkspacesItemArray and WorkspacesItemArrayOutput values.
// You can construct a concrete instance of `WorkspacesItemArrayInput` via:
//
//	WorkspacesItemArray{ WorkspacesItemArgs{...} }
type WorkspacesItemArrayInput interface {
	pulumi.Input

	ToWorkspacesItemArrayOutput() WorkspacesItemArrayOutput
	ToWorkspacesItemArrayOutputWithContext(context.Context) WorkspacesItemArrayOutput
}

type WorkspacesItemArray []WorkspacesItemInput

func (WorkspacesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacesItem)(nil)).Elem()
}

func (i WorkspacesItemArray) ToWorkspacesItemArrayOutput() WorkspacesItemArrayOutput {
	return i.ToWorkspacesItemArrayOutputWithContext(context.Background())
}

func (i WorkspacesItemArray) ToWorkspacesItemArrayOutputWithContext(ctx context.Context) WorkspacesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacesItemArrayOutput)
}

type WorkspacesItemOutput struct{ *pulumi.OutputState }

func (WorkspacesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacesItem)(nil)).Elem()
}

func (o WorkspacesItemOutput) ToWorkspacesItemOutput() WorkspacesItemOutput {
	return o
}

func (o WorkspacesItemOutput) ToWorkspacesItemOutputWithContext(ctx context.Context) WorkspacesItemOutput {
	return o
}

// The URL of the cover.
func (o WorkspacesItemOutput) CoverDownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesItem) string { return v.CoverDownloadUrl }).(pulumi.StringOutput)
}

// The creation time of the workspace.
func (o WorkspacesItemOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacesItem) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The description of the workspace.
func (o WorkspacesItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesItem) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the workspace.
func (o WorkspacesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the workspace.
func (o WorkspacesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesItem) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the owner of the workspace.
func (o WorkspacesItemOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesItem) string { return v.OwnerName }).(pulumi.StringOutput)
}

// The role of the user.
func (o WorkspacesItemOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesItem) string { return v.Role }).(pulumi.StringOutput)
}

// S3 bucket address.
func (o WorkspacesItemOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspacesItem) string { return v.S3Bucket }).(pulumi.StringOutput)
}

// The update time of the workspace.
func (o WorkspacesItemOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v WorkspacesItem) int { return v.UpdateTime }).(pulumi.IntOutput)
}

type WorkspacesItemArrayOutput struct{ *pulumi.OutputState }

func (WorkspacesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacesItem)(nil)).Elem()
}

func (o WorkspacesItemArrayOutput) ToWorkspacesItemArrayOutput() WorkspacesItemArrayOutput {
	return o
}

func (o WorkspacesItemArrayOutput) ToWorkspacesItemArrayOutputWithContext(ctx context.Context) WorkspacesItemArrayOutput {
	return o
}

func (o WorkspacesItemArrayOutput) Index(i pulumi.IntInput) WorkspacesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspacesItem {
		return vs[0].([]WorkspacesItem)[vs[1].(int)]
	}).(WorkspacesItemOutput)
}

type GetClustersItem struct {
	// Whether there is a bound workspace.
	Bound bool `pulumi:"bound"`
	// The description of the cluster.
	Description string `pulumi:"description"`
	// The id of the bioos cluster.
	Id string `pulumi:"id"`
	// The name of the cluster.
	Name string `pulumi:"name"`
	// whether it is a public cluster.
	Public bool `pulumi:"public"`
	// The configuration of the shared cluster.
	SharedConfigs []GetClustersItemSharedConfig `pulumi:"sharedConfigs"`
	// The start time of the cluster.
	StartTime int `pulumi:"startTime"`
	// The status of the clusters.
	Status string `pulumi:"status"`
	// The end time of the cluster.
	StoppedTime int `pulumi:"stoppedTime"`
	// The id of the vke cluster.
	VkeConfigId string `pulumi:"vkeConfigId"`
	// The name of the StorageClass that the vke cluster has installed.
	VkeConfigStorageClass string `pulumi:"vkeConfigStorageClass"`
}

// GetClustersItemInput is an input type that accepts GetClustersItemArgs and GetClustersItemOutput values.
// You can construct a concrete instance of `GetClustersItemInput` via:
//
//	GetClustersItemArgs{...}
type GetClustersItemInput interface {
	pulumi.Input

	ToGetClustersItemOutput() GetClustersItemOutput
	ToGetClustersItemOutputWithContext(context.Context) GetClustersItemOutput
}

type GetClustersItemArgs struct {
	// Whether there is a bound workspace.
	Bound pulumi.BoolInput `pulumi:"bound"`
	// The description of the cluster.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the bioos cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// whether it is a public cluster.
	Public pulumi.BoolInput `pulumi:"public"`
	// The configuration of the shared cluster.
	SharedConfigs GetClustersItemSharedConfigArrayInput `pulumi:"sharedConfigs"`
	// The start time of the cluster.
	StartTime pulumi.IntInput `pulumi:"startTime"`
	// The status of the clusters.
	Status pulumi.StringInput `pulumi:"status"`
	// The end time of the cluster.
	StoppedTime pulumi.IntInput `pulumi:"stoppedTime"`
	// The id of the vke cluster.
	VkeConfigId pulumi.StringInput `pulumi:"vkeConfigId"`
	// The name of the StorageClass that the vke cluster has installed.
	VkeConfigStorageClass pulumi.StringInput `pulumi:"vkeConfigStorageClass"`
}

func (GetClustersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersItem)(nil)).Elem()
}

func (i GetClustersItemArgs) ToGetClustersItemOutput() GetClustersItemOutput {
	return i.ToGetClustersItemOutputWithContext(context.Background())
}

func (i GetClustersItemArgs) ToGetClustersItemOutputWithContext(ctx context.Context) GetClustersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersItemOutput)
}

// GetClustersItemArrayInput is an input type that accepts GetClustersItemArray and GetClustersItemArrayOutput values.
// You can construct a concrete instance of `GetClustersItemArrayInput` via:
//
//	GetClustersItemArray{ GetClustersItemArgs{...} }
type GetClustersItemArrayInput interface {
	pulumi.Input

	ToGetClustersItemArrayOutput() GetClustersItemArrayOutput
	ToGetClustersItemArrayOutputWithContext(context.Context) GetClustersItemArrayOutput
}

type GetClustersItemArray []GetClustersItemInput

func (GetClustersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersItem)(nil)).Elem()
}

func (i GetClustersItemArray) ToGetClustersItemArrayOutput() GetClustersItemArrayOutput {
	return i.ToGetClustersItemArrayOutputWithContext(context.Background())
}

func (i GetClustersItemArray) ToGetClustersItemArrayOutputWithContext(ctx context.Context) GetClustersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersItemArrayOutput)
}

type GetClustersItemOutput struct{ *pulumi.OutputState }

func (GetClustersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersItem)(nil)).Elem()
}

func (o GetClustersItemOutput) ToGetClustersItemOutput() GetClustersItemOutput {
	return o
}

func (o GetClustersItemOutput) ToGetClustersItemOutputWithContext(ctx context.Context) GetClustersItemOutput {
	return o
}

// Whether there is a bound workspace.
func (o GetClustersItemOutput) Bound() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersItem) bool { return v.Bound }).(pulumi.BoolOutput)
}

// The description of the cluster.
func (o GetClustersItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersItem) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the bioos cluster.
func (o GetClustersItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the cluster.
func (o GetClustersItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersItem) string { return v.Name }).(pulumi.StringOutput)
}

// whether it is a public cluster.
func (o GetClustersItemOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersItem) bool { return v.Public }).(pulumi.BoolOutput)
}

// The configuration of the shared cluster.
func (o GetClustersItemOutput) SharedConfigs() GetClustersItemSharedConfigArrayOutput {
	return o.ApplyT(func(v GetClustersItem) []GetClustersItemSharedConfig { return v.SharedConfigs }).(GetClustersItemSharedConfigArrayOutput)
}

// The start time of the cluster.
func (o GetClustersItemOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersItem) int { return v.StartTime }).(pulumi.IntOutput)
}

// The status of the clusters.
func (o GetClustersItemOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersItem) string { return v.Status }).(pulumi.StringOutput)
}

// The end time of the cluster.
func (o GetClustersItemOutput) StoppedTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersItem) int { return v.StoppedTime }).(pulumi.IntOutput)
}

// The id of the vke cluster.
func (o GetClustersItemOutput) VkeConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersItem) string { return v.VkeConfigId }).(pulumi.StringOutput)
}

// The name of the StorageClass that the vke cluster has installed.
func (o GetClustersItemOutput) VkeConfigStorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersItem) string { return v.VkeConfigStorageClass }).(pulumi.StringOutput)
}

type GetClustersItemArrayOutput struct{ *pulumi.OutputState }

func (GetClustersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersItem)(nil)).Elem()
}

func (o GetClustersItemArrayOutput) ToGetClustersItemArrayOutput() GetClustersItemArrayOutput {
	return o
}

func (o GetClustersItemArrayOutput) ToGetClustersItemArrayOutputWithContext(ctx context.Context) GetClustersItemArrayOutput {
	return o
}

func (o GetClustersItemArrayOutput) Index(i pulumi.IntInput) GetClustersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersItem {
		return vs[0].([]GetClustersItem)[vs[1].(int)]
	}).(GetClustersItemOutput)
}

type GetClustersItemSharedConfig struct {
	// Whether to enable a shared cluster. This value must be `true`.
	Enable bool `pulumi:"enable"`
}

// GetClustersItemSharedConfigInput is an input type that accepts GetClustersItemSharedConfigArgs and GetClustersItemSharedConfigOutput values.
// You can construct a concrete instance of `GetClustersItemSharedConfigInput` via:
//
//	GetClustersItemSharedConfigArgs{...}
type GetClustersItemSharedConfigInput interface {
	pulumi.Input

	ToGetClustersItemSharedConfigOutput() GetClustersItemSharedConfigOutput
	ToGetClustersItemSharedConfigOutputWithContext(context.Context) GetClustersItemSharedConfigOutput
}

type GetClustersItemSharedConfigArgs struct {
	// Whether to enable a shared cluster. This value must be `true`.
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (GetClustersItemSharedConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersItemSharedConfig)(nil)).Elem()
}

func (i GetClustersItemSharedConfigArgs) ToGetClustersItemSharedConfigOutput() GetClustersItemSharedConfigOutput {
	return i.ToGetClustersItemSharedConfigOutputWithContext(context.Background())
}

func (i GetClustersItemSharedConfigArgs) ToGetClustersItemSharedConfigOutputWithContext(ctx context.Context) GetClustersItemSharedConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersItemSharedConfigOutput)
}

// GetClustersItemSharedConfigArrayInput is an input type that accepts GetClustersItemSharedConfigArray and GetClustersItemSharedConfigArrayOutput values.
// You can construct a concrete instance of `GetClustersItemSharedConfigArrayInput` via:
//
//	GetClustersItemSharedConfigArray{ GetClustersItemSharedConfigArgs{...} }
type GetClustersItemSharedConfigArrayInput interface {
	pulumi.Input

	ToGetClustersItemSharedConfigArrayOutput() GetClustersItemSharedConfigArrayOutput
	ToGetClustersItemSharedConfigArrayOutputWithContext(context.Context) GetClustersItemSharedConfigArrayOutput
}

type GetClustersItemSharedConfigArray []GetClustersItemSharedConfigInput

func (GetClustersItemSharedConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersItemSharedConfig)(nil)).Elem()
}

func (i GetClustersItemSharedConfigArray) ToGetClustersItemSharedConfigArrayOutput() GetClustersItemSharedConfigArrayOutput {
	return i.ToGetClustersItemSharedConfigArrayOutputWithContext(context.Background())
}

func (i GetClustersItemSharedConfigArray) ToGetClustersItemSharedConfigArrayOutputWithContext(ctx context.Context) GetClustersItemSharedConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersItemSharedConfigArrayOutput)
}

type GetClustersItemSharedConfigOutput struct{ *pulumi.OutputState }

func (GetClustersItemSharedConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersItemSharedConfig)(nil)).Elem()
}

func (o GetClustersItemSharedConfigOutput) ToGetClustersItemSharedConfigOutput() GetClustersItemSharedConfigOutput {
	return o
}

func (o GetClustersItemSharedConfigOutput) ToGetClustersItemSharedConfigOutputWithContext(ctx context.Context) GetClustersItemSharedConfigOutput {
	return o
}

// Whether to enable a shared cluster. This value must be `true`.
func (o GetClustersItemSharedConfigOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersItemSharedConfig) bool { return v.Enable }).(pulumi.BoolOutput)
}

type GetClustersItemSharedConfigArrayOutput struct{ *pulumi.OutputState }

func (GetClustersItemSharedConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersItemSharedConfig)(nil)).Elem()
}

func (o GetClustersItemSharedConfigArrayOutput) ToGetClustersItemSharedConfigArrayOutput() GetClustersItemSharedConfigArrayOutput {
	return o
}

func (o GetClustersItemSharedConfigArrayOutput) ToGetClustersItemSharedConfigArrayOutputWithContext(ctx context.Context) GetClustersItemSharedConfigArrayOutput {
	return o
}

func (o GetClustersItemSharedConfigArrayOutput) Index(i pulumi.IntInput) GetClustersItemSharedConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersItemSharedConfig {
		return vs[0].([]GetClustersItemSharedConfig)[vs[1].(int)]
	}).(GetClustersItemSharedConfigOutput)
}

type GetWorkspacesItem struct {
	// The URL of the cover.
	CoverDownloadUrl string `pulumi:"coverDownloadUrl"`
	// The creation time of the workspace.
	CreateTime int `pulumi:"createTime"`
	// The description of the workspace.
	Description string `pulumi:"description"`
	// The id of the workspace.
	Id string `pulumi:"id"`
	// The name of the workspace.
	Name string `pulumi:"name"`
	// The name of the owner of the workspace.
	OwnerName string `pulumi:"ownerName"`
	// The role of the user.
	Role string `pulumi:"role"`
	// S3 bucket address.
	S3Bucket string `pulumi:"s3Bucket"`
	// The update time of the workspace.
	UpdateTime int `pulumi:"updateTime"`
}

// GetWorkspacesItemInput is an input type that accepts GetWorkspacesItemArgs and GetWorkspacesItemOutput values.
// You can construct a concrete instance of `GetWorkspacesItemInput` via:
//
//	GetWorkspacesItemArgs{...}
type GetWorkspacesItemInput interface {
	pulumi.Input

	ToGetWorkspacesItemOutput() GetWorkspacesItemOutput
	ToGetWorkspacesItemOutputWithContext(context.Context) GetWorkspacesItemOutput
}

type GetWorkspacesItemArgs struct {
	// The URL of the cover.
	CoverDownloadUrl pulumi.StringInput `pulumi:"coverDownloadUrl"`
	// The creation time of the workspace.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// The description of the workspace.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the workspace.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the workspace.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the owner of the workspace.
	OwnerName pulumi.StringInput `pulumi:"ownerName"`
	// The role of the user.
	Role pulumi.StringInput `pulumi:"role"`
	// S3 bucket address.
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	// The update time of the workspace.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
}

func (GetWorkspacesItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesItem)(nil)).Elem()
}

func (i GetWorkspacesItemArgs) ToGetWorkspacesItemOutput() GetWorkspacesItemOutput {
	return i.ToGetWorkspacesItemOutputWithContext(context.Background())
}

func (i GetWorkspacesItemArgs) ToGetWorkspacesItemOutputWithContext(ctx context.Context) GetWorkspacesItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspacesItemOutput)
}

// GetWorkspacesItemArrayInput is an input type that accepts GetWorkspacesItemArray and GetWorkspacesItemArrayOutput values.
// You can construct a concrete instance of `GetWorkspacesItemArrayInput` via:
//
//	GetWorkspacesItemArray{ GetWorkspacesItemArgs{...} }
type GetWorkspacesItemArrayInput interface {
	pulumi.Input

	ToGetWorkspacesItemArrayOutput() GetWorkspacesItemArrayOutput
	ToGetWorkspacesItemArrayOutputWithContext(context.Context) GetWorkspacesItemArrayOutput
}

type GetWorkspacesItemArray []GetWorkspacesItemInput

func (GetWorkspacesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspacesItem)(nil)).Elem()
}

func (i GetWorkspacesItemArray) ToGetWorkspacesItemArrayOutput() GetWorkspacesItemArrayOutput {
	return i.ToGetWorkspacesItemArrayOutputWithContext(context.Background())
}

func (i GetWorkspacesItemArray) ToGetWorkspacesItemArrayOutputWithContext(ctx context.Context) GetWorkspacesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkspacesItemArrayOutput)
}

type GetWorkspacesItemOutput struct{ *pulumi.OutputState }

func (GetWorkspacesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesItem)(nil)).Elem()
}

func (o GetWorkspacesItemOutput) ToGetWorkspacesItemOutput() GetWorkspacesItemOutput {
	return o
}

func (o GetWorkspacesItemOutput) ToGetWorkspacesItemOutputWithContext(ctx context.Context) GetWorkspacesItemOutput {
	return o
}

// The URL of the cover.
func (o GetWorkspacesItemOutput) CoverDownloadUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesItem) string { return v.CoverDownloadUrl }).(pulumi.StringOutput)
}

// The creation time of the workspace.
func (o GetWorkspacesItemOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetWorkspacesItem) int { return v.CreateTime }).(pulumi.IntOutput)
}

// The description of the workspace.
func (o GetWorkspacesItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesItem) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the workspace.
func (o GetWorkspacesItemOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesItem) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the workspace.
func (o GetWorkspacesItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesItem) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the owner of the workspace.
func (o GetWorkspacesItemOutput) OwnerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesItem) string { return v.OwnerName }).(pulumi.StringOutput)
}

// The role of the user.
func (o GetWorkspacesItemOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesItem) string { return v.Role }).(pulumi.StringOutput)
}

// S3 bucket address.
func (o GetWorkspacesItemOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesItem) string { return v.S3Bucket }).(pulumi.StringOutput)
}

// The update time of the workspace.
func (o GetWorkspacesItemOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetWorkspacesItem) int { return v.UpdateTime }).(pulumi.IntOutput)
}

type GetWorkspacesItemArrayOutput struct{ *pulumi.OutputState }

func (GetWorkspacesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkspacesItem)(nil)).Elem()
}

func (o GetWorkspacesItemArrayOutput) ToGetWorkspacesItemArrayOutput() GetWorkspacesItemArrayOutput {
	return o
}

func (o GetWorkspacesItemArrayOutput) ToGetWorkspacesItemArrayOutputWithContext(ctx context.Context) GetWorkspacesItemArrayOutput {
	return o
}

func (o GetWorkspacesItemArrayOutput) Index(i pulumi.IntInput) GetWorkspacesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkspacesItem {
		return vs[0].([]GetWorkspacesItem)[vs[1].(int)]
	}).(GetWorkspacesItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSharedConfigInput)(nil)).Elem(), ClusterSharedConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSharedConfigPtrInput)(nil)).Elem(), ClusterSharedConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVkeConfigInput)(nil)).Elem(), ClusterVkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVkeConfigPtrInput)(nil)).Elem(), ClusterVkeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersItemInput)(nil)).Elem(), ClustersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersItemArrayInput)(nil)).Elem(), ClustersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersItemSharedConfigInput)(nil)).Elem(), ClustersItemSharedConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClustersItemSharedConfigArrayInput)(nil)).Elem(), ClustersItemSharedConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesItemInput)(nil)).Elem(), WorkspacesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacesItemArrayInput)(nil)).Elem(), WorkspacesItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersItemInput)(nil)).Elem(), GetClustersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersItemArrayInput)(nil)).Elem(), GetClustersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersItemSharedConfigInput)(nil)).Elem(), GetClustersItemSharedConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersItemSharedConfigArrayInput)(nil)).Elem(), GetClustersItemSharedConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspacesItemInput)(nil)).Elem(), GetWorkspacesItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkspacesItemArrayInput)(nil)).Elem(), GetWorkspacesItemArray{})
	pulumi.RegisterOutputType(ClusterSharedConfigOutput{})
	pulumi.RegisterOutputType(ClusterSharedConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterVkeConfigOutput{})
	pulumi.RegisterOutputType(ClusterVkeConfigPtrOutput{})
	pulumi.RegisterOutputType(ClustersItemOutput{})
	pulumi.RegisterOutputType(ClustersItemArrayOutput{})
	pulumi.RegisterOutputType(ClustersItemSharedConfigOutput{})
	pulumi.RegisterOutputType(ClustersItemSharedConfigArrayOutput{})
	pulumi.RegisterOutputType(WorkspacesItemOutput{})
	pulumi.RegisterOutputType(WorkspacesItemArrayOutput{})
	pulumi.RegisterOutputType(GetClustersItemOutput{})
	pulumi.RegisterOutputType(GetClustersItemArrayOutput{})
	pulumi.RegisterOutputType(GetClustersItemSharedConfigOutput{})
	pulumi.RegisterOutputType(GetClustersItemSharedConfigArrayOutput{})
	pulumi.RegisterOutputType(GetWorkspacesItemOutput{})
	pulumi.RegisterOutputType(GetWorkspacesItemArrayOutput{})
}
