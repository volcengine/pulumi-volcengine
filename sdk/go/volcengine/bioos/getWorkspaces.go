// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bioos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of bioos workspaces
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/bioos"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bioos.GetWorkspaces(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetWorkspaces(ctx *pulumi.Context, args *GetWorkspacesArgs, opts ...pulumi.InvokeOption) (*GetWorkspacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetWorkspacesResult
	err := ctx.Invoke("volcengine:bioos/getWorkspaces:getWorkspaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaces.
type GetWorkspacesArgs struct {
	// A list of workspace ids.
	Ids []string `pulumi:"ids"`
	// Keyword to filter by workspace name or description.
	Keyword *string `pulumi:"keyword"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Sort Field (Name CreateTime).
	SortBy *string `pulumi:"sortBy"`
	// The sort order.
	SortOrder *string `pulumi:"sortOrder"`
}

// A collection of values returned by getWorkspaces.
type GetWorkspacesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// A list of workspaces.
	Items      []GetWorkspacesItem `pulumi:"items"`
	Keyword    *string             `pulumi:"keyword"`
	OutputFile *string             `pulumi:"outputFile"`
	SortBy     *string             `pulumi:"sortBy"`
	SortOrder  *string             `pulumi:"sortOrder"`
	// The total count of Workspace query.
	TotalCount int `pulumi:"totalCount"`
}

func GetWorkspacesOutput(ctx *pulumi.Context, args GetWorkspacesOutputArgs, opts ...pulumi.InvokeOption) GetWorkspacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetWorkspacesResult, error) {
			args := v.(GetWorkspacesArgs)
			r, err := GetWorkspaces(ctx, &args, opts...)
			var s GetWorkspacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetWorkspacesResultOutput)
}

// A collection of arguments for invoking getWorkspaces.
type GetWorkspacesOutputArgs struct {
	// A list of workspace ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// Keyword to filter by workspace name or description.
	Keyword pulumi.StringPtrInput `pulumi:"keyword"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Sort Field (Name CreateTime).
	SortBy pulumi.StringPtrInput `pulumi:"sortBy"`
	// The sort order.
	SortOrder pulumi.StringPtrInput `pulumi:"sortOrder"`
}

func (GetWorkspacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaces.
type GetWorkspacesResultOutput struct{ *pulumi.OutputState }

func (GetWorkspacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkspacesResult)(nil)).Elem()
}

func (o GetWorkspacesResultOutput) ToGetWorkspacesResultOutput() GetWorkspacesResultOutput {
	return o
}

func (o GetWorkspacesResultOutput) ToGetWorkspacesResultOutputWithContext(ctx context.Context) GetWorkspacesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetWorkspacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkspacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetWorkspacesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkspacesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// A list of workspaces.
func (o GetWorkspacesResultOutput) Items() GetWorkspacesItemArrayOutput {
	return o.ApplyT(func(v GetWorkspacesResult) []GetWorkspacesItem { return v.Items }).(GetWorkspacesItemArrayOutput)
}

func (o GetWorkspacesResultOutput) Keyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWorkspacesResult) *string { return v.Keyword }).(pulumi.StringPtrOutput)
}

func (o GetWorkspacesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWorkspacesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetWorkspacesResultOutput) SortBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWorkspacesResult) *string { return v.SortBy }).(pulumi.StringPtrOutput)
}

func (o GetWorkspacesResultOutput) SortOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWorkspacesResult) *string { return v.SortOrder }).(pulumi.StringPtrOutput)
}

// The total count of Workspace query.
func (o GetWorkspacesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetWorkspacesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWorkspacesResultOutput{})
}
