// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bioos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of bioos clusters
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/bioos"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bioos.Clusters(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func Clusters(ctx *pulumi.Context, args *ClustersArgs, opts ...pulumi.InvokeOption) (*ClustersResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv ClustersResult
	err := ctx.Invoke("volcengine:bioos/clusters:Clusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Clusters.
type ClustersArgs struct {
	// A list of cluster ids.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// whether it is a public cluster.
	Public *bool `pulumi:"public"`
	// The status of the clusters.
	Statuses []string `pulumi:"statuses"`
	// The type of the clusters.
	Types []string `pulumi:"types"`
}

// A collection of values returned by Clusters.
type ClustersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The list of clusters.
	Items      []ClustersItem `pulumi:"items"`
	OutputFile *string        `pulumi:"outputFile"`
	// whether it is a public cluster.
	Public   *bool    `pulumi:"public"`
	Statuses []string `pulumi:"statuses"`
	// The total count of Cluster query.
	TotalCount int      `pulumi:"totalCount"`
	Types      []string `pulumi:"types"`
}

func ClustersOutput(ctx *pulumi.Context, args ClustersOutputArgs, opts ...pulumi.InvokeOption) ClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ClustersResult, error) {
			args := v.(ClustersArgs)
			r, err := Clusters(ctx, &args, opts...)
			var s ClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ClustersResultOutput)
}

// A collection of arguments for invoking Clusters.
type ClustersOutputArgs struct {
	// A list of cluster ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// whether it is a public cluster.
	Public pulumi.BoolPtrInput `pulumi:"public"`
	// The status of the clusters.
	Statuses pulumi.StringArrayInput `pulumi:"statuses"`
	// The type of the clusters.
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (ClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersArgs)(nil)).Elem()
}

// A collection of values returned by Clusters.
type ClustersResultOutput struct{ *pulumi.OutputState }

func (ClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClustersResult)(nil)).Elem()
}

func (o ClustersResultOutput) ToClustersResultOutput() ClustersResultOutput {
	return o
}

func (o ClustersResultOutput) ToClustersResultOutputWithContext(ctx context.Context) ClustersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o ClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ClustersResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClustersResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The list of clusters.
func (o ClustersResultOutput) Items() ClustersItemArrayOutput {
	return o.ApplyT(func(v ClustersResult) []ClustersItem { return v.Items }).(ClustersItemArrayOutput)
}

func (o ClustersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClustersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// whether it is a public cluster.
func (o ClustersResultOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClustersResult) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

func (o ClustersResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClustersResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

// The total count of Cluster query.
func (o ClustersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v ClustersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o ClustersResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClustersResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ClustersResultOutput{})
}
