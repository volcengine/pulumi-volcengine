// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage network acl associate
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := vpc.NewNetworkAcl(ctx, "foo", &vpc.NetworkAclArgs{
//				VpcId:          pulumi.String("vpc-ru0wv9alfoxsu3nuld85rpp"),
//				NetworkAclName: pulumi.String("tf-test-acl"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = vpc.NewNetworkAclAssociate(ctx, "foo1", &vpc.NetworkAclAssociateArgs{
//				NetworkAclId: foo.ID(),
//				ResourceId:   pulumi.String("subnet-637jxq81u5mon3gd6ivc7rj"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// NetworkAcl associate can be imported using the network_acl_id:resource_id, e.g.
//
// ```sh
//
//	$ pulumi import volcengine:vpc/networkAclAssociate:NetworkAclAssociate default nacl-172leak37mi9s4d1w33pswqkh:subnet-637jxq81u5mon3gd6ivc7rj
//
// ```
type NetworkAclAssociate struct {
	pulumi.CustomResourceState

	// The id of Network Acl.
	NetworkAclId pulumi.StringOutput `pulumi:"networkAclId"`
	// The resource id of Network Acl.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
}

// NewNetworkAclAssociate registers a new resource with the given unique name, arguments, and options.
func NewNetworkAclAssociate(ctx *pulumi.Context,
	name string, args *NetworkAclAssociateArgs, opts ...pulumi.ResourceOption) (*NetworkAclAssociate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkAclId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkAclId'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource NetworkAclAssociate
	err := ctx.RegisterResource("volcengine:vpc/networkAclAssociate:NetworkAclAssociate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAclAssociate gets an existing NetworkAclAssociate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAclAssociate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAclAssociateState, opts ...pulumi.ResourceOption) (*NetworkAclAssociate, error) {
	var resource NetworkAclAssociate
	err := ctx.ReadResource("volcengine:vpc/networkAclAssociate:NetworkAclAssociate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAclAssociate resources.
type networkAclAssociateState struct {
	// The id of Network Acl.
	NetworkAclId *string `pulumi:"networkAclId"`
	// The resource id of Network Acl.
	ResourceId *string `pulumi:"resourceId"`
}

type NetworkAclAssociateState struct {
	// The id of Network Acl.
	NetworkAclId pulumi.StringPtrInput
	// The resource id of Network Acl.
	ResourceId pulumi.StringPtrInput
}

func (NetworkAclAssociateState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclAssociateState)(nil)).Elem()
}

type networkAclAssociateArgs struct {
	// The id of Network Acl.
	NetworkAclId string `pulumi:"networkAclId"`
	// The resource id of Network Acl.
	ResourceId string `pulumi:"resourceId"`
}

// The set of arguments for constructing a NetworkAclAssociate resource.
type NetworkAclAssociateArgs struct {
	// The id of Network Acl.
	NetworkAclId pulumi.StringInput
	// The resource id of Network Acl.
	ResourceId pulumi.StringInput
}

func (NetworkAclAssociateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclAssociateArgs)(nil)).Elem()
}

type NetworkAclAssociateInput interface {
	pulumi.Input

	ToNetworkAclAssociateOutput() NetworkAclAssociateOutput
	ToNetworkAclAssociateOutputWithContext(ctx context.Context) NetworkAclAssociateOutput
}

func (*NetworkAclAssociate) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAclAssociate)(nil)).Elem()
}

func (i *NetworkAclAssociate) ToNetworkAclAssociateOutput() NetworkAclAssociateOutput {
	return i.ToNetworkAclAssociateOutputWithContext(context.Background())
}

func (i *NetworkAclAssociate) ToNetworkAclAssociateOutputWithContext(ctx context.Context) NetworkAclAssociateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclAssociateOutput)
}

// NetworkAclAssociateArrayInput is an input type that accepts NetworkAclAssociateArray and NetworkAclAssociateArrayOutput values.
// You can construct a concrete instance of `NetworkAclAssociateArrayInput` via:
//
//	NetworkAclAssociateArray{ NetworkAclAssociateArgs{...} }
type NetworkAclAssociateArrayInput interface {
	pulumi.Input

	ToNetworkAclAssociateArrayOutput() NetworkAclAssociateArrayOutput
	ToNetworkAclAssociateArrayOutputWithContext(context.Context) NetworkAclAssociateArrayOutput
}

type NetworkAclAssociateArray []NetworkAclAssociateInput

func (NetworkAclAssociateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAclAssociate)(nil)).Elem()
}

func (i NetworkAclAssociateArray) ToNetworkAclAssociateArrayOutput() NetworkAclAssociateArrayOutput {
	return i.ToNetworkAclAssociateArrayOutputWithContext(context.Background())
}

func (i NetworkAclAssociateArray) ToNetworkAclAssociateArrayOutputWithContext(ctx context.Context) NetworkAclAssociateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclAssociateArrayOutput)
}

// NetworkAclAssociateMapInput is an input type that accepts NetworkAclAssociateMap and NetworkAclAssociateMapOutput values.
// You can construct a concrete instance of `NetworkAclAssociateMapInput` via:
//
//	NetworkAclAssociateMap{ "key": NetworkAclAssociateArgs{...} }
type NetworkAclAssociateMapInput interface {
	pulumi.Input

	ToNetworkAclAssociateMapOutput() NetworkAclAssociateMapOutput
	ToNetworkAclAssociateMapOutputWithContext(context.Context) NetworkAclAssociateMapOutput
}

type NetworkAclAssociateMap map[string]NetworkAclAssociateInput

func (NetworkAclAssociateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAclAssociate)(nil)).Elem()
}

func (i NetworkAclAssociateMap) ToNetworkAclAssociateMapOutput() NetworkAclAssociateMapOutput {
	return i.ToNetworkAclAssociateMapOutputWithContext(context.Background())
}

func (i NetworkAclAssociateMap) ToNetworkAclAssociateMapOutputWithContext(ctx context.Context) NetworkAclAssociateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclAssociateMapOutput)
}

type NetworkAclAssociateOutput struct{ *pulumi.OutputState }

func (NetworkAclAssociateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAclAssociate)(nil)).Elem()
}

func (o NetworkAclAssociateOutput) ToNetworkAclAssociateOutput() NetworkAclAssociateOutput {
	return o
}

func (o NetworkAclAssociateOutput) ToNetworkAclAssociateOutputWithContext(ctx context.Context) NetworkAclAssociateOutput {
	return o
}

// The id of Network Acl.
func (o NetworkAclAssociateOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAclAssociate) pulumi.StringOutput { return v.NetworkAclId }).(pulumi.StringOutput)
}

// The resource id of Network Acl.
func (o NetworkAclAssociateOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAclAssociate) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

type NetworkAclAssociateArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclAssociateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAclAssociate)(nil)).Elem()
}

func (o NetworkAclAssociateArrayOutput) ToNetworkAclAssociateArrayOutput() NetworkAclAssociateArrayOutput {
	return o
}

func (o NetworkAclAssociateArrayOutput) ToNetworkAclAssociateArrayOutputWithContext(ctx context.Context) NetworkAclAssociateArrayOutput {
	return o
}

func (o NetworkAclAssociateArrayOutput) Index(i pulumi.IntInput) NetworkAclAssociateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkAclAssociate {
		return vs[0].([]*NetworkAclAssociate)[vs[1].(int)]
	}).(NetworkAclAssociateOutput)
}

type NetworkAclAssociateMapOutput struct{ *pulumi.OutputState }

func (NetworkAclAssociateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAclAssociate)(nil)).Elem()
}

func (o NetworkAclAssociateMapOutput) ToNetworkAclAssociateMapOutput() NetworkAclAssociateMapOutput {
	return o
}

func (o NetworkAclAssociateMapOutput) ToNetworkAclAssociateMapOutputWithContext(ctx context.Context) NetworkAclAssociateMapOutput {
	return o
}

func (o NetworkAclAssociateMapOutput) MapIndex(k pulumi.StringInput) NetworkAclAssociateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkAclAssociate {
		return vs[0].(map[string]*NetworkAclAssociate)[vs[1].(string)]
	}).(NetworkAclAssociateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclAssociateInput)(nil)).Elem(), &NetworkAclAssociate{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclAssociateArrayInput)(nil)).Elem(), NetworkAclAssociateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclAssociateMapInput)(nil)).Elem(), NetworkAclAssociateMap{})
	pulumi.RegisterOutputType(NetworkAclAssociateOutput{})
	pulumi.RegisterOutputType(NetworkAclAssociateArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclAssociateMapOutput{})
}
