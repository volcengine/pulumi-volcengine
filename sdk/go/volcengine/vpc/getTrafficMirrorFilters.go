// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of traffic mirror filters
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetTrafficMirrorFilters(ctx, &vpc.GetTrafficMirrorFiltersArgs{
//				TrafficMirrorFilterIds: []string{
//					"tmf-mivro9v5x24g5smt1bsq****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTrafficMirrorFilters(ctx *pulumi.Context, args *GetTrafficMirrorFiltersArgs, opts ...pulumi.InvokeOption) (*GetTrafficMirrorFiltersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTrafficMirrorFiltersResult
	err := ctx.Invoke("volcengine:vpc/getTrafficMirrorFilters:getTrafficMirrorFilters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficMirrorFilters.
type GetTrafficMirrorFiltersArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror filter.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTrafficMirrorFiltersTag `pulumi:"tags"`
	// A list of traffic mirror filter IDs.
	TrafficMirrorFilterIds []string `pulumi:"trafficMirrorFilterIds"`
	// A list of traffic mirror filter names.
	TrafficMirrorFilterNames []string `pulumi:"trafficMirrorFilterNames"`
}

// A collection of values returned by getTrafficMirrorFilters.
type GetTrafficMirrorFiltersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror filter.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTrafficMirrorFiltersTag `pulumi:"tags"`
	// The total count of query.
	TotalCount               int      `pulumi:"totalCount"`
	TrafficMirrorFilterIds   []string `pulumi:"trafficMirrorFilterIds"`
	TrafficMirrorFilterNames []string `pulumi:"trafficMirrorFilterNames"`
	// The collection of query.
	TrafficMirrorFilters []GetTrafficMirrorFiltersTrafficMirrorFilter `pulumi:"trafficMirrorFilters"`
}

func GetTrafficMirrorFiltersOutput(ctx *pulumi.Context, args GetTrafficMirrorFiltersOutputArgs, opts ...pulumi.InvokeOption) GetTrafficMirrorFiltersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTrafficMirrorFiltersResult, error) {
			args := v.(GetTrafficMirrorFiltersArgs)
			r, err := GetTrafficMirrorFilters(ctx, &args, opts...)
			var s GetTrafficMirrorFiltersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTrafficMirrorFiltersResultOutput)
}

// A collection of arguments for invoking getTrafficMirrorFilters.
type GetTrafficMirrorFiltersOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of traffic mirror filter.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags GetTrafficMirrorFiltersTagArrayInput `pulumi:"tags"`
	// A list of traffic mirror filter IDs.
	TrafficMirrorFilterIds pulumi.StringArrayInput `pulumi:"trafficMirrorFilterIds"`
	// A list of traffic mirror filter names.
	TrafficMirrorFilterNames pulumi.StringArrayInput `pulumi:"trafficMirrorFilterNames"`
}

func (GetTrafficMirrorFiltersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersArgs)(nil)).Elem()
}

// A collection of values returned by getTrafficMirrorFilters.
type GetTrafficMirrorFiltersResultOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersResult)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersResultOutput) ToGetTrafficMirrorFiltersResultOutput() GetTrafficMirrorFiltersResultOutput {
	return o
}

func (o GetTrafficMirrorFiltersResultOutput) ToGetTrafficMirrorFiltersResultOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTrafficMirrorFiltersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrafficMirrorFiltersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorFiltersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of traffic mirror filter.
func (o GetTrafficMirrorFiltersResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetTrafficMirrorFiltersResultOutput) Tags() GetTrafficMirrorFiltersTagArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) []GetTrafficMirrorFiltersTag { return v.Tags }).(GetTrafficMirrorFiltersTagArrayOutput)
}

// The total count of query.
func (o GetTrafficMirrorFiltersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o GetTrafficMirrorFiltersResultOutput) TrafficMirrorFilterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) []string { return v.TrafficMirrorFilterIds }).(pulumi.StringArrayOutput)
}

func (o GetTrafficMirrorFiltersResultOutput) TrafficMirrorFilterNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) []string { return v.TrafficMirrorFilterNames }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o GetTrafficMirrorFiltersResultOutput) TrafficMirrorFilters() GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersResult) []GetTrafficMirrorFiltersTrafficMirrorFilter {
		return v.TrafficMirrorFilters
	}).(GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersResultOutput{})
}
