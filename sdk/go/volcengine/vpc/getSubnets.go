// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of subnets
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetSubnets(ctx, &vpc.GetSubnetsArgs{
//				Ids: []string{
//					"subnet-274zsa5kfmj287fap8soo5e19",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubnets(ctx *pulumi.Context, args *GetSubnetsArgs, opts ...pulumi.InvokeOption) (*GetSubnetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubnetsResult
	err := ctx.Invoke("volcengine:vpc/getSubnets:getSubnets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubnets.
type GetSubnetsArgs struct {
	// A list of Subnet IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of Subnet.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The ID of route table which subnet associated with.
	RouteTableId *string `pulumi:"routeTableId"`
	// The subnet name to query.
	SubnetName *string `pulumi:"subnetName"`
	// The owner ID of the subnet.
	SubnetOwnerId *int `pulumi:"subnetOwnerId"`
	// Tags.
	Tags []GetSubnetsTag `pulumi:"tags"`
	// The ID of VPC which subnet belongs to.
	VpcId *string `pulumi:"vpcId"`
	// The ID of zone which subnet belongs to.
	ZoneId *string `pulumi:"zoneId"`
}

// A collection of values returned by getSubnets.
type GetSubnetsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// The route table ID.
	RouteTableId *string `pulumi:"routeTableId"`
	// The Name of Subnet.
	SubnetName    *string `pulumi:"subnetName"`
	SubnetOwnerId *int    `pulumi:"subnetOwnerId"`
	// The collection of Subnet query.
	Subnets []GetSubnetsSubnet `pulumi:"subnets"`
	// Tags.
	Tags []GetSubnetsTag `pulumi:"tags"`
	// The total count of Subnet query.
	TotalCount int `pulumi:"totalCount"`
	// The Vpc ID of Subnet.
	VpcId *string `pulumi:"vpcId"`
	// The ID of Zone.
	ZoneId *string `pulumi:"zoneId"`
}

func GetSubnetsOutput(ctx *pulumi.Context, args GetSubnetsOutputArgs, opts ...pulumi.InvokeOption) GetSubnetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubnetsResult, error) {
			args := v.(GetSubnetsArgs)
			r, err := GetSubnets(ctx, &args, opts...)
			var s GetSubnetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubnetsResultOutput)
}

// A collection of arguments for invoking getSubnets.
type GetSubnetsOutputArgs struct {
	// A list of Subnet IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of Subnet.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The ID of route table which subnet associated with.
	RouteTableId pulumi.StringPtrInput `pulumi:"routeTableId"`
	// The subnet name to query.
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
	// The owner ID of the subnet.
	SubnetOwnerId pulumi.IntPtrInput `pulumi:"subnetOwnerId"`
	// Tags.
	Tags GetSubnetsTagArrayInput `pulumi:"tags"`
	// The ID of VPC which subnet belongs to.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
	// The ID of zone which subnet belongs to.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (GetSubnetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsArgs)(nil)).Elem()
}

// A collection of values returned by getSubnets.
type GetSubnetsResultOutput struct{ *pulumi.OutputState }

func (GetSubnetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsResult)(nil)).Elem()
}

func (o GetSubnetsResultOutput) ToGetSubnetsResultOutput() GetSubnetsResultOutput {
	return o
}

func (o GetSubnetsResultOutput) ToGetSubnetsResultOutputWithContext(ctx context.Context) GetSubnetsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSubnetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubnetsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetSubnetsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The route table ID.
func (o GetSubnetsResultOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.RouteTableId }).(pulumi.StringPtrOutput)
}

// The Name of Subnet.
func (o GetSubnetsResultOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

func (o GetSubnetsResultOutput) SubnetOwnerId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *int { return v.SubnetOwnerId }).(pulumi.IntPtrOutput)
}

// The collection of Subnet query.
func (o GetSubnetsResultOutput) Subnets() GetSubnetsSubnetArrayOutput {
	return o.ApplyT(func(v GetSubnetsResult) []GetSubnetsSubnet { return v.Subnets }).(GetSubnetsSubnetArrayOutput)
}

// Tags.
func (o GetSubnetsResultOutput) Tags() GetSubnetsTagArrayOutput {
	return o.ApplyT(func(v GetSubnetsResult) []GetSubnetsTag { return v.Tags }).(GetSubnetsTagArrayOutput)
}

// The total count of Subnet query.
func (o GetSubnetsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubnetsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The Vpc ID of Subnet.
func (o GetSubnetsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// The ID of Zone.
func (o GetSubnetsResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubnetsResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubnetsResultOutput{})
}
