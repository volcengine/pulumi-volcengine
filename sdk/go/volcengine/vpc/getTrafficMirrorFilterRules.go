// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of traffic mirror filter rules
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetTrafficMirrorFilterRules(ctx, &vpc.GetTrafficMirrorFilterRulesArgs{
//				TrafficMirrorFilterIds: []string{
//					"tmf-mivro9v5x24g5smt1bsq****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTrafficMirrorFilterRules(ctx *pulumi.Context, args *GetTrafficMirrorFilterRulesArgs, opts ...pulumi.InvokeOption) (*GetTrafficMirrorFilterRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTrafficMirrorFilterRulesResult
	err := ctx.Invoke("volcengine:vpc/getTrafficMirrorFilterRules:getTrafficMirrorFilterRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficMirrorFilterRules.
type GetTrafficMirrorFilterRulesArgs struct {
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror filter.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTrafficMirrorFilterRulesTag `pulumi:"tags"`
	// A list of traffic mirror filter IDs.
	TrafficMirrorFilterIds []string `pulumi:"trafficMirrorFilterIds"`
	// A list of traffic mirror filter names.
	TrafficMirrorFilterNames []string `pulumi:"trafficMirrorFilterNames"`
}

// A collection of values returned by getTrafficMirrorFilterRules.
type GetTrafficMirrorFilterRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string                           `pulumi:"id"`
	OutputFile  *string                          `pulumi:"outputFile"`
	ProjectName *string                          `pulumi:"projectName"`
	Tags        []GetTrafficMirrorFilterRulesTag `pulumi:"tags"`
	// The total count of query.
	TotalCount               int      `pulumi:"totalCount"`
	TrafficMirrorFilterIds   []string `pulumi:"trafficMirrorFilterIds"`
	TrafficMirrorFilterNames []string `pulumi:"trafficMirrorFilterNames"`
	// The collection of query.
	TrafficMirrorFilterRules []GetTrafficMirrorFilterRulesTrafficMirrorFilterRule `pulumi:"trafficMirrorFilterRules"`
}

func GetTrafficMirrorFilterRulesOutput(ctx *pulumi.Context, args GetTrafficMirrorFilterRulesOutputArgs, opts ...pulumi.InvokeOption) GetTrafficMirrorFilterRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTrafficMirrorFilterRulesResult, error) {
			args := v.(GetTrafficMirrorFilterRulesArgs)
			r, err := GetTrafficMirrorFilterRules(ctx, &args, opts...)
			var s GetTrafficMirrorFilterRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTrafficMirrorFilterRulesResultOutput)
}

// A collection of arguments for invoking getTrafficMirrorFilterRules.
type GetTrafficMirrorFilterRulesOutputArgs struct {
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of traffic mirror filter.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags GetTrafficMirrorFilterRulesTagArrayInput `pulumi:"tags"`
	// A list of traffic mirror filter IDs.
	TrafficMirrorFilterIds pulumi.StringArrayInput `pulumi:"trafficMirrorFilterIds"`
	// A list of traffic mirror filter names.
	TrafficMirrorFilterNames pulumi.StringArrayInput `pulumi:"trafficMirrorFilterNames"`
}

func (GetTrafficMirrorFilterRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterRulesArgs)(nil)).Elem()
}

// A collection of values returned by getTrafficMirrorFilterRules.
type GetTrafficMirrorFilterRulesResultOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterRulesResult)(nil)).Elem()
}

func (o GetTrafficMirrorFilterRulesResultOutput) ToGetTrafficMirrorFilterRulesResultOutput() GetTrafficMirrorFilterRulesResultOutput {
	return o
}

func (o GetTrafficMirrorFilterRulesResultOutput) ToGetTrafficMirrorFilterRulesResultOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTrafficMirrorFilterRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrafficMirrorFilterRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorFilterRulesResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorFilterRulesResultOutput) Tags() GetTrafficMirrorFilterRulesTagArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesResult) []GetTrafficMirrorFilterRulesTag { return v.Tags }).(GetTrafficMirrorFilterRulesTagArrayOutput)
}

// The total count of query.
func (o GetTrafficMirrorFilterRulesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o GetTrafficMirrorFilterRulesResultOutput) TrafficMirrorFilterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesResult) []string { return v.TrafficMirrorFilterIds }).(pulumi.StringArrayOutput)
}

func (o GetTrafficMirrorFilterRulesResultOutput) TrafficMirrorFilterNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesResult) []string { return v.TrafficMirrorFilterNames }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o GetTrafficMirrorFilterRulesResultOutput) TrafficMirrorFilterRules() GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesResult) []GetTrafficMirrorFilterRulesTrafficMirrorFilterRule {
		return v.TrafficMirrorFilterRules
	}).(GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTrafficMirrorFilterRulesResultOutput{})
}
