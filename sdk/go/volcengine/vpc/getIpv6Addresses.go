// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of vpc ipv6 addresses
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetIpv6Addresses(ctx, &vpc.GetIpv6AddressesArgs{
//				AssociatedInstanceId: pulumi.StringRef("i-yca53yuhj6gh9zl53kav"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetIpv6Addresses(ctx *pulumi.Context, args *GetIpv6AddressesArgs, opts ...pulumi.InvokeOption) (*GetIpv6AddressesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpv6AddressesResult
	err := ctx.Invoke("volcengine:vpc/getIpv6Addresses:getIpv6Addresses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpv6Addresses.
type GetIpv6AddressesArgs struct {
	// The ID of the ECS instance that is assigned the IPv6 address.
	AssociatedInstanceId *string `pulumi:"associatedInstanceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getIpv6Addresses.
type GetIpv6AddressesResult struct {
	AssociatedInstanceId *string `pulumi:"associatedInstanceId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The collection of Ipv6Address query.
	Ipv6Addresses []GetIpv6AddressesIpv6Address `pulumi:"ipv6Addresses"`
	OutputFile    *string                       `pulumi:"outputFile"`
	// The total count of Ipv6Address query.
	TotalCount int `pulumi:"totalCount"`
}

func GetIpv6AddressesOutput(ctx *pulumi.Context, args GetIpv6AddressesOutputArgs, opts ...pulumi.InvokeOption) GetIpv6AddressesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIpv6AddressesResult, error) {
			args := v.(GetIpv6AddressesArgs)
			r, err := GetIpv6Addresses(ctx, &args, opts...)
			var s GetIpv6AddressesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIpv6AddressesResultOutput)
}

// A collection of arguments for invoking getIpv6Addresses.
type GetIpv6AddressesOutputArgs struct {
	// The ID of the ECS instance that is assigned the IPv6 address.
	AssociatedInstanceId pulumi.StringPtrInput `pulumi:"associatedInstanceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (GetIpv6AddressesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressesArgs)(nil)).Elem()
}

// A collection of values returned by getIpv6Addresses.
type GetIpv6AddressesResultOutput struct{ *pulumi.OutputState }

func (GetIpv6AddressesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressesResult)(nil)).Elem()
}

func (o GetIpv6AddressesResultOutput) ToGetIpv6AddressesResultOutput() GetIpv6AddressesResultOutput {
	return o
}

func (o GetIpv6AddressesResultOutput) ToGetIpv6AddressesResultOutputWithContext(ctx context.Context) GetIpv6AddressesResultOutput {
	return o
}

func (o GetIpv6AddressesResultOutput) AssociatedInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) *string { return v.AssociatedInstanceId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpv6AddressesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The collection of Ipv6Address query.
func (o GetIpv6AddressesResultOutput) Ipv6Addresses() GetIpv6AddressesIpv6AddressArrayOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) []GetIpv6AddressesIpv6Address { return v.Ipv6Addresses }).(GetIpv6AddressesIpv6AddressArrayOutput)
}

func (o GetIpv6AddressesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The total count of Ipv6Address query.
func (o GetIpv6AddressesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpv6AddressesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpv6AddressesResultOutput{})
}
