// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of route entries
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.RouteEntries(ctx, &vpc.RouteEntriesArgs{
//				Ids:          []interface{}{},
//				RouteTableId: "vtb-274e19skkuhog7fap8u4i8ird",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func RouteEntries(ctx *pulumi.Context, args *RouteEntriesArgs, opts ...pulumi.InvokeOption) (*RouteEntriesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv RouteEntriesResult
	err := ctx.Invoke("volcengine:vpc/routeEntries:RouteEntries", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking RouteEntries.
type RouteEntriesArgs struct {
	// A destination CIDR block of route entry.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// A list of route entry ids.
	Ids []string `pulumi:"ids"`
	// An id of next hop.
	NextHopId *string `pulumi:"nextHopId"`
	// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
	NextHopType *string `pulumi:"nextHopType"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// A name of route entry.
	RouteEntryName *string `pulumi:"routeEntryName"`
	// A type of route entry.
	RouteEntryType *string `pulumi:"routeEntryType"`
	// An id of route table.
	RouteTableId string `pulumi:"routeTableId"`
}

// A collection of values returned by RouteEntries.
type RouteEntriesResult struct {
	// The destination CIDR block of the route entry.
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	// The provider-assigned unique ID for this managed resource.
	Id  string   `pulumi:"id"`
	Ids []string `pulumi:"ids"`
	// The id of the next hop.
	NextHopId *string `pulumi:"nextHopId"`
	// The type of the next hop.
	NextHopType *string `pulumi:"nextHopType"`
	OutputFile  *string `pulumi:"outputFile"`
	// The collection of route tables.
	RouteEntries []RouteEntriesRouteEntry `pulumi:"routeEntries"`
	// The name of the route entry.
	RouteEntryName *string `pulumi:"routeEntryName"`
	RouteEntryType *string `pulumi:"routeEntryType"`
	// The id of the route table to which the route entry belongs.
	RouteTableId string `pulumi:"routeTableId"`
	// The total count of route entry query.
	TotalCount int `pulumi:"totalCount"`
}

func RouteEntriesOutput(ctx *pulumi.Context, args RouteEntriesOutputArgs, opts ...pulumi.InvokeOption) RouteEntriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (RouteEntriesResult, error) {
			args := v.(RouteEntriesArgs)
			r, err := RouteEntries(ctx, &args, opts...)
			var s RouteEntriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(RouteEntriesResultOutput)
}

// A collection of arguments for invoking RouteEntries.
type RouteEntriesOutputArgs struct {
	// A destination CIDR block of route entry.
	DestinationCidrBlock pulumi.StringPtrInput `pulumi:"destinationCidrBlock"`
	// A list of route entry ids.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// An id of next hop.
	NextHopId pulumi.StringPtrInput `pulumi:"nextHopId"`
	// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
	NextHopType pulumi.StringPtrInput `pulumi:"nextHopType"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// A name of route entry.
	RouteEntryName pulumi.StringPtrInput `pulumi:"routeEntryName"`
	// A type of route entry.
	RouteEntryType pulumi.StringPtrInput `pulumi:"routeEntryType"`
	// An id of route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
}

func (RouteEntriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesArgs)(nil)).Elem()
}

// A collection of values returned by RouteEntries.
type RouteEntriesResultOutput struct{ *pulumi.OutputState }

func (RouteEntriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesResult)(nil)).Elem()
}

func (o RouteEntriesResultOutput) ToRouteEntriesResultOutput() RouteEntriesResultOutput {
	return o
}

func (o RouteEntriesResultOutput) ToRouteEntriesResultOutputWithContext(ctx context.Context) RouteEntriesResultOutput {
	return o
}

// The destination CIDR block of the route entry.
func (o RouteEntriesResultOutput) DestinationCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteEntriesResult) *string { return v.DestinationCidrBlock }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o RouteEntriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o RouteEntriesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteEntriesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

// The id of the next hop.
func (o RouteEntriesResultOutput) NextHopId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteEntriesResult) *string { return v.NextHopId }).(pulumi.StringPtrOutput)
}

// The type of the next hop.
func (o RouteEntriesResultOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteEntriesResult) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

func (o RouteEntriesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteEntriesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of route tables.
func (o RouteEntriesResultOutput) RouteEntries() RouteEntriesRouteEntryArrayOutput {
	return o.ApplyT(func(v RouteEntriesResult) []RouteEntriesRouteEntry { return v.RouteEntries }).(RouteEntriesRouteEntryArrayOutput)
}

// The name of the route entry.
func (o RouteEntriesResultOutput) RouteEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteEntriesResult) *string { return v.RouteEntryName }).(pulumi.StringPtrOutput)
}

func (o RouteEntriesResultOutput) RouteEntryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteEntriesResult) *string { return v.RouteEntryType }).(pulumi.StringPtrOutput)
}

// The id of the route table to which the route entry belongs.
func (o RouteEntriesResultOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesResult) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The total count of route entry query.
func (o RouteEntriesResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v RouteEntriesResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(RouteEntriesResultOutput{})
}
