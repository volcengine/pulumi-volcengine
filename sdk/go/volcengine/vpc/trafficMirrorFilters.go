// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of traffic mirror filters
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetTrafficMirrorFilters(ctx, &vpc.GetTrafficMirrorFiltersArgs{
//				TrafficMirrorFilterIds: []string{
//					"tmf-mivro9v5x24g5smt1bsq****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.vpc.TrafficMirrorFilters has been deprecated in favor of volcengine.vpc.getTrafficMirrorFilters
func TrafficMirrorFilters(ctx *pulumi.Context, args *TrafficMirrorFiltersArgs, opts ...pulumi.InvokeOption) (*TrafficMirrorFiltersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv TrafficMirrorFiltersResult
	err := ctx.Invoke("volcengine:vpc/trafficMirrorFilters:TrafficMirrorFilters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking TrafficMirrorFilters.
type TrafficMirrorFiltersArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror filter.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []TrafficMirrorFiltersTag `pulumi:"tags"`
	// A list of traffic mirror filter IDs.
	TrafficMirrorFilterIds []string `pulumi:"trafficMirrorFilterIds"`
	// A list of traffic mirror filter names.
	TrafficMirrorFilterNames []string `pulumi:"trafficMirrorFilterNames"`
}

// A collection of values returned by TrafficMirrorFilters.
type TrafficMirrorFiltersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror filter.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []TrafficMirrorFiltersTag `pulumi:"tags"`
	// The total count of query.
	TotalCount               int      `pulumi:"totalCount"`
	TrafficMirrorFilterIds   []string `pulumi:"trafficMirrorFilterIds"`
	TrafficMirrorFilterNames []string `pulumi:"trafficMirrorFilterNames"`
	// The collection of query.
	TrafficMirrorFilters []TrafficMirrorFiltersTrafficMirrorFilter `pulumi:"trafficMirrorFilters"`
}

func TrafficMirrorFiltersOutput(ctx *pulumi.Context, args TrafficMirrorFiltersOutputArgs, opts ...pulumi.InvokeOption) TrafficMirrorFiltersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (TrafficMirrorFiltersResult, error) {
			args := v.(TrafficMirrorFiltersArgs)
			r, err := TrafficMirrorFilters(ctx, &args, opts...)
			var s TrafficMirrorFiltersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(TrafficMirrorFiltersResultOutput)
}

// A collection of arguments for invoking TrafficMirrorFilters.
type TrafficMirrorFiltersOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of traffic mirror filter.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags TrafficMirrorFiltersTagArrayInput `pulumi:"tags"`
	// A list of traffic mirror filter IDs.
	TrafficMirrorFilterIds pulumi.StringArrayInput `pulumi:"trafficMirrorFilterIds"`
	// A list of traffic mirror filter names.
	TrafficMirrorFilterNames pulumi.StringArrayInput `pulumi:"trafficMirrorFilterNames"`
}

func (TrafficMirrorFiltersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersArgs)(nil)).Elem()
}

// A collection of values returned by TrafficMirrorFilters.
type TrafficMirrorFiltersResultOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersResult)(nil)).Elem()
}

func (o TrafficMirrorFiltersResultOutput) ToTrafficMirrorFiltersResultOutput() TrafficMirrorFiltersResultOutput {
	return o
}

func (o TrafficMirrorFiltersResultOutput) ToTrafficMirrorFiltersResultOutputWithContext(ctx context.Context) TrafficMirrorFiltersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o TrafficMirrorFiltersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o TrafficMirrorFiltersResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o TrafficMirrorFiltersResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of traffic mirror filter.
func (o TrafficMirrorFiltersResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o TrafficMirrorFiltersResultOutput) Tags() TrafficMirrorFiltersTagArrayOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) []TrafficMirrorFiltersTag { return v.Tags }).(TrafficMirrorFiltersTagArrayOutput)
}

// The total count of query.
func (o TrafficMirrorFiltersResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o TrafficMirrorFiltersResultOutput) TrafficMirrorFilterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) []string { return v.TrafficMirrorFilterIds }).(pulumi.StringArrayOutput)
}

func (o TrafficMirrorFiltersResultOutput) TrafficMirrorFilterNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) []string { return v.TrafficMirrorFilterNames }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o TrafficMirrorFiltersResultOutput) TrafficMirrorFilters() TrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersResult) []TrafficMirrorFiltersTrafficMirrorFilter {
		return v.TrafficMirrorFilters
	}).(TrafficMirrorFiltersTrafficMirrorFilterArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(TrafficMirrorFiltersResultOutput{})
}
