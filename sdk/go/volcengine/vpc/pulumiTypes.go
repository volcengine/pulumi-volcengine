// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type FlowLogTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// FlowLogTagInput is an input type that accepts FlowLogTagArgs and FlowLogTagOutput values.
// You can construct a concrete instance of `FlowLogTagInput` via:
//
//	FlowLogTagArgs{...}
type FlowLogTagInput interface {
	pulumi.Input

	ToFlowLogTagOutput() FlowLogTagOutput
	ToFlowLogTagOutputWithContext(context.Context) FlowLogTagOutput
}

type FlowLogTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FlowLogTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogTag)(nil)).Elem()
}

func (i FlowLogTagArgs) ToFlowLogTagOutput() FlowLogTagOutput {
	return i.ToFlowLogTagOutputWithContext(context.Background())
}

func (i FlowLogTagArgs) ToFlowLogTagOutputWithContext(ctx context.Context) FlowLogTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogTagOutput)
}

// FlowLogTagArrayInput is an input type that accepts FlowLogTagArray and FlowLogTagArrayOutput values.
// You can construct a concrete instance of `FlowLogTagArrayInput` via:
//
//	FlowLogTagArray{ FlowLogTagArgs{...} }
type FlowLogTagArrayInput interface {
	pulumi.Input

	ToFlowLogTagArrayOutput() FlowLogTagArrayOutput
	ToFlowLogTagArrayOutputWithContext(context.Context) FlowLogTagArrayOutput
}

type FlowLogTagArray []FlowLogTagInput

func (FlowLogTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogTag)(nil)).Elem()
}

func (i FlowLogTagArray) ToFlowLogTagArrayOutput() FlowLogTagArrayOutput {
	return i.ToFlowLogTagArrayOutputWithContext(context.Background())
}

func (i FlowLogTagArray) ToFlowLogTagArrayOutputWithContext(ctx context.Context) FlowLogTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogTagArrayOutput)
}

type FlowLogTagOutput struct{ *pulumi.OutputState }

func (FlowLogTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogTag)(nil)).Elem()
}

func (o FlowLogTagOutput) ToFlowLogTagOutput() FlowLogTagOutput {
	return o
}

func (o FlowLogTagOutput) ToFlowLogTagOutputWithContext(ctx context.Context) FlowLogTagOutput {
	return o
}

// The Key of Tags.
func (o FlowLogTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o FlowLogTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogTag) string { return v.Value }).(pulumi.StringOutput)
}

type FlowLogTagArrayOutput struct{ *pulumi.OutputState }

func (FlowLogTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogTag)(nil)).Elem()
}

func (o FlowLogTagArrayOutput) ToFlowLogTagArrayOutput() FlowLogTagArrayOutput {
	return o
}

func (o FlowLogTagArrayOutput) ToFlowLogTagArrayOutputWithContext(ctx context.Context) FlowLogTagArrayOutput {
	return o
}

func (o FlowLogTagArrayOutput) Index(i pulumi.IntInput) FlowLogTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogTag {
		return vs[0].([]FlowLogTag)[vs[1].(int)]
	}).(FlowLogTagOutput)
}

type FlowLogsFlowLog struct {
	// The aggregation interval of flow log. Unit: minute. Valid values: `1`, `5`, `10`.
	AggregationInterval int `pulumi:"aggregationInterval"`
	// The business status of flow log.
	BusinessStatus string `pulumi:"businessStatus"`
	// The created time of flow log.
	CreatedAt string `pulumi:"createdAt"`
	// The description of flow log.
	Description string `pulumi:"description"`
	// The ID of flow log.
	FlowLogId string `pulumi:"flowLogId"`
	// The name of flow log.
	FlowLogName string `pulumi:"flowLogName"`
	// The ID of flow log.
	Id string `pulumi:"id"`
	// The reason why flow log is locked.
	LockReason string `pulumi:"lockReason"`
	// The ID of log project.
	LogProjectId string `pulumi:"logProjectId"`
	// The ID of log topic.
	LogTopicId string `pulumi:"logTopicId"`
	// The project name of flow log.
	ProjectName string `pulumi:"projectName"`
	// The ID of resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of resource. Valid values: `vpc`, `subnet`, `eni`.
	ResourceType string `pulumi:"resourceType"`
	// The status of flow log. Valid values: `Active`, `Pending`, `Inactive`, `Creating`, `Deleting`.
	Status string `pulumi:"status"`
	// Tags.
	Tags []FlowLogsFlowLogTag `pulumi:"tags"`
	// The type of traffic. Valid values: `All`, `Allow`, `Drop`.
	TrafficType string `pulumi:"trafficType"`
	// The updated time of flow log.
	UpdatedAt string `pulumi:"updatedAt"`
	// The ID of VPC.
	VpcId string `pulumi:"vpcId"`
}

// FlowLogsFlowLogInput is an input type that accepts FlowLogsFlowLogArgs and FlowLogsFlowLogOutput values.
// You can construct a concrete instance of `FlowLogsFlowLogInput` via:
//
//	FlowLogsFlowLogArgs{...}
type FlowLogsFlowLogInput interface {
	pulumi.Input

	ToFlowLogsFlowLogOutput() FlowLogsFlowLogOutput
	ToFlowLogsFlowLogOutputWithContext(context.Context) FlowLogsFlowLogOutput
}

type FlowLogsFlowLogArgs struct {
	// The aggregation interval of flow log. Unit: minute. Valid values: `1`, `5`, `10`.
	AggregationInterval pulumi.IntInput `pulumi:"aggregationInterval"`
	// The business status of flow log.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The created time of flow log.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of flow log.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of flow log.
	FlowLogId pulumi.StringInput `pulumi:"flowLogId"`
	// The name of flow log.
	FlowLogName pulumi.StringInput `pulumi:"flowLogName"`
	// The ID of flow log.
	Id pulumi.StringInput `pulumi:"id"`
	// The reason why flow log is locked.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The ID of log project.
	LogProjectId pulumi.StringInput `pulumi:"logProjectId"`
	// The ID of log topic.
	LogTopicId pulumi.StringInput `pulumi:"logTopicId"`
	// The project name of flow log.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The ID of resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of resource. Valid values: `vpc`, `subnet`, `eni`.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of flow log. Valid values: `Active`, `Pending`, `Inactive`, `Creating`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags FlowLogsFlowLogTagArrayInput `pulumi:"tags"`
	// The type of traffic. Valid values: `All`, `Allow`, `Drop`.
	TrafficType pulumi.StringInput `pulumi:"trafficType"`
	// The updated time of flow log.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The ID of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (FlowLogsFlowLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogsFlowLog)(nil)).Elem()
}

func (i FlowLogsFlowLogArgs) ToFlowLogsFlowLogOutput() FlowLogsFlowLogOutput {
	return i.ToFlowLogsFlowLogOutputWithContext(context.Background())
}

func (i FlowLogsFlowLogArgs) ToFlowLogsFlowLogOutputWithContext(ctx context.Context) FlowLogsFlowLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogsFlowLogOutput)
}

// FlowLogsFlowLogArrayInput is an input type that accepts FlowLogsFlowLogArray and FlowLogsFlowLogArrayOutput values.
// You can construct a concrete instance of `FlowLogsFlowLogArrayInput` via:
//
//	FlowLogsFlowLogArray{ FlowLogsFlowLogArgs{...} }
type FlowLogsFlowLogArrayInput interface {
	pulumi.Input

	ToFlowLogsFlowLogArrayOutput() FlowLogsFlowLogArrayOutput
	ToFlowLogsFlowLogArrayOutputWithContext(context.Context) FlowLogsFlowLogArrayOutput
}

type FlowLogsFlowLogArray []FlowLogsFlowLogInput

func (FlowLogsFlowLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogsFlowLog)(nil)).Elem()
}

func (i FlowLogsFlowLogArray) ToFlowLogsFlowLogArrayOutput() FlowLogsFlowLogArrayOutput {
	return i.ToFlowLogsFlowLogArrayOutputWithContext(context.Background())
}

func (i FlowLogsFlowLogArray) ToFlowLogsFlowLogArrayOutputWithContext(ctx context.Context) FlowLogsFlowLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogsFlowLogArrayOutput)
}

type FlowLogsFlowLogOutput struct{ *pulumi.OutputState }

func (FlowLogsFlowLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogsFlowLog)(nil)).Elem()
}

func (o FlowLogsFlowLogOutput) ToFlowLogsFlowLogOutput() FlowLogsFlowLogOutput {
	return o
}

func (o FlowLogsFlowLogOutput) ToFlowLogsFlowLogOutputWithContext(ctx context.Context) FlowLogsFlowLogOutput {
	return o
}

// The aggregation interval of flow log. Unit: minute. Valid values: `1`, `5`, `10`.
func (o FlowLogsFlowLogOutput) AggregationInterval() pulumi.IntOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) int { return v.AggregationInterval }).(pulumi.IntOutput)
}

// The business status of flow log.
func (o FlowLogsFlowLogOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The created time of flow log.
func (o FlowLogsFlowLogOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of flow log.
func (o FlowLogsFlowLogOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of flow log.
func (o FlowLogsFlowLogOutput) FlowLogId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.FlowLogId }).(pulumi.StringOutput)
}

// The name of flow log.
func (o FlowLogsFlowLogOutput) FlowLogName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.FlowLogName }).(pulumi.StringOutput)
}

// The ID of flow log.
func (o FlowLogsFlowLogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.Id }).(pulumi.StringOutput)
}

// The reason why flow log is locked.
func (o FlowLogsFlowLogOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.LockReason }).(pulumi.StringOutput)
}

// The ID of log project.
func (o FlowLogsFlowLogOutput) LogProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.LogProjectId }).(pulumi.StringOutput)
}

// The ID of log topic.
func (o FlowLogsFlowLogOutput) LogTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.LogTopicId }).(pulumi.StringOutput)
}

// The project name of flow log.
func (o FlowLogsFlowLogOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The ID of resource.
func (o FlowLogsFlowLogOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of resource. Valid values: `vpc`, `subnet`, `eni`.
func (o FlowLogsFlowLogOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of flow log. Valid values: `Active`, `Pending`, `Inactive`, `Creating`, `Deleting`.
func (o FlowLogsFlowLogOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o FlowLogsFlowLogOutput) Tags() FlowLogsFlowLogTagArrayOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) []FlowLogsFlowLogTag { return v.Tags }).(FlowLogsFlowLogTagArrayOutput)
}

// The type of traffic. Valid values: `All`, `Allow`, `Drop`.
func (o FlowLogsFlowLogOutput) TrafficType() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.TrafficType }).(pulumi.StringOutput)
}

// The updated time of flow log.
func (o FlowLogsFlowLogOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The ID of VPC.
func (o FlowLogsFlowLogOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLog) string { return v.VpcId }).(pulumi.StringOutput)
}

type FlowLogsFlowLogArrayOutput struct{ *pulumi.OutputState }

func (FlowLogsFlowLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogsFlowLog)(nil)).Elem()
}

func (o FlowLogsFlowLogArrayOutput) ToFlowLogsFlowLogArrayOutput() FlowLogsFlowLogArrayOutput {
	return o
}

func (o FlowLogsFlowLogArrayOutput) ToFlowLogsFlowLogArrayOutputWithContext(ctx context.Context) FlowLogsFlowLogArrayOutput {
	return o
}

func (o FlowLogsFlowLogArrayOutput) Index(i pulumi.IntInput) FlowLogsFlowLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogsFlowLog {
		return vs[0].([]FlowLogsFlowLog)[vs[1].(int)]
	}).(FlowLogsFlowLogOutput)
}

type FlowLogsFlowLogTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// FlowLogsFlowLogTagInput is an input type that accepts FlowLogsFlowLogTagArgs and FlowLogsFlowLogTagOutput values.
// You can construct a concrete instance of `FlowLogsFlowLogTagInput` via:
//
//	FlowLogsFlowLogTagArgs{...}
type FlowLogsFlowLogTagInput interface {
	pulumi.Input

	ToFlowLogsFlowLogTagOutput() FlowLogsFlowLogTagOutput
	ToFlowLogsFlowLogTagOutputWithContext(context.Context) FlowLogsFlowLogTagOutput
}

type FlowLogsFlowLogTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FlowLogsFlowLogTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogsFlowLogTag)(nil)).Elem()
}

func (i FlowLogsFlowLogTagArgs) ToFlowLogsFlowLogTagOutput() FlowLogsFlowLogTagOutput {
	return i.ToFlowLogsFlowLogTagOutputWithContext(context.Background())
}

func (i FlowLogsFlowLogTagArgs) ToFlowLogsFlowLogTagOutputWithContext(ctx context.Context) FlowLogsFlowLogTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogsFlowLogTagOutput)
}

// FlowLogsFlowLogTagArrayInput is an input type that accepts FlowLogsFlowLogTagArray and FlowLogsFlowLogTagArrayOutput values.
// You can construct a concrete instance of `FlowLogsFlowLogTagArrayInput` via:
//
//	FlowLogsFlowLogTagArray{ FlowLogsFlowLogTagArgs{...} }
type FlowLogsFlowLogTagArrayInput interface {
	pulumi.Input

	ToFlowLogsFlowLogTagArrayOutput() FlowLogsFlowLogTagArrayOutput
	ToFlowLogsFlowLogTagArrayOutputWithContext(context.Context) FlowLogsFlowLogTagArrayOutput
}

type FlowLogsFlowLogTagArray []FlowLogsFlowLogTagInput

func (FlowLogsFlowLogTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogsFlowLogTag)(nil)).Elem()
}

func (i FlowLogsFlowLogTagArray) ToFlowLogsFlowLogTagArrayOutput() FlowLogsFlowLogTagArrayOutput {
	return i.ToFlowLogsFlowLogTagArrayOutputWithContext(context.Background())
}

func (i FlowLogsFlowLogTagArray) ToFlowLogsFlowLogTagArrayOutputWithContext(ctx context.Context) FlowLogsFlowLogTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogsFlowLogTagArrayOutput)
}

type FlowLogsFlowLogTagOutput struct{ *pulumi.OutputState }

func (FlowLogsFlowLogTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogsFlowLogTag)(nil)).Elem()
}

func (o FlowLogsFlowLogTagOutput) ToFlowLogsFlowLogTagOutput() FlowLogsFlowLogTagOutput {
	return o
}

func (o FlowLogsFlowLogTagOutput) ToFlowLogsFlowLogTagOutputWithContext(ctx context.Context) FlowLogsFlowLogTagOutput {
	return o
}

// The Key of Tags.
func (o FlowLogsFlowLogTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLogTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o FlowLogsFlowLogTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsFlowLogTag) string { return v.Value }).(pulumi.StringOutput)
}

type FlowLogsFlowLogTagArrayOutput struct{ *pulumi.OutputState }

func (FlowLogsFlowLogTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogsFlowLogTag)(nil)).Elem()
}

func (o FlowLogsFlowLogTagArrayOutput) ToFlowLogsFlowLogTagArrayOutput() FlowLogsFlowLogTagArrayOutput {
	return o
}

func (o FlowLogsFlowLogTagArrayOutput) ToFlowLogsFlowLogTagArrayOutputWithContext(ctx context.Context) FlowLogsFlowLogTagArrayOutput {
	return o
}

func (o FlowLogsFlowLogTagArrayOutput) Index(i pulumi.IntInput) FlowLogsFlowLogTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogsFlowLogTag {
		return vs[0].([]FlowLogsFlowLogTag)[vs[1].(int)]
	}).(FlowLogsFlowLogTagOutput)
}

type FlowLogsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// FlowLogsTagInput is an input type that accepts FlowLogsTagArgs and FlowLogsTagOutput values.
// You can construct a concrete instance of `FlowLogsTagInput` via:
//
//	FlowLogsTagArgs{...}
type FlowLogsTagInput interface {
	pulumi.Input

	ToFlowLogsTagOutput() FlowLogsTagOutput
	ToFlowLogsTagOutputWithContext(context.Context) FlowLogsTagOutput
}

type FlowLogsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FlowLogsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogsTag)(nil)).Elem()
}

func (i FlowLogsTagArgs) ToFlowLogsTagOutput() FlowLogsTagOutput {
	return i.ToFlowLogsTagOutputWithContext(context.Background())
}

func (i FlowLogsTagArgs) ToFlowLogsTagOutputWithContext(ctx context.Context) FlowLogsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogsTagOutput)
}

// FlowLogsTagArrayInput is an input type that accepts FlowLogsTagArray and FlowLogsTagArrayOutput values.
// You can construct a concrete instance of `FlowLogsTagArrayInput` via:
//
//	FlowLogsTagArray{ FlowLogsTagArgs{...} }
type FlowLogsTagArrayInput interface {
	pulumi.Input

	ToFlowLogsTagArrayOutput() FlowLogsTagArrayOutput
	ToFlowLogsTagArrayOutputWithContext(context.Context) FlowLogsTagArrayOutput
}

type FlowLogsTagArray []FlowLogsTagInput

func (FlowLogsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogsTag)(nil)).Elem()
}

func (i FlowLogsTagArray) ToFlowLogsTagArrayOutput() FlowLogsTagArrayOutput {
	return i.ToFlowLogsTagArrayOutputWithContext(context.Background())
}

func (i FlowLogsTagArray) ToFlowLogsTagArrayOutputWithContext(ctx context.Context) FlowLogsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogsTagArrayOutput)
}

type FlowLogsTagOutput struct{ *pulumi.OutputState }

func (FlowLogsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogsTag)(nil)).Elem()
}

func (o FlowLogsTagOutput) ToFlowLogsTagOutput() FlowLogsTagOutput {
	return o
}

func (o FlowLogsTagOutput) ToFlowLogsTagOutputWithContext(ctx context.Context) FlowLogsTagOutput {
	return o
}

// The Key of Tags.
func (o FlowLogsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o FlowLogsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogsTag) string { return v.Value }).(pulumi.StringOutput)
}

type FlowLogsTagArrayOutput struct{ *pulumi.OutputState }

func (FlowLogsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogsTag)(nil)).Elem()
}

func (o FlowLogsTagArrayOutput) ToFlowLogsTagArrayOutput() FlowLogsTagArrayOutput {
	return o
}

func (o FlowLogsTagArrayOutput) ToFlowLogsTagArrayOutputWithContext(ctx context.Context) FlowLogsTagArrayOutput {
	return o
}

func (o FlowLogsTagArrayOutput) Index(i pulumi.IntInput) FlowLogsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogsTag {
		return vs[0].([]FlowLogsTag)[vs[1].(int)]
	}).(FlowLogsTagOutput)
}

type HaVipTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// HaVipTagInput is an input type that accepts HaVipTagArgs and HaVipTagOutput values.
// You can construct a concrete instance of `HaVipTagInput` via:
//
//	HaVipTagArgs{...}
type HaVipTagInput interface {
	pulumi.Input

	ToHaVipTagOutput() HaVipTagOutput
	ToHaVipTagOutputWithContext(context.Context) HaVipTagOutput
}

type HaVipTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HaVipTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipTag)(nil)).Elem()
}

func (i HaVipTagArgs) ToHaVipTagOutput() HaVipTagOutput {
	return i.ToHaVipTagOutputWithContext(context.Background())
}

func (i HaVipTagArgs) ToHaVipTagOutputWithContext(ctx context.Context) HaVipTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipTagOutput)
}

// HaVipTagArrayInput is an input type that accepts HaVipTagArray and HaVipTagArrayOutput values.
// You can construct a concrete instance of `HaVipTagArrayInput` via:
//
//	HaVipTagArray{ HaVipTagArgs{...} }
type HaVipTagArrayInput interface {
	pulumi.Input

	ToHaVipTagArrayOutput() HaVipTagArrayOutput
	ToHaVipTagArrayOutputWithContext(context.Context) HaVipTagArrayOutput
}

type HaVipTagArray []HaVipTagInput

func (HaVipTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipTag)(nil)).Elem()
}

func (i HaVipTagArray) ToHaVipTagArrayOutput() HaVipTagArrayOutput {
	return i.ToHaVipTagArrayOutputWithContext(context.Background())
}

func (i HaVipTagArray) ToHaVipTagArrayOutputWithContext(ctx context.Context) HaVipTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipTagArrayOutput)
}

type HaVipTagOutput struct{ *pulumi.OutputState }

func (HaVipTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipTag)(nil)).Elem()
}

func (o HaVipTagOutput) ToHaVipTagOutput() HaVipTagOutput {
	return o
}

func (o HaVipTagOutput) ToHaVipTagOutputWithContext(ctx context.Context) HaVipTagOutput {
	return o
}

// The Key of Tags.
func (o HaVipTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o HaVipTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipTag) string { return v.Value }).(pulumi.StringOutput)
}

type HaVipTagArrayOutput struct{ *pulumi.OutputState }

func (HaVipTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipTag)(nil)).Elem()
}

func (o HaVipTagArrayOutput) ToHaVipTagArrayOutput() HaVipTagArrayOutput {
	return o
}

func (o HaVipTagArrayOutput) ToHaVipTagArrayOutputWithContext(ctx context.Context) HaVipTagArrayOutput {
	return o
}

func (o HaVipTagArrayOutput) Index(i pulumi.IntInput) HaVipTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaVipTag {
		return vs[0].([]HaVipTag)[vs[1].(int)]
	}).(HaVipTagOutput)
}

type HaVipsHaVip struct {
	// The account id of the Ha Vip.
	AccountId string `pulumi:"accountId"`
	// The associated eip address of the Ha Vip.
	AssociatedEipAddress string `pulumi:"associatedEipAddress"`
	// The associated eip id of the Ha Vip.
	AssociatedEipId string `pulumi:"associatedEipId"`
	// The associated instance ids of the Ha Vip.
	AssociatedInstanceIds []string `pulumi:"associatedInstanceIds"`
	// The associated instance type of the Ha Vip.
	AssociatedInstanceType string `pulumi:"associatedInstanceType"`
	// The create time of the Ha Vip.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the Ha Vip.
	Description string `pulumi:"description"`
	// The id of the Ha Vip.
	HaVipId string `pulumi:"haVipId"`
	// The name of Ha Vip.
	HaVipName string `pulumi:"haVipName"`
	// The id of the Ha Vip.
	Id string `pulumi:"id"`
	// The ip address of Ha Vip.
	IpAddress string `pulumi:"ipAddress"`
	// The master instance id of the Ha Vip.
	MasterInstanceId string `pulumi:"masterInstanceId"`
	// The project name of Ha Vip.
	ProjectName string `pulumi:"projectName"`
	// The status of Ha Vip.
	Status string `pulumi:"status"`
	// The id of subnet.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []HaVipsHaVipTag `pulumi:"tags"`
	// The update time of the Ha Vip.
	UpdatedAt string `pulumi:"updatedAt"`
	// The id of vpc.
	VpcId string `pulumi:"vpcId"`
}

// HaVipsHaVipInput is an input type that accepts HaVipsHaVipArgs and HaVipsHaVipOutput values.
// You can construct a concrete instance of `HaVipsHaVipInput` via:
//
//	HaVipsHaVipArgs{...}
type HaVipsHaVipInput interface {
	pulumi.Input

	ToHaVipsHaVipOutput() HaVipsHaVipOutput
	ToHaVipsHaVipOutputWithContext(context.Context) HaVipsHaVipOutput
}

type HaVipsHaVipArgs struct {
	// The account id of the Ha Vip.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The associated eip address of the Ha Vip.
	AssociatedEipAddress pulumi.StringInput `pulumi:"associatedEipAddress"`
	// The associated eip id of the Ha Vip.
	AssociatedEipId pulumi.StringInput `pulumi:"associatedEipId"`
	// The associated instance ids of the Ha Vip.
	AssociatedInstanceIds pulumi.StringArrayInput `pulumi:"associatedInstanceIds"`
	// The associated instance type of the Ha Vip.
	AssociatedInstanceType pulumi.StringInput `pulumi:"associatedInstanceType"`
	// The create time of the Ha Vip.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the Ha Vip.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the Ha Vip.
	HaVipId pulumi.StringInput `pulumi:"haVipId"`
	// The name of Ha Vip.
	HaVipName pulumi.StringInput `pulumi:"haVipName"`
	// The id of the Ha Vip.
	Id pulumi.StringInput `pulumi:"id"`
	// The ip address of Ha Vip.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The master instance id of the Ha Vip.
	MasterInstanceId pulumi.StringInput `pulumi:"masterInstanceId"`
	// The project name of Ha Vip.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of Ha Vip.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags HaVipsHaVipTagArrayInput `pulumi:"tags"`
	// The update time of the Ha Vip.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The id of vpc.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (HaVipsHaVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipsHaVip)(nil)).Elem()
}

func (i HaVipsHaVipArgs) ToHaVipsHaVipOutput() HaVipsHaVipOutput {
	return i.ToHaVipsHaVipOutputWithContext(context.Background())
}

func (i HaVipsHaVipArgs) ToHaVipsHaVipOutputWithContext(ctx context.Context) HaVipsHaVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipsHaVipOutput)
}

// HaVipsHaVipArrayInput is an input type that accepts HaVipsHaVipArray and HaVipsHaVipArrayOutput values.
// You can construct a concrete instance of `HaVipsHaVipArrayInput` via:
//
//	HaVipsHaVipArray{ HaVipsHaVipArgs{...} }
type HaVipsHaVipArrayInput interface {
	pulumi.Input

	ToHaVipsHaVipArrayOutput() HaVipsHaVipArrayOutput
	ToHaVipsHaVipArrayOutputWithContext(context.Context) HaVipsHaVipArrayOutput
}

type HaVipsHaVipArray []HaVipsHaVipInput

func (HaVipsHaVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipsHaVip)(nil)).Elem()
}

func (i HaVipsHaVipArray) ToHaVipsHaVipArrayOutput() HaVipsHaVipArrayOutput {
	return i.ToHaVipsHaVipArrayOutputWithContext(context.Background())
}

func (i HaVipsHaVipArray) ToHaVipsHaVipArrayOutputWithContext(ctx context.Context) HaVipsHaVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipsHaVipArrayOutput)
}

type HaVipsHaVipOutput struct{ *pulumi.OutputState }

func (HaVipsHaVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipsHaVip)(nil)).Elem()
}

func (o HaVipsHaVipOutput) ToHaVipsHaVipOutput() HaVipsHaVipOutput {
	return o
}

func (o HaVipsHaVipOutput) ToHaVipsHaVipOutputWithContext(ctx context.Context) HaVipsHaVipOutput {
	return o
}

// The account id of the Ha Vip.
func (o HaVipsHaVipOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.AccountId }).(pulumi.StringOutput)
}

// The associated eip address of the Ha Vip.
func (o HaVipsHaVipOutput) AssociatedEipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.AssociatedEipAddress }).(pulumi.StringOutput)
}

// The associated eip id of the Ha Vip.
func (o HaVipsHaVipOutput) AssociatedEipId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.AssociatedEipId }).(pulumi.StringOutput)
}

// The associated instance ids of the Ha Vip.
func (o HaVipsHaVipOutput) AssociatedInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HaVipsHaVip) []string { return v.AssociatedInstanceIds }).(pulumi.StringArrayOutput)
}

// The associated instance type of the Ha Vip.
func (o HaVipsHaVipOutput) AssociatedInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.AssociatedInstanceType }).(pulumi.StringOutput)
}

// The create time of the Ha Vip.
func (o HaVipsHaVipOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the Ha Vip.
func (o HaVipsHaVipOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the Ha Vip.
func (o HaVipsHaVipOutput) HaVipId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.HaVipId }).(pulumi.StringOutput)
}

// The name of Ha Vip.
func (o HaVipsHaVipOutput) HaVipName() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.HaVipName }).(pulumi.StringOutput)
}

// The id of the Ha Vip.
func (o HaVipsHaVipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.Id }).(pulumi.StringOutput)
}

// The ip address of Ha Vip.
func (o HaVipsHaVipOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The master instance id of the Ha Vip.
func (o HaVipsHaVipOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// The project name of Ha Vip.
func (o HaVipsHaVipOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of Ha Vip.
func (o HaVipsHaVipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.Status }).(pulumi.StringOutput)
}

// The id of subnet.
func (o HaVipsHaVipOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o HaVipsHaVipOutput) Tags() HaVipsHaVipTagArrayOutput {
	return o.ApplyT(func(v HaVipsHaVip) []HaVipsHaVipTag { return v.Tags }).(HaVipsHaVipTagArrayOutput)
}

// The update time of the Ha Vip.
func (o HaVipsHaVipOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The id of vpc.
func (o HaVipsHaVipOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.VpcId }).(pulumi.StringOutput)
}

type HaVipsHaVipArrayOutput struct{ *pulumi.OutputState }

func (HaVipsHaVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipsHaVip)(nil)).Elem()
}

func (o HaVipsHaVipArrayOutput) ToHaVipsHaVipArrayOutput() HaVipsHaVipArrayOutput {
	return o
}

func (o HaVipsHaVipArrayOutput) ToHaVipsHaVipArrayOutputWithContext(ctx context.Context) HaVipsHaVipArrayOutput {
	return o
}

func (o HaVipsHaVipArrayOutput) Index(i pulumi.IntInput) HaVipsHaVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaVipsHaVip {
		return vs[0].([]HaVipsHaVip)[vs[1].(int)]
	}).(HaVipsHaVipOutput)
}

type HaVipsHaVipTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// HaVipsHaVipTagInput is an input type that accepts HaVipsHaVipTagArgs and HaVipsHaVipTagOutput values.
// You can construct a concrete instance of `HaVipsHaVipTagInput` via:
//
//	HaVipsHaVipTagArgs{...}
type HaVipsHaVipTagInput interface {
	pulumi.Input

	ToHaVipsHaVipTagOutput() HaVipsHaVipTagOutput
	ToHaVipsHaVipTagOutputWithContext(context.Context) HaVipsHaVipTagOutput
}

type HaVipsHaVipTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HaVipsHaVipTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipsHaVipTag)(nil)).Elem()
}

func (i HaVipsHaVipTagArgs) ToHaVipsHaVipTagOutput() HaVipsHaVipTagOutput {
	return i.ToHaVipsHaVipTagOutputWithContext(context.Background())
}

func (i HaVipsHaVipTagArgs) ToHaVipsHaVipTagOutputWithContext(ctx context.Context) HaVipsHaVipTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipsHaVipTagOutput)
}

// HaVipsHaVipTagArrayInput is an input type that accepts HaVipsHaVipTagArray and HaVipsHaVipTagArrayOutput values.
// You can construct a concrete instance of `HaVipsHaVipTagArrayInput` via:
//
//	HaVipsHaVipTagArray{ HaVipsHaVipTagArgs{...} }
type HaVipsHaVipTagArrayInput interface {
	pulumi.Input

	ToHaVipsHaVipTagArrayOutput() HaVipsHaVipTagArrayOutput
	ToHaVipsHaVipTagArrayOutputWithContext(context.Context) HaVipsHaVipTagArrayOutput
}

type HaVipsHaVipTagArray []HaVipsHaVipTagInput

func (HaVipsHaVipTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipsHaVipTag)(nil)).Elem()
}

func (i HaVipsHaVipTagArray) ToHaVipsHaVipTagArrayOutput() HaVipsHaVipTagArrayOutput {
	return i.ToHaVipsHaVipTagArrayOutputWithContext(context.Background())
}

func (i HaVipsHaVipTagArray) ToHaVipsHaVipTagArrayOutputWithContext(ctx context.Context) HaVipsHaVipTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipsHaVipTagArrayOutput)
}

type HaVipsHaVipTagOutput struct{ *pulumi.OutputState }

func (HaVipsHaVipTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipsHaVipTag)(nil)).Elem()
}

func (o HaVipsHaVipTagOutput) ToHaVipsHaVipTagOutput() HaVipsHaVipTagOutput {
	return o
}

func (o HaVipsHaVipTagOutput) ToHaVipsHaVipTagOutputWithContext(ctx context.Context) HaVipsHaVipTagOutput {
	return o
}

// The Key of Tags.
func (o HaVipsHaVipTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVipTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o HaVipsHaVipTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVipTag) string { return v.Value }).(pulumi.StringOutput)
}

type HaVipsHaVipTagArrayOutput struct{ *pulumi.OutputState }

func (HaVipsHaVipTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipsHaVipTag)(nil)).Elem()
}

func (o HaVipsHaVipTagArrayOutput) ToHaVipsHaVipTagArrayOutput() HaVipsHaVipTagArrayOutput {
	return o
}

func (o HaVipsHaVipTagArrayOutput) ToHaVipsHaVipTagArrayOutputWithContext(ctx context.Context) HaVipsHaVipTagArrayOutput {
	return o
}

func (o HaVipsHaVipTagArrayOutput) Index(i pulumi.IntInput) HaVipsHaVipTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaVipsHaVipTag {
		return vs[0].([]HaVipsHaVipTag)[vs[1].(int)]
	}).(HaVipsHaVipTagOutput)
}

type HaVipsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// HaVipsTagInput is an input type that accepts HaVipsTagArgs and HaVipsTagOutput values.
// You can construct a concrete instance of `HaVipsTagInput` via:
//
//	HaVipsTagArgs{...}
type HaVipsTagInput interface {
	pulumi.Input

	ToHaVipsTagOutput() HaVipsTagOutput
	ToHaVipsTagOutputWithContext(context.Context) HaVipsTagOutput
}

type HaVipsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HaVipsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipsTag)(nil)).Elem()
}

func (i HaVipsTagArgs) ToHaVipsTagOutput() HaVipsTagOutput {
	return i.ToHaVipsTagOutputWithContext(context.Background())
}

func (i HaVipsTagArgs) ToHaVipsTagOutputWithContext(ctx context.Context) HaVipsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipsTagOutput)
}

// HaVipsTagArrayInput is an input type that accepts HaVipsTagArray and HaVipsTagArrayOutput values.
// You can construct a concrete instance of `HaVipsTagArrayInput` via:
//
//	HaVipsTagArray{ HaVipsTagArgs{...} }
type HaVipsTagArrayInput interface {
	pulumi.Input

	ToHaVipsTagArrayOutput() HaVipsTagArrayOutput
	ToHaVipsTagArrayOutputWithContext(context.Context) HaVipsTagArrayOutput
}

type HaVipsTagArray []HaVipsTagInput

func (HaVipsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipsTag)(nil)).Elem()
}

func (i HaVipsTagArray) ToHaVipsTagArrayOutput() HaVipsTagArrayOutput {
	return i.ToHaVipsTagArrayOutputWithContext(context.Background())
}

func (i HaVipsTagArray) ToHaVipsTagArrayOutputWithContext(ctx context.Context) HaVipsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipsTagArrayOutput)
}

type HaVipsTagOutput struct{ *pulumi.OutputState }

func (HaVipsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipsTag)(nil)).Elem()
}

func (o HaVipsTagOutput) ToHaVipsTagOutput() HaVipsTagOutput {
	return o
}

func (o HaVipsTagOutput) ToHaVipsTagOutputWithContext(ctx context.Context) HaVipsTagOutput {
	return o
}

// The Key of Tags.
func (o HaVipsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o HaVipsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsTag) string { return v.Value }).(pulumi.StringOutput)
}

type HaVipsTagArrayOutput struct{ *pulumi.OutputState }

func (HaVipsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipsTag)(nil)).Elem()
}

func (o HaVipsTagArrayOutput) ToHaVipsTagArrayOutput() HaVipsTagArrayOutput {
	return o
}

func (o HaVipsTagArrayOutput) ToHaVipsTagArrayOutputWithContext(ctx context.Context) HaVipsTagArrayOutput {
	return o
}

func (o HaVipsTagArrayOutput) Index(i pulumi.IntInput) HaVipsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaVipsTag {
		return vs[0].([]HaVipsTag)[vs[1].(int)]
	}).(HaVipsTagOutput)
}

type Ipv6AddressBandwidthsIpv6AddressBandwidth struct {
	// The ID of the Ipv6AddressBandwidth.
	AllocationId string `pulumi:"allocationId"`
	// Peek bandwidth of the Ipv6 address.
	Bandwidth int `pulumi:"bandwidth"`
	// BillingType of the Ipv6 bandwidth.
	BillingType string `pulumi:"billingType"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	BusinessStatus string `pulumi:"businessStatus"`
	// Creation time of the Ipv6AddressBandwidth.
	CreationTime string `pulumi:"creationTime"`
	// Delete time of the Ipv6AddressBandwidth.
	DeleteTime string `pulumi:"deleteTime"`
	// The ID of the Ipv6AddressBandwidth.
	Id string `pulumi:"id"`
	// The ID of the associated instance.
	InstanceId string `pulumi:"instanceId"`
	// The type of the associated instance.
	InstanceType string `pulumi:"instanceType"`
	// The IPv6 address.
	Ipv6Address string `pulumi:"ipv6Address"`
	// ISP of the ipv6 address.
	Isp string `pulumi:"isp"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	LockReason string `pulumi:"lockReason"`
	// The network type of the ipv6 address.
	NetworkType string `pulumi:"networkType"`
	// Overdue time of the Ipv6AddressBandwidth.
	OverdueTime string `pulumi:"overdueTime"`
	// The status of the Ipv6AddressBandwidth.
	Status string `pulumi:"status"`
	// Update time of the Ipv6AddressBandwidth.
	UpdateTime string `pulumi:"updateTime"`
}

// Ipv6AddressBandwidthsIpv6AddressBandwidthInput is an input type that accepts Ipv6AddressBandwidthsIpv6AddressBandwidthArgs and Ipv6AddressBandwidthsIpv6AddressBandwidthOutput values.
// You can construct a concrete instance of `Ipv6AddressBandwidthsIpv6AddressBandwidthInput` via:
//
//	Ipv6AddressBandwidthsIpv6AddressBandwidthArgs{...}
type Ipv6AddressBandwidthsIpv6AddressBandwidthInput interface {
	pulumi.Input

	ToIpv6AddressBandwidthsIpv6AddressBandwidthOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthOutput
	ToIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthOutput
}

type Ipv6AddressBandwidthsIpv6AddressBandwidthArgs struct {
	// The ID of the Ipv6AddressBandwidth.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// Peek bandwidth of the Ipv6 address.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// BillingType of the Ipv6 bandwidth.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// Creation time of the Ipv6AddressBandwidth.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Delete time of the Ipv6AddressBandwidth.
	DeleteTime pulumi.StringInput `pulumi:"deleteTime"`
	// The ID of the Ipv6AddressBandwidth.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the associated instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The type of the associated instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The IPv6 address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// ISP of the ipv6 address.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The network type of the ipv6 address.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Overdue time of the Ipv6AddressBandwidth.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The status of the Ipv6AddressBandwidth.
	Status pulumi.StringInput `pulumi:"status"`
	// Update time of the Ipv6AddressBandwidth.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (Ipv6AddressBandwidthsIpv6AddressBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (i Ipv6AddressBandwidthsIpv6AddressBandwidthArgs) ToIpv6AddressBandwidthsIpv6AddressBandwidthOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return i.ToIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(context.Background())
}

func (i Ipv6AddressBandwidthsIpv6AddressBandwidthArgs) ToIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(ctx context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AddressBandwidthsIpv6AddressBandwidthOutput)
}

// Ipv6AddressBandwidthsIpv6AddressBandwidthArrayInput is an input type that accepts Ipv6AddressBandwidthsIpv6AddressBandwidthArray and Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput values.
// You can construct a concrete instance of `Ipv6AddressBandwidthsIpv6AddressBandwidthArrayInput` via:
//
//	Ipv6AddressBandwidthsIpv6AddressBandwidthArray{ Ipv6AddressBandwidthsIpv6AddressBandwidthArgs{...} }
type Ipv6AddressBandwidthsIpv6AddressBandwidthArrayInput interface {
	pulumi.Input

	ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput
	ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput
}

type Ipv6AddressBandwidthsIpv6AddressBandwidthArray []Ipv6AddressBandwidthsIpv6AddressBandwidthInput

func (Ipv6AddressBandwidthsIpv6AddressBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (i Ipv6AddressBandwidthsIpv6AddressBandwidthArray) ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return i.ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(context.Background())
}

func (i Ipv6AddressBandwidthsIpv6AddressBandwidthArray) ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput)
}

type Ipv6AddressBandwidthsIpv6AddressBandwidthOutput struct{ *pulumi.OutputState }

func (Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) ToIpv6AddressBandwidthsIpv6AddressBandwidthOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return o
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) ToIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(ctx context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return o
}

// The ID of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.AllocationId }).(pulumi.StringOutput)
}

// Peek bandwidth of the Ipv6 address.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// BillingType of the Ipv6 bandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.BillingType }).(pulumi.StringOutput)
}

// The BusinessStatus of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// Creation time of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Delete time of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// The ID of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the associated instance.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The type of the associated instance.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The IPv6 address.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// ISP of the ipv6 address.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Isp }).(pulumi.StringOutput)
}

// The BusinessStatus of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.LockReason }).(pulumi.StringOutput)
}

// The network type of the ipv6 address.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Overdue time of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The status of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Status }).(pulumi.StringOutput)
}

// Update time of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput struct{ *pulumi.OutputState }

func (Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return o
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return o
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) Index(i pulumi.IntInput) Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ipv6AddressBandwidthsIpv6AddressBandwidth {
		return vs[0].([]Ipv6AddressBandwidthsIpv6AddressBandwidth)[vs[1].(int)]
	}).(Ipv6AddressBandwidthsIpv6AddressBandwidthOutput)
}

type Ipv6AddressesIpv6Address struct {
	// The IPv6 address.
	Ipv6Address string `pulumi:"ipv6Address"`
}

// Ipv6AddressesIpv6AddressInput is an input type that accepts Ipv6AddressesIpv6AddressArgs and Ipv6AddressesIpv6AddressOutput values.
// You can construct a concrete instance of `Ipv6AddressesIpv6AddressInput` via:
//
//	Ipv6AddressesIpv6AddressArgs{...}
type Ipv6AddressesIpv6AddressInput interface {
	pulumi.Input

	ToIpv6AddressesIpv6AddressOutput() Ipv6AddressesIpv6AddressOutput
	ToIpv6AddressesIpv6AddressOutputWithContext(context.Context) Ipv6AddressesIpv6AddressOutput
}

type Ipv6AddressesIpv6AddressArgs struct {
	// The IPv6 address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
}

func (Ipv6AddressesIpv6AddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6AddressesIpv6Address)(nil)).Elem()
}

func (i Ipv6AddressesIpv6AddressArgs) ToIpv6AddressesIpv6AddressOutput() Ipv6AddressesIpv6AddressOutput {
	return i.ToIpv6AddressesIpv6AddressOutputWithContext(context.Background())
}

func (i Ipv6AddressesIpv6AddressArgs) ToIpv6AddressesIpv6AddressOutputWithContext(ctx context.Context) Ipv6AddressesIpv6AddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AddressesIpv6AddressOutput)
}

// Ipv6AddressesIpv6AddressArrayInput is an input type that accepts Ipv6AddressesIpv6AddressArray and Ipv6AddressesIpv6AddressArrayOutput values.
// You can construct a concrete instance of `Ipv6AddressesIpv6AddressArrayInput` via:
//
//	Ipv6AddressesIpv6AddressArray{ Ipv6AddressesIpv6AddressArgs{...} }
type Ipv6AddressesIpv6AddressArrayInput interface {
	pulumi.Input

	ToIpv6AddressesIpv6AddressArrayOutput() Ipv6AddressesIpv6AddressArrayOutput
	ToIpv6AddressesIpv6AddressArrayOutputWithContext(context.Context) Ipv6AddressesIpv6AddressArrayOutput
}

type Ipv6AddressesIpv6AddressArray []Ipv6AddressesIpv6AddressInput

func (Ipv6AddressesIpv6AddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6AddressesIpv6Address)(nil)).Elem()
}

func (i Ipv6AddressesIpv6AddressArray) ToIpv6AddressesIpv6AddressArrayOutput() Ipv6AddressesIpv6AddressArrayOutput {
	return i.ToIpv6AddressesIpv6AddressArrayOutputWithContext(context.Background())
}

func (i Ipv6AddressesIpv6AddressArray) ToIpv6AddressesIpv6AddressArrayOutputWithContext(ctx context.Context) Ipv6AddressesIpv6AddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AddressesIpv6AddressArrayOutput)
}

type Ipv6AddressesIpv6AddressOutput struct{ *pulumi.OutputState }

func (Ipv6AddressesIpv6AddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6AddressesIpv6Address)(nil)).Elem()
}

func (o Ipv6AddressesIpv6AddressOutput) ToIpv6AddressesIpv6AddressOutput() Ipv6AddressesIpv6AddressOutput {
	return o
}

func (o Ipv6AddressesIpv6AddressOutput) ToIpv6AddressesIpv6AddressOutputWithContext(ctx context.Context) Ipv6AddressesIpv6AddressOutput {
	return o
}

// The IPv6 address.
func (o Ipv6AddressesIpv6AddressOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressesIpv6Address) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

type Ipv6AddressesIpv6AddressArrayOutput struct{ *pulumi.OutputState }

func (Ipv6AddressesIpv6AddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6AddressesIpv6Address)(nil)).Elem()
}

func (o Ipv6AddressesIpv6AddressArrayOutput) ToIpv6AddressesIpv6AddressArrayOutput() Ipv6AddressesIpv6AddressArrayOutput {
	return o
}

func (o Ipv6AddressesIpv6AddressArrayOutput) ToIpv6AddressesIpv6AddressArrayOutputWithContext(ctx context.Context) Ipv6AddressesIpv6AddressArrayOutput {
	return o
}

func (o Ipv6AddressesIpv6AddressArrayOutput) Index(i pulumi.IntInput) Ipv6AddressesIpv6AddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ipv6AddressesIpv6Address {
		return vs[0].([]Ipv6AddressesIpv6Address)[vs[1].(int)]
	}).(Ipv6AddressesIpv6AddressOutput)
}

type Ipv6GatewaysIpv6Gateway struct {
	// Creation time of the Ipv6Gateway.
	CreationTime string `pulumi:"creationTime"`
	// The description of the Ipv6Gateway.
	Description string `pulumi:"description"`
	// The ID of the Ipv6Gateway.
	Id string `pulumi:"id"`
	// The ID of the Ipv6Gateway.
	Ipv6GatewayId string `pulumi:"ipv6GatewayId"`
	// The name of the Ipv6Gateway.
	Name string `pulumi:"name"`
	// The Status of the Ipv6Gateway.
	Status string `pulumi:"status"`
	// Update time of the Ipv6Gateway.
	UpdateTime string `pulumi:"updateTime"`
	// The id of the VPC which the Ipv6Gateway belongs to.
	VpcId string `pulumi:"vpcId"`
}

// Ipv6GatewaysIpv6GatewayInput is an input type that accepts Ipv6GatewaysIpv6GatewayArgs and Ipv6GatewaysIpv6GatewayOutput values.
// You can construct a concrete instance of `Ipv6GatewaysIpv6GatewayInput` via:
//
//	Ipv6GatewaysIpv6GatewayArgs{...}
type Ipv6GatewaysIpv6GatewayInput interface {
	pulumi.Input

	ToIpv6GatewaysIpv6GatewayOutput() Ipv6GatewaysIpv6GatewayOutput
	ToIpv6GatewaysIpv6GatewayOutputWithContext(context.Context) Ipv6GatewaysIpv6GatewayOutput
}

type Ipv6GatewaysIpv6GatewayArgs struct {
	// Creation time of the Ipv6Gateway.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the Ipv6Gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Ipv6Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Ipv6Gateway.
	Ipv6GatewayId pulumi.StringInput `pulumi:"ipv6GatewayId"`
	// The name of the Ipv6Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Status of the Ipv6Gateway.
	Status pulumi.StringInput `pulumi:"status"`
	// Update time of the Ipv6Gateway.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The id of the VPC which the Ipv6Gateway belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (Ipv6GatewaysIpv6GatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (i Ipv6GatewaysIpv6GatewayArgs) ToIpv6GatewaysIpv6GatewayOutput() Ipv6GatewaysIpv6GatewayOutput {
	return i.ToIpv6GatewaysIpv6GatewayOutputWithContext(context.Background())
}

func (i Ipv6GatewaysIpv6GatewayArgs) ToIpv6GatewaysIpv6GatewayOutputWithContext(ctx context.Context) Ipv6GatewaysIpv6GatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6GatewaysIpv6GatewayOutput)
}

// Ipv6GatewaysIpv6GatewayArrayInput is an input type that accepts Ipv6GatewaysIpv6GatewayArray and Ipv6GatewaysIpv6GatewayArrayOutput values.
// You can construct a concrete instance of `Ipv6GatewaysIpv6GatewayArrayInput` via:
//
//	Ipv6GatewaysIpv6GatewayArray{ Ipv6GatewaysIpv6GatewayArgs{...} }
type Ipv6GatewaysIpv6GatewayArrayInput interface {
	pulumi.Input

	ToIpv6GatewaysIpv6GatewayArrayOutput() Ipv6GatewaysIpv6GatewayArrayOutput
	ToIpv6GatewaysIpv6GatewayArrayOutputWithContext(context.Context) Ipv6GatewaysIpv6GatewayArrayOutput
}

type Ipv6GatewaysIpv6GatewayArray []Ipv6GatewaysIpv6GatewayInput

func (Ipv6GatewaysIpv6GatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (i Ipv6GatewaysIpv6GatewayArray) ToIpv6GatewaysIpv6GatewayArrayOutput() Ipv6GatewaysIpv6GatewayArrayOutput {
	return i.ToIpv6GatewaysIpv6GatewayArrayOutputWithContext(context.Background())
}

func (i Ipv6GatewaysIpv6GatewayArray) ToIpv6GatewaysIpv6GatewayArrayOutputWithContext(ctx context.Context) Ipv6GatewaysIpv6GatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6GatewaysIpv6GatewayArrayOutput)
}

type Ipv6GatewaysIpv6GatewayOutput struct{ *pulumi.OutputState }

func (Ipv6GatewaysIpv6GatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (o Ipv6GatewaysIpv6GatewayOutput) ToIpv6GatewaysIpv6GatewayOutput() Ipv6GatewaysIpv6GatewayOutput {
	return o
}

func (o Ipv6GatewaysIpv6GatewayOutput) ToIpv6GatewaysIpv6GatewayOutputWithContext(ctx context.Context) Ipv6GatewaysIpv6GatewayOutput {
	return o
}

// Creation time of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Ipv6GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Ipv6GatewayId }).(pulumi.StringOutput)
}

// The name of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Name }).(pulumi.StringOutput)
}

// The Status of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Status }).(pulumi.StringOutput)
}

// Update time of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of the VPC which the Ipv6Gateway belongs to.
func (o Ipv6GatewaysIpv6GatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type Ipv6GatewaysIpv6GatewayArrayOutput struct{ *pulumi.OutputState }

func (Ipv6GatewaysIpv6GatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (o Ipv6GatewaysIpv6GatewayArrayOutput) ToIpv6GatewaysIpv6GatewayArrayOutput() Ipv6GatewaysIpv6GatewayArrayOutput {
	return o
}

func (o Ipv6GatewaysIpv6GatewayArrayOutput) ToIpv6GatewaysIpv6GatewayArrayOutputWithContext(ctx context.Context) Ipv6GatewaysIpv6GatewayArrayOutput {
	return o
}

func (o Ipv6GatewaysIpv6GatewayArrayOutput) Index(i pulumi.IntInput) Ipv6GatewaysIpv6GatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ipv6GatewaysIpv6Gateway {
		return vs[0].([]Ipv6GatewaysIpv6Gateway)[vs[1].(int)]
	}).(Ipv6GatewaysIpv6GatewayOutput)
}

type NetworkAclEgressAclEntry struct {
	// The description of entry.
	Description *string `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp *string `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId *string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName *string `pulumi:"networkAclEntryName"`
	// The policy of entry. Default is `accept`. The value can be `accept` or `drop`.
	Policy *string `pulumi:"policy"`
	// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction.When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`,which means port 1 to port 200, port 80.
	Port *string `pulumi:"port"`
	// The priority of entry.
	Priority *int `pulumi:"priority"`
	// The protocol of entry. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`. Default is `all`.
	Protocol *string `pulumi:"protocol"`
}

// NetworkAclEgressAclEntryInput is an input type that accepts NetworkAclEgressAclEntryArgs and NetworkAclEgressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclEgressAclEntryInput` via:
//
//	NetworkAclEgressAclEntryArgs{...}
type NetworkAclEgressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput
	ToNetworkAclEgressAclEntryOutputWithContext(context.Context) NetworkAclEgressAclEntryOutput
}

type NetworkAclEgressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp pulumi.StringPtrInput `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringPtrInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringPtrInput `pulumi:"networkAclEntryName"`
	// The policy of entry. Default is `accept`. The value can be `accept` or `drop`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction.When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`,which means port 1 to port 200, port 80.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The protocol of entry. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`. Default is `all`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (NetworkAclEgressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclEgressAclEntryArgs) ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput {
	return i.ToNetworkAclEgressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclEgressAclEntryArgs) ToNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressAclEntryOutput)
}

// NetworkAclEgressAclEntryArrayInput is an input type that accepts NetworkAclEgressAclEntryArray and NetworkAclEgressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclEgressAclEntryArrayInput` via:
//
//	NetworkAclEgressAclEntryArray{ NetworkAclEgressAclEntryArgs{...} }
type NetworkAclEgressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput
	ToNetworkAclEgressAclEntryArrayOutputWithContext(context.Context) NetworkAclEgressAclEntryArrayOutput
}

type NetworkAclEgressAclEntryArray []NetworkAclEgressAclEntryInput

func (NetworkAclEgressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclEgressAclEntryArray) ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput {
	return i.ToNetworkAclEgressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclEgressAclEntryArray) ToNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressAclEntryArrayOutput)
}

type NetworkAclEgressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclEgressAclEntryOutput) ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput {
	return o
}

func (o NetworkAclEgressAclEntryOutput) ToNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryOutput {
	return o
}

// The description of entry.
func (o NetworkAclEgressAclEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The DestinationCidrIp of entry.
func (o NetworkAclEgressAclEntryOutput) DestinationCidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.DestinationCidrIp }).(pulumi.StringPtrOutput)
}

// The id of entry.
func (o NetworkAclEgressAclEntryOutput) NetworkAclEntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.NetworkAclEntryId }).(pulumi.StringPtrOutput)
}

// The name of entry.
func (o NetworkAclEgressAclEntryOutput) NetworkAclEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.NetworkAclEntryName }).(pulumi.StringPtrOutput)
}

// The policy of entry. Default is `accept`. The value can be `accept` or `drop`.
func (o NetworkAclEgressAclEntryOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction.When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`,which means port 1 to port 200, port 80.
func (o NetworkAclEgressAclEntryOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The priority of entry.
func (o NetworkAclEgressAclEntryOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The protocol of entry. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`. Default is `all`.
func (o NetworkAclEgressAclEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type NetworkAclEgressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclEgressAclEntryArrayOutput) ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclEgressAclEntryArrayOutput) ToNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclEgressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclEgressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEgressAclEntry {
		return vs[0].([]NetworkAclEgressAclEntry)[vs[1].(int)]
	}).(NetworkAclEgressAclEntryOutput)
}

type NetworkAclIngressAclEntry struct {
	// The description of entry.
	Description *string `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId *string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName *string `pulumi:"networkAclEntryName"`
	// The policy of entry, default is `accept`. The value can be `accept` or `drop`.
	Policy *string `pulumi:"policy"`
	// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction. When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`, which means port 1 to port 200, port 80.
	Port *string `pulumi:"port"`
	// The priority of entry.
	Priority *int `pulumi:"priority"`
	// The protocol of entry, default is `all`. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`.
	Protocol *string `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp *string `pulumi:"sourceCidrIp"`
}

// NetworkAclIngressAclEntryInput is an input type that accepts NetworkAclIngressAclEntryArgs and NetworkAclIngressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclIngressAclEntryInput` via:
//
//	NetworkAclIngressAclEntryArgs{...}
type NetworkAclIngressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput
	ToNetworkAclIngressAclEntryOutputWithContext(context.Context) NetworkAclIngressAclEntryOutput
}

type NetworkAclIngressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringPtrInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringPtrInput `pulumi:"networkAclEntryName"`
	// The policy of entry, default is `accept`. The value can be `accept` or `drop`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction. When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`, which means port 1 to port 200, port 80.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The protocol of entry, default is `all`. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp pulumi.StringPtrInput `pulumi:"sourceCidrIp"`
}

func (NetworkAclIngressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclIngressAclEntryArgs) ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput {
	return i.ToNetworkAclIngressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclIngressAclEntryArgs) ToNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressAclEntryOutput)
}

// NetworkAclIngressAclEntryArrayInput is an input type that accepts NetworkAclIngressAclEntryArray and NetworkAclIngressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclIngressAclEntryArrayInput` via:
//
//	NetworkAclIngressAclEntryArray{ NetworkAclIngressAclEntryArgs{...} }
type NetworkAclIngressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput
	ToNetworkAclIngressAclEntryArrayOutputWithContext(context.Context) NetworkAclIngressAclEntryArrayOutput
}

type NetworkAclIngressAclEntryArray []NetworkAclIngressAclEntryInput

func (NetworkAclIngressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclIngressAclEntryArray) ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput {
	return i.ToNetworkAclIngressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclIngressAclEntryArray) ToNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressAclEntryArrayOutput)
}

type NetworkAclIngressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclIngressAclEntryOutput) ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput {
	return o
}

func (o NetworkAclIngressAclEntryOutput) ToNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryOutput {
	return o
}

// The description of entry.
func (o NetworkAclIngressAclEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The id of entry.
func (o NetworkAclIngressAclEntryOutput) NetworkAclEntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.NetworkAclEntryId }).(pulumi.StringPtrOutput)
}

// The name of entry.
func (o NetworkAclIngressAclEntryOutput) NetworkAclEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.NetworkAclEntryName }).(pulumi.StringPtrOutput)
}

// The policy of entry, default is `accept`. The value can be `accept` or `drop`.
func (o NetworkAclIngressAclEntryOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction. When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`, which means port 1 to port 200, port 80.
func (o NetworkAclIngressAclEntryOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The priority of entry.
func (o NetworkAclIngressAclEntryOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The protocol of entry, default is `all`. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`.
func (o NetworkAclIngressAclEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The SourceCidrIp of entry.
func (o NetworkAclIngressAclEntryOutput) SourceCidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.SourceCidrIp }).(pulumi.StringPtrOutput)
}

type NetworkAclIngressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclIngressAclEntryArrayOutput) ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclIngressAclEntryArrayOutput) ToNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclIngressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclIngressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclIngressAclEntry {
		return vs[0].([]NetworkAclIngressAclEntry)[vs[1].(int)]
	}).(NetworkAclIngressAclEntryOutput)
}

type NetworkAclTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkAclTagInput is an input type that accepts NetworkAclTagArgs and NetworkAclTagOutput values.
// You can construct a concrete instance of `NetworkAclTagInput` via:
//
//	NetworkAclTagArgs{...}
type NetworkAclTagInput interface {
	pulumi.Input

	ToNetworkAclTagOutput() NetworkAclTagOutput
	ToNetworkAclTagOutputWithContext(context.Context) NetworkAclTagOutput
}

type NetworkAclTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkAclTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclTag)(nil)).Elem()
}

func (i NetworkAclTagArgs) ToNetworkAclTagOutput() NetworkAclTagOutput {
	return i.ToNetworkAclTagOutputWithContext(context.Background())
}

func (i NetworkAclTagArgs) ToNetworkAclTagOutputWithContext(ctx context.Context) NetworkAclTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclTagOutput)
}

// NetworkAclTagArrayInput is an input type that accepts NetworkAclTagArray and NetworkAclTagArrayOutput values.
// You can construct a concrete instance of `NetworkAclTagArrayInput` via:
//
//	NetworkAclTagArray{ NetworkAclTagArgs{...} }
type NetworkAclTagArrayInput interface {
	pulumi.Input

	ToNetworkAclTagArrayOutput() NetworkAclTagArrayOutput
	ToNetworkAclTagArrayOutputWithContext(context.Context) NetworkAclTagArrayOutput
}

type NetworkAclTagArray []NetworkAclTagInput

func (NetworkAclTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclTag)(nil)).Elem()
}

func (i NetworkAclTagArray) ToNetworkAclTagArrayOutput() NetworkAclTagArrayOutput {
	return i.ToNetworkAclTagArrayOutputWithContext(context.Background())
}

func (i NetworkAclTagArray) ToNetworkAclTagArrayOutputWithContext(ctx context.Context) NetworkAclTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclTagArrayOutput)
}

type NetworkAclTagOutput struct{ *pulumi.OutputState }

func (NetworkAclTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclTag)(nil)).Elem()
}

func (o NetworkAclTagOutput) ToNetworkAclTagOutput() NetworkAclTagOutput {
	return o
}

func (o NetworkAclTagOutput) ToNetworkAclTagOutputWithContext(ctx context.Context) NetworkAclTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkAclTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkAclTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkAclTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclTag)(nil)).Elem()
}

func (o NetworkAclTagArrayOutput) ToNetworkAclTagArrayOutput() NetworkAclTagArrayOutput {
	return o
}

func (o NetworkAclTagArrayOutput) ToNetworkAclTagArrayOutputWithContext(ctx context.Context) NetworkAclTagArrayOutput {
	return o
}

func (o NetworkAclTagArrayOutput) Index(i pulumi.IntInput) NetworkAclTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclTag {
		return vs[0].([]NetworkAclTag)[vs[1].(int)]
	}).(NetworkAclTagOutput)
}

type NetworkAclsNetworkAcl struct {
	// The count of Network acl entry.
	AclEntryCount int `pulumi:"aclEntryCount"`
	// Creation time of Network Acl.
	CreationTime string `pulumi:"creationTime"`
	// The description of entry.
	Description string `pulumi:"description"`
	// The egress entries info of Network Acl.
	EgressAclEntries []NetworkAclsNetworkAclEgressAclEntry `pulumi:"egressAclEntries"`
	// The ID of Network Acl.
	Id string `pulumi:"id"`
	// The ingress entries info of Network Acl.
	IngressAclEntries []NetworkAclsNetworkAclIngressAclEntry `pulumi:"ingressAclEntries"`
	// The ID of Network Acl.
	NetworkAclId string `pulumi:"networkAclId"`
	// The name of Network Acl.
	NetworkAclName string `pulumi:"networkAclName"`
	// The project name of the network acl.
	ProjectName string `pulumi:"projectName"`
	// The resources info of Network Acl.
	Resources []NetworkAclsNetworkAclResource `pulumi:"resources"`
	// The Status of Network Acl.
	Status string `pulumi:"status"`
	// Tags.
	Tags []NetworkAclsNetworkAclTag `pulumi:"tags"`
	// Update time of Network Acl.
	UpdateTime string `pulumi:"updateTime"`
	// The vpc id of Network Acl.
	VpcId string `pulumi:"vpcId"`
}

// NetworkAclsNetworkAclInput is an input type that accepts NetworkAclsNetworkAclArgs and NetworkAclsNetworkAclOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclInput` via:
//
//	NetworkAclsNetworkAclArgs{...}
type NetworkAclsNetworkAclInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclOutput() NetworkAclsNetworkAclOutput
	ToNetworkAclsNetworkAclOutputWithContext(context.Context) NetworkAclsNetworkAclOutput
}

type NetworkAclsNetworkAclArgs struct {
	// The count of Network acl entry.
	AclEntryCount pulumi.IntInput `pulumi:"aclEntryCount"`
	// Creation time of Network Acl.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The egress entries info of Network Acl.
	EgressAclEntries NetworkAclsNetworkAclEgressAclEntryArrayInput `pulumi:"egressAclEntries"`
	// The ID of Network Acl.
	Id pulumi.StringInput `pulumi:"id"`
	// The ingress entries info of Network Acl.
	IngressAclEntries NetworkAclsNetworkAclIngressAclEntryArrayInput `pulumi:"ingressAclEntries"`
	// The ID of Network Acl.
	NetworkAclId pulumi.StringInput `pulumi:"networkAclId"`
	// The name of Network Acl.
	NetworkAclName pulumi.StringInput `pulumi:"networkAclName"`
	// The project name of the network acl.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The resources info of Network Acl.
	Resources NetworkAclsNetworkAclResourceArrayInput `pulumi:"resources"`
	// The Status of Network Acl.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags NetworkAclsNetworkAclTagArrayInput `pulumi:"tags"`
	// Update time of Network Acl.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The vpc id of Network Acl.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (NetworkAclsNetworkAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAcl)(nil)).Elem()
}

func (i NetworkAclsNetworkAclArgs) ToNetworkAclsNetworkAclOutput() NetworkAclsNetworkAclOutput {
	return i.ToNetworkAclsNetworkAclOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclArgs) ToNetworkAclsNetworkAclOutputWithContext(ctx context.Context) NetworkAclsNetworkAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclOutput)
}

// NetworkAclsNetworkAclArrayInput is an input type that accepts NetworkAclsNetworkAclArray and NetworkAclsNetworkAclArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclArrayInput` via:
//
//	NetworkAclsNetworkAclArray{ NetworkAclsNetworkAclArgs{...} }
type NetworkAclsNetworkAclArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclArrayOutput() NetworkAclsNetworkAclArrayOutput
	ToNetworkAclsNetworkAclArrayOutputWithContext(context.Context) NetworkAclsNetworkAclArrayOutput
}

type NetworkAclsNetworkAclArray []NetworkAclsNetworkAclInput

func (NetworkAclsNetworkAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAcl)(nil)).Elem()
}

func (i NetworkAclsNetworkAclArray) ToNetworkAclsNetworkAclArrayOutput() NetworkAclsNetworkAclArrayOutput {
	return i.ToNetworkAclsNetworkAclArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclArray) ToNetworkAclsNetworkAclArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclArrayOutput)
}

type NetworkAclsNetworkAclOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAcl)(nil)).Elem()
}

func (o NetworkAclsNetworkAclOutput) ToNetworkAclsNetworkAclOutput() NetworkAclsNetworkAclOutput {
	return o
}

func (o NetworkAclsNetworkAclOutput) ToNetworkAclsNetworkAclOutputWithContext(ctx context.Context) NetworkAclsNetworkAclOutput {
	return o
}

// The count of Network acl entry.
func (o NetworkAclsNetworkAclOutput) AclEntryCount() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) int { return v.AclEntryCount }).(pulumi.IntOutput)
}

// Creation time of Network Acl.
func (o NetworkAclsNetworkAclOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of entry.
func (o NetworkAclsNetworkAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The egress entries info of Network Acl.
func (o NetworkAclsNetworkAclOutput) EgressAclEntries() NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) []NetworkAclsNetworkAclEgressAclEntry { return v.EgressAclEntries }).(NetworkAclsNetworkAclEgressAclEntryArrayOutput)
}

// The ID of Network Acl.
func (o NetworkAclsNetworkAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.Id }).(pulumi.StringOutput)
}

// The ingress entries info of Network Acl.
func (o NetworkAclsNetworkAclOutput) IngressAclEntries() NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) []NetworkAclsNetworkAclIngressAclEntry { return v.IngressAclEntries }).(NetworkAclsNetworkAclIngressAclEntryArrayOutput)
}

// The ID of Network Acl.
func (o NetworkAclsNetworkAclOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// The name of Network Acl.
func (o NetworkAclsNetworkAclOutput) NetworkAclName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.NetworkAclName }).(pulumi.StringOutput)
}

// The project name of the network acl.
func (o NetworkAclsNetworkAclOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The resources info of Network Acl.
func (o NetworkAclsNetworkAclOutput) Resources() NetworkAclsNetworkAclResourceArrayOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) []NetworkAclsNetworkAclResource { return v.Resources }).(NetworkAclsNetworkAclResourceArrayOutput)
}

// The Status of Network Acl.
func (o NetworkAclsNetworkAclOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o NetworkAclsNetworkAclOutput) Tags() NetworkAclsNetworkAclTagArrayOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) []NetworkAclsNetworkAclTag { return v.Tags }).(NetworkAclsNetworkAclTagArrayOutput)
}

// Update time of Network Acl.
func (o NetworkAclsNetworkAclOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The vpc id of Network Acl.
func (o NetworkAclsNetworkAclOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.VpcId }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAcl)(nil)).Elem()
}

func (o NetworkAclsNetworkAclArrayOutput) ToNetworkAclsNetworkAclArrayOutput() NetworkAclsNetworkAclArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclArrayOutput) ToNetworkAclsNetworkAclArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAcl {
		return vs[0].([]NetworkAclsNetworkAcl)[vs[1].(int)]
	}).(NetworkAclsNetworkAclOutput)
}

type NetworkAclsNetworkAclEgressAclEntry struct {
	// The description of entry.
	Description string `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp string `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName string `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy string `pulumi:"policy"`
	// The port of entry.
	Port string `pulumi:"port"`
	// The priority of entry.
	Priority int `pulumi:"priority"`
	// The protocol of entry.
	Protocol string `pulumi:"protocol"`
}

// NetworkAclsNetworkAclEgressAclEntryInput is an input type that accepts NetworkAclsNetworkAclEgressAclEntryArgs and NetworkAclsNetworkAclEgressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclEgressAclEntryInput` via:
//
//	NetworkAclsNetworkAclEgressAclEntryArgs{...}
type NetworkAclsNetworkAclEgressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclEgressAclEntryOutput() NetworkAclsNetworkAclEgressAclEntryOutput
	ToNetworkAclsNetworkAclEgressAclEntryOutputWithContext(context.Context) NetworkAclsNetworkAclEgressAclEntryOutput
}

type NetworkAclsNetworkAclEgressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp pulumi.StringInput `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringInput `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The port of entry.
	Port pulumi.StringInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of entry.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (NetworkAclsNetworkAclEgressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclsNetworkAclEgressAclEntryArgs) ToNetworkAclsNetworkAclEgressAclEntryOutput() NetworkAclsNetworkAclEgressAclEntryOutput {
	return i.ToNetworkAclsNetworkAclEgressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclEgressAclEntryArgs) ToNetworkAclsNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclsNetworkAclEgressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclEgressAclEntryOutput)
}

// NetworkAclsNetworkAclEgressAclEntryArrayInput is an input type that accepts NetworkAclsNetworkAclEgressAclEntryArray and NetworkAclsNetworkAclEgressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclEgressAclEntryArrayInput` via:
//
//	NetworkAclsNetworkAclEgressAclEntryArray{ NetworkAclsNetworkAclEgressAclEntryArgs{...} }
type NetworkAclsNetworkAclEgressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclEgressAclEntryArrayOutput() NetworkAclsNetworkAclEgressAclEntryArrayOutput
	ToNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(context.Context) NetworkAclsNetworkAclEgressAclEntryArrayOutput
}

type NetworkAclsNetworkAclEgressAclEntryArray []NetworkAclsNetworkAclEgressAclEntryInput

func (NetworkAclsNetworkAclEgressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclsNetworkAclEgressAclEntryArray) ToNetworkAclsNetworkAclEgressAclEntryArrayOutput() NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return i.ToNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclEgressAclEntryArray) ToNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclEgressAclEntryArrayOutput)
}

type NetworkAclsNetworkAclEgressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclEgressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclsNetworkAclEgressAclEntryOutput) ToNetworkAclsNetworkAclEgressAclEntryOutput() NetworkAclsNetworkAclEgressAclEntryOutput {
	return o
}

func (o NetworkAclsNetworkAclEgressAclEntryOutput) ToNetworkAclsNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclsNetworkAclEgressAclEntryOutput {
	return o
}

// The description of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The DestinationCidrIp of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) DestinationCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.DestinationCidrIp }).(pulumi.StringOutput)
}

// The id of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) NetworkAclEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.NetworkAclEntryId }).(pulumi.StringOutput)
}

// The name of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) NetworkAclEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.NetworkAclEntryName }).(pulumi.StringOutput)
}

// The policy of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.Policy }).(pulumi.StringOutput)
}

// The port of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.Port }).(pulumi.StringOutput)
}

// The priority of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclEgressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclEgressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclsNetworkAclEgressAclEntryArrayOutput) ToNetworkAclsNetworkAclEgressAclEntryArrayOutput() NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclEgressAclEntryArrayOutput) ToNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclEgressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclEgressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAclEgressAclEntry {
		return vs[0].([]NetworkAclsNetworkAclEgressAclEntry)[vs[1].(int)]
	}).(NetworkAclsNetworkAclEgressAclEntryOutput)
}

type NetworkAclsNetworkAclIngressAclEntry struct {
	// The description of entry.
	Description string `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName string `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy string `pulumi:"policy"`
	// The port of entry.
	Port string `pulumi:"port"`
	// The priority of entry.
	Priority int `pulumi:"priority"`
	// The protocol of entry.
	Protocol string `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp string `pulumi:"sourceCidrIp"`
}

// NetworkAclsNetworkAclIngressAclEntryInput is an input type that accepts NetworkAclsNetworkAclIngressAclEntryArgs and NetworkAclsNetworkAclIngressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclIngressAclEntryInput` via:
//
//	NetworkAclsNetworkAclIngressAclEntryArgs{...}
type NetworkAclsNetworkAclIngressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclIngressAclEntryOutput() NetworkAclsNetworkAclIngressAclEntryOutput
	ToNetworkAclsNetworkAclIngressAclEntryOutputWithContext(context.Context) NetworkAclsNetworkAclIngressAclEntryOutput
}

type NetworkAclsNetworkAclIngressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringInput `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The port of entry.
	Port pulumi.StringInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of entry.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp pulumi.StringInput `pulumi:"sourceCidrIp"`
}

func (NetworkAclsNetworkAclIngressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclsNetworkAclIngressAclEntryArgs) ToNetworkAclsNetworkAclIngressAclEntryOutput() NetworkAclsNetworkAclIngressAclEntryOutput {
	return i.ToNetworkAclsNetworkAclIngressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclIngressAclEntryArgs) ToNetworkAclsNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclsNetworkAclIngressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclIngressAclEntryOutput)
}

// NetworkAclsNetworkAclIngressAclEntryArrayInput is an input type that accepts NetworkAclsNetworkAclIngressAclEntryArray and NetworkAclsNetworkAclIngressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclIngressAclEntryArrayInput` via:
//
//	NetworkAclsNetworkAclIngressAclEntryArray{ NetworkAclsNetworkAclIngressAclEntryArgs{...} }
type NetworkAclsNetworkAclIngressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclIngressAclEntryArrayOutput() NetworkAclsNetworkAclIngressAclEntryArrayOutput
	ToNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(context.Context) NetworkAclsNetworkAclIngressAclEntryArrayOutput
}

type NetworkAclsNetworkAclIngressAclEntryArray []NetworkAclsNetworkAclIngressAclEntryInput

func (NetworkAclsNetworkAclIngressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclsNetworkAclIngressAclEntryArray) ToNetworkAclsNetworkAclIngressAclEntryArrayOutput() NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return i.ToNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclIngressAclEntryArray) ToNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclIngressAclEntryArrayOutput)
}

type NetworkAclsNetworkAclIngressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclIngressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclsNetworkAclIngressAclEntryOutput) ToNetworkAclsNetworkAclIngressAclEntryOutput() NetworkAclsNetworkAclIngressAclEntryOutput {
	return o
}

func (o NetworkAclsNetworkAclIngressAclEntryOutput) ToNetworkAclsNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclsNetworkAclIngressAclEntryOutput {
	return o
}

// The description of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The id of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) NetworkAclEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.NetworkAclEntryId }).(pulumi.StringOutput)
}

// The name of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) NetworkAclEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.NetworkAclEntryName }).(pulumi.StringOutput)
}

// The policy of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.Policy }).(pulumi.StringOutput)
}

// The port of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.Port }).(pulumi.StringOutput)
}

// The priority of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

// The SourceCidrIp of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) SourceCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.SourceCidrIp }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclIngressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclIngressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclsNetworkAclIngressAclEntryArrayOutput) ToNetworkAclsNetworkAclIngressAclEntryArrayOutput() NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclIngressAclEntryArrayOutput) ToNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclIngressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclIngressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAclIngressAclEntry {
		return vs[0].([]NetworkAclsNetworkAclIngressAclEntry)[vs[1].(int)]
	}).(NetworkAclsNetworkAclIngressAclEntryOutput)
}

type NetworkAclsNetworkAclResource struct {
	// The resource id of Network Acl.
	ResourceId string `pulumi:"resourceId"`
	// The Status of Network Acl.
	Status string `pulumi:"status"`
}

// NetworkAclsNetworkAclResourceInput is an input type that accepts NetworkAclsNetworkAclResourceArgs and NetworkAclsNetworkAclResourceOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclResourceInput` via:
//
//	NetworkAclsNetworkAclResourceArgs{...}
type NetworkAclsNetworkAclResourceInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclResourceOutput() NetworkAclsNetworkAclResourceOutput
	ToNetworkAclsNetworkAclResourceOutputWithContext(context.Context) NetworkAclsNetworkAclResourceOutput
}

type NetworkAclsNetworkAclResourceArgs struct {
	// The resource id of Network Acl.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The Status of Network Acl.
	Status pulumi.StringInput `pulumi:"status"`
}

func (NetworkAclsNetworkAclResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclResource)(nil)).Elem()
}

func (i NetworkAclsNetworkAclResourceArgs) ToNetworkAclsNetworkAclResourceOutput() NetworkAclsNetworkAclResourceOutput {
	return i.ToNetworkAclsNetworkAclResourceOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclResourceArgs) ToNetworkAclsNetworkAclResourceOutputWithContext(ctx context.Context) NetworkAclsNetworkAclResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclResourceOutput)
}

// NetworkAclsNetworkAclResourceArrayInput is an input type that accepts NetworkAclsNetworkAclResourceArray and NetworkAclsNetworkAclResourceArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclResourceArrayInput` via:
//
//	NetworkAclsNetworkAclResourceArray{ NetworkAclsNetworkAclResourceArgs{...} }
type NetworkAclsNetworkAclResourceArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclResourceArrayOutput() NetworkAclsNetworkAclResourceArrayOutput
	ToNetworkAclsNetworkAclResourceArrayOutputWithContext(context.Context) NetworkAclsNetworkAclResourceArrayOutput
}

type NetworkAclsNetworkAclResourceArray []NetworkAclsNetworkAclResourceInput

func (NetworkAclsNetworkAclResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclResource)(nil)).Elem()
}

func (i NetworkAclsNetworkAclResourceArray) ToNetworkAclsNetworkAclResourceArrayOutput() NetworkAclsNetworkAclResourceArrayOutput {
	return i.ToNetworkAclsNetworkAclResourceArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclResourceArray) ToNetworkAclsNetworkAclResourceArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclResourceArrayOutput)
}

type NetworkAclsNetworkAclResourceOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclResource)(nil)).Elem()
}

func (o NetworkAclsNetworkAclResourceOutput) ToNetworkAclsNetworkAclResourceOutput() NetworkAclsNetworkAclResourceOutput {
	return o
}

func (o NetworkAclsNetworkAclResourceOutput) ToNetworkAclsNetworkAclResourceOutputWithContext(ctx context.Context) NetworkAclsNetworkAclResourceOutput {
	return o
}

// The resource id of Network Acl.
func (o NetworkAclsNetworkAclResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclResource) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The Status of Network Acl.
func (o NetworkAclsNetworkAclResourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclResource) string { return v.Status }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclResourceArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclResource)(nil)).Elem()
}

func (o NetworkAclsNetworkAclResourceArrayOutput) ToNetworkAclsNetworkAclResourceArrayOutput() NetworkAclsNetworkAclResourceArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclResourceArrayOutput) ToNetworkAclsNetworkAclResourceArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclResourceArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclResourceArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAclResource {
		return vs[0].([]NetworkAclsNetworkAclResource)[vs[1].(int)]
	}).(NetworkAclsNetworkAclResourceOutput)
}

type NetworkAclsNetworkAclTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkAclsNetworkAclTagInput is an input type that accepts NetworkAclsNetworkAclTagArgs and NetworkAclsNetworkAclTagOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclTagInput` via:
//
//	NetworkAclsNetworkAclTagArgs{...}
type NetworkAclsNetworkAclTagInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclTagOutput() NetworkAclsNetworkAclTagOutput
	ToNetworkAclsNetworkAclTagOutputWithContext(context.Context) NetworkAclsNetworkAclTagOutput
}

type NetworkAclsNetworkAclTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkAclsNetworkAclTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclTag)(nil)).Elem()
}

func (i NetworkAclsNetworkAclTagArgs) ToNetworkAclsNetworkAclTagOutput() NetworkAclsNetworkAclTagOutput {
	return i.ToNetworkAclsNetworkAclTagOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclTagArgs) ToNetworkAclsNetworkAclTagOutputWithContext(ctx context.Context) NetworkAclsNetworkAclTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclTagOutput)
}

// NetworkAclsNetworkAclTagArrayInput is an input type that accepts NetworkAclsNetworkAclTagArray and NetworkAclsNetworkAclTagArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclTagArrayInput` via:
//
//	NetworkAclsNetworkAclTagArray{ NetworkAclsNetworkAclTagArgs{...} }
type NetworkAclsNetworkAclTagArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclTagArrayOutput() NetworkAclsNetworkAclTagArrayOutput
	ToNetworkAclsNetworkAclTagArrayOutputWithContext(context.Context) NetworkAclsNetworkAclTagArrayOutput
}

type NetworkAclsNetworkAclTagArray []NetworkAclsNetworkAclTagInput

func (NetworkAclsNetworkAclTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclTag)(nil)).Elem()
}

func (i NetworkAclsNetworkAclTagArray) ToNetworkAclsNetworkAclTagArrayOutput() NetworkAclsNetworkAclTagArrayOutput {
	return i.ToNetworkAclsNetworkAclTagArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclTagArray) ToNetworkAclsNetworkAclTagArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclTagArrayOutput)
}

type NetworkAclsNetworkAclTagOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclTag)(nil)).Elem()
}

func (o NetworkAclsNetworkAclTagOutput) ToNetworkAclsNetworkAclTagOutput() NetworkAclsNetworkAclTagOutput {
	return o
}

func (o NetworkAclsNetworkAclTagOutput) ToNetworkAclsNetworkAclTagOutputWithContext(ctx context.Context) NetworkAclsNetworkAclTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkAclsNetworkAclTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkAclsNetworkAclTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclTag)(nil)).Elem()
}

func (o NetworkAclsNetworkAclTagArrayOutput) ToNetworkAclsNetworkAclTagArrayOutput() NetworkAclsNetworkAclTagArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclTagArrayOutput) ToNetworkAclsNetworkAclTagArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclTagArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclTagArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAclTag {
		return vs[0].([]NetworkAclsNetworkAclTag)[vs[1].(int)]
	}).(NetworkAclsNetworkAclTagOutput)
}

type NetworkAclsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkAclsTagInput is an input type that accepts NetworkAclsTagArgs and NetworkAclsTagOutput values.
// You can construct a concrete instance of `NetworkAclsTagInput` via:
//
//	NetworkAclsTagArgs{...}
type NetworkAclsTagInput interface {
	pulumi.Input

	ToNetworkAclsTagOutput() NetworkAclsTagOutput
	ToNetworkAclsTagOutputWithContext(context.Context) NetworkAclsTagOutput
}

type NetworkAclsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkAclsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsTag)(nil)).Elem()
}

func (i NetworkAclsTagArgs) ToNetworkAclsTagOutput() NetworkAclsTagOutput {
	return i.ToNetworkAclsTagOutputWithContext(context.Background())
}

func (i NetworkAclsTagArgs) ToNetworkAclsTagOutputWithContext(ctx context.Context) NetworkAclsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsTagOutput)
}

// NetworkAclsTagArrayInput is an input type that accepts NetworkAclsTagArray and NetworkAclsTagArrayOutput values.
// You can construct a concrete instance of `NetworkAclsTagArrayInput` via:
//
//	NetworkAclsTagArray{ NetworkAclsTagArgs{...} }
type NetworkAclsTagArrayInput interface {
	pulumi.Input

	ToNetworkAclsTagArrayOutput() NetworkAclsTagArrayOutput
	ToNetworkAclsTagArrayOutputWithContext(context.Context) NetworkAclsTagArrayOutput
}

type NetworkAclsTagArray []NetworkAclsTagInput

func (NetworkAclsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsTag)(nil)).Elem()
}

func (i NetworkAclsTagArray) ToNetworkAclsTagArrayOutput() NetworkAclsTagArrayOutput {
	return i.ToNetworkAclsTagArrayOutputWithContext(context.Background())
}

func (i NetworkAclsTagArray) ToNetworkAclsTagArrayOutputWithContext(ctx context.Context) NetworkAclsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsTagArrayOutput)
}

type NetworkAclsTagOutput struct{ *pulumi.OutputState }

func (NetworkAclsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsTag)(nil)).Elem()
}

func (o NetworkAclsTagOutput) ToNetworkAclsTagOutput() NetworkAclsTagOutput {
	return o
}

func (o NetworkAclsTagOutput) ToNetworkAclsTagOutputWithContext(ctx context.Context) NetworkAclsTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkAclsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkAclsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkAclsTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsTag)(nil)).Elem()
}

func (o NetworkAclsTagArrayOutput) ToNetworkAclsTagArrayOutput() NetworkAclsTagArrayOutput {
	return o
}

func (o NetworkAclsTagArrayOutput) ToNetworkAclsTagArrayOutputWithContext(ctx context.Context) NetworkAclsTagArrayOutput {
	return o
}

func (o NetworkAclsTagArrayOutput) Index(i pulumi.IntInput) NetworkAclsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsTag {
		return vs[0].([]NetworkAclsTag)[vs[1].(int)]
	}).(NetworkAclsTagOutput)
}

type NetworkInterfaceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkInterfaceTagInput is an input type that accepts NetworkInterfaceTagArgs and NetworkInterfaceTagOutput values.
// You can construct a concrete instance of `NetworkInterfaceTagInput` via:
//
//	NetworkInterfaceTagArgs{...}
type NetworkInterfaceTagInput interface {
	pulumi.Input

	ToNetworkInterfaceTagOutput() NetworkInterfaceTagOutput
	ToNetworkInterfaceTagOutputWithContext(context.Context) NetworkInterfaceTagOutput
}

type NetworkInterfaceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTag)(nil)).Elem()
}

func (i NetworkInterfaceTagArgs) ToNetworkInterfaceTagOutput() NetworkInterfaceTagOutput {
	return i.ToNetworkInterfaceTagOutputWithContext(context.Background())
}

func (i NetworkInterfaceTagArgs) ToNetworkInterfaceTagOutputWithContext(ctx context.Context) NetworkInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTagOutput)
}

// NetworkInterfaceTagArrayInput is an input type that accepts NetworkInterfaceTagArray and NetworkInterfaceTagArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceTagArrayInput` via:
//
//	NetworkInterfaceTagArray{ NetworkInterfaceTagArgs{...} }
type NetworkInterfaceTagArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceTagArrayOutput() NetworkInterfaceTagArrayOutput
	ToNetworkInterfaceTagArrayOutputWithContext(context.Context) NetworkInterfaceTagArrayOutput
}

type NetworkInterfaceTagArray []NetworkInterfaceTagInput

func (NetworkInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTag)(nil)).Elem()
}

func (i NetworkInterfaceTagArray) ToNetworkInterfaceTagArrayOutput() NetworkInterfaceTagArrayOutput {
	return i.ToNetworkInterfaceTagArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceTagArray) ToNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) NetworkInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTagArrayOutput)
}

type NetworkInterfaceTagOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTag)(nil)).Elem()
}

func (o NetworkInterfaceTagOutput) ToNetworkInterfaceTagOutput() NetworkInterfaceTagOutput {
	return o
}

func (o NetworkInterfaceTagOutput) ToNetworkInterfaceTagOutputWithContext(ctx context.Context) NetworkInterfaceTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkInterfaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkInterfaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTag)(nil)).Elem()
}

func (o NetworkInterfaceTagArrayOutput) ToNetworkInterfaceTagArrayOutput() NetworkInterfaceTagArrayOutput {
	return o
}

func (o NetworkInterfaceTagArrayOutput) ToNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) NetworkInterfaceTagArrayOutput {
	return o
}

func (o NetworkInterfaceTagArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceTag {
		return vs[0].([]NetworkInterfaceTag)[vs[1].(int)]
	}).(NetworkInterfaceTagOutput)
}

type NetworkInterfacesNetworkInterface struct {
	// The account id of the ENI creator.
	AccountId string `pulumi:"accountId"`
	// The IP address of the EIP to which the ENI associates.
	AssociatedElasticIpAddress string `pulumi:"associatedElasticIpAddress"`
	// The allocation id of the EIP to which the ENI associates.
	AssociatedElasticIpId string `pulumi:"associatedElasticIpId"`
	// The create time of the ENI.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the ENI.
	Description string `pulumi:"description"`
	// The id of the device to which the ENI is bound.
	DeviceId string `pulumi:"deviceId"`
	// The id of the ENI.
	Id string `pulumi:"id"`
	// The IPv6 address list of the ENI.
	Ipv6Sets []string `pulumi:"ipv6Sets"`
	// The mac address of the ENI.
	MacAddress string `pulumi:"macAddress"`
	// The id of the ENI.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// A name of ENI.
	NetworkInterfaceName string `pulumi:"networkInterfaceName"`
	// The enable of port security.
	PortSecurityEnabled bool `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress string `pulumi:"primaryIpAddress"`
	// The IP address of secondary private network interface.
	PrivateIpSets []NetworkInterfacesNetworkInterfacePrivateIpSet `pulumi:"privateIpSets"`
	// The ProjectName of the ENI.
	ProjectName string `pulumi:"projectName"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Whether the network card has been authorized to be used by other account services.
	ServiceManaged bool `pulumi:"serviceManaged"`
	// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
	Status string `pulumi:"status"`
	// An id of the subnet to which the ENI is connected.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []NetworkInterfacesNetworkInterfaceTag `pulumi:"tags"`
	// A type of ENI, Optional choice contains `primary`, `secondary`.
	Type string `pulumi:"type"`
	// The last update time of the ENI.
	UpdatedAt string `pulumi:"updatedAt"`
	// An id of the virtual private cloud (VPC) to which the ENI belongs.
	VpcId string `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the ENI belongs.
	VpcName string `pulumi:"vpcName"`
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// NetworkInterfacesNetworkInterfaceInput is an input type that accepts NetworkInterfacesNetworkInterfaceArgs and NetworkInterfacesNetworkInterfaceOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfaceInput` via:
//
//	NetworkInterfacesNetworkInterfaceArgs{...}
type NetworkInterfacesNetworkInterfaceInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfaceOutput() NetworkInterfacesNetworkInterfaceOutput
	ToNetworkInterfacesNetworkInterfaceOutputWithContext(context.Context) NetworkInterfacesNetworkInterfaceOutput
}

type NetworkInterfacesNetworkInterfaceArgs struct {
	// The account id of the ENI creator.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP address of the EIP to which the ENI associates.
	AssociatedElasticIpAddress pulumi.StringInput `pulumi:"associatedElasticIpAddress"`
	// The allocation id of the EIP to which the ENI associates.
	AssociatedElasticIpId pulumi.StringInput `pulumi:"associatedElasticIpId"`
	// The create time of the ENI.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the ENI.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the device to which the ENI is bound.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// The id of the ENI.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv6 address list of the ENI.
	Ipv6Sets pulumi.StringArrayInput `pulumi:"ipv6Sets"`
	// The mac address of the ENI.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The id of the ENI.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// A name of ENI.
	NetworkInterfaceName pulumi.StringInput `pulumi:"networkInterfaceName"`
	// The enable of port security.
	PortSecurityEnabled pulumi.BoolInput `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress pulumi.StringInput `pulumi:"primaryIpAddress"`
	// The IP address of secondary private network interface.
	PrivateIpSets NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput `pulumi:"privateIpSets"`
	// The ProjectName of the ENI.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Whether the network card has been authorized to be used by other account services.
	ServiceManaged pulumi.BoolInput `pulumi:"serviceManaged"`
	// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// An id of the subnet to which the ENI is connected.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags NetworkInterfacesNetworkInterfaceTagArrayInput `pulumi:"tags"`
	// A type of ENI, Optional choice contains `primary`, `secondary`.
	Type pulumi.StringInput `pulumi:"type"`
	// The last update time of the ENI.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// An id of the virtual private cloud (VPC) to which the ENI belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the ENI belongs.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (NetworkInterfacesNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfaceArgs) ToNetworkInterfacesNetworkInterfaceOutput() NetworkInterfacesNetworkInterfaceOutput {
	return i.ToNetworkInterfacesNetworkInterfaceOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfaceArgs) ToNetworkInterfacesNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfaceOutput)
}

// NetworkInterfacesNetworkInterfaceArrayInput is an input type that accepts NetworkInterfacesNetworkInterfaceArray and NetworkInterfacesNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfaceArrayInput` via:
//
//	NetworkInterfacesNetworkInterfaceArray{ NetworkInterfacesNetworkInterfaceArgs{...} }
type NetworkInterfacesNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfaceArrayOutput() NetworkInterfacesNetworkInterfaceArrayOutput
	ToNetworkInterfacesNetworkInterfaceArrayOutputWithContext(context.Context) NetworkInterfacesNetworkInterfaceArrayOutput
}

type NetworkInterfacesNetworkInterfaceArray []NetworkInterfacesNetworkInterfaceInput

func (NetworkInterfacesNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfaceArray) ToNetworkInterfacesNetworkInterfaceArrayOutput() NetworkInterfacesNetworkInterfaceArrayOutput {
	return i.ToNetworkInterfacesNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfaceArray) ToNetworkInterfacesNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfaceArrayOutput)
}

type NetworkInterfacesNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfaceOutput) ToNetworkInterfacesNetworkInterfaceOutput() NetworkInterfacesNetworkInterfaceOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceOutput) ToNetworkInterfacesNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceOutput {
	return o
}

// The account id of the ENI creator.
func (o NetworkInterfacesNetworkInterfaceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP address of the EIP to which the ENI associates.
func (o NetworkInterfacesNetworkInterfaceOutput) AssociatedElasticIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.AssociatedElasticIpAddress }).(pulumi.StringOutput)
}

// The allocation id of the EIP to which the ENI associates.
func (o NetworkInterfacesNetworkInterfaceOutput) AssociatedElasticIpId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.AssociatedElasticIpId }).(pulumi.StringOutput)
}

// The create time of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the device to which the ENI is bound.
func (o NetworkInterfacesNetworkInterfaceOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.DeviceId }).(pulumi.StringOutput)
}

// The id of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 address list of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) Ipv6Sets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) []string { return v.Ipv6Sets }).(pulumi.StringArrayOutput)
}

// The mac address of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The id of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// A name of ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) NetworkInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.NetworkInterfaceName }).(pulumi.StringOutput)
}

// The enable of port security.
func (o NetworkInterfacesNetworkInterfaceOutput) PortSecurityEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) bool { return v.PortSecurityEnabled }).(pulumi.BoolOutput)
}

// The primary IP address of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) PrimaryIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.PrimaryIpAddress }).(pulumi.StringOutput)
}

// The IP address of secondary private network interface.
func (o NetworkInterfacesNetworkInterfaceOutput) PrivateIpSets() NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) []NetworkInterfacesNetworkInterfacePrivateIpSet {
		return v.PrivateIpSets
	}).(NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput)
}

// The ProjectName of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The list of the security group id to which the secondary ENI belongs.
func (o NetworkInterfacesNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Whether the network card has been authorized to be used by other account services.
func (o NetworkInterfacesNetworkInterfaceOutput) ServiceManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) bool { return v.ServiceManaged }).(pulumi.BoolOutput)
}

// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
func (o NetworkInterfacesNetworkInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.Status }).(pulumi.StringOutput)
}

// An id of the subnet to which the ENI is connected.
func (o NetworkInterfacesNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o NetworkInterfacesNetworkInterfaceOutput) Tags() NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) []NetworkInterfacesNetworkInterfaceTag { return v.Tags }).(NetworkInterfacesNetworkInterfaceTagArrayOutput)
}

// A type of ENI, Optional choice contains `primary`, `secondary`.
func (o NetworkInterfacesNetworkInterfaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.Type }).(pulumi.StringOutput)
}

// The last update time of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// An id of the virtual private cloud (VPC) to which the ENI belongs.
func (o NetworkInterfacesNetworkInterfaceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the virtual private cloud (VPC) to which the ENI belongs.
func (o NetworkInterfacesNetworkInterfaceOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.VpcName }).(pulumi.StringOutput)
}

// The zone ID.
func (o NetworkInterfacesNetworkInterfaceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.ZoneId }).(pulumi.StringOutput)
}

type NetworkInterfacesNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfaceArrayOutput) ToNetworkInterfacesNetworkInterfaceArrayOutput() NetworkInterfacesNetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceArrayOutput) ToNetworkInterfacesNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesNetworkInterface {
		return vs[0].([]NetworkInterfacesNetworkInterface)[vs[1].(int)]
	}).(NetworkInterfacesNetworkInterfaceOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSet struct {
	// The public IP that secondary private network IP associated with.
	AssociatedElasticIps []NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp `pulumi:"associatedElasticIps"`
	// Whether the network interface is primary IP address.
	Primary bool `pulumi:"primary"`
	// The secondary private network IP address of the network interface card.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
}

// NetworkInterfacesNetworkInterfacePrivateIpSetInput is an input type that accepts NetworkInterfacesNetworkInterfacePrivateIpSetArgs and NetworkInterfacesNetworkInterfacePrivateIpSetOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfacePrivateIpSetInput` via:
//
//	NetworkInterfacesNetworkInterfacePrivateIpSetArgs{...}
type NetworkInterfacesNetworkInterfacePrivateIpSetInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfacePrivateIpSetOutput() NetworkInterfacesNetworkInterfacePrivateIpSetOutput
	ToNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetOutput
}

type NetworkInterfacesNetworkInterfacePrivateIpSetArgs struct {
	// The public IP that secondary private network IP associated with.
	AssociatedElasticIps NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput `pulumi:"associatedElasticIps"`
	// Whether the network interface is primary IP address.
	Primary pulumi.BoolInput `pulumi:"primary"`
	// The secondary private network IP address of the network interface card.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
}

func (NetworkInterfacesNetworkInterfacePrivateIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetArgs) ToNetworkInterfacesNetworkInterfacePrivateIpSetOutput() NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return i.ToNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetArgs) ToNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfacePrivateIpSetOutput)
}

// NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput is an input type that accepts NetworkInterfacesNetworkInterfacePrivateIpSetArray and NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput` via:
//
//	NetworkInterfacesNetworkInterfacePrivateIpSetArray{ NetworkInterfacesNetworkInterfacePrivateIpSetArgs{...} }
type NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput
	ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput
}

type NetworkInterfacesNetworkInterfacePrivateIpSetArray []NetworkInterfacesNetworkInterfacePrivateIpSetInput

func (NetworkInterfacesNetworkInterfacePrivateIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetArray) ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return i.ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetArray) ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfacePrivateIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetOutput() NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return o
}

// The public IP that secondary private network IP associated with.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) AssociatedElasticIps() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSet) []NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp {
		return v.AssociatedElasticIps
	}).(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput)
}

// Whether the network interface is primary IP address.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSet) bool { return v.Primary }).(pulumi.BoolOutput)
}

// The secondary private network IP address of the network interface card.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSet) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesNetworkInterfacePrivateIpSet {
		return vs[0].([]NetworkInterfacesNetworkInterfacePrivateIpSet)[vs[1].(int)]
	}).(NetworkInterfacesNetworkInterfacePrivateIpSetOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp struct {
	// The public IP ID.
	AllocationId string `pulumi:"allocationId"`
	// The public IP address.
	EipAddress string `pulumi:"eipAddress"`
}

// NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput is an input type that accepts NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs and NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput` via:
//
//	NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{...}
type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput
	ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs struct {
	// The public IP ID.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// The public IP address.
	EipAddress pulumi.StringInput `pulumi:"eipAddress"`
}

func (NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return i.ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput)
}

// NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput is an input type that accepts NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray and NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput` via:
//
//	NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray{ NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{...} }
type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput
	ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray []NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput

func (NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return i.ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return o
}

// The public IP ID.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp) string { return v.AllocationId }).(pulumi.StringOutput)
}

// The public IP address.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp) string { return v.EipAddress }).(pulumi.StringOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp {
		return vs[0].([]NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)[vs[1].(int)]
	}).(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput)
}

type NetworkInterfacesNetworkInterfaceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkInterfacesNetworkInterfaceTagInput is an input type that accepts NetworkInterfacesNetworkInterfaceTagArgs and NetworkInterfacesNetworkInterfaceTagOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfaceTagInput` via:
//
//	NetworkInterfacesNetworkInterfaceTagArgs{...}
type NetworkInterfacesNetworkInterfaceTagInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfaceTagOutput() NetworkInterfacesNetworkInterfaceTagOutput
	ToNetworkInterfacesNetworkInterfaceTagOutputWithContext(context.Context) NetworkInterfacesNetworkInterfaceTagOutput
}

type NetworkInterfacesNetworkInterfaceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkInterfacesNetworkInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfaceTagArgs) ToNetworkInterfacesNetworkInterfaceTagOutput() NetworkInterfacesNetworkInterfaceTagOutput {
	return i.ToNetworkInterfacesNetworkInterfaceTagOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfaceTagArgs) ToNetworkInterfacesNetworkInterfaceTagOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfaceTagOutput)
}

// NetworkInterfacesNetworkInterfaceTagArrayInput is an input type that accepts NetworkInterfacesNetworkInterfaceTagArray and NetworkInterfacesNetworkInterfaceTagArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfaceTagArrayInput` via:
//
//	NetworkInterfacesNetworkInterfaceTagArray{ NetworkInterfacesNetworkInterfaceTagArgs{...} }
type NetworkInterfacesNetworkInterfaceTagArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfaceTagArrayOutput() NetworkInterfacesNetworkInterfaceTagArrayOutput
	ToNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(context.Context) NetworkInterfacesNetworkInterfaceTagArrayOutput
}

type NetworkInterfacesNetworkInterfaceTagArray []NetworkInterfacesNetworkInterfaceTagInput

func (NetworkInterfacesNetworkInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfaceTagArray) ToNetworkInterfacesNetworkInterfaceTagArrayOutput() NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return i.ToNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfaceTagArray) ToNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfaceTagArrayOutput)
}

type NetworkInterfacesNetworkInterfaceTagOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfaceTagOutput) ToNetworkInterfacesNetworkInterfaceTagOutput() NetworkInterfacesNetworkInterfaceTagOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceTagOutput) ToNetworkInterfacesNetworkInterfaceTagOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkInterfacesNetworkInterfaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkInterfacesNetworkInterfaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkInterfacesNetworkInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfaceTagArrayOutput) ToNetworkInterfacesNetworkInterfaceTagArrayOutput() NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceTagArrayOutput) ToNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceTagArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesNetworkInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesNetworkInterfaceTag {
		return vs[0].([]NetworkInterfacesNetworkInterfaceTag)[vs[1].(int)]
	}).(NetworkInterfacesNetworkInterfaceTagOutput)
}

type NetworkInterfacesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkInterfacesTagInput is an input type that accepts NetworkInterfacesTagArgs and NetworkInterfacesTagOutput values.
// You can construct a concrete instance of `NetworkInterfacesTagInput` via:
//
//	NetworkInterfacesTagArgs{...}
type NetworkInterfacesTagInput interface {
	pulumi.Input

	ToNetworkInterfacesTagOutput() NetworkInterfacesTagOutput
	ToNetworkInterfacesTagOutputWithContext(context.Context) NetworkInterfacesTagOutput
}

type NetworkInterfacesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkInterfacesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesTag)(nil)).Elem()
}

func (i NetworkInterfacesTagArgs) ToNetworkInterfacesTagOutput() NetworkInterfacesTagOutput {
	return i.ToNetworkInterfacesTagOutputWithContext(context.Background())
}

func (i NetworkInterfacesTagArgs) ToNetworkInterfacesTagOutputWithContext(ctx context.Context) NetworkInterfacesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesTagOutput)
}

// NetworkInterfacesTagArrayInput is an input type that accepts NetworkInterfacesTagArray and NetworkInterfacesTagArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesTagArrayInput` via:
//
//	NetworkInterfacesTagArray{ NetworkInterfacesTagArgs{...} }
type NetworkInterfacesTagArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesTagArrayOutput() NetworkInterfacesTagArrayOutput
	ToNetworkInterfacesTagArrayOutputWithContext(context.Context) NetworkInterfacesTagArrayOutput
}

type NetworkInterfacesTagArray []NetworkInterfacesTagInput

func (NetworkInterfacesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesTag)(nil)).Elem()
}

func (i NetworkInterfacesTagArray) ToNetworkInterfacesTagArrayOutput() NetworkInterfacesTagArrayOutput {
	return i.ToNetworkInterfacesTagArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesTagArray) ToNetworkInterfacesTagArrayOutputWithContext(ctx context.Context) NetworkInterfacesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesTagArrayOutput)
}

type NetworkInterfacesTagOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesTag)(nil)).Elem()
}

func (o NetworkInterfacesTagOutput) ToNetworkInterfacesTagOutput() NetworkInterfacesTagOutput {
	return o
}

func (o NetworkInterfacesTagOutput) ToNetworkInterfacesTagOutputWithContext(ctx context.Context) NetworkInterfacesTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkInterfacesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkInterfacesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkInterfacesTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesTag)(nil)).Elem()
}

func (o NetworkInterfacesTagArrayOutput) ToNetworkInterfacesTagArrayOutput() NetworkInterfacesTagArrayOutput {
	return o
}

func (o NetworkInterfacesTagArrayOutput) ToNetworkInterfacesTagArrayOutputWithContext(ctx context.Context) NetworkInterfacesTagArrayOutput {
	return o
}

func (o NetworkInterfacesTagArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesTag {
		return vs[0].([]NetworkInterfacesTag)[vs[1].(int)]
	}).(NetworkInterfacesTagOutput)
}

type PrefixListPrefixListAssociation struct {
	// Associated resource ID.
	ResourceId *string `pulumi:"resourceId"`
	// Related resource types.
	ResourceType *string `pulumi:"resourceType"`
}

// PrefixListPrefixListAssociationInput is an input type that accepts PrefixListPrefixListAssociationArgs and PrefixListPrefixListAssociationOutput values.
// You can construct a concrete instance of `PrefixListPrefixListAssociationInput` via:
//
//	PrefixListPrefixListAssociationArgs{...}
type PrefixListPrefixListAssociationInput interface {
	pulumi.Input

	ToPrefixListPrefixListAssociationOutput() PrefixListPrefixListAssociationOutput
	ToPrefixListPrefixListAssociationOutputWithContext(context.Context) PrefixListPrefixListAssociationOutput
}

type PrefixListPrefixListAssociationArgs struct {
	// Associated resource ID.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Related resource types.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (PrefixListPrefixListAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListPrefixListAssociation)(nil)).Elem()
}

func (i PrefixListPrefixListAssociationArgs) ToPrefixListPrefixListAssociationOutput() PrefixListPrefixListAssociationOutput {
	return i.ToPrefixListPrefixListAssociationOutputWithContext(context.Background())
}

func (i PrefixListPrefixListAssociationArgs) ToPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) PrefixListPrefixListAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListPrefixListAssociationOutput)
}

// PrefixListPrefixListAssociationArrayInput is an input type that accepts PrefixListPrefixListAssociationArray and PrefixListPrefixListAssociationArrayOutput values.
// You can construct a concrete instance of `PrefixListPrefixListAssociationArrayInput` via:
//
//	PrefixListPrefixListAssociationArray{ PrefixListPrefixListAssociationArgs{...} }
type PrefixListPrefixListAssociationArrayInput interface {
	pulumi.Input

	ToPrefixListPrefixListAssociationArrayOutput() PrefixListPrefixListAssociationArrayOutput
	ToPrefixListPrefixListAssociationArrayOutputWithContext(context.Context) PrefixListPrefixListAssociationArrayOutput
}

type PrefixListPrefixListAssociationArray []PrefixListPrefixListAssociationInput

func (PrefixListPrefixListAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListPrefixListAssociation)(nil)).Elem()
}

func (i PrefixListPrefixListAssociationArray) ToPrefixListPrefixListAssociationArrayOutput() PrefixListPrefixListAssociationArrayOutput {
	return i.ToPrefixListPrefixListAssociationArrayOutputWithContext(context.Background())
}

func (i PrefixListPrefixListAssociationArray) ToPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) PrefixListPrefixListAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListPrefixListAssociationArrayOutput)
}

type PrefixListPrefixListAssociationOutput struct{ *pulumi.OutputState }

func (PrefixListPrefixListAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListPrefixListAssociation)(nil)).Elem()
}

func (o PrefixListPrefixListAssociationOutput) ToPrefixListPrefixListAssociationOutput() PrefixListPrefixListAssociationOutput {
	return o
}

func (o PrefixListPrefixListAssociationOutput) ToPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) PrefixListPrefixListAssociationOutput {
	return o
}

// Associated resource ID.
func (o PrefixListPrefixListAssociationOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListPrefixListAssociation) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Related resource types.
func (o PrefixListPrefixListAssociationOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListPrefixListAssociation) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type PrefixListPrefixListAssociationArrayOutput struct{ *pulumi.OutputState }

func (PrefixListPrefixListAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListPrefixListAssociation)(nil)).Elem()
}

func (o PrefixListPrefixListAssociationArrayOutput) ToPrefixListPrefixListAssociationArrayOutput() PrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o PrefixListPrefixListAssociationArrayOutput) ToPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) PrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o PrefixListPrefixListAssociationArrayOutput) Index(i pulumi.IntInput) PrefixListPrefixListAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListPrefixListAssociation {
		return vs[0].([]PrefixListPrefixListAssociation)[vs[1].(int)]
	}).(PrefixListPrefixListAssociationOutput)
}

type PrefixListPrefixListEntry struct {
	// CIDR of prefix list entries.
	Cidr *string `pulumi:"cidr"`
	// Description of prefix list entries.
	Description *string `pulumi:"description"`
}

// PrefixListPrefixListEntryInput is an input type that accepts PrefixListPrefixListEntryArgs and PrefixListPrefixListEntryOutput values.
// You can construct a concrete instance of `PrefixListPrefixListEntryInput` via:
//
//	PrefixListPrefixListEntryArgs{...}
type PrefixListPrefixListEntryInput interface {
	pulumi.Input

	ToPrefixListPrefixListEntryOutput() PrefixListPrefixListEntryOutput
	ToPrefixListPrefixListEntryOutputWithContext(context.Context) PrefixListPrefixListEntryOutput
}

type PrefixListPrefixListEntryArgs struct {
	// CIDR of prefix list entries.
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Description of prefix list entries.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (PrefixListPrefixListEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListPrefixListEntry)(nil)).Elem()
}

func (i PrefixListPrefixListEntryArgs) ToPrefixListPrefixListEntryOutput() PrefixListPrefixListEntryOutput {
	return i.ToPrefixListPrefixListEntryOutputWithContext(context.Background())
}

func (i PrefixListPrefixListEntryArgs) ToPrefixListPrefixListEntryOutputWithContext(ctx context.Context) PrefixListPrefixListEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListPrefixListEntryOutput)
}

// PrefixListPrefixListEntryArrayInput is an input type that accepts PrefixListPrefixListEntryArray and PrefixListPrefixListEntryArrayOutput values.
// You can construct a concrete instance of `PrefixListPrefixListEntryArrayInput` via:
//
//	PrefixListPrefixListEntryArray{ PrefixListPrefixListEntryArgs{...} }
type PrefixListPrefixListEntryArrayInput interface {
	pulumi.Input

	ToPrefixListPrefixListEntryArrayOutput() PrefixListPrefixListEntryArrayOutput
	ToPrefixListPrefixListEntryArrayOutputWithContext(context.Context) PrefixListPrefixListEntryArrayOutput
}

type PrefixListPrefixListEntryArray []PrefixListPrefixListEntryInput

func (PrefixListPrefixListEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListPrefixListEntry)(nil)).Elem()
}

func (i PrefixListPrefixListEntryArray) ToPrefixListPrefixListEntryArrayOutput() PrefixListPrefixListEntryArrayOutput {
	return i.ToPrefixListPrefixListEntryArrayOutputWithContext(context.Background())
}

func (i PrefixListPrefixListEntryArray) ToPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListPrefixListEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListPrefixListEntryArrayOutput)
}

type PrefixListPrefixListEntryOutput struct{ *pulumi.OutputState }

func (PrefixListPrefixListEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListPrefixListEntry)(nil)).Elem()
}

func (o PrefixListPrefixListEntryOutput) ToPrefixListPrefixListEntryOutput() PrefixListPrefixListEntryOutput {
	return o
}

func (o PrefixListPrefixListEntryOutput) ToPrefixListPrefixListEntryOutputWithContext(ctx context.Context) PrefixListPrefixListEntryOutput {
	return o
}

// CIDR of prefix list entries.
func (o PrefixListPrefixListEntryOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListPrefixListEntry) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// Description of prefix list entries.
func (o PrefixListPrefixListEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListPrefixListEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type PrefixListPrefixListEntryArrayOutput struct{ *pulumi.OutputState }

func (PrefixListPrefixListEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListPrefixListEntry)(nil)).Elem()
}

func (o PrefixListPrefixListEntryArrayOutput) ToPrefixListPrefixListEntryArrayOutput() PrefixListPrefixListEntryArrayOutput {
	return o
}

func (o PrefixListPrefixListEntryArrayOutput) ToPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListPrefixListEntryArrayOutput {
	return o
}

func (o PrefixListPrefixListEntryArrayOutput) Index(i pulumi.IntInput) PrefixListPrefixListEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListPrefixListEntry {
		return vs[0].([]PrefixListPrefixListEntry)[vs[1].(int)]
	}).(PrefixListPrefixListEntryOutput)
}

type PrefixListTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// PrefixListTagInput is an input type that accepts PrefixListTagArgs and PrefixListTagOutput values.
// You can construct a concrete instance of `PrefixListTagInput` via:
//
//	PrefixListTagArgs{...}
type PrefixListTagInput interface {
	pulumi.Input

	ToPrefixListTagOutput() PrefixListTagOutput
	ToPrefixListTagOutputWithContext(context.Context) PrefixListTagOutput
}

type PrefixListTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PrefixListTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListTag)(nil)).Elem()
}

func (i PrefixListTagArgs) ToPrefixListTagOutput() PrefixListTagOutput {
	return i.ToPrefixListTagOutputWithContext(context.Background())
}

func (i PrefixListTagArgs) ToPrefixListTagOutputWithContext(ctx context.Context) PrefixListTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListTagOutput)
}

// PrefixListTagArrayInput is an input type that accepts PrefixListTagArray and PrefixListTagArrayOutput values.
// You can construct a concrete instance of `PrefixListTagArrayInput` via:
//
//	PrefixListTagArray{ PrefixListTagArgs{...} }
type PrefixListTagArrayInput interface {
	pulumi.Input

	ToPrefixListTagArrayOutput() PrefixListTagArrayOutput
	ToPrefixListTagArrayOutputWithContext(context.Context) PrefixListTagArrayOutput
}

type PrefixListTagArray []PrefixListTagInput

func (PrefixListTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListTag)(nil)).Elem()
}

func (i PrefixListTagArray) ToPrefixListTagArrayOutput() PrefixListTagArrayOutput {
	return i.ToPrefixListTagArrayOutputWithContext(context.Background())
}

func (i PrefixListTagArray) ToPrefixListTagArrayOutputWithContext(ctx context.Context) PrefixListTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListTagArrayOutput)
}

type PrefixListTagOutput struct{ *pulumi.OutputState }

func (PrefixListTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListTag)(nil)).Elem()
}

func (o PrefixListTagOutput) ToPrefixListTagOutput() PrefixListTagOutput {
	return o
}

func (o PrefixListTagOutput) ToPrefixListTagOutputWithContext(ctx context.Context) PrefixListTagOutput {
	return o
}

// The Key of Tags.
func (o PrefixListTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o PrefixListTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListTag) string { return v.Value }).(pulumi.StringOutput)
}

type PrefixListTagArrayOutput struct{ *pulumi.OutputState }

func (PrefixListTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListTag)(nil)).Elem()
}

func (o PrefixListTagArrayOutput) ToPrefixListTagArrayOutput() PrefixListTagArrayOutput {
	return o
}

func (o PrefixListTagArrayOutput) ToPrefixListTagArrayOutputWithContext(ctx context.Context) PrefixListTagArrayOutput {
	return o
}

func (o PrefixListTagArrayOutput) Index(i pulumi.IntInput) PrefixListTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListTag {
		return vs[0].([]PrefixListTag)[vs[1].(int)]
	}).(PrefixListTagOutput)
}

type PrefixListsPrefixList struct {
	// Number of associated resources for prefix list.
	AssociationCount int `pulumi:"associationCount"`
	// CIDR address block information for prefix list.
	Cidrs []string `pulumi:"cidrs"`
	// The creation time of the prefix list.
	CreationTime string `pulumi:"creationTime"`
	// Description.
	Description string `pulumi:"description"`
	// The id of the prefix list.
	Id string `pulumi:"id"`
	// IP version of prefix list.
	IpVersion string `pulumi:"ipVersion"`
	// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
	MaxEntries int `pulumi:"maxEntries"`
	// Collection of resources associated with VPC prefix list.
	PrefixListAssociations []PrefixListsPrefixListPrefixListAssociation `pulumi:"prefixListAssociations"`
	// The prefix list entries.
	PrefixListEntries []PrefixListsPrefixListPrefixListEntry `pulumi:"prefixListEntries"`
	// The prefix list id.
	PrefixListId string `pulumi:"prefixListId"`
	// A Name of prefix list.
	PrefixListName string `pulumi:"prefixListName"`
	// The status of the prefix list.
	Status string `pulumi:"status"`
	// The update time of the prefix list.
	UpdateTime string `pulumi:"updateTime"`
}

// PrefixListsPrefixListInput is an input type that accepts PrefixListsPrefixListArgs and PrefixListsPrefixListOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListInput` via:
//
//	PrefixListsPrefixListArgs{...}
type PrefixListsPrefixListInput interface {
	pulumi.Input

	ToPrefixListsPrefixListOutput() PrefixListsPrefixListOutput
	ToPrefixListsPrefixListOutputWithContext(context.Context) PrefixListsPrefixListOutput
}

type PrefixListsPrefixListArgs struct {
	// Number of associated resources for prefix list.
	AssociationCount pulumi.IntInput `pulumi:"associationCount"`
	// CIDR address block information for prefix list.
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// The creation time of the prefix list.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the prefix list.
	Id pulumi.StringInput `pulumi:"id"`
	// IP version of prefix list.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
	MaxEntries pulumi.IntInput `pulumi:"maxEntries"`
	// Collection of resources associated with VPC prefix list.
	PrefixListAssociations PrefixListsPrefixListPrefixListAssociationArrayInput `pulumi:"prefixListAssociations"`
	// The prefix list entries.
	PrefixListEntries PrefixListsPrefixListPrefixListEntryArrayInput `pulumi:"prefixListEntries"`
	// The prefix list id.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
	// A Name of prefix list.
	PrefixListName pulumi.StringInput `pulumi:"prefixListName"`
	// The status of the prefix list.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of the prefix list.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (PrefixListsPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixList)(nil)).Elem()
}

func (i PrefixListsPrefixListArgs) ToPrefixListsPrefixListOutput() PrefixListsPrefixListOutput {
	return i.ToPrefixListsPrefixListOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListArgs) ToPrefixListsPrefixListOutputWithContext(ctx context.Context) PrefixListsPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListOutput)
}

// PrefixListsPrefixListArrayInput is an input type that accepts PrefixListsPrefixListArray and PrefixListsPrefixListArrayOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListArrayInput` via:
//
//	PrefixListsPrefixListArray{ PrefixListsPrefixListArgs{...} }
type PrefixListsPrefixListArrayInput interface {
	pulumi.Input

	ToPrefixListsPrefixListArrayOutput() PrefixListsPrefixListArrayOutput
	ToPrefixListsPrefixListArrayOutputWithContext(context.Context) PrefixListsPrefixListArrayOutput
}

type PrefixListsPrefixListArray []PrefixListsPrefixListInput

func (PrefixListsPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixList)(nil)).Elem()
}

func (i PrefixListsPrefixListArray) ToPrefixListsPrefixListArrayOutput() PrefixListsPrefixListArrayOutput {
	return i.ToPrefixListsPrefixListArrayOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListArray) ToPrefixListsPrefixListArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListArrayOutput)
}

type PrefixListsPrefixListOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixList)(nil)).Elem()
}

func (o PrefixListsPrefixListOutput) ToPrefixListsPrefixListOutput() PrefixListsPrefixListOutput {
	return o
}

func (o PrefixListsPrefixListOutput) ToPrefixListsPrefixListOutputWithContext(ctx context.Context) PrefixListsPrefixListOutput {
	return o
}

// Number of associated resources for prefix list.
func (o PrefixListsPrefixListOutput) AssociationCount() pulumi.IntOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) int { return v.AssociationCount }).(pulumi.IntOutput)
}

// CIDR address block information for prefix list.
func (o PrefixListsPrefixListOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// The creation time of the prefix list.
func (o PrefixListsPrefixListOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description.
func (o PrefixListsPrefixListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the prefix list.
func (o PrefixListsPrefixListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.Id }).(pulumi.StringOutput)
}

// IP version of prefix list.
func (o PrefixListsPrefixListOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
func (o PrefixListsPrefixListOutput) MaxEntries() pulumi.IntOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) int { return v.MaxEntries }).(pulumi.IntOutput)
}

// Collection of resources associated with VPC prefix list.
func (o PrefixListsPrefixListOutput) PrefixListAssociations() PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) []PrefixListsPrefixListPrefixListAssociation {
		return v.PrefixListAssociations
	}).(PrefixListsPrefixListPrefixListAssociationArrayOutput)
}

// The prefix list entries.
func (o PrefixListsPrefixListOutput) PrefixListEntries() PrefixListsPrefixListPrefixListEntryArrayOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) []PrefixListsPrefixListPrefixListEntry { return v.PrefixListEntries }).(PrefixListsPrefixListPrefixListEntryArrayOutput)
}

// The prefix list id.
func (o PrefixListsPrefixListOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.PrefixListId }).(pulumi.StringOutput)
}

// A Name of prefix list.
func (o PrefixListsPrefixListOutput) PrefixListName() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.PrefixListName }).(pulumi.StringOutput)
}

// The status of the prefix list.
func (o PrefixListsPrefixListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of the prefix list.
func (o PrefixListsPrefixListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type PrefixListsPrefixListArrayOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixList)(nil)).Elem()
}

func (o PrefixListsPrefixListArrayOutput) ToPrefixListsPrefixListArrayOutput() PrefixListsPrefixListArrayOutput {
	return o
}

func (o PrefixListsPrefixListArrayOutput) ToPrefixListsPrefixListArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListArrayOutput {
	return o
}

func (o PrefixListsPrefixListArrayOutput) Index(i pulumi.IntInput) PrefixListsPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListsPrefixList {
		return vs[0].([]PrefixListsPrefixList)[vs[1].(int)]
	}).(PrefixListsPrefixListOutput)
}

type PrefixListsPrefixListPrefixListAssociation struct {
	// Associated resource ID.
	ResourceId string `pulumi:"resourceId"`
	// Related resource types.
	ResourceType string `pulumi:"resourceType"`
}

// PrefixListsPrefixListPrefixListAssociationInput is an input type that accepts PrefixListsPrefixListPrefixListAssociationArgs and PrefixListsPrefixListPrefixListAssociationOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListPrefixListAssociationInput` via:
//
//	PrefixListsPrefixListPrefixListAssociationArgs{...}
type PrefixListsPrefixListPrefixListAssociationInput interface {
	pulumi.Input

	ToPrefixListsPrefixListPrefixListAssociationOutput() PrefixListsPrefixListPrefixListAssociationOutput
	ToPrefixListsPrefixListPrefixListAssociationOutputWithContext(context.Context) PrefixListsPrefixListPrefixListAssociationOutput
}

type PrefixListsPrefixListPrefixListAssociationArgs struct {
	// Associated resource ID.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Related resource types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (PrefixListsPrefixListPrefixListAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (i PrefixListsPrefixListPrefixListAssociationArgs) ToPrefixListsPrefixListPrefixListAssociationOutput() PrefixListsPrefixListPrefixListAssociationOutput {
	return i.ToPrefixListsPrefixListPrefixListAssociationOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListPrefixListAssociationArgs) ToPrefixListsPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListPrefixListAssociationOutput)
}

// PrefixListsPrefixListPrefixListAssociationArrayInput is an input type that accepts PrefixListsPrefixListPrefixListAssociationArray and PrefixListsPrefixListPrefixListAssociationArrayOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListPrefixListAssociationArrayInput` via:
//
//	PrefixListsPrefixListPrefixListAssociationArray{ PrefixListsPrefixListPrefixListAssociationArgs{...} }
type PrefixListsPrefixListPrefixListAssociationArrayInput interface {
	pulumi.Input

	ToPrefixListsPrefixListPrefixListAssociationArrayOutput() PrefixListsPrefixListPrefixListAssociationArrayOutput
	ToPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(context.Context) PrefixListsPrefixListPrefixListAssociationArrayOutput
}

type PrefixListsPrefixListPrefixListAssociationArray []PrefixListsPrefixListPrefixListAssociationInput

func (PrefixListsPrefixListPrefixListAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (i PrefixListsPrefixListPrefixListAssociationArray) ToPrefixListsPrefixListPrefixListAssociationArrayOutput() PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return i.ToPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListPrefixListAssociationArray) ToPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListPrefixListAssociationArrayOutput)
}

type PrefixListsPrefixListPrefixListAssociationOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListPrefixListAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (o PrefixListsPrefixListPrefixListAssociationOutput) ToPrefixListsPrefixListPrefixListAssociationOutput() PrefixListsPrefixListPrefixListAssociationOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListAssociationOutput) ToPrefixListsPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListAssociationOutput {
	return o
}

// Associated resource ID.
func (o PrefixListsPrefixListPrefixListAssociationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListAssociation) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Related resource types.
func (o PrefixListsPrefixListPrefixListAssociationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListAssociation) string { return v.ResourceType }).(pulumi.StringOutput)
}

type PrefixListsPrefixListPrefixListAssociationArrayOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListPrefixListAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (o PrefixListsPrefixListPrefixListAssociationArrayOutput) ToPrefixListsPrefixListPrefixListAssociationArrayOutput() PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListAssociationArrayOutput) ToPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListAssociationArrayOutput) Index(i pulumi.IntInput) PrefixListsPrefixListPrefixListAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListsPrefixListPrefixListAssociation {
		return vs[0].([]PrefixListsPrefixListPrefixListAssociation)[vs[1].(int)]
	}).(PrefixListsPrefixListPrefixListAssociationOutput)
}

type PrefixListsPrefixListPrefixListEntry struct {
	// CIDR address blocks for prefix list entries.
	Cidr string `pulumi:"cidr"`
	// Description.
	Description string `pulumi:"description"`
	// The prefix list id.
	PrefixListId string `pulumi:"prefixListId"`
}

// PrefixListsPrefixListPrefixListEntryInput is an input type that accepts PrefixListsPrefixListPrefixListEntryArgs and PrefixListsPrefixListPrefixListEntryOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListPrefixListEntryInput` via:
//
//	PrefixListsPrefixListPrefixListEntryArgs{...}
type PrefixListsPrefixListPrefixListEntryInput interface {
	pulumi.Input

	ToPrefixListsPrefixListPrefixListEntryOutput() PrefixListsPrefixListPrefixListEntryOutput
	ToPrefixListsPrefixListPrefixListEntryOutputWithContext(context.Context) PrefixListsPrefixListPrefixListEntryOutput
}

type PrefixListsPrefixListPrefixListEntryArgs struct {
	// CIDR address blocks for prefix list entries.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// The prefix list id.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
}

func (PrefixListsPrefixListPrefixListEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (i PrefixListsPrefixListPrefixListEntryArgs) ToPrefixListsPrefixListPrefixListEntryOutput() PrefixListsPrefixListPrefixListEntryOutput {
	return i.ToPrefixListsPrefixListPrefixListEntryOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListPrefixListEntryArgs) ToPrefixListsPrefixListPrefixListEntryOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListPrefixListEntryOutput)
}

// PrefixListsPrefixListPrefixListEntryArrayInput is an input type that accepts PrefixListsPrefixListPrefixListEntryArray and PrefixListsPrefixListPrefixListEntryArrayOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListPrefixListEntryArrayInput` via:
//
//	PrefixListsPrefixListPrefixListEntryArray{ PrefixListsPrefixListPrefixListEntryArgs{...} }
type PrefixListsPrefixListPrefixListEntryArrayInput interface {
	pulumi.Input

	ToPrefixListsPrefixListPrefixListEntryArrayOutput() PrefixListsPrefixListPrefixListEntryArrayOutput
	ToPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(context.Context) PrefixListsPrefixListPrefixListEntryArrayOutput
}

type PrefixListsPrefixListPrefixListEntryArray []PrefixListsPrefixListPrefixListEntryInput

func (PrefixListsPrefixListPrefixListEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (i PrefixListsPrefixListPrefixListEntryArray) ToPrefixListsPrefixListPrefixListEntryArrayOutput() PrefixListsPrefixListPrefixListEntryArrayOutput {
	return i.ToPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListPrefixListEntryArray) ToPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListPrefixListEntryArrayOutput)
}

type PrefixListsPrefixListPrefixListEntryOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListPrefixListEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (o PrefixListsPrefixListPrefixListEntryOutput) ToPrefixListsPrefixListPrefixListEntryOutput() PrefixListsPrefixListPrefixListEntryOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListEntryOutput) ToPrefixListsPrefixListPrefixListEntryOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListEntryOutput {
	return o
}

// CIDR address blocks for prefix list entries.
func (o PrefixListsPrefixListPrefixListEntryOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListEntry) string { return v.Cidr }).(pulumi.StringOutput)
}

// Description.
func (o PrefixListsPrefixListPrefixListEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The prefix list id.
func (o PrefixListsPrefixListPrefixListEntryOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListEntry) string { return v.PrefixListId }).(pulumi.StringOutput)
}

type PrefixListsPrefixListPrefixListEntryArrayOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListPrefixListEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (o PrefixListsPrefixListPrefixListEntryArrayOutput) ToPrefixListsPrefixListPrefixListEntryArrayOutput() PrefixListsPrefixListPrefixListEntryArrayOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListEntryArrayOutput) ToPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListEntryArrayOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListEntryArrayOutput) Index(i pulumi.IntInput) PrefixListsPrefixListPrefixListEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListsPrefixListPrefixListEntry {
		return vs[0].([]PrefixListsPrefixListPrefixListEntry)[vs[1].(int)]
	}).(PrefixListsPrefixListPrefixListEntryOutput)
}

type PrefixListsTagFilter struct {
	// The key of the tag.
	Key *string `pulumi:"key"`
	// The values of the tag.
	Values []string `pulumi:"values"`
}

// PrefixListsTagFilterInput is an input type that accepts PrefixListsTagFilterArgs and PrefixListsTagFilterOutput values.
// You can construct a concrete instance of `PrefixListsTagFilterInput` via:
//
//	PrefixListsTagFilterArgs{...}
type PrefixListsTagFilterInput interface {
	pulumi.Input

	ToPrefixListsTagFilterOutput() PrefixListsTagFilterOutput
	ToPrefixListsTagFilterOutputWithContext(context.Context) PrefixListsTagFilterOutput
}

type PrefixListsTagFilterArgs struct {
	// The key of the tag.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The values of the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PrefixListsTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsTagFilter)(nil)).Elem()
}

func (i PrefixListsTagFilterArgs) ToPrefixListsTagFilterOutput() PrefixListsTagFilterOutput {
	return i.ToPrefixListsTagFilterOutputWithContext(context.Background())
}

func (i PrefixListsTagFilterArgs) ToPrefixListsTagFilterOutputWithContext(ctx context.Context) PrefixListsTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsTagFilterOutput)
}

// PrefixListsTagFilterArrayInput is an input type that accepts PrefixListsTagFilterArray and PrefixListsTagFilterArrayOutput values.
// You can construct a concrete instance of `PrefixListsTagFilterArrayInput` via:
//
//	PrefixListsTagFilterArray{ PrefixListsTagFilterArgs{...} }
type PrefixListsTagFilterArrayInput interface {
	pulumi.Input

	ToPrefixListsTagFilterArrayOutput() PrefixListsTagFilterArrayOutput
	ToPrefixListsTagFilterArrayOutputWithContext(context.Context) PrefixListsTagFilterArrayOutput
}

type PrefixListsTagFilterArray []PrefixListsTagFilterInput

func (PrefixListsTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsTagFilter)(nil)).Elem()
}

func (i PrefixListsTagFilterArray) ToPrefixListsTagFilterArrayOutput() PrefixListsTagFilterArrayOutput {
	return i.ToPrefixListsTagFilterArrayOutputWithContext(context.Background())
}

func (i PrefixListsTagFilterArray) ToPrefixListsTagFilterArrayOutputWithContext(ctx context.Context) PrefixListsTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsTagFilterArrayOutput)
}

type PrefixListsTagFilterOutput struct{ *pulumi.OutputState }

func (PrefixListsTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsTagFilter)(nil)).Elem()
}

func (o PrefixListsTagFilterOutput) ToPrefixListsTagFilterOutput() PrefixListsTagFilterOutput {
	return o
}

func (o PrefixListsTagFilterOutput) ToPrefixListsTagFilterOutputWithContext(ctx context.Context) PrefixListsTagFilterOutput {
	return o
}

// The key of the tag.
func (o PrefixListsTagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListsTagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The values of the tag.
func (o PrefixListsTagFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrefixListsTagFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PrefixListsTagFilterArrayOutput struct{ *pulumi.OutputState }

func (PrefixListsTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsTagFilter)(nil)).Elem()
}

func (o PrefixListsTagFilterArrayOutput) ToPrefixListsTagFilterArrayOutput() PrefixListsTagFilterArrayOutput {
	return o
}

func (o PrefixListsTagFilterArrayOutput) ToPrefixListsTagFilterArrayOutputWithContext(ctx context.Context) PrefixListsTagFilterArrayOutput {
	return o
}

func (o PrefixListsTagFilterArrayOutput) Index(i pulumi.IntInput) PrefixListsTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListsTagFilter {
		return vs[0].([]PrefixListsTagFilter)[vs[1].(int)]
	}).(PrefixListsTagFilterOutput)
}

type RouteEntriesRouteEntry struct {
	// The description of the route entry.
	Description string `pulumi:"description"`
	// A destination CIDR block of route entry.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The id of the route entry.
	Id string `pulumi:"id"`
	// An id of next hop.
	NextHopId string `pulumi:"nextHopId"`
	// The name of the next hop.
	NextHopName string `pulumi:"nextHopName"`
	// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
	NextHopType string `pulumi:"nextHopType"`
	// The id of the route entry.
	RouteEntryId string `pulumi:"routeEntryId"`
	// A name of route entry.
	RouteEntryName string `pulumi:"routeEntryName"`
	// An id of route table.
	RouteTableId string `pulumi:"routeTableId"`
	// The status of the route entry.
	Status string `pulumi:"status"`
	// The type of the route entry.
	Type string `pulumi:"type"`
	// The id of the virtual private cloud (VPC) to which the route entry belongs.
	VpcId string `pulumi:"vpcId"`
}

// RouteEntriesRouteEntryInput is an input type that accepts RouteEntriesRouteEntryArgs and RouteEntriesRouteEntryOutput values.
// You can construct a concrete instance of `RouteEntriesRouteEntryInput` via:
//
//	RouteEntriesRouteEntryArgs{...}
type RouteEntriesRouteEntryInput interface {
	pulumi.Input

	ToRouteEntriesRouteEntryOutput() RouteEntriesRouteEntryOutput
	ToRouteEntriesRouteEntryOutputWithContext(context.Context) RouteEntriesRouteEntryOutput
}

type RouteEntriesRouteEntryArgs struct {
	// The description of the route entry.
	Description pulumi.StringInput `pulumi:"description"`
	// A destination CIDR block of route entry.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The id of the route entry.
	Id pulumi.StringInput `pulumi:"id"`
	// An id of next hop.
	NextHopId pulumi.StringInput `pulumi:"nextHopId"`
	// The name of the next hop.
	NextHopName pulumi.StringInput `pulumi:"nextHopName"`
	// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The id of the route entry.
	RouteEntryId pulumi.StringInput `pulumi:"routeEntryId"`
	// A name of route entry.
	RouteEntryName pulumi.StringInput `pulumi:"routeEntryName"`
	// An id of route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The status of the route entry.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the route entry.
	Type pulumi.StringInput `pulumi:"type"`
	// The id of the virtual private cloud (VPC) to which the route entry belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (RouteEntriesRouteEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesRouteEntry)(nil)).Elem()
}

func (i RouteEntriesRouteEntryArgs) ToRouteEntriesRouteEntryOutput() RouteEntriesRouteEntryOutput {
	return i.ToRouteEntriesRouteEntryOutputWithContext(context.Background())
}

func (i RouteEntriesRouteEntryArgs) ToRouteEntriesRouteEntryOutputWithContext(ctx context.Context) RouteEntriesRouteEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesRouteEntryOutput)
}

// RouteEntriesRouteEntryArrayInput is an input type that accepts RouteEntriesRouteEntryArray and RouteEntriesRouteEntryArrayOutput values.
// You can construct a concrete instance of `RouteEntriesRouteEntryArrayInput` via:
//
//	RouteEntriesRouteEntryArray{ RouteEntriesRouteEntryArgs{...} }
type RouteEntriesRouteEntryArrayInput interface {
	pulumi.Input

	ToRouteEntriesRouteEntryArrayOutput() RouteEntriesRouteEntryArrayOutput
	ToRouteEntriesRouteEntryArrayOutputWithContext(context.Context) RouteEntriesRouteEntryArrayOutput
}

type RouteEntriesRouteEntryArray []RouteEntriesRouteEntryInput

func (RouteEntriesRouteEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesRouteEntry)(nil)).Elem()
}

func (i RouteEntriesRouteEntryArray) ToRouteEntriesRouteEntryArrayOutput() RouteEntriesRouteEntryArrayOutput {
	return i.ToRouteEntriesRouteEntryArrayOutputWithContext(context.Background())
}

func (i RouteEntriesRouteEntryArray) ToRouteEntriesRouteEntryArrayOutputWithContext(ctx context.Context) RouteEntriesRouteEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesRouteEntryArrayOutput)
}

type RouteEntriesRouteEntryOutput struct{ *pulumi.OutputState }

func (RouteEntriesRouteEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesRouteEntry)(nil)).Elem()
}

func (o RouteEntriesRouteEntryOutput) ToRouteEntriesRouteEntryOutput() RouteEntriesRouteEntryOutput {
	return o
}

func (o RouteEntriesRouteEntryOutput) ToRouteEntriesRouteEntryOutputWithContext(ctx context.Context) RouteEntriesRouteEntryOutput {
	return o
}

// The description of the route entry.
func (o RouteEntriesRouteEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.Description }).(pulumi.StringOutput)
}

// A destination CIDR block of route entry.
func (o RouteEntriesRouteEntryOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The id of the route entry.
func (o RouteEntriesRouteEntryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.Id }).(pulumi.StringOutput)
}

// An id of next hop.
func (o RouteEntriesRouteEntryOutput) NextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.NextHopId }).(pulumi.StringOutput)
}

// The name of the next hop.
func (o RouteEntriesRouteEntryOutput) NextHopName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.NextHopName }).(pulumi.StringOutput)
}

// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
func (o RouteEntriesRouteEntryOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The id of the route entry.
func (o RouteEntriesRouteEntryOutput) RouteEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.RouteEntryId }).(pulumi.StringOutput)
}

// A name of route entry.
func (o RouteEntriesRouteEntryOutput) RouteEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.RouteEntryName }).(pulumi.StringOutput)
}

// An id of route table.
func (o RouteEntriesRouteEntryOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The status of the route entry.
func (o RouteEntriesRouteEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the route entry.
func (o RouteEntriesRouteEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.Type }).(pulumi.StringOutput)
}

// The id of the virtual private cloud (VPC) to which the route entry belongs.
func (o RouteEntriesRouteEntryOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.VpcId }).(pulumi.StringOutput)
}

type RouteEntriesRouteEntryArrayOutput struct{ *pulumi.OutputState }

func (RouteEntriesRouteEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesRouteEntry)(nil)).Elem()
}

func (o RouteEntriesRouteEntryArrayOutput) ToRouteEntriesRouteEntryArrayOutput() RouteEntriesRouteEntryArrayOutput {
	return o
}

func (o RouteEntriesRouteEntryArrayOutput) ToRouteEntriesRouteEntryArrayOutputWithContext(ctx context.Context) RouteEntriesRouteEntryArrayOutput {
	return o
}

func (o RouteEntriesRouteEntryArrayOutput) Index(i pulumi.IntInput) RouteEntriesRouteEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteEntriesRouteEntry {
		return vs[0].([]RouteEntriesRouteEntry)[vs[1].(int)]
	}).(RouteEntriesRouteEntryOutput)
}

type RouteTableTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// RouteTableTagInput is an input type that accepts RouteTableTagArgs and RouteTableTagOutput values.
// You can construct a concrete instance of `RouteTableTagInput` via:
//
//	RouteTableTagArgs{...}
type RouteTableTagInput interface {
	pulumi.Input

	ToRouteTableTagOutput() RouteTableTagOutput
	ToRouteTableTagOutputWithContext(context.Context) RouteTableTagOutput
}

type RouteTableTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableTag)(nil)).Elem()
}

func (i RouteTableTagArgs) ToRouteTableTagOutput() RouteTableTagOutput {
	return i.ToRouteTableTagOutputWithContext(context.Background())
}

func (i RouteTableTagArgs) ToRouteTableTagOutputWithContext(ctx context.Context) RouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTagOutput)
}

// RouteTableTagArrayInput is an input type that accepts RouteTableTagArray and RouteTableTagArrayOutput values.
// You can construct a concrete instance of `RouteTableTagArrayInput` via:
//
//	RouteTableTagArray{ RouteTableTagArgs{...} }
type RouteTableTagArrayInput interface {
	pulumi.Input

	ToRouteTableTagArrayOutput() RouteTableTagArrayOutput
	ToRouteTableTagArrayOutputWithContext(context.Context) RouteTableTagArrayOutput
}

type RouteTableTagArray []RouteTableTagInput

func (RouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableTag)(nil)).Elem()
}

func (i RouteTableTagArray) ToRouteTableTagArrayOutput() RouteTableTagArrayOutput {
	return i.ToRouteTableTagArrayOutputWithContext(context.Background())
}

func (i RouteTableTagArray) ToRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTagArrayOutput)
}

type RouteTableTagOutput struct{ *pulumi.OutputState }

func (RouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableTag)(nil)).Elem()
}

func (o RouteTableTagOutput) ToRouteTableTagOutput() RouteTableTagOutput {
	return o
}

func (o RouteTableTagOutput) ToRouteTableTagOutputWithContext(ctx context.Context) RouteTableTagOutput {
	return o
}

// The Key of Tags.
func (o RouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o RouteTableTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableTag) string { return v.Value }).(pulumi.StringOutput)
}

type RouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (RouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableTag)(nil)).Elem()
}

func (o RouteTableTagArrayOutput) ToRouteTableTagArrayOutput() RouteTableTagArrayOutput {
	return o
}

func (o RouteTableTagArrayOutput) ToRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTableTagArrayOutput {
	return o
}

func (o RouteTableTagArrayOutput) Index(i pulumi.IntInput) RouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableTag {
		return vs[0].([]RouteTableTag)[vs[1].(int)]
	}).(RouteTableTagOutput)
}

type RouteTablesRouteTable struct {
	// The account id of the route table creator.
	AccountId string `pulumi:"accountId"`
	// The create time of the route table.
	CreationTime string `pulumi:"creationTime"`
	// The description of the route table.
	Description string `pulumi:"description"`
	// The id of the route table.
	Id string `pulumi:"id"`
	// The ProjectName of the route table.
	ProjectName string `pulumi:"projectName"`
	// The id of the route table.
	RouteTableId string `pulumi:"routeTableId"`
	// A name of route table.
	RouteTableName string `pulumi:"routeTableName"`
	// The type of the route table.
	RouteTableType string `pulumi:"routeTableType"`
	// The list of the subnet ids to which the entry table associates.
	SubnetIds []string `pulumi:"subnetIds"`
	// Tags.
	Tags []RouteTablesRouteTableTag `pulumi:"tags"`
	// The last update time of the route table.
	UpdateTime string `pulumi:"updateTime"`
	// An id of VPC.
	VpcId string `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the route entry belongs.
	VpcName string `pulumi:"vpcName"`
}

// RouteTablesRouteTableInput is an input type that accepts RouteTablesRouteTableArgs and RouteTablesRouteTableOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableInput` via:
//
//	RouteTablesRouteTableArgs{...}
type RouteTablesRouteTableInput interface {
	pulumi.Input

	ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput
	ToRouteTablesRouteTableOutputWithContext(context.Context) RouteTablesRouteTableOutput
}

type RouteTablesRouteTableArgs struct {
	// The account id of the route table creator.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The create time of the route table.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the route table.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the route table.
	Id pulumi.StringInput `pulumi:"id"`
	// The ProjectName of the route table.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The id of the route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// A name of route table.
	RouteTableName pulumi.StringInput `pulumi:"routeTableName"`
	// The type of the route table.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
	// The list of the subnet ids to which the entry table associates.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Tags.
	Tags RouteTablesRouteTableTagArrayInput `pulumi:"tags"`
	// The last update time of the route table.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// An id of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the route entry belongs.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (RouteTablesRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTable)(nil)).Elem()
}

func (i RouteTablesRouteTableArgs) ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput {
	return i.ToRouteTablesRouteTableOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableArgs) ToRouteTablesRouteTableOutputWithContext(ctx context.Context) RouteTablesRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableOutput)
}

// RouteTablesRouteTableArrayInput is an input type that accepts RouteTablesRouteTableArray and RouteTablesRouteTableArrayOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableArrayInput` via:
//
//	RouteTablesRouteTableArray{ RouteTablesRouteTableArgs{...} }
type RouteTablesRouteTableArrayInput interface {
	pulumi.Input

	ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput
	ToRouteTablesRouteTableArrayOutputWithContext(context.Context) RouteTablesRouteTableArrayOutput
}

type RouteTablesRouteTableArray []RouteTablesRouteTableInput

func (RouteTablesRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTable)(nil)).Elem()
}

func (i RouteTablesRouteTableArray) ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput {
	return i.ToRouteTablesRouteTableArrayOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableArray) ToRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableArrayOutput)
}

type RouteTablesRouteTableOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTable)(nil)).Elem()
}

func (o RouteTablesRouteTableOutput) ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput {
	return o
}

func (o RouteTablesRouteTableOutput) ToRouteTablesRouteTableOutputWithContext(ctx context.Context) RouteTablesRouteTableOutput {
	return o
}

// The account id of the route table creator.
func (o RouteTablesRouteTableOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.AccountId }).(pulumi.StringOutput)
}

// The create time of the route table.
func (o RouteTablesRouteTableOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the route table.
func (o RouteTablesRouteTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the route table.
func (o RouteTablesRouteTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.Id }).(pulumi.StringOutput)
}

// The ProjectName of the route table.
func (o RouteTablesRouteTableOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The id of the route table.
func (o RouteTablesRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// A name of route table.
func (o RouteTablesRouteTableOutput) RouteTableName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.RouteTableName }).(pulumi.StringOutput)
}

// The type of the route table.
func (o RouteTablesRouteTableOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.RouteTableType }).(pulumi.StringOutput)
}

// The list of the subnet ids to which the entry table associates.
func (o RouteTablesRouteTableOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Tags.
func (o RouteTablesRouteTableOutput) Tags() RouteTablesRouteTableTagArrayOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) []RouteTablesRouteTableTag { return v.Tags }).(RouteTablesRouteTableTagArrayOutput)
}

// The last update time of the route table.
func (o RouteTablesRouteTableOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// An id of VPC.
func (o RouteTablesRouteTableOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the virtual private cloud (VPC) to which the route entry belongs.
func (o RouteTablesRouteTableOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.VpcName }).(pulumi.StringOutput)
}

type RouteTablesRouteTableArrayOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTable)(nil)).Elem()
}

func (o RouteTablesRouteTableArrayOutput) ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput {
	return o
}

func (o RouteTablesRouteTableArrayOutput) ToRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableArrayOutput {
	return o
}

func (o RouteTablesRouteTableArrayOutput) Index(i pulumi.IntInput) RouteTablesRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablesRouteTable {
		return vs[0].([]RouteTablesRouteTable)[vs[1].(int)]
	}).(RouteTablesRouteTableOutput)
}

type RouteTablesRouteTableTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// RouteTablesRouteTableTagInput is an input type that accepts RouteTablesRouteTableTagArgs and RouteTablesRouteTableTagOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableTagInput` via:
//
//	RouteTablesRouteTableTagArgs{...}
type RouteTablesRouteTableTagInput interface {
	pulumi.Input

	ToRouteTablesRouteTableTagOutput() RouteTablesRouteTableTagOutput
	ToRouteTablesRouteTableTagOutputWithContext(context.Context) RouteTablesRouteTableTagOutput
}

type RouteTablesRouteTableTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RouteTablesRouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTableTag)(nil)).Elem()
}

func (i RouteTablesRouteTableTagArgs) ToRouteTablesRouteTableTagOutput() RouteTablesRouteTableTagOutput {
	return i.ToRouteTablesRouteTableTagOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableTagArgs) ToRouteTablesRouteTableTagOutputWithContext(ctx context.Context) RouteTablesRouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableTagOutput)
}

// RouteTablesRouteTableTagArrayInput is an input type that accepts RouteTablesRouteTableTagArray and RouteTablesRouteTableTagArrayOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableTagArrayInput` via:
//
//	RouteTablesRouteTableTagArray{ RouteTablesRouteTableTagArgs{...} }
type RouteTablesRouteTableTagArrayInput interface {
	pulumi.Input

	ToRouteTablesRouteTableTagArrayOutput() RouteTablesRouteTableTagArrayOutput
	ToRouteTablesRouteTableTagArrayOutputWithContext(context.Context) RouteTablesRouteTableTagArrayOutput
}

type RouteTablesRouteTableTagArray []RouteTablesRouteTableTagInput

func (RouteTablesRouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTableTag)(nil)).Elem()
}

func (i RouteTablesRouteTableTagArray) ToRouteTablesRouteTableTagArrayOutput() RouteTablesRouteTableTagArrayOutput {
	return i.ToRouteTablesRouteTableTagArrayOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableTagArray) ToRouteTablesRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableTagArrayOutput)
}

type RouteTablesRouteTableTagOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTableTag)(nil)).Elem()
}

func (o RouteTablesRouteTableTagOutput) ToRouteTablesRouteTableTagOutput() RouteTablesRouteTableTagOutput {
	return o
}

func (o RouteTablesRouteTableTagOutput) ToRouteTablesRouteTableTagOutputWithContext(ctx context.Context) RouteTablesRouteTableTagOutput {
	return o
}

// The Key of Tags.
func (o RouteTablesRouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o RouteTablesRouteTableTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTableTag) string { return v.Value }).(pulumi.StringOutput)
}

type RouteTablesRouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTableTag)(nil)).Elem()
}

func (o RouteTablesRouteTableTagArrayOutput) ToRouteTablesRouteTableTagArrayOutput() RouteTablesRouteTableTagArrayOutput {
	return o
}

func (o RouteTablesRouteTableTagArrayOutput) ToRouteTablesRouteTableTagArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableTagArrayOutput {
	return o
}

func (o RouteTablesRouteTableTagArrayOutput) Index(i pulumi.IntInput) RouteTablesRouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablesRouteTableTag {
		return vs[0].([]RouteTablesRouteTableTag)[vs[1].(int)]
	}).(RouteTablesRouteTableTagOutput)
}

type RouteTablesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// RouteTablesTagInput is an input type that accepts RouteTablesTagArgs and RouteTablesTagOutput values.
// You can construct a concrete instance of `RouteTablesTagInput` via:
//
//	RouteTablesTagArgs{...}
type RouteTablesTagInput interface {
	pulumi.Input

	ToRouteTablesTagOutput() RouteTablesTagOutput
	ToRouteTablesTagOutputWithContext(context.Context) RouteTablesTagOutput
}

type RouteTablesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (RouteTablesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesTag)(nil)).Elem()
}

func (i RouteTablesTagArgs) ToRouteTablesTagOutput() RouteTablesTagOutput {
	return i.ToRouteTablesTagOutputWithContext(context.Background())
}

func (i RouteTablesTagArgs) ToRouteTablesTagOutputWithContext(ctx context.Context) RouteTablesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesTagOutput)
}

// RouteTablesTagArrayInput is an input type that accepts RouteTablesTagArray and RouteTablesTagArrayOutput values.
// You can construct a concrete instance of `RouteTablesTagArrayInput` via:
//
//	RouteTablesTagArray{ RouteTablesTagArgs{...} }
type RouteTablesTagArrayInput interface {
	pulumi.Input

	ToRouteTablesTagArrayOutput() RouteTablesTagArrayOutput
	ToRouteTablesTagArrayOutputWithContext(context.Context) RouteTablesTagArrayOutput
}

type RouteTablesTagArray []RouteTablesTagInput

func (RouteTablesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesTag)(nil)).Elem()
}

func (i RouteTablesTagArray) ToRouteTablesTagArrayOutput() RouteTablesTagArrayOutput {
	return i.ToRouteTablesTagArrayOutputWithContext(context.Background())
}

func (i RouteTablesTagArray) ToRouteTablesTagArrayOutputWithContext(ctx context.Context) RouteTablesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesTagArrayOutput)
}

type RouteTablesTagOutput struct{ *pulumi.OutputState }

func (RouteTablesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesTag)(nil)).Elem()
}

func (o RouteTablesTagOutput) ToRouteTablesTagOutput() RouteTablesTagOutput {
	return o
}

func (o RouteTablesTagOutput) ToRouteTablesTagOutputWithContext(ctx context.Context) RouteTablesTagOutput {
	return o
}

// The Key of Tags.
func (o RouteTablesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o RouteTablesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesTag) string { return v.Value }).(pulumi.StringOutput)
}

type RouteTablesTagArrayOutput struct{ *pulumi.OutputState }

func (RouteTablesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesTag)(nil)).Elem()
}

func (o RouteTablesTagArrayOutput) ToRouteTablesTagArrayOutput() RouteTablesTagArrayOutput {
	return o
}

func (o RouteTablesTagArrayOutput) ToRouteTablesTagArrayOutputWithContext(ctx context.Context) RouteTablesTagArrayOutput {
	return o
}

func (o RouteTablesTagArrayOutput) Index(i pulumi.IntInput) RouteTablesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablesTag {
		return vs[0].([]RouteTablesTag)[vs[1].(int)]
	}).(RouteTablesTagOutput)
}

type SecurityGroupRulesSecurityGroupRule struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp string `pulumi:"cidrIp"`
	// The creation time of security group rule.
	CreationTime string `pulumi:"creationTime"`
	// description of a group rule.
	Description string `pulumi:"description"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction string `pulumi:"direction"`
	// Access strategy.
	Policy string `pulumi:"policy"`
	// Port end of egress/ingress Rule.
	PortEnd int `pulumi:"portEnd"`
	// Port start of egress/ingress Rule.
	PortStart int `pulumi:"portStart"`
	// Priority of a security group rule.
	Priority int `pulumi:"priority"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol string `pulumi:"protocol"`
	// SecurityGroup ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId string `pulumi:"sourceGroupId"`
	// The update time of security group rule.
	UpdateTime string `pulumi:"updateTime"`
}

// SecurityGroupRulesSecurityGroupRuleInput is an input type that accepts SecurityGroupRulesSecurityGroupRuleArgs and SecurityGroupRulesSecurityGroupRuleOutput values.
// You can construct a concrete instance of `SecurityGroupRulesSecurityGroupRuleInput` via:
//
//	SecurityGroupRulesSecurityGroupRuleArgs{...}
type SecurityGroupRulesSecurityGroupRuleInput interface {
	pulumi.Input

	ToSecurityGroupRulesSecurityGroupRuleOutput() SecurityGroupRulesSecurityGroupRuleOutput
	ToSecurityGroupRulesSecurityGroupRuleOutputWithContext(context.Context) SecurityGroupRulesSecurityGroupRuleOutput
}

type SecurityGroupRulesSecurityGroupRuleArgs struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The creation time of security group rule.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// description of a group rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction pulumi.StringInput `pulumi:"direction"`
	// Access strategy.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Port end of egress/ingress Rule.
	PortEnd pulumi.IntInput `pulumi:"portEnd"`
	// Port start of egress/ingress Rule.
	PortStart pulumi.IntInput `pulumi:"portStart"`
	// Priority of a security group rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// SecurityGroup ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId pulumi.StringInput `pulumi:"sourceGroupId"`
	// The update time of security group rule.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (SecurityGroupRulesSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (i SecurityGroupRulesSecurityGroupRuleArgs) ToSecurityGroupRulesSecurityGroupRuleOutput() SecurityGroupRulesSecurityGroupRuleOutput {
	return i.ToSecurityGroupRulesSecurityGroupRuleOutputWithContext(context.Background())
}

func (i SecurityGroupRulesSecurityGroupRuleArgs) ToSecurityGroupRulesSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRulesSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRulesSecurityGroupRuleOutput)
}

// SecurityGroupRulesSecurityGroupRuleArrayInput is an input type that accepts SecurityGroupRulesSecurityGroupRuleArray and SecurityGroupRulesSecurityGroupRuleArrayOutput values.
// You can construct a concrete instance of `SecurityGroupRulesSecurityGroupRuleArrayInput` via:
//
//	SecurityGroupRulesSecurityGroupRuleArray{ SecurityGroupRulesSecurityGroupRuleArgs{...} }
type SecurityGroupRulesSecurityGroupRuleArrayInput interface {
	pulumi.Input

	ToSecurityGroupRulesSecurityGroupRuleArrayOutput() SecurityGroupRulesSecurityGroupRuleArrayOutput
	ToSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(context.Context) SecurityGroupRulesSecurityGroupRuleArrayOutput
}

type SecurityGroupRulesSecurityGroupRuleArray []SecurityGroupRulesSecurityGroupRuleInput

func (SecurityGroupRulesSecurityGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (i SecurityGroupRulesSecurityGroupRuleArray) ToSecurityGroupRulesSecurityGroupRuleArrayOutput() SecurityGroupRulesSecurityGroupRuleArrayOutput {
	return i.ToSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(context.Background())
}

func (i SecurityGroupRulesSecurityGroupRuleArray) ToSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(ctx context.Context) SecurityGroupRulesSecurityGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRulesSecurityGroupRuleArrayOutput)
}

type SecurityGroupRulesSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (SecurityGroupRulesSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (o SecurityGroupRulesSecurityGroupRuleOutput) ToSecurityGroupRulesSecurityGroupRuleOutput() SecurityGroupRulesSecurityGroupRuleOutput {
	return o
}

func (o SecurityGroupRulesSecurityGroupRuleOutput) ToSecurityGroupRulesSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRulesSecurityGroupRuleOutput {
	return o
}

// Cidr ip of egress/ingress Rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The creation time of security group rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.CreationTime }).(pulumi.StringOutput)
}

// description of a group rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.Description }).(pulumi.StringOutput)
}

// Direction of rule, ingress (inbound) or egress (outbound).
func (o SecurityGroupRulesSecurityGroupRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Access strategy.
func (o SecurityGroupRulesSecurityGroupRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.Policy }).(pulumi.StringOutput)
}

// Port end of egress/ingress Rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) PortEnd() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) int { return v.PortEnd }).(pulumi.IntOutput)
}

// Port start of egress/ingress Rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) PortStart() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) int { return v.PortStart }).(pulumi.IntOutput)
}

// Priority of a security group rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
func (o SecurityGroupRulesSecurityGroupRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// SecurityGroup ID.
func (o SecurityGroupRulesSecurityGroupRuleOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// ID of the source security group whose access permission you want to set.
func (o SecurityGroupRulesSecurityGroupRuleOutput) SourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.SourceGroupId }).(pulumi.StringOutput)
}

// The update time of security group rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type SecurityGroupRulesSecurityGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupRulesSecurityGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (o SecurityGroupRulesSecurityGroupRuleArrayOutput) ToSecurityGroupRulesSecurityGroupRuleArrayOutput() SecurityGroupRulesSecurityGroupRuleArrayOutput {
	return o
}

func (o SecurityGroupRulesSecurityGroupRuleArrayOutput) ToSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(ctx context.Context) SecurityGroupRulesSecurityGroupRuleArrayOutput {
	return o
}

func (o SecurityGroupRulesSecurityGroupRuleArrayOutput) Index(i pulumi.IntInput) SecurityGroupRulesSecurityGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupRulesSecurityGroupRule {
		return vs[0].([]SecurityGroupRulesSecurityGroupRule)[vs[1].(int)]
	}).(SecurityGroupRulesSecurityGroupRuleOutput)
}

type SecurityGroupTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SecurityGroupTagInput is an input type that accepts SecurityGroupTagArgs and SecurityGroupTagOutput values.
// You can construct a concrete instance of `SecurityGroupTagInput` via:
//
//	SecurityGroupTagArgs{...}
type SecurityGroupTagInput interface {
	pulumi.Input

	ToSecurityGroupTagOutput() SecurityGroupTagOutput
	ToSecurityGroupTagOutputWithContext(context.Context) SecurityGroupTagOutput
}

type SecurityGroupTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupTagArgs) ToSecurityGroupTagOutput() SecurityGroupTagOutput {
	return i.ToSecurityGroupTagOutputWithContext(context.Background())
}

func (i SecurityGroupTagArgs) ToSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupTagOutput)
}

// SecurityGroupTagArrayInput is an input type that accepts SecurityGroupTagArray and SecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `SecurityGroupTagArrayInput` via:
//
//	SecurityGroupTagArray{ SecurityGroupTagArgs{...} }
type SecurityGroupTagArrayInput interface {
	pulumi.Input

	ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput
	ToSecurityGroupTagArrayOutputWithContext(context.Context) SecurityGroupTagArrayOutput
}

type SecurityGroupTagArray []SecurityGroupTagInput

func (SecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupTagArray) ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput {
	return i.ToSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i SecurityGroupTagArray) ToSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupTagArrayOutput)
}

type SecurityGroupTagOutput struct{ *pulumi.OutputState }

func (SecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupTagOutput) ToSecurityGroupTagOutput() SecurityGroupTagOutput {
	return o
}

func (o SecurityGroupTagOutput) ToSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupTagOutput {
	return o
}

// The Key of Tags.
func (o SecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupTagArrayOutput) ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupTagArrayOutput) ToSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupTagArrayOutput) Index(i pulumi.IntInput) SecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupTag {
		return vs[0].([]SecurityGroupTag)[vs[1].(int)]
	}).(SecurityGroupTagOutput)
}

type SecurityGroupsSecurityGroup struct {
	// The creation time of SecurityGroup.
	CreationTime string `pulumi:"creationTime"`
	// The description of SecurityGroup.
	Description string `pulumi:"description"`
	// The ID of SecurityGroup.
	Id string `pulumi:"id"`
	// The ProjectName of SecurityGroup.
	ProjectName string `pulumi:"projectName"`
	// The ID of SecurityGroup.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The Name of SecurityGroup.
	SecurityGroupName string `pulumi:"securityGroupName"`
	// The Status of SecurityGroup.
	Status string `pulumi:"status"`
	// Tags.
	Tags []SecurityGroupsSecurityGroupTag `pulumi:"tags"`
	// A Name Regex of SecurityGroup.
	Type string `pulumi:"type"`
	// The ID of vpc where security group is located.
	VpcId string `pulumi:"vpcId"`
}

// SecurityGroupsSecurityGroupInput is an input type that accepts SecurityGroupsSecurityGroupArgs and SecurityGroupsSecurityGroupOutput values.
// You can construct a concrete instance of `SecurityGroupsSecurityGroupInput` via:
//
//	SecurityGroupsSecurityGroupArgs{...}
type SecurityGroupsSecurityGroupInput interface {
	pulumi.Input

	ToSecurityGroupsSecurityGroupOutput() SecurityGroupsSecurityGroupOutput
	ToSecurityGroupsSecurityGroupOutputWithContext(context.Context) SecurityGroupsSecurityGroupOutput
}

type SecurityGroupsSecurityGroupArgs struct {
	// The creation time of SecurityGroup.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of SecurityGroup.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of SecurityGroup.
	Id pulumi.StringInput `pulumi:"id"`
	// The ProjectName of SecurityGroup.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The ID of SecurityGroup.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The Name of SecurityGroup.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
	// The Status of SecurityGroup.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags SecurityGroupsSecurityGroupTagArrayInput `pulumi:"tags"`
	// A Name Regex of SecurityGroup.
	Type pulumi.StringInput `pulumi:"type"`
	// The ID of vpc where security group is located.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (SecurityGroupsSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsSecurityGroup)(nil)).Elem()
}

func (i SecurityGroupsSecurityGroupArgs) ToSecurityGroupsSecurityGroupOutput() SecurityGroupsSecurityGroupOutput {
	return i.ToSecurityGroupsSecurityGroupOutputWithContext(context.Background())
}

func (i SecurityGroupsSecurityGroupArgs) ToSecurityGroupsSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsSecurityGroupOutput)
}

// SecurityGroupsSecurityGroupArrayInput is an input type that accepts SecurityGroupsSecurityGroupArray and SecurityGroupsSecurityGroupArrayOutput values.
// You can construct a concrete instance of `SecurityGroupsSecurityGroupArrayInput` via:
//
//	SecurityGroupsSecurityGroupArray{ SecurityGroupsSecurityGroupArgs{...} }
type SecurityGroupsSecurityGroupArrayInput interface {
	pulumi.Input

	ToSecurityGroupsSecurityGroupArrayOutput() SecurityGroupsSecurityGroupArrayOutput
	ToSecurityGroupsSecurityGroupArrayOutputWithContext(context.Context) SecurityGroupsSecurityGroupArrayOutput
}

type SecurityGroupsSecurityGroupArray []SecurityGroupsSecurityGroupInput

func (SecurityGroupsSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsSecurityGroup)(nil)).Elem()
}

func (i SecurityGroupsSecurityGroupArray) ToSecurityGroupsSecurityGroupArrayOutput() SecurityGroupsSecurityGroupArrayOutput {
	return i.ToSecurityGroupsSecurityGroupArrayOutputWithContext(context.Background())
}

func (i SecurityGroupsSecurityGroupArray) ToSecurityGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsSecurityGroupArrayOutput)
}

type SecurityGroupsSecurityGroupOutput struct{ *pulumi.OutputState }

func (SecurityGroupsSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsSecurityGroup)(nil)).Elem()
}

func (o SecurityGroupsSecurityGroupOutput) ToSecurityGroupsSecurityGroupOutput() SecurityGroupsSecurityGroupOutput {
	return o
}

func (o SecurityGroupsSecurityGroupOutput) ToSecurityGroupsSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupOutput {
	return o
}

// The creation time of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The ProjectName of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The ID of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The Name of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

// The Status of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o SecurityGroupsSecurityGroupOutput) Tags() SecurityGroupsSecurityGroupTagArrayOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) []SecurityGroupsSecurityGroupTag { return v.Tags }).(SecurityGroupsSecurityGroupTagArrayOutput)
}

// A Name Regex of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.Type }).(pulumi.StringOutput)
}

// The ID of vpc where security group is located.
func (o SecurityGroupsSecurityGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

type SecurityGroupsSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupsSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsSecurityGroup)(nil)).Elem()
}

func (o SecurityGroupsSecurityGroupArrayOutput) ToSecurityGroupsSecurityGroupArrayOutput() SecurityGroupsSecurityGroupArrayOutput {
	return o
}

func (o SecurityGroupsSecurityGroupArrayOutput) ToSecurityGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupArrayOutput {
	return o
}

func (o SecurityGroupsSecurityGroupArrayOutput) Index(i pulumi.IntInput) SecurityGroupsSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupsSecurityGroup {
		return vs[0].([]SecurityGroupsSecurityGroup)[vs[1].(int)]
	}).(SecurityGroupsSecurityGroupOutput)
}

type SecurityGroupsSecurityGroupTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SecurityGroupsSecurityGroupTagInput is an input type that accepts SecurityGroupsSecurityGroupTagArgs and SecurityGroupsSecurityGroupTagOutput values.
// You can construct a concrete instance of `SecurityGroupsSecurityGroupTagInput` via:
//
//	SecurityGroupsSecurityGroupTagArgs{...}
type SecurityGroupsSecurityGroupTagInput interface {
	pulumi.Input

	ToSecurityGroupsSecurityGroupTagOutput() SecurityGroupsSecurityGroupTagOutput
	ToSecurityGroupsSecurityGroupTagOutputWithContext(context.Context) SecurityGroupsSecurityGroupTagOutput
}

type SecurityGroupsSecurityGroupTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityGroupsSecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupsSecurityGroupTagArgs) ToSecurityGroupsSecurityGroupTagOutput() SecurityGroupsSecurityGroupTagOutput {
	return i.ToSecurityGroupsSecurityGroupTagOutputWithContext(context.Background())
}

func (i SecurityGroupsSecurityGroupTagArgs) ToSecurityGroupsSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsSecurityGroupTagOutput)
}

// SecurityGroupsSecurityGroupTagArrayInput is an input type that accepts SecurityGroupsSecurityGroupTagArray and SecurityGroupsSecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `SecurityGroupsSecurityGroupTagArrayInput` via:
//
//	SecurityGroupsSecurityGroupTagArray{ SecurityGroupsSecurityGroupTagArgs{...} }
type SecurityGroupsSecurityGroupTagArrayInput interface {
	pulumi.Input

	ToSecurityGroupsSecurityGroupTagArrayOutput() SecurityGroupsSecurityGroupTagArrayOutput
	ToSecurityGroupsSecurityGroupTagArrayOutputWithContext(context.Context) SecurityGroupsSecurityGroupTagArrayOutput
}

type SecurityGroupsSecurityGroupTagArray []SecurityGroupsSecurityGroupTagInput

func (SecurityGroupsSecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupsSecurityGroupTagArray) ToSecurityGroupsSecurityGroupTagArrayOutput() SecurityGroupsSecurityGroupTagArrayOutput {
	return i.ToSecurityGroupsSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i SecurityGroupsSecurityGroupTagArray) ToSecurityGroupsSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsSecurityGroupTagArrayOutput)
}

type SecurityGroupsSecurityGroupTagOutput struct{ *pulumi.OutputState }

func (SecurityGroupsSecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupsSecurityGroupTagOutput) ToSecurityGroupsSecurityGroupTagOutput() SecurityGroupsSecurityGroupTagOutput {
	return o
}

func (o SecurityGroupsSecurityGroupTagOutput) ToSecurityGroupsSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupTagOutput {
	return o
}

// The Key of Tags.
func (o SecurityGroupsSecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SecurityGroupsSecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityGroupsSecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupsSecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupsSecurityGroupTagArrayOutput) ToSecurityGroupsSecurityGroupTagArrayOutput() SecurityGroupsSecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupsSecurityGroupTagArrayOutput) ToSecurityGroupsSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupsSecurityGroupTagArrayOutput) Index(i pulumi.IntInput) SecurityGroupsSecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupsSecurityGroupTag {
		return vs[0].([]SecurityGroupsSecurityGroupTag)[vs[1].(int)]
	}).(SecurityGroupsSecurityGroupTagOutput)
}

type SecurityGroupsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SecurityGroupsTagInput is an input type that accepts SecurityGroupsTagArgs and SecurityGroupsTagOutput values.
// You can construct a concrete instance of `SecurityGroupsTagInput` via:
//
//	SecurityGroupsTagArgs{...}
type SecurityGroupsTagInput interface {
	pulumi.Input

	ToSecurityGroupsTagOutput() SecurityGroupsTagOutput
	ToSecurityGroupsTagOutputWithContext(context.Context) SecurityGroupsTagOutput
}

type SecurityGroupsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityGroupsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsTag)(nil)).Elem()
}

func (i SecurityGroupsTagArgs) ToSecurityGroupsTagOutput() SecurityGroupsTagOutput {
	return i.ToSecurityGroupsTagOutputWithContext(context.Background())
}

func (i SecurityGroupsTagArgs) ToSecurityGroupsTagOutputWithContext(ctx context.Context) SecurityGroupsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsTagOutput)
}

// SecurityGroupsTagArrayInput is an input type that accepts SecurityGroupsTagArray and SecurityGroupsTagArrayOutput values.
// You can construct a concrete instance of `SecurityGroupsTagArrayInput` via:
//
//	SecurityGroupsTagArray{ SecurityGroupsTagArgs{...} }
type SecurityGroupsTagArrayInput interface {
	pulumi.Input

	ToSecurityGroupsTagArrayOutput() SecurityGroupsTagArrayOutput
	ToSecurityGroupsTagArrayOutputWithContext(context.Context) SecurityGroupsTagArrayOutput
}

type SecurityGroupsTagArray []SecurityGroupsTagInput

func (SecurityGroupsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsTag)(nil)).Elem()
}

func (i SecurityGroupsTagArray) ToSecurityGroupsTagArrayOutput() SecurityGroupsTagArrayOutput {
	return i.ToSecurityGroupsTagArrayOutputWithContext(context.Background())
}

func (i SecurityGroupsTagArray) ToSecurityGroupsTagArrayOutputWithContext(ctx context.Context) SecurityGroupsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsTagArrayOutput)
}

type SecurityGroupsTagOutput struct{ *pulumi.OutputState }

func (SecurityGroupsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsTag)(nil)).Elem()
}

func (o SecurityGroupsTagOutput) ToSecurityGroupsTagOutput() SecurityGroupsTagOutput {
	return o
}

func (o SecurityGroupsTagOutput) ToSecurityGroupsTagOutputWithContext(ctx context.Context) SecurityGroupsTagOutput {
	return o
}

// The Key of Tags.
func (o SecurityGroupsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SecurityGroupsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityGroupsTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsTag)(nil)).Elem()
}

func (o SecurityGroupsTagArrayOutput) ToSecurityGroupsTagArrayOutput() SecurityGroupsTagArrayOutput {
	return o
}

func (o SecurityGroupsTagArrayOutput) ToSecurityGroupsTagArrayOutputWithContext(ctx context.Context) SecurityGroupsTagArrayOutput {
	return o
}

func (o SecurityGroupsTagArrayOutput) Index(i pulumi.IntInput) SecurityGroupsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupsTag {
		return vs[0].([]SecurityGroupsTag)[vs[1].(int)]
	}).(SecurityGroupsTagOutput)
}

type SubnetTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SubnetTagInput is an input type that accepts SubnetTagArgs and SubnetTagOutput values.
// You can construct a concrete instance of `SubnetTagInput` via:
//
//	SubnetTagArgs{...}
type SubnetTagInput interface {
	pulumi.Input

	ToSubnetTagOutput() SubnetTagOutput
	ToSubnetTagOutputWithContext(context.Context) SubnetTagOutput
}

type SubnetTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetTag)(nil)).Elem()
}

func (i SubnetTagArgs) ToSubnetTagOutput() SubnetTagOutput {
	return i.ToSubnetTagOutputWithContext(context.Background())
}

func (i SubnetTagArgs) ToSubnetTagOutputWithContext(ctx context.Context) SubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTagOutput)
}

// SubnetTagArrayInput is an input type that accepts SubnetTagArray and SubnetTagArrayOutput values.
// You can construct a concrete instance of `SubnetTagArrayInput` via:
//
//	SubnetTagArray{ SubnetTagArgs{...} }
type SubnetTagArrayInput interface {
	pulumi.Input

	ToSubnetTagArrayOutput() SubnetTagArrayOutput
	ToSubnetTagArrayOutputWithContext(context.Context) SubnetTagArrayOutput
}

type SubnetTagArray []SubnetTagInput

func (SubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetTag)(nil)).Elem()
}

func (i SubnetTagArray) ToSubnetTagArrayOutput() SubnetTagArrayOutput {
	return i.ToSubnetTagArrayOutputWithContext(context.Background())
}

func (i SubnetTagArray) ToSubnetTagArrayOutputWithContext(ctx context.Context) SubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTagArrayOutput)
}

type SubnetTagOutput struct{ *pulumi.OutputState }

func (SubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetTag)(nil)).Elem()
}

func (o SubnetTagOutput) ToSubnetTagOutput() SubnetTagOutput {
	return o
}

func (o SubnetTagOutput) ToSubnetTagOutputWithContext(ctx context.Context) SubnetTagOutput {
	return o
}

// The Key of Tags.
func (o SubnetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SubnetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetTag) string { return v.Value }).(pulumi.StringOutput)
}

type SubnetTagArrayOutput struct{ *pulumi.OutputState }

func (SubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetTag)(nil)).Elem()
}

func (o SubnetTagArrayOutput) ToSubnetTagArrayOutput() SubnetTagArrayOutput {
	return o
}

func (o SubnetTagArrayOutput) ToSubnetTagArrayOutputWithContext(ctx context.Context) SubnetTagArrayOutput {
	return o
}

func (o SubnetTagArrayOutput) Index(i pulumi.IntInput) SubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetTag {
		return vs[0].([]SubnetTag)[vs[1].(int)]
	}).(SubnetTagOutput)
}

type SubnetsSubnet struct {
	// The account ID which the subnet belongs to.
	AccountId string `pulumi:"accountId"`
	// The count of available ip address.
	AvailableIpAddressCount int `pulumi:"availableIpAddressCount"`
	// The cidr block of Subnet.
	CidrBlock string `pulumi:"cidrBlock"`
	// Creation time of Subnet.
	CreationTime string `pulumi:"creationTime"`
	// The description of Subnet.
	Description string `pulumi:"description"`
	// The ID of Subnet.
	Id string `pulumi:"id"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The ID of network acl which this subnet associate with.
	NetworkAclId string `pulumi:"networkAclId"`
	// The route table information.
	RouteTable SubnetsSubnetRouteTable `pulumi:"routeTable"`
	// The ID of route table which subnet associated with.
	RouteTableId string `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType string `pulumi:"routeTableType"`
	// The Status of Subnet.
	Status string `pulumi:"status"`
	// The subnet name to query.
	SubnetName string `pulumi:"subnetName"`
	// Tags.
	Tags []SubnetsSubnetTag `pulumi:"tags"`
	// The Count of ipv4.
	TotalIpv4Count int `pulumi:"totalIpv4Count"`
	// Update time of Subnet.
	UpdateTime string `pulumi:"updateTime"`
	// The ID of VPC which subnet belongs to.
	VpcId string `pulumi:"vpcId"`
	// The ID of zone which subnet belongs to.
	ZoneId string `pulumi:"zoneId"`
}

// SubnetsSubnetInput is an input type that accepts SubnetsSubnetArgs and SubnetsSubnetOutput values.
// You can construct a concrete instance of `SubnetsSubnetInput` via:
//
//	SubnetsSubnetArgs{...}
type SubnetsSubnetInput interface {
	pulumi.Input

	ToSubnetsSubnetOutput() SubnetsSubnetOutput
	ToSubnetsSubnetOutputWithContext(context.Context) SubnetsSubnetOutput
}

type SubnetsSubnetArgs struct {
	// The account ID which the subnet belongs to.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The count of available ip address.
	AvailableIpAddressCount pulumi.IntInput `pulumi:"availableIpAddressCount"`
	// The cidr block of Subnet.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Creation time of Subnet.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of Subnet.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of Subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The ID of network acl which this subnet associate with.
	NetworkAclId pulumi.StringInput `pulumi:"networkAclId"`
	// The route table information.
	RouteTable SubnetsSubnetRouteTableInput `pulumi:"routeTable"`
	// The ID of route table which subnet associated with.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
	// The Status of Subnet.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet name to query.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
	// Tags.
	Tags SubnetsSubnetTagArrayInput `pulumi:"tags"`
	// The Count of ipv4.
	TotalIpv4Count pulumi.IntInput `pulumi:"totalIpv4Count"`
	// Update time of Subnet.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The ID of VPC which subnet belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of zone which subnet belongs to.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (SubnetsSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnet)(nil)).Elem()
}

func (i SubnetsSubnetArgs) ToSubnetsSubnetOutput() SubnetsSubnetOutput {
	return i.ToSubnetsSubnetOutputWithContext(context.Background())
}

func (i SubnetsSubnetArgs) ToSubnetsSubnetOutputWithContext(ctx context.Context) SubnetsSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetOutput)
}

// SubnetsSubnetArrayInput is an input type that accepts SubnetsSubnetArray and SubnetsSubnetArrayOutput values.
// You can construct a concrete instance of `SubnetsSubnetArrayInput` via:
//
//	SubnetsSubnetArray{ SubnetsSubnetArgs{...} }
type SubnetsSubnetArrayInput interface {
	pulumi.Input

	ToSubnetsSubnetArrayOutput() SubnetsSubnetArrayOutput
	ToSubnetsSubnetArrayOutputWithContext(context.Context) SubnetsSubnetArrayOutput
}

type SubnetsSubnetArray []SubnetsSubnetInput

func (SubnetsSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsSubnet)(nil)).Elem()
}

func (i SubnetsSubnetArray) ToSubnetsSubnetArrayOutput() SubnetsSubnetArrayOutput {
	return i.ToSubnetsSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetsSubnetArray) ToSubnetsSubnetArrayOutputWithContext(ctx context.Context) SubnetsSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetArrayOutput)
}

type SubnetsSubnetOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnet)(nil)).Elem()
}

func (o SubnetsSubnetOutput) ToSubnetsSubnetOutput() SubnetsSubnetOutput {
	return o
}

func (o SubnetsSubnetOutput) ToSubnetsSubnetOutputWithContext(ctx context.Context) SubnetsSubnetOutput {
	return o
}

// The account ID which the subnet belongs to.
func (o SubnetsSubnetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The count of available ip address.
func (o SubnetsSubnetOutput) AvailableIpAddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v SubnetsSubnet) int { return v.AvailableIpAddressCount }).(pulumi.IntOutput)
}

// The cidr block of Subnet.
func (o SubnetsSubnetOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Creation time of Subnet.
func (o SubnetsSubnetOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of Subnet.
func (o SubnetsSubnetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of Subnet.
func (o SubnetsSubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 CIDR block of the VPC.
func (o SubnetsSubnetOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The ID of network acl which this subnet associate with.
func (o SubnetsSubnetOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// The route table information.
func (o SubnetsSubnetOutput) RouteTable() SubnetsSubnetRouteTableOutput {
	return o.ApplyT(func(v SubnetsSubnet) SubnetsSubnetRouteTable { return v.RouteTable }).(SubnetsSubnetRouteTableOutput)
}

// The ID of route table which subnet associated with.
func (o SubnetsSubnetOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The route table type.
func (o SubnetsSubnetOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.RouteTableType }).(pulumi.StringOutput)
}

// The Status of Subnet.
func (o SubnetsSubnetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet name to query.
func (o SubnetsSubnetOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.SubnetName }).(pulumi.StringOutput)
}

// Tags.
func (o SubnetsSubnetOutput) Tags() SubnetsSubnetTagArrayOutput {
	return o.ApplyT(func(v SubnetsSubnet) []SubnetsSubnetTag { return v.Tags }).(SubnetsSubnetTagArrayOutput)
}

// The Count of ipv4.
func (o SubnetsSubnetOutput) TotalIpv4Count() pulumi.IntOutput {
	return o.ApplyT(func(v SubnetsSubnet) int { return v.TotalIpv4Count }).(pulumi.IntOutput)
}

// Update time of Subnet.
func (o SubnetsSubnetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The ID of VPC which subnet belongs to.
func (o SubnetsSubnetOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of zone which subnet belongs to.
func (o SubnetsSubnetOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.ZoneId }).(pulumi.StringOutput)
}

type SubnetsSubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsSubnet)(nil)).Elem()
}

func (o SubnetsSubnetArrayOutput) ToSubnetsSubnetArrayOutput() SubnetsSubnetArrayOutput {
	return o
}

func (o SubnetsSubnetArrayOutput) ToSubnetsSubnetArrayOutputWithContext(ctx context.Context) SubnetsSubnetArrayOutput {
	return o
}

func (o SubnetsSubnetArrayOutput) Index(i pulumi.IntInput) SubnetsSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetsSubnet {
		return vs[0].([]SubnetsSubnet)[vs[1].(int)]
	}).(SubnetsSubnetOutput)
}

type SubnetsSubnetRouteTable struct {
	// The ID of route table which subnet associated with.
	RouteTableId string `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType string `pulumi:"routeTableType"`
}

// SubnetsSubnetRouteTableInput is an input type that accepts SubnetsSubnetRouteTableArgs and SubnetsSubnetRouteTableOutput values.
// You can construct a concrete instance of `SubnetsSubnetRouteTableInput` via:
//
//	SubnetsSubnetRouteTableArgs{...}
type SubnetsSubnetRouteTableInput interface {
	pulumi.Input

	ToSubnetsSubnetRouteTableOutput() SubnetsSubnetRouteTableOutput
	ToSubnetsSubnetRouteTableOutputWithContext(context.Context) SubnetsSubnetRouteTableOutput
}

type SubnetsSubnetRouteTableArgs struct {
	// The ID of route table which subnet associated with.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
}

func (SubnetsSubnetRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnetRouteTable)(nil)).Elem()
}

func (i SubnetsSubnetRouteTableArgs) ToSubnetsSubnetRouteTableOutput() SubnetsSubnetRouteTableOutput {
	return i.ToSubnetsSubnetRouteTableOutputWithContext(context.Background())
}

func (i SubnetsSubnetRouteTableArgs) ToSubnetsSubnetRouteTableOutputWithContext(ctx context.Context) SubnetsSubnetRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetRouteTableOutput)
}

type SubnetsSubnetRouteTableOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnetRouteTable)(nil)).Elem()
}

func (o SubnetsSubnetRouteTableOutput) ToSubnetsSubnetRouteTableOutput() SubnetsSubnetRouteTableOutput {
	return o
}

func (o SubnetsSubnetRouteTableOutput) ToSubnetsSubnetRouteTableOutputWithContext(ctx context.Context) SubnetsSubnetRouteTableOutput {
	return o
}

// The ID of route table which subnet associated with.
func (o SubnetsSubnetRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnetRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The route table type.
func (o SubnetsSubnetRouteTableOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnetRouteTable) string { return v.RouteTableType }).(pulumi.StringOutput)
}

type SubnetsSubnetTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SubnetsSubnetTagInput is an input type that accepts SubnetsSubnetTagArgs and SubnetsSubnetTagOutput values.
// You can construct a concrete instance of `SubnetsSubnetTagInput` via:
//
//	SubnetsSubnetTagArgs{...}
type SubnetsSubnetTagInput interface {
	pulumi.Input

	ToSubnetsSubnetTagOutput() SubnetsSubnetTagOutput
	ToSubnetsSubnetTagOutputWithContext(context.Context) SubnetsSubnetTagOutput
}

type SubnetsSubnetTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SubnetsSubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnetTag)(nil)).Elem()
}

func (i SubnetsSubnetTagArgs) ToSubnetsSubnetTagOutput() SubnetsSubnetTagOutput {
	return i.ToSubnetsSubnetTagOutputWithContext(context.Background())
}

func (i SubnetsSubnetTagArgs) ToSubnetsSubnetTagOutputWithContext(ctx context.Context) SubnetsSubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetTagOutput)
}

// SubnetsSubnetTagArrayInput is an input type that accepts SubnetsSubnetTagArray and SubnetsSubnetTagArrayOutput values.
// You can construct a concrete instance of `SubnetsSubnetTagArrayInput` via:
//
//	SubnetsSubnetTagArray{ SubnetsSubnetTagArgs{...} }
type SubnetsSubnetTagArrayInput interface {
	pulumi.Input

	ToSubnetsSubnetTagArrayOutput() SubnetsSubnetTagArrayOutput
	ToSubnetsSubnetTagArrayOutputWithContext(context.Context) SubnetsSubnetTagArrayOutput
}

type SubnetsSubnetTagArray []SubnetsSubnetTagInput

func (SubnetsSubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsSubnetTag)(nil)).Elem()
}

func (i SubnetsSubnetTagArray) ToSubnetsSubnetTagArrayOutput() SubnetsSubnetTagArrayOutput {
	return i.ToSubnetsSubnetTagArrayOutputWithContext(context.Background())
}

func (i SubnetsSubnetTagArray) ToSubnetsSubnetTagArrayOutputWithContext(ctx context.Context) SubnetsSubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetTagArrayOutput)
}

type SubnetsSubnetTagOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnetTag)(nil)).Elem()
}

func (o SubnetsSubnetTagOutput) ToSubnetsSubnetTagOutput() SubnetsSubnetTagOutput {
	return o
}

func (o SubnetsSubnetTagOutput) ToSubnetsSubnetTagOutputWithContext(ctx context.Context) SubnetsSubnetTagOutput {
	return o
}

// The Key of Tags.
func (o SubnetsSubnetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SubnetsSubnetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnetTag) string { return v.Value }).(pulumi.StringOutput)
}

type SubnetsSubnetTagArrayOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsSubnetTag)(nil)).Elem()
}

func (o SubnetsSubnetTagArrayOutput) ToSubnetsSubnetTagArrayOutput() SubnetsSubnetTagArrayOutput {
	return o
}

func (o SubnetsSubnetTagArrayOutput) ToSubnetsSubnetTagArrayOutputWithContext(ctx context.Context) SubnetsSubnetTagArrayOutput {
	return o
}

func (o SubnetsSubnetTagArrayOutput) Index(i pulumi.IntInput) SubnetsSubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetsSubnetTag {
		return vs[0].([]SubnetsSubnetTag)[vs[1].(int)]
	}).(SubnetsSubnetTagOutput)
}

type SubnetsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SubnetsTagInput is an input type that accepts SubnetsTagArgs and SubnetsTagOutput values.
// You can construct a concrete instance of `SubnetsTagInput` via:
//
//	SubnetsTagArgs{...}
type SubnetsTagInput interface {
	pulumi.Input

	ToSubnetsTagOutput() SubnetsTagOutput
	ToSubnetsTagOutputWithContext(context.Context) SubnetsTagOutput
}

type SubnetsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SubnetsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsTag)(nil)).Elem()
}

func (i SubnetsTagArgs) ToSubnetsTagOutput() SubnetsTagOutput {
	return i.ToSubnetsTagOutputWithContext(context.Background())
}

func (i SubnetsTagArgs) ToSubnetsTagOutputWithContext(ctx context.Context) SubnetsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsTagOutput)
}

// SubnetsTagArrayInput is an input type that accepts SubnetsTagArray and SubnetsTagArrayOutput values.
// You can construct a concrete instance of `SubnetsTagArrayInput` via:
//
//	SubnetsTagArray{ SubnetsTagArgs{...} }
type SubnetsTagArrayInput interface {
	pulumi.Input

	ToSubnetsTagArrayOutput() SubnetsTagArrayOutput
	ToSubnetsTagArrayOutputWithContext(context.Context) SubnetsTagArrayOutput
}

type SubnetsTagArray []SubnetsTagInput

func (SubnetsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsTag)(nil)).Elem()
}

func (i SubnetsTagArray) ToSubnetsTagArrayOutput() SubnetsTagArrayOutput {
	return i.ToSubnetsTagArrayOutputWithContext(context.Background())
}

func (i SubnetsTagArray) ToSubnetsTagArrayOutputWithContext(ctx context.Context) SubnetsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsTagArrayOutput)
}

type SubnetsTagOutput struct{ *pulumi.OutputState }

func (SubnetsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsTag)(nil)).Elem()
}

func (o SubnetsTagOutput) ToSubnetsTagOutput() SubnetsTagOutput {
	return o
}

func (o SubnetsTagOutput) ToSubnetsTagOutputWithContext(ctx context.Context) SubnetsTagOutput {
	return o
}

// The Key of Tags.
func (o SubnetsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SubnetsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsTag) string { return v.Value }).(pulumi.StringOutput)
}

type SubnetsTagArrayOutput struct{ *pulumi.OutputState }

func (SubnetsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsTag)(nil)).Elem()
}

func (o SubnetsTagArrayOutput) ToSubnetsTagArrayOutput() SubnetsTagArrayOutput {
	return o
}

func (o SubnetsTagArrayOutput) ToSubnetsTagArrayOutputWithContext(ctx context.Context) SubnetsTagArrayOutput {
	return o
}

func (o SubnetsTagArrayOutput) Index(i pulumi.IntInput) SubnetsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetsTag {
		return vs[0].([]SubnetsTag)[vs[1].(int)]
	}).(SubnetsTagOutput)
}

type TrafficMirrorFilterRulesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorFilterRulesTagInput is an input type that accepts TrafficMirrorFilterRulesTagArgs and TrafficMirrorFilterRulesTagOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRulesTagInput` via:
//
//	TrafficMirrorFilterRulesTagArgs{...}
type TrafficMirrorFilterRulesTagInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRulesTagOutput() TrafficMirrorFilterRulesTagOutput
	ToTrafficMirrorFilterRulesTagOutputWithContext(context.Context) TrafficMirrorFilterRulesTagOutput
}

type TrafficMirrorFilterRulesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorFilterRulesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRulesTag)(nil)).Elem()
}

func (i TrafficMirrorFilterRulesTagArgs) ToTrafficMirrorFilterRulesTagOutput() TrafficMirrorFilterRulesTagOutput {
	return i.ToTrafficMirrorFilterRulesTagOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRulesTagArgs) ToTrafficMirrorFilterRulesTagOutputWithContext(ctx context.Context) TrafficMirrorFilterRulesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRulesTagOutput)
}

// TrafficMirrorFilterRulesTagArrayInput is an input type that accepts TrafficMirrorFilterRulesTagArray and TrafficMirrorFilterRulesTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRulesTagArrayInput` via:
//
//	TrafficMirrorFilterRulesTagArray{ TrafficMirrorFilterRulesTagArgs{...} }
type TrafficMirrorFilterRulesTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRulesTagArrayOutput() TrafficMirrorFilterRulesTagArrayOutput
	ToTrafficMirrorFilterRulesTagArrayOutputWithContext(context.Context) TrafficMirrorFilterRulesTagArrayOutput
}

type TrafficMirrorFilterRulesTagArray []TrafficMirrorFilterRulesTagInput

func (TrafficMirrorFilterRulesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFilterRulesTag)(nil)).Elem()
}

func (i TrafficMirrorFilterRulesTagArray) ToTrafficMirrorFilterRulesTagArrayOutput() TrafficMirrorFilterRulesTagArrayOutput {
	return i.ToTrafficMirrorFilterRulesTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRulesTagArray) ToTrafficMirrorFilterRulesTagArrayOutputWithContext(ctx context.Context) TrafficMirrorFilterRulesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRulesTagArrayOutput)
}

type TrafficMirrorFilterRulesTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRulesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRulesTag)(nil)).Elem()
}

func (o TrafficMirrorFilterRulesTagOutput) ToTrafficMirrorFilterRulesTagOutput() TrafficMirrorFilterRulesTagOutput {
	return o
}

func (o TrafficMirrorFilterRulesTagOutput) ToTrafficMirrorFilterRulesTagOutputWithContext(ctx context.Context) TrafficMirrorFilterRulesTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorFilterRulesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorFilterRulesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorFilterRulesTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRulesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFilterRulesTag)(nil)).Elem()
}

func (o TrafficMirrorFilterRulesTagArrayOutput) ToTrafficMirrorFilterRulesTagArrayOutput() TrafficMirrorFilterRulesTagArrayOutput {
	return o
}

func (o TrafficMirrorFilterRulesTagArrayOutput) ToTrafficMirrorFilterRulesTagArrayOutputWithContext(ctx context.Context) TrafficMirrorFilterRulesTagArrayOutput {
	return o
}

func (o TrafficMirrorFilterRulesTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFilterRulesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorFilterRulesTag {
		return vs[0].([]TrafficMirrorFilterRulesTag)[vs[1].(int)]
	}).(TrafficMirrorFilterRulesTagOutput)
}

type TrafficMirrorFilterRulesTrafficMirrorFilterRule struct {
	// The create time of traffic mirror filter rule.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description string `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange string `pulumi:"destinationPortRange"`
	// The ID of traffic mirror filter rule.
	Id string `pulumi:"id"`
	// The policy of traffic mirror filter rule.
	Policy string `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority int `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol string `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange string `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter rule.
	Status string `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection string `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId string `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter rule.
	UpdatedAt string `pulumi:"updatedAt"`
}

// TrafficMirrorFilterRulesTrafficMirrorFilterRuleInput is an input type that accepts TrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs and TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRulesTrafficMirrorFilterRuleInput` via:
//
//	TrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs{...}
type TrafficMirrorFilterRulesTrafficMirrorFilterRuleInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput() TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput
	ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutputWithContext(context.Context) TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput
}

type TrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs struct {
	// The create time of traffic mirror filter rule.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange pulumi.StringInput `pulumi:"destinationPortRange"`
	// The ID of traffic mirror filter rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The policy of traffic mirror filter rule.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange pulumi.StringInput `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter rule.
	Status pulumi.StringInput `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection pulumi.StringInput `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId pulumi.StringInput `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter rule.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (TrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRulesTrafficMirrorFilterRule)(nil)).Elem()
}

func (i TrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs) ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput() TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return i.ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs) ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput)
}

// TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayInput is an input type that accepts TrafficMirrorFilterRulesTrafficMirrorFilterRuleArray and TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayInput` via:
//
//	TrafficMirrorFilterRulesTrafficMirrorFilterRuleArray{ TrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs{...} }
type TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput() TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput
	ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutputWithContext(context.Context) TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput
}

type TrafficMirrorFilterRulesTrafficMirrorFilterRuleArray []TrafficMirrorFilterRulesTrafficMirrorFilterRuleInput

func (TrafficMirrorFilterRulesTrafficMirrorFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFilterRulesTrafficMirrorFilterRule)(nil)).Elem()
}

func (i TrafficMirrorFilterRulesTrafficMirrorFilterRuleArray) ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput() TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return i.ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRulesTrafficMirrorFilterRuleArray) ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutputWithContext(ctx context.Context) TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput)
}

type TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRulesTrafficMirrorFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput() TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return o
}

func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return o
}

// The create time of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Description }).(pulumi.StringOutput)
}

// The destination cidr block of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The destination port range of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.DestinationPortRange }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Id }).(pulumi.StringOutput)
}

// The policy of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The priority of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source cidr block of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

// The source port range of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

// The status of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Status }).(pulumi.StringOutput)
}

// The traffic direction of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) TrafficDirection() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.TrafficDirection }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) TrafficMirrorFilterRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.TrafficMirrorFilterRuleId }).(pulumi.StringOutput)
}

// The last update time of traffic mirror filter rule.
func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFilterRulesTrafficMirrorFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput) ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput() TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return o
}

func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput) ToTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutputWithContext(ctx context.Context) TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return o
}

func (o TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorFilterRulesTrafficMirrorFilterRule {
		return vs[0].([]TrafficMirrorFilterRulesTrafficMirrorFilterRule)[vs[1].(int)]
	}).(TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput)
}

type TrafficMirrorFilterTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorFilterTagInput is an input type that accepts TrafficMirrorFilterTagArgs and TrafficMirrorFilterTagOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterTagInput` via:
//
//	TrafficMirrorFilterTagArgs{...}
type TrafficMirrorFilterTagInput interface {
	pulumi.Input

	ToTrafficMirrorFilterTagOutput() TrafficMirrorFilterTagOutput
	ToTrafficMirrorFilterTagOutputWithContext(context.Context) TrafficMirrorFilterTagOutput
}

type TrafficMirrorFilterTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterTag)(nil)).Elem()
}

func (i TrafficMirrorFilterTagArgs) ToTrafficMirrorFilterTagOutput() TrafficMirrorFilterTagOutput {
	return i.ToTrafficMirrorFilterTagOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterTagArgs) ToTrafficMirrorFilterTagOutputWithContext(ctx context.Context) TrafficMirrorFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterTagOutput)
}

// TrafficMirrorFilterTagArrayInput is an input type that accepts TrafficMirrorFilterTagArray and TrafficMirrorFilterTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterTagArrayInput` via:
//
//	TrafficMirrorFilterTagArray{ TrafficMirrorFilterTagArgs{...} }
type TrafficMirrorFilterTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFilterTagArrayOutput() TrafficMirrorFilterTagArrayOutput
	ToTrafficMirrorFilterTagArrayOutputWithContext(context.Context) TrafficMirrorFilterTagArrayOutput
}

type TrafficMirrorFilterTagArray []TrafficMirrorFilterTagInput

func (TrafficMirrorFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFilterTag)(nil)).Elem()
}

func (i TrafficMirrorFilterTagArray) ToTrafficMirrorFilterTagArrayOutput() TrafficMirrorFilterTagArrayOutput {
	return i.ToTrafficMirrorFilterTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterTagArray) ToTrafficMirrorFilterTagArrayOutputWithContext(ctx context.Context) TrafficMirrorFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterTagArrayOutput)
}

type TrafficMirrorFilterTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterTag)(nil)).Elem()
}

func (o TrafficMirrorFilterTagOutput) ToTrafficMirrorFilterTagOutput() TrafficMirrorFilterTagOutput {
	return o
}

func (o TrafficMirrorFilterTagOutput) ToTrafficMirrorFilterTagOutputWithContext(ctx context.Context) TrafficMirrorFilterTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorFilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorFilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorFilterTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFilterTag)(nil)).Elem()
}

func (o TrafficMirrorFilterTagArrayOutput) ToTrafficMirrorFilterTagArrayOutput() TrafficMirrorFilterTagArrayOutput {
	return o
}

func (o TrafficMirrorFilterTagArrayOutput) ToTrafficMirrorFilterTagArrayOutputWithContext(ctx context.Context) TrafficMirrorFilterTagArrayOutput {
	return o
}

func (o TrafficMirrorFilterTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorFilterTag {
		return vs[0].([]TrafficMirrorFilterTag)[vs[1].(int)]
	}).(TrafficMirrorFilterTagOutput)
}

type TrafficMirrorFiltersTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorFiltersTagInput is an input type that accepts TrafficMirrorFiltersTagArgs and TrafficMirrorFiltersTagOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTagInput` via:
//
//	TrafficMirrorFiltersTagArgs{...}
type TrafficMirrorFiltersTagInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTagOutput() TrafficMirrorFiltersTagOutput
	ToTrafficMirrorFiltersTagOutputWithContext(context.Context) TrafficMirrorFiltersTagOutput
}

type TrafficMirrorFiltersTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorFiltersTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTag)(nil)).Elem()
}

func (i TrafficMirrorFiltersTagArgs) ToTrafficMirrorFiltersTagOutput() TrafficMirrorFiltersTagOutput {
	return i.ToTrafficMirrorFiltersTagOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTagArgs) ToTrafficMirrorFiltersTagOutputWithContext(ctx context.Context) TrafficMirrorFiltersTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTagOutput)
}

// TrafficMirrorFiltersTagArrayInput is an input type that accepts TrafficMirrorFiltersTagArray and TrafficMirrorFiltersTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTagArrayInput` via:
//
//	TrafficMirrorFiltersTagArray{ TrafficMirrorFiltersTagArgs{...} }
type TrafficMirrorFiltersTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTagArrayOutput() TrafficMirrorFiltersTagArrayOutput
	ToTrafficMirrorFiltersTagArrayOutputWithContext(context.Context) TrafficMirrorFiltersTagArrayOutput
}

type TrafficMirrorFiltersTagArray []TrafficMirrorFiltersTagInput

func (TrafficMirrorFiltersTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTag)(nil)).Elem()
}

func (i TrafficMirrorFiltersTagArray) ToTrafficMirrorFiltersTagArrayOutput() TrafficMirrorFiltersTagArrayOutput {
	return i.ToTrafficMirrorFiltersTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTagArray) ToTrafficMirrorFiltersTagArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTagArrayOutput)
}

type TrafficMirrorFiltersTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTag)(nil)).Elem()
}

func (o TrafficMirrorFiltersTagOutput) ToTrafficMirrorFiltersTagOutput() TrafficMirrorFiltersTagOutput {
	return o
}

func (o TrafficMirrorFiltersTagOutput) ToTrafficMirrorFiltersTagOutputWithContext(ctx context.Context) TrafficMirrorFiltersTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorFiltersTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorFiltersTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorFiltersTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTag)(nil)).Elem()
}

func (o TrafficMirrorFiltersTagArrayOutput) ToTrafficMirrorFiltersTagArrayOutput() TrafficMirrorFiltersTagArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTagArrayOutput) ToTrafficMirrorFiltersTagArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTagArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFiltersTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorFiltersTag {
		return vs[0].([]TrafficMirrorFiltersTag)[vs[1].(int)]
	}).(TrafficMirrorFiltersTagOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilter struct {
	// The create time of traffic mirror filter rule.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description string `pulumi:"description"`
	// The ingress filter rules of traffic mirror filter.
	EgressFilterRules []TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule `pulumi:"egressFilterRules"`
	// The ID of traffic mirror filter.
	Id string `pulumi:"id"`
	// The ingress filter rules of traffic mirror filter.
	IngressFilterRules []TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule `pulumi:"ingressFilterRules"`
	// The project name of traffic mirror filter.
	ProjectName string `pulumi:"projectName"`
	// The status of traffic mirror filter.
	Status string `pulumi:"status"`
	// Tags.
	Tags []TrafficMirrorFiltersTrafficMirrorFilterTag `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The name of traffic mirror filter.
	TrafficMirrorFilterName string `pulumi:"trafficMirrorFilterName"`
	// The last update time of traffic mirror filter.
	UpdatedAt string `pulumi:"updatedAt"`
}

// TrafficMirrorFiltersTrafficMirrorFilterInput is an input type that accepts TrafficMirrorFiltersTrafficMirrorFilterArgs and TrafficMirrorFiltersTrafficMirrorFilterOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTrafficMirrorFilterInput` via:
//
//	TrafficMirrorFiltersTrafficMirrorFilterArgs{...}
type TrafficMirrorFiltersTrafficMirrorFilterInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTrafficMirrorFilterOutput() TrafficMirrorFiltersTrafficMirrorFilterOutput
	ToTrafficMirrorFiltersTrafficMirrorFilterOutputWithContext(context.Context) TrafficMirrorFiltersTrafficMirrorFilterOutput
}

type TrafficMirrorFiltersTrafficMirrorFilterArgs struct {
	// The create time of traffic mirror filter rule.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The ingress filter rules of traffic mirror filter.
	EgressFilterRules TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput `pulumi:"egressFilterRules"`
	// The ID of traffic mirror filter.
	Id pulumi.StringInput `pulumi:"id"`
	// The ingress filter rules of traffic mirror filter.
	IngressFilterRules TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput `pulumi:"ingressFilterRules"`
	// The project name of traffic mirror filter.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of traffic mirror filter.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags TrafficMirrorFiltersTrafficMirrorFilterTagArrayInput `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The name of traffic mirror filter.
	TrafficMirrorFilterName pulumi.StringInput `pulumi:"trafficMirrorFilterName"`
	// The last update time of traffic mirror filter.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (TrafficMirrorFiltersTrafficMirrorFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilter)(nil)).Elem()
}

func (i TrafficMirrorFiltersTrafficMirrorFilterArgs) ToTrafficMirrorFiltersTrafficMirrorFilterOutput() TrafficMirrorFiltersTrafficMirrorFilterOutput {
	return i.ToTrafficMirrorFiltersTrafficMirrorFilterOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTrafficMirrorFilterArgs) ToTrafficMirrorFiltersTrafficMirrorFilterOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTrafficMirrorFilterOutput)
}

// TrafficMirrorFiltersTrafficMirrorFilterArrayInput is an input type that accepts TrafficMirrorFiltersTrafficMirrorFilterArray and TrafficMirrorFiltersTrafficMirrorFilterArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTrafficMirrorFilterArrayInput` via:
//
//	TrafficMirrorFiltersTrafficMirrorFilterArray{ TrafficMirrorFiltersTrafficMirrorFilterArgs{...} }
type TrafficMirrorFiltersTrafficMirrorFilterArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTrafficMirrorFilterArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterArrayOutput
	ToTrafficMirrorFiltersTrafficMirrorFilterArrayOutputWithContext(context.Context) TrafficMirrorFiltersTrafficMirrorFilterArrayOutput
}

type TrafficMirrorFiltersTrafficMirrorFilterArray []TrafficMirrorFiltersTrafficMirrorFilterInput

func (TrafficMirrorFiltersTrafficMirrorFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTrafficMirrorFilter)(nil)).Elem()
}

func (i TrafficMirrorFiltersTrafficMirrorFilterArray) ToTrafficMirrorFiltersTrafficMirrorFilterArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return i.ToTrafficMirrorFiltersTrafficMirrorFilterArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTrafficMirrorFilterArray) ToTrafficMirrorFiltersTrafficMirrorFilterArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTrafficMirrorFilterArrayOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTrafficMirrorFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilter)(nil)).Elem()
}

func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) ToTrafficMirrorFiltersTrafficMirrorFilterOutput() TrafficMirrorFiltersTrafficMirrorFilterOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) ToTrafficMirrorFiltersTrafficMirrorFilterOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterOutput {
	return o
}

// The create time of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) string { return v.Description }).(pulumi.StringOutput)
}

// The ingress filter rules of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) EgressFilterRules() TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) []TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule {
		return v.EgressFilterRules
	}).(TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput)
}

// The ID of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) string { return v.Id }).(pulumi.StringOutput)
}

// The ingress filter rules of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) IngressFilterRules() TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) []TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule {
		return v.IngressFilterRules
	}).(TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput)
}

// The project name of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) Tags() TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) []TrafficMirrorFiltersTrafficMirrorFilterTag {
		return v.Tags
	}).(TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput)
}

// The ID of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The name of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) TrafficMirrorFilterName() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) string { return v.TrafficMirrorFilterName }).(pulumi.StringOutput)
}

// The last update time of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilter) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTrafficMirrorFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTrafficMirrorFilter)(nil)).Elem()
}

func (o TrafficMirrorFiltersTrafficMirrorFilterArrayOutput) ToTrafficMirrorFiltersTrafficMirrorFilterArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterArrayOutput) ToTrafficMirrorFiltersTrafficMirrorFilterArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFiltersTrafficMirrorFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorFiltersTrafficMirrorFilter {
		return vs[0].([]TrafficMirrorFiltersTrafficMirrorFilter)[vs[1].(int)]
	}).(TrafficMirrorFiltersTrafficMirrorFilterOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule struct {
	// The create time of traffic mirror filter rule.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description string `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange string `pulumi:"destinationPortRange"`
	// The policy of traffic mirror filter rule.
	Policy string `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority int `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol string `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange string `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter.
	Status string `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection string `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId string `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter.
	UpdatedAt string `pulumi:"updatedAt"`
}

// TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput is an input type that accepts TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs and TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput` via:
//
//	TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs{...}
type TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput() TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput
	ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutputWithContext(context.Context) TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput
}

type TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs struct {
	// The create time of traffic mirror filter rule.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange pulumi.StringInput `pulumi:"destinationPortRange"`
	// The policy of traffic mirror filter rule.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange pulumi.StringInput `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter.
	Status pulumi.StringInput `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection pulumi.StringInput `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId pulumi.StringInput `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)(nil)).Elem()
}

func (i TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs) ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput() TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return i.ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs) ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput)
}

// TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput is an input type that accepts TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray and TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput` via:
//
//	TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray{ TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs{...} }
type TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput
	ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutputWithContext(context.Context) TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput
}

type TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray []TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput

func (TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)(nil)).Elem()
}

func (i TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray) ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return i.ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray) ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput() TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return o
}

// The create time of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.Description }).(pulumi.StringOutput)
}

// The destination cidr block of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The destination port range of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.DestinationPortRange }).(pulumi.StringOutput)
}

// The policy of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The priority of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source cidr block of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

// The source port range of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

// The status of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.Status }).(pulumi.StringOutput)
}

// The traffic direction of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) TrafficDirection() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.TrafficDirection }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) TrafficMirrorFilterRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string {
		return v.TrafficMirrorFilterRuleId
	}).(pulumi.StringOutput)
}

// The last update time of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput) ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput) ToTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule {
		return vs[0].([]TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)[vs[1].(int)]
	}).(TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule struct {
	// The create time of traffic mirror filter rule.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description string `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange string `pulumi:"destinationPortRange"`
	// The policy of traffic mirror filter rule.
	Policy string `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority int `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol string `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange string `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter.
	Status string `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection string `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId string `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter.
	UpdatedAt string `pulumi:"updatedAt"`
}

// TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput is an input type that accepts TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs and TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput` via:
//
//	TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs{...}
type TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput() TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput
	ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutputWithContext(context.Context) TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput
}

type TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs struct {
	// The create time of traffic mirror filter rule.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange pulumi.StringInput `pulumi:"destinationPortRange"`
	// The policy of traffic mirror filter rule.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange pulumi.StringInput `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter.
	Status pulumi.StringInput `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection pulumi.StringInput `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId pulumi.StringInput `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)(nil)).Elem()
}

func (i TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs) ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput() TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return i.ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs) ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput)
}

// TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput is an input type that accepts TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray and TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput` via:
//
//	TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray{ TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs{...} }
type TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput
	ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutputWithContext(context.Context) TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput
}

type TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray []TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput

func (TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)(nil)).Elem()
}

func (i TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray) ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return i.ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray) ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput() TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return o
}

// The create time of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.Description }).(pulumi.StringOutput)
}

// The destination cidr block of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The destination port range of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.DestinationPortRange }).(pulumi.StringOutput)
}

// The policy of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The priority of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source cidr block of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

// The source port range of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

// The status of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.Status }).(pulumi.StringOutput)
}

// The traffic direction of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) TrafficDirection() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.TrafficDirection }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string {
		return v.TrafficMirrorFilterId
	}).(pulumi.StringOutput)
}

// The ID of traffic mirror filter rule.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) TrafficMirrorFilterRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string {
		return v.TrafficMirrorFilterRuleId
	}).(pulumi.StringOutput)
}

// The last update time of traffic mirror filter.
func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)(nil)).Elem()
}

func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput) ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput) ToTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule {
		return vs[0].([]TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)[vs[1].(int)]
	}).(TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorFiltersTrafficMirrorFilterTagInput is an input type that accepts TrafficMirrorFiltersTrafficMirrorFilterTagArgs and TrafficMirrorFiltersTrafficMirrorFilterTagOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTrafficMirrorFilterTagInput` via:
//
//	TrafficMirrorFiltersTrafficMirrorFilterTagArgs{...}
type TrafficMirrorFiltersTrafficMirrorFilterTagInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTrafficMirrorFilterTagOutput() TrafficMirrorFiltersTrafficMirrorFilterTagOutput
	ToTrafficMirrorFiltersTrafficMirrorFilterTagOutputWithContext(context.Context) TrafficMirrorFiltersTrafficMirrorFilterTagOutput
}

type TrafficMirrorFiltersTrafficMirrorFilterTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorFiltersTrafficMirrorFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterTag)(nil)).Elem()
}

func (i TrafficMirrorFiltersTrafficMirrorFilterTagArgs) ToTrafficMirrorFiltersTrafficMirrorFilterTagOutput() TrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return i.ToTrafficMirrorFiltersTrafficMirrorFilterTagOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTrafficMirrorFilterTagArgs) ToTrafficMirrorFiltersTrafficMirrorFilterTagOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTrafficMirrorFilterTagOutput)
}

// TrafficMirrorFiltersTrafficMirrorFilterTagArrayInput is an input type that accepts TrafficMirrorFiltersTrafficMirrorFilterTagArray and TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorFiltersTrafficMirrorFilterTagArrayInput` via:
//
//	TrafficMirrorFiltersTrafficMirrorFilterTagArray{ TrafficMirrorFiltersTrafficMirrorFilterTagArgs{...} }
type TrafficMirrorFiltersTrafficMirrorFilterTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput
	ToTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutputWithContext(context.Context) TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput
}

type TrafficMirrorFiltersTrafficMirrorFilterTagArray []TrafficMirrorFiltersTrafficMirrorFilterTagInput

func (TrafficMirrorFiltersTrafficMirrorFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTrafficMirrorFilterTag)(nil)).Elem()
}

func (i TrafficMirrorFiltersTrafficMirrorFilterTagArray) ToTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return i.ToTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorFiltersTrafficMirrorFilterTagArray) ToTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTrafficMirrorFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterTag)(nil)).Elem()
}

func (o TrafficMirrorFiltersTrafficMirrorFilterTagOutput) ToTrafficMirrorFiltersTrafficMirrorFilterTagOutput() TrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterTagOutput) ToTrafficMirrorFiltersTrafficMirrorFilterTagOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorFiltersTrafficMirrorFilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorFiltersTrafficMirrorFilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorFiltersTrafficMirrorFilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorFiltersTrafficMirrorFilterTag)(nil)).Elem()
}

func (o TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput) ToTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput() TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput) ToTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutputWithContext(ctx context.Context) TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return o
}

func (o TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorFiltersTrafficMirrorFilterTag {
		return vs[0].([]TrafficMirrorFiltersTrafficMirrorFilterTag)[vs[1].(int)]
	}).(TrafficMirrorFiltersTrafficMirrorFilterTagOutput)
}

type TrafficMirrorSessionTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorSessionTagInput is an input type that accepts TrafficMirrorSessionTagArgs and TrafficMirrorSessionTagOutput values.
// You can construct a concrete instance of `TrafficMirrorSessionTagInput` via:
//
//	TrafficMirrorSessionTagArgs{...}
type TrafficMirrorSessionTagInput interface {
	pulumi.Input

	ToTrafficMirrorSessionTagOutput() TrafficMirrorSessionTagOutput
	ToTrafficMirrorSessionTagOutputWithContext(context.Context) TrafficMirrorSessionTagOutput
}

type TrafficMirrorSessionTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorSessionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorSessionTag)(nil)).Elem()
}

func (i TrafficMirrorSessionTagArgs) ToTrafficMirrorSessionTagOutput() TrafficMirrorSessionTagOutput {
	return i.ToTrafficMirrorSessionTagOutputWithContext(context.Background())
}

func (i TrafficMirrorSessionTagArgs) ToTrafficMirrorSessionTagOutputWithContext(ctx context.Context) TrafficMirrorSessionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorSessionTagOutput)
}

// TrafficMirrorSessionTagArrayInput is an input type that accepts TrafficMirrorSessionTagArray and TrafficMirrorSessionTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorSessionTagArrayInput` via:
//
//	TrafficMirrorSessionTagArray{ TrafficMirrorSessionTagArgs{...} }
type TrafficMirrorSessionTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorSessionTagArrayOutput() TrafficMirrorSessionTagArrayOutput
	ToTrafficMirrorSessionTagArrayOutputWithContext(context.Context) TrafficMirrorSessionTagArrayOutput
}

type TrafficMirrorSessionTagArray []TrafficMirrorSessionTagInput

func (TrafficMirrorSessionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorSessionTag)(nil)).Elem()
}

func (i TrafficMirrorSessionTagArray) ToTrafficMirrorSessionTagArrayOutput() TrafficMirrorSessionTagArrayOutput {
	return i.ToTrafficMirrorSessionTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorSessionTagArray) ToTrafficMirrorSessionTagArrayOutputWithContext(ctx context.Context) TrafficMirrorSessionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorSessionTagArrayOutput)
}

type TrafficMirrorSessionTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorSessionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorSessionTag)(nil)).Elem()
}

func (o TrafficMirrorSessionTagOutput) ToTrafficMirrorSessionTagOutput() TrafficMirrorSessionTagOutput {
	return o
}

func (o TrafficMirrorSessionTagOutput) ToTrafficMirrorSessionTagOutputWithContext(ctx context.Context) TrafficMirrorSessionTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorSessionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorSessionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorSessionTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorSessionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorSessionTag)(nil)).Elem()
}

func (o TrafficMirrorSessionTagArrayOutput) ToTrafficMirrorSessionTagArrayOutput() TrafficMirrorSessionTagArrayOutput {
	return o
}

func (o TrafficMirrorSessionTagArrayOutput) ToTrafficMirrorSessionTagArrayOutputWithContext(ctx context.Context) TrafficMirrorSessionTagArrayOutput {
	return o
}

func (o TrafficMirrorSessionTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorSessionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorSessionTag {
		return vs[0].([]TrafficMirrorSessionTag)[vs[1].(int)]
	}).(TrafficMirrorSessionTagOutput)
}

type TrafficMirrorSessionsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorSessionsTagInput is an input type that accepts TrafficMirrorSessionsTagArgs and TrafficMirrorSessionsTagOutput values.
// You can construct a concrete instance of `TrafficMirrorSessionsTagInput` via:
//
//	TrafficMirrorSessionsTagArgs{...}
type TrafficMirrorSessionsTagInput interface {
	pulumi.Input

	ToTrafficMirrorSessionsTagOutput() TrafficMirrorSessionsTagOutput
	ToTrafficMirrorSessionsTagOutputWithContext(context.Context) TrafficMirrorSessionsTagOutput
}

type TrafficMirrorSessionsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorSessionsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorSessionsTag)(nil)).Elem()
}

func (i TrafficMirrorSessionsTagArgs) ToTrafficMirrorSessionsTagOutput() TrafficMirrorSessionsTagOutput {
	return i.ToTrafficMirrorSessionsTagOutputWithContext(context.Background())
}

func (i TrafficMirrorSessionsTagArgs) ToTrafficMirrorSessionsTagOutputWithContext(ctx context.Context) TrafficMirrorSessionsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorSessionsTagOutput)
}

// TrafficMirrorSessionsTagArrayInput is an input type that accepts TrafficMirrorSessionsTagArray and TrafficMirrorSessionsTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorSessionsTagArrayInput` via:
//
//	TrafficMirrorSessionsTagArray{ TrafficMirrorSessionsTagArgs{...} }
type TrafficMirrorSessionsTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorSessionsTagArrayOutput() TrafficMirrorSessionsTagArrayOutput
	ToTrafficMirrorSessionsTagArrayOutputWithContext(context.Context) TrafficMirrorSessionsTagArrayOutput
}

type TrafficMirrorSessionsTagArray []TrafficMirrorSessionsTagInput

func (TrafficMirrorSessionsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorSessionsTag)(nil)).Elem()
}

func (i TrafficMirrorSessionsTagArray) ToTrafficMirrorSessionsTagArrayOutput() TrafficMirrorSessionsTagArrayOutput {
	return i.ToTrafficMirrorSessionsTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorSessionsTagArray) ToTrafficMirrorSessionsTagArrayOutputWithContext(ctx context.Context) TrafficMirrorSessionsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorSessionsTagArrayOutput)
}

type TrafficMirrorSessionsTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorSessionsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorSessionsTag)(nil)).Elem()
}

func (o TrafficMirrorSessionsTagOutput) ToTrafficMirrorSessionsTagOutput() TrafficMirrorSessionsTagOutput {
	return o
}

func (o TrafficMirrorSessionsTagOutput) ToTrafficMirrorSessionsTagOutputWithContext(ctx context.Context) TrafficMirrorSessionsTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorSessionsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorSessionsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorSessionsTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorSessionsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorSessionsTag)(nil)).Elem()
}

func (o TrafficMirrorSessionsTagArrayOutput) ToTrafficMirrorSessionsTagArrayOutput() TrafficMirrorSessionsTagArrayOutput {
	return o
}

func (o TrafficMirrorSessionsTagArrayOutput) ToTrafficMirrorSessionsTagArrayOutputWithContext(ctx context.Context) TrafficMirrorSessionsTagArrayOutput {
	return o
}

func (o TrafficMirrorSessionsTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorSessionsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorSessionsTag {
		return vs[0].([]TrafficMirrorSessionsTag)[vs[1].(int)]
	}).(TrafficMirrorSessionsTagOutput)
}

type TrafficMirrorSessionsTrafficMirrorSession struct {
	// The business status of traffic mirror session.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time of traffic mirror session.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror session.
	Description string `pulumi:"description"`
	// The ID of traffic mirror session.
	Id string `pulumi:"id"`
	// The lock reason of traffic mirror session.
	LockReason string `pulumi:"lockReason"`
	// The packet length of traffic mirror session.
	PacketLength int `pulumi:"packetLength"`
	// The priority of traffic mirror session.
	Priority int `pulumi:"priority"`
	// The project name of traffic mirror session.
	ProjectName string `pulumi:"projectName"`
	// The status of traffic mirror session.
	Status string `pulumi:"status"`
	// Tags.
	Tags []TrafficMirrorSessionsTrafficMirrorSessionTag `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror session.
	TrafficMirrorSessionId string `pulumi:"trafficMirrorSessionId"`
	// The name of traffic mirror session.
	TrafficMirrorSessionName string `pulumi:"trafficMirrorSessionName"`
	// The IDs of traffic mirror source.
	TrafficMirrorSourceIds []string `pulumi:"trafficMirrorSourceIds"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId string `pulumi:"trafficMirrorTargetId"`
	// The update time of traffic mirror session.
	UpdatedAt string `pulumi:"updatedAt"`
	// The ID of virtual network.
	VirtualNetworkId int `pulumi:"virtualNetworkId"`
}

// TrafficMirrorSessionsTrafficMirrorSessionInput is an input type that accepts TrafficMirrorSessionsTrafficMirrorSessionArgs and TrafficMirrorSessionsTrafficMirrorSessionOutput values.
// You can construct a concrete instance of `TrafficMirrorSessionsTrafficMirrorSessionInput` via:
//
//	TrafficMirrorSessionsTrafficMirrorSessionArgs{...}
type TrafficMirrorSessionsTrafficMirrorSessionInput interface {
	pulumi.Input

	ToTrafficMirrorSessionsTrafficMirrorSessionOutput() TrafficMirrorSessionsTrafficMirrorSessionOutput
	ToTrafficMirrorSessionsTrafficMirrorSessionOutputWithContext(context.Context) TrafficMirrorSessionsTrafficMirrorSessionOutput
}

type TrafficMirrorSessionsTrafficMirrorSessionArgs struct {
	// The business status of traffic mirror session.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time of traffic mirror session.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror session.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of traffic mirror session.
	Id pulumi.StringInput `pulumi:"id"`
	// The lock reason of traffic mirror session.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The packet length of traffic mirror session.
	PacketLength pulumi.IntInput `pulumi:"packetLength"`
	// The priority of traffic mirror session.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The project name of traffic mirror session.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of traffic mirror session.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags TrafficMirrorSessionsTrafficMirrorSessionTagArrayInput `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror session.
	TrafficMirrorSessionId pulumi.StringInput `pulumi:"trafficMirrorSessionId"`
	// The name of traffic mirror session.
	TrafficMirrorSessionName pulumi.StringInput `pulumi:"trafficMirrorSessionName"`
	// The IDs of traffic mirror source.
	TrafficMirrorSourceIds pulumi.StringArrayInput `pulumi:"trafficMirrorSourceIds"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId pulumi.StringInput `pulumi:"trafficMirrorTargetId"`
	// The update time of traffic mirror session.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The ID of virtual network.
	VirtualNetworkId pulumi.IntInput `pulumi:"virtualNetworkId"`
}

func (TrafficMirrorSessionsTrafficMirrorSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorSessionsTrafficMirrorSession)(nil)).Elem()
}

func (i TrafficMirrorSessionsTrafficMirrorSessionArgs) ToTrafficMirrorSessionsTrafficMirrorSessionOutput() TrafficMirrorSessionsTrafficMirrorSessionOutput {
	return i.ToTrafficMirrorSessionsTrafficMirrorSessionOutputWithContext(context.Background())
}

func (i TrafficMirrorSessionsTrafficMirrorSessionArgs) ToTrafficMirrorSessionsTrafficMirrorSessionOutputWithContext(ctx context.Context) TrafficMirrorSessionsTrafficMirrorSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorSessionsTrafficMirrorSessionOutput)
}

// TrafficMirrorSessionsTrafficMirrorSessionArrayInput is an input type that accepts TrafficMirrorSessionsTrafficMirrorSessionArray and TrafficMirrorSessionsTrafficMirrorSessionArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorSessionsTrafficMirrorSessionArrayInput` via:
//
//	TrafficMirrorSessionsTrafficMirrorSessionArray{ TrafficMirrorSessionsTrafficMirrorSessionArgs{...} }
type TrafficMirrorSessionsTrafficMirrorSessionArrayInput interface {
	pulumi.Input

	ToTrafficMirrorSessionsTrafficMirrorSessionArrayOutput() TrafficMirrorSessionsTrafficMirrorSessionArrayOutput
	ToTrafficMirrorSessionsTrafficMirrorSessionArrayOutputWithContext(context.Context) TrafficMirrorSessionsTrafficMirrorSessionArrayOutput
}

type TrafficMirrorSessionsTrafficMirrorSessionArray []TrafficMirrorSessionsTrafficMirrorSessionInput

func (TrafficMirrorSessionsTrafficMirrorSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorSessionsTrafficMirrorSession)(nil)).Elem()
}

func (i TrafficMirrorSessionsTrafficMirrorSessionArray) ToTrafficMirrorSessionsTrafficMirrorSessionArrayOutput() TrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return i.ToTrafficMirrorSessionsTrafficMirrorSessionArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorSessionsTrafficMirrorSessionArray) ToTrafficMirrorSessionsTrafficMirrorSessionArrayOutputWithContext(ctx context.Context) TrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorSessionsTrafficMirrorSessionArrayOutput)
}

type TrafficMirrorSessionsTrafficMirrorSessionOutput struct{ *pulumi.OutputState }

func (TrafficMirrorSessionsTrafficMirrorSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorSessionsTrafficMirrorSession)(nil)).Elem()
}

func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) ToTrafficMirrorSessionsTrafficMirrorSessionOutput() TrafficMirrorSessionsTrafficMirrorSessionOutput {
	return o
}

func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) ToTrafficMirrorSessionsTrafficMirrorSessionOutputWithContext(ctx context.Context) TrafficMirrorSessionsTrafficMirrorSessionOutput {
	return o
}

// The business status of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.Id }).(pulumi.StringOutput)
}

// The lock reason of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.LockReason }).(pulumi.StringOutput)
}

// The packet length of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) PacketLength() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) int { return v.PacketLength }).(pulumi.IntOutput)
}

// The priority of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) int { return v.Priority }).(pulumi.IntOutput)
}

// The project name of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) Tags() TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) []TrafficMirrorSessionsTrafficMirrorSessionTag {
		return v.Tags
	}).(TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput)
}

// The ID of traffic mirror filter.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The ID of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorSessionId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.TrafficMirrorSessionId }).(pulumi.StringOutput)
}

// The name of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorSessionName() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.TrafficMirrorSessionName }).(pulumi.StringOutput)
}

// The IDs of traffic mirror source.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) []string { return v.TrafficMirrorSourceIds }).(pulumi.StringArrayOutput)
}

// The ID of traffic mirror target.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.TrafficMirrorTargetId }).(pulumi.StringOutput)
}

// The update time of traffic mirror session.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The ID of virtual network.
func (o TrafficMirrorSessionsTrafficMirrorSessionOutput) VirtualNetworkId() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSession) int { return v.VirtualNetworkId }).(pulumi.IntOutput)
}

type TrafficMirrorSessionsTrafficMirrorSessionArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorSessionsTrafficMirrorSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorSessionsTrafficMirrorSession)(nil)).Elem()
}

func (o TrafficMirrorSessionsTrafficMirrorSessionArrayOutput) ToTrafficMirrorSessionsTrafficMirrorSessionArrayOutput() TrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return o
}

func (o TrafficMirrorSessionsTrafficMirrorSessionArrayOutput) ToTrafficMirrorSessionsTrafficMirrorSessionArrayOutputWithContext(ctx context.Context) TrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return o
}

func (o TrafficMirrorSessionsTrafficMirrorSessionArrayOutput) Index(i pulumi.IntInput) TrafficMirrorSessionsTrafficMirrorSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorSessionsTrafficMirrorSession {
		return vs[0].([]TrafficMirrorSessionsTrafficMirrorSession)[vs[1].(int)]
	}).(TrafficMirrorSessionsTrafficMirrorSessionOutput)
}

type TrafficMirrorSessionsTrafficMirrorSessionTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorSessionsTrafficMirrorSessionTagInput is an input type that accepts TrafficMirrorSessionsTrafficMirrorSessionTagArgs and TrafficMirrorSessionsTrafficMirrorSessionTagOutput values.
// You can construct a concrete instance of `TrafficMirrorSessionsTrafficMirrorSessionTagInput` via:
//
//	TrafficMirrorSessionsTrafficMirrorSessionTagArgs{...}
type TrafficMirrorSessionsTrafficMirrorSessionTagInput interface {
	pulumi.Input

	ToTrafficMirrorSessionsTrafficMirrorSessionTagOutput() TrafficMirrorSessionsTrafficMirrorSessionTagOutput
	ToTrafficMirrorSessionsTrafficMirrorSessionTagOutputWithContext(context.Context) TrafficMirrorSessionsTrafficMirrorSessionTagOutput
}

type TrafficMirrorSessionsTrafficMirrorSessionTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorSessionsTrafficMirrorSessionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorSessionsTrafficMirrorSessionTag)(nil)).Elem()
}

func (i TrafficMirrorSessionsTrafficMirrorSessionTagArgs) ToTrafficMirrorSessionsTrafficMirrorSessionTagOutput() TrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return i.ToTrafficMirrorSessionsTrafficMirrorSessionTagOutputWithContext(context.Background())
}

func (i TrafficMirrorSessionsTrafficMirrorSessionTagArgs) ToTrafficMirrorSessionsTrafficMirrorSessionTagOutputWithContext(ctx context.Context) TrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorSessionsTrafficMirrorSessionTagOutput)
}

// TrafficMirrorSessionsTrafficMirrorSessionTagArrayInput is an input type that accepts TrafficMirrorSessionsTrafficMirrorSessionTagArray and TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorSessionsTrafficMirrorSessionTagArrayInput` via:
//
//	TrafficMirrorSessionsTrafficMirrorSessionTagArray{ TrafficMirrorSessionsTrafficMirrorSessionTagArgs{...} }
type TrafficMirrorSessionsTrafficMirrorSessionTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput() TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput
	ToTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutputWithContext(context.Context) TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput
}

type TrafficMirrorSessionsTrafficMirrorSessionTagArray []TrafficMirrorSessionsTrafficMirrorSessionTagInput

func (TrafficMirrorSessionsTrafficMirrorSessionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorSessionsTrafficMirrorSessionTag)(nil)).Elem()
}

func (i TrafficMirrorSessionsTrafficMirrorSessionTagArray) ToTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput() TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return i.ToTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorSessionsTrafficMirrorSessionTagArray) ToTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutputWithContext(ctx context.Context) TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput)
}

type TrafficMirrorSessionsTrafficMirrorSessionTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorSessionsTrafficMirrorSessionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorSessionsTrafficMirrorSessionTag)(nil)).Elem()
}

func (o TrafficMirrorSessionsTrafficMirrorSessionTagOutput) ToTrafficMirrorSessionsTrafficMirrorSessionTagOutput() TrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return o
}

func (o TrafficMirrorSessionsTrafficMirrorSessionTagOutput) ToTrafficMirrorSessionsTrafficMirrorSessionTagOutputWithContext(ctx context.Context) TrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorSessionsTrafficMirrorSessionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSessionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorSessionsTrafficMirrorSessionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorSessionsTrafficMirrorSessionTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorSessionsTrafficMirrorSessionTag)(nil)).Elem()
}

func (o TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput) ToTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput() TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return o
}

func (o TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput) ToTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutputWithContext(ctx context.Context) TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return o
}

func (o TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorSessionsTrafficMirrorSessionTag {
		return vs[0].([]TrafficMirrorSessionsTrafficMirrorSessionTag)[vs[1].(int)]
	}).(TrafficMirrorSessionsTrafficMirrorSessionTagOutput)
}

type TrafficMirrorTargetTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorTargetTagInput is an input type that accepts TrafficMirrorTargetTagArgs and TrafficMirrorTargetTagOutput values.
// You can construct a concrete instance of `TrafficMirrorTargetTagInput` via:
//
//	TrafficMirrorTargetTagArgs{...}
type TrafficMirrorTargetTagInput interface {
	pulumi.Input

	ToTrafficMirrorTargetTagOutput() TrafficMirrorTargetTagOutput
	ToTrafficMirrorTargetTagOutputWithContext(context.Context) TrafficMirrorTargetTagOutput
}

type TrafficMirrorTargetTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorTargetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetTag)(nil)).Elem()
}

func (i TrafficMirrorTargetTagArgs) ToTrafficMirrorTargetTagOutput() TrafficMirrorTargetTagOutput {
	return i.ToTrafficMirrorTargetTagOutputWithContext(context.Background())
}

func (i TrafficMirrorTargetTagArgs) ToTrafficMirrorTargetTagOutputWithContext(ctx context.Context) TrafficMirrorTargetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorTargetTagOutput)
}

// TrafficMirrorTargetTagArrayInput is an input type that accepts TrafficMirrorTargetTagArray and TrafficMirrorTargetTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorTargetTagArrayInput` via:
//
//	TrafficMirrorTargetTagArray{ TrafficMirrorTargetTagArgs{...} }
type TrafficMirrorTargetTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorTargetTagArrayOutput() TrafficMirrorTargetTagArrayOutput
	ToTrafficMirrorTargetTagArrayOutputWithContext(context.Context) TrafficMirrorTargetTagArrayOutput
}

type TrafficMirrorTargetTagArray []TrafficMirrorTargetTagInput

func (TrafficMirrorTargetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorTargetTag)(nil)).Elem()
}

func (i TrafficMirrorTargetTagArray) ToTrafficMirrorTargetTagArrayOutput() TrafficMirrorTargetTagArrayOutput {
	return i.ToTrafficMirrorTargetTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorTargetTagArray) ToTrafficMirrorTargetTagArrayOutputWithContext(ctx context.Context) TrafficMirrorTargetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorTargetTagArrayOutput)
}

type TrafficMirrorTargetTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetTag)(nil)).Elem()
}

func (o TrafficMirrorTargetTagOutput) ToTrafficMirrorTargetTagOutput() TrafficMirrorTargetTagOutput {
	return o
}

func (o TrafficMirrorTargetTagOutput) ToTrafficMirrorTargetTagOutputWithContext(ctx context.Context) TrafficMirrorTargetTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorTargetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorTargetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorTargetTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorTargetTag)(nil)).Elem()
}

func (o TrafficMirrorTargetTagArrayOutput) ToTrafficMirrorTargetTagArrayOutput() TrafficMirrorTargetTagArrayOutput {
	return o
}

func (o TrafficMirrorTargetTagArrayOutput) ToTrafficMirrorTargetTagArrayOutputWithContext(ctx context.Context) TrafficMirrorTargetTagArrayOutput {
	return o
}

func (o TrafficMirrorTargetTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorTargetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorTargetTag {
		return vs[0].([]TrafficMirrorTargetTag)[vs[1].(int)]
	}).(TrafficMirrorTargetTagOutput)
}

type TrafficMirrorTargetsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorTargetsTagInput is an input type that accepts TrafficMirrorTargetsTagArgs and TrafficMirrorTargetsTagOutput values.
// You can construct a concrete instance of `TrafficMirrorTargetsTagInput` via:
//
//	TrafficMirrorTargetsTagArgs{...}
type TrafficMirrorTargetsTagInput interface {
	pulumi.Input

	ToTrafficMirrorTargetsTagOutput() TrafficMirrorTargetsTagOutput
	ToTrafficMirrorTargetsTagOutputWithContext(context.Context) TrafficMirrorTargetsTagOutput
}

type TrafficMirrorTargetsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorTargetsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetsTag)(nil)).Elem()
}

func (i TrafficMirrorTargetsTagArgs) ToTrafficMirrorTargetsTagOutput() TrafficMirrorTargetsTagOutput {
	return i.ToTrafficMirrorTargetsTagOutputWithContext(context.Background())
}

func (i TrafficMirrorTargetsTagArgs) ToTrafficMirrorTargetsTagOutputWithContext(ctx context.Context) TrafficMirrorTargetsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorTargetsTagOutput)
}

// TrafficMirrorTargetsTagArrayInput is an input type that accepts TrafficMirrorTargetsTagArray and TrafficMirrorTargetsTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorTargetsTagArrayInput` via:
//
//	TrafficMirrorTargetsTagArray{ TrafficMirrorTargetsTagArgs{...} }
type TrafficMirrorTargetsTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorTargetsTagArrayOutput() TrafficMirrorTargetsTagArrayOutput
	ToTrafficMirrorTargetsTagArrayOutputWithContext(context.Context) TrafficMirrorTargetsTagArrayOutput
}

type TrafficMirrorTargetsTagArray []TrafficMirrorTargetsTagInput

func (TrafficMirrorTargetsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorTargetsTag)(nil)).Elem()
}

func (i TrafficMirrorTargetsTagArray) ToTrafficMirrorTargetsTagArrayOutput() TrafficMirrorTargetsTagArrayOutput {
	return i.ToTrafficMirrorTargetsTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorTargetsTagArray) ToTrafficMirrorTargetsTagArrayOutputWithContext(ctx context.Context) TrafficMirrorTargetsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorTargetsTagArrayOutput)
}

type TrafficMirrorTargetsTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetsTag)(nil)).Elem()
}

func (o TrafficMirrorTargetsTagOutput) ToTrafficMirrorTargetsTagOutput() TrafficMirrorTargetsTagOutput {
	return o
}

func (o TrafficMirrorTargetsTagOutput) ToTrafficMirrorTargetsTagOutputWithContext(ctx context.Context) TrafficMirrorTargetsTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorTargetsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorTargetsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorTargetsTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorTargetsTag)(nil)).Elem()
}

func (o TrafficMirrorTargetsTagArrayOutput) ToTrafficMirrorTargetsTagArrayOutput() TrafficMirrorTargetsTagArrayOutput {
	return o
}

func (o TrafficMirrorTargetsTagArrayOutput) ToTrafficMirrorTargetsTagArrayOutputWithContext(ctx context.Context) TrafficMirrorTargetsTagArrayOutput {
	return o
}

func (o TrafficMirrorTargetsTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorTargetsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorTargetsTag {
		return vs[0].([]TrafficMirrorTargetsTag)[vs[1].(int)]
	}).(TrafficMirrorTargetsTagOutput)
}

type TrafficMirrorTargetsTrafficMirrorTarget struct {
	// The create time of traffic mirror target.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror target.
	Description string `pulumi:"description"`
	// The ID of traffic mirror target.
	Id string `pulumi:"id"`
	// The instance id of traffic mirror target.
	InstanceId string `pulumi:"instanceId"`
	// The instance type of traffic mirror target.
	InstanceType string `pulumi:"instanceType"`
	// The project name of traffic mirror target.
	ProjectName string `pulumi:"projectName"`
	// The status of traffic mirror target.
	Status string `pulumi:"status"`
	// Tags.
	Tags []TrafficMirrorTargetsTrafficMirrorTargetTag `pulumi:"tags"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId string `pulumi:"trafficMirrorTargetId"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName string `pulumi:"trafficMirrorTargetName"`
	// The update time of traffic mirror target.
	UpdatedAt string `pulumi:"updatedAt"`
}

// TrafficMirrorTargetsTrafficMirrorTargetInput is an input type that accepts TrafficMirrorTargetsTrafficMirrorTargetArgs and TrafficMirrorTargetsTrafficMirrorTargetOutput values.
// You can construct a concrete instance of `TrafficMirrorTargetsTrafficMirrorTargetInput` via:
//
//	TrafficMirrorTargetsTrafficMirrorTargetArgs{...}
type TrafficMirrorTargetsTrafficMirrorTargetInput interface {
	pulumi.Input

	ToTrafficMirrorTargetsTrafficMirrorTargetOutput() TrafficMirrorTargetsTrafficMirrorTargetOutput
	ToTrafficMirrorTargetsTrafficMirrorTargetOutputWithContext(context.Context) TrafficMirrorTargetsTrafficMirrorTargetOutput
}

type TrafficMirrorTargetsTrafficMirrorTargetArgs struct {
	// The create time of traffic mirror target.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror target.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of traffic mirror target.
	Id pulumi.StringInput `pulumi:"id"`
	// The instance id of traffic mirror target.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The instance type of traffic mirror target.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The project name of traffic mirror target.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of traffic mirror target.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags TrafficMirrorTargetsTrafficMirrorTargetTagArrayInput `pulumi:"tags"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId pulumi.StringInput `pulumi:"trafficMirrorTargetId"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName pulumi.StringInput `pulumi:"trafficMirrorTargetName"`
	// The update time of traffic mirror target.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (TrafficMirrorTargetsTrafficMirrorTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetsTrafficMirrorTarget)(nil)).Elem()
}

func (i TrafficMirrorTargetsTrafficMirrorTargetArgs) ToTrafficMirrorTargetsTrafficMirrorTargetOutput() TrafficMirrorTargetsTrafficMirrorTargetOutput {
	return i.ToTrafficMirrorTargetsTrafficMirrorTargetOutputWithContext(context.Background())
}

func (i TrafficMirrorTargetsTrafficMirrorTargetArgs) ToTrafficMirrorTargetsTrafficMirrorTargetOutputWithContext(ctx context.Context) TrafficMirrorTargetsTrafficMirrorTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorTargetsTrafficMirrorTargetOutput)
}

// TrafficMirrorTargetsTrafficMirrorTargetArrayInput is an input type that accepts TrafficMirrorTargetsTrafficMirrorTargetArray and TrafficMirrorTargetsTrafficMirrorTargetArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorTargetsTrafficMirrorTargetArrayInput` via:
//
//	TrafficMirrorTargetsTrafficMirrorTargetArray{ TrafficMirrorTargetsTrafficMirrorTargetArgs{...} }
type TrafficMirrorTargetsTrafficMirrorTargetArrayInput interface {
	pulumi.Input

	ToTrafficMirrorTargetsTrafficMirrorTargetArrayOutput() TrafficMirrorTargetsTrafficMirrorTargetArrayOutput
	ToTrafficMirrorTargetsTrafficMirrorTargetArrayOutputWithContext(context.Context) TrafficMirrorTargetsTrafficMirrorTargetArrayOutput
}

type TrafficMirrorTargetsTrafficMirrorTargetArray []TrafficMirrorTargetsTrafficMirrorTargetInput

func (TrafficMirrorTargetsTrafficMirrorTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorTargetsTrafficMirrorTarget)(nil)).Elem()
}

func (i TrafficMirrorTargetsTrafficMirrorTargetArray) ToTrafficMirrorTargetsTrafficMirrorTargetArrayOutput() TrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return i.ToTrafficMirrorTargetsTrafficMirrorTargetArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorTargetsTrafficMirrorTargetArray) ToTrafficMirrorTargetsTrafficMirrorTargetArrayOutputWithContext(ctx context.Context) TrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorTargetsTrafficMirrorTargetArrayOutput)
}

type TrafficMirrorTargetsTrafficMirrorTargetOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetsTrafficMirrorTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetsTrafficMirrorTarget)(nil)).Elem()
}

func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) ToTrafficMirrorTargetsTrafficMirrorTargetOutput() TrafficMirrorTargetsTrafficMirrorTargetOutput {
	return o
}

func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) ToTrafficMirrorTargetsTrafficMirrorTargetOutputWithContext(ctx context.Context) TrafficMirrorTargetsTrafficMirrorTargetOutput {
	return o
}

// The create time of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.Id }).(pulumi.StringOutput)
}

// The instance id of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The instance type of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The project name of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) Tags() TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) []TrafficMirrorTargetsTrafficMirrorTargetTag {
		return v.Tags
	}).(TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput)
}

// The ID of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) TrafficMirrorTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.TrafficMirrorTargetId }).(pulumi.StringOutput)
}

// The name of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) TrafficMirrorTargetName() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.TrafficMirrorTargetName }).(pulumi.StringOutput)
}

// The update time of traffic mirror target.
func (o TrafficMirrorTargetsTrafficMirrorTargetOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTarget) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type TrafficMirrorTargetsTrafficMirrorTargetArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetsTrafficMirrorTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorTargetsTrafficMirrorTarget)(nil)).Elem()
}

func (o TrafficMirrorTargetsTrafficMirrorTargetArrayOutput) ToTrafficMirrorTargetsTrafficMirrorTargetArrayOutput() TrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return o
}

func (o TrafficMirrorTargetsTrafficMirrorTargetArrayOutput) ToTrafficMirrorTargetsTrafficMirrorTargetArrayOutputWithContext(ctx context.Context) TrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return o
}

func (o TrafficMirrorTargetsTrafficMirrorTargetArrayOutput) Index(i pulumi.IntInput) TrafficMirrorTargetsTrafficMirrorTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorTargetsTrafficMirrorTarget {
		return vs[0].([]TrafficMirrorTargetsTrafficMirrorTarget)[vs[1].(int)]
	}).(TrafficMirrorTargetsTrafficMirrorTargetOutput)
}

type TrafficMirrorTargetsTrafficMirrorTargetTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// TrafficMirrorTargetsTrafficMirrorTargetTagInput is an input type that accepts TrafficMirrorTargetsTrafficMirrorTargetTagArgs and TrafficMirrorTargetsTrafficMirrorTargetTagOutput values.
// You can construct a concrete instance of `TrafficMirrorTargetsTrafficMirrorTargetTagInput` via:
//
//	TrafficMirrorTargetsTrafficMirrorTargetTagArgs{...}
type TrafficMirrorTargetsTrafficMirrorTargetTagInput interface {
	pulumi.Input

	ToTrafficMirrorTargetsTrafficMirrorTargetTagOutput() TrafficMirrorTargetsTrafficMirrorTargetTagOutput
	ToTrafficMirrorTargetsTrafficMirrorTargetTagOutputWithContext(context.Context) TrafficMirrorTargetsTrafficMirrorTargetTagOutput
}

type TrafficMirrorTargetsTrafficMirrorTargetTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TrafficMirrorTargetsTrafficMirrorTargetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetsTrafficMirrorTargetTag)(nil)).Elem()
}

func (i TrafficMirrorTargetsTrafficMirrorTargetTagArgs) ToTrafficMirrorTargetsTrafficMirrorTargetTagOutput() TrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return i.ToTrafficMirrorTargetsTrafficMirrorTargetTagOutputWithContext(context.Background())
}

func (i TrafficMirrorTargetsTrafficMirrorTargetTagArgs) ToTrafficMirrorTargetsTrafficMirrorTargetTagOutputWithContext(ctx context.Context) TrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorTargetsTrafficMirrorTargetTagOutput)
}

// TrafficMirrorTargetsTrafficMirrorTargetTagArrayInput is an input type that accepts TrafficMirrorTargetsTrafficMirrorTargetTagArray and TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput values.
// You can construct a concrete instance of `TrafficMirrorTargetsTrafficMirrorTargetTagArrayInput` via:
//
//	TrafficMirrorTargetsTrafficMirrorTargetTagArray{ TrafficMirrorTargetsTrafficMirrorTargetTagArgs{...} }
type TrafficMirrorTargetsTrafficMirrorTargetTagArrayInput interface {
	pulumi.Input

	ToTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput() TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput
	ToTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutputWithContext(context.Context) TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput
}

type TrafficMirrorTargetsTrafficMirrorTargetTagArray []TrafficMirrorTargetsTrafficMirrorTargetTagInput

func (TrafficMirrorTargetsTrafficMirrorTargetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorTargetsTrafficMirrorTargetTag)(nil)).Elem()
}

func (i TrafficMirrorTargetsTrafficMirrorTargetTagArray) ToTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput() TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return i.ToTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutputWithContext(context.Background())
}

func (i TrafficMirrorTargetsTrafficMirrorTargetTagArray) ToTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutputWithContext(ctx context.Context) TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput)
}

type TrafficMirrorTargetsTrafficMirrorTargetTagOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetsTrafficMirrorTargetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetsTrafficMirrorTargetTag)(nil)).Elem()
}

func (o TrafficMirrorTargetsTrafficMirrorTargetTagOutput) ToTrafficMirrorTargetsTrafficMirrorTargetTagOutput() TrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return o
}

func (o TrafficMirrorTargetsTrafficMirrorTargetTagOutput) ToTrafficMirrorTargetsTrafficMirrorTargetTagOutputWithContext(ctx context.Context) TrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return o
}

// The Key of Tags.
func (o TrafficMirrorTargetsTrafficMirrorTargetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTargetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o TrafficMirrorTargetsTrafficMirrorTargetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsTrafficMirrorTargetTag) string { return v.Value }).(pulumi.StringOutput)
}

type TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficMirrorTargetsTrafficMirrorTargetTag)(nil)).Elem()
}

func (o TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput) ToTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput() TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return o
}

func (o TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput) ToTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutputWithContext(ctx context.Context) TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return o
}

func (o TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput) Index(i pulumi.IntInput) TrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficMirrorTargetsTrafficMirrorTargetTag {
		return vs[0].([]TrafficMirrorTargetsTrafficMirrorTargetTag)[vs[1].(int)]
	}).(TrafficMirrorTargetsTrafficMirrorTargetTagOutput)
}

type VpcAssociateCen struct {
	// The ID of CEN.
	CenId *string `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId *string `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus *string `pulumi:"cenStatus"`
}

// VpcAssociateCenInput is an input type that accepts VpcAssociateCenArgs and VpcAssociateCenOutput values.
// You can construct a concrete instance of `VpcAssociateCenInput` via:
//
//	VpcAssociateCenArgs{...}
type VpcAssociateCenInput interface {
	pulumi.Input

	ToVpcAssociateCenOutput() VpcAssociateCenOutput
	ToVpcAssociateCenOutputWithContext(context.Context) VpcAssociateCenOutput
}

type VpcAssociateCenArgs struct {
	// The ID of CEN.
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId pulumi.StringPtrInput `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus pulumi.StringPtrInput `pulumi:"cenStatus"`
}

func (VpcAssociateCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAssociateCen)(nil)).Elem()
}

func (i VpcAssociateCenArgs) ToVpcAssociateCenOutput() VpcAssociateCenOutput {
	return i.ToVpcAssociateCenOutputWithContext(context.Background())
}

func (i VpcAssociateCenArgs) ToVpcAssociateCenOutputWithContext(ctx context.Context) VpcAssociateCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAssociateCenOutput)
}

// VpcAssociateCenArrayInput is an input type that accepts VpcAssociateCenArray and VpcAssociateCenArrayOutput values.
// You can construct a concrete instance of `VpcAssociateCenArrayInput` via:
//
//	VpcAssociateCenArray{ VpcAssociateCenArgs{...} }
type VpcAssociateCenArrayInput interface {
	pulumi.Input

	ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput
	ToVpcAssociateCenArrayOutputWithContext(context.Context) VpcAssociateCenArrayOutput
}

type VpcAssociateCenArray []VpcAssociateCenInput

func (VpcAssociateCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAssociateCen)(nil)).Elem()
}

func (i VpcAssociateCenArray) ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput {
	return i.ToVpcAssociateCenArrayOutputWithContext(context.Background())
}

func (i VpcAssociateCenArray) ToVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcAssociateCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAssociateCenArrayOutput)
}

type VpcAssociateCenOutput struct{ *pulumi.OutputState }

func (VpcAssociateCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAssociateCen)(nil)).Elem()
}

func (o VpcAssociateCenOutput) ToVpcAssociateCenOutput() VpcAssociateCenOutput {
	return o
}

func (o VpcAssociateCenOutput) ToVpcAssociateCenOutputWithContext(ctx context.Context) VpcAssociateCenOutput {
	return o
}

// The ID of CEN.
func (o VpcAssociateCenOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// The owner ID of CEN.
func (o VpcAssociateCenOutput) CenOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenOwnerId }).(pulumi.StringPtrOutput)
}

// The status of CEN.
func (o VpcAssociateCenOutput) CenStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenStatus }).(pulumi.StringPtrOutput)
}

type VpcAssociateCenArrayOutput struct{ *pulumi.OutputState }

func (VpcAssociateCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAssociateCen)(nil)).Elem()
}

func (o VpcAssociateCenArrayOutput) ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput {
	return o
}

func (o VpcAssociateCenArrayOutput) ToVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcAssociateCenArrayOutput {
	return o
}

func (o VpcAssociateCenArrayOutput) Index(i pulumi.IntInput) VpcAssociateCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAssociateCen {
		return vs[0].([]VpcAssociateCen)[vs[1].(int)]
	}).(VpcAssociateCenOutput)
}

type VpcTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcTagInput is an input type that accepts VpcTagArgs and VpcTagOutput values.
// You can construct a concrete instance of `VpcTagInput` via:
//
//	VpcTagArgs{...}
type VpcTagInput interface {
	pulumi.Input

	ToVpcTagOutput() VpcTagOutput
	ToVpcTagOutputWithContext(context.Context) VpcTagOutput
}

type VpcTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcTag)(nil)).Elem()
}

func (i VpcTagArgs) ToVpcTagOutput() VpcTagOutput {
	return i.ToVpcTagOutputWithContext(context.Background())
}

func (i VpcTagArgs) ToVpcTagOutputWithContext(ctx context.Context) VpcTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcTagOutput)
}

// VpcTagArrayInput is an input type that accepts VpcTagArray and VpcTagArrayOutput values.
// You can construct a concrete instance of `VpcTagArrayInput` via:
//
//	VpcTagArray{ VpcTagArgs{...} }
type VpcTagArrayInput interface {
	pulumi.Input

	ToVpcTagArrayOutput() VpcTagArrayOutput
	ToVpcTagArrayOutputWithContext(context.Context) VpcTagArrayOutput
}

type VpcTagArray []VpcTagInput

func (VpcTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcTag)(nil)).Elem()
}

func (i VpcTagArray) ToVpcTagArrayOutput() VpcTagArrayOutput {
	return i.ToVpcTagArrayOutputWithContext(context.Background())
}

func (i VpcTagArray) ToVpcTagArrayOutputWithContext(ctx context.Context) VpcTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcTagArrayOutput)
}

type VpcTagOutput struct{ *pulumi.OutputState }

func (VpcTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcTag)(nil)).Elem()
}

func (o VpcTagOutput) ToVpcTagOutput() VpcTagOutput {
	return o
}

func (o VpcTagOutput) ToVpcTagOutputWithContext(ctx context.Context) VpcTagOutput {
	return o
}

// The Key of Tags.
func (o VpcTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcTagArrayOutput struct{ *pulumi.OutputState }

func (VpcTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcTag)(nil)).Elem()
}

func (o VpcTagArrayOutput) ToVpcTagArrayOutput() VpcTagArrayOutput {
	return o
}

func (o VpcTagArrayOutput) ToVpcTagArrayOutputWithContext(ctx context.Context) VpcTagArrayOutput {
	return o
}

func (o VpcTagArrayOutput) Index(i pulumi.IntInput) VpcTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcTag {
		return vs[0].([]VpcTag)[vs[1].(int)]
	}).(VpcTagOutput)
}

type VpcsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcsTagInput is an input type that accepts VpcsTagArgs and VpcsTagOutput values.
// You can construct a concrete instance of `VpcsTagInput` via:
//
//	VpcsTagArgs{...}
type VpcsTagInput interface {
	pulumi.Input

	ToVpcsTagOutput() VpcsTagOutput
	ToVpcsTagOutputWithContext(context.Context) VpcsTagOutput
}

type VpcsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsTag)(nil)).Elem()
}

func (i VpcsTagArgs) ToVpcsTagOutput() VpcsTagOutput {
	return i.ToVpcsTagOutputWithContext(context.Background())
}

func (i VpcsTagArgs) ToVpcsTagOutputWithContext(ctx context.Context) VpcsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsTagOutput)
}

// VpcsTagArrayInput is an input type that accepts VpcsTagArray and VpcsTagArrayOutput values.
// You can construct a concrete instance of `VpcsTagArrayInput` via:
//
//	VpcsTagArray{ VpcsTagArgs{...} }
type VpcsTagArrayInput interface {
	pulumi.Input

	ToVpcsTagArrayOutput() VpcsTagArrayOutput
	ToVpcsTagArrayOutputWithContext(context.Context) VpcsTagArrayOutput
}

type VpcsTagArray []VpcsTagInput

func (VpcsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsTag)(nil)).Elem()
}

func (i VpcsTagArray) ToVpcsTagArrayOutput() VpcsTagArrayOutput {
	return i.ToVpcsTagArrayOutputWithContext(context.Background())
}

func (i VpcsTagArray) ToVpcsTagArrayOutputWithContext(ctx context.Context) VpcsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsTagArrayOutput)
}

type VpcsTagOutput struct{ *pulumi.OutputState }

func (VpcsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsTag)(nil)).Elem()
}

func (o VpcsTagOutput) ToVpcsTagOutput() VpcsTagOutput {
	return o
}

func (o VpcsTagOutput) ToVpcsTagOutputWithContext(ctx context.Context) VpcsTagOutput {
	return o
}

// The Key of Tags.
func (o VpcsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcsTagArrayOutput struct{ *pulumi.OutputState }

func (VpcsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsTag)(nil)).Elem()
}

func (o VpcsTagArrayOutput) ToVpcsTagArrayOutput() VpcsTagArrayOutput {
	return o
}

func (o VpcsTagArrayOutput) ToVpcsTagArrayOutputWithContext(ctx context.Context) VpcsTagArrayOutput {
	return o
}

func (o VpcsTagArrayOutput) Index(i pulumi.IntInput) VpcsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsTag {
		return vs[0].([]VpcsTag)[vs[1].(int)]
	}).(VpcsTagOutput)
}

type VpcsVpc struct {
	// The account ID of VPC.
	AccountId string `pulumi:"accountId"`
	// The associate cen list of VPC.
	AssociateCens []VpcsVpcAssociateCen `pulumi:"associateCens"`
	// The auxiliary cidr block list of VPC.
	AuxiliaryCidrBlocks []string `pulumi:"auxiliaryCidrBlocks"`
	// The cidr block of VPC.
	CidrBlock string `pulumi:"cidrBlock"`
	// The create time of VPC.
	CreationTime string `pulumi:"creationTime"`
	// The description of VPC.
	Description string `pulumi:"description"`
	// The dns server list of VPC.
	DnsServers []string `pulumi:"dnsServers"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The nat gateway ID list of VPC.
	NatGatewayIds []string `pulumi:"natGatewayIds"`
	// The ProjectName of the VPC.
	ProjectName string `pulumi:"projectName"`
	// The route table ID list of VPC.
	RouteTableIds []string `pulumi:"routeTableIds"`
	// The secondary cidr block list of VPC.
	SecondaryCidrBlocks []string `pulumi:"secondaryCidrBlocks"`
	// The security group ID list of VPC.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The status of VPC.
	Status string `pulumi:"status"`
	// The subnet ID list of VPC.
	SubnetIds []string `pulumi:"subnetIds"`
	// Tags.
	Tags []VpcsVpcTag `pulumi:"tags"`
	// The update time of VPC.
	UpdateTime string `pulumi:"updateTime"`
	// The ID of VPC.
	VpcId string `pulumi:"vpcId"`
	// The vpc name to query.
	VpcName string `pulumi:"vpcName"`
}

// VpcsVpcInput is an input type that accepts VpcsVpcArgs and VpcsVpcOutput values.
// You can construct a concrete instance of `VpcsVpcInput` via:
//
//	VpcsVpcArgs{...}
type VpcsVpcInput interface {
	pulumi.Input

	ToVpcsVpcOutput() VpcsVpcOutput
	ToVpcsVpcOutputWithContext(context.Context) VpcsVpcOutput
}

type VpcsVpcArgs struct {
	// The account ID of VPC.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The associate cen list of VPC.
	AssociateCens VpcsVpcAssociateCenArrayInput `pulumi:"associateCens"`
	// The auxiliary cidr block list of VPC.
	AuxiliaryCidrBlocks pulumi.StringArrayInput `pulumi:"auxiliaryCidrBlocks"`
	// The cidr block of VPC.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The create time of VPC.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of VPC.
	Description pulumi.StringInput `pulumi:"description"`
	// The dns server list of VPC.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The nat gateway ID list of VPC.
	NatGatewayIds pulumi.StringArrayInput `pulumi:"natGatewayIds"`
	// The ProjectName of the VPC.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The route table ID list of VPC.
	RouteTableIds pulumi.StringArrayInput `pulumi:"routeTableIds"`
	// The secondary cidr block list of VPC.
	SecondaryCidrBlocks pulumi.StringArrayInput `pulumi:"secondaryCidrBlocks"`
	// The security group ID list of VPC.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The status of VPC.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet ID list of VPC.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Tags.
	Tags VpcsVpcTagArrayInput `pulumi:"tags"`
	// The update time of VPC.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The ID of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vpc name to query.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (VpcsVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpc)(nil)).Elem()
}

func (i VpcsVpcArgs) ToVpcsVpcOutput() VpcsVpcOutput {
	return i.ToVpcsVpcOutputWithContext(context.Background())
}

func (i VpcsVpcArgs) ToVpcsVpcOutputWithContext(ctx context.Context) VpcsVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcOutput)
}

// VpcsVpcArrayInput is an input type that accepts VpcsVpcArray and VpcsVpcArrayOutput values.
// You can construct a concrete instance of `VpcsVpcArrayInput` via:
//
//	VpcsVpcArray{ VpcsVpcArgs{...} }
type VpcsVpcArrayInput interface {
	pulumi.Input

	ToVpcsVpcArrayOutput() VpcsVpcArrayOutput
	ToVpcsVpcArrayOutputWithContext(context.Context) VpcsVpcArrayOutput
}

type VpcsVpcArray []VpcsVpcInput

func (VpcsVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpc)(nil)).Elem()
}

func (i VpcsVpcArray) ToVpcsVpcArrayOutput() VpcsVpcArrayOutput {
	return i.ToVpcsVpcArrayOutputWithContext(context.Background())
}

func (i VpcsVpcArray) ToVpcsVpcArrayOutputWithContext(ctx context.Context) VpcsVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcArrayOutput)
}

type VpcsVpcOutput struct{ *pulumi.OutputState }

func (VpcsVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpc)(nil)).Elem()
}

func (o VpcsVpcOutput) ToVpcsVpcOutput() VpcsVpcOutput {
	return o
}

func (o VpcsVpcOutput) ToVpcsVpcOutputWithContext(ctx context.Context) VpcsVpcOutput {
	return o
}

// The account ID of VPC.
func (o VpcsVpcOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.AccountId }).(pulumi.StringOutput)
}

// The associate cen list of VPC.
func (o VpcsVpcOutput) AssociateCens() VpcsVpcAssociateCenArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []VpcsVpcAssociateCen { return v.AssociateCens }).(VpcsVpcAssociateCenArrayOutput)
}

// The auxiliary cidr block list of VPC.
func (o VpcsVpcOutput) AuxiliaryCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.AuxiliaryCidrBlocks }).(pulumi.StringArrayOutput)
}

// The cidr block of VPC.
func (o VpcsVpcOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The create time of VPC.
func (o VpcsVpcOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of VPC.
func (o VpcsVpcOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.Description }).(pulumi.StringOutput)
}

// The dns server list of VPC.
func (o VpcsVpcOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// The IPv6 CIDR block of the VPC.
func (o VpcsVpcOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The nat gateway ID list of VPC.
func (o VpcsVpcOutput) NatGatewayIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.NatGatewayIds }).(pulumi.StringArrayOutput)
}

// The ProjectName of the VPC.
func (o VpcsVpcOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The route table ID list of VPC.
func (o VpcsVpcOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

// The secondary cidr block list of VPC.
func (o VpcsVpcOutput) SecondaryCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.SecondaryCidrBlocks }).(pulumi.StringArrayOutput)
}

// The security group ID list of VPC.
func (o VpcsVpcOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The status of VPC.
func (o VpcsVpcOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet ID list of VPC.
func (o VpcsVpcOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Tags.
func (o VpcsVpcOutput) Tags() VpcsVpcTagArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []VpcsVpcTag { return v.Tags }).(VpcsVpcTagArrayOutput)
}

// The update time of VPC.
func (o VpcsVpcOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The ID of VPC.
func (o VpcsVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vpc name to query.
func (o VpcsVpcOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.VpcName }).(pulumi.StringOutput)
}

type VpcsVpcArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpc)(nil)).Elem()
}

func (o VpcsVpcArrayOutput) ToVpcsVpcArrayOutput() VpcsVpcArrayOutput {
	return o
}

func (o VpcsVpcArrayOutput) ToVpcsVpcArrayOutputWithContext(ctx context.Context) VpcsVpcArrayOutput {
	return o
}

func (o VpcsVpcArrayOutput) Index(i pulumi.IntInput) VpcsVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpc {
		return vs[0].([]VpcsVpc)[vs[1].(int)]
	}).(VpcsVpcOutput)
}

type VpcsVpcAssociateCen struct {
	// The ID of CEN.
	CenId string `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId string `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus string `pulumi:"cenStatus"`
}

// VpcsVpcAssociateCenInput is an input type that accepts VpcsVpcAssociateCenArgs and VpcsVpcAssociateCenOutput values.
// You can construct a concrete instance of `VpcsVpcAssociateCenInput` via:
//
//	VpcsVpcAssociateCenArgs{...}
type VpcsVpcAssociateCenInput interface {
	pulumi.Input

	ToVpcsVpcAssociateCenOutput() VpcsVpcAssociateCenOutput
	ToVpcsVpcAssociateCenOutputWithContext(context.Context) VpcsVpcAssociateCenOutput
}

type VpcsVpcAssociateCenArgs struct {
	// The ID of CEN.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId pulumi.StringInput `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus pulumi.StringInput `pulumi:"cenStatus"`
}

func (VpcsVpcAssociateCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcAssociateCen)(nil)).Elem()
}

func (i VpcsVpcAssociateCenArgs) ToVpcsVpcAssociateCenOutput() VpcsVpcAssociateCenOutput {
	return i.ToVpcsVpcAssociateCenOutputWithContext(context.Background())
}

func (i VpcsVpcAssociateCenArgs) ToVpcsVpcAssociateCenOutputWithContext(ctx context.Context) VpcsVpcAssociateCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcAssociateCenOutput)
}

// VpcsVpcAssociateCenArrayInput is an input type that accepts VpcsVpcAssociateCenArray and VpcsVpcAssociateCenArrayOutput values.
// You can construct a concrete instance of `VpcsVpcAssociateCenArrayInput` via:
//
//	VpcsVpcAssociateCenArray{ VpcsVpcAssociateCenArgs{...} }
type VpcsVpcAssociateCenArrayInput interface {
	pulumi.Input

	ToVpcsVpcAssociateCenArrayOutput() VpcsVpcAssociateCenArrayOutput
	ToVpcsVpcAssociateCenArrayOutputWithContext(context.Context) VpcsVpcAssociateCenArrayOutput
}

type VpcsVpcAssociateCenArray []VpcsVpcAssociateCenInput

func (VpcsVpcAssociateCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcAssociateCen)(nil)).Elem()
}

func (i VpcsVpcAssociateCenArray) ToVpcsVpcAssociateCenArrayOutput() VpcsVpcAssociateCenArrayOutput {
	return i.ToVpcsVpcAssociateCenArrayOutputWithContext(context.Background())
}

func (i VpcsVpcAssociateCenArray) ToVpcsVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcsVpcAssociateCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcAssociateCenArrayOutput)
}

type VpcsVpcAssociateCenOutput struct{ *pulumi.OutputState }

func (VpcsVpcAssociateCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcAssociateCen)(nil)).Elem()
}

func (o VpcsVpcAssociateCenOutput) ToVpcsVpcAssociateCenOutput() VpcsVpcAssociateCenOutput {
	return o
}

func (o VpcsVpcAssociateCenOutput) ToVpcsVpcAssociateCenOutputWithContext(ctx context.Context) VpcsVpcAssociateCenOutput {
	return o
}

// The ID of CEN.
func (o VpcsVpcAssociateCenOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcAssociateCen) string { return v.CenId }).(pulumi.StringOutput)
}

// The owner ID of CEN.
func (o VpcsVpcAssociateCenOutput) CenOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcAssociateCen) string { return v.CenOwnerId }).(pulumi.StringOutput)
}

// The status of CEN.
func (o VpcsVpcAssociateCenOutput) CenStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcAssociateCen) string { return v.CenStatus }).(pulumi.StringOutput)
}

type VpcsVpcAssociateCenArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcAssociateCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcAssociateCen)(nil)).Elem()
}

func (o VpcsVpcAssociateCenArrayOutput) ToVpcsVpcAssociateCenArrayOutput() VpcsVpcAssociateCenArrayOutput {
	return o
}

func (o VpcsVpcAssociateCenArrayOutput) ToVpcsVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcsVpcAssociateCenArrayOutput {
	return o
}

func (o VpcsVpcAssociateCenArrayOutput) Index(i pulumi.IntInput) VpcsVpcAssociateCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpcAssociateCen {
		return vs[0].([]VpcsVpcAssociateCen)[vs[1].(int)]
	}).(VpcsVpcAssociateCenOutput)
}

type VpcsVpcTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcsVpcTagInput is an input type that accepts VpcsVpcTagArgs and VpcsVpcTagOutput values.
// You can construct a concrete instance of `VpcsVpcTagInput` via:
//
//	VpcsVpcTagArgs{...}
type VpcsVpcTagInput interface {
	pulumi.Input

	ToVpcsVpcTagOutput() VpcsVpcTagOutput
	ToVpcsVpcTagOutputWithContext(context.Context) VpcsVpcTagOutput
}

type VpcsVpcTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcsVpcTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcTag)(nil)).Elem()
}

func (i VpcsVpcTagArgs) ToVpcsVpcTagOutput() VpcsVpcTagOutput {
	return i.ToVpcsVpcTagOutputWithContext(context.Background())
}

func (i VpcsVpcTagArgs) ToVpcsVpcTagOutputWithContext(ctx context.Context) VpcsVpcTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcTagOutput)
}

// VpcsVpcTagArrayInput is an input type that accepts VpcsVpcTagArray and VpcsVpcTagArrayOutput values.
// You can construct a concrete instance of `VpcsVpcTagArrayInput` via:
//
//	VpcsVpcTagArray{ VpcsVpcTagArgs{...} }
type VpcsVpcTagArrayInput interface {
	pulumi.Input

	ToVpcsVpcTagArrayOutput() VpcsVpcTagArrayOutput
	ToVpcsVpcTagArrayOutputWithContext(context.Context) VpcsVpcTagArrayOutput
}

type VpcsVpcTagArray []VpcsVpcTagInput

func (VpcsVpcTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcTag)(nil)).Elem()
}

func (i VpcsVpcTagArray) ToVpcsVpcTagArrayOutput() VpcsVpcTagArrayOutput {
	return i.ToVpcsVpcTagArrayOutputWithContext(context.Background())
}

func (i VpcsVpcTagArray) ToVpcsVpcTagArrayOutputWithContext(ctx context.Context) VpcsVpcTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcTagArrayOutput)
}

type VpcsVpcTagOutput struct{ *pulumi.OutputState }

func (VpcsVpcTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcTag)(nil)).Elem()
}

func (o VpcsVpcTagOutput) ToVpcsVpcTagOutput() VpcsVpcTagOutput {
	return o
}

func (o VpcsVpcTagOutput) ToVpcsVpcTagOutputWithContext(ctx context.Context) VpcsVpcTagOutput {
	return o
}

// The Key of Tags.
func (o VpcsVpcTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcsVpcTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcsVpcTagArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcTag)(nil)).Elem()
}

func (o VpcsVpcTagArrayOutput) ToVpcsVpcTagArrayOutput() VpcsVpcTagArrayOutput {
	return o
}

func (o VpcsVpcTagArrayOutput) ToVpcsVpcTagArrayOutputWithContext(ctx context.Context) VpcsVpcTagArrayOutput {
	return o
}

func (o VpcsVpcTagArrayOutput) Index(i pulumi.IntInput) VpcsVpcTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpcTag {
		return vs[0].([]VpcsVpcTag)[vs[1].(int)]
	}).(VpcsVpcTagOutput)
}

type GetFlowLogsFlowLog struct {
	// The aggregation interval of flow log. Unit: minute. Valid values: `1`, `5`, `10`.
	AggregationInterval int `pulumi:"aggregationInterval"`
	// The business status of flow log.
	BusinessStatus string `pulumi:"businessStatus"`
	// The created time of flow log.
	CreatedAt string `pulumi:"createdAt"`
	// The description of flow log.
	Description string `pulumi:"description"`
	// The ID of flow log.
	FlowLogId string `pulumi:"flowLogId"`
	// The name of flow log.
	FlowLogName string `pulumi:"flowLogName"`
	// The ID of flow log.
	Id string `pulumi:"id"`
	// The reason why flow log is locked.
	LockReason string `pulumi:"lockReason"`
	// The ID of log project.
	LogProjectId string `pulumi:"logProjectId"`
	// The ID of log topic.
	LogTopicId string `pulumi:"logTopicId"`
	// The project name of flow log.
	ProjectName string `pulumi:"projectName"`
	// The ID of resource.
	ResourceId string `pulumi:"resourceId"`
	// The type of resource. Valid values: `vpc`, `subnet`, `eni`.
	ResourceType string `pulumi:"resourceType"`
	// The status of flow log. Valid values: `Active`, `Pending`, `Inactive`, `Creating`, `Deleting`.
	Status string `pulumi:"status"`
	// Tags.
	Tags []GetFlowLogsFlowLogTag `pulumi:"tags"`
	// The type of traffic. Valid values: `All`, `Allow`, `Drop`.
	TrafficType string `pulumi:"trafficType"`
	// The updated time of flow log.
	UpdatedAt string `pulumi:"updatedAt"`
	// The ID of VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetFlowLogsFlowLogInput is an input type that accepts GetFlowLogsFlowLogArgs and GetFlowLogsFlowLogOutput values.
// You can construct a concrete instance of `GetFlowLogsFlowLogInput` via:
//
//	GetFlowLogsFlowLogArgs{...}
type GetFlowLogsFlowLogInput interface {
	pulumi.Input

	ToGetFlowLogsFlowLogOutput() GetFlowLogsFlowLogOutput
	ToGetFlowLogsFlowLogOutputWithContext(context.Context) GetFlowLogsFlowLogOutput
}

type GetFlowLogsFlowLogArgs struct {
	// The aggregation interval of flow log. Unit: minute. Valid values: `1`, `5`, `10`.
	AggregationInterval pulumi.IntInput `pulumi:"aggregationInterval"`
	// The business status of flow log.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The created time of flow log.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of flow log.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of flow log.
	FlowLogId pulumi.StringInput `pulumi:"flowLogId"`
	// The name of flow log.
	FlowLogName pulumi.StringInput `pulumi:"flowLogName"`
	// The ID of flow log.
	Id pulumi.StringInput `pulumi:"id"`
	// The reason why flow log is locked.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The ID of log project.
	LogProjectId pulumi.StringInput `pulumi:"logProjectId"`
	// The ID of log topic.
	LogTopicId pulumi.StringInput `pulumi:"logTopicId"`
	// The project name of flow log.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The ID of resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The type of resource. Valid values: `vpc`, `subnet`, `eni`.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// The status of flow log. Valid values: `Active`, `Pending`, `Inactive`, `Creating`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags GetFlowLogsFlowLogTagArrayInput `pulumi:"tags"`
	// The type of traffic. Valid values: `All`, `Allow`, `Drop`.
	TrafficType pulumi.StringInput `pulumi:"trafficType"`
	// The updated time of flow log.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The ID of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetFlowLogsFlowLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsFlowLog)(nil)).Elem()
}

func (i GetFlowLogsFlowLogArgs) ToGetFlowLogsFlowLogOutput() GetFlowLogsFlowLogOutput {
	return i.ToGetFlowLogsFlowLogOutputWithContext(context.Background())
}

func (i GetFlowLogsFlowLogArgs) ToGetFlowLogsFlowLogOutputWithContext(ctx context.Context) GetFlowLogsFlowLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsFlowLogOutput)
}

// GetFlowLogsFlowLogArrayInput is an input type that accepts GetFlowLogsFlowLogArray and GetFlowLogsFlowLogArrayOutput values.
// You can construct a concrete instance of `GetFlowLogsFlowLogArrayInput` via:
//
//	GetFlowLogsFlowLogArray{ GetFlowLogsFlowLogArgs{...} }
type GetFlowLogsFlowLogArrayInput interface {
	pulumi.Input

	ToGetFlowLogsFlowLogArrayOutput() GetFlowLogsFlowLogArrayOutput
	ToGetFlowLogsFlowLogArrayOutputWithContext(context.Context) GetFlowLogsFlowLogArrayOutput
}

type GetFlowLogsFlowLogArray []GetFlowLogsFlowLogInput

func (GetFlowLogsFlowLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsFlowLog)(nil)).Elem()
}

func (i GetFlowLogsFlowLogArray) ToGetFlowLogsFlowLogArrayOutput() GetFlowLogsFlowLogArrayOutput {
	return i.ToGetFlowLogsFlowLogArrayOutputWithContext(context.Background())
}

func (i GetFlowLogsFlowLogArray) ToGetFlowLogsFlowLogArrayOutputWithContext(ctx context.Context) GetFlowLogsFlowLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsFlowLogArrayOutput)
}

type GetFlowLogsFlowLogOutput struct{ *pulumi.OutputState }

func (GetFlowLogsFlowLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsFlowLog)(nil)).Elem()
}

func (o GetFlowLogsFlowLogOutput) ToGetFlowLogsFlowLogOutput() GetFlowLogsFlowLogOutput {
	return o
}

func (o GetFlowLogsFlowLogOutput) ToGetFlowLogsFlowLogOutputWithContext(ctx context.Context) GetFlowLogsFlowLogOutput {
	return o
}

// The aggregation interval of flow log. Unit: minute. Valid values: `1`, `5`, `10`.
func (o GetFlowLogsFlowLogOutput) AggregationInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) int { return v.AggregationInterval }).(pulumi.IntOutput)
}

// The business status of flow log.
func (o GetFlowLogsFlowLogOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The created time of flow log.
func (o GetFlowLogsFlowLogOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of flow log.
func (o GetFlowLogsFlowLogOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of flow log.
func (o GetFlowLogsFlowLogOutput) FlowLogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.FlowLogId }).(pulumi.StringOutput)
}

// The name of flow log.
func (o GetFlowLogsFlowLogOutput) FlowLogName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.FlowLogName }).(pulumi.StringOutput)
}

// The ID of flow log.
func (o GetFlowLogsFlowLogOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.Id }).(pulumi.StringOutput)
}

// The reason why flow log is locked.
func (o GetFlowLogsFlowLogOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.LockReason }).(pulumi.StringOutput)
}

// The ID of log project.
func (o GetFlowLogsFlowLogOutput) LogProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.LogProjectId }).(pulumi.StringOutput)
}

// The ID of log topic.
func (o GetFlowLogsFlowLogOutput) LogTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.LogTopicId }).(pulumi.StringOutput)
}

// The project name of flow log.
func (o GetFlowLogsFlowLogOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The ID of resource.
func (o GetFlowLogsFlowLogOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The type of resource. Valid values: `vpc`, `subnet`, `eni`.
func (o GetFlowLogsFlowLogOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.ResourceType }).(pulumi.StringOutput)
}

// The status of flow log. Valid values: `Active`, `Pending`, `Inactive`, `Creating`, `Deleting`.
func (o GetFlowLogsFlowLogOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o GetFlowLogsFlowLogOutput) Tags() GetFlowLogsFlowLogTagArrayOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) []GetFlowLogsFlowLogTag { return v.Tags }).(GetFlowLogsFlowLogTagArrayOutput)
}

// The type of traffic. Valid values: `All`, `Allow`, `Drop`.
func (o GetFlowLogsFlowLogOutput) TrafficType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.TrafficType }).(pulumi.StringOutput)
}

// The updated time of flow log.
func (o GetFlowLogsFlowLogOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The ID of VPC.
func (o GetFlowLogsFlowLogOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLog) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetFlowLogsFlowLogArrayOutput struct{ *pulumi.OutputState }

func (GetFlowLogsFlowLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsFlowLog)(nil)).Elem()
}

func (o GetFlowLogsFlowLogArrayOutput) ToGetFlowLogsFlowLogArrayOutput() GetFlowLogsFlowLogArrayOutput {
	return o
}

func (o GetFlowLogsFlowLogArrayOutput) ToGetFlowLogsFlowLogArrayOutputWithContext(ctx context.Context) GetFlowLogsFlowLogArrayOutput {
	return o
}

func (o GetFlowLogsFlowLogArrayOutput) Index(i pulumi.IntInput) GetFlowLogsFlowLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlowLogsFlowLog {
		return vs[0].([]GetFlowLogsFlowLog)[vs[1].(int)]
	}).(GetFlowLogsFlowLogOutput)
}

type GetFlowLogsFlowLogTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetFlowLogsFlowLogTagInput is an input type that accepts GetFlowLogsFlowLogTagArgs and GetFlowLogsFlowLogTagOutput values.
// You can construct a concrete instance of `GetFlowLogsFlowLogTagInput` via:
//
//	GetFlowLogsFlowLogTagArgs{...}
type GetFlowLogsFlowLogTagInput interface {
	pulumi.Input

	ToGetFlowLogsFlowLogTagOutput() GetFlowLogsFlowLogTagOutput
	ToGetFlowLogsFlowLogTagOutputWithContext(context.Context) GetFlowLogsFlowLogTagOutput
}

type GetFlowLogsFlowLogTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFlowLogsFlowLogTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsFlowLogTag)(nil)).Elem()
}

func (i GetFlowLogsFlowLogTagArgs) ToGetFlowLogsFlowLogTagOutput() GetFlowLogsFlowLogTagOutput {
	return i.ToGetFlowLogsFlowLogTagOutputWithContext(context.Background())
}

func (i GetFlowLogsFlowLogTagArgs) ToGetFlowLogsFlowLogTagOutputWithContext(ctx context.Context) GetFlowLogsFlowLogTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsFlowLogTagOutput)
}

// GetFlowLogsFlowLogTagArrayInput is an input type that accepts GetFlowLogsFlowLogTagArray and GetFlowLogsFlowLogTagArrayOutput values.
// You can construct a concrete instance of `GetFlowLogsFlowLogTagArrayInput` via:
//
//	GetFlowLogsFlowLogTagArray{ GetFlowLogsFlowLogTagArgs{...} }
type GetFlowLogsFlowLogTagArrayInput interface {
	pulumi.Input

	ToGetFlowLogsFlowLogTagArrayOutput() GetFlowLogsFlowLogTagArrayOutput
	ToGetFlowLogsFlowLogTagArrayOutputWithContext(context.Context) GetFlowLogsFlowLogTagArrayOutput
}

type GetFlowLogsFlowLogTagArray []GetFlowLogsFlowLogTagInput

func (GetFlowLogsFlowLogTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsFlowLogTag)(nil)).Elem()
}

func (i GetFlowLogsFlowLogTagArray) ToGetFlowLogsFlowLogTagArrayOutput() GetFlowLogsFlowLogTagArrayOutput {
	return i.ToGetFlowLogsFlowLogTagArrayOutputWithContext(context.Background())
}

func (i GetFlowLogsFlowLogTagArray) ToGetFlowLogsFlowLogTagArrayOutputWithContext(ctx context.Context) GetFlowLogsFlowLogTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsFlowLogTagArrayOutput)
}

type GetFlowLogsFlowLogTagOutput struct{ *pulumi.OutputState }

func (GetFlowLogsFlowLogTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsFlowLogTag)(nil)).Elem()
}

func (o GetFlowLogsFlowLogTagOutput) ToGetFlowLogsFlowLogTagOutput() GetFlowLogsFlowLogTagOutput {
	return o
}

func (o GetFlowLogsFlowLogTagOutput) ToGetFlowLogsFlowLogTagOutputWithContext(ctx context.Context) GetFlowLogsFlowLogTagOutput {
	return o
}

// The Key of Tags.
func (o GetFlowLogsFlowLogTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLogTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetFlowLogsFlowLogTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsFlowLogTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetFlowLogsFlowLogTagArrayOutput struct{ *pulumi.OutputState }

func (GetFlowLogsFlowLogTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsFlowLogTag)(nil)).Elem()
}

func (o GetFlowLogsFlowLogTagArrayOutput) ToGetFlowLogsFlowLogTagArrayOutput() GetFlowLogsFlowLogTagArrayOutput {
	return o
}

func (o GetFlowLogsFlowLogTagArrayOutput) ToGetFlowLogsFlowLogTagArrayOutputWithContext(ctx context.Context) GetFlowLogsFlowLogTagArrayOutput {
	return o
}

func (o GetFlowLogsFlowLogTagArrayOutput) Index(i pulumi.IntInput) GetFlowLogsFlowLogTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlowLogsFlowLogTag {
		return vs[0].([]GetFlowLogsFlowLogTag)[vs[1].(int)]
	}).(GetFlowLogsFlowLogTagOutput)
}

type GetFlowLogsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetFlowLogsTagInput is an input type that accepts GetFlowLogsTagArgs and GetFlowLogsTagOutput values.
// You can construct a concrete instance of `GetFlowLogsTagInput` via:
//
//	GetFlowLogsTagArgs{...}
type GetFlowLogsTagInput interface {
	pulumi.Input

	ToGetFlowLogsTagOutput() GetFlowLogsTagOutput
	ToGetFlowLogsTagOutputWithContext(context.Context) GetFlowLogsTagOutput
}

type GetFlowLogsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetFlowLogsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsTag)(nil)).Elem()
}

func (i GetFlowLogsTagArgs) ToGetFlowLogsTagOutput() GetFlowLogsTagOutput {
	return i.ToGetFlowLogsTagOutputWithContext(context.Background())
}

func (i GetFlowLogsTagArgs) ToGetFlowLogsTagOutputWithContext(ctx context.Context) GetFlowLogsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsTagOutput)
}

// GetFlowLogsTagArrayInput is an input type that accepts GetFlowLogsTagArray and GetFlowLogsTagArrayOutput values.
// You can construct a concrete instance of `GetFlowLogsTagArrayInput` via:
//
//	GetFlowLogsTagArray{ GetFlowLogsTagArgs{...} }
type GetFlowLogsTagArrayInput interface {
	pulumi.Input

	ToGetFlowLogsTagArrayOutput() GetFlowLogsTagArrayOutput
	ToGetFlowLogsTagArrayOutputWithContext(context.Context) GetFlowLogsTagArrayOutput
}

type GetFlowLogsTagArray []GetFlowLogsTagInput

func (GetFlowLogsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsTag)(nil)).Elem()
}

func (i GetFlowLogsTagArray) ToGetFlowLogsTagArrayOutput() GetFlowLogsTagArrayOutput {
	return i.ToGetFlowLogsTagArrayOutputWithContext(context.Background())
}

func (i GetFlowLogsTagArray) ToGetFlowLogsTagArrayOutputWithContext(ctx context.Context) GetFlowLogsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlowLogsTagArrayOutput)
}

type GetFlowLogsTagOutput struct{ *pulumi.OutputState }

func (GetFlowLogsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlowLogsTag)(nil)).Elem()
}

func (o GetFlowLogsTagOutput) ToGetFlowLogsTagOutput() GetFlowLogsTagOutput {
	return o
}

func (o GetFlowLogsTagOutput) ToGetFlowLogsTagOutputWithContext(ctx context.Context) GetFlowLogsTagOutput {
	return o
}

// The Key of Tags.
func (o GetFlowLogsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetFlowLogsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlowLogsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetFlowLogsTagArrayOutput struct{ *pulumi.OutputState }

func (GetFlowLogsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFlowLogsTag)(nil)).Elem()
}

func (o GetFlowLogsTagArrayOutput) ToGetFlowLogsTagArrayOutput() GetFlowLogsTagArrayOutput {
	return o
}

func (o GetFlowLogsTagArrayOutput) ToGetFlowLogsTagArrayOutputWithContext(ctx context.Context) GetFlowLogsTagArrayOutput {
	return o
}

func (o GetFlowLogsTagArrayOutput) Index(i pulumi.IntInput) GetFlowLogsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFlowLogsTag {
		return vs[0].([]GetFlowLogsTag)[vs[1].(int)]
	}).(GetFlowLogsTagOutput)
}

type GetHaVipsHaVip struct {
	// The account id of the Ha Vip.
	AccountId string `pulumi:"accountId"`
	// The associated eip address of the Ha Vip.
	AssociatedEipAddress string `pulumi:"associatedEipAddress"`
	// The associated eip id of the Ha Vip.
	AssociatedEipId string `pulumi:"associatedEipId"`
	// The associated instance ids of the Ha Vip.
	AssociatedInstanceIds []string `pulumi:"associatedInstanceIds"`
	// The associated instance type of the Ha Vip.
	AssociatedInstanceType string `pulumi:"associatedInstanceType"`
	// The create time of the Ha Vip.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the Ha Vip.
	Description string `pulumi:"description"`
	// The id of the Ha Vip.
	HaVipId string `pulumi:"haVipId"`
	// The name of Ha Vip.
	HaVipName string `pulumi:"haVipName"`
	// The id of the Ha Vip.
	Id string `pulumi:"id"`
	// The ip address of Ha Vip.
	IpAddress string `pulumi:"ipAddress"`
	// The master instance id of the Ha Vip.
	MasterInstanceId string `pulumi:"masterInstanceId"`
	// The project name of Ha Vip.
	ProjectName string `pulumi:"projectName"`
	// The status of Ha Vip.
	Status string `pulumi:"status"`
	// The id of subnet.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []GetHaVipsHaVipTag `pulumi:"tags"`
	// The update time of the Ha Vip.
	UpdatedAt string `pulumi:"updatedAt"`
	// The id of vpc.
	VpcId string `pulumi:"vpcId"`
}

// GetHaVipsHaVipInput is an input type that accepts GetHaVipsHaVipArgs and GetHaVipsHaVipOutput values.
// You can construct a concrete instance of `GetHaVipsHaVipInput` via:
//
//	GetHaVipsHaVipArgs{...}
type GetHaVipsHaVipInput interface {
	pulumi.Input

	ToGetHaVipsHaVipOutput() GetHaVipsHaVipOutput
	ToGetHaVipsHaVipOutputWithContext(context.Context) GetHaVipsHaVipOutput
}

type GetHaVipsHaVipArgs struct {
	// The account id of the Ha Vip.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The associated eip address of the Ha Vip.
	AssociatedEipAddress pulumi.StringInput `pulumi:"associatedEipAddress"`
	// The associated eip id of the Ha Vip.
	AssociatedEipId pulumi.StringInput `pulumi:"associatedEipId"`
	// The associated instance ids of the Ha Vip.
	AssociatedInstanceIds pulumi.StringArrayInput `pulumi:"associatedInstanceIds"`
	// The associated instance type of the Ha Vip.
	AssociatedInstanceType pulumi.StringInput `pulumi:"associatedInstanceType"`
	// The create time of the Ha Vip.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the Ha Vip.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the Ha Vip.
	HaVipId pulumi.StringInput `pulumi:"haVipId"`
	// The name of Ha Vip.
	HaVipName pulumi.StringInput `pulumi:"haVipName"`
	// The id of the Ha Vip.
	Id pulumi.StringInput `pulumi:"id"`
	// The ip address of Ha Vip.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The master instance id of the Ha Vip.
	MasterInstanceId pulumi.StringInput `pulumi:"masterInstanceId"`
	// The project name of Ha Vip.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of Ha Vip.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags GetHaVipsHaVipTagArrayInput `pulumi:"tags"`
	// The update time of the Ha Vip.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The id of vpc.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetHaVipsHaVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVipsHaVip)(nil)).Elem()
}

func (i GetHaVipsHaVipArgs) ToGetHaVipsHaVipOutput() GetHaVipsHaVipOutput {
	return i.ToGetHaVipsHaVipOutputWithContext(context.Background())
}

func (i GetHaVipsHaVipArgs) ToGetHaVipsHaVipOutputWithContext(ctx context.Context) GetHaVipsHaVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVipsHaVipOutput)
}

// GetHaVipsHaVipArrayInput is an input type that accepts GetHaVipsHaVipArray and GetHaVipsHaVipArrayOutput values.
// You can construct a concrete instance of `GetHaVipsHaVipArrayInput` via:
//
//	GetHaVipsHaVipArray{ GetHaVipsHaVipArgs{...} }
type GetHaVipsHaVipArrayInput interface {
	pulumi.Input

	ToGetHaVipsHaVipArrayOutput() GetHaVipsHaVipArrayOutput
	ToGetHaVipsHaVipArrayOutputWithContext(context.Context) GetHaVipsHaVipArrayOutput
}

type GetHaVipsHaVipArray []GetHaVipsHaVipInput

func (GetHaVipsHaVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVipsHaVip)(nil)).Elem()
}

func (i GetHaVipsHaVipArray) ToGetHaVipsHaVipArrayOutput() GetHaVipsHaVipArrayOutput {
	return i.ToGetHaVipsHaVipArrayOutputWithContext(context.Background())
}

func (i GetHaVipsHaVipArray) ToGetHaVipsHaVipArrayOutputWithContext(ctx context.Context) GetHaVipsHaVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVipsHaVipArrayOutput)
}

type GetHaVipsHaVipOutput struct{ *pulumi.OutputState }

func (GetHaVipsHaVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVipsHaVip)(nil)).Elem()
}

func (o GetHaVipsHaVipOutput) ToGetHaVipsHaVipOutput() GetHaVipsHaVipOutput {
	return o
}

func (o GetHaVipsHaVipOutput) ToGetHaVipsHaVipOutputWithContext(ctx context.Context) GetHaVipsHaVipOutput {
	return o
}

// The account id of the Ha Vip.
func (o GetHaVipsHaVipOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.AccountId }).(pulumi.StringOutput)
}

// The associated eip address of the Ha Vip.
func (o GetHaVipsHaVipOutput) AssociatedEipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.AssociatedEipAddress }).(pulumi.StringOutput)
}

// The associated eip id of the Ha Vip.
func (o GetHaVipsHaVipOutput) AssociatedEipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.AssociatedEipId }).(pulumi.StringOutput)
}

// The associated instance ids of the Ha Vip.
func (o GetHaVipsHaVipOutput) AssociatedInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) []string { return v.AssociatedInstanceIds }).(pulumi.StringArrayOutput)
}

// The associated instance type of the Ha Vip.
func (o GetHaVipsHaVipOutput) AssociatedInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.AssociatedInstanceType }).(pulumi.StringOutput)
}

// The create time of the Ha Vip.
func (o GetHaVipsHaVipOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the Ha Vip.
func (o GetHaVipsHaVipOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the Ha Vip.
func (o GetHaVipsHaVipOutput) HaVipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.HaVipId }).(pulumi.StringOutput)
}

// The name of Ha Vip.
func (o GetHaVipsHaVipOutput) HaVipName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.HaVipName }).(pulumi.StringOutput)
}

// The id of the Ha Vip.
func (o GetHaVipsHaVipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.Id }).(pulumi.StringOutput)
}

// The ip address of Ha Vip.
func (o GetHaVipsHaVipOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The master instance id of the Ha Vip.
func (o GetHaVipsHaVipOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// The project name of Ha Vip.
func (o GetHaVipsHaVipOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of Ha Vip.
func (o GetHaVipsHaVipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.Status }).(pulumi.StringOutput)
}

// The id of subnet.
func (o GetHaVipsHaVipOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o GetHaVipsHaVipOutput) Tags() GetHaVipsHaVipTagArrayOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) []GetHaVipsHaVipTag { return v.Tags }).(GetHaVipsHaVipTagArrayOutput)
}

// The update time of the Ha Vip.
func (o GetHaVipsHaVipOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The id of vpc.
func (o GetHaVipsHaVipOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVip) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetHaVipsHaVipArrayOutput struct{ *pulumi.OutputState }

func (GetHaVipsHaVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVipsHaVip)(nil)).Elem()
}

func (o GetHaVipsHaVipArrayOutput) ToGetHaVipsHaVipArrayOutput() GetHaVipsHaVipArrayOutput {
	return o
}

func (o GetHaVipsHaVipArrayOutput) ToGetHaVipsHaVipArrayOutputWithContext(ctx context.Context) GetHaVipsHaVipArrayOutput {
	return o
}

func (o GetHaVipsHaVipArrayOutput) Index(i pulumi.IntInput) GetHaVipsHaVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHaVipsHaVip {
		return vs[0].([]GetHaVipsHaVip)[vs[1].(int)]
	}).(GetHaVipsHaVipOutput)
}

type GetHaVipsHaVipTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetHaVipsHaVipTagInput is an input type that accepts GetHaVipsHaVipTagArgs and GetHaVipsHaVipTagOutput values.
// You can construct a concrete instance of `GetHaVipsHaVipTagInput` via:
//
//	GetHaVipsHaVipTagArgs{...}
type GetHaVipsHaVipTagInput interface {
	pulumi.Input

	ToGetHaVipsHaVipTagOutput() GetHaVipsHaVipTagOutput
	ToGetHaVipsHaVipTagOutputWithContext(context.Context) GetHaVipsHaVipTagOutput
}

type GetHaVipsHaVipTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHaVipsHaVipTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVipsHaVipTag)(nil)).Elem()
}

func (i GetHaVipsHaVipTagArgs) ToGetHaVipsHaVipTagOutput() GetHaVipsHaVipTagOutput {
	return i.ToGetHaVipsHaVipTagOutputWithContext(context.Background())
}

func (i GetHaVipsHaVipTagArgs) ToGetHaVipsHaVipTagOutputWithContext(ctx context.Context) GetHaVipsHaVipTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVipsHaVipTagOutput)
}

// GetHaVipsHaVipTagArrayInput is an input type that accepts GetHaVipsHaVipTagArray and GetHaVipsHaVipTagArrayOutput values.
// You can construct a concrete instance of `GetHaVipsHaVipTagArrayInput` via:
//
//	GetHaVipsHaVipTagArray{ GetHaVipsHaVipTagArgs{...} }
type GetHaVipsHaVipTagArrayInput interface {
	pulumi.Input

	ToGetHaVipsHaVipTagArrayOutput() GetHaVipsHaVipTagArrayOutput
	ToGetHaVipsHaVipTagArrayOutputWithContext(context.Context) GetHaVipsHaVipTagArrayOutput
}

type GetHaVipsHaVipTagArray []GetHaVipsHaVipTagInput

func (GetHaVipsHaVipTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVipsHaVipTag)(nil)).Elem()
}

func (i GetHaVipsHaVipTagArray) ToGetHaVipsHaVipTagArrayOutput() GetHaVipsHaVipTagArrayOutput {
	return i.ToGetHaVipsHaVipTagArrayOutputWithContext(context.Background())
}

func (i GetHaVipsHaVipTagArray) ToGetHaVipsHaVipTagArrayOutputWithContext(ctx context.Context) GetHaVipsHaVipTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVipsHaVipTagArrayOutput)
}

type GetHaVipsHaVipTagOutput struct{ *pulumi.OutputState }

func (GetHaVipsHaVipTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVipsHaVipTag)(nil)).Elem()
}

func (o GetHaVipsHaVipTagOutput) ToGetHaVipsHaVipTagOutput() GetHaVipsHaVipTagOutput {
	return o
}

func (o GetHaVipsHaVipTagOutput) ToGetHaVipsHaVipTagOutputWithContext(ctx context.Context) GetHaVipsHaVipTagOutput {
	return o
}

// The Key of Tags.
func (o GetHaVipsHaVipTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVipTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetHaVipsHaVipTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsHaVipTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetHaVipsHaVipTagArrayOutput struct{ *pulumi.OutputState }

func (GetHaVipsHaVipTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVipsHaVipTag)(nil)).Elem()
}

func (o GetHaVipsHaVipTagArrayOutput) ToGetHaVipsHaVipTagArrayOutput() GetHaVipsHaVipTagArrayOutput {
	return o
}

func (o GetHaVipsHaVipTagArrayOutput) ToGetHaVipsHaVipTagArrayOutputWithContext(ctx context.Context) GetHaVipsHaVipTagArrayOutput {
	return o
}

func (o GetHaVipsHaVipTagArrayOutput) Index(i pulumi.IntInput) GetHaVipsHaVipTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHaVipsHaVipTag {
		return vs[0].([]GetHaVipsHaVipTag)[vs[1].(int)]
	}).(GetHaVipsHaVipTagOutput)
}

type GetHaVipsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetHaVipsTagInput is an input type that accepts GetHaVipsTagArgs and GetHaVipsTagOutput values.
// You can construct a concrete instance of `GetHaVipsTagInput` via:
//
//	GetHaVipsTagArgs{...}
type GetHaVipsTagInput interface {
	pulumi.Input

	ToGetHaVipsTagOutput() GetHaVipsTagOutput
	ToGetHaVipsTagOutputWithContext(context.Context) GetHaVipsTagOutput
}

type GetHaVipsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetHaVipsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVipsTag)(nil)).Elem()
}

func (i GetHaVipsTagArgs) ToGetHaVipsTagOutput() GetHaVipsTagOutput {
	return i.ToGetHaVipsTagOutputWithContext(context.Background())
}

func (i GetHaVipsTagArgs) ToGetHaVipsTagOutputWithContext(ctx context.Context) GetHaVipsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVipsTagOutput)
}

// GetHaVipsTagArrayInput is an input type that accepts GetHaVipsTagArray and GetHaVipsTagArrayOutput values.
// You can construct a concrete instance of `GetHaVipsTagArrayInput` via:
//
//	GetHaVipsTagArray{ GetHaVipsTagArgs{...} }
type GetHaVipsTagArrayInput interface {
	pulumi.Input

	ToGetHaVipsTagArrayOutput() GetHaVipsTagArrayOutput
	ToGetHaVipsTagArrayOutputWithContext(context.Context) GetHaVipsTagArrayOutput
}

type GetHaVipsTagArray []GetHaVipsTagInput

func (GetHaVipsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVipsTag)(nil)).Elem()
}

func (i GetHaVipsTagArray) ToGetHaVipsTagArrayOutput() GetHaVipsTagArrayOutput {
	return i.ToGetHaVipsTagArrayOutputWithContext(context.Background())
}

func (i GetHaVipsTagArray) ToGetHaVipsTagArrayOutputWithContext(ctx context.Context) GetHaVipsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHaVipsTagArrayOutput)
}

type GetHaVipsTagOutput struct{ *pulumi.OutputState }

func (GetHaVipsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHaVipsTag)(nil)).Elem()
}

func (o GetHaVipsTagOutput) ToGetHaVipsTagOutput() GetHaVipsTagOutput {
	return o
}

func (o GetHaVipsTagOutput) ToGetHaVipsTagOutputWithContext(ctx context.Context) GetHaVipsTagOutput {
	return o
}

// The Key of Tags.
func (o GetHaVipsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetHaVipsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetHaVipsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetHaVipsTagArrayOutput struct{ *pulumi.OutputState }

func (GetHaVipsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHaVipsTag)(nil)).Elem()
}

func (o GetHaVipsTagArrayOutput) ToGetHaVipsTagArrayOutput() GetHaVipsTagArrayOutput {
	return o
}

func (o GetHaVipsTagArrayOutput) ToGetHaVipsTagArrayOutputWithContext(ctx context.Context) GetHaVipsTagArrayOutput {
	return o
}

func (o GetHaVipsTagArrayOutput) Index(i pulumi.IntInput) GetHaVipsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHaVipsTag {
		return vs[0].([]GetHaVipsTag)[vs[1].(int)]
	}).(GetHaVipsTagOutput)
}

type GetIpv6AddressBandwidthsIpv6AddressBandwidth struct {
	// The ID of the Ipv6AddressBandwidth.
	AllocationId string `pulumi:"allocationId"`
	// Peek bandwidth of the Ipv6 address.
	Bandwidth int `pulumi:"bandwidth"`
	// BillingType of the Ipv6 bandwidth.
	BillingType string `pulumi:"billingType"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	BusinessStatus string `pulumi:"businessStatus"`
	// Creation time of the Ipv6AddressBandwidth.
	CreationTime string `pulumi:"creationTime"`
	// Delete time of the Ipv6AddressBandwidth.
	DeleteTime string `pulumi:"deleteTime"`
	// The ID of the Ipv6AddressBandwidth.
	Id string `pulumi:"id"`
	// The ID of the associated instance.
	InstanceId string `pulumi:"instanceId"`
	// The type of the associated instance.
	InstanceType string `pulumi:"instanceType"`
	// The IPv6 address.
	Ipv6Address string `pulumi:"ipv6Address"`
	// ISP of the ipv6 address.
	Isp string `pulumi:"isp"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	LockReason string `pulumi:"lockReason"`
	// The network type of the ipv6 address.
	NetworkType string `pulumi:"networkType"`
	// Overdue time of the Ipv6AddressBandwidth.
	OverdueTime string `pulumi:"overdueTime"`
	// The status of the Ipv6AddressBandwidth.
	Status string `pulumi:"status"`
	// Update time of the Ipv6AddressBandwidth.
	UpdateTime string `pulumi:"updateTime"`
}

// GetIpv6AddressBandwidthsIpv6AddressBandwidthInput is an input type that accepts GetIpv6AddressBandwidthsIpv6AddressBandwidthArgs and GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput values.
// You can construct a concrete instance of `GetIpv6AddressBandwidthsIpv6AddressBandwidthInput` via:
//
//	GetIpv6AddressBandwidthsIpv6AddressBandwidthArgs{...}
type GetIpv6AddressBandwidthsIpv6AddressBandwidthInput interface {
	pulumi.Input

	ToGetIpv6AddressBandwidthsIpv6AddressBandwidthOutput() GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput
	ToGetIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(context.Context) GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput
}

type GetIpv6AddressBandwidthsIpv6AddressBandwidthArgs struct {
	// The ID of the Ipv6AddressBandwidth.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// Peek bandwidth of the Ipv6 address.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// BillingType of the Ipv6 bandwidth.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// Creation time of the Ipv6AddressBandwidth.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Delete time of the Ipv6AddressBandwidth.
	DeleteTime pulumi.StringInput `pulumi:"deleteTime"`
	// The ID of the Ipv6AddressBandwidth.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the associated instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The type of the associated instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The IPv6 address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// ISP of the ipv6 address.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The network type of the ipv6 address.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Overdue time of the Ipv6AddressBandwidth.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The status of the Ipv6AddressBandwidth.
	Status pulumi.StringInput `pulumi:"status"`
	// Update time of the Ipv6AddressBandwidth.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetIpv6AddressBandwidthsIpv6AddressBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (i GetIpv6AddressBandwidthsIpv6AddressBandwidthArgs) ToGetIpv6AddressBandwidthsIpv6AddressBandwidthOutput() GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return i.ToGetIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(context.Background())
}

func (i GetIpv6AddressBandwidthsIpv6AddressBandwidthArgs) ToGetIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(ctx context.Context) GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput)
}

// GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayInput is an input type that accepts GetIpv6AddressBandwidthsIpv6AddressBandwidthArray and GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput values.
// You can construct a concrete instance of `GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayInput` via:
//
//	GetIpv6AddressBandwidthsIpv6AddressBandwidthArray{ GetIpv6AddressBandwidthsIpv6AddressBandwidthArgs{...} }
type GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayInput interface {
	pulumi.Input

	ToGetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput
	ToGetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(context.Context) GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput
}

type GetIpv6AddressBandwidthsIpv6AddressBandwidthArray []GetIpv6AddressBandwidthsIpv6AddressBandwidthInput

func (GetIpv6AddressBandwidthsIpv6AddressBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (i GetIpv6AddressBandwidthsIpv6AddressBandwidthArray) ToGetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return i.ToGetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(context.Background())
}

func (i GetIpv6AddressBandwidthsIpv6AddressBandwidthArray) ToGetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput)
}

type GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput struct{ *pulumi.OutputState }

func (GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) ToGetIpv6AddressBandwidthsIpv6AddressBandwidthOutput() GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return o
}

func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) ToGetIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(ctx context.Context) GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return o
}

// The ID of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.AllocationId }).(pulumi.StringOutput)
}

// Peek bandwidth of the Ipv6 address.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// BillingType of the Ipv6 bandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.BillingType }).(pulumi.StringOutput)
}

// The BusinessStatus of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// Creation time of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Delete time of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// The ID of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the associated instance.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The type of the associated instance.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The IPv6 address.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// ISP of the ipv6 address.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Isp }).(pulumi.StringOutput)
}

// The BusinessStatus of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.LockReason }).(pulumi.StringOutput)
}

// The network type of the ipv6 address.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Overdue time of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The status of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Status }).(pulumi.StringOutput)
}

// Update time of the Ipv6AddressBandwidth.
func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressBandwidthsIpv6AddressBandwidth) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput struct{ *pulumi.OutputState }

func (GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ToGetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return o
}

func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ToGetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return o
}

func (o GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) Index(i pulumi.IntInput) GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpv6AddressBandwidthsIpv6AddressBandwidth {
		return vs[0].([]GetIpv6AddressBandwidthsIpv6AddressBandwidth)[vs[1].(int)]
	}).(GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput)
}

type GetIpv6AddressesIpv6Address struct {
	// The IPv6 address.
	Ipv6Address string `pulumi:"ipv6Address"`
}

// GetIpv6AddressesIpv6AddressInput is an input type that accepts GetIpv6AddressesIpv6AddressArgs and GetIpv6AddressesIpv6AddressOutput values.
// You can construct a concrete instance of `GetIpv6AddressesIpv6AddressInput` via:
//
//	GetIpv6AddressesIpv6AddressArgs{...}
type GetIpv6AddressesIpv6AddressInput interface {
	pulumi.Input

	ToGetIpv6AddressesIpv6AddressOutput() GetIpv6AddressesIpv6AddressOutput
	ToGetIpv6AddressesIpv6AddressOutputWithContext(context.Context) GetIpv6AddressesIpv6AddressOutput
}

type GetIpv6AddressesIpv6AddressArgs struct {
	// The IPv6 address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
}

func (GetIpv6AddressesIpv6AddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressesIpv6Address)(nil)).Elem()
}

func (i GetIpv6AddressesIpv6AddressArgs) ToGetIpv6AddressesIpv6AddressOutput() GetIpv6AddressesIpv6AddressOutput {
	return i.ToGetIpv6AddressesIpv6AddressOutputWithContext(context.Background())
}

func (i GetIpv6AddressesIpv6AddressArgs) ToGetIpv6AddressesIpv6AddressOutputWithContext(ctx context.Context) GetIpv6AddressesIpv6AddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6AddressesIpv6AddressOutput)
}

// GetIpv6AddressesIpv6AddressArrayInput is an input type that accepts GetIpv6AddressesIpv6AddressArray and GetIpv6AddressesIpv6AddressArrayOutput values.
// You can construct a concrete instance of `GetIpv6AddressesIpv6AddressArrayInput` via:
//
//	GetIpv6AddressesIpv6AddressArray{ GetIpv6AddressesIpv6AddressArgs{...} }
type GetIpv6AddressesIpv6AddressArrayInput interface {
	pulumi.Input

	ToGetIpv6AddressesIpv6AddressArrayOutput() GetIpv6AddressesIpv6AddressArrayOutput
	ToGetIpv6AddressesIpv6AddressArrayOutputWithContext(context.Context) GetIpv6AddressesIpv6AddressArrayOutput
}

type GetIpv6AddressesIpv6AddressArray []GetIpv6AddressesIpv6AddressInput

func (GetIpv6AddressesIpv6AddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6AddressesIpv6Address)(nil)).Elem()
}

func (i GetIpv6AddressesIpv6AddressArray) ToGetIpv6AddressesIpv6AddressArrayOutput() GetIpv6AddressesIpv6AddressArrayOutput {
	return i.ToGetIpv6AddressesIpv6AddressArrayOutputWithContext(context.Background())
}

func (i GetIpv6AddressesIpv6AddressArray) ToGetIpv6AddressesIpv6AddressArrayOutputWithContext(ctx context.Context) GetIpv6AddressesIpv6AddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6AddressesIpv6AddressArrayOutput)
}

type GetIpv6AddressesIpv6AddressOutput struct{ *pulumi.OutputState }

func (GetIpv6AddressesIpv6AddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6AddressesIpv6Address)(nil)).Elem()
}

func (o GetIpv6AddressesIpv6AddressOutput) ToGetIpv6AddressesIpv6AddressOutput() GetIpv6AddressesIpv6AddressOutput {
	return o
}

func (o GetIpv6AddressesIpv6AddressOutput) ToGetIpv6AddressesIpv6AddressOutputWithContext(ctx context.Context) GetIpv6AddressesIpv6AddressOutput {
	return o
}

// The IPv6 address.
func (o GetIpv6AddressesIpv6AddressOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6AddressesIpv6Address) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

type GetIpv6AddressesIpv6AddressArrayOutput struct{ *pulumi.OutputState }

func (GetIpv6AddressesIpv6AddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6AddressesIpv6Address)(nil)).Elem()
}

func (o GetIpv6AddressesIpv6AddressArrayOutput) ToGetIpv6AddressesIpv6AddressArrayOutput() GetIpv6AddressesIpv6AddressArrayOutput {
	return o
}

func (o GetIpv6AddressesIpv6AddressArrayOutput) ToGetIpv6AddressesIpv6AddressArrayOutputWithContext(ctx context.Context) GetIpv6AddressesIpv6AddressArrayOutput {
	return o
}

func (o GetIpv6AddressesIpv6AddressArrayOutput) Index(i pulumi.IntInput) GetIpv6AddressesIpv6AddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpv6AddressesIpv6Address {
		return vs[0].([]GetIpv6AddressesIpv6Address)[vs[1].(int)]
	}).(GetIpv6AddressesIpv6AddressOutput)
}

type GetIpv6GatewaysIpv6Gateway struct {
	// Creation time of the Ipv6Gateway.
	CreationTime string `pulumi:"creationTime"`
	// The description of the Ipv6Gateway.
	Description string `pulumi:"description"`
	// The ID of the Ipv6Gateway.
	Id string `pulumi:"id"`
	// The ID of the Ipv6Gateway.
	Ipv6GatewayId string `pulumi:"ipv6GatewayId"`
	// The name of the Ipv6Gateway.
	Name string `pulumi:"name"`
	// The Status of the Ipv6Gateway.
	Status string `pulumi:"status"`
	// Update time of the Ipv6Gateway.
	UpdateTime string `pulumi:"updateTime"`
	// The id of the VPC which the Ipv6Gateway belongs to.
	VpcId string `pulumi:"vpcId"`
}

// GetIpv6GatewaysIpv6GatewayInput is an input type that accepts GetIpv6GatewaysIpv6GatewayArgs and GetIpv6GatewaysIpv6GatewayOutput values.
// You can construct a concrete instance of `GetIpv6GatewaysIpv6GatewayInput` via:
//
//	GetIpv6GatewaysIpv6GatewayArgs{...}
type GetIpv6GatewaysIpv6GatewayInput interface {
	pulumi.Input

	ToGetIpv6GatewaysIpv6GatewayOutput() GetIpv6GatewaysIpv6GatewayOutput
	ToGetIpv6GatewaysIpv6GatewayOutputWithContext(context.Context) GetIpv6GatewaysIpv6GatewayOutput
}

type GetIpv6GatewaysIpv6GatewayArgs struct {
	// Creation time of the Ipv6Gateway.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the Ipv6Gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Ipv6Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Ipv6Gateway.
	Ipv6GatewayId pulumi.StringInput `pulumi:"ipv6GatewayId"`
	// The name of the Ipv6Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Status of the Ipv6Gateway.
	Status pulumi.StringInput `pulumi:"status"`
	// Update time of the Ipv6Gateway.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The id of the VPC which the Ipv6Gateway belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetIpv6GatewaysIpv6GatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (i GetIpv6GatewaysIpv6GatewayArgs) ToGetIpv6GatewaysIpv6GatewayOutput() GetIpv6GatewaysIpv6GatewayOutput {
	return i.ToGetIpv6GatewaysIpv6GatewayOutputWithContext(context.Background())
}

func (i GetIpv6GatewaysIpv6GatewayArgs) ToGetIpv6GatewaysIpv6GatewayOutputWithContext(ctx context.Context) GetIpv6GatewaysIpv6GatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6GatewaysIpv6GatewayOutput)
}

// GetIpv6GatewaysIpv6GatewayArrayInput is an input type that accepts GetIpv6GatewaysIpv6GatewayArray and GetIpv6GatewaysIpv6GatewayArrayOutput values.
// You can construct a concrete instance of `GetIpv6GatewaysIpv6GatewayArrayInput` via:
//
//	GetIpv6GatewaysIpv6GatewayArray{ GetIpv6GatewaysIpv6GatewayArgs{...} }
type GetIpv6GatewaysIpv6GatewayArrayInput interface {
	pulumi.Input

	ToGetIpv6GatewaysIpv6GatewayArrayOutput() GetIpv6GatewaysIpv6GatewayArrayOutput
	ToGetIpv6GatewaysIpv6GatewayArrayOutputWithContext(context.Context) GetIpv6GatewaysIpv6GatewayArrayOutput
}

type GetIpv6GatewaysIpv6GatewayArray []GetIpv6GatewaysIpv6GatewayInput

func (GetIpv6GatewaysIpv6GatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (i GetIpv6GatewaysIpv6GatewayArray) ToGetIpv6GatewaysIpv6GatewayArrayOutput() GetIpv6GatewaysIpv6GatewayArrayOutput {
	return i.ToGetIpv6GatewaysIpv6GatewayArrayOutputWithContext(context.Background())
}

func (i GetIpv6GatewaysIpv6GatewayArray) ToGetIpv6GatewaysIpv6GatewayArrayOutputWithContext(ctx context.Context) GetIpv6GatewaysIpv6GatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpv6GatewaysIpv6GatewayArrayOutput)
}

type GetIpv6GatewaysIpv6GatewayOutput struct{ *pulumi.OutputState }

func (GetIpv6GatewaysIpv6GatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (o GetIpv6GatewaysIpv6GatewayOutput) ToGetIpv6GatewaysIpv6GatewayOutput() GetIpv6GatewaysIpv6GatewayOutput {
	return o
}

func (o GetIpv6GatewaysIpv6GatewayOutput) ToGetIpv6GatewaysIpv6GatewayOutputWithContext(ctx context.Context) GetIpv6GatewaysIpv6GatewayOutput {
	return o
}

// Creation time of the Ipv6Gateway.
func (o GetIpv6GatewaysIpv6GatewayOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysIpv6Gateway) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the Ipv6Gateway.
func (o GetIpv6GatewaysIpv6GatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysIpv6Gateway) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Ipv6Gateway.
func (o GetIpv6GatewaysIpv6GatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysIpv6Gateway) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Ipv6Gateway.
func (o GetIpv6GatewaysIpv6GatewayOutput) Ipv6GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysIpv6Gateway) string { return v.Ipv6GatewayId }).(pulumi.StringOutput)
}

// The name of the Ipv6Gateway.
func (o GetIpv6GatewaysIpv6GatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysIpv6Gateway) string { return v.Name }).(pulumi.StringOutput)
}

// The Status of the Ipv6Gateway.
func (o GetIpv6GatewaysIpv6GatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysIpv6Gateway) string { return v.Status }).(pulumi.StringOutput)
}

// Update time of the Ipv6Gateway.
func (o GetIpv6GatewaysIpv6GatewayOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysIpv6Gateway) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of the VPC which the Ipv6Gateway belongs to.
func (o GetIpv6GatewaysIpv6GatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpv6GatewaysIpv6Gateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetIpv6GatewaysIpv6GatewayArrayOutput struct{ *pulumi.OutputState }

func (GetIpv6GatewaysIpv6GatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (o GetIpv6GatewaysIpv6GatewayArrayOutput) ToGetIpv6GatewaysIpv6GatewayArrayOutput() GetIpv6GatewaysIpv6GatewayArrayOutput {
	return o
}

func (o GetIpv6GatewaysIpv6GatewayArrayOutput) ToGetIpv6GatewaysIpv6GatewayArrayOutputWithContext(ctx context.Context) GetIpv6GatewaysIpv6GatewayArrayOutput {
	return o
}

func (o GetIpv6GatewaysIpv6GatewayArrayOutput) Index(i pulumi.IntInput) GetIpv6GatewaysIpv6GatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpv6GatewaysIpv6Gateway {
		return vs[0].([]GetIpv6GatewaysIpv6Gateway)[vs[1].(int)]
	}).(GetIpv6GatewaysIpv6GatewayOutput)
}

type GetNetworkAclsNetworkAcl struct {
	// The count of Network acl entry.
	AclEntryCount int `pulumi:"aclEntryCount"`
	// Creation time of Network Acl.
	CreationTime string `pulumi:"creationTime"`
	// The description of entry.
	Description string `pulumi:"description"`
	// The egress entries info of Network Acl.
	EgressAclEntries []GetNetworkAclsNetworkAclEgressAclEntry `pulumi:"egressAclEntries"`
	// The ID of Network Acl.
	Id string `pulumi:"id"`
	// The ingress entries info of Network Acl.
	IngressAclEntries []GetNetworkAclsNetworkAclIngressAclEntry `pulumi:"ingressAclEntries"`
	// The ID of Network Acl.
	NetworkAclId string `pulumi:"networkAclId"`
	// The name of Network Acl.
	NetworkAclName string `pulumi:"networkAclName"`
	// The project name of the network acl.
	ProjectName string `pulumi:"projectName"`
	// The resources info of Network Acl.
	Resources []GetNetworkAclsNetworkAclResource `pulumi:"resources"`
	// The Status of Network Acl.
	Status string `pulumi:"status"`
	// Tags.
	Tags []GetNetworkAclsNetworkAclTag `pulumi:"tags"`
	// Update time of Network Acl.
	UpdateTime string `pulumi:"updateTime"`
	// The vpc id of Network Acl.
	VpcId string `pulumi:"vpcId"`
}

// GetNetworkAclsNetworkAclInput is an input type that accepts GetNetworkAclsNetworkAclArgs and GetNetworkAclsNetworkAclOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclInput` via:
//
//	GetNetworkAclsNetworkAclArgs{...}
type GetNetworkAclsNetworkAclInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclOutput() GetNetworkAclsNetworkAclOutput
	ToGetNetworkAclsNetworkAclOutputWithContext(context.Context) GetNetworkAclsNetworkAclOutput
}

type GetNetworkAclsNetworkAclArgs struct {
	// The count of Network acl entry.
	AclEntryCount pulumi.IntInput `pulumi:"aclEntryCount"`
	// Creation time of Network Acl.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The egress entries info of Network Acl.
	EgressAclEntries GetNetworkAclsNetworkAclEgressAclEntryArrayInput `pulumi:"egressAclEntries"`
	// The ID of Network Acl.
	Id pulumi.StringInput `pulumi:"id"`
	// The ingress entries info of Network Acl.
	IngressAclEntries GetNetworkAclsNetworkAclIngressAclEntryArrayInput `pulumi:"ingressAclEntries"`
	// The ID of Network Acl.
	NetworkAclId pulumi.StringInput `pulumi:"networkAclId"`
	// The name of Network Acl.
	NetworkAclName pulumi.StringInput `pulumi:"networkAclName"`
	// The project name of the network acl.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The resources info of Network Acl.
	Resources GetNetworkAclsNetworkAclResourceArrayInput `pulumi:"resources"`
	// The Status of Network Acl.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags GetNetworkAclsNetworkAclTagArrayInput `pulumi:"tags"`
	// Update time of Network Acl.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The vpc id of Network Acl.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetNetworkAclsNetworkAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAcl)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclArgs) ToGetNetworkAclsNetworkAclOutput() GetNetworkAclsNetworkAclOutput {
	return i.ToGetNetworkAclsNetworkAclOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclArgs) ToGetNetworkAclsNetworkAclOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclOutput)
}

// GetNetworkAclsNetworkAclArrayInput is an input type that accepts GetNetworkAclsNetworkAclArray and GetNetworkAclsNetworkAclArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclArrayInput` via:
//
//	GetNetworkAclsNetworkAclArray{ GetNetworkAclsNetworkAclArgs{...} }
type GetNetworkAclsNetworkAclArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclArrayOutput() GetNetworkAclsNetworkAclArrayOutput
	ToGetNetworkAclsNetworkAclArrayOutputWithContext(context.Context) GetNetworkAclsNetworkAclArrayOutput
}

type GetNetworkAclsNetworkAclArray []GetNetworkAclsNetworkAclInput

func (GetNetworkAclsNetworkAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAcl)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclArray) ToGetNetworkAclsNetworkAclArrayOutput() GetNetworkAclsNetworkAclArrayOutput {
	return i.ToGetNetworkAclsNetworkAclArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclArray) ToGetNetworkAclsNetworkAclArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclArrayOutput)
}

type GetNetworkAclsNetworkAclOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAcl)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclOutput) ToGetNetworkAclsNetworkAclOutput() GetNetworkAclsNetworkAclOutput {
	return o
}

func (o GetNetworkAclsNetworkAclOutput) ToGetNetworkAclsNetworkAclOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclOutput {
	return o
}

// The count of Network acl entry.
func (o GetNetworkAclsNetworkAclOutput) AclEntryCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) int { return v.AclEntryCount }).(pulumi.IntOutput)
}

// Creation time of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of entry.
func (o GetNetworkAclsNetworkAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The egress entries info of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) EgressAclEntries() GetNetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) []GetNetworkAclsNetworkAclEgressAclEntry { return v.EgressAclEntries }).(GetNetworkAclsNetworkAclEgressAclEntryArrayOutput)
}

// The ID of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.Id }).(pulumi.StringOutput)
}

// The ingress entries info of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) IngressAclEntries() GetNetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) []GetNetworkAclsNetworkAclIngressAclEntry { return v.IngressAclEntries }).(GetNetworkAclsNetworkAclIngressAclEntryArrayOutput)
}

// The ID of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// The name of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) NetworkAclName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.NetworkAclName }).(pulumi.StringOutput)
}

// The project name of the network acl.
func (o GetNetworkAclsNetworkAclOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The resources info of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) Resources() GetNetworkAclsNetworkAclResourceArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) []GetNetworkAclsNetworkAclResource { return v.Resources }).(GetNetworkAclsNetworkAclResourceArrayOutput)
}

// The Status of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o GetNetworkAclsNetworkAclOutput) Tags() GetNetworkAclsNetworkAclTagArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) []GetNetworkAclsNetworkAclTag { return v.Tags }).(GetNetworkAclsNetworkAclTagArrayOutput)
}

// Update time of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The vpc id of Network Acl.
func (o GetNetworkAclsNetworkAclOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAcl) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNetworkAclsNetworkAclArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAcl)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclArrayOutput) ToGetNetworkAclsNetworkAclArrayOutput() GetNetworkAclsNetworkAclArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclArrayOutput) ToGetNetworkAclsNetworkAclArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsNetworkAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsNetworkAcl {
		return vs[0].([]GetNetworkAclsNetworkAcl)[vs[1].(int)]
	}).(GetNetworkAclsNetworkAclOutput)
}

type GetNetworkAclsNetworkAclEgressAclEntry struct {
	// The description of entry.
	Description string `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp string `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName string `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy string `pulumi:"policy"`
	// The port of entry.
	Port string `pulumi:"port"`
	// The priority of entry.
	Priority int `pulumi:"priority"`
	// The protocol of entry.
	Protocol string `pulumi:"protocol"`
}

// GetNetworkAclsNetworkAclEgressAclEntryInput is an input type that accepts GetNetworkAclsNetworkAclEgressAclEntryArgs and GetNetworkAclsNetworkAclEgressAclEntryOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclEgressAclEntryInput` via:
//
//	GetNetworkAclsNetworkAclEgressAclEntryArgs{...}
type GetNetworkAclsNetworkAclEgressAclEntryInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclEgressAclEntryOutput() GetNetworkAclsNetworkAclEgressAclEntryOutput
	ToGetNetworkAclsNetworkAclEgressAclEntryOutputWithContext(context.Context) GetNetworkAclsNetworkAclEgressAclEntryOutput
}

type GetNetworkAclsNetworkAclEgressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp pulumi.StringInput `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringInput `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The port of entry.
	Port pulumi.StringInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of entry.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetNetworkAclsNetworkAclEgressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclEgressAclEntryArgs) ToGetNetworkAclsNetworkAclEgressAclEntryOutput() GetNetworkAclsNetworkAclEgressAclEntryOutput {
	return i.ToGetNetworkAclsNetworkAclEgressAclEntryOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclEgressAclEntryArgs) ToGetNetworkAclsNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclEgressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclEgressAclEntryOutput)
}

// GetNetworkAclsNetworkAclEgressAclEntryArrayInput is an input type that accepts GetNetworkAclsNetworkAclEgressAclEntryArray and GetNetworkAclsNetworkAclEgressAclEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclEgressAclEntryArrayInput` via:
//
//	GetNetworkAclsNetworkAclEgressAclEntryArray{ GetNetworkAclsNetworkAclEgressAclEntryArgs{...} }
type GetNetworkAclsNetworkAclEgressAclEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclEgressAclEntryArrayOutput() GetNetworkAclsNetworkAclEgressAclEntryArrayOutput
	ToGetNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(context.Context) GetNetworkAclsNetworkAclEgressAclEntryArrayOutput
}

type GetNetworkAclsNetworkAclEgressAclEntryArray []GetNetworkAclsNetworkAclEgressAclEntryInput

func (GetNetworkAclsNetworkAclEgressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclEgressAclEntryArray) ToGetNetworkAclsNetworkAclEgressAclEntryArrayOutput() GetNetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return i.ToGetNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclEgressAclEntryArray) ToGetNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclEgressAclEntryArrayOutput)
}

type GetNetworkAclsNetworkAclEgressAclEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclEgressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) ToGetNetworkAclsNetworkAclEgressAclEntryOutput() GetNetworkAclsNetworkAclEgressAclEntryOutput {
	return o
}

func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) ToGetNetworkAclsNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclEgressAclEntryOutput {
	return o
}

// The description of entry.
func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclEgressAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The DestinationCidrIp of entry.
func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) DestinationCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclEgressAclEntry) string { return v.DestinationCidrIp }).(pulumi.StringOutput)
}

// The id of entry.
func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) NetworkAclEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclEgressAclEntry) string { return v.NetworkAclEntryId }).(pulumi.StringOutput)
}

// The name of entry.
func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) NetworkAclEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclEgressAclEntry) string { return v.NetworkAclEntryName }).(pulumi.StringOutput)
}

// The policy of entry.
func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclEgressAclEntry) string { return v.Policy }).(pulumi.StringOutput)
}

// The port of entry.
func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclEgressAclEntry) string { return v.Port }).(pulumi.StringOutput)
}

// The priority of entry.
func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclEgressAclEntry) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of entry.
func (o GetNetworkAclsNetworkAclEgressAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclEgressAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetNetworkAclsNetworkAclEgressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclEgressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclEgressAclEntryArrayOutput) ToGetNetworkAclsNetworkAclEgressAclEntryArrayOutput() GetNetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclEgressAclEntryArrayOutput) ToGetNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclEgressAclEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsNetworkAclEgressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsNetworkAclEgressAclEntry {
		return vs[0].([]GetNetworkAclsNetworkAclEgressAclEntry)[vs[1].(int)]
	}).(GetNetworkAclsNetworkAclEgressAclEntryOutput)
}

type GetNetworkAclsNetworkAclIngressAclEntry struct {
	// The description of entry.
	Description string `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName string `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy string `pulumi:"policy"`
	// The port of entry.
	Port string `pulumi:"port"`
	// The priority of entry.
	Priority int `pulumi:"priority"`
	// The protocol of entry.
	Protocol string `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp string `pulumi:"sourceCidrIp"`
}

// GetNetworkAclsNetworkAclIngressAclEntryInput is an input type that accepts GetNetworkAclsNetworkAclIngressAclEntryArgs and GetNetworkAclsNetworkAclIngressAclEntryOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclIngressAclEntryInput` via:
//
//	GetNetworkAclsNetworkAclIngressAclEntryArgs{...}
type GetNetworkAclsNetworkAclIngressAclEntryInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclIngressAclEntryOutput() GetNetworkAclsNetworkAclIngressAclEntryOutput
	ToGetNetworkAclsNetworkAclIngressAclEntryOutputWithContext(context.Context) GetNetworkAclsNetworkAclIngressAclEntryOutput
}

type GetNetworkAclsNetworkAclIngressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringInput `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The port of entry.
	Port pulumi.StringInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of entry.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp pulumi.StringInput `pulumi:"sourceCidrIp"`
}

func (GetNetworkAclsNetworkAclIngressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclIngressAclEntryArgs) ToGetNetworkAclsNetworkAclIngressAclEntryOutput() GetNetworkAclsNetworkAclIngressAclEntryOutput {
	return i.ToGetNetworkAclsNetworkAclIngressAclEntryOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclIngressAclEntryArgs) ToGetNetworkAclsNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclIngressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclIngressAclEntryOutput)
}

// GetNetworkAclsNetworkAclIngressAclEntryArrayInput is an input type that accepts GetNetworkAclsNetworkAclIngressAclEntryArray and GetNetworkAclsNetworkAclIngressAclEntryArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclIngressAclEntryArrayInput` via:
//
//	GetNetworkAclsNetworkAclIngressAclEntryArray{ GetNetworkAclsNetworkAclIngressAclEntryArgs{...} }
type GetNetworkAclsNetworkAclIngressAclEntryArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclIngressAclEntryArrayOutput() GetNetworkAclsNetworkAclIngressAclEntryArrayOutput
	ToGetNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(context.Context) GetNetworkAclsNetworkAclIngressAclEntryArrayOutput
}

type GetNetworkAclsNetworkAclIngressAclEntryArray []GetNetworkAclsNetworkAclIngressAclEntryInput

func (GetNetworkAclsNetworkAclIngressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclIngressAclEntryArray) ToGetNetworkAclsNetworkAclIngressAclEntryArrayOutput() GetNetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return i.ToGetNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclIngressAclEntryArray) ToGetNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclIngressAclEntryArrayOutput)
}

type GetNetworkAclsNetworkAclIngressAclEntryOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclIngressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) ToGetNetworkAclsNetworkAclIngressAclEntryOutput() GetNetworkAclsNetworkAclIngressAclEntryOutput {
	return o
}

func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) ToGetNetworkAclsNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclIngressAclEntryOutput {
	return o
}

// The description of entry.
func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclIngressAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The id of entry.
func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) NetworkAclEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclIngressAclEntry) string { return v.NetworkAclEntryId }).(pulumi.StringOutput)
}

// The name of entry.
func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) NetworkAclEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclIngressAclEntry) string { return v.NetworkAclEntryName }).(pulumi.StringOutput)
}

// The policy of entry.
func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclIngressAclEntry) string { return v.Policy }).(pulumi.StringOutput)
}

// The port of entry.
func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclIngressAclEntry) string { return v.Port }).(pulumi.StringOutput)
}

// The priority of entry.
func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclIngressAclEntry) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of entry.
func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclIngressAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

// The SourceCidrIp of entry.
func (o GetNetworkAclsNetworkAclIngressAclEntryOutput) SourceCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclIngressAclEntry) string { return v.SourceCidrIp }).(pulumi.StringOutput)
}

type GetNetworkAclsNetworkAclIngressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclIngressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclIngressAclEntryArrayOutput) ToGetNetworkAclsNetworkAclIngressAclEntryArrayOutput() GetNetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclIngressAclEntryArrayOutput) ToGetNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclIngressAclEntryArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsNetworkAclIngressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsNetworkAclIngressAclEntry {
		return vs[0].([]GetNetworkAclsNetworkAclIngressAclEntry)[vs[1].(int)]
	}).(GetNetworkAclsNetworkAclIngressAclEntryOutput)
}

type GetNetworkAclsNetworkAclResource struct {
	// The resource id of Network Acl.
	ResourceId string `pulumi:"resourceId"`
	// The Status of Network Acl.
	Status string `pulumi:"status"`
}

// GetNetworkAclsNetworkAclResourceInput is an input type that accepts GetNetworkAclsNetworkAclResourceArgs and GetNetworkAclsNetworkAclResourceOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclResourceInput` via:
//
//	GetNetworkAclsNetworkAclResourceArgs{...}
type GetNetworkAclsNetworkAclResourceInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclResourceOutput() GetNetworkAclsNetworkAclResourceOutput
	ToGetNetworkAclsNetworkAclResourceOutputWithContext(context.Context) GetNetworkAclsNetworkAclResourceOutput
}

type GetNetworkAclsNetworkAclResourceArgs struct {
	// The resource id of Network Acl.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The Status of Network Acl.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetNetworkAclsNetworkAclResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAclResource)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclResourceArgs) ToGetNetworkAclsNetworkAclResourceOutput() GetNetworkAclsNetworkAclResourceOutput {
	return i.ToGetNetworkAclsNetworkAclResourceOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclResourceArgs) ToGetNetworkAclsNetworkAclResourceOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclResourceOutput)
}

// GetNetworkAclsNetworkAclResourceArrayInput is an input type that accepts GetNetworkAclsNetworkAclResourceArray and GetNetworkAclsNetworkAclResourceArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclResourceArrayInput` via:
//
//	GetNetworkAclsNetworkAclResourceArray{ GetNetworkAclsNetworkAclResourceArgs{...} }
type GetNetworkAclsNetworkAclResourceArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclResourceArrayOutput() GetNetworkAclsNetworkAclResourceArrayOutput
	ToGetNetworkAclsNetworkAclResourceArrayOutputWithContext(context.Context) GetNetworkAclsNetworkAclResourceArrayOutput
}

type GetNetworkAclsNetworkAclResourceArray []GetNetworkAclsNetworkAclResourceInput

func (GetNetworkAclsNetworkAclResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAclResource)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclResourceArray) ToGetNetworkAclsNetworkAclResourceArrayOutput() GetNetworkAclsNetworkAclResourceArrayOutput {
	return i.ToGetNetworkAclsNetworkAclResourceArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclResourceArray) ToGetNetworkAclsNetworkAclResourceArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclResourceArrayOutput)
}

type GetNetworkAclsNetworkAclResourceOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAclResource)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclResourceOutput) ToGetNetworkAclsNetworkAclResourceOutput() GetNetworkAclsNetworkAclResourceOutput {
	return o
}

func (o GetNetworkAclsNetworkAclResourceOutput) ToGetNetworkAclsNetworkAclResourceOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclResourceOutput {
	return o
}

// The resource id of Network Acl.
func (o GetNetworkAclsNetworkAclResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclResource) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The Status of Network Acl.
func (o GetNetworkAclsNetworkAclResourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclResource) string { return v.Status }).(pulumi.StringOutput)
}

type GetNetworkAclsNetworkAclResourceArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAclResource)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclResourceArrayOutput) ToGetNetworkAclsNetworkAclResourceArrayOutput() GetNetworkAclsNetworkAclResourceArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclResourceArrayOutput) ToGetNetworkAclsNetworkAclResourceArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclResourceArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclResourceArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsNetworkAclResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsNetworkAclResource {
		return vs[0].([]GetNetworkAclsNetworkAclResource)[vs[1].(int)]
	}).(GetNetworkAclsNetworkAclResourceOutput)
}

type GetNetworkAclsNetworkAclTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetNetworkAclsNetworkAclTagInput is an input type that accepts GetNetworkAclsNetworkAclTagArgs and GetNetworkAclsNetworkAclTagOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclTagInput` via:
//
//	GetNetworkAclsNetworkAclTagArgs{...}
type GetNetworkAclsNetworkAclTagInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclTagOutput() GetNetworkAclsNetworkAclTagOutput
	ToGetNetworkAclsNetworkAclTagOutputWithContext(context.Context) GetNetworkAclsNetworkAclTagOutput
}

type GetNetworkAclsNetworkAclTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkAclsNetworkAclTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAclTag)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclTagArgs) ToGetNetworkAclsNetworkAclTagOutput() GetNetworkAclsNetworkAclTagOutput {
	return i.ToGetNetworkAclsNetworkAclTagOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclTagArgs) ToGetNetworkAclsNetworkAclTagOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclTagOutput)
}

// GetNetworkAclsNetworkAclTagArrayInput is an input type that accepts GetNetworkAclsNetworkAclTagArray and GetNetworkAclsNetworkAclTagArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsNetworkAclTagArrayInput` via:
//
//	GetNetworkAclsNetworkAclTagArray{ GetNetworkAclsNetworkAclTagArgs{...} }
type GetNetworkAclsNetworkAclTagArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsNetworkAclTagArrayOutput() GetNetworkAclsNetworkAclTagArrayOutput
	ToGetNetworkAclsNetworkAclTagArrayOutputWithContext(context.Context) GetNetworkAclsNetworkAclTagArrayOutput
}

type GetNetworkAclsNetworkAclTagArray []GetNetworkAclsNetworkAclTagInput

func (GetNetworkAclsNetworkAclTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAclTag)(nil)).Elem()
}

func (i GetNetworkAclsNetworkAclTagArray) ToGetNetworkAclsNetworkAclTagArrayOutput() GetNetworkAclsNetworkAclTagArrayOutput {
	return i.ToGetNetworkAclsNetworkAclTagArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsNetworkAclTagArray) ToGetNetworkAclsNetworkAclTagArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsNetworkAclTagArrayOutput)
}

type GetNetworkAclsNetworkAclTagOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsNetworkAclTag)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclTagOutput) ToGetNetworkAclsNetworkAclTagOutput() GetNetworkAclsNetworkAclTagOutput {
	return o
}

func (o GetNetworkAclsNetworkAclTagOutput) ToGetNetworkAclsNetworkAclTagOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclTagOutput {
	return o
}

// The Key of Tags.
func (o GetNetworkAclsNetworkAclTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetNetworkAclsNetworkAclTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsNetworkAclTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkAclsNetworkAclTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsNetworkAclTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsNetworkAclTag)(nil)).Elem()
}

func (o GetNetworkAclsNetworkAclTagArrayOutput) ToGetNetworkAclsNetworkAclTagArrayOutput() GetNetworkAclsNetworkAclTagArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclTagArrayOutput) ToGetNetworkAclsNetworkAclTagArrayOutputWithContext(ctx context.Context) GetNetworkAclsNetworkAclTagArrayOutput {
	return o
}

func (o GetNetworkAclsNetworkAclTagArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsNetworkAclTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsNetworkAclTag {
		return vs[0].([]GetNetworkAclsNetworkAclTag)[vs[1].(int)]
	}).(GetNetworkAclsNetworkAclTagOutput)
}

type GetNetworkAclsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetNetworkAclsTagInput is an input type that accepts GetNetworkAclsTagArgs and GetNetworkAclsTagOutput values.
// You can construct a concrete instance of `GetNetworkAclsTagInput` via:
//
//	GetNetworkAclsTagArgs{...}
type GetNetworkAclsTagInput interface {
	pulumi.Input

	ToGetNetworkAclsTagOutput() GetNetworkAclsTagOutput
	ToGetNetworkAclsTagOutputWithContext(context.Context) GetNetworkAclsTagOutput
}

type GetNetworkAclsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkAclsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsTag)(nil)).Elem()
}

func (i GetNetworkAclsTagArgs) ToGetNetworkAclsTagOutput() GetNetworkAclsTagOutput {
	return i.ToGetNetworkAclsTagOutputWithContext(context.Background())
}

func (i GetNetworkAclsTagArgs) ToGetNetworkAclsTagOutputWithContext(ctx context.Context) GetNetworkAclsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsTagOutput)
}

// GetNetworkAclsTagArrayInput is an input type that accepts GetNetworkAclsTagArray and GetNetworkAclsTagArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsTagArrayInput` via:
//
//	GetNetworkAclsTagArray{ GetNetworkAclsTagArgs{...} }
type GetNetworkAclsTagArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsTagArrayOutput() GetNetworkAclsTagArrayOutput
	ToGetNetworkAclsTagArrayOutputWithContext(context.Context) GetNetworkAclsTagArrayOutput
}

type GetNetworkAclsTagArray []GetNetworkAclsTagInput

func (GetNetworkAclsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsTag)(nil)).Elem()
}

func (i GetNetworkAclsTagArray) ToGetNetworkAclsTagArrayOutput() GetNetworkAclsTagArrayOutput {
	return i.ToGetNetworkAclsTagArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsTagArray) ToGetNetworkAclsTagArrayOutputWithContext(ctx context.Context) GetNetworkAclsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsTagArrayOutput)
}

type GetNetworkAclsTagOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsTag)(nil)).Elem()
}

func (o GetNetworkAclsTagOutput) ToGetNetworkAclsTagOutput() GetNetworkAclsTagOutput {
	return o
}

func (o GetNetworkAclsTagOutput) ToGetNetworkAclsTagOutputWithContext(ctx context.Context) GetNetworkAclsTagOutput {
	return o
}

// The Key of Tags.
func (o GetNetworkAclsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetNetworkAclsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkAclsTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsTag)(nil)).Elem()
}

func (o GetNetworkAclsTagArrayOutput) ToGetNetworkAclsTagArrayOutput() GetNetworkAclsTagArrayOutput {
	return o
}

func (o GetNetworkAclsTagArrayOutput) ToGetNetworkAclsTagArrayOutputWithContext(ctx context.Context) GetNetworkAclsTagArrayOutput {
	return o
}

func (o GetNetworkAclsTagArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsTag {
		return vs[0].([]GetNetworkAclsTag)[vs[1].(int)]
	}).(GetNetworkAclsTagOutput)
}

type GetNetworkInterfacesNetworkInterface struct {
	// The account id of the ENI creator.
	AccountId string `pulumi:"accountId"`
	// The IP address of the EIP to which the ENI associates.
	AssociatedElasticIpAddress string `pulumi:"associatedElasticIpAddress"`
	// The allocation id of the EIP to which the ENI associates.
	AssociatedElasticIpId string `pulumi:"associatedElasticIpId"`
	// The create time of the ENI.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the ENI.
	Description string `pulumi:"description"`
	// The id of the device to which the ENI is bound.
	DeviceId string `pulumi:"deviceId"`
	// The id of the ENI.
	Id string `pulumi:"id"`
	// The IPv6 address list of the ENI.
	Ipv6Sets []string `pulumi:"ipv6Sets"`
	// The mac address of the ENI.
	MacAddress string `pulumi:"macAddress"`
	// The id of the ENI.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// A name of ENI.
	NetworkInterfaceName string `pulumi:"networkInterfaceName"`
	// The enable of port security.
	PortSecurityEnabled bool `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress string `pulumi:"primaryIpAddress"`
	// The IP address of secondary private network interface.
	PrivateIpSets []GetNetworkInterfacesNetworkInterfacePrivateIpSet `pulumi:"privateIpSets"`
	// The ProjectName of the ENI.
	ProjectName string `pulumi:"projectName"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Whether the network card has been authorized to be used by other account services.
	ServiceManaged bool `pulumi:"serviceManaged"`
	// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
	Status string `pulumi:"status"`
	// An id of the subnet to which the ENI is connected.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []GetNetworkInterfacesNetworkInterfaceTag `pulumi:"tags"`
	// A type of ENI, Optional choice contains `primary`, `secondary`.
	Type string `pulumi:"type"`
	// The last update time of the ENI.
	UpdatedAt string `pulumi:"updatedAt"`
	// An id of the virtual private cloud (VPC) to which the ENI belongs.
	VpcId string `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the ENI belongs.
	VpcName string `pulumi:"vpcName"`
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// GetNetworkInterfacesNetworkInterfaceInput is an input type that accepts GetNetworkInterfacesNetworkInterfaceArgs and GetNetworkInterfacesNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesNetworkInterfaceInput` via:
//
//	GetNetworkInterfacesNetworkInterfaceArgs{...}
type GetNetworkInterfacesNetworkInterfaceInput interface {
	pulumi.Input

	ToGetNetworkInterfacesNetworkInterfaceOutput() GetNetworkInterfacesNetworkInterfaceOutput
	ToGetNetworkInterfacesNetworkInterfaceOutputWithContext(context.Context) GetNetworkInterfacesNetworkInterfaceOutput
}

type GetNetworkInterfacesNetworkInterfaceArgs struct {
	// The account id of the ENI creator.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP address of the EIP to which the ENI associates.
	AssociatedElasticIpAddress pulumi.StringInput `pulumi:"associatedElasticIpAddress"`
	// The allocation id of the EIP to which the ENI associates.
	AssociatedElasticIpId pulumi.StringInput `pulumi:"associatedElasticIpId"`
	// The create time of the ENI.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the ENI.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the device to which the ENI is bound.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// The id of the ENI.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv6 address list of the ENI.
	Ipv6Sets pulumi.StringArrayInput `pulumi:"ipv6Sets"`
	// The mac address of the ENI.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The id of the ENI.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// A name of ENI.
	NetworkInterfaceName pulumi.StringInput `pulumi:"networkInterfaceName"`
	// The enable of port security.
	PortSecurityEnabled pulumi.BoolInput `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress pulumi.StringInput `pulumi:"primaryIpAddress"`
	// The IP address of secondary private network interface.
	PrivateIpSets GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayInput `pulumi:"privateIpSets"`
	// The ProjectName of the ENI.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Whether the network card has been authorized to be used by other account services.
	ServiceManaged pulumi.BoolInput `pulumi:"serviceManaged"`
	// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// An id of the subnet to which the ENI is connected.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags GetNetworkInterfacesNetworkInterfaceTagArrayInput `pulumi:"tags"`
	// A type of ENI, Optional choice contains `primary`, `secondary`.
	Type pulumi.StringInput `pulumi:"type"`
	// The last update time of the ENI.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// An id of the virtual private cloud (VPC) to which the ENI belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the ENI belongs.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetNetworkInterfacesNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (i GetNetworkInterfacesNetworkInterfaceArgs) ToGetNetworkInterfacesNetworkInterfaceOutput() GetNetworkInterfacesNetworkInterfaceOutput {
	return i.ToGetNetworkInterfacesNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesNetworkInterfaceArgs) ToGetNetworkInterfacesNetworkInterfaceOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesNetworkInterfaceOutput)
}

// GetNetworkInterfacesNetworkInterfaceArrayInput is an input type that accepts GetNetworkInterfacesNetworkInterfaceArray and GetNetworkInterfacesNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesNetworkInterfaceArrayInput` via:
//
//	GetNetworkInterfacesNetworkInterfaceArray{ GetNetworkInterfacesNetworkInterfaceArgs{...} }
type GetNetworkInterfacesNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesNetworkInterfaceArrayOutput() GetNetworkInterfacesNetworkInterfaceArrayOutput
	ToGetNetworkInterfacesNetworkInterfaceArrayOutputWithContext(context.Context) GetNetworkInterfacesNetworkInterfaceArrayOutput
}

type GetNetworkInterfacesNetworkInterfaceArray []GetNetworkInterfacesNetworkInterfaceInput

func (GetNetworkInterfacesNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (i GetNetworkInterfacesNetworkInterfaceArray) ToGetNetworkInterfacesNetworkInterfaceArrayOutput() GetNetworkInterfacesNetworkInterfaceArrayOutput {
	return i.ToGetNetworkInterfacesNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesNetworkInterfaceArray) ToGetNetworkInterfacesNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesNetworkInterfaceArrayOutput)
}

type GetNetworkInterfacesNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (o GetNetworkInterfacesNetworkInterfaceOutput) ToGetNetworkInterfacesNetworkInterfaceOutput() GetNetworkInterfacesNetworkInterfaceOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfaceOutput) ToGetNetworkInterfacesNetworkInterfaceOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfaceOutput {
	return o
}

// The account id of the ENI creator.
func (o GetNetworkInterfacesNetworkInterfaceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP address of the EIP to which the ENI associates.
func (o GetNetworkInterfacesNetworkInterfaceOutput) AssociatedElasticIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.AssociatedElasticIpAddress }).(pulumi.StringOutput)
}

// The allocation id of the EIP to which the ENI associates.
func (o GetNetworkInterfacesNetworkInterfaceOutput) AssociatedElasticIpId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.AssociatedElasticIpId }).(pulumi.StringOutput)
}

// The create time of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the device to which the ENI is bound.
func (o GetNetworkInterfacesNetworkInterfaceOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.DeviceId }).(pulumi.StringOutput)
}

// The id of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 address list of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) Ipv6Sets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) []string { return v.Ipv6Sets }).(pulumi.StringArrayOutput)
}

// The mac address of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The id of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// A name of ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) NetworkInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.NetworkInterfaceName }).(pulumi.StringOutput)
}

// The enable of port security.
func (o GetNetworkInterfacesNetworkInterfaceOutput) PortSecurityEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) bool { return v.PortSecurityEnabled }).(pulumi.BoolOutput)
}

// The primary IP address of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) PrimaryIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.PrimaryIpAddress }).(pulumi.StringOutput)
}

// The IP address of secondary private network interface.
func (o GetNetworkInterfacesNetworkInterfaceOutput) PrivateIpSets() GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) []GetNetworkInterfacesNetworkInterfacePrivateIpSet {
		return v.PrivateIpSets
	}).(GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput)
}

// The ProjectName of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The list of the security group id to which the secondary ENI belongs.
func (o GetNetworkInterfacesNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Whether the network card has been authorized to be used by other account services.
func (o GetNetworkInterfacesNetworkInterfaceOutput) ServiceManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) bool { return v.ServiceManaged }).(pulumi.BoolOutput)
}

// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
func (o GetNetworkInterfacesNetworkInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.Status }).(pulumi.StringOutput)
}

// An id of the subnet to which the ENI is connected.
func (o GetNetworkInterfacesNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o GetNetworkInterfacesNetworkInterfaceOutput) Tags() GetNetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) []GetNetworkInterfacesNetworkInterfaceTag { return v.Tags }).(GetNetworkInterfacesNetworkInterfaceTagArrayOutput)
}

// A type of ENI, Optional choice contains `primary`, `secondary`.
func (o GetNetworkInterfacesNetworkInterfaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.Type }).(pulumi.StringOutput)
}

// The last update time of the ENI.
func (o GetNetworkInterfacesNetworkInterfaceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// An id of the virtual private cloud (VPC) to which the ENI belongs.
func (o GetNetworkInterfacesNetworkInterfaceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the virtual private cloud (VPC) to which the ENI belongs.
func (o GetNetworkInterfacesNetworkInterfaceOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.VpcName }).(pulumi.StringOutput)
}

// The zone ID.
func (o GetNetworkInterfacesNetworkInterfaceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterface) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetNetworkInterfacesNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (o GetNetworkInterfacesNetworkInterfaceArrayOutput) ToGetNetworkInterfacesNetworkInterfaceArrayOutput() GetNetworkInterfacesNetworkInterfaceArrayOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfaceArrayOutput) ToGetNetworkInterfacesNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfaceArrayOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesNetworkInterface {
		return vs[0].([]GetNetworkInterfacesNetworkInterface)[vs[1].(int)]
	}).(GetNetworkInterfacesNetworkInterfaceOutput)
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSet struct {
	// The public IP that secondary private network IP associated with.
	AssociatedElasticIps []GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp `pulumi:"associatedElasticIps"`
	// Whether the network interface is primary IP address.
	Primary bool `pulumi:"primary"`
	// The secondary private network IP address of the network interface card.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
}

// GetNetworkInterfacesNetworkInterfacePrivateIpSetInput is an input type that accepts GetNetworkInterfacesNetworkInterfacePrivateIpSetArgs and GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesNetworkInterfacePrivateIpSetInput` via:
//
//	GetNetworkInterfacesNetworkInterfacePrivateIpSetArgs{...}
type GetNetworkInterfacesNetworkInterfacePrivateIpSetInput interface {
	pulumi.Input

	ToGetNetworkInterfacesNetworkInterfacePrivateIpSetOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput
	ToGetNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetArgs struct {
	// The public IP that secondary private network IP associated with.
	AssociatedElasticIps GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput `pulumi:"associatedElasticIps"`
	// Whether the network interface is primary IP address.
	Primary pulumi.BoolInput `pulumi:"primary"`
	// The secondary private network IP address of the network interface card.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
}

func (GetNetworkInterfacesNetworkInterfacePrivateIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (i GetNetworkInterfacesNetworkInterfacePrivateIpSetArgs) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return i.ToGetNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesNetworkInterfacePrivateIpSetArgs) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput)
}

// GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayInput is an input type that accepts GetNetworkInterfacesNetworkInterfacePrivateIpSetArray and GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayInput` via:
//
//	GetNetworkInterfacesNetworkInterfacePrivateIpSetArray{ GetNetworkInterfacesNetworkInterfacePrivateIpSetArgs{...} }
type GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput
	ToGetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetArray []GetNetworkInterfacesNetworkInterfacePrivateIpSetInput

func (GetNetworkInterfacesNetworkInterfacePrivateIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (i GetNetworkInterfacesNetworkInterfacePrivateIpSetArray) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return i.ToGetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesNetworkInterfacePrivateIpSetArray) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput)
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return o
}

// The public IP that secondary private network IP associated with.
func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput) AssociatedElasticIps() GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterfacePrivateIpSet) []GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp {
		return v.AssociatedElasticIps
	}).(GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput)
}

// Whether the network interface is primary IP address.
func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterfacePrivateIpSet) bool { return v.Primary }).(pulumi.BoolOutput)
}

// The secondary private network IP address of the network interface card.
func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterfacePrivateIpSet) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesNetworkInterfacePrivateIpSet {
		return vs[0].([]GetNetworkInterfacesNetworkInterfacePrivateIpSet)[vs[1].(int)]
	}).(GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput)
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp struct {
	// The public IP ID.
	AllocationId string `pulumi:"allocationId"`
	// The public IP address.
	EipAddress string `pulumi:"eipAddress"`
}

// GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput is an input type that accepts GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs and GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput` via:
//
//	GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{...}
type GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput interface {
	pulumi.Input

	ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput
	ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs struct {
	// The public IP ID.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// The public IP address.
	EipAddress pulumi.StringInput `pulumi:"eipAddress"`
}

func (GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (i GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return i.ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput)
}

// GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput is an input type that accepts GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray and GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput` via:
//
//	GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray{ GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{...} }
type GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput
	ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray []GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput

func (GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (i GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return i.ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput)
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return o
}

// The public IP ID.
func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp) string {
		return v.AllocationId
	}).(pulumi.StringOutput)
}

// The public IP address.
func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp) string {
		return v.EipAddress
	}).(pulumi.StringOutput)
}

type GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ToGetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp {
		return vs[0].([]GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)[vs[1].(int)]
	}).(GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput)
}

type GetNetworkInterfacesNetworkInterfaceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetNetworkInterfacesNetworkInterfaceTagInput is an input type that accepts GetNetworkInterfacesNetworkInterfaceTagArgs and GetNetworkInterfacesNetworkInterfaceTagOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesNetworkInterfaceTagInput` via:
//
//	GetNetworkInterfacesNetworkInterfaceTagArgs{...}
type GetNetworkInterfacesNetworkInterfaceTagInput interface {
	pulumi.Input

	ToGetNetworkInterfacesNetworkInterfaceTagOutput() GetNetworkInterfacesNetworkInterfaceTagOutput
	ToGetNetworkInterfacesNetworkInterfaceTagOutputWithContext(context.Context) GetNetworkInterfacesNetworkInterfaceTagOutput
}

type GetNetworkInterfacesNetworkInterfaceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkInterfacesNetworkInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (i GetNetworkInterfacesNetworkInterfaceTagArgs) ToGetNetworkInterfacesNetworkInterfaceTagOutput() GetNetworkInterfacesNetworkInterfaceTagOutput {
	return i.ToGetNetworkInterfacesNetworkInterfaceTagOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesNetworkInterfaceTagArgs) ToGetNetworkInterfacesNetworkInterfaceTagOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesNetworkInterfaceTagOutput)
}

// GetNetworkInterfacesNetworkInterfaceTagArrayInput is an input type that accepts GetNetworkInterfacesNetworkInterfaceTagArray and GetNetworkInterfacesNetworkInterfaceTagArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesNetworkInterfaceTagArrayInput` via:
//
//	GetNetworkInterfacesNetworkInterfaceTagArray{ GetNetworkInterfacesNetworkInterfaceTagArgs{...} }
type GetNetworkInterfacesNetworkInterfaceTagArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesNetworkInterfaceTagArrayOutput() GetNetworkInterfacesNetworkInterfaceTagArrayOutput
	ToGetNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(context.Context) GetNetworkInterfacesNetworkInterfaceTagArrayOutput
}

type GetNetworkInterfacesNetworkInterfaceTagArray []GetNetworkInterfacesNetworkInterfaceTagInput

func (GetNetworkInterfacesNetworkInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (i GetNetworkInterfacesNetworkInterfaceTagArray) ToGetNetworkInterfacesNetworkInterfaceTagArrayOutput() GetNetworkInterfacesNetworkInterfaceTagArrayOutput {
	return i.ToGetNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesNetworkInterfaceTagArray) ToGetNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesNetworkInterfaceTagArrayOutput)
}

type GetNetworkInterfacesNetworkInterfaceTagOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesNetworkInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (o GetNetworkInterfacesNetworkInterfaceTagOutput) ToGetNetworkInterfacesNetworkInterfaceTagOutput() GetNetworkInterfacesNetworkInterfaceTagOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfaceTagOutput) ToGetNetworkInterfacesNetworkInterfaceTagOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfaceTagOutput {
	return o
}

// The Key of Tags.
func (o GetNetworkInterfacesNetworkInterfaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterfaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetNetworkInterfacesNetworkInterfaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesNetworkInterfaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkInterfacesNetworkInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesNetworkInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (o GetNetworkInterfacesNetworkInterfaceTagArrayOutput) ToGetNetworkInterfacesNetworkInterfaceTagArrayOutput() GetNetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfaceTagArrayOutput) ToGetNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o
}

func (o GetNetworkInterfacesNetworkInterfaceTagArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesNetworkInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesNetworkInterfaceTag {
		return vs[0].([]GetNetworkInterfacesNetworkInterfaceTag)[vs[1].(int)]
	}).(GetNetworkInterfacesNetworkInterfaceTagOutput)
}

type GetNetworkInterfacesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetNetworkInterfacesTagInput is an input type that accepts GetNetworkInterfacesTagArgs and GetNetworkInterfacesTagOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesTagInput` via:
//
//	GetNetworkInterfacesTagArgs{...}
type GetNetworkInterfacesTagInput interface {
	pulumi.Input

	ToGetNetworkInterfacesTagOutput() GetNetworkInterfacesTagOutput
	ToGetNetworkInterfacesTagOutputWithContext(context.Context) GetNetworkInterfacesTagOutput
}

type GetNetworkInterfacesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNetworkInterfacesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesTag)(nil)).Elem()
}

func (i GetNetworkInterfacesTagArgs) ToGetNetworkInterfacesTagOutput() GetNetworkInterfacesTagOutput {
	return i.ToGetNetworkInterfacesTagOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesTagArgs) ToGetNetworkInterfacesTagOutputWithContext(ctx context.Context) GetNetworkInterfacesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesTagOutput)
}

// GetNetworkInterfacesTagArrayInput is an input type that accepts GetNetworkInterfacesTagArray and GetNetworkInterfacesTagArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesTagArrayInput` via:
//
//	GetNetworkInterfacesTagArray{ GetNetworkInterfacesTagArgs{...} }
type GetNetworkInterfacesTagArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesTagArrayOutput() GetNetworkInterfacesTagArrayOutput
	ToGetNetworkInterfacesTagArrayOutputWithContext(context.Context) GetNetworkInterfacesTagArrayOutput
}

type GetNetworkInterfacesTagArray []GetNetworkInterfacesTagInput

func (GetNetworkInterfacesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesTag)(nil)).Elem()
}

func (i GetNetworkInterfacesTagArray) ToGetNetworkInterfacesTagArrayOutput() GetNetworkInterfacesTagArrayOutput {
	return i.ToGetNetworkInterfacesTagArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesTagArray) ToGetNetworkInterfacesTagArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesTagArrayOutput)
}

type GetNetworkInterfacesTagOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesTag)(nil)).Elem()
}

func (o GetNetworkInterfacesTagOutput) ToGetNetworkInterfacesTagOutput() GetNetworkInterfacesTagOutput {
	return o
}

func (o GetNetworkInterfacesTagOutput) ToGetNetworkInterfacesTagOutputWithContext(ctx context.Context) GetNetworkInterfacesTagOutput {
	return o
}

// The Key of Tags.
func (o GetNetworkInterfacesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetNetworkInterfacesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetNetworkInterfacesTagArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesTag)(nil)).Elem()
}

func (o GetNetworkInterfacesTagArrayOutput) ToGetNetworkInterfacesTagArrayOutput() GetNetworkInterfacesTagArrayOutput {
	return o
}

func (o GetNetworkInterfacesTagArrayOutput) ToGetNetworkInterfacesTagArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesTagArrayOutput {
	return o
}

func (o GetNetworkInterfacesTagArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesTag {
		return vs[0].([]GetNetworkInterfacesTag)[vs[1].(int)]
	}).(GetNetworkInterfacesTagOutput)
}

type GetPrefixListsPrefixList struct {
	// Number of associated resources for prefix list.
	AssociationCount int `pulumi:"associationCount"`
	// CIDR address block information for prefix list.
	Cidrs []string `pulumi:"cidrs"`
	// The creation time of the prefix list.
	CreationTime string `pulumi:"creationTime"`
	// Description.
	Description string `pulumi:"description"`
	// The id of the prefix list.
	Id string `pulumi:"id"`
	// IP version of prefix list.
	IpVersion string `pulumi:"ipVersion"`
	// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
	MaxEntries int `pulumi:"maxEntries"`
	// Collection of resources associated with VPC prefix list.
	PrefixListAssociations []GetPrefixListsPrefixListPrefixListAssociation `pulumi:"prefixListAssociations"`
	// The prefix list entries.
	PrefixListEntries []GetPrefixListsPrefixListPrefixListEntry `pulumi:"prefixListEntries"`
	// The prefix list id.
	PrefixListId string `pulumi:"prefixListId"`
	// A Name of prefix list.
	PrefixListName string `pulumi:"prefixListName"`
	// The status of the prefix list.
	Status string `pulumi:"status"`
	// The update time of the prefix list.
	UpdateTime string `pulumi:"updateTime"`
}

// GetPrefixListsPrefixListInput is an input type that accepts GetPrefixListsPrefixListArgs and GetPrefixListsPrefixListOutput values.
// You can construct a concrete instance of `GetPrefixListsPrefixListInput` via:
//
//	GetPrefixListsPrefixListArgs{...}
type GetPrefixListsPrefixListInput interface {
	pulumi.Input

	ToGetPrefixListsPrefixListOutput() GetPrefixListsPrefixListOutput
	ToGetPrefixListsPrefixListOutputWithContext(context.Context) GetPrefixListsPrefixListOutput
}

type GetPrefixListsPrefixListArgs struct {
	// Number of associated resources for prefix list.
	AssociationCount pulumi.IntInput `pulumi:"associationCount"`
	// CIDR address block information for prefix list.
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// The creation time of the prefix list.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the prefix list.
	Id pulumi.StringInput `pulumi:"id"`
	// IP version of prefix list.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
	MaxEntries pulumi.IntInput `pulumi:"maxEntries"`
	// Collection of resources associated with VPC prefix list.
	PrefixListAssociations GetPrefixListsPrefixListPrefixListAssociationArrayInput `pulumi:"prefixListAssociations"`
	// The prefix list entries.
	PrefixListEntries GetPrefixListsPrefixListPrefixListEntryArrayInput `pulumi:"prefixListEntries"`
	// The prefix list id.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
	// A Name of prefix list.
	PrefixListName pulumi.StringInput `pulumi:"prefixListName"`
	// The status of the prefix list.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of the prefix list.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetPrefixListsPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsPrefixList)(nil)).Elem()
}

func (i GetPrefixListsPrefixListArgs) ToGetPrefixListsPrefixListOutput() GetPrefixListsPrefixListOutput {
	return i.ToGetPrefixListsPrefixListOutputWithContext(context.Background())
}

func (i GetPrefixListsPrefixListArgs) ToGetPrefixListsPrefixListOutputWithContext(ctx context.Context) GetPrefixListsPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsPrefixListOutput)
}

// GetPrefixListsPrefixListArrayInput is an input type that accepts GetPrefixListsPrefixListArray and GetPrefixListsPrefixListArrayOutput values.
// You can construct a concrete instance of `GetPrefixListsPrefixListArrayInput` via:
//
//	GetPrefixListsPrefixListArray{ GetPrefixListsPrefixListArgs{...} }
type GetPrefixListsPrefixListArrayInput interface {
	pulumi.Input

	ToGetPrefixListsPrefixListArrayOutput() GetPrefixListsPrefixListArrayOutput
	ToGetPrefixListsPrefixListArrayOutputWithContext(context.Context) GetPrefixListsPrefixListArrayOutput
}

type GetPrefixListsPrefixListArray []GetPrefixListsPrefixListInput

func (GetPrefixListsPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsPrefixList)(nil)).Elem()
}

func (i GetPrefixListsPrefixListArray) ToGetPrefixListsPrefixListArrayOutput() GetPrefixListsPrefixListArrayOutput {
	return i.ToGetPrefixListsPrefixListArrayOutputWithContext(context.Background())
}

func (i GetPrefixListsPrefixListArray) ToGetPrefixListsPrefixListArrayOutputWithContext(ctx context.Context) GetPrefixListsPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsPrefixListArrayOutput)
}

type GetPrefixListsPrefixListOutput struct{ *pulumi.OutputState }

func (GetPrefixListsPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsPrefixList)(nil)).Elem()
}

func (o GetPrefixListsPrefixListOutput) ToGetPrefixListsPrefixListOutput() GetPrefixListsPrefixListOutput {
	return o
}

func (o GetPrefixListsPrefixListOutput) ToGetPrefixListsPrefixListOutputWithContext(ctx context.Context) GetPrefixListsPrefixListOutput {
	return o
}

// Number of associated resources for prefix list.
func (o GetPrefixListsPrefixListOutput) AssociationCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) int { return v.AssociationCount }).(pulumi.IntOutput)
}

// CIDR address block information for prefix list.
func (o GetPrefixListsPrefixListOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// The creation time of the prefix list.
func (o GetPrefixListsPrefixListOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description.
func (o GetPrefixListsPrefixListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the prefix list.
func (o GetPrefixListsPrefixListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) string { return v.Id }).(pulumi.StringOutput)
}

// IP version of prefix list.
func (o GetPrefixListsPrefixListOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
func (o GetPrefixListsPrefixListOutput) MaxEntries() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) int { return v.MaxEntries }).(pulumi.IntOutput)
}

// Collection of resources associated with VPC prefix list.
func (o GetPrefixListsPrefixListOutput) PrefixListAssociations() GetPrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) []GetPrefixListsPrefixListPrefixListAssociation {
		return v.PrefixListAssociations
	}).(GetPrefixListsPrefixListPrefixListAssociationArrayOutput)
}

// The prefix list entries.
func (o GetPrefixListsPrefixListOutput) PrefixListEntries() GetPrefixListsPrefixListPrefixListEntryArrayOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) []GetPrefixListsPrefixListPrefixListEntry { return v.PrefixListEntries }).(GetPrefixListsPrefixListPrefixListEntryArrayOutput)
}

// The prefix list id.
func (o GetPrefixListsPrefixListOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) string { return v.PrefixListId }).(pulumi.StringOutput)
}

// A Name of prefix list.
func (o GetPrefixListsPrefixListOutput) PrefixListName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) string { return v.PrefixListName }).(pulumi.StringOutput)
}

// The status of the prefix list.
func (o GetPrefixListsPrefixListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of the prefix list.
func (o GetPrefixListsPrefixListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetPrefixListsPrefixListArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixListsPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsPrefixList)(nil)).Elem()
}

func (o GetPrefixListsPrefixListArrayOutput) ToGetPrefixListsPrefixListArrayOutput() GetPrefixListsPrefixListArrayOutput {
	return o
}

func (o GetPrefixListsPrefixListArrayOutput) ToGetPrefixListsPrefixListArrayOutputWithContext(ctx context.Context) GetPrefixListsPrefixListArrayOutput {
	return o
}

func (o GetPrefixListsPrefixListArrayOutput) Index(i pulumi.IntInput) GetPrefixListsPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixListsPrefixList {
		return vs[0].([]GetPrefixListsPrefixList)[vs[1].(int)]
	}).(GetPrefixListsPrefixListOutput)
}

type GetPrefixListsPrefixListPrefixListAssociation struct {
	// Associated resource ID.
	ResourceId string `pulumi:"resourceId"`
	// Related resource types.
	ResourceType string `pulumi:"resourceType"`
}

// GetPrefixListsPrefixListPrefixListAssociationInput is an input type that accepts GetPrefixListsPrefixListPrefixListAssociationArgs and GetPrefixListsPrefixListPrefixListAssociationOutput values.
// You can construct a concrete instance of `GetPrefixListsPrefixListPrefixListAssociationInput` via:
//
//	GetPrefixListsPrefixListPrefixListAssociationArgs{...}
type GetPrefixListsPrefixListPrefixListAssociationInput interface {
	pulumi.Input

	ToGetPrefixListsPrefixListPrefixListAssociationOutput() GetPrefixListsPrefixListPrefixListAssociationOutput
	ToGetPrefixListsPrefixListPrefixListAssociationOutputWithContext(context.Context) GetPrefixListsPrefixListPrefixListAssociationOutput
}

type GetPrefixListsPrefixListPrefixListAssociationArgs struct {
	// Associated resource ID.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Related resource types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetPrefixListsPrefixListPrefixListAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (i GetPrefixListsPrefixListPrefixListAssociationArgs) ToGetPrefixListsPrefixListPrefixListAssociationOutput() GetPrefixListsPrefixListPrefixListAssociationOutput {
	return i.ToGetPrefixListsPrefixListPrefixListAssociationOutputWithContext(context.Background())
}

func (i GetPrefixListsPrefixListPrefixListAssociationArgs) ToGetPrefixListsPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) GetPrefixListsPrefixListPrefixListAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsPrefixListPrefixListAssociationOutput)
}

// GetPrefixListsPrefixListPrefixListAssociationArrayInput is an input type that accepts GetPrefixListsPrefixListPrefixListAssociationArray and GetPrefixListsPrefixListPrefixListAssociationArrayOutput values.
// You can construct a concrete instance of `GetPrefixListsPrefixListPrefixListAssociationArrayInput` via:
//
//	GetPrefixListsPrefixListPrefixListAssociationArray{ GetPrefixListsPrefixListPrefixListAssociationArgs{...} }
type GetPrefixListsPrefixListPrefixListAssociationArrayInput interface {
	pulumi.Input

	ToGetPrefixListsPrefixListPrefixListAssociationArrayOutput() GetPrefixListsPrefixListPrefixListAssociationArrayOutput
	ToGetPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(context.Context) GetPrefixListsPrefixListPrefixListAssociationArrayOutput
}

type GetPrefixListsPrefixListPrefixListAssociationArray []GetPrefixListsPrefixListPrefixListAssociationInput

func (GetPrefixListsPrefixListPrefixListAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (i GetPrefixListsPrefixListPrefixListAssociationArray) ToGetPrefixListsPrefixListPrefixListAssociationArrayOutput() GetPrefixListsPrefixListPrefixListAssociationArrayOutput {
	return i.ToGetPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(context.Background())
}

func (i GetPrefixListsPrefixListPrefixListAssociationArray) ToGetPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) GetPrefixListsPrefixListPrefixListAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsPrefixListPrefixListAssociationArrayOutput)
}

type GetPrefixListsPrefixListPrefixListAssociationOutput struct{ *pulumi.OutputState }

func (GetPrefixListsPrefixListPrefixListAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (o GetPrefixListsPrefixListPrefixListAssociationOutput) ToGetPrefixListsPrefixListPrefixListAssociationOutput() GetPrefixListsPrefixListPrefixListAssociationOutput {
	return o
}

func (o GetPrefixListsPrefixListPrefixListAssociationOutput) ToGetPrefixListsPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) GetPrefixListsPrefixListPrefixListAssociationOutput {
	return o
}

// Associated resource ID.
func (o GetPrefixListsPrefixListPrefixListAssociationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixListPrefixListAssociation) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Related resource types.
func (o GetPrefixListsPrefixListPrefixListAssociationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixListPrefixListAssociation) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetPrefixListsPrefixListPrefixListAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixListsPrefixListPrefixListAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (o GetPrefixListsPrefixListPrefixListAssociationArrayOutput) ToGetPrefixListsPrefixListPrefixListAssociationArrayOutput() GetPrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o GetPrefixListsPrefixListPrefixListAssociationArrayOutput) ToGetPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) GetPrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o GetPrefixListsPrefixListPrefixListAssociationArrayOutput) Index(i pulumi.IntInput) GetPrefixListsPrefixListPrefixListAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixListsPrefixListPrefixListAssociation {
		return vs[0].([]GetPrefixListsPrefixListPrefixListAssociation)[vs[1].(int)]
	}).(GetPrefixListsPrefixListPrefixListAssociationOutput)
}

type GetPrefixListsPrefixListPrefixListEntry struct {
	// CIDR address blocks for prefix list entries.
	Cidr string `pulumi:"cidr"`
	// Description.
	Description string `pulumi:"description"`
	// The prefix list id.
	PrefixListId string `pulumi:"prefixListId"`
}

// GetPrefixListsPrefixListPrefixListEntryInput is an input type that accepts GetPrefixListsPrefixListPrefixListEntryArgs and GetPrefixListsPrefixListPrefixListEntryOutput values.
// You can construct a concrete instance of `GetPrefixListsPrefixListPrefixListEntryInput` via:
//
//	GetPrefixListsPrefixListPrefixListEntryArgs{...}
type GetPrefixListsPrefixListPrefixListEntryInput interface {
	pulumi.Input

	ToGetPrefixListsPrefixListPrefixListEntryOutput() GetPrefixListsPrefixListPrefixListEntryOutput
	ToGetPrefixListsPrefixListPrefixListEntryOutputWithContext(context.Context) GetPrefixListsPrefixListPrefixListEntryOutput
}

type GetPrefixListsPrefixListPrefixListEntryArgs struct {
	// CIDR address blocks for prefix list entries.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// The prefix list id.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
}

func (GetPrefixListsPrefixListPrefixListEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (i GetPrefixListsPrefixListPrefixListEntryArgs) ToGetPrefixListsPrefixListPrefixListEntryOutput() GetPrefixListsPrefixListPrefixListEntryOutput {
	return i.ToGetPrefixListsPrefixListPrefixListEntryOutputWithContext(context.Background())
}

func (i GetPrefixListsPrefixListPrefixListEntryArgs) ToGetPrefixListsPrefixListPrefixListEntryOutputWithContext(ctx context.Context) GetPrefixListsPrefixListPrefixListEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsPrefixListPrefixListEntryOutput)
}

// GetPrefixListsPrefixListPrefixListEntryArrayInput is an input type that accepts GetPrefixListsPrefixListPrefixListEntryArray and GetPrefixListsPrefixListPrefixListEntryArrayOutput values.
// You can construct a concrete instance of `GetPrefixListsPrefixListPrefixListEntryArrayInput` via:
//
//	GetPrefixListsPrefixListPrefixListEntryArray{ GetPrefixListsPrefixListPrefixListEntryArgs{...} }
type GetPrefixListsPrefixListPrefixListEntryArrayInput interface {
	pulumi.Input

	ToGetPrefixListsPrefixListPrefixListEntryArrayOutput() GetPrefixListsPrefixListPrefixListEntryArrayOutput
	ToGetPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(context.Context) GetPrefixListsPrefixListPrefixListEntryArrayOutput
}

type GetPrefixListsPrefixListPrefixListEntryArray []GetPrefixListsPrefixListPrefixListEntryInput

func (GetPrefixListsPrefixListPrefixListEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (i GetPrefixListsPrefixListPrefixListEntryArray) ToGetPrefixListsPrefixListPrefixListEntryArrayOutput() GetPrefixListsPrefixListPrefixListEntryArrayOutput {
	return i.ToGetPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(context.Background())
}

func (i GetPrefixListsPrefixListPrefixListEntryArray) ToGetPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) GetPrefixListsPrefixListPrefixListEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsPrefixListPrefixListEntryArrayOutput)
}

type GetPrefixListsPrefixListPrefixListEntryOutput struct{ *pulumi.OutputState }

func (GetPrefixListsPrefixListPrefixListEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (o GetPrefixListsPrefixListPrefixListEntryOutput) ToGetPrefixListsPrefixListPrefixListEntryOutput() GetPrefixListsPrefixListPrefixListEntryOutput {
	return o
}

func (o GetPrefixListsPrefixListPrefixListEntryOutput) ToGetPrefixListsPrefixListPrefixListEntryOutputWithContext(ctx context.Context) GetPrefixListsPrefixListPrefixListEntryOutput {
	return o
}

// CIDR address blocks for prefix list entries.
func (o GetPrefixListsPrefixListPrefixListEntryOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixListPrefixListEntry) string { return v.Cidr }).(pulumi.StringOutput)
}

// Description.
func (o GetPrefixListsPrefixListPrefixListEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixListPrefixListEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The prefix list id.
func (o GetPrefixListsPrefixListPrefixListEntryOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixListsPrefixListPrefixListEntry) string { return v.PrefixListId }).(pulumi.StringOutput)
}

type GetPrefixListsPrefixListPrefixListEntryArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixListsPrefixListPrefixListEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (o GetPrefixListsPrefixListPrefixListEntryArrayOutput) ToGetPrefixListsPrefixListPrefixListEntryArrayOutput() GetPrefixListsPrefixListPrefixListEntryArrayOutput {
	return o
}

func (o GetPrefixListsPrefixListPrefixListEntryArrayOutput) ToGetPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) GetPrefixListsPrefixListPrefixListEntryArrayOutput {
	return o
}

func (o GetPrefixListsPrefixListPrefixListEntryArrayOutput) Index(i pulumi.IntInput) GetPrefixListsPrefixListPrefixListEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixListsPrefixListPrefixListEntry {
		return vs[0].([]GetPrefixListsPrefixListPrefixListEntry)[vs[1].(int)]
	}).(GetPrefixListsPrefixListPrefixListEntryOutput)
}

type GetPrefixListsTagFilter struct {
	// The key of the tag.
	Key *string `pulumi:"key"`
	// The values of the tag.
	Values []string `pulumi:"values"`
}

// GetPrefixListsTagFilterInput is an input type that accepts GetPrefixListsTagFilterArgs and GetPrefixListsTagFilterOutput values.
// You can construct a concrete instance of `GetPrefixListsTagFilterInput` via:
//
//	GetPrefixListsTagFilterArgs{...}
type GetPrefixListsTagFilterInput interface {
	pulumi.Input

	ToGetPrefixListsTagFilterOutput() GetPrefixListsTagFilterOutput
	ToGetPrefixListsTagFilterOutputWithContext(context.Context) GetPrefixListsTagFilterOutput
}

type GetPrefixListsTagFilterArgs struct {
	// The key of the tag.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The values of the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPrefixListsTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsTagFilter)(nil)).Elem()
}

func (i GetPrefixListsTagFilterArgs) ToGetPrefixListsTagFilterOutput() GetPrefixListsTagFilterOutput {
	return i.ToGetPrefixListsTagFilterOutputWithContext(context.Background())
}

func (i GetPrefixListsTagFilterArgs) ToGetPrefixListsTagFilterOutputWithContext(ctx context.Context) GetPrefixListsTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsTagFilterOutput)
}

// GetPrefixListsTagFilterArrayInput is an input type that accepts GetPrefixListsTagFilterArray and GetPrefixListsTagFilterArrayOutput values.
// You can construct a concrete instance of `GetPrefixListsTagFilterArrayInput` via:
//
//	GetPrefixListsTagFilterArray{ GetPrefixListsTagFilterArgs{...} }
type GetPrefixListsTagFilterArrayInput interface {
	pulumi.Input

	ToGetPrefixListsTagFilterArrayOutput() GetPrefixListsTagFilterArrayOutput
	ToGetPrefixListsTagFilterArrayOutputWithContext(context.Context) GetPrefixListsTagFilterArrayOutput
}

type GetPrefixListsTagFilterArray []GetPrefixListsTagFilterInput

func (GetPrefixListsTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsTagFilter)(nil)).Elem()
}

func (i GetPrefixListsTagFilterArray) ToGetPrefixListsTagFilterArrayOutput() GetPrefixListsTagFilterArrayOutput {
	return i.ToGetPrefixListsTagFilterArrayOutputWithContext(context.Background())
}

func (i GetPrefixListsTagFilterArray) ToGetPrefixListsTagFilterArrayOutputWithContext(ctx context.Context) GetPrefixListsTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixListsTagFilterArrayOutput)
}

type GetPrefixListsTagFilterOutput struct{ *pulumi.OutputState }

func (GetPrefixListsTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixListsTagFilter)(nil)).Elem()
}

func (o GetPrefixListsTagFilterOutput) ToGetPrefixListsTagFilterOutput() GetPrefixListsTagFilterOutput {
	return o
}

func (o GetPrefixListsTagFilterOutput) ToGetPrefixListsTagFilterOutputWithContext(ctx context.Context) GetPrefixListsTagFilterOutput {
	return o
}

// The key of the tag.
func (o GetPrefixListsTagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPrefixListsTagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The values of the tag.
func (o GetPrefixListsTagFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrefixListsTagFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPrefixListsTagFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixListsTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixListsTagFilter)(nil)).Elem()
}

func (o GetPrefixListsTagFilterArrayOutput) ToGetPrefixListsTagFilterArrayOutput() GetPrefixListsTagFilterArrayOutput {
	return o
}

func (o GetPrefixListsTagFilterArrayOutput) ToGetPrefixListsTagFilterArrayOutputWithContext(ctx context.Context) GetPrefixListsTagFilterArrayOutput {
	return o
}

func (o GetPrefixListsTagFilterArrayOutput) Index(i pulumi.IntInput) GetPrefixListsTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixListsTagFilter {
		return vs[0].([]GetPrefixListsTagFilter)[vs[1].(int)]
	}).(GetPrefixListsTagFilterOutput)
}

type GetRouteEntriesRouteEntry struct {
	// The description of the route entry.
	Description string `pulumi:"description"`
	// A destination CIDR block of route entry.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The id of the route entry.
	Id string `pulumi:"id"`
	// An id of next hop.
	NextHopId string `pulumi:"nextHopId"`
	// The name of the next hop.
	NextHopName string `pulumi:"nextHopName"`
	// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
	NextHopType string `pulumi:"nextHopType"`
	// The id of the route entry.
	RouteEntryId string `pulumi:"routeEntryId"`
	// A name of route entry.
	RouteEntryName string `pulumi:"routeEntryName"`
	// An id of route table.
	RouteTableId string `pulumi:"routeTableId"`
	// The status of the route entry.
	Status string `pulumi:"status"`
	// The type of the route entry.
	Type string `pulumi:"type"`
	// The id of the virtual private cloud (VPC) to which the route entry belongs.
	VpcId string `pulumi:"vpcId"`
}

// GetRouteEntriesRouteEntryInput is an input type that accepts GetRouteEntriesRouteEntryArgs and GetRouteEntriesRouteEntryOutput values.
// You can construct a concrete instance of `GetRouteEntriesRouteEntryInput` via:
//
//	GetRouteEntriesRouteEntryArgs{...}
type GetRouteEntriesRouteEntryInput interface {
	pulumi.Input

	ToGetRouteEntriesRouteEntryOutput() GetRouteEntriesRouteEntryOutput
	ToGetRouteEntriesRouteEntryOutputWithContext(context.Context) GetRouteEntriesRouteEntryOutput
}

type GetRouteEntriesRouteEntryArgs struct {
	// The description of the route entry.
	Description pulumi.StringInput `pulumi:"description"`
	// A destination CIDR block of route entry.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The id of the route entry.
	Id pulumi.StringInput `pulumi:"id"`
	// An id of next hop.
	NextHopId pulumi.StringInput `pulumi:"nextHopId"`
	// The name of the next hop.
	NextHopName pulumi.StringInput `pulumi:"nextHopName"`
	// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The id of the route entry.
	RouteEntryId pulumi.StringInput `pulumi:"routeEntryId"`
	// A name of route entry.
	RouteEntryName pulumi.StringInput `pulumi:"routeEntryName"`
	// An id of route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The status of the route entry.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the route entry.
	Type pulumi.StringInput `pulumi:"type"`
	// The id of the virtual private cloud (VPC) to which the route entry belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetRouteEntriesRouteEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesRouteEntry)(nil)).Elem()
}

func (i GetRouteEntriesRouteEntryArgs) ToGetRouteEntriesRouteEntryOutput() GetRouteEntriesRouteEntryOutput {
	return i.ToGetRouteEntriesRouteEntryOutputWithContext(context.Background())
}

func (i GetRouteEntriesRouteEntryArgs) ToGetRouteEntriesRouteEntryOutputWithContext(ctx context.Context) GetRouteEntriesRouteEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteEntriesRouteEntryOutput)
}

// GetRouteEntriesRouteEntryArrayInput is an input type that accepts GetRouteEntriesRouteEntryArray and GetRouteEntriesRouteEntryArrayOutput values.
// You can construct a concrete instance of `GetRouteEntriesRouteEntryArrayInput` via:
//
//	GetRouteEntriesRouteEntryArray{ GetRouteEntriesRouteEntryArgs{...} }
type GetRouteEntriesRouteEntryArrayInput interface {
	pulumi.Input

	ToGetRouteEntriesRouteEntryArrayOutput() GetRouteEntriesRouteEntryArrayOutput
	ToGetRouteEntriesRouteEntryArrayOutputWithContext(context.Context) GetRouteEntriesRouteEntryArrayOutput
}

type GetRouteEntriesRouteEntryArray []GetRouteEntriesRouteEntryInput

func (GetRouteEntriesRouteEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteEntriesRouteEntry)(nil)).Elem()
}

func (i GetRouteEntriesRouteEntryArray) ToGetRouteEntriesRouteEntryArrayOutput() GetRouteEntriesRouteEntryArrayOutput {
	return i.ToGetRouteEntriesRouteEntryArrayOutputWithContext(context.Background())
}

func (i GetRouteEntriesRouteEntryArray) ToGetRouteEntriesRouteEntryArrayOutputWithContext(ctx context.Context) GetRouteEntriesRouteEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteEntriesRouteEntryArrayOutput)
}

type GetRouteEntriesRouteEntryOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesRouteEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteEntriesRouteEntry)(nil)).Elem()
}

func (o GetRouteEntriesRouteEntryOutput) ToGetRouteEntriesRouteEntryOutput() GetRouteEntriesRouteEntryOutput {
	return o
}

func (o GetRouteEntriesRouteEntryOutput) ToGetRouteEntriesRouteEntryOutputWithContext(ctx context.Context) GetRouteEntriesRouteEntryOutput {
	return o
}

// The description of the route entry.
func (o GetRouteEntriesRouteEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.Description }).(pulumi.StringOutput)
}

// A destination CIDR block of route entry.
func (o GetRouteEntriesRouteEntryOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The id of the route entry.
func (o GetRouteEntriesRouteEntryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.Id }).(pulumi.StringOutput)
}

// An id of next hop.
func (o GetRouteEntriesRouteEntryOutput) NextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.NextHopId }).(pulumi.StringOutput)
}

// The name of the next hop.
func (o GetRouteEntriesRouteEntryOutput) NextHopName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.NextHopName }).(pulumi.StringOutput)
}

// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
func (o GetRouteEntriesRouteEntryOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The id of the route entry.
func (o GetRouteEntriesRouteEntryOutput) RouteEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.RouteEntryId }).(pulumi.StringOutput)
}

// A name of route entry.
func (o GetRouteEntriesRouteEntryOutput) RouteEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.RouteEntryName }).(pulumi.StringOutput)
}

// An id of route table.
func (o GetRouteEntriesRouteEntryOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The status of the route entry.
func (o GetRouteEntriesRouteEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the route entry.
func (o GetRouteEntriesRouteEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.Type }).(pulumi.StringOutput)
}

// The id of the virtual private cloud (VPC) to which the route entry belongs.
func (o GetRouteEntriesRouteEntryOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteEntriesRouteEntry) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetRouteEntriesRouteEntryArrayOutput struct{ *pulumi.OutputState }

func (GetRouteEntriesRouteEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteEntriesRouteEntry)(nil)).Elem()
}

func (o GetRouteEntriesRouteEntryArrayOutput) ToGetRouteEntriesRouteEntryArrayOutput() GetRouteEntriesRouteEntryArrayOutput {
	return o
}

func (o GetRouteEntriesRouteEntryArrayOutput) ToGetRouteEntriesRouteEntryArrayOutputWithContext(ctx context.Context) GetRouteEntriesRouteEntryArrayOutput {
	return o
}

func (o GetRouteEntriesRouteEntryArrayOutput) Index(i pulumi.IntInput) GetRouteEntriesRouteEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteEntriesRouteEntry {
		return vs[0].([]GetRouteEntriesRouteEntry)[vs[1].(int)]
	}).(GetRouteEntriesRouteEntryOutput)
}

type GetRouteTablesRouteTable struct {
	// The account id of the route table creator.
	AccountId string `pulumi:"accountId"`
	// The create time of the route table.
	CreationTime string `pulumi:"creationTime"`
	// The description of the route table.
	Description string `pulumi:"description"`
	// The id of the route table.
	Id string `pulumi:"id"`
	// The ProjectName of the route table.
	ProjectName string `pulumi:"projectName"`
	// The id of the route table.
	RouteTableId string `pulumi:"routeTableId"`
	// A name of route table.
	RouteTableName string `pulumi:"routeTableName"`
	// The type of the route table.
	RouteTableType string `pulumi:"routeTableType"`
	// The list of the subnet ids to which the entry table associates.
	SubnetIds []string `pulumi:"subnetIds"`
	// Tags.
	Tags []GetRouteTablesRouteTableTag `pulumi:"tags"`
	// The last update time of the route table.
	UpdateTime string `pulumi:"updateTime"`
	// An id of VPC.
	VpcId string `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the route entry belongs.
	VpcName string `pulumi:"vpcName"`
}

// GetRouteTablesRouteTableInput is an input type that accepts GetRouteTablesRouteTableArgs and GetRouteTablesRouteTableOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableInput` via:
//
//	GetRouteTablesRouteTableArgs{...}
type GetRouteTablesRouteTableInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput
	ToGetRouteTablesRouteTableOutputWithContext(context.Context) GetRouteTablesRouteTableOutput
}

type GetRouteTablesRouteTableArgs struct {
	// The account id of the route table creator.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The create time of the route table.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the route table.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the route table.
	Id pulumi.StringInput `pulumi:"id"`
	// The ProjectName of the route table.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The id of the route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// A name of route table.
	RouteTableName pulumi.StringInput `pulumi:"routeTableName"`
	// The type of the route table.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
	// The list of the subnet ids to which the entry table associates.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Tags.
	Tags GetRouteTablesRouteTableTagArrayInput `pulumi:"tags"`
	// The last update time of the route table.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// An id of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the route entry belongs.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (GetRouteTablesRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTable)(nil)).Elem()
}

func (i GetRouteTablesRouteTableArgs) ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput {
	return i.ToGetRouteTablesRouteTableOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableArgs) ToGetRouteTablesRouteTableOutputWithContext(ctx context.Context) GetRouteTablesRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableOutput)
}

// GetRouteTablesRouteTableArrayInput is an input type that accepts GetRouteTablesRouteTableArray and GetRouteTablesRouteTableArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableArrayInput` via:
//
//	GetRouteTablesRouteTableArray{ GetRouteTablesRouteTableArgs{...} }
type GetRouteTablesRouteTableArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput
	ToGetRouteTablesRouteTableArrayOutputWithContext(context.Context) GetRouteTablesRouteTableArrayOutput
}

type GetRouteTablesRouteTableArray []GetRouteTablesRouteTableInput

func (GetRouteTablesRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTable)(nil)).Elem()
}

func (i GetRouteTablesRouteTableArray) ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput {
	return i.ToGetRouteTablesRouteTableArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableArray) ToGetRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableArrayOutput)
}

type GetRouteTablesRouteTableOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTable)(nil)).Elem()
}

func (o GetRouteTablesRouteTableOutput) ToGetRouteTablesRouteTableOutput() GetRouteTablesRouteTableOutput {
	return o
}

func (o GetRouteTablesRouteTableOutput) ToGetRouteTablesRouteTableOutputWithContext(ctx context.Context) GetRouteTablesRouteTableOutput {
	return o
}

// The account id of the route table creator.
func (o GetRouteTablesRouteTableOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.AccountId }).(pulumi.StringOutput)
}

// The create time of the route table.
func (o GetRouteTablesRouteTableOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the route table.
func (o GetRouteTablesRouteTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the route table.
func (o GetRouteTablesRouteTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.Id }).(pulumi.StringOutput)
}

// The ProjectName of the route table.
func (o GetRouteTablesRouteTableOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The id of the route table.
func (o GetRouteTablesRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// A name of route table.
func (o GetRouteTablesRouteTableOutput) RouteTableName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.RouteTableName }).(pulumi.StringOutput)
}

// The type of the route table.
func (o GetRouteTablesRouteTableOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.RouteTableType }).(pulumi.StringOutput)
}

// The list of the subnet ids to which the entry table associates.
func (o GetRouteTablesRouteTableOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Tags.
func (o GetRouteTablesRouteTableOutput) Tags() GetRouteTablesRouteTableTagArrayOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) []GetRouteTablesRouteTableTag { return v.Tags }).(GetRouteTablesRouteTableTagArrayOutput)
}

// The last update time of the route table.
func (o GetRouteTablesRouteTableOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// An id of VPC.
func (o GetRouteTablesRouteTableOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the virtual private cloud (VPC) to which the route entry belongs.
func (o GetRouteTablesRouteTableOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTable) string { return v.VpcName }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTable)(nil)).Elem()
}

func (o GetRouteTablesRouteTableArrayOutput) ToGetRouteTablesRouteTableArrayOutput() GetRouteTablesRouteTableArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableArrayOutput) ToGetRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTable {
		return vs[0].([]GetRouteTablesRouteTable)[vs[1].(int)]
	}).(GetRouteTablesRouteTableOutput)
}

type GetRouteTablesRouteTableTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetRouteTablesRouteTableTagInput is an input type that accepts GetRouteTablesRouteTableTagArgs and GetRouteTablesRouteTableTagOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableTagInput` via:
//
//	GetRouteTablesRouteTableTagArgs{...}
type GetRouteTablesRouteTableTagInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableTagOutput() GetRouteTablesRouteTableTagOutput
	ToGetRouteTablesRouteTableTagOutputWithContext(context.Context) GetRouteTablesRouteTableTagOutput
}

type GetRouteTablesRouteTableTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRouteTablesRouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableTag)(nil)).Elem()
}

func (i GetRouteTablesRouteTableTagArgs) ToGetRouteTablesRouteTableTagOutput() GetRouteTablesRouteTableTagOutput {
	return i.ToGetRouteTablesRouteTableTagOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableTagArgs) ToGetRouteTablesRouteTableTagOutputWithContext(ctx context.Context) GetRouteTablesRouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableTagOutput)
}

// GetRouteTablesRouteTableTagArrayInput is an input type that accepts GetRouteTablesRouteTableTagArray and GetRouteTablesRouteTableTagArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesRouteTableTagArrayInput` via:
//
//	GetRouteTablesRouteTableTagArray{ GetRouteTablesRouteTableTagArgs{...} }
type GetRouteTablesRouteTableTagArrayInput interface {
	pulumi.Input

	ToGetRouteTablesRouteTableTagArrayOutput() GetRouteTablesRouteTableTagArrayOutput
	ToGetRouteTablesRouteTableTagArrayOutputWithContext(context.Context) GetRouteTablesRouteTableTagArrayOutput
}

type GetRouteTablesRouteTableTagArray []GetRouteTablesRouteTableTagInput

func (GetRouteTablesRouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableTag)(nil)).Elem()
}

func (i GetRouteTablesRouteTableTagArray) ToGetRouteTablesRouteTableTagArrayOutput() GetRouteTablesRouteTableTagArrayOutput {
	return i.ToGetRouteTablesRouteTableTagArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesRouteTableTagArray) ToGetRouteTablesRouteTableTagArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesRouteTableTagArrayOutput)
}

type GetRouteTablesRouteTableTagOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesRouteTableTag)(nil)).Elem()
}

func (o GetRouteTablesRouteTableTagOutput) ToGetRouteTablesRouteTableTagOutput() GetRouteTablesRouteTableTagOutput {
	return o
}

func (o GetRouteTablesRouteTableTagOutput) ToGetRouteTablesRouteTableTagOutputWithContext(ctx context.Context) GetRouteTablesRouteTableTagOutput {
	return o
}

// The Key of Tags.
func (o GetRouteTablesRouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetRouteTablesRouteTableTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesRouteTableTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetRouteTablesRouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesRouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesRouteTableTag)(nil)).Elem()
}

func (o GetRouteTablesRouteTableTagArrayOutput) ToGetRouteTablesRouteTableTagArrayOutput() GetRouteTablesRouteTableTagArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableTagArrayOutput) ToGetRouteTablesRouteTableTagArrayOutputWithContext(ctx context.Context) GetRouteTablesRouteTableTagArrayOutput {
	return o
}

func (o GetRouteTablesRouteTableTagArrayOutput) Index(i pulumi.IntInput) GetRouteTablesRouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesRouteTableTag {
		return vs[0].([]GetRouteTablesRouteTableTag)[vs[1].(int)]
	}).(GetRouteTablesRouteTableTagOutput)
}

type GetRouteTablesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetRouteTablesTagInput is an input type that accepts GetRouteTablesTagArgs and GetRouteTablesTagOutput values.
// You can construct a concrete instance of `GetRouteTablesTagInput` via:
//
//	GetRouteTablesTagArgs{...}
type GetRouteTablesTagInput interface {
	pulumi.Input

	ToGetRouteTablesTagOutput() GetRouteTablesTagOutput
	ToGetRouteTablesTagOutputWithContext(context.Context) GetRouteTablesTagOutput
}

type GetRouteTablesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRouteTablesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesTag)(nil)).Elem()
}

func (i GetRouteTablesTagArgs) ToGetRouteTablesTagOutput() GetRouteTablesTagOutput {
	return i.ToGetRouteTablesTagOutputWithContext(context.Background())
}

func (i GetRouteTablesTagArgs) ToGetRouteTablesTagOutputWithContext(ctx context.Context) GetRouteTablesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesTagOutput)
}

// GetRouteTablesTagArrayInput is an input type that accepts GetRouteTablesTagArray and GetRouteTablesTagArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesTagArrayInput` via:
//
//	GetRouteTablesTagArray{ GetRouteTablesTagArgs{...} }
type GetRouteTablesTagArrayInput interface {
	pulumi.Input

	ToGetRouteTablesTagArrayOutput() GetRouteTablesTagArrayOutput
	ToGetRouteTablesTagArrayOutputWithContext(context.Context) GetRouteTablesTagArrayOutput
}

type GetRouteTablesTagArray []GetRouteTablesTagInput

func (GetRouteTablesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesTag)(nil)).Elem()
}

func (i GetRouteTablesTagArray) ToGetRouteTablesTagArrayOutput() GetRouteTablesTagArrayOutput {
	return i.ToGetRouteTablesTagArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesTagArray) ToGetRouteTablesTagArrayOutputWithContext(ctx context.Context) GetRouteTablesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesTagArrayOutput)
}

type GetRouteTablesTagOutput struct{ *pulumi.OutputState }

func (GetRouteTablesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesTag)(nil)).Elem()
}

func (o GetRouteTablesTagOutput) ToGetRouteTablesTagOutput() GetRouteTablesTagOutput {
	return o
}

func (o GetRouteTablesTagOutput) ToGetRouteTablesTagOutputWithContext(ctx context.Context) GetRouteTablesTagOutput {
	return o
}

// The Key of Tags.
func (o GetRouteTablesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetRouteTablesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetRouteTablesTagArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesTag)(nil)).Elem()
}

func (o GetRouteTablesTagArrayOutput) ToGetRouteTablesTagArrayOutput() GetRouteTablesTagArrayOutput {
	return o
}

func (o GetRouteTablesTagArrayOutput) ToGetRouteTablesTagArrayOutputWithContext(ctx context.Context) GetRouteTablesTagArrayOutput {
	return o
}

func (o GetRouteTablesTagArrayOutput) Index(i pulumi.IntInput) GetRouteTablesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesTag {
		return vs[0].([]GetRouteTablesTag)[vs[1].(int)]
	}).(GetRouteTablesTagOutput)
}

type GetSecurityGroupRulesSecurityGroupRule struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp string `pulumi:"cidrIp"`
	// The creation time of security group rule.
	CreationTime string `pulumi:"creationTime"`
	// description of a group rule.
	Description string `pulumi:"description"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction string `pulumi:"direction"`
	// Access strategy.
	Policy string `pulumi:"policy"`
	// Port end of egress/ingress Rule.
	PortEnd int `pulumi:"portEnd"`
	// Port start of egress/ingress Rule.
	PortStart int `pulumi:"portStart"`
	// Priority of a security group rule.
	Priority int `pulumi:"priority"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol string `pulumi:"protocol"`
	// SecurityGroup ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId string `pulumi:"sourceGroupId"`
	// The update time of security group rule.
	UpdateTime string `pulumi:"updateTime"`
}

// GetSecurityGroupRulesSecurityGroupRuleInput is an input type that accepts GetSecurityGroupRulesSecurityGroupRuleArgs and GetSecurityGroupRulesSecurityGroupRuleOutput values.
// You can construct a concrete instance of `GetSecurityGroupRulesSecurityGroupRuleInput` via:
//
//	GetSecurityGroupRulesSecurityGroupRuleArgs{...}
type GetSecurityGroupRulesSecurityGroupRuleInput interface {
	pulumi.Input

	ToGetSecurityGroupRulesSecurityGroupRuleOutput() GetSecurityGroupRulesSecurityGroupRuleOutput
	ToGetSecurityGroupRulesSecurityGroupRuleOutputWithContext(context.Context) GetSecurityGroupRulesSecurityGroupRuleOutput
}

type GetSecurityGroupRulesSecurityGroupRuleArgs struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The creation time of security group rule.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// description of a group rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction pulumi.StringInput `pulumi:"direction"`
	// Access strategy.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Port end of egress/ingress Rule.
	PortEnd pulumi.IntInput `pulumi:"portEnd"`
	// Port start of egress/ingress Rule.
	PortStart pulumi.IntInput `pulumi:"portStart"`
	// Priority of a security group rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// SecurityGroup ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId pulumi.StringInput `pulumi:"sourceGroupId"`
	// The update time of security group rule.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetSecurityGroupRulesSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (i GetSecurityGroupRulesSecurityGroupRuleArgs) ToGetSecurityGroupRulesSecurityGroupRuleOutput() GetSecurityGroupRulesSecurityGroupRuleOutput {
	return i.ToGetSecurityGroupRulesSecurityGroupRuleOutputWithContext(context.Background())
}

func (i GetSecurityGroupRulesSecurityGroupRuleArgs) ToGetSecurityGroupRulesSecurityGroupRuleOutputWithContext(ctx context.Context) GetSecurityGroupRulesSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupRulesSecurityGroupRuleOutput)
}

// GetSecurityGroupRulesSecurityGroupRuleArrayInput is an input type that accepts GetSecurityGroupRulesSecurityGroupRuleArray and GetSecurityGroupRulesSecurityGroupRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupRulesSecurityGroupRuleArrayInput` via:
//
//	GetSecurityGroupRulesSecurityGroupRuleArray{ GetSecurityGroupRulesSecurityGroupRuleArgs{...} }
type GetSecurityGroupRulesSecurityGroupRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupRulesSecurityGroupRuleArrayOutput() GetSecurityGroupRulesSecurityGroupRuleArrayOutput
	ToGetSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(context.Context) GetSecurityGroupRulesSecurityGroupRuleArrayOutput
}

type GetSecurityGroupRulesSecurityGroupRuleArray []GetSecurityGroupRulesSecurityGroupRuleInput

func (GetSecurityGroupRulesSecurityGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (i GetSecurityGroupRulesSecurityGroupRuleArray) ToGetSecurityGroupRulesSecurityGroupRuleArrayOutput() GetSecurityGroupRulesSecurityGroupRuleArrayOutput {
	return i.ToGetSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupRulesSecurityGroupRuleArray) ToGetSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupRulesSecurityGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupRulesSecurityGroupRuleArrayOutput)
}

type GetSecurityGroupRulesSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupRulesSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (o GetSecurityGroupRulesSecurityGroupRuleOutput) ToGetSecurityGroupRulesSecurityGroupRuleOutput() GetSecurityGroupRulesSecurityGroupRuleOutput {
	return o
}

func (o GetSecurityGroupRulesSecurityGroupRuleOutput) ToGetSecurityGroupRulesSecurityGroupRuleOutputWithContext(ctx context.Context) GetSecurityGroupRulesSecurityGroupRuleOutput {
	return o
}

// Cidr ip of egress/ingress Rule.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The creation time of security group rule.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.CreationTime }).(pulumi.StringOutput)
}

// description of a group rule.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.Description }).(pulumi.StringOutput)
}

// Direction of rule, ingress (inbound) or egress (outbound).
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Access strategy.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.Policy }).(pulumi.StringOutput)
}

// Port end of egress/ingress Rule.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) PortEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) int { return v.PortEnd }).(pulumi.IntOutput)
}

// Port start of egress/ingress Rule.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) PortStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) int { return v.PortStart }).(pulumi.IntOutput)
}

// Priority of a security group rule.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// SecurityGroup ID.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// ID of the source security group whose access permission you want to set.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) SourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.SourceGroupId }).(pulumi.StringOutput)
}

// The update time of security group rule.
func (o GetSecurityGroupRulesSecurityGroupRuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesSecurityGroupRule) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetSecurityGroupRulesSecurityGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupRulesSecurityGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (o GetSecurityGroupRulesSecurityGroupRuleArrayOutput) ToGetSecurityGroupRulesSecurityGroupRuleArrayOutput() GetSecurityGroupRulesSecurityGroupRuleArrayOutput {
	return o
}

func (o GetSecurityGroupRulesSecurityGroupRuleArrayOutput) ToGetSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(ctx context.Context) GetSecurityGroupRulesSecurityGroupRuleArrayOutput {
	return o
}

func (o GetSecurityGroupRulesSecurityGroupRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupRulesSecurityGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupRulesSecurityGroupRule {
		return vs[0].([]GetSecurityGroupRulesSecurityGroupRule)[vs[1].(int)]
	}).(GetSecurityGroupRulesSecurityGroupRuleOutput)
}

type GetSecurityGroupsSecurityGroup struct {
	// The creation time of SecurityGroup.
	CreationTime string `pulumi:"creationTime"`
	// The description of SecurityGroup.
	Description string `pulumi:"description"`
	// The ID of SecurityGroup.
	Id string `pulumi:"id"`
	// The ProjectName of SecurityGroup.
	ProjectName string `pulumi:"projectName"`
	// The ID of SecurityGroup.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The Name of SecurityGroup.
	SecurityGroupName string `pulumi:"securityGroupName"`
	// The Status of SecurityGroup.
	Status string `pulumi:"status"`
	// Tags.
	Tags []GetSecurityGroupsSecurityGroupTag `pulumi:"tags"`
	// A Name Regex of SecurityGroup.
	Type string `pulumi:"type"`
	// The ID of vpc where security group is located.
	VpcId string `pulumi:"vpcId"`
}

// GetSecurityGroupsSecurityGroupInput is an input type that accepts GetSecurityGroupsSecurityGroupArgs and GetSecurityGroupsSecurityGroupOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupInput` via:
//
//	GetSecurityGroupsSecurityGroupArgs{...}
type GetSecurityGroupsSecurityGroupInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupOutput() GetSecurityGroupsSecurityGroupOutput
	ToGetSecurityGroupsSecurityGroupOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupOutput
}

type GetSecurityGroupsSecurityGroupArgs struct {
	// The creation time of SecurityGroup.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of SecurityGroup.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of SecurityGroup.
	Id pulumi.StringInput `pulumi:"id"`
	// The ProjectName of SecurityGroup.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The ID of SecurityGroup.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The Name of SecurityGroup.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
	// The Status of SecurityGroup.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags GetSecurityGroupsSecurityGroupTagArrayInput `pulumi:"tags"`
	// A Name Regex of SecurityGroup.
	Type pulumi.StringInput `pulumi:"type"`
	// The ID of vpc where security group is located.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetSecurityGroupsSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroup)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupArgs) ToGetSecurityGroupsSecurityGroupOutput() GetSecurityGroupsSecurityGroupOutput {
	return i.ToGetSecurityGroupsSecurityGroupOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupArgs) ToGetSecurityGroupsSecurityGroupOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupOutput)
}

// GetSecurityGroupsSecurityGroupArrayInput is an input type that accepts GetSecurityGroupsSecurityGroupArray and GetSecurityGroupsSecurityGroupArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupArrayInput` via:
//
//	GetSecurityGroupsSecurityGroupArray{ GetSecurityGroupsSecurityGroupArgs{...} }
type GetSecurityGroupsSecurityGroupArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupArrayOutput() GetSecurityGroupsSecurityGroupArrayOutput
	ToGetSecurityGroupsSecurityGroupArrayOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupArrayOutput
}

type GetSecurityGroupsSecurityGroupArray []GetSecurityGroupsSecurityGroupInput

func (GetSecurityGroupsSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroup)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupArray) ToGetSecurityGroupsSecurityGroupArrayOutput() GetSecurityGroupsSecurityGroupArrayOutput {
	return i.ToGetSecurityGroupsSecurityGroupArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupArray) ToGetSecurityGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupArrayOutput)
}

type GetSecurityGroupsSecurityGroupOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroup)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupOutput) ToGetSecurityGroupsSecurityGroupOutput() GetSecurityGroupsSecurityGroupOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupOutput) ToGetSecurityGroupsSecurityGroupOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupOutput {
	return o
}

// The creation time of SecurityGroup.
func (o GetSecurityGroupsSecurityGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of SecurityGroup.
func (o GetSecurityGroupsSecurityGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of SecurityGroup.
func (o GetSecurityGroupsSecurityGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The ProjectName of SecurityGroup.
func (o GetSecurityGroupsSecurityGroupOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The ID of SecurityGroup.
func (o GetSecurityGroupsSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The Name of SecurityGroup.
func (o GetSecurityGroupsSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

// The Status of SecurityGroup.
func (o GetSecurityGroupsSecurityGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o GetSecurityGroupsSecurityGroupOutput) Tags() GetSecurityGroupsSecurityGroupTagArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) []GetSecurityGroupsSecurityGroupTag { return v.Tags }).(GetSecurityGroupsSecurityGroupTagArrayOutput)
}

// A Name Regex of SecurityGroup.
func (o GetSecurityGroupsSecurityGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.Type }).(pulumi.StringOutput)
}

// The ID of vpc where security group is located.
func (o GetSecurityGroupsSecurityGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetSecurityGroupsSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroup)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupArrayOutput) ToGetSecurityGroupsSecurityGroupArrayOutput() GetSecurityGroupsSecurityGroupArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupArrayOutput) ToGetSecurityGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsSecurityGroup {
		return vs[0].([]GetSecurityGroupsSecurityGroup)[vs[1].(int)]
	}).(GetSecurityGroupsSecurityGroupOutput)
}

type GetSecurityGroupsSecurityGroupTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetSecurityGroupsSecurityGroupTagInput is an input type that accepts GetSecurityGroupsSecurityGroupTagArgs and GetSecurityGroupsSecurityGroupTagOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupTagInput` via:
//
//	GetSecurityGroupsSecurityGroupTagArgs{...}
type GetSecurityGroupsSecurityGroupTagInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupTagOutput() GetSecurityGroupsSecurityGroupTagOutput
	ToGetSecurityGroupsSecurityGroupTagOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupTagOutput
}

type GetSecurityGroupsSecurityGroupTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSecurityGroupsSecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupTagArgs) ToGetSecurityGroupsSecurityGroupTagOutput() GetSecurityGroupsSecurityGroupTagOutput {
	return i.ToGetSecurityGroupsSecurityGroupTagOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupTagArgs) ToGetSecurityGroupsSecurityGroupTagOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupTagOutput)
}

// GetSecurityGroupsSecurityGroupTagArrayInput is an input type that accepts GetSecurityGroupsSecurityGroupTagArray and GetSecurityGroupsSecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsSecurityGroupTagArrayInput` via:
//
//	GetSecurityGroupsSecurityGroupTagArray{ GetSecurityGroupsSecurityGroupTagArgs{...} }
type GetSecurityGroupsSecurityGroupTagArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsSecurityGroupTagArrayOutput() GetSecurityGroupsSecurityGroupTagArrayOutput
	ToGetSecurityGroupsSecurityGroupTagArrayOutputWithContext(context.Context) GetSecurityGroupsSecurityGroupTagArrayOutput
}

type GetSecurityGroupsSecurityGroupTagArray []GetSecurityGroupsSecurityGroupTagInput

func (GetSecurityGroupsSecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (i GetSecurityGroupsSecurityGroupTagArray) ToGetSecurityGroupsSecurityGroupTagArrayOutput() GetSecurityGroupsSecurityGroupTagArrayOutput {
	return i.ToGetSecurityGroupsSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsSecurityGroupTagArray) ToGetSecurityGroupsSecurityGroupTagArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsSecurityGroupTagArrayOutput)
}

type GetSecurityGroupsSecurityGroupTagOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupTagOutput) ToGetSecurityGroupsSecurityGroupTagOutput() GetSecurityGroupsSecurityGroupTagOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupTagOutput) ToGetSecurityGroupsSecurityGroupTagOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupTagOutput {
	return o
}

// The Key of Tags.
func (o GetSecurityGroupsSecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetSecurityGroupsSecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsSecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSecurityGroupsSecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsSecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (o GetSecurityGroupsSecurityGroupTagArrayOutput) ToGetSecurityGroupsSecurityGroupTagArrayOutput() GetSecurityGroupsSecurityGroupTagArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupTagArrayOutput) ToGetSecurityGroupsSecurityGroupTagArrayOutputWithContext(ctx context.Context) GetSecurityGroupsSecurityGroupTagArrayOutput {
	return o
}

func (o GetSecurityGroupsSecurityGroupTagArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsSecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsSecurityGroupTag {
		return vs[0].([]GetSecurityGroupsSecurityGroupTag)[vs[1].(int)]
	}).(GetSecurityGroupsSecurityGroupTagOutput)
}

type GetSecurityGroupsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetSecurityGroupsTagInput is an input type that accepts GetSecurityGroupsTagArgs and GetSecurityGroupsTagOutput values.
// You can construct a concrete instance of `GetSecurityGroupsTagInput` via:
//
//	GetSecurityGroupsTagArgs{...}
type GetSecurityGroupsTagInput interface {
	pulumi.Input

	ToGetSecurityGroupsTagOutput() GetSecurityGroupsTagOutput
	ToGetSecurityGroupsTagOutputWithContext(context.Context) GetSecurityGroupsTagOutput
}

type GetSecurityGroupsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSecurityGroupsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsTag)(nil)).Elem()
}

func (i GetSecurityGroupsTagArgs) ToGetSecurityGroupsTagOutput() GetSecurityGroupsTagOutput {
	return i.ToGetSecurityGroupsTagOutputWithContext(context.Background())
}

func (i GetSecurityGroupsTagArgs) ToGetSecurityGroupsTagOutputWithContext(ctx context.Context) GetSecurityGroupsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsTagOutput)
}

// GetSecurityGroupsTagArrayInput is an input type that accepts GetSecurityGroupsTagArray and GetSecurityGroupsTagArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsTagArrayInput` via:
//
//	GetSecurityGroupsTagArray{ GetSecurityGroupsTagArgs{...} }
type GetSecurityGroupsTagArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsTagArrayOutput() GetSecurityGroupsTagArrayOutput
	ToGetSecurityGroupsTagArrayOutputWithContext(context.Context) GetSecurityGroupsTagArrayOutput
}

type GetSecurityGroupsTagArray []GetSecurityGroupsTagInput

func (GetSecurityGroupsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsTag)(nil)).Elem()
}

func (i GetSecurityGroupsTagArray) ToGetSecurityGroupsTagArrayOutput() GetSecurityGroupsTagArrayOutput {
	return i.ToGetSecurityGroupsTagArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsTagArray) ToGetSecurityGroupsTagArrayOutputWithContext(ctx context.Context) GetSecurityGroupsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsTagArrayOutput)
}

type GetSecurityGroupsTagOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsTag)(nil)).Elem()
}

func (o GetSecurityGroupsTagOutput) ToGetSecurityGroupsTagOutput() GetSecurityGroupsTagOutput {
	return o
}

func (o GetSecurityGroupsTagOutput) ToGetSecurityGroupsTagOutputWithContext(ctx context.Context) GetSecurityGroupsTagOutput {
	return o
}

// The Key of Tags.
func (o GetSecurityGroupsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetSecurityGroupsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSecurityGroupsTagArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsTag)(nil)).Elem()
}

func (o GetSecurityGroupsTagArrayOutput) ToGetSecurityGroupsTagArrayOutput() GetSecurityGroupsTagArrayOutput {
	return o
}

func (o GetSecurityGroupsTagArrayOutput) ToGetSecurityGroupsTagArrayOutputWithContext(ctx context.Context) GetSecurityGroupsTagArrayOutput {
	return o
}

func (o GetSecurityGroupsTagArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsTag {
		return vs[0].([]GetSecurityGroupsTag)[vs[1].(int)]
	}).(GetSecurityGroupsTagOutput)
}

type GetSubnetsSubnet struct {
	// The account ID which the subnet belongs to.
	AccountId string `pulumi:"accountId"`
	// The count of available ip address.
	AvailableIpAddressCount int `pulumi:"availableIpAddressCount"`
	// The cidr block of Subnet.
	CidrBlock string `pulumi:"cidrBlock"`
	// Creation time of Subnet.
	CreationTime string `pulumi:"creationTime"`
	// The description of Subnet.
	Description string `pulumi:"description"`
	// The ID of Subnet.
	Id string `pulumi:"id"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The ID of network acl which this subnet associate with.
	NetworkAclId string `pulumi:"networkAclId"`
	// The route table information.
	RouteTable GetSubnetsSubnetRouteTable `pulumi:"routeTable"`
	// The ID of route table which subnet associated with.
	RouteTableId string `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType string `pulumi:"routeTableType"`
	// The Status of Subnet.
	Status string `pulumi:"status"`
	// The subnet name to query.
	SubnetName string `pulumi:"subnetName"`
	// Tags.
	Tags []GetSubnetsSubnetTag `pulumi:"tags"`
	// The Count of ipv4.
	TotalIpv4Count int `pulumi:"totalIpv4Count"`
	// Update time of Subnet.
	UpdateTime string `pulumi:"updateTime"`
	// The ID of VPC which subnet belongs to.
	VpcId string `pulumi:"vpcId"`
	// The ID of zone which subnet belongs to.
	ZoneId string `pulumi:"zoneId"`
}

// GetSubnetsSubnetInput is an input type that accepts GetSubnetsSubnetArgs and GetSubnetsSubnetOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetInput` via:
//
//	GetSubnetsSubnetArgs{...}
type GetSubnetsSubnetInput interface {
	pulumi.Input

	ToGetSubnetsSubnetOutput() GetSubnetsSubnetOutput
	ToGetSubnetsSubnetOutputWithContext(context.Context) GetSubnetsSubnetOutput
}

type GetSubnetsSubnetArgs struct {
	// The account ID which the subnet belongs to.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The count of available ip address.
	AvailableIpAddressCount pulumi.IntInput `pulumi:"availableIpAddressCount"`
	// The cidr block of Subnet.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Creation time of Subnet.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of Subnet.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of Subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The ID of network acl which this subnet associate with.
	NetworkAclId pulumi.StringInput `pulumi:"networkAclId"`
	// The route table information.
	RouteTable GetSubnetsSubnetRouteTableInput `pulumi:"routeTable"`
	// The ID of route table which subnet associated with.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
	// The Status of Subnet.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet name to query.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
	// Tags.
	Tags GetSubnetsSubnetTagArrayInput `pulumi:"tags"`
	// The Count of ipv4.
	TotalIpv4Count pulumi.IntInput `pulumi:"totalIpv4Count"`
	// Update time of Subnet.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The ID of VPC which subnet belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of zone which subnet belongs to.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetSubnetsSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnet)(nil)).Elem()
}

func (i GetSubnetsSubnetArgs) ToGetSubnetsSubnetOutput() GetSubnetsSubnetOutput {
	return i.ToGetSubnetsSubnetOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetArgs) ToGetSubnetsSubnetOutputWithContext(ctx context.Context) GetSubnetsSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetOutput)
}

// GetSubnetsSubnetArrayInput is an input type that accepts GetSubnetsSubnetArray and GetSubnetsSubnetArrayOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetArrayInput` via:
//
//	GetSubnetsSubnetArray{ GetSubnetsSubnetArgs{...} }
type GetSubnetsSubnetArrayInput interface {
	pulumi.Input

	ToGetSubnetsSubnetArrayOutput() GetSubnetsSubnetArrayOutput
	ToGetSubnetsSubnetArrayOutputWithContext(context.Context) GetSubnetsSubnetArrayOutput
}

type GetSubnetsSubnetArray []GetSubnetsSubnetInput

func (GetSubnetsSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsSubnet)(nil)).Elem()
}

func (i GetSubnetsSubnetArray) ToGetSubnetsSubnetArrayOutput() GetSubnetsSubnetArrayOutput {
	return i.ToGetSubnetsSubnetArrayOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetArray) ToGetSubnetsSubnetArrayOutputWithContext(ctx context.Context) GetSubnetsSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetArrayOutput)
}

type GetSubnetsSubnetOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnet)(nil)).Elem()
}

func (o GetSubnetsSubnetOutput) ToGetSubnetsSubnetOutput() GetSubnetsSubnetOutput {
	return o
}

func (o GetSubnetsSubnetOutput) ToGetSubnetsSubnetOutputWithContext(ctx context.Context) GetSubnetsSubnetOutput {
	return o
}

// The account ID which the subnet belongs to.
func (o GetSubnetsSubnetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The count of available ip address.
func (o GetSubnetsSubnetOutput) AvailableIpAddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) int { return v.AvailableIpAddressCount }).(pulumi.IntOutput)
}

// The cidr block of Subnet.
func (o GetSubnetsSubnetOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Creation time of Subnet.
func (o GetSubnetsSubnetOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of Subnet.
func (o GetSubnetsSubnetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of Subnet.
func (o GetSubnetsSubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 CIDR block of the VPC.
func (o GetSubnetsSubnetOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The ID of network acl which this subnet associate with.
func (o GetSubnetsSubnetOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// The route table information.
func (o GetSubnetsSubnetOutput) RouteTable() GetSubnetsSubnetRouteTableOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) GetSubnetsSubnetRouteTable { return v.RouteTable }).(GetSubnetsSubnetRouteTableOutput)
}

// The ID of route table which subnet associated with.
func (o GetSubnetsSubnetOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The route table type.
func (o GetSubnetsSubnetOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.RouteTableType }).(pulumi.StringOutput)
}

// The Status of Subnet.
func (o GetSubnetsSubnetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet name to query.
func (o GetSubnetsSubnetOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.SubnetName }).(pulumi.StringOutput)
}

// Tags.
func (o GetSubnetsSubnetOutput) Tags() GetSubnetsSubnetTagArrayOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) []GetSubnetsSubnetTag { return v.Tags }).(GetSubnetsSubnetTagArrayOutput)
}

// The Count of ipv4.
func (o GetSubnetsSubnetOutput) TotalIpv4Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) int { return v.TotalIpv4Count }).(pulumi.IntOutput)
}

// Update time of Subnet.
func (o GetSubnetsSubnetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The ID of VPC which subnet belongs to.
func (o GetSubnetsSubnetOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of zone which subnet belongs to.
func (o GetSubnetsSubnetOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnet) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetSubnetsSubnetArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsSubnet)(nil)).Elem()
}

func (o GetSubnetsSubnetArrayOutput) ToGetSubnetsSubnetArrayOutput() GetSubnetsSubnetArrayOutput {
	return o
}

func (o GetSubnetsSubnetArrayOutput) ToGetSubnetsSubnetArrayOutputWithContext(ctx context.Context) GetSubnetsSubnetArrayOutput {
	return o
}

func (o GetSubnetsSubnetArrayOutput) Index(i pulumi.IntInput) GetSubnetsSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetsSubnet {
		return vs[0].([]GetSubnetsSubnet)[vs[1].(int)]
	}).(GetSubnetsSubnetOutput)
}

type GetSubnetsSubnetRouteTable struct {
	// The ID of route table which subnet associated with.
	RouteTableId string `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType string `pulumi:"routeTableType"`
}

// GetSubnetsSubnetRouteTableInput is an input type that accepts GetSubnetsSubnetRouteTableArgs and GetSubnetsSubnetRouteTableOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetRouteTableInput` via:
//
//	GetSubnetsSubnetRouteTableArgs{...}
type GetSubnetsSubnetRouteTableInput interface {
	pulumi.Input

	ToGetSubnetsSubnetRouteTableOutput() GetSubnetsSubnetRouteTableOutput
	ToGetSubnetsSubnetRouteTableOutputWithContext(context.Context) GetSubnetsSubnetRouteTableOutput
}

type GetSubnetsSubnetRouteTableArgs struct {
	// The ID of route table which subnet associated with.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
}

func (GetSubnetsSubnetRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnetRouteTable)(nil)).Elem()
}

func (i GetSubnetsSubnetRouteTableArgs) ToGetSubnetsSubnetRouteTableOutput() GetSubnetsSubnetRouteTableOutput {
	return i.ToGetSubnetsSubnetRouteTableOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetRouteTableArgs) ToGetSubnetsSubnetRouteTableOutputWithContext(ctx context.Context) GetSubnetsSubnetRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetRouteTableOutput)
}

type GetSubnetsSubnetRouteTableOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnetRouteTable)(nil)).Elem()
}

func (o GetSubnetsSubnetRouteTableOutput) ToGetSubnetsSubnetRouteTableOutput() GetSubnetsSubnetRouteTableOutput {
	return o
}

func (o GetSubnetsSubnetRouteTableOutput) ToGetSubnetsSubnetRouteTableOutputWithContext(ctx context.Context) GetSubnetsSubnetRouteTableOutput {
	return o
}

// The ID of route table which subnet associated with.
func (o GetSubnetsSubnetRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnetRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The route table type.
func (o GetSubnetsSubnetRouteTableOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnetRouteTable) string { return v.RouteTableType }).(pulumi.StringOutput)
}

type GetSubnetsSubnetTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetSubnetsSubnetTagInput is an input type that accepts GetSubnetsSubnetTagArgs and GetSubnetsSubnetTagOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetTagInput` via:
//
//	GetSubnetsSubnetTagArgs{...}
type GetSubnetsSubnetTagInput interface {
	pulumi.Input

	ToGetSubnetsSubnetTagOutput() GetSubnetsSubnetTagOutput
	ToGetSubnetsSubnetTagOutputWithContext(context.Context) GetSubnetsSubnetTagOutput
}

type GetSubnetsSubnetTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSubnetsSubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnetTag)(nil)).Elem()
}

func (i GetSubnetsSubnetTagArgs) ToGetSubnetsSubnetTagOutput() GetSubnetsSubnetTagOutput {
	return i.ToGetSubnetsSubnetTagOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetTagArgs) ToGetSubnetsSubnetTagOutputWithContext(ctx context.Context) GetSubnetsSubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetTagOutput)
}

// GetSubnetsSubnetTagArrayInput is an input type that accepts GetSubnetsSubnetTagArray and GetSubnetsSubnetTagArrayOutput values.
// You can construct a concrete instance of `GetSubnetsSubnetTagArrayInput` via:
//
//	GetSubnetsSubnetTagArray{ GetSubnetsSubnetTagArgs{...} }
type GetSubnetsSubnetTagArrayInput interface {
	pulumi.Input

	ToGetSubnetsSubnetTagArrayOutput() GetSubnetsSubnetTagArrayOutput
	ToGetSubnetsSubnetTagArrayOutputWithContext(context.Context) GetSubnetsSubnetTagArrayOutput
}

type GetSubnetsSubnetTagArray []GetSubnetsSubnetTagInput

func (GetSubnetsSubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsSubnetTag)(nil)).Elem()
}

func (i GetSubnetsSubnetTagArray) ToGetSubnetsSubnetTagArrayOutput() GetSubnetsSubnetTagArrayOutput {
	return i.ToGetSubnetsSubnetTagArrayOutputWithContext(context.Background())
}

func (i GetSubnetsSubnetTagArray) ToGetSubnetsSubnetTagArrayOutputWithContext(ctx context.Context) GetSubnetsSubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsSubnetTagArrayOutput)
}

type GetSubnetsSubnetTagOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsSubnetTag)(nil)).Elem()
}

func (o GetSubnetsSubnetTagOutput) ToGetSubnetsSubnetTagOutput() GetSubnetsSubnetTagOutput {
	return o
}

func (o GetSubnetsSubnetTagOutput) ToGetSubnetsSubnetTagOutputWithContext(ctx context.Context) GetSubnetsSubnetTagOutput {
	return o
}

// The Key of Tags.
func (o GetSubnetsSubnetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetSubnetsSubnetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsSubnetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSubnetsSubnetTagArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetsSubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsSubnetTag)(nil)).Elem()
}

func (o GetSubnetsSubnetTagArrayOutput) ToGetSubnetsSubnetTagArrayOutput() GetSubnetsSubnetTagArrayOutput {
	return o
}

func (o GetSubnetsSubnetTagArrayOutput) ToGetSubnetsSubnetTagArrayOutputWithContext(ctx context.Context) GetSubnetsSubnetTagArrayOutput {
	return o
}

func (o GetSubnetsSubnetTagArrayOutput) Index(i pulumi.IntInput) GetSubnetsSubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetsSubnetTag {
		return vs[0].([]GetSubnetsSubnetTag)[vs[1].(int)]
	}).(GetSubnetsSubnetTagOutput)
}

type GetSubnetsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetSubnetsTagInput is an input type that accepts GetSubnetsTagArgs and GetSubnetsTagOutput values.
// You can construct a concrete instance of `GetSubnetsTagInput` via:
//
//	GetSubnetsTagArgs{...}
type GetSubnetsTagInput interface {
	pulumi.Input

	ToGetSubnetsTagOutput() GetSubnetsTagOutput
	ToGetSubnetsTagOutputWithContext(context.Context) GetSubnetsTagOutput
}

type GetSubnetsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetSubnetsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsTag)(nil)).Elem()
}

func (i GetSubnetsTagArgs) ToGetSubnetsTagOutput() GetSubnetsTagOutput {
	return i.ToGetSubnetsTagOutputWithContext(context.Background())
}

func (i GetSubnetsTagArgs) ToGetSubnetsTagOutputWithContext(ctx context.Context) GetSubnetsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsTagOutput)
}

// GetSubnetsTagArrayInput is an input type that accepts GetSubnetsTagArray and GetSubnetsTagArrayOutput values.
// You can construct a concrete instance of `GetSubnetsTagArrayInput` via:
//
//	GetSubnetsTagArray{ GetSubnetsTagArgs{...} }
type GetSubnetsTagArrayInput interface {
	pulumi.Input

	ToGetSubnetsTagArrayOutput() GetSubnetsTagArrayOutput
	ToGetSubnetsTagArrayOutputWithContext(context.Context) GetSubnetsTagArrayOutput
}

type GetSubnetsTagArray []GetSubnetsTagInput

func (GetSubnetsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsTag)(nil)).Elem()
}

func (i GetSubnetsTagArray) ToGetSubnetsTagArrayOutput() GetSubnetsTagArrayOutput {
	return i.ToGetSubnetsTagArrayOutputWithContext(context.Background())
}

func (i GetSubnetsTagArray) ToGetSubnetsTagArrayOutputWithContext(ctx context.Context) GetSubnetsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetsTagArrayOutput)
}

type GetSubnetsTagOutput struct{ *pulumi.OutputState }

func (GetSubnetsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsTag)(nil)).Elem()
}

func (o GetSubnetsTagOutput) ToGetSubnetsTagOutput() GetSubnetsTagOutput {
	return o
}

func (o GetSubnetsTagOutput) ToGetSubnetsTagOutputWithContext(ctx context.Context) GetSubnetsTagOutput {
	return o
}

// The Key of Tags.
func (o GetSubnetsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetSubnetsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetSubnetsTagArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetsTag)(nil)).Elem()
}

func (o GetSubnetsTagArrayOutput) ToGetSubnetsTagArrayOutput() GetSubnetsTagArrayOutput {
	return o
}

func (o GetSubnetsTagArrayOutput) ToGetSubnetsTagArrayOutputWithContext(ctx context.Context) GetSubnetsTagArrayOutput {
	return o
}

func (o GetSubnetsTagArrayOutput) Index(i pulumi.IntInput) GetSubnetsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetsTag {
		return vs[0].([]GetSubnetsTag)[vs[1].(int)]
	}).(GetSubnetsTagOutput)
}

type GetTrafficMirrorFilterRulesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetTrafficMirrorFilterRulesTagInput is an input type that accepts GetTrafficMirrorFilterRulesTagArgs and GetTrafficMirrorFilterRulesTagOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFilterRulesTagInput` via:
//
//	GetTrafficMirrorFilterRulesTagArgs{...}
type GetTrafficMirrorFilterRulesTagInput interface {
	pulumi.Input

	ToGetTrafficMirrorFilterRulesTagOutput() GetTrafficMirrorFilterRulesTagOutput
	ToGetTrafficMirrorFilterRulesTagOutputWithContext(context.Context) GetTrafficMirrorFilterRulesTagOutput
}

type GetTrafficMirrorFilterRulesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTrafficMirrorFilterRulesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterRulesTag)(nil)).Elem()
}

func (i GetTrafficMirrorFilterRulesTagArgs) ToGetTrafficMirrorFilterRulesTagOutput() GetTrafficMirrorFilterRulesTagOutput {
	return i.ToGetTrafficMirrorFilterRulesTagOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFilterRulesTagArgs) ToGetTrafficMirrorFilterRulesTagOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFilterRulesTagOutput)
}

// GetTrafficMirrorFilterRulesTagArrayInput is an input type that accepts GetTrafficMirrorFilterRulesTagArray and GetTrafficMirrorFilterRulesTagArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFilterRulesTagArrayInput` via:
//
//	GetTrafficMirrorFilterRulesTagArray{ GetTrafficMirrorFilterRulesTagArgs{...} }
type GetTrafficMirrorFilterRulesTagArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFilterRulesTagArrayOutput() GetTrafficMirrorFilterRulesTagArrayOutput
	ToGetTrafficMirrorFilterRulesTagArrayOutputWithContext(context.Context) GetTrafficMirrorFilterRulesTagArrayOutput
}

type GetTrafficMirrorFilterRulesTagArray []GetTrafficMirrorFilterRulesTagInput

func (GetTrafficMirrorFilterRulesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFilterRulesTag)(nil)).Elem()
}

func (i GetTrafficMirrorFilterRulesTagArray) ToGetTrafficMirrorFilterRulesTagArrayOutput() GetTrafficMirrorFilterRulesTagArrayOutput {
	return i.ToGetTrafficMirrorFilterRulesTagArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFilterRulesTagArray) ToGetTrafficMirrorFilterRulesTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFilterRulesTagArrayOutput)
}

type GetTrafficMirrorFilterRulesTagOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterRulesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterRulesTag)(nil)).Elem()
}

func (o GetTrafficMirrorFilterRulesTagOutput) ToGetTrafficMirrorFilterRulesTagOutput() GetTrafficMirrorFilterRulesTagOutput {
	return o
}

func (o GetTrafficMirrorFilterRulesTagOutput) ToGetTrafficMirrorFilterRulesTagOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesTagOutput {
	return o
}

// The Key of Tags.
func (o GetTrafficMirrorFilterRulesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetTrafficMirrorFilterRulesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTrafficMirrorFilterRulesTagArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterRulesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFilterRulesTag)(nil)).Elem()
}

func (o GetTrafficMirrorFilterRulesTagArrayOutput) ToGetTrafficMirrorFilterRulesTagArrayOutput() GetTrafficMirrorFilterRulesTagArrayOutput {
	return o
}

func (o GetTrafficMirrorFilterRulesTagArrayOutput) ToGetTrafficMirrorFilterRulesTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesTagArrayOutput {
	return o
}

func (o GetTrafficMirrorFilterRulesTagArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFilterRulesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFilterRulesTag {
		return vs[0].([]GetTrafficMirrorFilterRulesTag)[vs[1].(int)]
	}).(GetTrafficMirrorFilterRulesTagOutput)
}

type GetTrafficMirrorFilterRulesTrafficMirrorFilterRule struct {
	// The create time of traffic mirror filter rule.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description string `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange string `pulumi:"destinationPortRange"`
	// The ID of traffic mirror filter rule.
	Id string `pulumi:"id"`
	// The policy of traffic mirror filter rule.
	Policy string `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority int `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol string `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange string `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter rule.
	Status string `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection string `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId string `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter rule.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleInput is an input type that accepts GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs and GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleInput` via:
//
//	GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs{...}
type GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleInput interface {
	pulumi.Input

	ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput() GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput
	ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutputWithContext(context.Context) GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput
}

type GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs struct {
	// The create time of traffic mirror filter rule.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange pulumi.StringInput `pulumi:"destinationPortRange"`
	// The ID of traffic mirror filter rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The policy of traffic mirror filter rule.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange pulumi.StringInput `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter rule.
	Status pulumi.StringInput `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection pulumi.StringInput `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId pulumi.StringInput `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter rule.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterRulesTrafficMirrorFilterRule)(nil)).Elem()
}

func (i GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs) ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput() GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return i.ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs) ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput)
}

// GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayInput is an input type that accepts GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArray and GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayInput` via:
//
//	GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArray{ GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs{...} }
type GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput() GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput
	ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutputWithContext(context.Context) GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput
}

type GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArray []GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleInput

func (GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFilterRulesTrafficMirrorFilterRule)(nil)).Elem()
}

func (i GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArray) ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput() GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return i.ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArray) ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput)
}

type GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFilterRulesTrafficMirrorFilterRule)(nil)).Elem()
}

func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput() GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return o
}

func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return o
}

// The create time of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Description }).(pulumi.StringOutput)
}

// The destination cidr block of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The destination port range of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.DestinationPortRange }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Id }).(pulumi.StringOutput)
}

// The policy of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The priority of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source cidr block of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

// The source port range of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

// The status of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.Status }).(pulumi.StringOutput)
}

// The traffic direction of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) TrafficDirection() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.TrafficDirection }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) TrafficMirrorFilterRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.TrafficMirrorFilterRuleId }).(pulumi.StringOutput)
}

// The last update time of traffic mirror filter rule.
func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFilterRulesTrafficMirrorFilterRule) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFilterRulesTrafficMirrorFilterRule)(nil)).Elem()
}

func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput) ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput() GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput) ToGetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFilterRulesTrafficMirrorFilterRule {
		return vs[0].([]GetTrafficMirrorFilterRulesTrafficMirrorFilterRule)[vs[1].(int)]
	}).(GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput)
}

type GetTrafficMirrorFiltersTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetTrafficMirrorFiltersTagInput is an input type that accepts GetTrafficMirrorFiltersTagArgs and GetTrafficMirrorFiltersTagOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTagInput` via:
//
//	GetTrafficMirrorFiltersTagArgs{...}
type GetTrafficMirrorFiltersTagInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTagOutput() GetTrafficMirrorFiltersTagOutput
	ToGetTrafficMirrorFiltersTagOutputWithContext(context.Context) GetTrafficMirrorFiltersTagOutput
}

type GetTrafficMirrorFiltersTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTrafficMirrorFiltersTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTag)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTagArgs) ToGetTrafficMirrorFiltersTagOutput() GetTrafficMirrorFiltersTagOutput {
	return i.ToGetTrafficMirrorFiltersTagOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTagArgs) ToGetTrafficMirrorFiltersTagOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTagOutput)
}

// GetTrafficMirrorFiltersTagArrayInput is an input type that accepts GetTrafficMirrorFiltersTagArray and GetTrafficMirrorFiltersTagArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTagArrayInput` via:
//
//	GetTrafficMirrorFiltersTagArray{ GetTrafficMirrorFiltersTagArgs{...} }
type GetTrafficMirrorFiltersTagArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTagArrayOutput() GetTrafficMirrorFiltersTagArrayOutput
	ToGetTrafficMirrorFiltersTagArrayOutputWithContext(context.Context) GetTrafficMirrorFiltersTagArrayOutput
}

type GetTrafficMirrorFiltersTagArray []GetTrafficMirrorFiltersTagInput

func (GetTrafficMirrorFiltersTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTag)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTagArray) ToGetTrafficMirrorFiltersTagArrayOutput() GetTrafficMirrorFiltersTagArrayOutput {
	return i.ToGetTrafficMirrorFiltersTagArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTagArray) ToGetTrafficMirrorFiltersTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTagArrayOutput)
}

type GetTrafficMirrorFiltersTagOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTag)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTagOutput) ToGetTrafficMirrorFiltersTagOutput() GetTrafficMirrorFiltersTagOutput {
	return o
}

func (o GetTrafficMirrorFiltersTagOutput) ToGetTrafficMirrorFiltersTagOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTagOutput {
	return o
}

// The Key of Tags.
func (o GetTrafficMirrorFiltersTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetTrafficMirrorFiltersTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTrafficMirrorFiltersTagArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTag)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTagArrayOutput) ToGetTrafficMirrorFiltersTagArrayOutput() GetTrafficMirrorFiltersTagArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTagArrayOutput) ToGetTrafficMirrorFiltersTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTagArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTagArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFiltersTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFiltersTag {
		return vs[0].([]GetTrafficMirrorFiltersTag)[vs[1].(int)]
	}).(GetTrafficMirrorFiltersTagOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilter struct {
	// The create time of traffic mirror filter rule.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description string `pulumi:"description"`
	// The ingress filter rules of traffic mirror filter.
	EgressFilterRules []GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule `pulumi:"egressFilterRules"`
	// The ID of traffic mirror filter.
	Id string `pulumi:"id"`
	// The ingress filter rules of traffic mirror filter.
	IngressFilterRules []GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule `pulumi:"ingressFilterRules"`
	// The project name of traffic mirror filter.
	ProjectName string `pulumi:"projectName"`
	// The status of traffic mirror filter.
	Status string `pulumi:"status"`
	// Tags.
	Tags []GetTrafficMirrorFiltersTrafficMirrorFilterTag `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The name of traffic mirror filter.
	TrafficMirrorFilterName string `pulumi:"trafficMirrorFilterName"`
	// The last update time of traffic mirror filter.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetTrafficMirrorFiltersTrafficMirrorFilterInput is an input type that accepts GetTrafficMirrorFiltersTrafficMirrorFilterArgs and GetTrafficMirrorFiltersTrafficMirrorFilterOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTrafficMirrorFilterInput` via:
//
//	GetTrafficMirrorFiltersTrafficMirrorFilterArgs{...}
type GetTrafficMirrorFiltersTrafficMirrorFilterInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTrafficMirrorFilterOutput() GetTrafficMirrorFiltersTrafficMirrorFilterOutput
	ToGetTrafficMirrorFiltersTrafficMirrorFilterOutputWithContext(context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterOutput
}

type GetTrafficMirrorFiltersTrafficMirrorFilterArgs struct {
	// The create time of traffic mirror filter rule.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The ingress filter rules of traffic mirror filter.
	EgressFilterRules GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput `pulumi:"egressFilterRules"`
	// The ID of traffic mirror filter.
	Id pulumi.StringInput `pulumi:"id"`
	// The ingress filter rules of traffic mirror filter.
	IngressFilterRules GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput `pulumi:"ingressFilterRules"`
	// The project name of traffic mirror filter.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of traffic mirror filter.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayInput `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The name of traffic mirror filter.
	TrafficMirrorFilterName pulumi.StringInput `pulumi:"trafficMirrorFilterName"`
	// The last update time of traffic mirror filter.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetTrafficMirrorFiltersTrafficMirrorFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilter)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterArgs) ToGetTrafficMirrorFiltersTrafficMirrorFilterOutput() GetTrafficMirrorFiltersTrafficMirrorFilterOutput {
	return i.ToGetTrafficMirrorFiltersTrafficMirrorFilterOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterArgs) ToGetTrafficMirrorFiltersTrafficMirrorFilterOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTrafficMirrorFilterOutput)
}

// GetTrafficMirrorFiltersTrafficMirrorFilterArrayInput is an input type that accepts GetTrafficMirrorFiltersTrafficMirrorFilterArray and GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTrafficMirrorFilterArrayInput` via:
//
//	GetTrafficMirrorFiltersTrafficMirrorFilterArray{ GetTrafficMirrorFiltersTrafficMirrorFilterArgs{...} }
type GetTrafficMirrorFiltersTrafficMirrorFilterArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput
	ToGetTrafficMirrorFiltersTrafficMirrorFilterArrayOutputWithContext(context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput
}

type GetTrafficMirrorFiltersTrafficMirrorFilterArray []GetTrafficMirrorFiltersTrafficMirrorFilterInput

func (GetTrafficMirrorFiltersTrafficMirrorFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTrafficMirrorFilter)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterArray) ToGetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return i.ToGetTrafficMirrorFiltersTrafficMirrorFilterArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterArray) ToGetTrafficMirrorFiltersTrafficMirrorFilterArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTrafficMirrorFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilter)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterOutput() GetTrafficMirrorFiltersTrafficMirrorFilterOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterOutput {
	return o
}

// The create time of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) string { return v.Description }).(pulumi.StringOutput)
}

// The ingress filter rules of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) EgressFilterRules() GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) []GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule {
		return v.EgressFilterRules
	}).(GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput)
}

// The ID of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) string { return v.Id }).(pulumi.StringOutput)
}

// The ingress filter rules of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) IngressFilterRules() GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) []GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule {
		return v.IngressFilterRules
	}).(GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput)
}

// The project name of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) Tags() GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) []GetTrafficMirrorFiltersTrafficMirrorFilterTag {
		return v.Tags
	}).(GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput)
}

// The ID of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The name of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) TrafficMirrorFilterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) string { return v.TrafficMirrorFilterName }).(pulumi.StringOutput)
}

// The last update time of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilter) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTrafficMirrorFilter)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFiltersTrafficMirrorFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFiltersTrafficMirrorFilter {
		return vs[0].([]GetTrafficMirrorFiltersTrafficMirrorFilter)[vs[1].(int)]
	}).(GetTrafficMirrorFiltersTrafficMirrorFilterOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule struct {
	// The create time of traffic mirror filter rule.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description string `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange string `pulumi:"destinationPortRange"`
	// The policy of traffic mirror filter rule.
	Policy string `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority int `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol string `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange string `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter.
	Status string `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection string `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId string `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput is an input type that accepts GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs and GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput` via:
//
//	GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs{...}
type GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput() GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput
	ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutputWithContext(context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput
}

type GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs struct {
	// The create time of traffic mirror filter rule.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange pulumi.StringInput `pulumi:"destinationPortRange"`
	// The policy of traffic mirror filter rule.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange pulumi.StringInput `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter.
	Status pulumi.StringInput `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection pulumi.StringInput `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId pulumi.StringInput `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs) ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput() GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return i.ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs) ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput)
}

// GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput is an input type that accepts GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray and GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput` via:
//
//	GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray{ GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs{...} }
type GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput
	ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutputWithContext(context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput
}

type GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray []GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput

func (GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray) ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return i.ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray) ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput() GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return o
}

// The create time of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.Description }).(pulumi.StringOutput)
}

// The destination cidr block of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string {
		return v.DestinationCidrBlock
	}).(pulumi.StringOutput)
}

// The destination port range of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string {
		return v.DestinationPortRange
	}).(pulumi.StringOutput)
}

// The policy of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The priority of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source cidr block of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

// The source port range of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

// The status of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.Status }).(pulumi.StringOutput)
}

// The traffic direction of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) TrafficDirection() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.TrafficDirection }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string {
		return v.TrafficMirrorFilterId
	}).(pulumi.StringOutput)
}

// The ID of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) TrafficMirrorFilterRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string {
		return v.TrafficMirrorFilterRuleId
	}).(pulumi.StringOutput)
}

// The last update time of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule {
		return vs[0].([]GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRule)[vs[1].(int)]
	}).(GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule struct {
	// The create time of traffic mirror filter rule.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description string `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange string `pulumi:"destinationPortRange"`
	// The policy of traffic mirror filter rule.
	Policy string `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority int `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol string `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock string `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange string `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter.
	Status string `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection string `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId string `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput is an input type that accepts GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs and GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput` via:
//
//	GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs{...}
type GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput() GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput
	ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutputWithContext(context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput
}

type GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs struct {
	// The create time of traffic mirror filter rule.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror filter rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The destination cidr block of traffic mirror filter rule.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The destination port range of traffic mirror filter rule.
	DestinationPortRange pulumi.StringInput `pulumi:"destinationPortRange"`
	// The policy of traffic mirror filter rule.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The priority of traffic mirror filter rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of traffic mirror filter rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The source cidr block of traffic mirror filter rule.
	SourceCidrBlock pulumi.StringInput `pulumi:"sourceCidrBlock"`
	// The source port range of traffic mirror filter rule.
	SourcePortRange pulumi.StringInput `pulumi:"sourcePortRange"`
	// The status of traffic mirror filter.
	Status pulumi.StringInput `pulumi:"status"`
	// The traffic direction of traffic mirror filter rule.
	TrafficDirection pulumi.StringInput `pulumi:"trafficDirection"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror filter rule.
	TrafficMirrorFilterRuleId pulumi.StringInput `pulumi:"trafficMirrorFilterRuleId"`
	// The last update time of traffic mirror filter.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs) ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput() GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return i.ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs) ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput)
}

// GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput is an input type that accepts GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray and GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput` via:
//
//	GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray{ GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs{...} }
type GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput
	ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutputWithContext(context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput
}

type GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray []GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput

func (GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray) ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return i.ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray) ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput() GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return o
}

// The create time of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.Description }).(pulumi.StringOutput)
}

// The destination cidr block of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string {
		return v.DestinationCidrBlock
	}).(pulumi.StringOutput)
}

// The destination port range of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) DestinationPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string {
		return v.DestinationPortRange
	}).(pulumi.StringOutput)
}

// The policy of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The priority of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// The source cidr block of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) SourceCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.SourceCidrBlock }).(pulumi.StringOutput)
}

// The source port range of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) SourcePortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.SourcePortRange }).(pulumi.StringOutput)
}

// The status of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.Status }).(pulumi.StringOutput)
}

// The traffic direction of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) TrafficDirection() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.TrafficDirection }).(pulumi.StringOutput)
}

// The ID of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string {
		return v.TrafficMirrorFilterId
	}).(pulumi.StringOutput)
}

// The ID of traffic mirror filter rule.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) TrafficMirrorFilterRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string {
		return v.TrafficMirrorFilterRuleId
	}).(pulumi.StringOutput)
}

// The last update time of traffic mirror filter.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule {
		return vs[0].([]GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRule)[vs[1].(int)]
	}).(GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetTrafficMirrorFiltersTrafficMirrorFilterTagInput is an input type that accepts GetTrafficMirrorFiltersTrafficMirrorFilterTagArgs and GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTrafficMirrorFilterTagInput` via:
//
//	GetTrafficMirrorFiltersTrafficMirrorFilterTagArgs{...}
type GetTrafficMirrorFiltersTrafficMirrorFilterTagInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTrafficMirrorFilterTagOutput() GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput
	ToGetTrafficMirrorFiltersTrafficMirrorFilterTagOutputWithContext(context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput
}

type GetTrafficMirrorFiltersTrafficMirrorFilterTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTrafficMirrorFiltersTrafficMirrorFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterTag)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterTagArgs) ToGetTrafficMirrorFiltersTrafficMirrorFilterTagOutput() GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return i.ToGetTrafficMirrorFiltersTrafficMirrorFilterTagOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterTagArgs) ToGetTrafficMirrorFiltersTrafficMirrorFilterTagOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput)
}

// GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayInput is an input type that accepts GetTrafficMirrorFiltersTrafficMirrorFilterTagArray and GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayInput` via:
//
//	GetTrafficMirrorFiltersTrafficMirrorFilterTagArray{ GetTrafficMirrorFiltersTrafficMirrorFilterTagArgs{...} }
type GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput
	ToGetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutputWithContext(context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput
}

type GetTrafficMirrorFiltersTrafficMirrorFilterTagArray []GetTrafficMirrorFiltersTrafficMirrorFilterTagInput

func (GetTrafficMirrorFiltersTrafficMirrorFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTrafficMirrorFilterTag)(nil)).Elem()
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterTagArray) ToGetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return i.ToGetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorFiltersTrafficMirrorFilterTagArray) ToGetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterTag)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterTagOutput() GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterTagOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return o
}

// The Key of Tags.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorFiltersTrafficMirrorFilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorFiltersTrafficMirrorFilterTag)(nil)).Elem()
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput() GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput) ToGetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput {
	return o
}

func (o GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorFiltersTrafficMirrorFilterTag {
		return vs[0].([]GetTrafficMirrorFiltersTrafficMirrorFilterTag)[vs[1].(int)]
	}).(GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput)
}

type GetTrafficMirrorSessionsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetTrafficMirrorSessionsTagInput is an input type that accepts GetTrafficMirrorSessionsTagArgs and GetTrafficMirrorSessionsTagOutput values.
// You can construct a concrete instance of `GetTrafficMirrorSessionsTagInput` via:
//
//	GetTrafficMirrorSessionsTagArgs{...}
type GetTrafficMirrorSessionsTagInput interface {
	pulumi.Input

	ToGetTrafficMirrorSessionsTagOutput() GetTrafficMirrorSessionsTagOutput
	ToGetTrafficMirrorSessionsTagOutputWithContext(context.Context) GetTrafficMirrorSessionsTagOutput
}

type GetTrafficMirrorSessionsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTrafficMirrorSessionsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsTag)(nil)).Elem()
}

func (i GetTrafficMirrorSessionsTagArgs) ToGetTrafficMirrorSessionsTagOutput() GetTrafficMirrorSessionsTagOutput {
	return i.ToGetTrafficMirrorSessionsTagOutputWithContext(context.Background())
}

func (i GetTrafficMirrorSessionsTagArgs) ToGetTrafficMirrorSessionsTagOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorSessionsTagOutput)
}

// GetTrafficMirrorSessionsTagArrayInput is an input type that accepts GetTrafficMirrorSessionsTagArray and GetTrafficMirrorSessionsTagArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorSessionsTagArrayInput` via:
//
//	GetTrafficMirrorSessionsTagArray{ GetTrafficMirrorSessionsTagArgs{...} }
type GetTrafficMirrorSessionsTagArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorSessionsTagArrayOutput() GetTrafficMirrorSessionsTagArrayOutput
	ToGetTrafficMirrorSessionsTagArrayOutputWithContext(context.Context) GetTrafficMirrorSessionsTagArrayOutput
}

type GetTrafficMirrorSessionsTagArray []GetTrafficMirrorSessionsTagInput

func (GetTrafficMirrorSessionsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorSessionsTag)(nil)).Elem()
}

func (i GetTrafficMirrorSessionsTagArray) ToGetTrafficMirrorSessionsTagArrayOutput() GetTrafficMirrorSessionsTagArrayOutput {
	return i.ToGetTrafficMirrorSessionsTagArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorSessionsTagArray) ToGetTrafficMirrorSessionsTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorSessionsTagArrayOutput)
}

type GetTrafficMirrorSessionsTagOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsTag)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsTagOutput) ToGetTrafficMirrorSessionsTagOutput() GetTrafficMirrorSessionsTagOutput {
	return o
}

func (o GetTrafficMirrorSessionsTagOutput) ToGetTrafficMirrorSessionsTagOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTagOutput {
	return o
}

// The Key of Tags.
func (o GetTrafficMirrorSessionsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetTrafficMirrorSessionsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTrafficMirrorSessionsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorSessionsTag)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsTagArrayOutput) ToGetTrafficMirrorSessionsTagArrayOutput() GetTrafficMirrorSessionsTagArrayOutput {
	return o
}

func (o GetTrafficMirrorSessionsTagArrayOutput) ToGetTrafficMirrorSessionsTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTagArrayOutput {
	return o
}

func (o GetTrafficMirrorSessionsTagArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorSessionsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorSessionsTag {
		return vs[0].([]GetTrafficMirrorSessionsTag)[vs[1].(int)]
	}).(GetTrafficMirrorSessionsTagOutput)
}

type GetTrafficMirrorSessionsTrafficMirrorSession struct {
	// The business status of traffic mirror session.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time of traffic mirror session.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror session.
	Description string `pulumi:"description"`
	// The ID of traffic mirror session.
	Id string `pulumi:"id"`
	// The lock reason of traffic mirror session.
	LockReason string `pulumi:"lockReason"`
	// The packet length of traffic mirror session.
	PacketLength int `pulumi:"packetLength"`
	// The priority of traffic mirror session.
	Priority int `pulumi:"priority"`
	// The project name of traffic mirror session.
	ProjectName string `pulumi:"projectName"`
	// The status of traffic mirror session.
	Status string `pulumi:"status"`
	// Tags.
	Tags []GetTrafficMirrorSessionsTrafficMirrorSessionTag `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId string `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror session.
	TrafficMirrorSessionId string `pulumi:"trafficMirrorSessionId"`
	// The name of traffic mirror session.
	TrafficMirrorSessionName string `pulumi:"trafficMirrorSessionName"`
	// The IDs of traffic mirror source.
	TrafficMirrorSourceIds []string `pulumi:"trafficMirrorSourceIds"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId string `pulumi:"trafficMirrorTargetId"`
	// The update time of traffic mirror session.
	UpdatedAt string `pulumi:"updatedAt"`
	// The ID of virtual network.
	VirtualNetworkId int `pulumi:"virtualNetworkId"`
}

// GetTrafficMirrorSessionsTrafficMirrorSessionInput is an input type that accepts GetTrafficMirrorSessionsTrafficMirrorSessionArgs and GetTrafficMirrorSessionsTrafficMirrorSessionOutput values.
// You can construct a concrete instance of `GetTrafficMirrorSessionsTrafficMirrorSessionInput` via:
//
//	GetTrafficMirrorSessionsTrafficMirrorSessionArgs{...}
type GetTrafficMirrorSessionsTrafficMirrorSessionInput interface {
	pulumi.Input

	ToGetTrafficMirrorSessionsTrafficMirrorSessionOutput() GetTrafficMirrorSessionsTrafficMirrorSessionOutput
	ToGetTrafficMirrorSessionsTrafficMirrorSessionOutputWithContext(context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionOutput
}

type GetTrafficMirrorSessionsTrafficMirrorSessionArgs struct {
	// The business status of traffic mirror session.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time of traffic mirror session.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror session.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of traffic mirror session.
	Id pulumi.StringInput `pulumi:"id"`
	// The lock reason of traffic mirror session.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The packet length of traffic mirror session.
	PacketLength pulumi.IntInput `pulumi:"packetLength"`
	// The priority of traffic mirror session.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The project name of traffic mirror session.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of traffic mirror session.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayInput `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringInput `pulumi:"trafficMirrorFilterId"`
	// The ID of traffic mirror session.
	TrafficMirrorSessionId pulumi.StringInput `pulumi:"trafficMirrorSessionId"`
	// The name of traffic mirror session.
	TrafficMirrorSessionName pulumi.StringInput `pulumi:"trafficMirrorSessionName"`
	// The IDs of traffic mirror source.
	TrafficMirrorSourceIds pulumi.StringArrayInput `pulumi:"trafficMirrorSourceIds"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId pulumi.StringInput `pulumi:"trafficMirrorTargetId"`
	// The update time of traffic mirror session.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The ID of virtual network.
	VirtualNetworkId pulumi.IntInput `pulumi:"virtualNetworkId"`
}

func (GetTrafficMirrorSessionsTrafficMirrorSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsTrafficMirrorSession)(nil)).Elem()
}

func (i GetTrafficMirrorSessionsTrafficMirrorSessionArgs) ToGetTrafficMirrorSessionsTrafficMirrorSessionOutput() GetTrafficMirrorSessionsTrafficMirrorSessionOutput {
	return i.ToGetTrafficMirrorSessionsTrafficMirrorSessionOutputWithContext(context.Background())
}

func (i GetTrafficMirrorSessionsTrafficMirrorSessionArgs) ToGetTrafficMirrorSessionsTrafficMirrorSessionOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorSessionsTrafficMirrorSessionOutput)
}

// GetTrafficMirrorSessionsTrafficMirrorSessionArrayInput is an input type that accepts GetTrafficMirrorSessionsTrafficMirrorSessionArray and GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorSessionsTrafficMirrorSessionArrayInput` via:
//
//	GetTrafficMirrorSessionsTrafficMirrorSessionArray{ GetTrafficMirrorSessionsTrafficMirrorSessionArgs{...} }
type GetTrafficMirrorSessionsTrafficMirrorSessionArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput() GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput
	ToGetTrafficMirrorSessionsTrafficMirrorSessionArrayOutputWithContext(context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput
}

type GetTrafficMirrorSessionsTrafficMirrorSessionArray []GetTrafficMirrorSessionsTrafficMirrorSessionInput

func (GetTrafficMirrorSessionsTrafficMirrorSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorSessionsTrafficMirrorSession)(nil)).Elem()
}

func (i GetTrafficMirrorSessionsTrafficMirrorSessionArray) ToGetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput() GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return i.ToGetTrafficMirrorSessionsTrafficMirrorSessionArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorSessionsTrafficMirrorSessionArray) ToGetTrafficMirrorSessionsTrafficMirrorSessionArrayOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput)
}

type GetTrafficMirrorSessionsTrafficMirrorSessionOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsTrafficMirrorSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsTrafficMirrorSession)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) ToGetTrafficMirrorSessionsTrafficMirrorSessionOutput() GetTrafficMirrorSessionsTrafficMirrorSessionOutput {
	return o
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) ToGetTrafficMirrorSessionsTrafficMirrorSessionOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionOutput {
	return o
}

// The business status of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.Id }).(pulumi.StringOutput)
}

// The lock reason of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.LockReason }).(pulumi.StringOutput)
}

// The packet length of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) PacketLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) int { return v.PacketLength }).(pulumi.IntOutput)
}

// The priority of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) int { return v.Priority }).(pulumi.IntOutput)
}

// The project name of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) Tags() GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) []GetTrafficMirrorSessionsTrafficMirrorSessionTag {
		return v.Tags
	}).(GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput)
}

// The ID of traffic mirror filter.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.TrafficMirrorFilterId }).(pulumi.StringOutput)
}

// The ID of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorSessionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.TrafficMirrorSessionId }).(pulumi.StringOutput)
}

// The name of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorSessionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.TrafficMirrorSessionName }).(pulumi.StringOutput)
}

// The IDs of traffic mirror source.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) []string { return v.TrafficMirrorSourceIds }).(pulumi.StringArrayOutput)
}

// The ID of traffic mirror target.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) TrafficMirrorTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.TrafficMirrorTargetId }).(pulumi.StringOutput)
}

// The update time of traffic mirror session.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The ID of virtual network.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionOutput) VirtualNetworkId() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSession) int { return v.VirtualNetworkId }).(pulumi.IntOutput)
}

type GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorSessionsTrafficMirrorSession)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput) ToGetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput() GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return o
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput) ToGetTrafficMirrorSessionsTrafficMirrorSessionArrayOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return o
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorSessionsTrafficMirrorSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorSessionsTrafficMirrorSession {
		return vs[0].([]GetTrafficMirrorSessionsTrafficMirrorSession)[vs[1].(int)]
	}).(GetTrafficMirrorSessionsTrafficMirrorSessionOutput)
}

type GetTrafficMirrorSessionsTrafficMirrorSessionTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetTrafficMirrorSessionsTrafficMirrorSessionTagInput is an input type that accepts GetTrafficMirrorSessionsTrafficMirrorSessionTagArgs and GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput values.
// You can construct a concrete instance of `GetTrafficMirrorSessionsTrafficMirrorSessionTagInput` via:
//
//	GetTrafficMirrorSessionsTrafficMirrorSessionTagArgs{...}
type GetTrafficMirrorSessionsTrafficMirrorSessionTagInput interface {
	pulumi.Input

	ToGetTrafficMirrorSessionsTrafficMirrorSessionTagOutput() GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput
	ToGetTrafficMirrorSessionsTrafficMirrorSessionTagOutputWithContext(context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput
}

type GetTrafficMirrorSessionsTrafficMirrorSessionTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTrafficMirrorSessionsTrafficMirrorSessionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsTrafficMirrorSessionTag)(nil)).Elem()
}

func (i GetTrafficMirrorSessionsTrafficMirrorSessionTagArgs) ToGetTrafficMirrorSessionsTrafficMirrorSessionTagOutput() GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return i.ToGetTrafficMirrorSessionsTrafficMirrorSessionTagOutputWithContext(context.Background())
}

func (i GetTrafficMirrorSessionsTrafficMirrorSessionTagArgs) ToGetTrafficMirrorSessionsTrafficMirrorSessionTagOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput)
}

// GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayInput is an input type that accepts GetTrafficMirrorSessionsTrafficMirrorSessionTagArray and GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayInput` via:
//
//	GetTrafficMirrorSessionsTrafficMirrorSessionTagArray{ GetTrafficMirrorSessionsTrafficMirrorSessionTagArgs{...} }
type GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput() GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput
	ToGetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutputWithContext(context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput
}

type GetTrafficMirrorSessionsTrafficMirrorSessionTagArray []GetTrafficMirrorSessionsTrafficMirrorSessionTagInput

func (GetTrafficMirrorSessionsTrafficMirrorSessionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorSessionsTrafficMirrorSessionTag)(nil)).Elem()
}

func (i GetTrafficMirrorSessionsTrafficMirrorSessionTagArray) ToGetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput() GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return i.ToGetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorSessionsTrafficMirrorSessionTagArray) ToGetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput)
}

type GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsTrafficMirrorSessionTag)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput) ToGetTrafficMirrorSessionsTrafficMirrorSessionTagOutput() GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return o
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput) ToGetTrafficMirrorSessionsTrafficMirrorSessionTagOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return o
}

// The Key of Tags.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSessionTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsTrafficMirrorSessionTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorSessionsTrafficMirrorSessionTag)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput) ToGetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput() GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return o
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput) ToGetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput {
	return o
}

func (o GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorSessionsTrafficMirrorSessionTag {
		return vs[0].([]GetTrafficMirrorSessionsTrafficMirrorSessionTag)[vs[1].(int)]
	}).(GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput)
}

type GetTrafficMirrorTargetsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetTrafficMirrorTargetsTagInput is an input type that accepts GetTrafficMirrorTargetsTagArgs and GetTrafficMirrorTargetsTagOutput values.
// You can construct a concrete instance of `GetTrafficMirrorTargetsTagInput` via:
//
//	GetTrafficMirrorTargetsTagArgs{...}
type GetTrafficMirrorTargetsTagInput interface {
	pulumi.Input

	ToGetTrafficMirrorTargetsTagOutput() GetTrafficMirrorTargetsTagOutput
	ToGetTrafficMirrorTargetsTagOutputWithContext(context.Context) GetTrafficMirrorTargetsTagOutput
}

type GetTrafficMirrorTargetsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTrafficMirrorTargetsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorTargetsTag)(nil)).Elem()
}

func (i GetTrafficMirrorTargetsTagArgs) ToGetTrafficMirrorTargetsTagOutput() GetTrafficMirrorTargetsTagOutput {
	return i.ToGetTrafficMirrorTargetsTagOutputWithContext(context.Background())
}

func (i GetTrafficMirrorTargetsTagArgs) ToGetTrafficMirrorTargetsTagOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorTargetsTagOutput)
}

// GetTrafficMirrorTargetsTagArrayInput is an input type that accepts GetTrafficMirrorTargetsTagArray and GetTrafficMirrorTargetsTagArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorTargetsTagArrayInput` via:
//
//	GetTrafficMirrorTargetsTagArray{ GetTrafficMirrorTargetsTagArgs{...} }
type GetTrafficMirrorTargetsTagArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorTargetsTagArrayOutput() GetTrafficMirrorTargetsTagArrayOutput
	ToGetTrafficMirrorTargetsTagArrayOutputWithContext(context.Context) GetTrafficMirrorTargetsTagArrayOutput
}

type GetTrafficMirrorTargetsTagArray []GetTrafficMirrorTargetsTagInput

func (GetTrafficMirrorTargetsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorTargetsTag)(nil)).Elem()
}

func (i GetTrafficMirrorTargetsTagArray) ToGetTrafficMirrorTargetsTagArrayOutput() GetTrafficMirrorTargetsTagArrayOutput {
	return i.ToGetTrafficMirrorTargetsTagArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorTargetsTagArray) ToGetTrafficMirrorTargetsTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorTargetsTagArrayOutput)
}

type GetTrafficMirrorTargetsTagOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorTargetsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorTargetsTag)(nil)).Elem()
}

func (o GetTrafficMirrorTargetsTagOutput) ToGetTrafficMirrorTargetsTagOutput() GetTrafficMirrorTargetsTagOutput {
	return o
}

func (o GetTrafficMirrorTargetsTagOutput) ToGetTrafficMirrorTargetsTagOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTagOutput {
	return o
}

// The Key of Tags.
func (o GetTrafficMirrorTargetsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetTrafficMirrorTargetsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTrafficMirrorTargetsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorTargetsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorTargetsTag)(nil)).Elem()
}

func (o GetTrafficMirrorTargetsTagArrayOutput) ToGetTrafficMirrorTargetsTagArrayOutput() GetTrafficMirrorTargetsTagArrayOutput {
	return o
}

func (o GetTrafficMirrorTargetsTagArrayOutput) ToGetTrafficMirrorTargetsTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTagArrayOutput {
	return o
}

func (o GetTrafficMirrorTargetsTagArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorTargetsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorTargetsTag {
		return vs[0].([]GetTrafficMirrorTargetsTag)[vs[1].(int)]
	}).(GetTrafficMirrorTargetsTagOutput)
}

type GetTrafficMirrorTargetsTrafficMirrorTarget struct {
	// The create time of traffic mirror target.
	CreatedAt string `pulumi:"createdAt"`
	// The description of traffic mirror target.
	Description string `pulumi:"description"`
	// The ID of traffic mirror target.
	Id string `pulumi:"id"`
	// The instance id of traffic mirror target.
	InstanceId string `pulumi:"instanceId"`
	// The instance type of traffic mirror target.
	InstanceType string `pulumi:"instanceType"`
	// The project name of traffic mirror target.
	ProjectName string `pulumi:"projectName"`
	// The status of traffic mirror target.
	Status string `pulumi:"status"`
	// Tags.
	Tags []GetTrafficMirrorTargetsTrafficMirrorTargetTag `pulumi:"tags"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId string `pulumi:"trafficMirrorTargetId"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName string `pulumi:"trafficMirrorTargetName"`
	// The update time of traffic mirror target.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetTrafficMirrorTargetsTrafficMirrorTargetInput is an input type that accepts GetTrafficMirrorTargetsTrafficMirrorTargetArgs and GetTrafficMirrorTargetsTrafficMirrorTargetOutput values.
// You can construct a concrete instance of `GetTrafficMirrorTargetsTrafficMirrorTargetInput` via:
//
//	GetTrafficMirrorTargetsTrafficMirrorTargetArgs{...}
type GetTrafficMirrorTargetsTrafficMirrorTargetInput interface {
	pulumi.Input

	ToGetTrafficMirrorTargetsTrafficMirrorTargetOutput() GetTrafficMirrorTargetsTrafficMirrorTargetOutput
	ToGetTrafficMirrorTargetsTrafficMirrorTargetOutputWithContext(context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetOutput
}

type GetTrafficMirrorTargetsTrafficMirrorTargetArgs struct {
	// The create time of traffic mirror target.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of traffic mirror target.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of traffic mirror target.
	Id pulumi.StringInput `pulumi:"id"`
	// The instance id of traffic mirror target.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The instance type of traffic mirror target.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The project name of traffic mirror target.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of traffic mirror target.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayInput `pulumi:"tags"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId pulumi.StringInput `pulumi:"trafficMirrorTargetId"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName pulumi.StringInput `pulumi:"trafficMirrorTargetName"`
	// The update time of traffic mirror target.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetTrafficMirrorTargetsTrafficMirrorTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorTargetsTrafficMirrorTarget)(nil)).Elem()
}

func (i GetTrafficMirrorTargetsTrafficMirrorTargetArgs) ToGetTrafficMirrorTargetsTrafficMirrorTargetOutput() GetTrafficMirrorTargetsTrafficMirrorTargetOutput {
	return i.ToGetTrafficMirrorTargetsTrafficMirrorTargetOutputWithContext(context.Background())
}

func (i GetTrafficMirrorTargetsTrafficMirrorTargetArgs) ToGetTrafficMirrorTargetsTrafficMirrorTargetOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorTargetsTrafficMirrorTargetOutput)
}

// GetTrafficMirrorTargetsTrafficMirrorTargetArrayInput is an input type that accepts GetTrafficMirrorTargetsTrafficMirrorTargetArray and GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorTargetsTrafficMirrorTargetArrayInput` via:
//
//	GetTrafficMirrorTargetsTrafficMirrorTargetArray{ GetTrafficMirrorTargetsTrafficMirrorTargetArgs{...} }
type GetTrafficMirrorTargetsTrafficMirrorTargetArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput() GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput
	ToGetTrafficMirrorTargetsTrafficMirrorTargetArrayOutputWithContext(context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput
}

type GetTrafficMirrorTargetsTrafficMirrorTargetArray []GetTrafficMirrorTargetsTrafficMirrorTargetInput

func (GetTrafficMirrorTargetsTrafficMirrorTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorTargetsTrafficMirrorTarget)(nil)).Elem()
}

func (i GetTrafficMirrorTargetsTrafficMirrorTargetArray) ToGetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput() GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return i.ToGetTrafficMirrorTargetsTrafficMirrorTargetArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorTargetsTrafficMirrorTargetArray) ToGetTrafficMirrorTargetsTrafficMirrorTargetArrayOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput)
}

type GetTrafficMirrorTargetsTrafficMirrorTargetOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorTargetsTrafficMirrorTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorTargetsTrafficMirrorTarget)(nil)).Elem()
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) ToGetTrafficMirrorTargetsTrafficMirrorTargetOutput() GetTrafficMirrorTargetsTrafficMirrorTargetOutput {
	return o
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) ToGetTrafficMirrorTargetsTrafficMirrorTargetOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetOutput {
	return o
}

// The create time of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.Id }).(pulumi.StringOutput)
}

// The instance id of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The instance type of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The project name of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) Tags() GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) []GetTrafficMirrorTargetsTrafficMirrorTargetTag {
		return v.Tags
	}).(GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput)
}

// The ID of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) TrafficMirrorTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.TrafficMirrorTargetId }).(pulumi.StringOutput)
}

// The name of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) TrafficMirrorTargetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.TrafficMirrorTargetName }).(pulumi.StringOutput)
}

// The update time of traffic mirror target.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTarget) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorTargetsTrafficMirrorTarget)(nil)).Elem()
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput) ToGetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput() GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return o
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput) ToGetTrafficMirrorTargetsTrafficMirrorTargetArrayOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return o
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorTargetsTrafficMirrorTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorTargetsTrafficMirrorTarget {
		return vs[0].([]GetTrafficMirrorTargetsTrafficMirrorTarget)[vs[1].(int)]
	}).(GetTrafficMirrorTargetsTrafficMirrorTargetOutput)
}

type GetTrafficMirrorTargetsTrafficMirrorTargetTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetTrafficMirrorTargetsTrafficMirrorTargetTagInput is an input type that accepts GetTrafficMirrorTargetsTrafficMirrorTargetTagArgs and GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput values.
// You can construct a concrete instance of `GetTrafficMirrorTargetsTrafficMirrorTargetTagInput` via:
//
//	GetTrafficMirrorTargetsTrafficMirrorTargetTagArgs{...}
type GetTrafficMirrorTargetsTrafficMirrorTargetTagInput interface {
	pulumi.Input

	ToGetTrafficMirrorTargetsTrafficMirrorTargetTagOutput() GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput
	ToGetTrafficMirrorTargetsTrafficMirrorTargetTagOutputWithContext(context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput
}

type GetTrafficMirrorTargetsTrafficMirrorTargetTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTrafficMirrorTargetsTrafficMirrorTargetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorTargetsTrafficMirrorTargetTag)(nil)).Elem()
}

func (i GetTrafficMirrorTargetsTrafficMirrorTargetTagArgs) ToGetTrafficMirrorTargetsTrafficMirrorTargetTagOutput() GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return i.ToGetTrafficMirrorTargetsTrafficMirrorTargetTagOutputWithContext(context.Background())
}

func (i GetTrafficMirrorTargetsTrafficMirrorTargetTagArgs) ToGetTrafficMirrorTargetsTrafficMirrorTargetTagOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput)
}

// GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayInput is an input type that accepts GetTrafficMirrorTargetsTrafficMirrorTargetTagArray and GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput values.
// You can construct a concrete instance of `GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayInput` via:
//
//	GetTrafficMirrorTargetsTrafficMirrorTargetTagArray{ GetTrafficMirrorTargetsTrafficMirrorTargetTagArgs{...} }
type GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayInput interface {
	pulumi.Input

	ToGetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput() GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput
	ToGetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutputWithContext(context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput
}

type GetTrafficMirrorTargetsTrafficMirrorTargetTagArray []GetTrafficMirrorTargetsTrafficMirrorTargetTagInput

func (GetTrafficMirrorTargetsTrafficMirrorTargetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorTargetsTrafficMirrorTargetTag)(nil)).Elem()
}

func (i GetTrafficMirrorTargetsTrafficMirrorTargetTagArray) ToGetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput() GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return i.ToGetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutputWithContext(context.Background())
}

func (i GetTrafficMirrorTargetsTrafficMirrorTargetTagArray) ToGetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput)
}

type GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorTargetsTrafficMirrorTargetTag)(nil)).Elem()
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput) ToGetTrafficMirrorTargetsTrafficMirrorTargetTagOutput() GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return o
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput) ToGetTrafficMirrorTargetsTrafficMirrorTargetTagOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return o
}

// The Key of Tags.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTargetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsTrafficMirrorTargetTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficMirrorTargetsTrafficMirrorTargetTag)(nil)).Elem()
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput) ToGetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput() GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return o
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput) ToGetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput {
	return o
}

func (o GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput) Index(i pulumi.IntInput) GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficMirrorTargetsTrafficMirrorTargetTag {
		return vs[0].([]GetTrafficMirrorTargetsTrafficMirrorTargetTag)[vs[1].(int)]
	}).(GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput)
}

type GetVpcsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetVpcsTagInput is an input type that accepts GetVpcsTagArgs and GetVpcsTagOutput values.
// You can construct a concrete instance of `GetVpcsTagInput` via:
//
//	GetVpcsTagArgs{...}
type GetVpcsTagInput interface {
	pulumi.Input

	ToGetVpcsTagOutput() GetVpcsTagOutput
	ToGetVpcsTagOutputWithContext(context.Context) GetVpcsTagOutput
}

type GetVpcsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVpcsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsTag)(nil)).Elem()
}

func (i GetVpcsTagArgs) ToGetVpcsTagOutput() GetVpcsTagOutput {
	return i.ToGetVpcsTagOutputWithContext(context.Background())
}

func (i GetVpcsTagArgs) ToGetVpcsTagOutputWithContext(ctx context.Context) GetVpcsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsTagOutput)
}

// GetVpcsTagArrayInput is an input type that accepts GetVpcsTagArray and GetVpcsTagArrayOutput values.
// You can construct a concrete instance of `GetVpcsTagArrayInput` via:
//
//	GetVpcsTagArray{ GetVpcsTagArgs{...} }
type GetVpcsTagArrayInput interface {
	pulumi.Input

	ToGetVpcsTagArrayOutput() GetVpcsTagArrayOutput
	ToGetVpcsTagArrayOutputWithContext(context.Context) GetVpcsTagArrayOutput
}

type GetVpcsTagArray []GetVpcsTagInput

func (GetVpcsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsTag)(nil)).Elem()
}

func (i GetVpcsTagArray) ToGetVpcsTagArrayOutput() GetVpcsTagArrayOutput {
	return i.ToGetVpcsTagArrayOutputWithContext(context.Background())
}

func (i GetVpcsTagArray) ToGetVpcsTagArrayOutputWithContext(ctx context.Context) GetVpcsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsTagArrayOutput)
}

type GetVpcsTagOutput struct{ *pulumi.OutputState }

func (GetVpcsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsTag)(nil)).Elem()
}

func (o GetVpcsTagOutput) ToGetVpcsTagOutput() GetVpcsTagOutput {
	return o
}

func (o GetVpcsTagOutput) ToGetVpcsTagOutputWithContext(ctx context.Context) GetVpcsTagOutput {
	return o
}

// The Key of Tags.
func (o GetVpcsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetVpcsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVpcsTagArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsTag)(nil)).Elem()
}

func (o GetVpcsTagArrayOutput) ToGetVpcsTagArrayOutput() GetVpcsTagArrayOutput {
	return o
}

func (o GetVpcsTagArrayOutput) ToGetVpcsTagArrayOutputWithContext(ctx context.Context) GetVpcsTagArrayOutput {
	return o
}

func (o GetVpcsTagArrayOutput) Index(i pulumi.IntInput) GetVpcsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsTag {
		return vs[0].([]GetVpcsTag)[vs[1].(int)]
	}).(GetVpcsTagOutput)
}

type GetVpcsVpc struct {
	// The account ID of VPC.
	AccountId string `pulumi:"accountId"`
	// The associate cen list of VPC.
	AssociateCens []GetVpcsVpcAssociateCen `pulumi:"associateCens"`
	// The auxiliary cidr block list of VPC.
	AuxiliaryCidrBlocks []string `pulumi:"auxiliaryCidrBlocks"`
	// The cidr block of VPC.
	CidrBlock string `pulumi:"cidrBlock"`
	// The create time of VPC.
	CreationTime string `pulumi:"creationTime"`
	// The description of VPC.
	Description string `pulumi:"description"`
	// The dns server list of VPC.
	DnsServers []string `pulumi:"dnsServers"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The nat gateway ID list of VPC.
	NatGatewayIds []string `pulumi:"natGatewayIds"`
	// The ProjectName of the VPC.
	ProjectName string `pulumi:"projectName"`
	// The route table ID list of VPC.
	RouteTableIds []string `pulumi:"routeTableIds"`
	// The secondary cidr block list of VPC.
	SecondaryCidrBlocks []string `pulumi:"secondaryCidrBlocks"`
	// The security group ID list of VPC.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The status of VPC.
	Status string `pulumi:"status"`
	// The subnet ID list of VPC.
	SubnetIds []string `pulumi:"subnetIds"`
	// Tags.
	Tags []GetVpcsVpcTag `pulumi:"tags"`
	// The update time of VPC.
	UpdateTime string `pulumi:"updateTime"`
	// The ID of VPC.
	VpcId string `pulumi:"vpcId"`
	// The vpc name to query.
	VpcName string `pulumi:"vpcName"`
}

// GetVpcsVpcInput is an input type that accepts GetVpcsVpcArgs and GetVpcsVpcOutput values.
// You can construct a concrete instance of `GetVpcsVpcInput` via:
//
//	GetVpcsVpcArgs{...}
type GetVpcsVpcInput interface {
	pulumi.Input

	ToGetVpcsVpcOutput() GetVpcsVpcOutput
	ToGetVpcsVpcOutputWithContext(context.Context) GetVpcsVpcOutput
}

type GetVpcsVpcArgs struct {
	// The account ID of VPC.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The associate cen list of VPC.
	AssociateCens GetVpcsVpcAssociateCenArrayInput `pulumi:"associateCens"`
	// The auxiliary cidr block list of VPC.
	AuxiliaryCidrBlocks pulumi.StringArrayInput `pulumi:"auxiliaryCidrBlocks"`
	// The cidr block of VPC.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The create time of VPC.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of VPC.
	Description pulumi.StringInput `pulumi:"description"`
	// The dns server list of VPC.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The nat gateway ID list of VPC.
	NatGatewayIds pulumi.StringArrayInput `pulumi:"natGatewayIds"`
	// The ProjectName of the VPC.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The route table ID list of VPC.
	RouteTableIds pulumi.StringArrayInput `pulumi:"routeTableIds"`
	// The secondary cidr block list of VPC.
	SecondaryCidrBlocks pulumi.StringArrayInput `pulumi:"secondaryCidrBlocks"`
	// The security group ID list of VPC.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The status of VPC.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet ID list of VPC.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Tags.
	Tags GetVpcsVpcTagArrayInput `pulumi:"tags"`
	// The update time of VPC.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The ID of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vpc name to query.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (GetVpcsVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return i.ToGetVpcsVpcOutputWithContext(context.Background())
}

func (i GetVpcsVpcArgs) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcOutput)
}

// GetVpcsVpcArrayInput is an input type that accepts GetVpcsVpcArray and GetVpcsVpcArrayOutput values.
// You can construct a concrete instance of `GetVpcsVpcArrayInput` via:
//
//	GetVpcsVpcArray{ GetVpcsVpcArgs{...} }
type GetVpcsVpcArrayInput interface {
	pulumi.Input

	ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput
	ToGetVpcsVpcArrayOutputWithContext(context.Context) GetVpcsVpcArrayOutput
}

type GetVpcsVpcArray []GetVpcsVpcInput

func (GetVpcsVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return i.ToGetVpcsVpcArrayOutputWithContext(context.Background())
}

func (i GetVpcsVpcArray) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcArrayOutput)
}

type GetVpcsVpcOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutput() GetVpcsVpcOutput {
	return o
}

func (o GetVpcsVpcOutput) ToGetVpcsVpcOutputWithContext(ctx context.Context) GetVpcsVpcOutput {
	return o
}

// The account ID of VPC.
func (o GetVpcsVpcOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.AccountId }).(pulumi.StringOutput)
}

// The associate cen list of VPC.
func (o GetVpcsVpcOutput) AssociateCens() GetVpcsVpcAssociateCenArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []GetVpcsVpcAssociateCen { return v.AssociateCens }).(GetVpcsVpcAssociateCenArrayOutput)
}

// The auxiliary cidr block list of VPC.
func (o GetVpcsVpcOutput) AuxiliaryCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.AuxiliaryCidrBlocks }).(pulumi.StringArrayOutput)
}

// The cidr block of VPC.
func (o GetVpcsVpcOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The create time of VPC.
func (o GetVpcsVpcOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of VPC.
func (o GetVpcsVpcOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Description }).(pulumi.StringOutput)
}

// The dns server list of VPC.
func (o GetVpcsVpcOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// The IPv6 CIDR block of the VPC.
func (o GetVpcsVpcOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The nat gateway ID list of VPC.
func (o GetVpcsVpcOutput) NatGatewayIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.NatGatewayIds }).(pulumi.StringArrayOutput)
}

// The ProjectName of the VPC.
func (o GetVpcsVpcOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The route table ID list of VPC.
func (o GetVpcsVpcOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

// The secondary cidr block list of VPC.
func (o GetVpcsVpcOutput) SecondaryCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.SecondaryCidrBlocks }).(pulumi.StringArrayOutput)
}

// The security group ID list of VPC.
func (o GetVpcsVpcOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The status of VPC.
func (o GetVpcsVpcOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet ID list of VPC.
func (o GetVpcsVpcOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Tags.
func (o GetVpcsVpcOutput) Tags() GetVpcsVpcTagArrayOutput {
	return o.ApplyT(func(v GetVpcsVpc) []GetVpcsVpcTag { return v.Tags }).(GetVpcsVpcTagArrayOutput)
}

// The update time of VPC.
func (o GetVpcsVpcOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The ID of VPC.
func (o GetVpcsVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vpc name to query.
func (o GetVpcsVpcOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpc) string { return v.VpcName }).(pulumi.StringOutput)
}

type GetVpcsVpcArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpc)(nil)).Elem()
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutput() GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) ToGetVpcsVpcArrayOutputWithContext(ctx context.Context) GetVpcsVpcArrayOutput {
	return o
}

func (o GetVpcsVpcArrayOutput) Index(i pulumi.IntInput) GetVpcsVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsVpc {
		return vs[0].([]GetVpcsVpc)[vs[1].(int)]
	}).(GetVpcsVpcOutput)
}

type GetVpcsVpcAssociateCen struct {
	// The ID of CEN.
	CenId string `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId string `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus string `pulumi:"cenStatus"`
}

// GetVpcsVpcAssociateCenInput is an input type that accepts GetVpcsVpcAssociateCenArgs and GetVpcsVpcAssociateCenOutput values.
// You can construct a concrete instance of `GetVpcsVpcAssociateCenInput` via:
//
//	GetVpcsVpcAssociateCenArgs{...}
type GetVpcsVpcAssociateCenInput interface {
	pulumi.Input

	ToGetVpcsVpcAssociateCenOutput() GetVpcsVpcAssociateCenOutput
	ToGetVpcsVpcAssociateCenOutputWithContext(context.Context) GetVpcsVpcAssociateCenOutput
}

type GetVpcsVpcAssociateCenArgs struct {
	// The ID of CEN.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId pulumi.StringInput `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus pulumi.StringInput `pulumi:"cenStatus"`
}

func (GetVpcsVpcAssociateCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpcAssociateCen)(nil)).Elem()
}

func (i GetVpcsVpcAssociateCenArgs) ToGetVpcsVpcAssociateCenOutput() GetVpcsVpcAssociateCenOutput {
	return i.ToGetVpcsVpcAssociateCenOutputWithContext(context.Background())
}

func (i GetVpcsVpcAssociateCenArgs) ToGetVpcsVpcAssociateCenOutputWithContext(ctx context.Context) GetVpcsVpcAssociateCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcAssociateCenOutput)
}

// GetVpcsVpcAssociateCenArrayInput is an input type that accepts GetVpcsVpcAssociateCenArray and GetVpcsVpcAssociateCenArrayOutput values.
// You can construct a concrete instance of `GetVpcsVpcAssociateCenArrayInput` via:
//
//	GetVpcsVpcAssociateCenArray{ GetVpcsVpcAssociateCenArgs{...} }
type GetVpcsVpcAssociateCenArrayInput interface {
	pulumi.Input

	ToGetVpcsVpcAssociateCenArrayOutput() GetVpcsVpcAssociateCenArrayOutput
	ToGetVpcsVpcAssociateCenArrayOutputWithContext(context.Context) GetVpcsVpcAssociateCenArrayOutput
}

type GetVpcsVpcAssociateCenArray []GetVpcsVpcAssociateCenInput

func (GetVpcsVpcAssociateCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpcAssociateCen)(nil)).Elem()
}

func (i GetVpcsVpcAssociateCenArray) ToGetVpcsVpcAssociateCenArrayOutput() GetVpcsVpcAssociateCenArrayOutput {
	return i.ToGetVpcsVpcAssociateCenArrayOutputWithContext(context.Background())
}

func (i GetVpcsVpcAssociateCenArray) ToGetVpcsVpcAssociateCenArrayOutputWithContext(ctx context.Context) GetVpcsVpcAssociateCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcAssociateCenArrayOutput)
}

type GetVpcsVpcAssociateCenOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcAssociateCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpcAssociateCen)(nil)).Elem()
}

func (o GetVpcsVpcAssociateCenOutput) ToGetVpcsVpcAssociateCenOutput() GetVpcsVpcAssociateCenOutput {
	return o
}

func (o GetVpcsVpcAssociateCenOutput) ToGetVpcsVpcAssociateCenOutputWithContext(ctx context.Context) GetVpcsVpcAssociateCenOutput {
	return o
}

// The ID of CEN.
func (o GetVpcsVpcAssociateCenOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcAssociateCen) string { return v.CenId }).(pulumi.StringOutput)
}

// The owner ID of CEN.
func (o GetVpcsVpcAssociateCenOutput) CenOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcAssociateCen) string { return v.CenOwnerId }).(pulumi.StringOutput)
}

// The status of CEN.
func (o GetVpcsVpcAssociateCenOutput) CenStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcAssociateCen) string { return v.CenStatus }).(pulumi.StringOutput)
}

type GetVpcsVpcAssociateCenArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcAssociateCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpcAssociateCen)(nil)).Elem()
}

func (o GetVpcsVpcAssociateCenArrayOutput) ToGetVpcsVpcAssociateCenArrayOutput() GetVpcsVpcAssociateCenArrayOutput {
	return o
}

func (o GetVpcsVpcAssociateCenArrayOutput) ToGetVpcsVpcAssociateCenArrayOutputWithContext(ctx context.Context) GetVpcsVpcAssociateCenArrayOutput {
	return o
}

func (o GetVpcsVpcAssociateCenArrayOutput) Index(i pulumi.IntInput) GetVpcsVpcAssociateCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsVpcAssociateCen {
		return vs[0].([]GetVpcsVpcAssociateCen)[vs[1].(int)]
	}).(GetVpcsVpcAssociateCenOutput)
}

type GetVpcsVpcTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// GetVpcsVpcTagInput is an input type that accepts GetVpcsVpcTagArgs and GetVpcsVpcTagOutput values.
// You can construct a concrete instance of `GetVpcsVpcTagInput` via:
//
//	GetVpcsVpcTagArgs{...}
type GetVpcsVpcTagInput interface {
	pulumi.Input

	ToGetVpcsVpcTagOutput() GetVpcsVpcTagOutput
	ToGetVpcsVpcTagOutputWithContext(context.Context) GetVpcsVpcTagOutput
}

type GetVpcsVpcTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVpcsVpcTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpcTag)(nil)).Elem()
}

func (i GetVpcsVpcTagArgs) ToGetVpcsVpcTagOutput() GetVpcsVpcTagOutput {
	return i.ToGetVpcsVpcTagOutputWithContext(context.Background())
}

func (i GetVpcsVpcTagArgs) ToGetVpcsVpcTagOutputWithContext(ctx context.Context) GetVpcsVpcTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcTagOutput)
}

// GetVpcsVpcTagArrayInput is an input type that accepts GetVpcsVpcTagArray and GetVpcsVpcTagArrayOutput values.
// You can construct a concrete instance of `GetVpcsVpcTagArrayInput` via:
//
//	GetVpcsVpcTagArray{ GetVpcsVpcTagArgs{...} }
type GetVpcsVpcTagArrayInput interface {
	pulumi.Input

	ToGetVpcsVpcTagArrayOutput() GetVpcsVpcTagArrayOutput
	ToGetVpcsVpcTagArrayOutputWithContext(context.Context) GetVpcsVpcTagArrayOutput
}

type GetVpcsVpcTagArray []GetVpcsVpcTagInput

func (GetVpcsVpcTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpcTag)(nil)).Elem()
}

func (i GetVpcsVpcTagArray) ToGetVpcsVpcTagArrayOutput() GetVpcsVpcTagArrayOutput {
	return i.ToGetVpcsVpcTagArrayOutputWithContext(context.Background())
}

func (i GetVpcsVpcTagArray) ToGetVpcsVpcTagArrayOutputWithContext(ctx context.Context) GetVpcsVpcTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsVpcTagArrayOutput)
}

type GetVpcsVpcTagOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsVpcTag)(nil)).Elem()
}

func (o GetVpcsVpcTagOutput) ToGetVpcsVpcTagOutput() GetVpcsVpcTagOutput {
	return o
}

func (o GetVpcsVpcTagOutput) ToGetVpcsVpcTagOutputWithContext(ctx context.Context) GetVpcsVpcTagOutput {
	return o
}

// The Key of Tags.
func (o GetVpcsVpcTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o GetVpcsVpcTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsVpcTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVpcsVpcTagArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsVpcTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsVpcTag)(nil)).Elem()
}

func (o GetVpcsVpcTagArrayOutput) ToGetVpcsVpcTagArrayOutput() GetVpcsVpcTagArrayOutput {
	return o
}

func (o GetVpcsVpcTagArrayOutput) ToGetVpcsVpcTagArrayOutputWithContext(ctx context.Context) GetVpcsVpcTagArrayOutput {
	return o
}

func (o GetVpcsVpcTagArrayOutput) Index(i pulumi.IntInput) GetVpcsVpcTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsVpcTag {
		return vs[0].([]GetVpcsVpcTag)[vs[1].(int)]
	}).(GetVpcsVpcTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogTagInput)(nil)).Elem(), FlowLogTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogTagArrayInput)(nil)).Elem(), FlowLogTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogsFlowLogInput)(nil)).Elem(), FlowLogsFlowLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogsFlowLogArrayInput)(nil)).Elem(), FlowLogsFlowLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogsFlowLogTagInput)(nil)).Elem(), FlowLogsFlowLogTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogsFlowLogTagArrayInput)(nil)).Elem(), FlowLogsFlowLogTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogsTagInput)(nil)).Elem(), FlowLogsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLogsTagArrayInput)(nil)).Elem(), FlowLogsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipTagInput)(nil)).Elem(), HaVipTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipTagArrayInput)(nil)).Elem(), HaVipTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipsHaVipInput)(nil)).Elem(), HaVipsHaVipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipsHaVipArrayInput)(nil)).Elem(), HaVipsHaVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipsHaVipTagInput)(nil)).Elem(), HaVipsHaVipTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipsHaVipTagArrayInput)(nil)).Elem(), HaVipsHaVipTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipsTagInput)(nil)).Elem(), HaVipsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipsTagArrayInput)(nil)).Elem(), HaVipsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AddressBandwidthsIpv6AddressBandwidthInput)(nil)).Elem(), Ipv6AddressBandwidthsIpv6AddressBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AddressBandwidthsIpv6AddressBandwidthArrayInput)(nil)).Elem(), Ipv6AddressBandwidthsIpv6AddressBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AddressesIpv6AddressInput)(nil)).Elem(), Ipv6AddressesIpv6AddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AddressesIpv6AddressArrayInput)(nil)).Elem(), Ipv6AddressesIpv6AddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6GatewaysIpv6GatewayInput)(nil)).Elem(), Ipv6GatewaysIpv6GatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6GatewaysIpv6GatewayArrayInput)(nil)).Elem(), Ipv6GatewaysIpv6GatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEgressAclEntryInput)(nil)).Elem(), NetworkAclEgressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEgressAclEntryArrayInput)(nil)).Elem(), NetworkAclEgressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclIngressAclEntryInput)(nil)).Elem(), NetworkAclIngressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclIngressAclEntryArrayInput)(nil)).Elem(), NetworkAclIngressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclTagInput)(nil)).Elem(), NetworkAclTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclTagArrayInput)(nil)).Elem(), NetworkAclTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclInput)(nil)).Elem(), NetworkAclsNetworkAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclArrayInput)(nil)).Elem(), NetworkAclsNetworkAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclEgressAclEntryInput)(nil)).Elem(), NetworkAclsNetworkAclEgressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclEgressAclEntryArrayInput)(nil)).Elem(), NetworkAclsNetworkAclEgressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclIngressAclEntryInput)(nil)).Elem(), NetworkAclsNetworkAclIngressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclIngressAclEntryArrayInput)(nil)).Elem(), NetworkAclsNetworkAclIngressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclResourceInput)(nil)).Elem(), NetworkAclsNetworkAclResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclResourceArrayInput)(nil)).Elem(), NetworkAclsNetworkAclResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclTagInput)(nil)).Elem(), NetworkAclsNetworkAclTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclTagArrayInput)(nil)).Elem(), NetworkAclsNetworkAclTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsTagInput)(nil)).Elem(), NetworkAclsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsTagArrayInput)(nil)).Elem(), NetworkAclsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceTagInput)(nil)).Elem(), NetworkInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceTagArrayInput)(nil)).Elem(), NetworkInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfaceInput)(nil)).Elem(), NetworkInterfacesNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfaceArrayInput)(nil)).Elem(), NetworkInterfacesNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetInput)(nil)).Elem(), NetworkInterfacesNetworkInterfacePrivateIpSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput)(nil)).Elem(), NetworkInterfacesNetworkInterfacePrivateIpSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput)(nil)).Elem(), NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput)(nil)).Elem(), NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfaceTagInput)(nil)).Elem(), NetworkInterfacesNetworkInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfaceTagArrayInput)(nil)).Elem(), NetworkInterfacesNetworkInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesTagInput)(nil)).Elem(), NetworkInterfacesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesTagArrayInput)(nil)).Elem(), NetworkInterfacesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListPrefixListAssociationInput)(nil)).Elem(), PrefixListPrefixListAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListPrefixListAssociationArrayInput)(nil)).Elem(), PrefixListPrefixListAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListPrefixListEntryInput)(nil)).Elem(), PrefixListPrefixListEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListPrefixListEntryArrayInput)(nil)).Elem(), PrefixListPrefixListEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListTagInput)(nil)).Elem(), PrefixListTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListTagArrayInput)(nil)).Elem(), PrefixListTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListInput)(nil)).Elem(), PrefixListsPrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListArrayInput)(nil)).Elem(), PrefixListsPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListPrefixListAssociationInput)(nil)).Elem(), PrefixListsPrefixListPrefixListAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListPrefixListAssociationArrayInput)(nil)).Elem(), PrefixListsPrefixListPrefixListAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListPrefixListEntryInput)(nil)).Elem(), PrefixListsPrefixListPrefixListEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListPrefixListEntryArrayInput)(nil)).Elem(), PrefixListsPrefixListPrefixListEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsTagFilterInput)(nil)).Elem(), PrefixListsTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsTagFilterArrayInput)(nil)).Elem(), PrefixListsTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesRouteEntryInput)(nil)).Elem(), RouteEntriesRouteEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesRouteEntryArrayInput)(nil)).Elem(), RouteEntriesRouteEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableTagInput)(nil)).Elem(), RouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTableTagArrayInput)(nil)).Elem(), RouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableInput)(nil)).Elem(), RouteTablesRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableArrayInput)(nil)).Elem(), RouteTablesRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableTagInput)(nil)).Elem(), RouteTablesRouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableTagArrayInput)(nil)).Elem(), RouteTablesRouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesTagInput)(nil)).Elem(), RouteTablesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesTagArrayInput)(nil)).Elem(), RouteTablesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRulesSecurityGroupRuleInput)(nil)).Elem(), SecurityGroupRulesSecurityGroupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRulesSecurityGroupRuleArrayInput)(nil)).Elem(), SecurityGroupRulesSecurityGroupRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupTagInput)(nil)).Elem(), SecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupTagArrayInput)(nil)).Elem(), SecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsSecurityGroupInput)(nil)).Elem(), SecurityGroupsSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsSecurityGroupArrayInput)(nil)).Elem(), SecurityGroupsSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsSecurityGroupTagInput)(nil)).Elem(), SecurityGroupsSecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsSecurityGroupTagArrayInput)(nil)).Elem(), SecurityGroupsSecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsTagInput)(nil)).Elem(), SecurityGroupsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsTagArrayInput)(nil)).Elem(), SecurityGroupsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetTagInput)(nil)).Elem(), SubnetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetTagArrayInput)(nil)).Elem(), SubnetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetInput)(nil)).Elem(), SubnetsSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetArrayInput)(nil)).Elem(), SubnetsSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetRouteTableInput)(nil)).Elem(), SubnetsSubnetRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetTagInput)(nil)).Elem(), SubnetsSubnetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetTagArrayInput)(nil)).Elem(), SubnetsSubnetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsTagInput)(nil)).Elem(), SubnetsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsTagArrayInput)(nil)).Elem(), SubnetsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterRulesTagInput)(nil)).Elem(), TrafficMirrorFilterRulesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterRulesTagArrayInput)(nil)).Elem(), TrafficMirrorFilterRulesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterRulesTrafficMirrorFilterRuleInput)(nil)).Elem(), TrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayInput)(nil)).Elem(), TrafficMirrorFilterRulesTrafficMirrorFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterTagInput)(nil)).Elem(), TrafficMirrorFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFilterTagArrayInput)(nil)).Elem(), TrafficMirrorFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTagInput)(nil)).Elem(), TrafficMirrorFiltersTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTagArrayInput)(nil)).Elem(), TrafficMirrorFiltersTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterInput)(nil)).Elem(), TrafficMirrorFiltersTrafficMirrorFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterArrayInput)(nil)).Elem(), TrafficMirrorFiltersTrafficMirrorFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput)(nil)).Elem(), TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput)(nil)).Elem(), TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput)(nil)).Elem(), TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput)(nil)).Elem(), TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterTagInput)(nil)).Elem(), TrafficMirrorFiltersTrafficMirrorFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorFiltersTrafficMirrorFilterTagArrayInput)(nil)).Elem(), TrafficMirrorFiltersTrafficMirrorFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorSessionTagInput)(nil)).Elem(), TrafficMirrorSessionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorSessionTagArrayInput)(nil)).Elem(), TrafficMirrorSessionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorSessionsTagInput)(nil)).Elem(), TrafficMirrorSessionsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorSessionsTagArrayInput)(nil)).Elem(), TrafficMirrorSessionsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorSessionsTrafficMirrorSessionInput)(nil)).Elem(), TrafficMirrorSessionsTrafficMirrorSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorSessionsTrafficMirrorSessionArrayInput)(nil)).Elem(), TrafficMirrorSessionsTrafficMirrorSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorSessionsTrafficMirrorSessionTagInput)(nil)).Elem(), TrafficMirrorSessionsTrafficMirrorSessionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorSessionsTrafficMirrorSessionTagArrayInput)(nil)).Elem(), TrafficMirrorSessionsTrafficMirrorSessionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorTargetTagInput)(nil)).Elem(), TrafficMirrorTargetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorTargetTagArrayInput)(nil)).Elem(), TrafficMirrorTargetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorTargetsTagInput)(nil)).Elem(), TrafficMirrorTargetsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorTargetsTagArrayInput)(nil)).Elem(), TrafficMirrorTargetsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorTargetsTrafficMirrorTargetInput)(nil)).Elem(), TrafficMirrorTargetsTrafficMirrorTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorTargetsTrafficMirrorTargetArrayInput)(nil)).Elem(), TrafficMirrorTargetsTrafficMirrorTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorTargetsTrafficMirrorTargetTagInput)(nil)).Elem(), TrafficMirrorTargetsTrafficMirrorTargetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrafficMirrorTargetsTrafficMirrorTargetTagArrayInput)(nil)).Elem(), TrafficMirrorTargetsTrafficMirrorTargetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAssociateCenInput)(nil)).Elem(), VpcAssociateCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAssociateCenArrayInput)(nil)).Elem(), VpcAssociateCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcTagInput)(nil)).Elem(), VpcTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcTagArrayInput)(nil)).Elem(), VpcTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsTagInput)(nil)).Elem(), VpcsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsTagArrayInput)(nil)).Elem(), VpcsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInput)(nil)).Elem(), VpcsVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcArrayInput)(nil)).Elem(), VpcsVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcAssociateCenInput)(nil)).Elem(), VpcsVpcAssociateCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcAssociateCenArrayInput)(nil)).Elem(), VpcsVpcAssociateCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcTagInput)(nil)).Elem(), VpcsVpcTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcTagArrayInput)(nil)).Elem(), VpcsVpcTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsFlowLogInput)(nil)).Elem(), GetFlowLogsFlowLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsFlowLogArrayInput)(nil)).Elem(), GetFlowLogsFlowLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsFlowLogTagInput)(nil)).Elem(), GetFlowLogsFlowLogTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsFlowLogTagArrayInput)(nil)).Elem(), GetFlowLogsFlowLogTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsTagInput)(nil)).Elem(), GetFlowLogsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlowLogsTagArrayInput)(nil)).Elem(), GetFlowLogsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVipsHaVipInput)(nil)).Elem(), GetHaVipsHaVipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVipsHaVipArrayInput)(nil)).Elem(), GetHaVipsHaVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVipsHaVipTagInput)(nil)).Elem(), GetHaVipsHaVipTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVipsHaVipTagArrayInput)(nil)).Elem(), GetHaVipsHaVipTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVipsTagInput)(nil)).Elem(), GetHaVipsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHaVipsTagArrayInput)(nil)).Elem(), GetHaVipsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6AddressBandwidthsIpv6AddressBandwidthInput)(nil)).Elem(), GetIpv6AddressBandwidthsIpv6AddressBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayInput)(nil)).Elem(), GetIpv6AddressBandwidthsIpv6AddressBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6AddressesIpv6AddressInput)(nil)).Elem(), GetIpv6AddressesIpv6AddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6AddressesIpv6AddressArrayInput)(nil)).Elem(), GetIpv6AddressesIpv6AddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6GatewaysIpv6GatewayInput)(nil)).Elem(), GetIpv6GatewaysIpv6GatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpv6GatewaysIpv6GatewayArrayInput)(nil)).Elem(), GetIpv6GatewaysIpv6GatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclInput)(nil)).Elem(), GetNetworkAclsNetworkAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclArrayInput)(nil)).Elem(), GetNetworkAclsNetworkAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclEgressAclEntryInput)(nil)).Elem(), GetNetworkAclsNetworkAclEgressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclEgressAclEntryArrayInput)(nil)).Elem(), GetNetworkAclsNetworkAclEgressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclIngressAclEntryInput)(nil)).Elem(), GetNetworkAclsNetworkAclIngressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclIngressAclEntryArrayInput)(nil)).Elem(), GetNetworkAclsNetworkAclIngressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclResourceInput)(nil)).Elem(), GetNetworkAclsNetworkAclResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclResourceArrayInput)(nil)).Elem(), GetNetworkAclsNetworkAclResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclTagInput)(nil)).Elem(), GetNetworkAclsNetworkAclTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsNetworkAclTagArrayInput)(nil)).Elem(), GetNetworkAclsNetworkAclTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsTagInput)(nil)).Elem(), GetNetworkAclsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAclsTagArrayInput)(nil)).Elem(), GetNetworkAclsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesNetworkInterfaceInput)(nil)).Elem(), GetNetworkInterfacesNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesNetworkInterfaceArrayInput)(nil)).Elem(), GetNetworkInterfacesNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesNetworkInterfacePrivateIpSetInput)(nil)).Elem(), GetNetworkInterfacesNetworkInterfacePrivateIpSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayInput)(nil)).Elem(), GetNetworkInterfacesNetworkInterfacePrivateIpSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput)(nil)).Elem(), GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput)(nil)).Elem(), GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesNetworkInterfaceTagInput)(nil)).Elem(), GetNetworkInterfacesNetworkInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesNetworkInterfaceTagArrayInput)(nil)).Elem(), GetNetworkInterfacesNetworkInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesTagInput)(nil)).Elem(), GetNetworkInterfacesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkInterfacesTagArrayInput)(nil)).Elem(), GetNetworkInterfacesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsPrefixListInput)(nil)).Elem(), GetPrefixListsPrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsPrefixListArrayInput)(nil)).Elem(), GetPrefixListsPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsPrefixListPrefixListAssociationInput)(nil)).Elem(), GetPrefixListsPrefixListPrefixListAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsPrefixListPrefixListAssociationArrayInput)(nil)).Elem(), GetPrefixListsPrefixListPrefixListAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsPrefixListPrefixListEntryInput)(nil)).Elem(), GetPrefixListsPrefixListPrefixListEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsPrefixListPrefixListEntryArrayInput)(nil)).Elem(), GetPrefixListsPrefixListPrefixListEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsTagFilterInput)(nil)).Elem(), GetPrefixListsTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixListsTagFilterArrayInput)(nil)).Elem(), GetPrefixListsTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteEntriesRouteEntryInput)(nil)).Elem(), GetRouteEntriesRouteEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteEntriesRouteEntryArrayInput)(nil)).Elem(), GetRouteEntriesRouteEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableInput)(nil)).Elem(), GetRouteTablesRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableArrayInput)(nil)).Elem(), GetRouteTablesRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableTagInput)(nil)).Elem(), GetRouteTablesRouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesRouteTableTagArrayInput)(nil)).Elem(), GetRouteTablesRouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesTagInput)(nil)).Elem(), GetRouteTablesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRouteTablesTagArrayInput)(nil)).Elem(), GetRouteTablesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupRulesSecurityGroupRuleInput)(nil)).Elem(), GetSecurityGroupRulesSecurityGroupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupRulesSecurityGroupRuleArrayInput)(nil)).Elem(), GetSecurityGroupRulesSecurityGroupRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupArrayInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupTagInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsSecurityGroupTagArrayInput)(nil)).Elem(), GetSecurityGroupsSecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsTagInput)(nil)).Elem(), GetSecurityGroupsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityGroupsTagArrayInput)(nil)).Elem(), GetSecurityGroupsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetInput)(nil)).Elem(), GetSubnetsSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetArrayInput)(nil)).Elem(), GetSubnetsSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetRouteTableInput)(nil)).Elem(), GetSubnetsSubnetRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetTagInput)(nil)).Elem(), GetSubnetsSubnetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsSubnetTagArrayInput)(nil)).Elem(), GetSubnetsSubnetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsTagInput)(nil)).Elem(), GetSubnetsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubnetsTagArrayInput)(nil)).Elem(), GetSubnetsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFilterRulesTagInput)(nil)).Elem(), GetTrafficMirrorFilterRulesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFilterRulesTagArrayInput)(nil)).Elem(), GetTrafficMirrorFilterRulesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleInput)(nil)).Elem(), GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayInput)(nil)).Elem(), GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTagInput)(nil)).Elem(), GetTrafficMirrorFiltersTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTagArrayInput)(nil)).Elem(), GetTrafficMirrorFiltersTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterInput)(nil)).Elem(), GetTrafficMirrorFiltersTrafficMirrorFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterArrayInput)(nil)).Elem(), GetTrafficMirrorFiltersTrafficMirrorFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleInput)(nil)).Elem(), GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayInput)(nil)).Elem(), GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleInput)(nil)).Elem(), GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayInput)(nil)).Elem(), GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterTagInput)(nil)).Elem(), GetTrafficMirrorFiltersTrafficMirrorFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayInput)(nil)).Elem(), GetTrafficMirrorFiltersTrafficMirrorFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorSessionsTagInput)(nil)).Elem(), GetTrafficMirrorSessionsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorSessionsTagArrayInput)(nil)).Elem(), GetTrafficMirrorSessionsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorSessionsTrafficMirrorSessionInput)(nil)).Elem(), GetTrafficMirrorSessionsTrafficMirrorSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorSessionsTrafficMirrorSessionArrayInput)(nil)).Elem(), GetTrafficMirrorSessionsTrafficMirrorSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorSessionsTrafficMirrorSessionTagInput)(nil)).Elem(), GetTrafficMirrorSessionsTrafficMirrorSessionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayInput)(nil)).Elem(), GetTrafficMirrorSessionsTrafficMirrorSessionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorTargetsTagInput)(nil)).Elem(), GetTrafficMirrorTargetsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorTargetsTagArrayInput)(nil)).Elem(), GetTrafficMirrorTargetsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorTargetsTrafficMirrorTargetInput)(nil)).Elem(), GetTrafficMirrorTargetsTrafficMirrorTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorTargetsTrafficMirrorTargetArrayInput)(nil)).Elem(), GetTrafficMirrorTargetsTrafficMirrorTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorTargetsTrafficMirrorTargetTagInput)(nil)).Elem(), GetTrafficMirrorTargetsTrafficMirrorTargetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayInput)(nil)).Elem(), GetTrafficMirrorTargetsTrafficMirrorTargetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsTagInput)(nil)).Elem(), GetVpcsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsTagArrayInput)(nil)).Elem(), GetVpcsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcInput)(nil)).Elem(), GetVpcsVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcArrayInput)(nil)).Elem(), GetVpcsVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcAssociateCenInput)(nil)).Elem(), GetVpcsVpcAssociateCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcAssociateCenArrayInput)(nil)).Elem(), GetVpcsVpcAssociateCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcTagInput)(nil)).Elem(), GetVpcsVpcTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcsVpcTagArrayInput)(nil)).Elem(), GetVpcsVpcTagArray{})
	pulumi.RegisterOutputType(FlowLogTagOutput{})
	pulumi.RegisterOutputType(FlowLogTagArrayOutput{})
	pulumi.RegisterOutputType(FlowLogsFlowLogOutput{})
	pulumi.RegisterOutputType(FlowLogsFlowLogArrayOutput{})
	pulumi.RegisterOutputType(FlowLogsFlowLogTagOutput{})
	pulumi.RegisterOutputType(FlowLogsFlowLogTagArrayOutput{})
	pulumi.RegisterOutputType(FlowLogsTagOutput{})
	pulumi.RegisterOutputType(FlowLogsTagArrayOutput{})
	pulumi.RegisterOutputType(HaVipTagOutput{})
	pulumi.RegisterOutputType(HaVipTagArrayOutput{})
	pulumi.RegisterOutputType(HaVipsHaVipOutput{})
	pulumi.RegisterOutputType(HaVipsHaVipArrayOutput{})
	pulumi.RegisterOutputType(HaVipsHaVipTagOutput{})
	pulumi.RegisterOutputType(HaVipsHaVipTagArrayOutput{})
	pulumi.RegisterOutputType(HaVipsTagOutput{})
	pulumi.RegisterOutputType(HaVipsTagArrayOutput{})
	pulumi.RegisterOutputType(Ipv6AddressBandwidthsIpv6AddressBandwidthOutput{})
	pulumi.RegisterOutputType(Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput{})
	pulumi.RegisterOutputType(Ipv6AddressesIpv6AddressOutput{})
	pulumi.RegisterOutputType(Ipv6AddressesIpv6AddressArrayOutput{})
	pulumi.RegisterOutputType(Ipv6GatewaysIpv6GatewayOutput{})
	pulumi.RegisterOutputType(Ipv6GatewaysIpv6GatewayArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclTagOutput{})
	pulumi.RegisterOutputType(NetworkAclTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclEgressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclEgressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclIngressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclIngressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclResourceOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclResourceArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclTagOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsTagOutput{})
	pulumi.RegisterOutputType(NetworkAclsTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTagOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfacePrivateIpSetOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfaceTagOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesTagOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesTagArrayOutput{})
	pulumi.RegisterOutputType(PrefixListPrefixListAssociationOutput{})
	pulumi.RegisterOutputType(PrefixListPrefixListAssociationArrayOutput{})
	pulumi.RegisterOutputType(PrefixListPrefixListEntryOutput{})
	pulumi.RegisterOutputType(PrefixListPrefixListEntryArrayOutput{})
	pulumi.RegisterOutputType(PrefixListTagOutput{})
	pulumi.RegisterOutputType(PrefixListTagArrayOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListArrayOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListPrefixListAssociationOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListPrefixListAssociationArrayOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListPrefixListEntryOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListPrefixListEntryArrayOutput{})
	pulumi.RegisterOutputType(PrefixListsTagFilterOutput{})
	pulumi.RegisterOutputType(PrefixListsTagFilterArrayOutput{})
	pulumi.RegisterOutputType(RouteEntriesRouteEntryOutput{})
	pulumi.RegisterOutputType(RouteEntriesRouteEntryArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTagOutput{})
	pulumi.RegisterOutputType(RouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableArrayOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableTagOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(RouteTablesTagOutput{})
	pulumi.RegisterOutputType(RouteTablesTagArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupRulesSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(SecurityGroupRulesSecurityGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupTagOutput{})
	pulumi.RegisterOutputType(SecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupsSecurityGroupOutput{})
	pulumi.RegisterOutputType(SecurityGroupsSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupsSecurityGroupTagOutput{})
	pulumi.RegisterOutputType(SecurityGroupsSecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupsTagOutput{})
	pulumi.RegisterOutputType(SecurityGroupsTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetTagOutput{})
	pulumi.RegisterOutputType(SubnetTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetRouteTableOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetTagOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetsTagOutput{})
	pulumi.RegisterOutputType(SubnetsTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRulesTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRulesTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTrafficMirrorFilterOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTrafficMirrorFilterArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTrafficMirrorFilterTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorSessionTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorSessionTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorSessionsTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorSessionsTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorSessionsTrafficMirrorSessionOutput{})
	pulumi.RegisterOutputType(TrafficMirrorSessionsTrafficMirrorSessionArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorSessionsTrafficMirrorSessionTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorTargetTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorTargetTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorTargetsTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorTargetsTagArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorTargetsTrafficMirrorTargetOutput{})
	pulumi.RegisterOutputType(TrafficMirrorTargetsTrafficMirrorTargetArrayOutput{})
	pulumi.RegisterOutputType(TrafficMirrorTargetsTrafficMirrorTargetTagOutput{})
	pulumi.RegisterOutputType(TrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput{})
	pulumi.RegisterOutputType(VpcAssociateCenOutput{})
	pulumi.RegisterOutputType(VpcAssociateCenArrayOutput{})
	pulumi.RegisterOutputType(VpcTagOutput{})
	pulumi.RegisterOutputType(VpcTagArrayOutput{})
	pulumi.RegisterOutputType(VpcsTagOutput{})
	pulumi.RegisterOutputType(VpcsTagArrayOutput{})
	pulumi.RegisterOutputType(VpcsVpcOutput{})
	pulumi.RegisterOutputType(VpcsVpcArrayOutput{})
	pulumi.RegisterOutputType(VpcsVpcAssociateCenOutput{})
	pulumi.RegisterOutputType(VpcsVpcAssociateCenArrayOutput{})
	pulumi.RegisterOutputType(VpcsVpcTagOutput{})
	pulumi.RegisterOutputType(VpcsVpcTagArrayOutput{})
	pulumi.RegisterOutputType(GetFlowLogsFlowLogOutput{})
	pulumi.RegisterOutputType(GetFlowLogsFlowLogArrayOutput{})
	pulumi.RegisterOutputType(GetFlowLogsFlowLogTagOutput{})
	pulumi.RegisterOutputType(GetFlowLogsFlowLogTagArrayOutput{})
	pulumi.RegisterOutputType(GetFlowLogsTagOutput{})
	pulumi.RegisterOutputType(GetFlowLogsTagArrayOutput{})
	pulumi.RegisterOutputType(GetHaVipsHaVipOutput{})
	pulumi.RegisterOutputType(GetHaVipsHaVipArrayOutput{})
	pulumi.RegisterOutputType(GetHaVipsHaVipTagOutput{})
	pulumi.RegisterOutputType(GetHaVipsHaVipTagArrayOutput{})
	pulumi.RegisterOutputType(GetHaVipsTagOutput{})
	pulumi.RegisterOutputType(GetHaVipsTagArrayOutput{})
	pulumi.RegisterOutputType(GetIpv6AddressBandwidthsIpv6AddressBandwidthOutput{})
	pulumi.RegisterOutputType(GetIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput{})
	pulumi.RegisterOutputType(GetIpv6AddressesIpv6AddressOutput{})
	pulumi.RegisterOutputType(GetIpv6AddressesIpv6AddressArrayOutput{})
	pulumi.RegisterOutputType(GetIpv6GatewaysIpv6GatewayOutput{})
	pulumi.RegisterOutputType(GetIpv6GatewaysIpv6GatewayArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclEgressAclEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclEgressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclIngressAclEntryOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclIngressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclResourceOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclResourceArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclTagOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsNetworkAclTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsTagOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesNetworkInterfacePrivateIpSetOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesNetworkInterfaceTagOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesNetworkInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesTagOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesTagArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixListsPrefixListOutput{})
	pulumi.RegisterOutputType(GetPrefixListsPrefixListArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixListsPrefixListPrefixListAssociationOutput{})
	pulumi.RegisterOutputType(GetPrefixListsPrefixListPrefixListAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixListsPrefixListPrefixListEntryOutput{})
	pulumi.RegisterOutputType(GetPrefixListsPrefixListPrefixListEntryArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixListsTagFilterOutput{})
	pulumi.RegisterOutputType(GetPrefixListsTagFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteEntriesRouteEntryOutput{})
	pulumi.RegisterOutputType(GetRouteEntriesRouteEntryArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableTagOutput{})
	pulumi.RegisterOutputType(GetRouteTablesRouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesTagOutput{})
	pulumi.RegisterOutputType(GetRouteTablesTagArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupRulesSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupRulesSecurityGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupTagOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsSecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsTagOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsTagArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetRouteTableOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetTagOutput{})
	pulumi.RegisterOutputType(GetSubnetsSubnetTagArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetsTagOutput{})
	pulumi.RegisterOutputType(GetSubnetsTagArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFilterRulesTagOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFilterRulesTagArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTagOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTagArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTrafficMirrorFilterOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTrafficMirrorFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTrafficMirrorFilterEgressFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTrafficMirrorFilterIngressFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTrafficMirrorFilterTagOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorFiltersTrafficMirrorFilterTagArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsTagOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsTagArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsTrafficMirrorSessionOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsTrafficMirrorSessionTagOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsTrafficMirrorSessionTagArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorTargetsTagOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorTargetsTagArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorTargetsTrafficMirrorTargetOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorTargetsTrafficMirrorTargetTagOutput{})
	pulumi.RegisterOutputType(GetTrafficMirrorTargetsTrafficMirrorTargetTagArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsTagOutput{})
	pulumi.RegisterOutputType(GetVpcsTagArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcAssociateCenOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcAssociateCenArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcTagOutput{})
	pulumi.RegisterOutputType(GetVpcsVpcTagArrayOutput{})
}
