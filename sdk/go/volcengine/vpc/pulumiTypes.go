// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type HaVipsHaVip struct {
	// The account id of the Ha Vip.
	AccountId string `pulumi:"accountId"`
	// The associated eip address of the Ha Vip.
	AssociatedEipAddress string `pulumi:"associatedEipAddress"`
	// The associated eip id of the Ha Vip.
	AssociatedEipId string `pulumi:"associatedEipId"`
	// The associated instance ids of the Ha Vip.
	AssociatedInstanceIds []string `pulumi:"associatedInstanceIds"`
	// The associated instance type of the Ha Vip.
	AssociatedInstanceType string `pulumi:"associatedInstanceType"`
	// The create time of the Ha Vip.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the Ha Vip.
	Description string `pulumi:"description"`
	// The id of the Ha Vip.
	HaVipId string `pulumi:"haVipId"`
	// The name of Ha Vip.
	HaVipName string `pulumi:"haVipName"`
	// The id of the Ha Vip.
	Id string `pulumi:"id"`
	// The ip address of Ha Vip.
	IpAddress string `pulumi:"ipAddress"`
	// The master instance id of the Ha Vip.
	MasterInstanceId string `pulumi:"masterInstanceId"`
	// The project name of Ha Vip.
	ProjectName string `pulumi:"projectName"`
	// The status of Ha Vip.
	Status string `pulumi:"status"`
	// The id of subnet.
	SubnetId string `pulumi:"subnetId"`
	// The update time of the Ha Vip.
	UpdatedAt string `pulumi:"updatedAt"`
	// The id of vpc.
	VpcId string `pulumi:"vpcId"`
}

// HaVipsHaVipInput is an input type that accepts HaVipsHaVipArgs and HaVipsHaVipOutput values.
// You can construct a concrete instance of `HaVipsHaVipInput` via:
//
//	HaVipsHaVipArgs{...}
type HaVipsHaVipInput interface {
	pulumi.Input

	ToHaVipsHaVipOutput() HaVipsHaVipOutput
	ToHaVipsHaVipOutputWithContext(context.Context) HaVipsHaVipOutput
}

type HaVipsHaVipArgs struct {
	// The account id of the Ha Vip.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The associated eip address of the Ha Vip.
	AssociatedEipAddress pulumi.StringInput `pulumi:"associatedEipAddress"`
	// The associated eip id of the Ha Vip.
	AssociatedEipId pulumi.StringInput `pulumi:"associatedEipId"`
	// The associated instance ids of the Ha Vip.
	AssociatedInstanceIds pulumi.StringArrayInput `pulumi:"associatedInstanceIds"`
	// The associated instance type of the Ha Vip.
	AssociatedInstanceType pulumi.StringInput `pulumi:"associatedInstanceType"`
	// The create time of the Ha Vip.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the Ha Vip.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the Ha Vip.
	HaVipId pulumi.StringInput `pulumi:"haVipId"`
	// The name of Ha Vip.
	HaVipName pulumi.StringInput `pulumi:"haVipName"`
	// The id of the Ha Vip.
	Id pulumi.StringInput `pulumi:"id"`
	// The ip address of Ha Vip.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The master instance id of the Ha Vip.
	MasterInstanceId pulumi.StringInput `pulumi:"masterInstanceId"`
	// The project name of Ha Vip.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of Ha Vip.
	Status pulumi.StringInput `pulumi:"status"`
	// The id of subnet.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The update time of the Ha Vip.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The id of vpc.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (HaVipsHaVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipsHaVip)(nil)).Elem()
}

func (i HaVipsHaVipArgs) ToHaVipsHaVipOutput() HaVipsHaVipOutput {
	return i.ToHaVipsHaVipOutputWithContext(context.Background())
}

func (i HaVipsHaVipArgs) ToHaVipsHaVipOutputWithContext(ctx context.Context) HaVipsHaVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipsHaVipOutput)
}

// HaVipsHaVipArrayInput is an input type that accepts HaVipsHaVipArray and HaVipsHaVipArrayOutput values.
// You can construct a concrete instance of `HaVipsHaVipArrayInput` via:
//
//	HaVipsHaVipArray{ HaVipsHaVipArgs{...} }
type HaVipsHaVipArrayInput interface {
	pulumi.Input

	ToHaVipsHaVipArrayOutput() HaVipsHaVipArrayOutput
	ToHaVipsHaVipArrayOutputWithContext(context.Context) HaVipsHaVipArrayOutput
}

type HaVipsHaVipArray []HaVipsHaVipInput

func (HaVipsHaVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipsHaVip)(nil)).Elem()
}

func (i HaVipsHaVipArray) ToHaVipsHaVipArrayOutput() HaVipsHaVipArrayOutput {
	return i.ToHaVipsHaVipArrayOutputWithContext(context.Background())
}

func (i HaVipsHaVipArray) ToHaVipsHaVipArrayOutputWithContext(ctx context.Context) HaVipsHaVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HaVipsHaVipArrayOutput)
}

type HaVipsHaVipOutput struct{ *pulumi.OutputState }

func (HaVipsHaVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HaVipsHaVip)(nil)).Elem()
}

func (o HaVipsHaVipOutput) ToHaVipsHaVipOutput() HaVipsHaVipOutput {
	return o
}

func (o HaVipsHaVipOutput) ToHaVipsHaVipOutputWithContext(ctx context.Context) HaVipsHaVipOutput {
	return o
}

// The account id of the Ha Vip.
func (o HaVipsHaVipOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.AccountId }).(pulumi.StringOutput)
}

// The associated eip address of the Ha Vip.
func (o HaVipsHaVipOutput) AssociatedEipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.AssociatedEipAddress }).(pulumi.StringOutput)
}

// The associated eip id of the Ha Vip.
func (o HaVipsHaVipOutput) AssociatedEipId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.AssociatedEipId }).(pulumi.StringOutput)
}

// The associated instance ids of the Ha Vip.
func (o HaVipsHaVipOutput) AssociatedInstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HaVipsHaVip) []string { return v.AssociatedInstanceIds }).(pulumi.StringArrayOutput)
}

// The associated instance type of the Ha Vip.
func (o HaVipsHaVipOutput) AssociatedInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.AssociatedInstanceType }).(pulumi.StringOutput)
}

// The create time of the Ha Vip.
func (o HaVipsHaVipOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the Ha Vip.
func (o HaVipsHaVipOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the Ha Vip.
func (o HaVipsHaVipOutput) HaVipId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.HaVipId }).(pulumi.StringOutput)
}

// The name of Ha Vip.
func (o HaVipsHaVipOutput) HaVipName() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.HaVipName }).(pulumi.StringOutput)
}

// The id of the Ha Vip.
func (o HaVipsHaVipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.Id }).(pulumi.StringOutput)
}

// The ip address of Ha Vip.
func (o HaVipsHaVipOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The master instance id of the Ha Vip.
func (o HaVipsHaVipOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// The project name of Ha Vip.
func (o HaVipsHaVipOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of Ha Vip.
func (o HaVipsHaVipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.Status }).(pulumi.StringOutput)
}

// The id of subnet.
func (o HaVipsHaVipOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The update time of the Ha Vip.
func (o HaVipsHaVipOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The id of vpc.
func (o HaVipsHaVipOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v HaVipsHaVip) string { return v.VpcId }).(pulumi.StringOutput)
}

type HaVipsHaVipArrayOutput struct{ *pulumi.OutputState }

func (HaVipsHaVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HaVipsHaVip)(nil)).Elem()
}

func (o HaVipsHaVipArrayOutput) ToHaVipsHaVipArrayOutput() HaVipsHaVipArrayOutput {
	return o
}

func (o HaVipsHaVipArrayOutput) ToHaVipsHaVipArrayOutputWithContext(ctx context.Context) HaVipsHaVipArrayOutput {
	return o
}

func (o HaVipsHaVipArrayOutput) Index(i pulumi.IntInput) HaVipsHaVipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HaVipsHaVip {
		return vs[0].([]HaVipsHaVip)[vs[1].(int)]
	}).(HaVipsHaVipOutput)
}

type Ipv6AddressBandwidthsIpv6AddressBandwidth struct {
	// The ID of the Ipv6AddressBandwidth.
	AllocationId string `pulumi:"allocationId"`
	// Peek bandwidth of the Ipv6 address.
	Bandwidth int `pulumi:"bandwidth"`
	// BillingType of the Ipv6 bandwidth.
	BillingType string `pulumi:"billingType"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	BusinessStatus string `pulumi:"businessStatus"`
	// Creation time of the Ipv6AddressBandwidth.
	CreationTime string `pulumi:"creationTime"`
	// Delete time of the Ipv6AddressBandwidth.
	DeleteTime string `pulumi:"deleteTime"`
	// The ID of the Ipv6AddressBandwidth.
	Id string `pulumi:"id"`
	// The ID of the associated instance.
	InstanceId string `pulumi:"instanceId"`
	// The type of the associated instance.
	InstanceType string `pulumi:"instanceType"`
	// The IPv6 address.
	Ipv6Address string `pulumi:"ipv6Address"`
	// ISP of the ipv6 address.
	Isp string `pulumi:"isp"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	LockReason string `pulumi:"lockReason"`
	// The network type of the ipv6 address.
	NetworkType string `pulumi:"networkType"`
	// Overdue time of the Ipv6AddressBandwidth.
	OverdueTime string `pulumi:"overdueTime"`
	// The status of the Ipv6AddressBandwidth.
	Status string `pulumi:"status"`
	// Update time of the Ipv6AddressBandwidth.
	UpdateTime string `pulumi:"updateTime"`
}

// Ipv6AddressBandwidthsIpv6AddressBandwidthInput is an input type that accepts Ipv6AddressBandwidthsIpv6AddressBandwidthArgs and Ipv6AddressBandwidthsIpv6AddressBandwidthOutput values.
// You can construct a concrete instance of `Ipv6AddressBandwidthsIpv6AddressBandwidthInput` via:
//
//	Ipv6AddressBandwidthsIpv6AddressBandwidthArgs{...}
type Ipv6AddressBandwidthsIpv6AddressBandwidthInput interface {
	pulumi.Input

	ToIpv6AddressBandwidthsIpv6AddressBandwidthOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthOutput
	ToIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthOutput
}

type Ipv6AddressBandwidthsIpv6AddressBandwidthArgs struct {
	// The ID of the Ipv6AddressBandwidth.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// Peek bandwidth of the Ipv6 address.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// BillingType of the Ipv6 bandwidth.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// Creation time of the Ipv6AddressBandwidth.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Delete time of the Ipv6AddressBandwidth.
	DeleteTime pulumi.StringInput `pulumi:"deleteTime"`
	// The ID of the Ipv6AddressBandwidth.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the associated instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The type of the associated instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The IPv6 address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// ISP of the ipv6 address.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The BusinessStatus of the Ipv6AddressBandwidth.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The network type of the ipv6 address.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Overdue time of the Ipv6AddressBandwidth.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The status of the Ipv6AddressBandwidth.
	Status pulumi.StringInput `pulumi:"status"`
	// Update time of the Ipv6AddressBandwidth.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (Ipv6AddressBandwidthsIpv6AddressBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (i Ipv6AddressBandwidthsIpv6AddressBandwidthArgs) ToIpv6AddressBandwidthsIpv6AddressBandwidthOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return i.ToIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(context.Background())
}

func (i Ipv6AddressBandwidthsIpv6AddressBandwidthArgs) ToIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(ctx context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AddressBandwidthsIpv6AddressBandwidthOutput)
}

// Ipv6AddressBandwidthsIpv6AddressBandwidthArrayInput is an input type that accepts Ipv6AddressBandwidthsIpv6AddressBandwidthArray and Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput values.
// You can construct a concrete instance of `Ipv6AddressBandwidthsIpv6AddressBandwidthArrayInput` via:
//
//	Ipv6AddressBandwidthsIpv6AddressBandwidthArray{ Ipv6AddressBandwidthsIpv6AddressBandwidthArgs{...} }
type Ipv6AddressBandwidthsIpv6AddressBandwidthArrayInput interface {
	pulumi.Input

	ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput
	ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput
}

type Ipv6AddressBandwidthsIpv6AddressBandwidthArray []Ipv6AddressBandwidthsIpv6AddressBandwidthInput

func (Ipv6AddressBandwidthsIpv6AddressBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (i Ipv6AddressBandwidthsIpv6AddressBandwidthArray) ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return i.ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(context.Background())
}

func (i Ipv6AddressBandwidthsIpv6AddressBandwidthArray) ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput)
}

type Ipv6AddressBandwidthsIpv6AddressBandwidthOutput struct{ *pulumi.OutputState }

func (Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) ToIpv6AddressBandwidthsIpv6AddressBandwidthOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return o
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) ToIpv6AddressBandwidthsIpv6AddressBandwidthOutputWithContext(ctx context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return o
}

// The ID of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.AllocationId }).(pulumi.StringOutput)
}

// Peek bandwidth of the Ipv6 address.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// BillingType of the Ipv6 bandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.BillingType }).(pulumi.StringOutput)
}

// The BusinessStatus of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// Creation time of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Delete time of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.DeleteTime }).(pulumi.StringOutput)
}

// The ID of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the associated instance.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The type of the associated instance.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The IPv6 address.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// ISP of the ipv6 address.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Isp }).(pulumi.StringOutput)
}

// The BusinessStatus of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.LockReason }).(pulumi.StringOutput)
}

// The network type of the ipv6 address.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Overdue time of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The status of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.Status }).(pulumi.StringOutput)
}

// Update time of the Ipv6AddressBandwidth.
func (o Ipv6AddressBandwidthsIpv6AddressBandwidthOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressBandwidthsIpv6AddressBandwidth) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput struct{ *pulumi.OutputState }

func (Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6AddressBandwidthsIpv6AddressBandwidth)(nil)).Elem()
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutput() Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return o
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) ToIpv6AddressBandwidthsIpv6AddressBandwidthArrayOutputWithContext(ctx context.Context) Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput {
	return o
}

func (o Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput) Index(i pulumi.IntInput) Ipv6AddressBandwidthsIpv6AddressBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ipv6AddressBandwidthsIpv6AddressBandwidth {
		return vs[0].([]Ipv6AddressBandwidthsIpv6AddressBandwidth)[vs[1].(int)]
	}).(Ipv6AddressBandwidthsIpv6AddressBandwidthOutput)
}

type Ipv6AddressesIpv6Address struct {
	// The IPv6 address.
	Ipv6Address string `pulumi:"ipv6Address"`
}

// Ipv6AddressesIpv6AddressInput is an input type that accepts Ipv6AddressesIpv6AddressArgs and Ipv6AddressesIpv6AddressOutput values.
// You can construct a concrete instance of `Ipv6AddressesIpv6AddressInput` via:
//
//	Ipv6AddressesIpv6AddressArgs{...}
type Ipv6AddressesIpv6AddressInput interface {
	pulumi.Input

	ToIpv6AddressesIpv6AddressOutput() Ipv6AddressesIpv6AddressOutput
	ToIpv6AddressesIpv6AddressOutputWithContext(context.Context) Ipv6AddressesIpv6AddressOutput
}

type Ipv6AddressesIpv6AddressArgs struct {
	// The IPv6 address.
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
}

func (Ipv6AddressesIpv6AddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6AddressesIpv6Address)(nil)).Elem()
}

func (i Ipv6AddressesIpv6AddressArgs) ToIpv6AddressesIpv6AddressOutput() Ipv6AddressesIpv6AddressOutput {
	return i.ToIpv6AddressesIpv6AddressOutputWithContext(context.Background())
}

func (i Ipv6AddressesIpv6AddressArgs) ToIpv6AddressesIpv6AddressOutputWithContext(ctx context.Context) Ipv6AddressesIpv6AddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AddressesIpv6AddressOutput)
}

// Ipv6AddressesIpv6AddressArrayInput is an input type that accepts Ipv6AddressesIpv6AddressArray and Ipv6AddressesIpv6AddressArrayOutput values.
// You can construct a concrete instance of `Ipv6AddressesIpv6AddressArrayInput` via:
//
//	Ipv6AddressesIpv6AddressArray{ Ipv6AddressesIpv6AddressArgs{...} }
type Ipv6AddressesIpv6AddressArrayInput interface {
	pulumi.Input

	ToIpv6AddressesIpv6AddressArrayOutput() Ipv6AddressesIpv6AddressArrayOutput
	ToIpv6AddressesIpv6AddressArrayOutputWithContext(context.Context) Ipv6AddressesIpv6AddressArrayOutput
}

type Ipv6AddressesIpv6AddressArray []Ipv6AddressesIpv6AddressInput

func (Ipv6AddressesIpv6AddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6AddressesIpv6Address)(nil)).Elem()
}

func (i Ipv6AddressesIpv6AddressArray) ToIpv6AddressesIpv6AddressArrayOutput() Ipv6AddressesIpv6AddressArrayOutput {
	return i.ToIpv6AddressesIpv6AddressArrayOutputWithContext(context.Background())
}

func (i Ipv6AddressesIpv6AddressArray) ToIpv6AddressesIpv6AddressArrayOutputWithContext(ctx context.Context) Ipv6AddressesIpv6AddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6AddressesIpv6AddressArrayOutput)
}

type Ipv6AddressesIpv6AddressOutput struct{ *pulumi.OutputState }

func (Ipv6AddressesIpv6AddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6AddressesIpv6Address)(nil)).Elem()
}

func (o Ipv6AddressesIpv6AddressOutput) ToIpv6AddressesIpv6AddressOutput() Ipv6AddressesIpv6AddressOutput {
	return o
}

func (o Ipv6AddressesIpv6AddressOutput) ToIpv6AddressesIpv6AddressOutputWithContext(ctx context.Context) Ipv6AddressesIpv6AddressOutput {
	return o
}

// The IPv6 address.
func (o Ipv6AddressesIpv6AddressOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6AddressesIpv6Address) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

type Ipv6AddressesIpv6AddressArrayOutput struct{ *pulumi.OutputState }

func (Ipv6AddressesIpv6AddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6AddressesIpv6Address)(nil)).Elem()
}

func (o Ipv6AddressesIpv6AddressArrayOutput) ToIpv6AddressesIpv6AddressArrayOutput() Ipv6AddressesIpv6AddressArrayOutput {
	return o
}

func (o Ipv6AddressesIpv6AddressArrayOutput) ToIpv6AddressesIpv6AddressArrayOutputWithContext(ctx context.Context) Ipv6AddressesIpv6AddressArrayOutput {
	return o
}

func (o Ipv6AddressesIpv6AddressArrayOutput) Index(i pulumi.IntInput) Ipv6AddressesIpv6AddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ipv6AddressesIpv6Address {
		return vs[0].([]Ipv6AddressesIpv6Address)[vs[1].(int)]
	}).(Ipv6AddressesIpv6AddressOutput)
}

type Ipv6GatewaysIpv6Gateway struct {
	// Creation time of the Ipv6Gateway.
	CreationTime string `pulumi:"creationTime"`
	// The description of the Ipv6Gateway.
	Description string `pulumi:"description"`
	// The ID of the Ipv6Gateway.
	Id string `pulumi:"id"`
	// The ID of the Ipv6Gateway.
	Ipv6GatewayId string `pulumi:"ipv6GatewayId"`
	// The name of the Ipv6Gateway.
	Name string `pulumi:"name"`
	// The Status of the Ipv6Gateway.
	Status string `pulumi:"status"`
	// Update time of the Ipv6Gateway.
	UpdateTime string `pulumi:"updateTime"`
	// The id of the VPC which the Ipv6Gateway belongs to.
	VpcId string `pulumi:"vpcId"`
}

// Ipv6GatewaysIpv6GatewayInput is an input type that accepts Ipv6GatewaysIpv6GatewayArgs and Ipv6GatewaysIpv6GatewayOutput values.
// You can construct a concrete instance of `Ipv6GatewaysIpv6GatewayInput` via:
//
//	Ipv6GatewaysIpv6GatewayArgs{...}
type Ipv6GatewaysIpv6GatewayInput interface {
	pulumi.Input

	ToIpv6GatewaysIpv6GatewayOutput() Ipv6GatewaysIpv6GatewayOutput
	ToIpv6GatewaysIpv6GatewayOutputWithContext(context.Context) Ipv6GatewaysIpv6GatewayOutput
}

type Ipv6GatewaysIpv6GatewayArgs struct {
	// Creation time of the Ipv6Gateway.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the Ipv6Gateway.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Ipv6Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Ipv6Gateway.
	Ipv6GatewayId pulumi.StringInput `pulumi:"ipv6GatewayId"`
	// The name of the Ipv6Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The Status of the Ipv6Gateway.
	Status pulumi.StringInput `pulumi:"status"`
	// Update time of the Ipv6Gateway.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The id of the VPC which the Ipv6Gateway belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (Ipv6GatewaysIpv6GatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (i Ipv6GatewaysIpv6GatewayArgs) ToIpv6GatewaysIpv6GatewayOutput() Ipv6GatewaysIpv6GatewayOutput {
	return i.ToIpv6GatewaysIpv6GatewayOutputWithContext(context.Background())
}

func (i Ipv6GatewaysIpv6GatewayArgs) ToIpv6GatewaysIpv6GatewayOutputWithContext(ctx context.Context) Ipv6GatewaysIpv6GatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6GatewaysIpv6GatewayOutput)
}

// Ipv6GatewaysIpv6GatewayArrayInput is an input type that accepts Ipv6GatewaysIpv6GatewayArray and Ipv6GatewaysIpv6GatewayArrayOutput values.
// You can construct a concrete instance of `Ipv6GatewaysIpv6GatewayArrayInput` via:
//
//	Ipv6GatewaysIpv6GatewayArray{ Ipv6GatewaysIpv6GatewayArgs{...} }
type Ipv6GatewaysIpv6GatewayArrayInput interface {
	pulumi.Input

	ToIpv6GatewaysIpv6GatewayArrayOutput() Ipv6GatewaysIpv6GatewayArrayOutput
	ToIpv6GatewaysIpv6GatewayArrayOutputWithContext(context.Context) Ipv6GatewaysIpv6GatewayArrayOutput
}

type Ipv6GatewaysIpv6GatewayArray []Ipv6GatewaysIpv6GatewayInput

func (Ipv6GatewaysIpv6GatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (i Ipv6GatewaysIpv6GatewayArray) ToIpv6GatewaysIpv6GatewayArrayOutput() Ipv6GatewaysIpv6GatewayArrayOutput {
	return i.ToIpv6GatewaysIpv6GatewayArrayOutputWithContext(context.Background())
}

func (i Ipv6GatewaysIpv6GatewayArray) ToIpv6GatewaysIpv6GatewayArrayOutputWithContext(ctx context.Context) Ipv6GatewaysIpv6GatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6GatewaysIpv6GatewayArrayOutput)
}

type Ipv6GatewaysIpv6GatewayOutput struct{ *pulumi.OutputState }

func (Ipv6GatewaysIpv6GatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (o Ipv6GatewaysIpv6GatewayOutput) ToIpv6GatewaysIpv6GatewayOutput() Ipv6GatewaysIpv6GatewayOutput {
	return o
}

func (o Ipv6GatewaysIpv6GatewayOutput) ToIpv6GatewaysIpv6GatewayOutputWithContext(ctx context.Context) Ipv6GatewaysIpv6GatewayOutput {
	return o
}

// Creation time of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Ipv6GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Ipv6GatewayId }).(pulumi.StringOutput)
}

// The name of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Name }).(pulumi.StringOutput)
}

// The Status of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.Status }).(pulumi.StringOutput)
}

// Update time of the Ipv6Gateway.
func (o Ipv6GatewaysIpv6GatewayOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The id of the VPC which the Ipv6Gateway belongs to.
func (o Ipv6GatewaysIpv6GatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6GatewaysIpv6Gateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type Ipv6GatewaysIpv6GatewayArrayOutput struct{ *pulumi.OutputState }

func (Ipv6GatewaysIpv6GatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Ipv6GatewaysIpv6Gateway)(nil)).Elem()
}

func (o Ipv6GatewaysIpv6GatewayArrayOutput) ToIpv6GatewaysIpv6GatewayArrayOutput() Ipv6GatewaysIpv6GatewayArrayOutput {
	return o
}

func (o Ipv6GatewaysIpv6GatewayArrayOutput) ToIpv6GatewaysIpv6GatewayArrayOutputWithContext(ctx context.Context) Ipv6GatewaysIpv6GatewayArrayOutput {
	return o
}

func (o Ipv6GatewaysIpv6GatewayArrayOutput) Index(i pulumi.IntInput) Ipv6GatewaysIpv6GatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Ipv6GatewaysIpv6Gateway {
		return vs[0].([]Ipv6GatewaysIpv6Gateway)[vs[1].(int)]
	}).(Ipv6GatewaysIpv6GatewayOutput)
}

type NetworkAclEgressAclEntry struct {
	// The description of entry.
	Description *string `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp *string `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId *string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName *string `pulumi:"networkAclEntryName"`
	// The policy of entry. Default is `accept`. The value can be `accept` or `drop`.
	Policy *string `pulumi:"policy"`
	// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction.When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`,which means port 1 to port 200, port 80.
	Port *string `pulumi:"port"`
	// The priority of entry.
	Priority *int `pulumi:"priority"`
	// The protocol of entry. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`. Default is `all`.
	Protocol *string `pulumi:"protocol"`
}

// NetworkAclEgressAclEntryInput is an input type that accepts NetworkAclEgressAclEntryArgs and NetworkAclEgressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclEgressAclEntryInput` via:
//
//	NetworkAclEgressAclEntryArgs{...}
type NetworkAclEgressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput
	ToNetworkAclEgressAclEntryOutputWithContext(context.Context) NetworkAclEgressAclEntryOutput
}

type NetworkAclEgressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp pulumi.StringPtrInput `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringPtrInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringPtrInput `pulumi:"networkAclEntryName"`
	// The policy of entry. Default is `accept`. The value can be `accept` or `drop`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction.When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`,which means port 1 to port 200, port 80.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The protocol of entry. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`. Default is `all`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (NetworkAclEgressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclEgressAclEntryArgs) ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput {
	return i.ToNetworkAclEgressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclEgressAclEntryArgs) ToNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressAclEntryOutput)
}

// NetworkAclEgressAclEntryArrayInput is an input type that accepts NetworkAclEgressAclEntryArray and NetworkAclEgressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclEgressAclEntryArrayInput` via:
//
//	NetworkAclEgressAclEntryArray{ NetworkAclEgressAclEntryArgs{...} }
type NetworkAclEgressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput
	ToNetworkAclEgressAclEntryArrayOutputWithContext(context.Context) NetworkAclEgressAclEntryArrayOutput
}

type NetworkAclEgressAclEntryArray []NetworkAclEgressAclEntryInput

func (NetworkAclEgressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclEgressAclEntryArray) ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput {
	return i.ToNetworkAclEgressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclEgressAclEntryArray) ToNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressAclEntryArrayOutput)
}

type NetworkAclEgressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclEgressAclEntryOutput) ToNetworkAclEgressAclEntryOutput() NetworkAclEgressAclEntryOutput {
	return o
}

func (o NetworkAclEgressAclEntryOutput) ToNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryOutput {
	return o
}

// The description of entry.
func (o NetworkAclEgressAclEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The DestinationCidrIp of entry.
func (o NetworkAclEgressAclEntryOutput) DestinationCidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.DestinationCidrIp }).(pulumi.StringPtrOutput)
}

// The id of entry.
func (o NetworkAclEgressAclEntryOutput) NetworkAclEntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.NetworkAclEntryId }).(pulumi.StringPtrOutput)
}

// The name of entry.
func (o NetworkAclEgressAclEntryOutput) NetworkAclEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.NetworkAclEntryName }).(pulumi.StringPtrOutput)
}

// The policy of entry. Default is `accept`. The value can be `accept` or `drop`.
func (o NetworkAclEgressAclEntryOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction.When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`,which means port 1 to port 200, port 80.
func (o NetworkAclEgressAclEntryOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The priority of entry.
func (o NetworkAclEgressAclEntryOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The protocol of entry. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`. Default is `all`.
func (o NetworkAclEgressAclEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressAclEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type NetworkAclEgressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclEgressAclEntryArrayOutput) ToNetworkAclEgressAclEntryArrayOutput() NetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclEgressAclEntryArrayOutput) ToNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclEgressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclEgressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEgressAclEntry {
		return vs[0].([]NetworkAclEgressAclEntry)[vs[1].(int)]
	}).(NetworkAclEgressAclEntryOutput)
}

type NetworkAclIngressAclEntry struct {
	// The description of entry.
	Description *string `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId *string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName *string `pulumi:"networkAclEntryName"`
	// The policy of entry, default is `accept`. The value can be `accept` or `drop`.
	Policy *string `pulumi:"policy"`
	// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction. When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`, which means port 1 to port 200, port 80.
	Port *string `pulumi:"port"`
	// The priority of entry.
	Priority *int `pulumi:"priority"`
	// The protocol of entry, default is `all`. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`.
	Protocol *string `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp *string `pulumi:"sourceCidrIp"`
}

// NetworkAclIngressAclEntryInput is an input type that accepts NetworkAclIngressAclEntryArgs and NetworkAclIngressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclIngressAclEntryInput` via:
//
//	NetworkAclIngressAclEntryArgs{...}
type NetworkAclIngressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput
	ToNetworkAclIngressAclEntryOutputWithContext(context.Context) NetworkAclIngressAclEntryOutput
}

type NetworkAclIngressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringPtrInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringPtrInput `pulumi:"networkAclEntryName"`
	// The policy of entry, default is `accept`. The value can be `accept` or `drop`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction. When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`, which means port 1 to port 200, port 80.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The protocol of entry, default is `all`. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp pulumi.StringPtrInput `pulumi:"sourceCidrIp"`
}

func (NetworkAclIngressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclIngressAclEntryArgs) ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput {
	return i.ToNetworkAclIngressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclIngressAclEntryArgs) ToNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressAclEntryOutput)
}

// NetworkAclIngressAclEntryArrayInput is an input type that accepts NetworkAclIngressAclEntryArray and NetworkAclIngressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclIngressAclEntryArrayInput` via:
//
//	NetworkAclIngressAclEntryArray{ NetworkAclIngressAclEntryArgs{...} }
type NetworkAclIngressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput
	ToNetworkAclIngressAclEntryArrayOutputWithContext(context.Context) NetworkAclIngressAclEntryArrayOutput
}

type NetworkAclIngressAclEntryArray []NetworkAclIngressAclEntryInput

func (NetworkAclIngressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclIngressAclEntryArray) ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput {
	return i.ToNetworkAclIngressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclIngressAclEntryArray) ToNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressAclEntryArrayOutput)
}

type NetworkAclIngressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclIngressAclEntryOutput) ToNetworkAclIngressAclEntryOutput() NetworkAclIngressAclEntryOutput {
	return o
}

func (o NetworkAclIngressAclEntryOutput) ToNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryOutput {
	return o
}

// The description of entry.
func (o NetworkAclIngressAclEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The id of entry.
func (o NetworkAclIngressAclEntryOutput) NetworkAclEntryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.NetworkAclEntryId }).(pulumi.StringPtrOutput)
}

// The name of entry.
func (o NetworkAclIngressAclEntryOutput) NetworkAclEntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.NetworkAclEntryName }).(pulumi.StringPtrOutput)
}

// The policy of entry, default is `accept`. The value can be `accept` or `drop`.
func (o NetworkAclIngressAclEntryOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port of entry. Default is `-1/-1`. When Protocol is `all`, `icmp` or `gre`, the port range is `-1/-1`, which means no port restriction. When the Protocol is `tcp` or `udp`, the port range is `1~65535`, and the format is `1/200`, `80/80`, which means port 1 to port 200, port 80.
func (o NetworkAclIngressAclEntryOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The priority of entry.
func (o NetworkAclIngressAclEntryOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The protocol of entry, default is `all`. The value can be `icmp` or `gre` or `tcp` or `udp` or `all`.
func (o NetworkAclIngressAclEntryOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The SourceCidrIp of entry.
func (o NetworkAclIngressAclEntryOutput) SourceCidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressAclEntry) *string { return v.SourceCidrIp }).(pulumi.StringPtrOutput)
}

type NetworkAclIngressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclIngressAclEntryArrayOutput) ToNetworkAclIngressAclEntryArrayOutput() NetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclIngressAclEntryArrayOutput) ToNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclIngressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclIngressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclIngressAclEntry {
		return vs[0].([]NetworkAclIngressAclEntry)[vs[1].(int)]
	}).(NetworkAclIngressAclEntryOutput)
}

type NetworkAclTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkAclTagInput is an input type that accepts NetworkAclTagArgs and NetworkAclTagOutput values.
// You can construct a concrete instance of `NetworkAclTagInput` via:
//
//	NetworkAclTagArgs{...}
type NetworkAclTagInput interface {
	pulumi.Input

	ToNetworkAclTagOutput() NetworkAclTagOutput
	ToNetworkAclTagOutputWithContext(context.Context) NetworkAclTagOutput
}

type NetworkAclTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkAclTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclTag)(nil)).Elem()
}

func (i NetworkAclTagArgs) ToNetworkAclTagOutput() NetworkAclTagOutput {
	return i.ToNetworkAclTagOutputWithContext(context.Background())
}

func (i NetworkAclTagArgs) ToNetworkAclTagOutputWithContext(ctx context.Context) NetworkAclTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclTagOutput)
}

// NetworkAclTagArrayInput is an input type that accepts NetworkAclTagArray and NetworkAclTagArrayOutput values.
// You can construct a concrete instance of `NetworkAclTagArrayInput` via:
//
//	NetworkAclTagArray{ NetworkAclTagArgs{...} }
type NetworkAclTagArrayInput interface {
	pulumi.Input

	ToNetworkAclTagArrayOutput() NetworkAclTagArrayOutput
	ToNetworkAclTagArrayOutputWithContext(context.Context) NetworkAclTagArrayOutput
}

type NetworkAclTagArray []NetworkAclTagInput

func (NetworkAclTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclTag)(nil)).Elem()
}

func (i NetworkAclTagArray) ToNetworkAclTagArrayOutput() NetworkAclTagArrayOutput {
	return i.ToNetworkAclTagArrayOutputWithContext(context.Background())
}

func (i NetworkAclTagArray) ToNetworkAclTagArrayOutputWithContext(ctx context.Context) NetworkAclTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclTagArrayOutput)
}

type NetworkAclTagOutput struct{ *pulumi.OutputState }

func (NetworkAclTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclTag)(nil)).Elem()
}

func (o NetworkAclTagOutput) ToNetworkAclTagOutput() NetworkAclTagOutput {
	return o
}

func (o NetworkAclTagOutput) ToNetworkAclTagOutputWithContext(ctx context.Context) NetworkAclTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkAclTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkAclTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkAclTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclTag)(nil)).Elem()
}

func (o NetworkAclTagArrayOutput) ToNetworkAclTagArrayOutput() NetworkAclTagArrayOutput {
	return o
}

func (o NetworkAclTagArrayOutput) ToNetworkAclTagArrayOutputWithContext(ctx context.Context) NetworkAclTagArrayOutput {
	return o
}

func (o NetworkAclTagArrayOutput) Index(i pulumi.IntInput) NetworkAclTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclTag {
		return vs[0].([]NetworkAclTag)[vs[1].(int)]
	}).(NetworkAclTagOutput)
}

type NetworkAclsNetworkAcl struct {
	// The count of Network acl entry.
	AclEntryCount int `pulumi:"aclEntryCount"`
	// Creation time of Network Acl.
	CreationTime string `pulumi:"creationTime"`
	// The description of entry.
	Description string `pulumi:"description"`
	// The egress entries info of Network Acl.
	EgressAclEntries []NetworkAclsNetworkAclEgressAclEntry `pulumi:"egressAclEntries"`
	// The ID of Network Acl.
	Id string `pulumi:"id"`
	// The ingress entries info of Network Acl.
	IngressAclEntries []NetworkAclsNetworkAclIngressAclEntry `pulumi:"ingressAclEntries"`
	// The ID of Network Acl.
	NetworkAclId string `pulumi:"networkAclId"`
	// The name of Network Acl.
	NetworkAclName string `pulumi:"networkAclName"`
	// The project name of the network acl.
	ProjectName string `pulumi:"projectName"`
	// The resources info of Network Acl.
	Resources []NetworkAclsNetworkAclResource `pulumi:"resources"`
	// The Status of Network Acl.
	Status string `pulumi:"status"`
	// Tags.
	Tags []NetworkAclsNetworkAclTag `pulumi:"tags"`
	// Update time of Network Acl.
	UpdateTime string `pulumi:"updateTime"`
	// The vpc id of Network Acl.
	VpcId string `pulumi:"vpcId"`
}

// NetworkAclsNetworkAclInput is an input type that accepts NetworkAclsNetworkAclArgs and NetworkAclsNetworkAclOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclInput` via:
//
//	NetworkAclsNetworkAclArgs{...}
type NetworkAclsNetworkAclInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclOutput() NetworkAclsNetworkAclOutput
	ToNetworkAclsNetworkAclOutputWithContext(context.Context) NetworkAclsNetworkAclOutput
}

type NetworkAclsNetworkAclArgs struct {
	// The count of Network acl entry.
	AclEntryCount pulumi.IntInput `pulumi:"aclEntryCount"`
	// Creation time of Network Acl.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The egress entries info of Network Acl.
	EgressAclEntries NetworkAclsNetworkAclEgressAclEntryArrayInput `pulumi:"egressAclEntries"`
	// The ID of Network Acl.
	Id pulumi.StringInput `pulumi:"id"`
	// The ingress entries info of Network Acl.
	IngressAclEntries NetworkAclsNetworkAclIngressAclEntryArrayInput `pulumi:"ingressAclEntries"`
	// The ID of Network Acl.
	NetworkAclId pulumi.StringInput `pulumi:"networkAclId"`
	// The name of Network Acl.
	NetworkAclName pulumi.StringInput `pulumi:"networkAclName"`
	// The project name of the network acl.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The resources info of Network Acl.
	Resources NetworkAclsNetworkAclResourceArrayInput `pulumi:"resources"`
	// The Status of Network Acl.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags NetworkAclsNetworkAclTagArrayInput `pulumi:"tags"`
	// Update time of Network Acl.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The vpc id of Network Acl.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (NetworkAclsNetworkAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAcl)(nil)).Elem()
}

func (i NetworkAclsNetworkAclArgs) ToNetworkAclsNetworkAclOutput() NetworkAclsNetworkAclOutput {
	return i.ToNetworkAclsNetworkAclOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclArgs) ToNetworkAclsNetworkAclOutputWithContext(ctx context.Context) NetworkAclsNetworkAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclOutput)
}

// NetworkAclsNetworkAclArrayInput is an input type that accepts NetworkAclsNetworkAclArray and NetworkAclsNetworkAclArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclArrayInput` via:
//
//	NetworkAclsNetworkAclArray{ NetworkAclsNetworkAclArgs{...} }
type NetworkAclsNetworkAclArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclArrayOutput() NetworkAclsNetworkAclArrayOutput
	ToNetworkAclsNetworkAclArrayOutputWithContext(context.Context) NetworkAclsNetworkAclArrayOutput
}

type NetworkAclsNetworkAclArray []NetworkAclsNetworkAclInput

func (NetworkAclsNetworkAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAcl)(nil)).Elem()
}

func (i NetworkAclsNetworkAclArray) ToNetworkAclsNetworkAclArrayOutput() NetworkAclsNetworkAclArrayOutput {
	return i.ToNetworkAclsNetworkAclArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclArray) ToNetworkAclsNetworkAclArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclArrayOutput)
}

type NetworkAclsNetworkAclOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAcl)(nil)).Elem()
}

func (o NetworkAclsNetworkAclOutput) ToNetworkAclsNetworkAclOutput() NetworkAclsNetworkAclOutput {
	return o
}

func (o NetworkAclsNetworkAclOutput) ToNetworkAclsNetworkAclOutputWithContext(ctx context.Context) NetworkAclsNetworkAclOutput {
	return o
}

// The count of Network acl entry.
func (o NetworkAclsNetworkAclOutput) AclEntryCount() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) int { return v.AclEntryCount }).(pulumi.IntOutput)
}

// Creation time of Network Acl.
func (o NetworkAclsNetworkAclOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of entry.
func (o NetworkAclsNetworkAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The egress entries info of Network Acl.
func (o NetworkAclsNetworkAclOutput) EgressAclEntries() NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) []NetworkAclsNetworkAclEgressAclEntry { return v.EgressAclEntries }).(NetworkAclsNetworkAclEgressAclEntryArrayOutput)
}

// The ID of Network Acl.
func (o NetworkAclsNetworkAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.Id }).(pulumi.StringOutput)
}

// The ingress entries info of Network Acl.
func (o NetworkAclsNetworkAclOutput) IngressAclEntries() NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) []NetworkAclsNetworkAclIngressAclEntry { return v.IngressAclEntries }).(NetworkAclsNetworkAclIngressAclEntryArrayOutput)
}

// The ID of Network Acl.
func (o NetworkAclsNetworkAclOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// The name of Network Acl.
func (o NetworkAclsNetworkAclOutput) NetworkAclName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.NetworkAclName }).(pulumi.StringOutput)
}

// The project name of the network acl.
func (o NetworkAclsNetworkAclOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The resources info of Network Acl.
func (o NetworkAclsNetworkAclOutput) Resources() NetworkAclsNetworkAclResourceArrayOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) []NetworkAclsNetworkAclResource { return v.Resources }).(NetworkAclsNetworkAclResourceArrayOutput)
}

// The Status of Network Acl.
func (o NetworkAclsNetworkAclOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o NetworkAclsNetworkAclOutput) Tags() NetworkAclsNetworkAclTagArrayOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) []NetworkAclsNetworkAclTag { return v.Tags }).(NetworkAclsNetworkAclTagArrayOutput)
}

// Update time of Network Acl.
func (o NetworkAclsNetworkAclOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The vpc id of Network Acl.
func (o NetworkAclsNetworkAclOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAcl) string { return v.VpcId }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAcl)(nil)).Elem()
}

func (o NetworkAclsNetworkAclArrayOutput) ToNetworkAclsNetworkAclArrayOutput() NetworkAclsNetworkAclArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclArrayOutput) ToNetworkAclsNetworkAclArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAcl {
		return vs[0].([]NetworkAclsNetworkAcl)[vs[1].(int)]
	}).(NetworkAclsNetworkAclOutput)
}

type NetworkAclsNetworkAclEgressAclEntry struct {
	// The description of entry.
	Description string `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp string `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName string `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy string `pulumi:"policy"`
	// The port of entry.
	Port string `pulumi:"port"`
	// The priority of entry.
	Priority int `pulumi:"priority"`
	// The protocol of entry.
	Protocol string `pulumi:"protocol"`
}

// NetworkAclsNetworkAclEgressAclEntryInput is an input type that accepts NetworkAclsNetworkAclEgressAclEntryArgs and NetworkAclsNetworkAclEgressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclEgressAclEntryInput` via:
//
//	NetworkAclsNetworkAclEgressAclEntryArgs{...}
type NetworkAclsNetworkAclEgressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclEgressAclEntryOutput() NetworkAclsNetworkAclEgressAclEntryOutput
	ToNetworkAclsNetworkAclEgressAclEntryOutputWithContext(context.Context) NetworkAclsNetworkAclEgressAclEntryOutput
}

type NetworkAclsNetworkAclEgressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The DestinationCidrIp of entry.
	DestinationCidrIp pulumi.StringInput `pulumi:"destinationCidrIp"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringInput `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The port of entry.
	Port pulumi.StringInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of entry.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (NetworkAclsNetworkAclEgressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclsNetworkAclEgressAclEntryArgs) ToNetworkAclsNetworkAclEgressAclEntryOutput() NetworkAclsNetworkAclEgressAclEntryOutput {
	return i.ToNetworkAclsNetworkAclEgressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclEgressAclEntryArgs) ToNetworkAclsNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclsNetworkAclEgressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclEgressAclEntryOutput)
}

// NetworkAclsNetworkAclEgressAclEntryArrayInput is an input type that accepts NetworkAclsNetworkAclEgressAclEntryArray and NetworkAclsNetworkAclEgressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclEgressAclEntryArrayInput` via:
//
//	NetworkAclsNetworkAclEgressAclEntryArray{ NetworkAclsNetworkAclEgressAclEntryArgs{...} }
type NetworkAclsNetworkAclEgressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclEgressAclEntryArrayOutput() NetworkAclsNetworkAclEgressAclEntryArrayOutput
	ToNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(context.Context) NetworkAclsNetworkAclEgressAclEntryArrayOutput
}

type NetworkAclsNetworkAclEgressAclEntryArray []NetworkAclsNetworkAclEgressAclEntryInput

func (NetworkAclsNetworkAclEgressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (i NetworkAclsNetworkAclEgressAclEntryArray) ToNetworkAclsNetworkAclEgressAclEntryArrayOutput() NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return i.ToNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclEgressAclEntryArray) ToNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclEgressAclEntryArrayOutput)
}

type NetworkAclsNetworkAclEgressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclEgressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclsNetworkAclEgressAclEntryOutput) ToNetworkAclsNetworkAclEgressAclEntryOutput() NetworkAclsNetworkAclEgressAclEntryOutput {
	return o
}

func (o NetworkAclsNetworkAclEgressAclEntryOutput) ToNetworkAclsNetworkAclEgressAclEntryOutputWithContext(ctx context.Context) NetworkAclsNetworkAclEgressAclEntryOutput {
	return o
}

// The description of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The DestinationCidrIp of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) DestinationCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.DestinationCidrIp }).(pulumi.StringOutput)
}

// The id of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) NetworkAclEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.NetworkAclEntryId }).(pulumi.StringOutput)
}

// The name of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) NetworkAclEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.NetworkAclEntryName }).(pulumi.StringOutput)
}

// The policy of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.Policy }).(pulumi.StringOutput)
}

// The port of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.Port }).(pulumi.StringOutput)
}

// The priority of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of entry.
func (o NetworkAclsNetworkAclEgressAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclEgressAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclEgressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclEgressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclEgressAclEntry)(nil)).Elem()
}

func (o NetworkAclsNetworkAclEgressAclEntryArrayOutput) ToNetworkAclsNetworkAclEgressAclEntryArrayOutput() NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclEgressAclEntryArrayOutput) ToNetworkAclsNetworkAclEgressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclEgressAclEntryArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclEgressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclEgressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAclEgressAclEntry {
		return vs[0].([]NetworkAclsNetworkAclEgressAclEntry)[vs[1].(int)]
	}).(NetworkAclsNetworkAclEgressAclEntryOutput)
}

type NetworkAclsNetworkAclIngressAclEntry struct {
	// The description of entry.
	Description string `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId string `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName string `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy string `pulumi:"policy"`
	// The port of entry.
	Port string `pulumi:"port"`
	// The priority of entry.
	Priority int `pulumi:"priority"`
	// The protocol of entry.
	Protocol string `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp string `pulumi:"sourceCidrIp"`
}

// NetworkAclsNetworkAclIngressAclEntryInput is an input type that accepts NetworkAclsNetworkAclIngressAclEntryArgs and NetworkAclsNetworkAclIngressAclEntryOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclIngressAclEntryInput` via:
//
//	NetworkAclsNetworkAclIngressAclEntryArgs{...}
type NetworkAclsNetworkAclIngressAclEntryInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclIngressAclEntryOutput() NetworkAclsNetworkAclIngressAclEntryOutput
	ToNetworkAclsNetworkAclIngressAclEntryOutputWithContext(context.Context) NetworkAclsNetworkAclIngressAclEntryOutput
}

type NetworkAclsNetworkAclIngressAclEntryArgs struct {
	// The description of entry.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of entry.
	NetworkAclEntryId pulumi.StringInput `pulumi:"networkAclEntryId"`
	// The name of entry.
	NetworkAclEntryName pulumi.StringInput `pulumi:"networkAclEntryName"`
	// The policy of entry.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The port of entry.
	Port pulumi.StringInput `pulumi:"port"`
	// The priority of entry.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The protocol of entry.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The SourceCidrIp of entry.
	SourceCidrIp pulumi.StringInput `pulumi:"sourceCidrIp"`
}

func (NetworkAclsNetworkAclIngressAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclsNetworkAclIngressAclEntryArgs) ToNetworkAclsNetworkAclIngressAclEntryOutput() NetworkAclsNetworkAclIngressAclEntryOutput {
	return i.ToNetworkAclsNetworkAclIngressAclEntryOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclIngressAclEntryArgs) ToNetworkAclsNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclsNetworkAclIngressAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclIngressAclEntryOutput)
}

// NetworkAclsNetworkAclIngressAclEntryArrayInput is an input type that accepts NetworkAclsNetworkAclIngressAclEntryArray and NetworkAclsNetworkAclIngressAclEntryArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclIngressAclEntryArrayInput` via:
//
//	NetworkAclsNetworkAclIngressAclEntryArray{ NetworkAclsNetworkAclIngressAclEntryArgs{...} }
type NetworkAclsNetworkAclIngressAclEntryArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclIngressAclEntryArrayOutput() NetworkAclsNetworkAclIngressAclEntryArrayOutput
	ToNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(context.Context) NetworkAclsNetworkAclIngressAclEntryArrayOutput
}

type NetworkAclsNetworkAclIngressAclEntryArray []NetworkAclsNetworkAclIngressAclEntryInput

func (NetworkAclsNetworkAclIngressAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (i NetworkAclsNetworkAclIngressAclEntryArray) ToNetworkAclsNetworkAclIngressAclEntryArrayOutput() NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return i.ToNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclIngressAclEntryArray) ToNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclIngressAclEntryArrayOutput)
}

type NetworkAclsNetworkAclIngressAclEntryOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclIngressAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclsNetworkAclIngressAclEntryOutput) ToNetworkAclsNetworkAclIngressAclEntryOutput() NetworkAclsNetworkAclIngressAclEntryOutput {
	return o
}

func (o NetworkAclsNetworkAclIngressAclEntryOutput) ToNetworkAclsNetworkAclIngressAclEntryOutputWithContext(ctx context.Context) NetworkAclsNetworkAclIngressAclEntryOutput {
	return o
}

// The description of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The id of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) NetworkAclEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.NetworkAclEntryId }).(pulumi.StringOutput)
}

// The name of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) NetworkAclEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.NetworkAclEntryName }).(pulumi.StringOutput)
}

// The policy of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.Policy }).(pulumi.StringOutput)
}

// The port of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.Port }).(pulumi.StringOutput)
}

// The priority of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) int { return v.Priority }).(pulumi.IntOutput)
}

// The protocol of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.Protocol }).(pulumi.StringOutput)
}

// The SourceCidrIp of entry.
func (o NetworkAclsNetworkAclIngressAclEntryOutput) SourceCidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclIngressAclEntry) string { return v.SourceCidrIp }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclIngressAclEntryArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclIngressAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclIngressAclEntry)(nil)).Elem()
}

func (o NetworkAclsNetworkAclIngressAclEntryArrayOutput) ToNetworkAclsNetworkAclIngressAclEntryArrayOutput() NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclIngressAclEntryArrayOutput) ToNetworkAclsNetworkAclIngressAclEntryArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclIngressAclEntryArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclIngressAclEntryArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclIngressAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAclIngressAclEntry {
		return vs[0].([]NetworkAclsNetworkAclIngressAclEntry)[vs[1].(int)]
	}).(NetworkAclsNetworkAclIngressAclEntryOutput)
}

type NetworkAclsNetworkAclResource struct {
	// The resource id of Network Acl.
	ResourceId string `pulumi:"resourceId"`
	// The Status of Network Acl.
	Status string `pulumi:"status"`
}

// NetworkAclsNetworkAclResourceInput is an input type that accepts NetworkAclsNetworkAclResourceArgs and NetworkAclsNetworkAclResourceOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclResourceInput` via:
//
//	NetworkAclsNetworkAclResourceArgs{...}
type NetworkAclsNetworkAclResourceInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclResourceOutput() NetworkAclsNetworkAclResourceOutput
	ToNetworkAclsNetworkAclResourceOutputWithContext(context.Context) NetworkAclsNetworkAclResourceOutput
}

type NetworkAclsNetworkAclResourceArgs struct {
	// The resource id of Network Acl.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The Status of Network Acl.
	Status pulumi.StringInput `pulumi:"status"`
}

func (NetworkAclsNetworkAclResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclResource)(nil)).Elem()
}

func (i NetworkAclsNetworkAclResourceArgs) ToNetworkAclsNetworkAclResourceOutput() NetworkAclsNetworkAclResourceOutput {
	return i.ToNetworkAclsNetworkAclResourceOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclResourceArgs) ToNetworkAclsNetworkAclResourceOutputWithContext(ctx context.Context) NetworkAclsNetworkAclResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclResourceOutput)
}

// NetworkAclsNetworkAclResourceArrayInput is an input type that accepts NetworkAclsNetworkAclResourceArray and NetworkAclsNetworkAclResourceArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclResourceArrayInput` via:
//
//	NetworkAclsNetworkAclResourceArray{ NetworkAclsNetworkAclResourceArgs{...} }
type NetworkAclsNetworkAclResourceArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclResourceArrayOutput() NetworkAclsNetworkAclResourceArrayOutput
	ToNetworkAclsNetworkAclResourceArrayOutputWithContext(context.Context) NetworkAclsNetworkAclResourceArrayOutput
}

type NetworkAclsNetworkAclResourceArray []NetworkAclsNetworkAclResourceInput

func (NetworkAclsNetworkAclResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclResource)(nil)).Elem()
}

func (i NetworkAclsNetworkAclResourceArray) ToNetworkAclsNetworkAclResourceArrayOutput() NetworkAclsNetworkAclResourceArrayOutput {
	return i.ToNetworkAclsNetworkAclResourceArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclResourceArray) ToNetworkAclsNetworkAclResourceArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclResourceArrayOutput)
}

type NetworkAclsNetworkAclResourceOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclResource)(nil)).Elem()
}

func (o NetworkAclsNetworkAclResourceOutput) ToNetworkAclsNetworkAclResourceOutput() NetworkAclsNetworkAclResourceOutput {
	return o
}

func (o NetworkAclsNetworkAclResourceOutput) ToNetworkAclsNetworkAclResourceOutputWithContext(ctx context.Context) NetworkAclsNetworkAclResourceOutput {
	return o
}

// The resource id of Network Acl.
func (o NetworkAclsNetworkAclResourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclResource) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The Status of Network Acl.
func (o NetworkAclsNetworkAclResourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclResource) string { return v.Status }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclResourceArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclResource)(nil)).Elem()
}

func (o NetworkAclsNetworkAclResourceArrayOutput) ToNetworkAclsNetworkAclResourceArrayOutput() NetworkAclsNetworkAclResourceArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclResourceArrayOutput) ToNetworkAclsNetworkAclResourceArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclResourceArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclResourceArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAclResource {
		return vs[0].([]NetworkAclsNetworkAclResource)[vs[1].(int)]
	}).(NetworkAclsNetworkAclResourceOutput)
}

type NetworkAclsNetworkAclTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkAclsNetworkAclTagInput is an input type that accepts NetworkAclsNetworkAclTagArgs and NetworkAclsNetworkAclTagOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclTagInput` via:
//
//	NetworkAclsNetworkAclTagArgs{...}
type NetworkAclsNetworkAclTagInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclTagOutput() NetworkAclsNetworkAclTagOutput
	ToNetworkAclsNetworkAclTagOutputWithContext(context.Context) NetworkAclsNetworkAclTagOutput
}

type NetworkAclsNetworkAclTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkAclsNetworkAclTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclTag)(nil)).Elem()
}

func (i NetworkAclsNetworkAclTagArgs) ToNetworkAclsNetworkAclTagOutput() NetworkAclsNetworkAclTagOutput {
	return i.ToNetworkAclsNetworkAclTagOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclTagArgs) ToNetworkAclsNetworkAclTagOutputWithContext(ctx context.Context) NetworkAclsNetworkAclTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclTagOutput)
}

// NetworkAclsNetworkAclTagArrayInput is an input type that accepts NetworkAclsNetworkAclTagArray and NetworkAclsNetworkAclTagArrayOutput values.
// You can construct a concrete instance of `NetworkAclsNetworkAclTagArrayInput` via:
//
//	NetworkAclsNetworkAclTagArray{ NetworkAclsNetworkAclTagArgs{...} }
type NetworkAclsNetworkAclTagArrayInput interface {
	pulumi.Input

	ToNetworkAclsNetworkAclTagArrayOutput() NetworkAclsNetworkAclTagArrayOutput
	ToNetworkAclsNetworkAclTagArrayOutputWithContext(context.Context) NetworkAclsNetworkAclTagArrayOutput
}

type NetworkAclsNetworkAclTagArray []NetworkAclsNetworkAclTagInput

func (NetworkAclsNetworkAclTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclTag)(nil)).Elem()
}

func (i NetworkAclsNetworkAclTagArray) ToNetworkAclsNetworkAclTagArrayOutput() NetworkAclsNetworkAclTagArrayOutput {
	return i.ToNetworkAclsNetworkAclTagArrayOutputWithContext(context.Background())
}

func (i NetworkAclsNetworkAclTagArray) ToNetworkAclsNetworkAclTagArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsNetworkAclTagArrayOutput)
}

type NetworkAclsNetworkAclTagOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsNetworkAclTag)(nil)).Elem()
}

func (o NetworkAclsNetworkAclTagOutput) ToNetworkAclsNetworkAclTagOutput() NetworkAclsNetworkAclTagOutput {
	return o
}

func (o NetworkAclsNetworkAclTagOutput) ToNetworkAclsNetworkAclTagOutputWithContext(ctx context.Context) NetworkAclsNetworkAclTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkAclsNetworkAclTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkAclsNetworkAclTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsNetworkAclTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkAclsNetworkAclTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsNetworkAclTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsNetworkAclTag)(nil)).Elem()
}

func (o NetworkAclsNetworkAclTagArrayOutput) ToNetworkAclsNetworkAclTagArrayOutput() NetworkAclsNetworkAclTagArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclTagArrayOutput) ToNetworkAclsNetworkAclTagArrayOutputWithContext(ctx context.Context) NetworkAclsNetworkAclTagArrayOutput {
	return o
}

func (o NetworkAclsNetworkAclTagArrayOutput) Index(i pulumi.IntInput) NetworkAclsNetworkAclTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsNetworkAclTag {
		return vs[0].([]NetworkAclsNetworkAclTag)[vs[1].(int)]
	}).(NetworkAclsNetworkAclTagOutput)
}

type NetworkAclsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkAclsTagInput is an input type that accepts NetworkAclsTagArgs and NetworkAclsTagOutput values.
// You can construct a concrete instance of `NetworkAclsTagInput` via:
//
//	NetworkAclsTagArgs{...}
type NetworkAclsTagInput interface {
	pulumi.Input

	ToNetworkAclsTagOutput() NetworkAclsTagOutput
	ToNetworkAclsTagOutputWithContext(context.Context) NetworkAclsTagOutput
}

type NetworkAclsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkAclsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsTag)(nil)).Elem()
}

func (i NetworkAclsTagArgs) ToNetworkAclsTagOutput() NetworkAclsTagOutput {
	return i.ToNetworkAclsTagOutputWithContext(context.Background())
}

func (i NetworkAclsTagArgs) ToNetworkAclsTagOutputWithContext(ctx context.Context) NetworkAclsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsTagOutput)
}

// NetworkAclsTagArrayInput is an input type that accepts NetworkAclsTagArray and NetworkAclsTagArrayOutput values.
// You can construct a concrete instance of `NetworkAclsTagArrayInput` via:
//
//	NetworkAclsTagArray{ NetworkAclsTagArgs{...} }
type NetworkAclsTagArrayInput interface {
	pulumi.Input

	ToNetworkAclsTagArrayOutput() NetworkAclsTagArrayOutput
	ToNetworkAclsTagArrayOutputWithContext(context.Context) NetworkAclsTagArrayOutput
}

type NetworkAclsTagArray []NetworkAclsTagInput

func (NetworkAclsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsTag)(nil)).Elem()
}

func (i NetworkAclsTagArray) ToNetworkAclsTagArrayOutput() NetworkAclsTagArrayOutput {
	return i.ToNetworkAclsTagArrayOutputWithContext(context.Background())
}

func (i NetworkAclsTagArray) ToNetworkAclsTagArrayOutputWithContext(ctx context.Context) NetworkAclsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclsTagArrayOutput)
}

type NetworkAclsTagOutput struct{ *pulumi.OutputState }

func (NetworkAclsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsTag)(nil)).Elem()
}

func (o NetworkAclsTagOutput) ToNetworkAclsTagOutput() NetworkAclsTagOutput {
	return o
}

func (o NetworkAclsTagOutput) ToNetworkAclsTagOutputWithContext(ctx context.Context) NetworkAclsTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkAclsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkAclsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkAclsTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclsTag)(nil)).Elem()
}

func (o NetworkAclsTagArrayOutput) ToNetworkAclsTagArrayOutput() NetworkAclsTagArrayOutput {
	return o
}

func (o NetworkAclsTagArrayOutput) ToNetworkAclsTagArrayOutputWithContext(ctx context.Context) NetworkAclsTagArrayOutput {
	return o
}

func (o NetworkAclsTagArrayOutput) Index(i pulumi.IntInput) NetworkAclsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclsTag {
		return vs[0].([]NetworkAclsTag)[vs[1].(int)]
	}).(NetworkAclsTagOutput)
}

type NetworkInterfaceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkInterfaceTagInput is an input type that accepts NetworkInterfaceTagArgs and NetworkInterfaceTagOutput values.
// You can construct a concrete instance of `NetworkInterfaceTagInput` via:
//
//	NetworkInterfaceTagArgs{...}
type NetworkInterfaceTagInput interface {
	pulumi.Input

	ToNetworkInterfaceTagOutput() NetworkInterfaceTagOutput
	ToNetworkInterfaceTagOutputWithContext(context.Context) NetworkInterfaceTagOutput
}

type NetworkInterfaceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTag)(nil)).Elem()
}

func (i NetworkInterfaceTagArgs) ToNetworkInterfaceTagOutput() NetworkInterfaceTagOutput {
	return i.ToNetworkInterfaceTagOutputWithContext(context.Background())
}

func (i NetworkInterfaceTagArgs) ToNetworkInterfaceTagOutputWithContext(ctx context.Context) NetworkInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTagOutput)
}

// NetworkInterfaceTagArrayInput is an input type that accepts NetworkInterfaceTagArray and NetworkInterfaceTagArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceTagArrayInput` via:
//
//	NetworkInterfaceTagArray{ NetworkInterfaceTagArgs{...} }
type NetworkInterfaceTagArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceTagArrayOutput() NetworkInterfaceTagArrayOutput
	ToNetworkInterfaceTagArrayOutputWithContext(context.Context) NetworkInterfaceTagArrayOutput
}

type NetworkInterfaceTagArray []NetworkInterfaceTagInput

func (NetworkInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTag)(nil)).Elem()
}

func (i NetworkInterfaceTagArray) ToNetworkInterfaceTagArrayOutput() NetworkInterfaceTagArrayOutput {
	return i.ToNetworkInterfaceTagArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceTagArray) ToNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) NetworkInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTagArrayOutput)
}

type NetworkInterfaceTagOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTag)(nil)).Elem()
}

func (o NetworkInterfaceTagOutput) ToNetworkInterfaceTagOutput() NetworkInterfaceTagOutput {
	return o
}

func (o NetworkInterfaceTagOutput) ToNetworkInterfaceTagOutputWithContext(ctx context.Context) NetworkInterfaceTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkInterfaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkInterfaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTag)(nil)).Elem()
}

func (o NetworkInterfaceTagArrayOutput) ToNetworkInterfaceTagArrayOutput() NetworkInterfaceTagArrayOutput {
	return o
}

func (o NetworkInterfaceTagArrayOutput) ToNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) NetworkInterfaceTagArrayOutput {
	return o
}

func (o NetworkInterfaceTagArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceTag {
		return vs[0].([]NetworkInterfaceTag)[vs[1].(int)]
	}).(NetworkInterfaceTagOutput)
}

type NetworkInterfacesNetworkInterface struct {
	// The account id of the ENI creator.
	AccountId string `pulumi:"accountId"`
	// The IP address of the EIP to which the ENI associates.
	AssociatedElasticIpAddress string `pulumi:"associatedElasticIpAddress"`
	// The allocation id of the EIP to which the ENI associates.
	AssociatedElasticIpId string `pulumi:"associatedElasticIpId"`
	// The create time of the ENI.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the ENI.
	Description string `pulumi:"description"`
	// The id of the device to which the ENI is bound.
	DeviceId string `pulumi:"deviceId"`
	// The id of the ENI.
	Id string `pulumi:"id"`
	// The IPv6 address list of the ENI.
	Ipv6Sets []string `pulumi:"ipv6Sets"`
	// The mac address of the ENI.
	MacAddress string `pulumi:"macAddress"`
	// The id of the ENI.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// A name of ENI.
	NetworkInterfaceName string `pulumi:"networkInterfaceName"`
	// The enable of port security.
	PortSecurityEnabled bool `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress string `pulumi:"primaryIpAddress"`
	// The IP address of secondary private network interface.
	PrivateIpSets []NetworkInterfacesNetworkInterfacePrivateIpSet `pulumi:"privateIpSets"`
	// The ProjectName of the ENI.
	ProjectName string `pulumi:"projectName"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Whether the network card has been authorized to be used by other account services.
	ServiceManaged bool `pulumi:"serviceManaged"`
	// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
	Status string `pulumi:"status"`
	// An id of the subnet to which the ENI is connected.
	SubnetId string `pulumi:"subnetId"`
	// Tags.
	Tags []NetworkInterfacesNetworkInterfaceTag `pulumi:"tags"`
	// A type of ENI, Optional choice contains `primary`, `secondary`.
	Type string `pulumi:"type"`
	// The last update time of the ENI.
	UpdatedAt string `pulumi:"updatedAt"`
	// An id of the virtual private cloud (VPC) to which the ENI belongs.
	VpcId string `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the ENI belongs.
	VpcName string `pulumi:"vpcName"`
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// NetworkInterfacesNetworkInterfaceInput is an input type that accepts NetworkInterfacesNetworkInterfaceArgs and NetworkInterfacesNetworkInterfaceOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfaceInput` via:
//
//	NetworkInterfacesNetworkInterfaceArgs{...}
type NetworkInterfacesNetworkInterfaceInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfaceOutput() NetworkInterfacesNetworkInterfaceOutput
	ToNetworkInterfacesNetworkInterfaceOutputWithContext(context.Context) NetworkInterfacesNetworkInterfaceOutput
}

type NetworkInterfacesNetworkInterfaceArgs struct {
	// The account id of the ENI creator.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The IP address of the EIP to which the ENI associates.
	AssociatedElasticIpAddress pulumi.StringInput `pulumi:"associatedElasticIpAddress"`
	// The allocation id of the EIP to which the ENI associates.
	AssociatedElasticIpId pulumi.StringInput `pulumi:"associatedElasticIpId"`
	// The create time of the ENI.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the ENI.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the device to which the ENI is bound.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// The id of the ENI.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv6 address list of the ENI.
	Ipv6Sets pulumi.StringArrayInput `pulumi:"ipv6Sets"`
	// The mac address of the ENI.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// The id of the ENI.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// A name of ENI.
	NetworkInterfaceName pulumi.StringInput `pulumi:"networkInterfaceName"`
	// The enable of port security.
	PortSecurityEnabled pulumi.BoolInput `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress pulumi.StringInput `pulumi:"primaryIpAddress"`
	// The IP address of secondary private network interface.
	PrivateIpSets NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput `pulumi:"privateIpSets"`
	// The ProjectName of the ENI.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Whether the network card has been authorized to be used by other account services.
	ServiceManaged pulumi.BoolInput `pulumi:"serviceManaged"`
	// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
	Status pulumi.StringInput `pulumi:"status"`
	// An id of the subnet to which the ENI is connected.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// Tags.
	Tags NetworkInterfacesNetworkInterfaceTagArrayInput `pulumi:"tags"`
	// A type of ENI, Optional choice contains `primary`, `secondary`.
	Type pulumi.StringInput `pulumi:"type"`
	// The last update time of the ENI.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// An id of the virtual private cloud (VPC) to which the ENI belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the ENI belongs.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (NetworkInterfacesNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfaceArgs) ToNetworkInterfacesNetworkInterfaceOutput() NetworkInterfacesNetworkInterfaceOutput {
	return i.ToNetworkInterfacesNetworkInterfaceOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfaceArgs) ToNetworkInterfacesNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfaceOutput)
}

// NetworkInterfacesNetworkInterfaceArrayInput is an input type that accepts NetworkInterfacesNetworkInterfaceArray and NetworkInterfacesNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfaceArrayInput` via:
//
//	NetworkInterfacesNetworkInterfaceArray{ NetworkInterfacesNetworkInterfaceArgs{...} }
type NetworkInterfacesNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfaceArrayOutput() NetworkInterfacesNetworkInterfaceArrayOutput
	ToNetworkInterfacesNetworkInterfaceArrayOutputWithContext(context.Context) NetworkInterfacesNetworkInterfaceArrayOutput
}

type NetworkInterfacesNetworkInterfaceArray []NetworkInterfacesNetworkInterfaceInput

func (NetworkInterfacesNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfaceArray) ToNetworkInterfacesNetworkInterfaceArrayOutput() NetworkInterfacesNetworkInterfaceArrayOutput {
	return i.ToNetworkInterfacesNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfaceArray) ToNetworkInterfacesNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfaceArrayOutput)
}

type NetworkInterfacesNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfaceOutput) ToNetworkInterfacesNetworkInterfaceOutput() NetworkInterfacesNetworkInterfaceOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceOutput) ToNetworkInterfacesNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceOutput {
	return o
}

// The account id of the ENI creator.
func (o NetworkInterfacesNetworkInterfaceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.AccountId }).(pulumi.StringOutput)
}

// The IP address of the EIP to which the ENI associates.
func (o NetworkInterfacesNetworkInterfaceOutput) AssociatedElasticIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.AssociatedElasticIpAddress }).(pulumi.StringOutput)
}

// The allocation id of the EIP to which the ENI associates.
func (o NetworkInterfacesNetworkInterfaceOutput) AssociatedElasticIpId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.AssociatedElasticIpId }).(pulumi.StringOutput)
}

// The create time of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the device to which the ENI is bound.
func (o NetworkInterfacesNetworkInterfaceOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.DeviceId }).(pulumi.StringOutput)
}

// The id of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 address list of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) Ipv6Sets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) []string { return v.Ipv6Sets }).(pulumi.StringArrayOutput)
}

// The mac address of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

// The id of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// A name of ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) NetworkInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.NetworkInterfaceName }).(pulumi.StringOutput)
}

// The enable of port security.
func (o NetworkInterfacesNetworkInterfaceOutput) PortSecurityEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) bool { return v.PortSecurityEnabled }).(pulumi.BoolOutput)
}

// The primary IP address of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) PrimaryIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.PrimaryIpAddress }).(pulumi.StringOutput)
}

// The IP address of secondary private network interface.
func (o NetworkInterfacesNetworkInterfaceOutput) PrivateIpSets() NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) []NetworkInterfacesNetworkInterfacePrivateIpSet {
		return v.PrivateIpSets
	}).(NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput)
}

// The ProjectName of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The list of the security group id to which the secondary ENI belongs.
func (o NetworkInterfacesNetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Whether the network card has been authorized to be used by other account services.
func (o NetworkInterfacesNetworkInterfaceOutput) ServiceManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) bool { return v.ServiceManaged }).(pulumi.BoolOutput)
}

// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
func (o NetworkInterfacesNetworkInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.Status }).(pulumi.StringOutput)
}

// An id of the subnet to which the ENI is connected.
func (o NetworkInterfacesNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

// Tags.
func (o NetworkInterfacesNetworkInterfaceOutput) Tags() NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) []NetworkInterfacesNetworkInterfaceTag { return v.Tags }).(NetworkInterfacesNetworkInterfaceTagArrayOutput)
}

// A type of ENI, Optional choice contains `primary`, `secondary`.
func (o NetworkInterfacesNetworkInterfaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.Type }).(pulumi.StringOutput)
}

// The last update time of the ENI.
func (o NetworkInterfacesNetworkInterfaceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// An id of the virtual private cloud (VPC) to which the ENI belongs.
func (o NetworkInterfacesNetworkInterfaceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the virtual private cloud (VPC) to which the ENI belongs.
func (o NetworkInterfacesNetworkInterfaceOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.VpcName }).(pulumi.StringOutput)
}

// The zone ID.
func (o NetworkInterfacesNetworkInterfaceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterface) string { return v.ZoneId }).(pulumi.StringOutput)
}

type NetworkInterfacesNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterface)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfaceArrayOutput) ToNetworkInterfacesNetworkInterfaceArrayOutput() NetworkInterfacesNetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceArrayOutput) ToNetworkInterfacesNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesNetworkInterface {
		return vs[0].([]NetworkInterfacesNetworkInterface)[vs[1].(int)]
	}).(NetworkInterfacesNetworkInterfaceOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSet struct {
	// The public IP that secondary private network IP associated with.
	AssociatedElasticIps []NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp `pulumi:"associatedElasticIps"`
	// Whether the network interface is primary IP address.
	Primary bool `pulumi:"primary"`
	// The secondary private network IP address of the network interface card.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
}

// NetworkInterfacesNetworkInterfacePrivateIpSetInput is an input type that accepts NetworkInterfacesNetworkInterfacePrivateIpSetArgs and NetworkInterfacesNetworkInterfacePrivateIpSetOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfacePrivateIpSetInput` via:
//
//	NetworkInterfacesNetworkInterfacePrivateIpSetArgs{...}
type NetworkInterfacesNetworkInterfacePrivateIpSetInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfacePrivateIpSetOutput() NetworkInterfacesNetworkInterfacePrivateIpSetOutput
	ToNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetOutput
}

type NetworkInterfacesNetworkInterfacePrivateIpSetArgs struct {
	// The public IP that secondary private network IP associated with.
	AssociatedElasticIps NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput `pulumi:"associatedElasticIps"`
	// Whether the network interface is primary IP address.
	Primary pulumi.BoolInput `pulumi:"primary"`
	// The secondary private network IP address of the network interface card.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
}

func (NetworkInterfacesNetworkInterfacePrivateIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetArgs) ToNetworkInterfacesNetworkInterfacePrivateIpSetOutput() NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return i.ToNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetArgs) ToNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfacePrivateIpSetOutput)
}

// NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput is an input type that accepts NetworkInterfacesNetworkInterfacePrivateIpSetArray and NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput` via:
//
//	NetworkInterfacesNetworkInterfacePrivateIpSetArray{ NetworkInterfacesNetworkInterfacePrivateIpSetArgs{...} }
type NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput
	ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput
}

type NetworkInterfacesNetworkInterfacePrivateIpSetArray []NetworkInterfacesNetworkInterfacePrivateIpSetInput

func (NetworkInterfacesNetworkInterfacePrivateIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetArray) ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return i.ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetArray) ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfacePrivateIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetOutput() NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return o
}

// The public IP that secondary private network IP associated with.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) AssociatedElasticIps() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSet) []NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp {
		return v.AssociatedElasticIps
	}).(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput)
}

// Whether the network interface is primary IP address.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSet) bool { return v.Primary }).(pulumi.BoolOutput)
}

// The secondary private network IP address of the network interface card.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSet) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfacePrivateIpSet)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesNetworkInterfacePrivateIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesNetworkInterfacePrivateIpSet {
		return vs[0].([]NetworkInterfacesNetworkInterfacePrivateIpSet)[vs[1].(int)]
	}).(NetworkInterfacesNetworkInterfacePrivateIpSetOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp struct {
	// The public IP ID.
	AllocationId string `pulumi:"allocationId"`
	// The public IP address.
	EipAddress string `pulumi:"eipAddress"`
}

// NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput is an input type that accepts NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs and NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput` via:
//
//	NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{...}
type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput
	ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs struct {
	// The public IP ID.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// The public IP address.
	EipAddress pulumi.StringInput `pulumi:"eipAddress"`
}

func (NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return i.ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput)
}

// NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput is an input type that accepts NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray and NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput` via:
//
//	NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray{ NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{...} }
type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput
	ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray []NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput

func (NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return i.ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return o
}

// The public IP ID.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp) string { return v.AllocationId }).(pulumi.StringOutput)
}

// The public IP address.
func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp) string { return v.EipAddress }).(pulumi.StringOutput)
}

type NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput() NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) ToNetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp {
		return vs[0].([]NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIp)[vs[1].(int)]
	}).(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput)
}

type NetworkInterfacesNetworkInterfaceTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkInterfacesNetworkInterfaceTagInput is an input type that accepts NetworkInterfacesNetworkInterfaceTagArgs and NetworkInterfacesNetworkInterfaceTagOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfaceTagInput` via:
//
//	NetworkInterfacesNetworkInterfaceTagArgs{...}
type NetworkInterfacesNetworkInterfaceTagInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfaceTagOutput() NetworkInterfacesNetworkInterfaceTagOutput
	ToNetworkInterfacesNetworkInterfaceTagOutputWithContext(context.Context) NetworkInterfacesNetworkInterfaceTagOutput
}

type NetworkInterfacesNetworkInterfaceTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkInterfacesNetworkInterfaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfaceTagArgs) ToNetworkInterfacesNetworkInterfaceTagOutput() NetworkInterfacesNetworkInterfaceTagOutput {
	return i.ToNetworkInterfacesNetworkInterfaceTagOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfaceTagArgs) ToNetworkInterfacesNetworkInterfaceTagOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfaceTagOutput)
}

// NetworkInterfacesNetworkInterfaceTagArrayInput is an input type that accepts NetworkInterfacesNetworkInterfaceTagArray and NetworkInterfacesNetworkInterfaceTagArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesNetworkInterfaceTagArrayInput` via:
//
//	NetworkInterfacesNetworkInterfaceTagArray{ NetworkInterfacesNetworkInterfaceTagArgs{...} }
type NetworkInterfacesNetworkInterfaceTagArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesNetworkInterfaceTagArrayOutput() NetworkInterfacesNetworkInterfaceTagArrayOutput
	ToNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(context.Context) NetworkInterfacesNetworkInterfaceTagArrayOutput
}

type NetworkInterfacesNetworkInterfaceTagArray []NetworkInterfacesNetworkInterfaceTagInput

func (NetworkInterfacesNetworkInterfaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (i NetworkInterfacesNetworkInterfaceTagArray) ToNetworkInterfacesNetworkInterfaceTagArrayOutput() NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return i.ToNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesNetworkInterfaceTagArray) ToNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesNetworkInterfaceTagArrayOutput)
}

type NetworkInterfacesNetworkInterfaceTagOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfaceTagOutput) ToNetworkInterfacesNetworkInterfaceTagOutput() NetworkInterfacesNetworkInterfaceTagOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceTagOutput) ToNetworkInterfacesNetworkInterfaceTagOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkInterfacesNetworkInterfaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfaceTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkInterfacesNetworkInterfaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesNetworkInterfaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkInterfacesNetworkInterfaceTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesNetworkInterfaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesNetworkInterfaceTag)(nil)).Elem()
}

func (o NetworkInterfacesNetworkInterfaceTagArrayOutput) ToNetworkInterfacesNetworkInterfaceTagArrayOutput() NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceTagArrayOutput) ToNetworkInterfacesNetworkInterfaceTagArrayOutputWithContext(ctx context.Context) NetworkInterfacesNetworkInterfaceTagArrayOutput {
	return o
}

func (o NetworkInterfacesNetworkInterfaceTagArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesNetworkInterfaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesNetworkInterfaceTag {
		return vs[0].([]NetworkInterfacesNetworkInterfaceTag)[vs[1].(int)]
	}).(NetworkInterfacesNetworkInterfaceTagOutput)
}

type NetworkInterfacesTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// NetworkInterfacesTagInput is an input type that accepts NetworkInterfacesTagArgs and NetworkInterfacesTagOutput values.
// You can construct a concrete instance of `NetworkInterfacesTagInput` via:
//
//	NetworkInterfacesTagArgs{...}
type NetworkInterfacesTagInput interface {
	pulumi.Input

	ToNetworkInterfacesTagOutput() NetworkInterfacesTagOutput
	ToNetworkInterfacesTagOutputWithContext(context.Context) NetworkInterfacesTagOutput
}

type NetworkInterfacesTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NetworkInterfacesTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesTag)(nil)).Elem()
}

func (i NetworkInterfacesTagArgs) ToNetworkInterfacesTagOutput() NetworkInterfacesTagOutput {
	return i.ToNetworkInterfacesTagOutputWithContext(context.Background())
}

func (i NetworkInterfacesTagArgs) ToNetworkInterfacesTagOutputWithContext(ctx context.Context) NetworkInterfacesTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesTagOutput)
}

// NetworkInterfacesTagArrayInput is an input type that accepts NetworkInterfacesTagArray and NetworkInterfacesTagArrayOutput values.
// You can construct a concrete instance of `NetworkInterfacesTagArrayInput` via:
//
//	NetworkInterfacesTagArray{ NetworkInterfacesTagArgs{...} }
type NetworkInterfacesTagArrayInput interface {
	pulumi.Input

	ToNetworkInterfacesTagArrayOutput() NetworkInterfacesTagArrayOutput
	ToNetworkInterfacesTagArrayOutputWithContext(context.Context) NetworkInterfacesTagArrayOutput
}

type NetworkInterfacesTagArray []NetworkInterfacesTagInput

func (NetworkInterfacesTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesTag)(nil)).Elem()
}

func (i NetworkInterfacesTagArray) ToNetworkInterfacesTagArrayOutput() NetworkInterfacesTagArrayOutput {
	return i.ToNetworkInterfacesTagArrayOutputWithContext(context.Background())
}

func (i NetworkInterfacesTagArray) ToNetworkInterfacesTagArrayOutputWithContext(ctx context.Context) NetworkInterfacesTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfacesTagArrayOutput)
}

type NetworkInterfacesTagOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfacesTag)(nil)).Elem()
}

func (o NetworkInterfacesTagOutput) ToNetworkInterfacesTagOutput() NetworkInterfacesTagOutput {
	return o
}

func (o NetworkInterfacesTagOutput) ToNetworkInterfacesTagOutputWithContext(ctx context.Context) NetworkInterfacesTagOutput {
	return o
}

// The Key of Tags.
func (o NetworkInterfacesTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o NetworkInterfacesTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfacesTag) string { return v.Value }).(pulumi.StringOutput)
}

type NetworkInterfacesTagArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfacesTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfacesTag)(nil)).Elem()
}

func (o NetworkInterfacesTagArrayOutput) ToNetworkInterfacesTagArrayOutput() NetworkInterfacesTagArrayOutput {
	return o
}

func (o NetworkInterfacesTagArrayOutput) ToNetworkInterfacesTagArrayOutputWithContext(ctx context.Context) NetworkInterfacesTagArrayOutput {
	return o
}

func (o NetworkInterfacesTagArrayOutput) Index(i pulumi.IntInput) NetworkInterfacesTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfacesTag {
		return vs[0].([]NetworkInterfacesTag)[vs[1].(int)]
	}).(NetworkInterfacesTagOutput)
}

type PrefixListPrefixListAssociation struct {
	// Associated resource ID.
	ResourceId *string `pulumi:"resourceId"`
	// Related resource types.
	ResourceType *string `pulumi:"resourceType"`
}

// PrefixListPrefixListAssociationInput is an input type that accepts PrefixListPrefixListAssociationArgs and PrefixListPrefixListAssociationOutput values.
// You can construct a concrete instance of `PrefixListPrefixListAssociationInput` via:
//
//	PrefixListPrefixListAssociationArgs{...}
type PrefixListPrefixListAssociationInput interface {
	pulumi.Input

	ToPrefixListPrefixListAssociationOutput() PrefixListPrefixListAssociationOutput
	ToPrefixListPrefixListAssociationOutputWithContext(context.Context) PrefixListPrefixListAssociationOutput
}

type PrefixListPrefixListAssociationArgs struct {
	// Associated resource ID.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Related resource types.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (PrefixListPrefixListAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListPrefixListAssociation)(nil)).Elem()
}

func (i PrefixListPrefixListAssociationArgs) ToPrefixListPrefixListAssociationOutput() PrefixListPrefixListAssociationOutput {
	return i.ToPrefixListPrefixListAssociationOutputWithContext(context.Background())
}

func (i PrefixListPrefixListAssociationArgs) ToPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) PrefixListPrefixListAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListPrefixListAssociationOutput)
}

// PrefixListPrefixListAssociationArrayInput is an input type that accepts PrefixListPrefixListAssociationArray and PrefixListPrefixListAssociationArrayOutput values.
// You can construct a concrete instance of `PrefixListPrefixListAssociationArrayInput` via:
//
//	PrefixListPrefixListAssociationArray{ PrefixListPrefixListAssociationArgs{...} }
type PrefixListPrefixListAssociationArrayInput interface {
	pulumi.Input

	ToPrefixListPrefixListAssociationArrayOutput() PrefixListPrefixListAssociationArrayOutput
	ToPrefixListPrefixListAssociationArrayOutputWithContext(context.Context) PrefixListPrefixListAssociationArrayOutput
}

type PrefixListPrefixListAssociationArray []PrefixListPrefixListAssociationInput

func (PrefixListPrefixListAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListPrefixListAssociation)(nil)).Elem()
}

func (i PrefixListPrefixListAssociationArray) ToPrefixListPrefixListAssociationArrayOutput() PrefixListPrefixListAssociationArrayOutput {
	return i.ToPrefixListPrefixListAssociationArrayOutputWithContext(context.Background())
}

func (i PrefixListPrefixListAssociationArray) ToPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) PrefixListPrefixListAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListPrefixListAssociationArrayOutput)
}

type PrefixListPrefixListAssociationOutput struct{ *pulumi.OutputState }

func (PrefixListPrefixListAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListPrefixListAssociation)(nil)).Elem()
}

func (o PrefixListPrefixListAssociationOutput) ToPrefixListPrefixListAssociationOutput() PrefixListPrefixListAssociationOutput {
	return o
}

func (o PrefixListPrefixListAssociationOutput) ToPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) PrefixListPrefixListAssociationOutput {
	return o
}

// Associated resource ID.
func (o PrefixListPrefixListAssociationOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListPrefixListAssociation) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Related resource types.
func (o PrefixListPrefixListAssociationOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListPrefixListAssociation) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type PrefixListPrefixListAssociationArrayOutput struct{ *pulumi.OutputState }

func (PrefixListPrefixListAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListPrefixListAssociation)(nil)).Elem()
}

func (o PrefixListPrefixListAssociationArrayOutput) ToPrefixListPrefixListAssociationArrayOutput() PrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o PrefixListPrefixListAssociationArrayOutput) ToPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) PrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o PrefixListPrefixListAssociationArrayOutput) Index(i pulumi.IntInput) PrefixListPrefixListAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListPrefixListAssociation {
		return vs[0].([]PrefixListPrefixListAssociation)[vs[1].(int)]
	}).(PrefixListPrefixListAssociationOutput)
}

type PrefixListPrefixListEntry struct {
	// CIDR of prefix list entries.
	Cidr *string `pulumi:"cidr"`
	// Description of prefix list entries.
	Description *string `pulumi:"description"`
}

// PrefixListPrefixListEntryInput is an input type that accepts PrefixListPrefixListEntryArgs and PrefixListPrefixListEntryOutput values.
// You can construct a concrete instance of `PrefixListPrefixListEntryInput` via:
//
//	PrefixListPrefixListEntryArgs{...}
type PrefixListPrefixListEntryInput interface {
	pulumi.Input

	ToPrefixListPrefixListEntryOutput() PrefixListPrefixListEntryOutput
	ToPrefixListPrefixListEntryOutputWithContext(context.Context) PrefixListPrefixListEntryOutput
}

type PrefixListPrefixListEntryArgs struct {
	// CIDR of prefix list entries.
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Description of prefix list entries.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (PrefixListPrefixListEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListPrefixListEntry)(nil)).Elem()
}

func (i PrefixListPrefixListEntryArgs) ToPrefixListPrefixListEntryOutput() PrefixListPrefixListEntryOutput {
	return i.ToPrefixListPrefixListEntryOutputWithContext(context.Background())
}

func (i PrefixListPrefixListEntryArgs) ToPrefixListPrefixListEntryOutputWithContext(ctx context.Context) PrefixListPrefixListEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListPrefixListEntryOutput)
}

// PrefixListPrefixListEntryArrayInput is an input type that accepts PrefixListPrefixListEntryArray and PrefixListPrefixListEntryArrayOutput values.
// You can construct a concrete instance of `PrefixListPrefixListEntryArrayInput` via:
//
//	PrefixListPrefixListEntryArray{ PrefixListPrefixListEntryArgs{...} }
type PrefixListPrefixListEntryArrayInput interface {
	pulumi.Input

	ToPrefixListPrefixListEntryArrayOutput() PrefixListPrefixListEntryArrayOutput
	ToPrefixListPrefixListEntryArrayOutputWithContext(context.Context) PrefixListPrefixListEntryArrayOutput
}

type PrefixListPrefixListEntryArray []PrefixListPrefixListEntryInput

func (PrefixListPrefixListEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListPrefixListEntry)(nil)).Elem()
}

func (i PrefixListPrefixListEntryArray) ToPrefixListPrefixListEntryArrayOutput() PrefixListPrefixListEntryArrayOutput {
	return i.ToPrefixListPrefixListEntryArrayOutputWithContext(context.Background())
}

func (i PrefixListPrefixListEntryArray) ToPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListPrefixListEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListPrefixListEntryArrayOutput)
}

type PrefixListPrefixListEntryOutput struct{ *pulumi.OutputState }

func (PrefixListPrefixListEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListPrefixListEntry)(nil)).Elem()
}

func (o PrefixListPrefixListEntryOutput) ToPrefixListPrefixListEntryOutput() PrefixListPrefixListEntryOutput {
	return o
}

func (o PrefixListPrefixListEntryOutput) ToPrefixListPrefixListEntryOutputWithContext(ctx context.Context) PrefixListPrefixListEntryOutput {
	return o
}

// CIDR of prefix list entries.
func (o PrefixListPrefixListEntryOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListPrefixListEntry) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// Description of prefix list entries.
func (o PrefixListPrefixListEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListPrefixListEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type PrefixListPrefixListEntryArrayOutput struct{ *pulumi.OutputState }

func (PrefixListPrefixListEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListPrefixListEntry)(nil)).Elem()
}

func (o PrefixListPrefixListEntryArrayOutput) ToPrefixListPrefixListEntryArrayOutput() PrefixListPrefixListEntryArrayOutput {
	return o
}

func (o PrefixListPrefixListEntryArrayOutput) ToPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListPrefixListEntryArrayOutput {
	return o
}

func (o PrefixListPrefixListEntryArrayOutput) Index(i pulumi.IntInput) PrefixListPrefixListEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListPrefixListEntry {
		return vs[0].([]PrefixListPrefixListEntry)[vs[1].(int)]
	}).(PrefixListPrefixListEntryOutput)
}

type PrefixListTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// PrefixListTagInput is an input type that accepts PrefixListTagArgs and PrefixListTagOutput values.
// You can construct a concrete instance of `PrefixListTagInput` via:
//
//	PrefixListTagArgs{...}
type PrefixListTagInput interface {
	pulumi.Input

	ToPrefixListTagOutput() PrefixListTagOutput
	ToPrefixListTagOutputWithContext(context.Context) PrefixListTagOutput
}

type PrefixListTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PrefixListTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListTag)(nil)).Elem()
}

func (i PrefixListTagArgs) ToPrefixListTagOutput() PrefixListTagOutput {
	return i.ToPrefixListTagOutputWithContext(context.Background())
}

func (i PrefixListTagArgs) ToPrefixListTagOutputWithContext(ctx context.Context) PrefixListTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListTagOutput)
}

// PrefixListTagArrayInput is an input type that accepts PrefixListTagArray and PrefixListTagArrayOutput values.
// You can construct a concrete instance of `PrefixListTagArrayInput` via:
//
//	PrefixListTagArray{ PrefixListTagArgs{...} }
type PrefixListTagArrayInput interface {
	pulumi.Input

	ToPrefixListTagArrayOutput() PrefixListTagArrayOutput
	ToPrefixListTagArrayOutputWithContext(context.Context) PrefixListTagArrayOutput
}

type PrefixListTagArray []PrefixListTagInput

func (PrefixListTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListTag)(nil)).Elem()
}

func (i PrefixListTagArray) ToPrefixListTagArrayOutput() PrefixListTagArrayOutput {
	return i.ToPrefixListTagArrayOutputWithContext(context.Background())
}

func (i PrefixListTagArray) ToPrefixListTagArrayOutputWithContext(ctx context.Context) PrefixListTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListTagArrayOutput)
}

type PrefixListTagOutput struct{ *pulumi.OutputState }

func (PrefixListTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListTag)(nil)).Elem()
}

func (o PrefixListTagOutput) ToPrefixListTagOutput() PrefixListTagOutput {
	return o
}

func (o PrefixListTagOutput) ToPrefixListTagOutputWithContext(ctx context.Context) PrefixListTagOutput {
	return o
}

// The Key of Tags.
func (o PrefixListTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o PrefixListTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListTag) string { return v.Value }).(pulumi.StringOutput)
}

type PrefixListTagArrayOutput struct{ *pulumi.OutputState }

func (PrefixListTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListTag)(nil)).Elem()
}

func (o PrefixListTagArrayOutput) ToPrefixListTagArrayOutput() PrefixListTagArrayOutput {
	return o
}

func (o PrefixListTagArrayOutput) ToPrefixListTagArrayOutputWithContext(ctx context.Context) PrefixListTagArrayOutput {
	return o
}

func (o PrefixListTagArrayOutput) Index(i pulumi.IntInput) PrefixListTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListTag {
		return vs[0].([]PrefixListTag)[vs[1].(int)]
	}).(PrefixListTagOutput)
}

type PrefixListsPrefixList struct {
	// Number of associated resources for prefix list.
	AssociationCount int `pulumi:"associationCount"`
	// CIDR address block information for prefix list.
	Cidrs []string `pulumi:"cidrs"`
	// The creation time of the prefix list.
	CreationTime string `pulumi:"creationTime"`
	// Description.
	Description string `pulumi:"description"`
	// The id of the prefix list.
	Id string `pulumi:"id"`
	// IP version of prefix list.
	IpVersion string `pulumi:"ipVersion"`
	// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
	MaxEntries int `pulumi:"maxEntries"`
	// Collection of resources associated with VPC prefix list.
	PrefixListAssociations []PrefixListsPrefixListPrefixListAssociation `pulumi:"prefixListAssociations"`
	// The prefix list entries.
	PrefixListEntries []PrefixListsPrefixListPrefixListEntry `pulumi:"prefixListEntries"`
	// The prefix list id.
	PrefixListId string `pulumi:"prefixListId"`
	// A Name of prefix list.
	PrefixListName string `pulumi:"prefixListName"`
	// The status of the prefix list.
	Status string `pulumi:"status"`
	// The update time of the prefix list.
	UpdateTime string `pulumi:"updateTime"`
}

// PrefixListsPrefixListInput is an input type that accepts PrefixListsPrefixListArgs and PrefixListsPrefixListOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListInput` via:
//
//	PrefixListsPrefixListArgs{...}
type PrefixListsPrefixListInput interface {
	pulumi.Input

	ToPrefixListsPrefixListOutput() PrefixListsPrefixListOutput
	ToPrefixListsPrefixListOutputWithContext(context.Context) PrefixListsPrefixListOutput
}

type PrefixListsPrefixListArgs struct {
	// Number of associated resources for prefix list.
	AssociationCount pulumi.IntInput `pulumi:"associationCount"`
	// CIDR address block information for prefix list.
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// The creation time of the prefix list.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the prefix list.
	Id pulumi.StringInput `pulumi:"id"`
	// IP version of prefix list.
	IpVersion pulumi.StringInput `pulumi:"ipVersion"`
	// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
	MaxEntries pulumi.IntInput `pulumi:"maxEntries"`
	// Collection of resources associated with VPC prefix list.
	PrefixListAssociations PrefixListsPrefixListPrefixListAssociationArrayInput `pulumi:"prefixListAssociations"`
	// The prefix list entries.
	PrefixListEntries PrefixListsPrefixListPrefixListEntryArrayInput `pulumi:"prefixListEntries"`
	// The prefix list id.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
	// A Name of prefix list.
	PrefixListName pulumi.StringInput `pulumi:"prefixListName"`
	// The status of the prefix list.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of the prefix list.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (PrefixListsPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixList)(nil)).Elem()
}

func (i PrefixListsPrefixListArgs) ToPrefixListsPrefixListOutput() PrefixListsPrefixListOutput {
	return i.ToPrefixListsPrefixListOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListArgs) ToPrefixListsPrefixListOutputWithContext(ctx context.Context) PrefixListsPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListOutput)
}

// PrefixListsPrefixListArrayInput is an input type that accepts PrefixListsPrefixListArray and PrefixListsPrefixListArrayOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListArrayInput` via:
//
//	PrefixListsPrefixListArray{ PrefixListsPrefixListArgs{...} }
type PrefixListsPrefixListArrayInput interface {
	pulumi.Input

	ToPrefixListsPrefixListArrayOutput() PrefixListsPrefixListArrayOutput
	ToPrefixListsPrefixListArrayOutputWithContext(context.Context) PrefixListsPrefixListArrayOutput
}

type PrefixListsPrefixListArray []PrefixListsPrefixListInput

func (PrefixListsPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixList)(nil)).Elem()
}

func (i PrefixListsPrefixListArray) ToPrefixListsPrefixListArrayOutput() PrefixListsPrefixListArrayOutput {
	return i.ToPrefixListsPrefixListArrayOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListArray) ToPrefixListsPrefixListArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListArrayOutput)
}

type PrefixListsPrefixListOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixList)(nil)).Elem()
}

func (o PrefixListsPrefixListOutput) ToPrefixListsPrefixListOutput() PrefixListsPrefixListOutput {
	return o
}

func (o PrefixListsPrefixListOutput) ToPrefixListsPrefixListOutputWithContext(ctx context.Context) PrefixListsPrefixListOutput {
	return o
}

// Number of associated resources for prefix list.
func (o PrefixListsPrefixListOutput) AssociationCount() pulumi.IntOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) int { return v.AssociationCount }).(pulumi.IntOutput)
}

// CIDR address block information for prefix list.
func (o PrefixListsPrefixListOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// The creation time of the prefix list.
func (o PrefixListsPrefixListOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Description.
func (o PrefixListsPrefixListOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the prefix list.
func (o PrefixListsPrefixListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.Id }).(pulumi.StringOutput)
}

// IP version of prefix list.
func (o PrefixListsPrefixListOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.IpVersion }).(pulumi.StringOutput)
}

// Maximum number of entries, which is the maximum number of items that can be added to the prefix list.
func (o PrefixListsPrefixListOutput) MaxEntries() pulumi.IntOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) int { return v.MaxEntries }).(pulumi.IntOutput)
}

// Collection of resources associated with VPC prefix list.
func (o PrefixListsPrefixListOutput) PrefixListAssociations() PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) []PrefixListsPrefixListPrefixListAssociation {
		return v.PrefixListAssociations
	}).(PrefixListsPrefixListPrefixListAssociationArrayOutput)
}

// The prefix list entries.
func (o PrefixListsPrefixListOutput) PrefixListEntries() PrefixListsPrefixListPrefixListEntryArrayOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) []PrefixListsPrefixListPrefixListEntry { return v.PrefixListEntries }).(PrefixListsPrefixListPrefixListEntryArrayOutput)
}

// The prefix list id.
func (o PrefixListsPrefixListOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.PrefixListId }).(pulumi.StringOutput)
}

// A Name of prefix list.
func (o PrefixListsPrefixListOutput) PrefixListName() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.PrefixListName }).(pulumi.StringOutput)
}

// The status of the prefix list.
func (o PrefixListsPrefixListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of the prefix list.
func (o PrefixListsPrefixListOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixList) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type PrefixListsPrefixListArrayOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixList)(nil)).Elem()
}

func (o PrefixListsPrefixListArrayOutput) ToPrefixListsPrefixListArrayOutput() PrefixListsPrefixListArrayOutput {
	return o
}

func (o PrefixListsPrefixListArrayOutput) ToPrefixListsPrefixListArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListArrayOutput {
	return o
}

func (o PrefixListsPrefixListArrayOutput) Index(i pulumi.IntInput) PrefixListsPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListsPrefixList {
		return vs[0].([]PrefixListsPrefixList)[vs[1].(int)]
	}).(PrefixListsPrefixListOutput)
}

type PrefixListsPrefixListPrefixListAssociation struct {
	// Associated resource ID.
	ResourceId string `pulumi:"resourceId"`
	// Related resource types.
	ResourceType string `pulumi:"resourceType"`
}

// PrefixListsPrefixListPrefixListAssociationInput is an input type that accepts PrefixListsPrefixListPrefixListAssociationArgs and PrefixListsPrefixListPrefixListAssociationOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListPrefixListAssociationInput` via:
//
//	PrefixListsPrefixListPrefixListAssociationArgs{...}
type PrefixListsPrefixListPrefixListAssociationInput interface {
	pulumi.Input

	ToPrefixListsPrefixListPrefixListAssociationOutput() PrefixListsPrefixListPrefixListAssociationOutput
	ToPrefixListsPrefixListPrefixListAssociationOutputWithContext(context.Context) PrefixListsPrefixListPrefixListAssociationOutput
}

type PrefixListsPrefixListPrefixListAssociationArgs struct {
	// Associated resource ID.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Related resource types.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (PrefixListsPrefixListPrefixListAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (i PrefixListsPrefixListPrefixListAssociationArgs) ToPrefixListsPrefixListPrefixListAssociationOutput() PrefixListsPrefixListPrefixListAssociationOutput {
	return i.ToPrefixListsPrefixListPrefixListAssociationOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListPrefixListAssociationArgs) ToPrefixListsPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListPrefixListAssociationOutput)
}

// PrefixListsPrefixListPrefixListAssociationArrayInput is an input type that accepts PrefixListsPrefixListPrefixListAssociationArray and PrefixListsPrefixListPrefixListAssociationArrayOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListPrefixListAssociationArrayInput` via:
//
//	PrefixListsPrefixListPrefixListAssociationArray{ PrefixListsPrefixListPrefixListAssociationArgs{...} }
type PrefixListsPrefixListPrefixListAssociationArrayInput interface {
	pulumi.Input

	ToPrefixListsPrefixListPrefixListAssociationArrayOutput() PrefixListsPrefixListPrefixListAssociationArrayOutput
	ToPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(context.Context) PrefixListsPrefixListPrefixListAssociationArrayOutput
}

type PrefixListsPrefixListPrefixListAssociationArray []PrefixListsPrefixListPrefixListAssociationInput

func (PrefixListsPrefixListPrefixListAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (i PrefixListsPrefixListPrefixListAssociationArray) ToPrefixListsPrefixListPrefixListAssociationArrayOutput() PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return i.ToPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListPrefixListAssociationArray) ToPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListPrefixListAssociationArrayOutput)
}

type PrefixListsPrefixListPrefixListAssociationOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListPrefixListAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (o PrefixListsPrefixListPrefixListAssociationOutput) ToPrefixListsPrefixListPrefixListAssociationOutput() PrefixListsPrefixListPrefixListAssociationOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListAssociationOutput) ToPrefixListsPrefixListPrefixListAssociationOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListAssociationOutput {
	return o
}

// Associated resource ID.
func (o PrefixListsPrefixListPrefixListAssociationOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListAssociation) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Related resource types.
func (o PrefixListsPrefixListPrefixListAssociationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListAssociation) string { return v.ResourceType }).(pulumi.StringOutput)
}

type PrefixListsPrefixListPrefixListAssociationArrayOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListPrefixListAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixListPrefixListAssociation)(nil)).Elem()
}

func (o PrefixListsPrefixListPrefixListAssociationArrayOutput) ToPrefixListsPrefixListPrefixListAssociationArrayOutput() PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListAssociationArrayOutput) ToPrefixListsPrefixListPrefixListAssociationArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListAssociationArrayOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListAssociationArrayOutput) Index(i pulumi.IntInput) PrefixListsPrefixListPrefixListAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListsPrefixListPrefixListAssociation {
		return vs[0].([]PrefixListsPrefixListPrefixListAssociation)[vs[1].(int)]
	}).(PrefixListsPrefixListPrefixListAssociationOutput)
}

type PrefixListsPrefixListPrefixListEntry struct {
	// CIDR address blocks for prefix list entries.
	Cidr string `pulumi:"cidr"`
	// Description.
	Description string `pulumi:"description"`
	// The prefix list id.
	PrefixListId string `pulumi:"prefixListId"`
}

// PrefixListsPrefixListPrefixListEntryInput is an input type that accepts PrefixListsPrefixListPrefixListEntryArgs and PrefixListsPrefixListPrefixListEntryOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListPrefixListEntryInput` via:
//
//	PrefixListsPrefixListPrefixListEntryArgs{...}
type PrefixListsPrefixListPrefixListEntryInput interface {
	pulumi.Input

	ToPrefixListsPrefixListPrefixListEntryOutput() PrefixListsPrefixListPrefixListEntryOutput
	ToPrefixListsPrefixListPrefixListEntryOutputWithContext(context.Context) PrefixListsPrefixListPrefixListEntryOutput
}

type PrefixListsPrefixListPrefixListEntryArgs struct {
	// CIDR address blocks for prefix list entries.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Description.
	Description pulumi.StringInput `pulumi:"description"`
	// The prefix list id.
	PrefixListId pulumi.StringInput `pulumi:"prefixListId"`
}

func (PrefixListsPrefixListPrefixListEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (i PrefixListsPrefixListPrefixListEntryArgs) ToPrefixListsPrefixListPrefixListEntryOutput() PrefixListsPrefixListPrefixListEntryOutput {
	return i.ToPrefixListsPrefixListPrefixListEntryOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListPrefixListEntryArgs) ToPrefixListsPrefixListPrefixListEntryOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListPrefixListEntryOutput)
}

// PrefixListsPrefixListPrefixListEntryArrayInput is an input type that accepts PrefixListsPrefixListPrefixListEntryArray and PrefixListsPrefixListPrefixListEntryArrayOutput values.
// You can construct a concrete instance of `PrefixListsPrefixListPrefixListEntryArrayInput` via:
//
//	PrefixListsPrefixListPrefixListEntryArray{ PrefixListsPrefixListPrefixListEntryArgs{...} }
type PrefixListsPrefixListPrefixListEntryArrayInput interface {
	pulumi.Input

	ToPrefixListsPrefixListPrefixListEntryArrayOutput() PrefixListsPrefixListPrefixListEntryArrayOutput
	ToPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(context.Context) PrefixListsPrefixListPrefixListEntryArrayOutput
}

type PrefixListsPrefixListPrefixListEntryArray []PrefixListsPrefixListPrefixListEntryInput

func (PrefixListsPrefixListPrefixListEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (i PrefixListsPrefixListPrefixListEntryArray) ToPrefixListsPrefixListPrefixListEntryArrayOutput() PrefixListsPrefixListPrefixListEntryArrayOutput {
	return i.ToPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(context.Background())
}

func (i PrefixListsPrefixListPrefixListEntryArray) ToPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsPrefixListPrefixListEntryArrayOutput)
}

type PrefixListsPrefixListPrefixListEntryOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListPrefixListEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (o PrefixListsPrefixListPrefixListEntryOutput) ToPrefixListsPrefixListPrefixListEntryOutput() PrefixListsPrefixListPrefixListEntryOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListEntryOutput) ToPrefixListsPrefixListPrefixListEntryOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListEntryOutput {
	return o
}

// CIDR address blocks for prefix list entries.
func (o PrefixListsPrefixListPrefixListEntryOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListEntry) string { return v.Cidr }).(pulumi.StringOutput)
}

// Description.
func (o PrefixListsPrefixListPrefixListEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The prefix list id.
func (o PrefixListsPrefixListPrefixListEntryOutput) PrefixListId() pulumi.StringOutput {
	return o.ApplyT(func(v PrefixListsPrefixListPrefixListEntry) string { return v.PrefixListId }).(pulumi.StringOutput)
}

type PrefixListsPrefixListPrefixListEntryArrayOutput struct{ *pulumi.OutputState }

func (PrefixListsPrefixListPrefixListEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsPrefixListPrefixListEntry)(nil)).Elem()
}

func (o PrefixListsPrefixListPrefixListEntryArrayOutput) ToPrefixListsPrefixListPrefixListEntryArrayOutput() PrefixListsPrefixListPrefixListEntryArrayOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListEntryArrayOutput) ToPrefixListsPrefixListPrefixListEntryArrayOutputWithContext(ctx context.Context) PrefixListsPrefixListPrefixListEntryArrayOutput {
	return o
}

func (o PrefixListsPrefixListPrefixListEntryArrayOutput) Index(i pulumi.IntInput) PrefixListsPrefixListPrefixListEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListsPrefixListPrefixListEntry {
		return vs[0].([]PrefixListsPrefixListPrefixListEntry)[vs[1].(int)]
	}).(PrefixListsPrefixListPrefixListEntryOutput)
}

type PrefixListsTagFilter struct {
	// The key of the tag.
	Key *string `pulumi:"key"`
	// The values of the tag.
	Values []string `pulumi:"values"`
}

// PrefixListsTagFilterInput is an input type that accepts PrefixListsTagFilterArgs and PrefixListsTagFilterOutput values.
// You can construct a concrete instance of `PrefixListsTagFilterInput` via:
//
//	PrefixListsTagFilterArgs{...}
type PrefixListsTagFilterInput interface {
	pulumi.Input

	ToPrefixListsTagFilterOutput() PrefixListsTagFilterOutput
	ToPrefixListsTagFilterOutputWithContext(context.Context) PrefixListsTagFilterOutput
}

type PrefixListsTagFilterArgs struct {
	// The key of the tag.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The values of the tag.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PrefixListsTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsTagFilter)(nil)).Elem()
}

func (i PrefixListsTagFilterArgs) ToPrefixListsTagFilterOutput() PrefixListsTagFilterOutput {
	return i.ToPrefixListsTagFilterOutputWithContext(context.Background())
}

func (i PrefixListsTagFilterArgs) ToPrefixListsTagFilterOutputWithContext(ctx context.Context) PrefixListsTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsTagFilterOutput)
}

// PrefixListsTagFilterArrayInput is an input type that accepts PrefixListsTagFilterArray and PrefixListsTagFilterArrayOutput values.
// You can construct a concrete instance of `PrefixListsTagFilterArrayInput` via:
//
//	PrefixListsTagFilterArray{ PrefixListsTagFilterArgs{...} }
type PrefixListsTagFilterArrayInput interface {
	pulumi.Input

	ToPrefixListsTagFilterArrayOutput() PrefixListsTagFilterArrayOutput
	ToPrefixListsTagFilterArrayOutputWithContext(context.Context) PrefixListsTagFilterArrayOutput
}

type PrefixListsTagFilterArray []PrefixListsTagFilterInput

func (PrefixListsTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsTagFilter)(nil)).Elem()
}

func (i PrefixListsTagFilterArray) ToPrefixListsTagFilterArrayOutput() PrefixListsTagFilterArrayOutput {
	return i.ToPrefixListsTagFilterArrayOutputWithContext(context.Background())
}

func (i PrefixListsTagFilterArray) ToPrefixListsTagFilterArrayOutputWithContext(ctx context.Context) PrefixListsTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrefixListsTagFilterArrayOutput)
}

type PrefixListsTagFilterOutput struct{ *pulumi.OutputState }

func (PrefixListsTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrefixListsTagFilter)(nil)).Elem()
}

func (o PrefixListsTagFilterOutput) ToPrefixListsTagFilterOutput() PrefixListsTagFilterOutput {
	return o
}

func (o PrefixListsTagFilterOutput) ToPrefixListsTagFilterOutputWithContext(ctx context.Context) PrefixListsTagFilterOutput {
	return o
}

// The key of the tag.
func (o PrefixListsTagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrefixListsTagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The values of the tag.
func (o PrefixListsTagFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrefixListsTagFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PrefixListsTagFilterArrayOutput struct{ *pulumi.OutputState }

func (PrefixListsTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrefixListsTagFilter)(nil)).Elem()
}

func (o PrefixListsTagFilterArrayOutput) ToPrefixListsTagFilterArrayOutput() PrefixListsTagFilterArrayOutput {
	return o
}

func (o PrefixListsTagFilterArrayOutput) ToPrefixListsTagFilterArrayOutputWithContext(ctx context.Context) PrefixListsTagFilterArrayOutput {
	return o
}

func (o PrefixListsTagFilterArrayOutput) Index(i pulumi.IntInput) PrefixListsTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrefixListsTagFilter {
		return vs[0].([]PrefixListsTagFilter)[vs[1].(int)]
	}).(PrefixListsTagFilterOutput)
}

type RouteEntriesRouteEntry struct {
	// The description of the route entry.
	Description string `pulumi:"description"`
	// A destination CIDR block of route entry.
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// The id of the route entry.
	Id string `pulumi:"id"`
	// An id of next hop.
	NextHopId string `pulumi:"nextHopId"`
	// The name of the next hop.
	NextHopName string `pulumi:"nextHopName"`
	// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
	NextHopType string `pulumi:"nextHopType"`
	// The id of the route entry.
	RouteEntryId string `pulumi:"routeEntryId"`
	// A name of route entry.
	RouteEntryName string `pulumi:"routeEntryName"`
	// An id of route table.
	RouteTableId string `pulumi:"routeTableId"`
	// The status of the route entry.
	Status string `pulumi:"status"`
	// The type of the route entry.
	Type string `pulumi:"type"`
	// The id of the virtual private cloud (VPC) to which the route entry belongs.
	VpcId string `pulumi:"vpcId"`
}

// RouteEntriesRouteEntryInput is an input type that accepts RouteEntriesRouteEntryArgs and RouteEntriesRouteEntryOutput values.
// You can construct a concrete instance of `RouteEntriesRouteEntryInput` via:
//
//	RouteEntriesRouteEntryArgs{...}
type RouteEntriesRouteEntryInput interface {
	pulumi.Input

	ToRouteEntriesRouteEntryOutput() RouteEntriesRouteEntryOutput
	ToRouteEntriesRouteEntryOutputWithContext(context.Context) RouteEntriesRouteEntryOutput
}

type RouteEntriesRouteEntryArgs struct {
	// The description of the route entry.
	Description pulumi.StringInput `pulumi:"description"`
	// A destination CIDR block of route entry.
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	// The id of the route entry.
	Id pulumi.StringInput `pulumi:"id"`
	// An id of next hop.
	NextHopId pulumi.StringInput `pulumi:"nextHopId"`
	// The name of the next hop.
	NextHopName pulumi.StringInput `pulumi:"nextHopName"`
	// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The id of the route entry.
	RouteEntryId pulumi.StringInput `pulumi:"routeEntryId"`
	// A name of route entry.
	RouteEntryName pulumi.StringInput `pulumi:"routeEntryName"`
	// An id of route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The status of the route entry.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the route entry.
	Type pulumi.StringInput `pulumi:"type"`
	// The id of the virtual private cloud (VPC) to which the route entry belongs.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (RouteEntriesRouteEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesRouteEntry)(nil)).Elem()
}

func (i RouteEntriesRouteEntryArgs) ToRouteEntriesRouteEntryOutput() RouteEntriesRouteEntryOutput {
	return i.ToRouteEntriesRouteEntryOutputWithContext(context.Background())
}

func (i RouteEntriesRouteEntryArgs) ToRouteEntriesRouteEntryOutputWithContext(ctx context.Context) RouteEntriesRouteEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesRouteEntryOutput)
}

// RouteEntriesRouteEntryArrayInput is an input type that accepts RouteEntriesRouteEntryArray and RouteEntriesRouteEntryArrayOutput values.
// You can construct a concrete instance of `RouteEntriesRouteEntryArrayInput` via:
//
//	RouteEntriesRouteEntryArray{ RouteEntriesRouteEntryArgs{...} }
type RouteEntriesRouteEntryArrayInput interface {
	pulumi.Input

	ToRouteEntriesRouteEntryArrayOutput() RouteEntriesRouteEntryArrayOutput
	ToRouteEntriesRouteEntryArrayOutputWithContext(context.Context) RouteEntriesRouteEntryArrayOutput
}

type RouteEntriesRouteEntryArray []RouteEntriesRouteEntryInput

func (RouteEntriesRouteEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesRouteEntry)(nil)).Elem()
}

func (i RouteEntriesRouteEntryArray) ToRouteEntriesRouteEntryArrayOutput() RouteEntriesRouteEntryArrayOutput {
	return i.ToRouteEntriesRouteEntryArrayOutputWithContext(context.Background())
}

func (i RouteEntriesRouteEntryArray) ToRouteEntriesRouteEntryArrayOutputWithContext(ctx context.Context) RouteEntriesRouteEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteEntriesRouteEntryArrayOutput)
}

type RouteEntriesRouteEntryOutput struct{ *pulumi.OutputState }

func (RouteEntriesRouteEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteEntriesRouteEntry)(nil)).Elem()
}

func (o RouteEntriesRouteEntryOutput) ToRouteEntriesRouteEntryOutput() RouteEntriesRouteEntryOutput {
	return o
}

func (o RouteEntriesRouteEntryOutput) ToRouteEntriesRouteEntryOutputWithContext(ctx context.Context) RouteEntriesRouteEntryOutput {
	return o
}

// The description of the route entry.
func (o RouteEntriesRouteEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.Description }).(pulumi.StringOutput)
}

// A destination CIDR block of route entry.
func (o RouteEntriesRouteEntryOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// The id of the route entry.
func (o RouteEntriesRouteEntryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.Id }).(pulumi.StringOutput)
}

// An id of next hop.
func (o RouteEntriesRouteEntryOutput) NextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.NextHopId }).(pulumi.StringOutput)
}

// The name of the next hop.
func (o RouteEntriesRouteEntryOutput) NextHopName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.NextHopName }).(pulumi.StringOutput)
}

// A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
func (o RouteEntriesRouteEntryOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The id of the route entry.
func (o RouteEntriesRouteEntryOutput) RouteEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.RouteEntryId }).(pulumi.StringOutput)
}

// A name of route entry.
func (o RouteEntriesRouteEntryOutput) RouteEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.RouteEntryName }).(pulumi.StringOutput)
}

// An id of route table.
func (o RouteEntriesRouteEntryOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The status of the route entry.
func (o RouteEntriesRouteEntryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the route entry.
func (o RouteEntriesRouteEntryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.Type }).(pulumi.StringOutput)
}

// The id of the virtual private cloud (VPC) to which the route entry belongs.
func (o RouteEntriesRouteEntryOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteEntriesRouteEntry) string { return v.VpcId }).(pulumi.StringOutput)
}

type RouteEntriesRouteEntryArrayOutput struct{ *pulumi.OutputState }

func (RouteEntriesRouteEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteEntriesRouteEntry)(nil)).Elem()
}

func (o RouteEntriesRouteEntryArrayOutput) ToRouteEntriesRouteEntryArrayOutput() RouteEntriesRouteEntryArrayOutput {
	return o
}

func (o RouteEntriesRouteEntryArrayOutput) ToRouteEntriesRouteEntryArrayOutputWithContext(ctx context.Context) RouteEntriesRouteEntryArrayOutput {
	return o
}

func (o RouteEntriesRouteEntryArrayOutput) Index(i pulumi.IntInput) RouteEntriesRouteEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteEntriesRouteEntry {
		return vs[0].([]RouteEntriesRouteEntry)[vs[1].(int)]
	}).(RouteEntriesRouteEntryOutput)
}

type RouteTablesRouteTable struct {
	// The account id of the route table creator.
	AccountId string `pulumi:"accountId"`
	// The create time of the route table.
	CreationTime string `pulumi:"creationTime"`
	// The description of the route table.
	Description string `pulumi:"description"`
	// The id of the route table.
	Id string `pulumi:"id"`
	// The ProjectName of the route table.
	ProjectName string `pulumi:"projectName"`
	// The id of the route table.
	RouteTableId string `pulumi:"routeTableId"`
	// A name of route table.
	RouteTableName string `pulumi:"routeTableName"`
	// The type of the route table.
	RouteTableType string `pulumi:"routeTableType"`
	// The list of the subnet ids to which the entry table associates.
	SubnetIds []string `pulumi:"subnetIds"`
	// The last update time of the route table.
	UpdateTime string `pulumi:"updateTime"`
	// An id of VPC.
	VpcId string `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the route entry belongs.
	VpcName string `pulumi:"vpcName"`
}

// RouteTablesRouteTableInput is an input type that accepts RouteTablesRouteTableArgs and RouteTablesRouteTableOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableInput` via:
//
//	RouteTablesRouteTableArgs{...}
type RouteTablesRouteTableInput interface {
	pulumi.Input

	ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput
	ToRouteTablesRouteTableOutputWithContext(context.Context) RouteTablesRouteTableOutput
}

type RouteTablesRouteTableArgs struct {
	// The account id of the route table creator.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The create time of the route table.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of the route table.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the route table.
	Id pulumi.StringInput `pulumi:"id"`
	// The ProjectName of the route table.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The id of the route table.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// A name of route table.
	RouteTableName pulumi.StringInput `pulumi:"routeTableName"`
	// The type of the route table.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
	// The list of the subnet ids to which the entry table associates.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The last update time of the route table.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// An id of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The name of the virtual private cloud (VPC) to which the route entry belongs.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (RouteTablesRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTable)(nil)).Elem()
}

func (i RouteTablesRouteTableArgs) ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput {
	return i.ToRouteTablesRouteTableOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableArgs) ToRouteTablesRouteTableOutputWithContext(ctx context.Context) RouteTablesRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableOutput)
}

// RouteTablesRouteTableArrayInput is an input type that accepts RouteTablesRouteTableArray and RouteTablesRouteTableArrayOutput values.
// You can construct a concrete instance of `RouteTablesRouteTableArrayInput` via:
//
//	RouteTablesRouteTableArray{ RouteTablesRouteTableArgs{...} }
type RouteTablesRouteTableArrayInput interface {
	pulumi.Input

	ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput
	ToRouteTablesRouteTableArrayOutputWithContext(context.Context) RouteTablesRouteTableArrayOutput
}

type RouteTablesRouteTableArray []RouteTablesRouteTableInput

func (RouteTablesRouteTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTable)(nil)).Elem()
}

func (i RouteTablesRouteTableArray) ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput {
	return i.ToRouteTablesRouteTableArrayOutputWithContext(context.Background())
}

func (i RouteTablesRouteTableArray) ToRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTablesRouteTableArrayOutput)
}

type RouteTablesRouteTableOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTablesRouteTable)(nil)).Elem()
}

func (o RouteTablesRouteTableOutput) ToRouteTablesRouteTableOutput() RouteTablesRouteTableOutput {
	return o
}

func (o RouteTablesRouteTableOutput) ToRouteTablesRouteTableOutputWithContext(ctx context.Context) RouteTablesRouteTableOutput {
	return o
}

// The account id of the route table creator.
func (o RouteTablesRouteTableOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.AccountId }).(pulumi.StringOutput)
}

// The create time of the route table.
func (o RouteTablesRouteTableOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of the route table.
func (o RouteTablesRouteTableOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the route table.
func (o RouteTablesRouteTableOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.Id }).(pulumi.StringOutput)
}

// The ProjectName of the route table.
func (o RouteTablesRouteTableOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The id of the route table.
func (o RouteTablesRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// A name of route table.
func (o RouteTablesRouteTableOutput) RouteTableName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.RouteTableName }).(pulumi.StringOutput)
}

// The type of the route table.
func (o RouteTablesRouteTableOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.RouteTableType }).(pulumi.StringOutput)
}

// The list of the subnet ids to which the entry table associates.
func (o RouteTablesRouteTableOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The last update time of the route table.
func (o RouteTablesRouteTableOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// An id of VPC.
func (o RouteTablesRouteTableOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.VpcId }).(pulumi.StringOutput)
}

// The name of the virtual private cloud (VPC) to which the route entry belongs.
func (o RouteTablesRouteTableOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTablesRouteTable) string { return v.VpcName }).(pulumi.StringOutput)
}

type RouteTablesRouteTableArrayOutput struct{ *pulumi.OutputState }

func (RouteTablesRouteTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTablesRouteTable)(nil)).Elem()
}

func (o RouteTablesRouteTableArrayOutput) ToRouteTablesRouteTableArrayOutput() RouteTablesRouteTableArrayOutput {
	return o
}

func (o RouteTablesRouteTableArrayOutput) ToRouteTablesRouteTableArrayOutputWithContext(ctx context.Context) RouteTablesRouteTableArrayOutput {
	return o
}

func (o RouteTablesRouteTableArrayOutput) Index(i pulumi.IntInput) RouteTablesRouteTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTablesRouteTable {
		return vs[0].([]RouteTablesRouteTable)[vs[1].(int)]
	}).(RouteTablesRouteTableOutput)
}

type SecurityGroupRulesSecurityGroupRule struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp string `pulumi:"cidrIp"`
	// The creation time of security group rule.
	CreationTime string `pulumi:"creationTime"`
	// description of a group rule.
	Description string `pulumi:"description"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction string `pulumi:"direction"`
	// Access strategy.
	Policy string `pulumi:"policy"`
	// Port end of egress/ingress Rule.
	PortEnd int `pulumi:"portEnd"`
	// Port start of egress/ingress Rule.
	PortStart int `pulumi:"portStart"`
	// Priority of a security group rule.
	Priority int `pulumi:"priority"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol string `pulumi:"protocol"`
	// SecurityGroup ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId string `pulumi:"sourceGroupId"`
	// The update time of security group rule.
	UpdateTime string `pulumi:"updateTime"`
}

// SecurityGroupRulesSecurityGroupRuleInput is an input type that accepts SecurityGroupRulesSecurityGroupRuleArgs and SecurityGroupRulesSecurityGroupRuleOutput values.
// You can construct a concrete instance of `SecurityGroupRulesSecurityGroupRuleInput` via:
//
//	SecurityGroupRulesSecurityGroupRuleArgs{...}
type SecurityGroupRulesSecurityGroupRuleInput interface {
	pulumi.Input

	ToSecurityGroupRulesSecurityGroupRuleOutput() SecurityGroupRulesSecurityGroupRuleOutput
	ToSecurityGroupRulesSecurityGroupRuleOutputWithContext(context.Context) SecurityGroupRulesSecurityGroupRuleOutput
}

type SecurityGroupRulesSecurityGroupRuleArgs struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The creation time of security group rule.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// description of a group rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction pulumi.StringInput `pulumi:"direction"`
	// Access strategy.
	Policy pulumi.StringInput `pulumi:"policy"`
	// Port end of egress/ingress Rule.
	PortEnd pulumi.IntInput `pulumi:"portEnd"`
	// Port start of egress/ingress Rule.
	PortStart pulumi.IntInput `pulumi:"portStart"`
	// Priority of a security group rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// SecurityGroup ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId pulumi.StringInput `pulumi:"sourceGroupId"`
	// The update time of security group rule.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (SecurityGroupRulesSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (i SecurityGroupRulesSecurityGroupRuleArgs) ToSecurityGroupRulesSecurityGroupRuleOutput() SecurityGroupRulesSecurityGroupRuleOutput {
	return i.ToSecurityGroupRulesSecurityGroupRuleOutputWithContext(context.Background())
}

func (i SecurityGroupRulesSecurityGroupRuleArgs) ToSecurityGroupRulesSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRulesSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRulesSecurityGroupRuleOutput)
}

// SecurityGroupRulesSecurityGroupRuleArrayInput is an input type that accepts SecurityGroupRulesSecurityGroupRuleArray and SecurityGroupRulesSecurityGroupRuleArrayOutput values.
// You can construct a concrete instance of `SecurityGroupRulesSecurityGroupRuleArrayInput` via:
//
//	SecurityGroupRulesSecurityGroupRuleArray{ SecurityGroupRulesSecurityGroupRuleArgs{...} }
type SecurityGroupRulesSecurityGroupRuleArrayInput interface {
	pulumi.Input

	ToSecurityGroupRulesSecurityGroupRuleArrayOutput() SecurityGroupRulesSecurityGroupRuleArrayOutput
	ToSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(context.Context) SecurityGroupRulesSecurityGroupRuleArrayOutput
}

type SecurityGroupRulesSecurityGroupRuleArray []SecurityGroupRulesSecurityGroupRuleInput

func (SecurityGroupRulesSecurityGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (i SecurityGroupRulesSecurityGroupRuleArray) ToSecurityGroupRulesSecurityGroupRuleArrayOutput() SecurityGroupRulesSecurityGroupRuleArrayOutput {
	return i.ToSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(context.Background())
}

func (i SecurityGroupRulesSecurityGroupRuleArray) ToSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(ctx context.Context) SecurityGroupRulesSecurityGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRulesSecurityGroupRuleArrayOutput)
}

type SecurityGroupRulesSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (SecurityGroupRulesSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (o SecurityGroupRulesSecurityGroupRuleOutput) ToSecurityGroupRulesSecurityGroupRuleOutput() SecurityGroupRulesSecurityGroupRuleOutput {
	return o
}

func (o SecurityGroupRulesSecurityGroupRuleOutput) ToSecurityGroupRulesSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRulesSecurityGroupRuleOutput {
	return o
}

// Cidr ip of egress/ingress Rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The creation time of security group rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.CreationTime }).(pulumi.StringOutput)
}

// description of a group rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.Description }).(pulumi.StringOutput)
}

// Direction of rule, ingress (inbound) or egress (outbound).
func (o SecurityGroupRulesSecurityGroupRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.Direction }).(pulumi.StringOutput)
}

// Access strategy.
func (o SecurityGroupRulesSecurityGroupRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.Policy }).(pulumi.StringOutput)
}

// Port end of egress/ingress Rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) PortEnd() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) int { return v.PortEnd }).(pulumi.IntOutput)
}

// Port start of egress/ingress Rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) PortStart() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) int { return v.PortStart }).(pulumi.IntOutput)
}

// Priority of a security group rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
func (o SecurityGroupRulesSecurityGroupRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// SecurityGroup ID.
func (o SecurityGroupRulesSecurityGroupRuleOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// ID of the source security group whose access permission you want to set.
func (o SecurityGroupRulesSecurityGroupRuleOutput) SourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.SourceGroupId }).(pulumi.StringOutput)
}

// The update time of security group rule.
func (o SecurityGroupRulesSecurityGroupRuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupRulesSecurityGroupRule) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type SecurityGroupRulesSecurityGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupRulesSecurityGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupRulesSecurityGroupRule)(nil)).Elem()
}

func (o SecurityGroupRulesSecurityGroupRuleArrayOutput) ToSecurityGroupRulesSecurityGroupRuleArrayOutput() SecurityGroupRulesSecurityGroupRuleArrayOutput {
	return o
}

func (o SecurityGroupRulesSecurityGroupRuleArrayOutput) ToSecurityGroupRulesSecurityGroupRuleArrayOutputWithContext(ctx context.Context) SecurityGroupRulesSecurityGroupRuleArrayOutput {
	return o
}

func (o SecurityGroupRulesSecurityGroupRuleArrayOutput) Index(i pulumi.IntInput) SecurityGroupRulesSecurityGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupRulesSecurityGroupRule {
		return vs[0].([]SecurityGroupRulesSecurityGroupRule)[vs[1].(int)]
	}).(SecurityGroupRulesSecurityGroupRuleOutput)
}

type SecurityGroupTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SecurityGroupTagInput is an input type that accepts SecurityGroupTagArgs and SecurityGroupTagOutput values.
// You can construct a concrete instance of `SecurityGroupTagInput` via:
//
//	SecurityGroupTagArgs{...}
type SecurityGroupTagInput interface {
	pulumi.Input

	ToSecurityGroupTagOutput() SecurityGroupTagOutput
	ToSecurityGroupTagOutputWithContext(context.Context) SecurityGroupTagOutput
}

type SecurityGroupTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupTagArgs) ToSecurityGroupTagOutput() SecurityGroupTagOutput {
	return i.ToSecurityGroupTagOutputWithContext(context.Background())
}

func (i SecurityGroupTagArgs) ToSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupTagOutput)
}

// SecurityGroupTagArrayInput is an input type that accepts SecurityGroupTagArray and SecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `SecurityGroupTagArrayInput` via:
//
//	SecurityGroupTagArray{ SecurityGroupTagArgs{...} }
type SecurityGroupTagArrayInput interface {
	pulumi.Input

	ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput
	ToSecurityGroupTagArrayOutputWithContext(context.Context) SecurityGroupTagArrayOutput
}

type SecurityGroupTagArray []SecurityGroupTagInput

func (SecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupTagArray) ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput {
	return i.ToSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i SecurityGroupTagArray) ToSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupTagArrayOutput)
}

type SecurityGroupTagOutput struct{ *pulumi.OutputState }

func (SecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupTagOutput) ToSecurityGroupTagOutput() SecurityGroupTagOutput {
	return o
}

func (o SecurityGroupTagOutput) ToSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupTagOutput {
	return o
}

// The Key of Tags.
func (o SecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupTagArrayOutput) ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupTagArrayOutput) ToSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupTagArrayOutput) Index(i pulumi.IntInput) SecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupTag {
		return vs[0].([]SecurityGroupTag)[vs[1].(int)]
	}).(SecurityGroupTagOutput)
}

type SecurityGroupsSecurityGroup struct {
	// The creation time of SecurityGroup.
	CreationTime string `pulumi:"creationTime"`
	// The description of SecurityGroup.
	Description string `pulumi:"description"`
	// The ID of SecurityGroup.
	Id string `pulumi:"id"`
	// The ProjectName of SecurityGroup.
	ProjectName string `pulumi:"projectName"`
	// The ID of SecurityGroup.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The Name of SecurityGroup.
	SecurityGroupName string `pulumi:"securityGroupName"`
	// The Status of SecurityGroup.
	Status string `pulumi:"status"`
	// Tags.
	Tags []SecurityGroupsSecurityGroupTag `pulumi:"tags"`
	// A Name Regex of SecurityGroup.
	Type string `pulumi:"type"`
	// The ID of vpc where security group is located.
	VpcId string `pulumi:"vpcId"`
}

// SecurityGroupsSecurityGroupInput is an input type that accepts SecurityGroupsSecurityGroupArgs and SecurityGroupsSecurityGroupOutput values.
// You can construct a concrete instance of `SecurityGroupsSecurityGroupInput` via:
//
//	SecurityGroupsSecurityGroupArgs{...}
type SecurityGroupsSecurityGroupInput interface {
	pulumi.Input

	ToSecurityGroupsSecurityGroupOutput() SecurityGroupsSecurityGroupOutput
	ToSecurityGroupsSecurityGroupOutputWithContext(context.Context) SecurityGroupsSecurityGroupOutput
}

type SecurityGroupsSecurityGroupArgs struct {
	// The creation time of SecurityGroup.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of SecurityGroup.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of SecurityGroup.
	Id pulumi.StringInput `pulumi:"id"`
	// The ProjectName of SecurityGroup.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The ID of SecurityGroup.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// The Name of SecurityGroup.
	SecurityGroupName pulumi.StringInput `pulumi:"securityGroupName"`
	// The Status of SecurityGroup.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags SecurityGroupsSecurityGroupTagArrayInput `pulumi:"tags"`
	// A Name Regex of SecurityGroup.
	Type pulumi.StringInput `pulumi:"type"`
	// The ID of vpc where security group is located.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (SecurityGroupsSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsSecurityGroup)(nil)).Elem()
}

func (i SecurityGroupsSecurityGroupArgs) ToSecurityGroupsSecurityGroupOutput() SecurityGroupsSecurityGroupOutput {
	return i.ToSecurityGroupsSecurityGroupOutputWithContext(context.Background())
}

func (i SecurityGroupsSecurityGroupArgs) ToSecurityGroupsSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsSecurityGroupOutput)
}

// SecurityGroupsSecurityGroupArrayInput is an input type that accepts SecurityGroupsSecurityGroupArray and SecurityGroupsSecurityGroupArrayOutput values.
// You can construct a concrete instance of `SecurityGroupsSecurityGroupArrayInput` via:
//
//	SecurityGroupsSecurityGroupArray{ SecurityGroupsSecurityGroupArgs{...} }
type SecurityGroupsSecurityGroupArrayInput interface {
	pulumi.Input

	ToSecurityGroupsSecurityGroupArrayOutput() SecurityGroupsSecurityGroupArrayOutput
	ToSecurityGroupsSecurityGroupArrayOutputWithContext(context.Context) SecurityGroupsSecurityGroupArrayOutput
}

type SecurityGroupsSecurityGroupArray []SecurityGroupsSecurityGroupInput

func (SecurityGroupsSecurityGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsSecurityGroup)(nil)).Elem()
}

func (i SecurityGroupsSecurityGroupArray) ToSecurityGroupsSecurityGroupArrayOutput() SecurityGroupsSecurityGroupArrayOutput {
	return i.ToSecurityGroupsSecurityGroupArrayOutputWithContext(context.Background())
}

func (i SecurityGroupsSecurityGroupArray) ToSecurityGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsSecurityGroupArrayOutput)
}

type SecurityGroupsSecurityGroupOutput struct{ *pulumi.OutputState }

func (SecurityGroupsSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsSecurityGroup)(nil)).Elem()
}

func (o SecurityGroupsSecurityGroupOutput) ToSecurityGroupsSecurityGroupOutput() SecurityGroupsSecurityGroupOutput {
	return o
}

func (o SecurityGroupsSecurityGroupOutput) ToSecurityGroupsSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupOutput {
	return o
}

// The creation time of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The ProjectName of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The ID of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The Name of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

// The Status of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o SecurityGroupsSecurityGroupOutput) Tags() SecurityGroupsSecurityGroupTagArrayOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) []SecurityGroupsSecurityGroupTag { return v.Tags }).(SecurityGroupsSecurityGroupTagArrayOutput)
}

// A Name Regex of SecurityGroup.
func (o SecurityGroupsSecurityGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.Type }).(pulumi.StringOutput)
}

// The ID of vpc where security group is located.
func (o SecurityGroupsSecurityGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

type SecurityGroupsSecurityGroupArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupsSecurityGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsSecurityGroup)(nil)).Elem()
}

func (o SecurityGroupsSecurityGroupArrayOutput) ToSecurityGroupsSecurityGroupArrayOutput() SecurityGroupsSecurityGroupArrayOutput {
	return o
}

func (o SecurityGroupsSecurityGroupArrayOutput) ToSecurityGroupsSecurityGroupArrayOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupArrayOutput {
	return o
}

func (o SecurityGroupsSecurityGroupArrayOutput) Index(i pulumi.IntInput) SecurityGroupsSecurityGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupsSecurityGroup {
		return vs[0].([]SecurityGroupsSecurityGroup)[vs[1].(int)]
	}).(SecurityGroupsSecurityGroupOutput)
}

type SecurityGroupsSecurityGroupTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SecurityGroupsSecurityGroupTagInput is an input type that accepts SecurityGroupsSecurityGroupTagArgs and SecurityGroupsSecurityGroupTagOutput values.
// You can construct a concrete instance of `SecurityGroupsSecurityGroupTagInput` via:
//
//	SecurityGroupsSecurityGroupTagArgs{...}
type SecurityGroupsSecurityGroupTagInput interface {
	pulumi.Input

	ToSecurityGroupsSecurityGroupTagOutput() SecurityGroupsSecurityGroupTagOutput
	ToSecurityGroupsSecurityGroupTagOutputWithContext(context.Context) SecurityGroupsSecurityGroupTagOutput
}

type SecurityGroupsSecurityGroupTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityGroupsSecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupsSecurityGroupTagArgs) ToSecurityGroupsSecurityGroupTagOutput() SecurityGroupsSecurityGroupTagOutput {
	return i.ToSecurityGroupsSecurityGroupTagOutputWithContext(context.Background())
}

func (i SecurityGroupsSecurityGroupTagArgs) ToSecurityGroupsSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsSecurityGroupTagOutput)
}

// SecurityGroupsSecurityGroupTagArrayInput is an input type that accepts SecurityGroupsSecurityGroupTagArray and SecurityGroupsSecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `SecurityGroupsSecurityGroupTagArrayInput` via:
//
//	SecurityGroupsSecurityGroupTagArray{ SecurityGroupsSecurityGroupTagArgs{...} }
type SecurityGroupsSecurityGroupTagArrayInput interface {
	pulumi.Input

	ToSecurityGroupsSecurityGroupTagArrayOutput() SecurityGroupsSecurityGroupTagArrayOutput
	ToSecurityGroupsSecurityGroupTagArrayOutputWithContext(context.Context) SecurityGroupsSecurityGroupTagArrayOutput
}

type SecurityGroupsSecurityGroupTagArray []SecurityGroupsSecurityGroupTagInput

func (SecurityGroupsSecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupsSecurityGroupTagArray) ToSecurityGroupsSecurityGroupTagArrayOutput() SecurityGroupsSecurityGroupTagArrayOutput {
	return i.ToSecurityGroupsSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i SecurityGroupsSecurityGroupTagArray) ToSecurityGroupsSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsSecurityGroupTagArrayOutput)
}

type SecurityGroupsSecurityGroupTagOutput struct{ *pulumi.OutputState }

func (SecurityGroupsSecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupsSecurityGroupTagOutput) ToSecurityGroupsSecurityGroupTagOutput() SecurityGroupsSecurityGroupTagOutput {
	return o
}

func (o SecurityGroupsSecurityGroupTagOutput) ToSecurityGroupsSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupTagOutput {
	return o
}

// The Key of Tags.
func (o SecurityGroupsSecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SecurityGroupsSecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsSecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityGroupsSecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupsSecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsSecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupsSecurityGroupTagArrayOutput) ToSecurityGroupsSecurityGroupTagArrayOutput() SecurityGroupsSecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupsSecurityGroupTagArrayOutput) ToSecurityGroupsSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupsSecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupsSecurityGroupTagArrayOutput) Index(i pulumi.IntInput) SecurityGroupsSecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupsSecurityGroupTag {
		return vs[0].([]SecurityGroupsSecurityGroupTag)[vs[1].(int)]
	}).(SecurityGroupsSecurityGroupTagOutput)
}

type SecurityGroupsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SecurityGroupsTagInput is an input type that accepts SecurityGroupsTagArgs and SecurityGroupsTagOutput values.
// You can construct a concrete instance of `SecurityGroupsTagInput` via:
//
//	SecurityGroupsTagArgs{...}
type SecurityGroupsTagInput interface {
	pulumi.Input

	ToSecurityGroupsTagOutput() SecurityGroupsTagOutput
	ToSecurityGroupsTagOutputWithContext(context.Context) SecurityGroupsTagOutput
}

type SecurityGroupsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityGroupsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsTag)(nil)).Elem()
}

func (i SecurityGroupsTagArgs) ToSecurityGroupsTagOutput() SecurityGroupsTagOutput {
	return i.ToSecurityGroupsTagOutputWithContext(context.Background())
}

func (i SecurityGroupsTagArgs) ToSecurityGroupsTagOutputWithContext(ctx context.Context) SecurityGroupsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsTagOutput)
}

// SecurityGroupsTagArrayInput is an input type that accepts SecurityGroupsTagArray and SecurityGroupsTagArrayOutput values.
// You can construct a concrete instance of `SecurityGroupsTagArrayInput` via:
//
//	SecurityGroupsTagArray{ SecurityGroupsTagArgs{...} }
type SecurityGroupsTagArrayInput interface {
	pulumi.Input

	ToSecurityGroupsTagArrayOutput() SecurityGroupsTagArrayOutput
	ToSecurityGroupsTagArrayOutputWithContext(context.Context) SecurityGroupsTagArrayOutput
}

type SecurityGroupsTagArray []SecurityGroupsTagInput

func (SecurityGroupsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsTag)(nil)).Elem()
}

func (i SecurityGroupsTagArray) ToSecurityGroupsTagArrayOutput() SecurityGroupsTagArrayOutput {
	return i.ToSecurityGroupsTagArrayOutputWithContext(context.Background())
}

func (i SecurityGroupsTagArray) ToSecurityGroupsTagArrayOutputWithContext(ctx context.Context) SecurityGroupsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupsTagArrayOutput)
}

type SecurityGroupsTagOutput struct{ *pulumi.OutputState }

func (SecurityGroupsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupsTag)(nil)).Elem()
}

func (o SecurityGroupsTagOutput) ToSecurityGroupsTagOutput() SecurityGroupsTagOutput {
	return o
}

func (o SecurityGroupsTagOutput) ToSecurityGroupsTagOutputWithContext(ctx context.Context) SecurityGroupsTagOutput {
	return o
}

// The Key of Tags.
func (o SecurityGroupsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SecurityGroupsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupsTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityGroupsTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupsTag)(nil)).Elem()
}

func (o SecurityGroupsTagArrayOutput) ToSecurityGroupsTagArrayOutput() SecurityGroupsTagArrayOutput {
	return o
}

func (o SecurityGroupsTagArrayOutput) ToSecurityGroupsTagArrayOutputWithContext(ctx context.Context) SecurityGroupsTagArrayOutput {
	return o
}

func (o SecurityGroupsTagArrayOutput) Index(i pulumi.IntInput) SecurityGroupsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupsTag {
		return vs[0].([]SecurityGroupsTag)[vs[1].(int)]
	}).(SecurityGroupsTagOutput)
}

type SubnetTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SubnetTagInput is an input type that accepts SubnetTagArgs and SubnetTagOutput values.
// You can construct a concrete instance of `SubnetTagInput` via:
//
//	SubnetTagArgs{...}
type SubnetTagInput interface {
	pulumi.Input

	ToSubnetTagOutput() SubnetTagOutput
	ToSubnetTagOutputWithContext(context.Context) SubnetTagOutput
}

type SubnetTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetTag)(nil)).Elem()
}

func (i SubnetTagArgs) ToSubnetTagOutput() SubnetTagOutput {
	return i.ToSubnetTagOutputWithContext(context.Background())
}

func (i SubnetTagArgs) ToSubnetTagOutputWithContext(ctx context.Context) SubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTagOutput)
}

// SubnetTagArrayInput is an input type that accepts SubnetTagArray and SubnetTagArrayOutput values.
// You can construct a concrete instance of `SubnetTagArrayInput` via:
//
//	SubnetTagArray{ SubnetTagArgs{...} }
type SubnetTagArrayInput interface {
	pulumi.Input

	ToSubnetTagArrayOutput() SubnetTagArrayOutput
	ToSubnetTagArrayOutputWithContext(context.Context) SubnetTagArrayOutput
}

type SubnetTagArray []SubnetTagInput

func (SubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetTag)(nil)).Elem()
}

func (i SubnetTagArray) ToSubnetTagArrayOutput() SubnetTagArrayOutput {
	return i.ToSubnetTagArrayOutputWithContext(context.Background())
}

func (i SubnetTagArray) ToSubnetTagArrayOutputWithContext(ctx context.Context) SubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTagArrayOutput)
}

type SubnetTagOutput struct{ *pulumi.OutputState }

func (SubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetTag)(nil)).Elem()
}

func (o SubnetTagOutput) ToSubnetTagOutput() SubnetTagOutput {
	return o
}

func (o SubnetTagOutput) ToSubnetTagOutputWithContext(ctx context.Context) SubnetTagOutput {
	return o
}

// The Key of Tags.
func (o SubnetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SubnetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetTag) string { return v.Value }).(pulumi.StringOutput)
}

type SubnetTagArrayOutput struct{ *pulumi.OutputState }

func (SubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetTag)(nil)).Elem()
}

func (o SubnetTagArrayOutput) ToSubnetTagArrayOutput() SubnetTagArrayOutput {
	return o
}

func (o SubnetTagArrayOutput) ToSubnetTagArrayOutputWithContext(ctx context.Context) SubnetTagArrayOutput {
	return o
}

func (o SubnetTagArrayOutput) Index(i pulumi.IntInput) SubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetTag {
		return vs[0].([]SubnetTag)[vs[1].(int)]
	}).(SubnetTagOutput)
}

type SubnetsSubnet struct {
	// The account ID which the subnet belongs to.
	AccountId string `pulumi:"accountId"`
	// The count of available ip address.
	AvailableIpAddressCount int `pulumi:"availableIpAddressCount"`
	// The cidr block of Subnet.
	CidrBlock string `pulumi:"cidrBlock"`
	// Creation time of Subnet.
	CreationTime string `pulumi:"creationTime"`
	// The description of Subnet.
	Description string `pulumi:"description"`
	// The ID of Subnet.
	Id string `pulumi:"id"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The ID of network acl which this subnet associate with.
	NetworkAclId string `pulumi:"networkAclId"`
	// The route table information.
	RouteTable SubnetsSubnetRouteTable `pulumi:"routeTable"`
	// The ID of route table which subnet associated with.
	RouteTableId string `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType string `pulumi:"routeTableType"`
	// The Status of Subnet.
	Status string `pulumi:"status"`
	// The subnet name to query.
	SubnetName string `pulumi:"subnetName"`
	// Tags.
	Tags []SubnetsSubnetTag `pulumi:"tags"`
	// The Count of ipv4.
	TotalIpv4Count int `pulumi:"totalIpv4Count"`
	// Update time of Subnet.
	UpdateTime string `pulumi:"updateTime"`
	// The ID of VPC which subnet belongs to.
	VpcId string `pulumi:"vpcId"`
	// The ID of zone which subnet belongs to.
	ZoneId string `pulumi:"zoneId"`
}

// SubnetsSubnetInput is an input type that accepts SubnetsSubnetArgs and SubnetsSubnetOutput values.
// You can construct a concrete instance of `SubnetsSubnetInput` via:
//
//	SubnetsSubnetArgs{...}
type SubnetsSubnetInput interface {
	pulumi.Input

	ToSubnetsSubnetOutput() SubnetsSubnetOutput
	ToSubnetsSubnetOutputWithContext(context.Context) SubnetsSubnetOutput
}

type SubnetsSubnetArgs struct {
	// The account ID which the subnet belongs to.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The count of available ip address.
	AvailableIpAddressCount pulumi.IntInput `pulumi:"availableIpAddressCount"`
	// The cidr block of Subnet.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Creation time of Subnet.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of Subnet.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of Subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The ID of network acl which this subnet associate with.
	NetworkAclId pulumi.StringInput `pulumi:"networkAclId"`
	// The route table information.
	RouteTable SubnetsSubnetRouteTableInput `pulumi:"routeTable"`
	// The ID of route table which subnet associated with.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
	// The Status of Subnet.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet name to query.
	SubnetName pulumi.StringInput `pulumi:"subnetName"`
	// Tags.
	Tags SubnetsSubnetTagArrayInput `pulumi:"tags"`
	// The Count of ipv4.
	TotalIpv4Count pulumi.IntInput `pulumi:"totalIpv4Count"`
	// Update time of Subnet.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The ID of VPC which subnet belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of zone which subnet belongs to.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (SubnetsSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnet)(nil)).Elem()
}

func (i SubnetsSubnetArgs) ToSubnetsSubnetOutput() SubnetsSubnetOutput {
	return i.ToSubnetsSubnetOutputWithContext(context.Background())
}

func (i SubnetsSubnetArgs) ToSubnetsSubnetOutputWithContext(ctx context.Context) SubnetsSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetOutput)
}

// SubnetsSubnetArrayInput is an input type that accepts SubnetsSubnetArray and SubnetsSubnetArrayOutput values.
// You can construct a concrete instance of `SubnetsSubnetArrayInput` via:
//
//	SubnetsSubnetArray{ SubnetsSubnetArgs{...} }
type SubnetsSubnetArrayInput interface {
	pulumi.Input

	ToSubnetsSubnetArrayOutput() SubnetsSubnetArrayOutput
	ToSubnetsSubnetArrayOutputWithContext(context.Context) SubnetsSubnetArrayOutput
}

type SubnetsSubnetArray []SubnetsSubnetInput

func (SubnetsSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsSubnet)(nil)).Elem()
}

func (i SubnetsSubnetArray) ToSubnetsSubnetArrayOutput() SubnetsSubnetArrayOutput {
	return i.ToSubnetsSubnetArrayOutputWithContext(context.Background())
}

func (i SubnetsSubnetArray) ToSubnetsSubnetArrayOutputWithContext(ctx context.Context) SubnetsSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetArrayOutput)
}

type SubnetsSubnetOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnet)(nil)).Elem()
}

func (o SubnetsSubnetOutput) ToSubnetsSubnetOutput() SubnetsSubnetOutput {
	return o
}

func (o SubnetsSubnetOutput) ToSubnetsSubnetOutputWithContext(ctx context.Context) SubnetsSubnetOutput {
	return o
}

// The account ID which the subnet belongs to.
func (o SubnetsSubnetOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.AccountId }).(pulumi.StringOutput)
}

// The count of available ip address.
func (o SubnetsSubnetOutput) AvailableIpAddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v SubnetsSubnet) int { return v.AvailableIpAddressCount }).(pulumi.IntOutput)
}

// The cidr block of Subnet.
func (o SubnetsSubnetOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Creation time of Subnet.
func (o SubnetsSubnetOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of Subnet.
func (o SubnetsSubnetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of Subnet.
func (o SubnetsSubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.Id }).(pulumi.StringOutput)
}

// The IPv6 CIDR block of the VPC.
func (o SubnetsSubnetOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The ID of network acl which this subnet associate with.
func (o SubnetsSubnetOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// The route table information.
func (o SubnetsSubnetOutput) RouteTable() SubnetsSubnetRouteTableOutput {
	return o.ApplyT(func(v SubnetsSubnet) SubnetsSubnetRouteTable { return v.RouteTable }).(SubnetsSubnetRouteTableOutput)
}

// The ID of route table which subnet associated with.
func (o SubnetsSubnetOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The route table type.
func (o SubnetsSubnetOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.RouteTableType }).(pulumi.StringOutput)
}

// The Status of Subnet.
func (o SubnetsSubnetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet name to query.
func (o SubnetsSubnetOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.SubnetName }).(pulumi.StringOutput)
}

// Tags.
func (o SubnetsSubnetOutput) Tags() SubnetsSubnetTagArrayOutput {
	return o.ApplyT(func(v SubnetsSubnet) []SubnetsSubnetTag { return v.Tags }).(SubnetsSubnetTagArrayOutput)
}

// The Count of ipv4.
func (o SubnetsSubnetOutput) TotalIpv4Count() pulumi.IntOutput {
	return o.ApplyT(func(v SubnetsSubnet) int { return v.TotalIpv4Count }).(pulumi.IntOutput)
}

// Update time of Subnet.
func (o SubnetsSubnetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The ID of VPC which subnet belongs to.
func (o SubnetsSubnetOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of zone which subnet belongs to.
func (o SubnetsSubnetOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnet) string { return v.ZoneId }).(pulumi.StringOutput)
}

type SubnetsSubnetArrayOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsSubnet)(nil)).Elem()
}

func (o SubnetsSubnetArrayOutput) ToSubnetsSubnetArrayOutput() SubnetsSubnetArrayOutput {
	return o
}

func (o SubnetsSubnetArrayOutput) ToSubnetsSubnetArrayOutputWithContext(ctx context.Context) SubnetsSubnetArrayOutput {
	return o
}

func (o SubnetsSubnetArrayOutput) Index(i pulumi.IntInput) SubnetsSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetsSubnet {
		return vs[0].([]SubnetsSubnet)[vs[1].(int)]
	}).(SubnetsSubnetOutput)
}

type SubnetsSubnetRouteTable struct {
	// The ID of route table which subnet associated with.
	RouteTableId string `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType string `pulumi:"routeTableType"`
}

// SubnetsSubnetRouteTableInput is an input type that accepts SubnetsSubnetRouteTableArgs and SubnetsSubnetRouteTableOutput values.
// You can construct a concrete instance of `SubnetsSubnetRouteTableInput` via:
//
//	SubnetsSubnetRouteTableArgs{...}
type SubnetsSubnetRouteTableInput interface {
	pulumi.Input

	ToSubnetsSubnetRouteTableOutput() SubnetsSubnetRouteTableOutput
	ToSubnetsSubnetRouteTableOutputWithContext(context.Context) SubnetsSubnetRouteTableOutput
}

type SubnetsSubnetRouteTableArgs struct {
	// The ID of route table which subnet associated with.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The route table type.
	RouteTableType pulumi.StringInput `pulumi:"routeTableType"`
}

func (SubnetsSubnetRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnetRouteTable)(nil)).Elem()
}

func (i SubnetsSubnetRouteTableArgs) ToSubnetsSubnetRouteTableOutput() SubnetsSubnetRouteTableOutput {
	return i.ToSubnetsSubnetRouteTableOutputWithContext(context.Background())
}

func (i SubnetsSubnetRouteTableArgs) ToSubnetsSubnetRouteTableOutputWithContext(ctx context.Context) SubnetsSubnetRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetRouteTableOutput)
}

type SubnetsSubnetRouteTableOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnetRouteTable)(nil)).Elem()
}

func (o SubnetsSubnetRouteTableOutput) ToSubnetsSubnetRouteTableOutput() SubnetsSubnetRouteTableOutput {
	return o
}

func (o SubnetsSubnetRouteTableOutput) ToSubnetsSubnetRouteTableOutputWithContext(ctx context.Context) SubnetsSubnetRouteTableOutput {
	return o
}

// The ID of route table which subnet associated with.
func (o SubnetsSubnetRouteTableOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnetRouteTable) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The route table type.
func (o SubnetsSubnetRouteTableOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnetRouteTable) string { return v.RouteTableType }).(pulumi.StringOutput)
}

type SubnetsSubnetTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SubnetsSubnetTagInput is an input type that accepts SubnetsSubnetTagArgs and SubnetsSubnetTagOutput values.
// You can construct a concrete instance of `SubnetsSubnetTagInput` via:
//
//	SubnetsSubnetTagArgs{...}
type SubnetsSubnetTagInput interface {
	pulumi.Input

	ToSubnetsSubnetTagOutput() SubnetsSubnetTagOutput
	ToSubnetsSubnetTagOutputWithContext(context.Context) SubnetsSubnetTagOutput
}

type SubnetsSubnetTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SubnetsSubnetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnetTag)(nil)).Elem()
}

func (i SubnetsSubnetTagArgs) ToSubnetsSubnetTagOutput() SubnetsSubnetTagOutput {
	return i.ToSubnetsSubnetTagOutputWithContext(context.Background())
}

func (i SubnetsSubnetTagArgs) ToSubnetsSubnetTagOutputWithContext(ctx context.Context) SubnetsSubnetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetTagOutput)
}

// SubnetsSubnetTagArrayInput is an input type that accepts SubnetsSubnetTagArray and SubnetsSubnetTagArrayOutput values.
// You can construct a concrete instance of `SubnetsSubnetTagArrayInput` via:
//
//	SubnetsSubnetTagArray{ SubnetsSubnetTagArgs{...} }
type SubnetsSubnetTagArrayInput interface {
	pulumi.Input

	ToSubnetsSubnetTagArrayOutput() SubnetsSubnetTagArrayOutput
	ToSubnetsSubnetTagArrayOutputWithContext(context.Context) SubnetsSubnetTagArrayOutput
}

type SubnetsSubnetTagArray []SubnetsSubnetTagInput

func (SubnetsSubnetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsSubnetTag)(nil)).Elem()
}

func (i SubnetsSubnetTagArray) ToSubnetsSubnetTagArrayOutput() SubnetsSubnetTagArrayOutput {
	return i.ToSubnetsSubnetTagArrayOutputWithContext(context.Background())
}

func (i SubnetsSubnetTagArray) ToSubnetsSubnetTagArrayOutputWithContext(ctx context.Context) SubnetsSubnetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsSubnetTagArrayOutput)
}

type SubnetsSubnetTagOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsSubnetTag)(nil)).Elem()
}

func (o SubnetsSubnetTagOutput) ToSubnetsSubnetTagOutput() SubnetsSubnetTagOutput {
	return o
}

func (o SubnetsSubnetTagOutput) ToSubnetsSubnetTagOutputWithContext(ctx context.Context) SubnetsSubnetTagOutput {
	return o
}

// The Key of Tags.
func (o SubnetsSubnetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnetTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SubnetsSubnetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsSubnetTag) string { return v.Value }).(pulumi.StringOutput)
}

type SubnetsSubnetTagArrayOutput struct{ *pulumi.OutputState }

func (SubnetsSubnetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsSubnetTag)(nil)).Elem()
}

func (o SubnetsSubnetTagArrayOutput) ToSubnetsSubnetTagArrayOutput() SubnetsSubnetTagArrayOutput {
	return o
}

func (o SubnetsSubnetTagArrayOutput) ToSubnetsSubnetTagArrayOutputWithContext(ctx context.Context) SubnetsSubnetTagArrayOutput {
	return o
}

func (o SubnetsSubnetTagArrayOutput) Index(i pulumi.IntInput) SubnetsSubnetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetsSubnetTag {
		return vs[0].([]SubnetsSubnetTag)[vs[1].(int)]
	}).(SubnetsSubnetTagOutput)
}

type SubnetsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// SubnetsTagInput is an input type that accepts SubnetsTagArgs and SubnetsTagOutput values.
// You can construct a concrete instance of `SubnetsTagInput` via:
//
//	SubnetsTagArgs{...}
type SubnetsTagInput interface {
	pulumi.Input

	ToSubnetsTagOutput() SubnetsTagOutput
	ToSubnetsTagOutputWithContext(context.Context) SubnetsTagOutput
}

type SubnetsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SubnetsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsTag)(nil)).Elem()
}

func (i SubnetsTagArgs) ToSubnetsTagOutput() SubnetsTagOutput {
	return i.ToSubnetsTagOutputWithContext(context.Background())
}

func (i SubnetsTagArgs) ToSubnetsTagOutputWithContext(ctx context.Context) SubnetsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsTagOutput)
}

// SubnetsTagArrayInput is an input type that accepts SubnetsTagArray and SubnetsTagArrayOutput values.
// You can construct a concrete instance of `SubnetsTagArrayInput` via:
//
//	SubnetsTagArray{ SubnetsTagArgs{...} }
type SubnetsTagArrayInput interface {
	pulumi.Input

	ToSubnetsTagArrayOutput() SubnetsTagArrayOutput
	ToSubnetsTagArrayOutputWithContext(context.Context) SubnetsTagArrayOutput
}

type SubnetsTagArray []SubnetsTagInput

func (SubnetsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsTag)(nil)).Elem()
}

func (i SubnetsTagArray) ToSubnetsTagArrayOutput() SubnetsTagArrayOutput {
	return i.ToSubnetsTagArrayOutputWithContext(context.Background())
}

func (i SubnetsTagArray) ToSubnetsTagArrayOutputWithContext(ctx context.Context) SubnetsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetsTagArrayOutput)
}

type SubnetsTagOutput struct{ *pulumi.OutputState }

func (SubnetsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetsTag)(nil)).Elem()
}

func (o SubnetsTagOutput) ToSubnetsTagOutput() SubnetsTagOutput {
	return o
}

func (o SubnetsTagOutput) ToSubnetsTagOutputWithContext(ctx context.Context) SubnetsTagOutput {
	return o
}

// The Key of Tags.
func (o SubnetsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o SubnetsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetsTag) string { return v.Value }).(pulumi.StringOutput)
}

type SubnetsTagArrayOutput struct{ *pulumi.OutputState }

func (SubnetsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetsTag)(nil)).Elem()
}

func (o SubnetsTagArrayOutput) ToSubnetsTagArrayOutput() SubnetsTagArrayOutput {
	return o
}

func (o SubnetsTagArrayOutput) ToSubnetsTagArrayOutputWithContext(ctx context.Context) SubnetsTagArrayOutput {
	return o
}

func (o SubnetsTagArrayOutput) Index(i pulumi.IntInput) SubnetsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetsTag {
		return vs[0].([]SubnetsTag)[vs[1].(int)]
	}).(SubnetsTagOutput)
}

type VpcAssociateCen struct {
	// The ID of CEN.
	CenId *string `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId *string `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus *string `pulumi:"cenStatus"`
}

// VpcAssociateCenInput is an input type that accepts VpcAssociateCenArgs and VpcAssociateCenOutput values.
// You can construct a concrete instance of `VpcAssociateCenInput` via:
//
//	VpcAssociateCenArgs{...}
type VpcAssociateCenInput interface {
	pulumi.Input

	ToVpcAssociateCenOutput() VpcAssociateCenOutput
	ToVpcAssociateCenOutputWithContext(context.Context) VpcAssociateCenOutput
}

type VpcAssociateCenArgs struct {
	// The ID of CEN.
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId pulumi.StringPtrInput `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus pulumi.StringPtrInput `pulumi:"cenStatus"`
}

func (VpcAssociateCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAssociateCen)(nil)).Elem()
}

func (i VpcAssociateCenArgs) ToVpcAssociateCenOutput() VpcAssociateCenOutput {
	return i.ToVpcAssociateCenOutputWithContext(context.Background())
}

func (i VpcAssociateCenArgs) ToVpcAssociateCenOutputWithContext(ctx context.Context) VpcAssociateCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAssociateCenOutput)
}

// VpcAssociateCenArrayInput is an input type that accepts VpcAssociateCenArray and VpcAssociateCenArrayOutput values.
// You can construct a concrete instance of `VpcAssociateCenArrayInput` via:
//
//	VpcAssociateCenArray{ VpcAssociateCenArgs{...} }
type VpcAssociateCenArrayInput interface {
	pulumi.Input

	ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput
	ToVpcAssociateCenArrayOutputWithContext(context.Context) VpcAssociateCenArrayOutput
}

type VpcAssociateCenArray []VpcAssociateCenInput

func (VpcAssociateCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAssociateCen)(nil)).Elem()
}

func (i VpcAssociateCenArray) ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput {
	return i.ToVpcAssociateCenArrayOutputWithContext(context.Background())
}

func (i VpcAssociateCenArray) ToVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcAssociateCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAssociateCenArrayOutput)
}

type VpcAssociateCenOutput struct{ *pulumi.OutputState }

func (VpcAssociateCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAssociateCen)(nil)).Elem()
}

func (o VpcAssociateCenOutput) ToVpcAssociateCenOutput() VpcAssociateCenOutput {
	return o
}

func (o VpcAssociateCenOutput) ToVpcAssociateCenOutputWithContext(ctx context.Context) VpcAssociateCenOutput {
	return o
}

// The ID of CEN.
func (o VpcAssociateCenOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// The owner ID of CEN.
func (o VpcAssociateCenOutput) CenOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenOwnerId }).(pulumi.StringPtrOutput)
}

// The status of CEN.
func (o VpcAssociateCenOutput) CenStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenStatus }).(pulumi.StringPtrOutput)
}

type VpcAssociateCenArrayOutput struct{ *pulumi.OutputState }

func (VpcAssociateCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAssociateCen)(nil)).Elem()
}

func (o VpcAssociateCenArrayOutput) ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput {
	return o
}

func (o VpcAssociateCenArrayOutput) ToVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcAssociateCenArrayOutput {
	return o
}

func (o VpcAssociateCenArrayOutput) Index(i pulumi.IntInput) VpcAssociateCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAssociateCen {
		return vs[0].([]VpcAssociateCen)[vs[1].(int)]
	}).(VpcAssociateCenOutput)
}

type VpcTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcTagInput is an input type that accepts VpcTagArgs and VpcTagOutput values.
// You can construct a concrete instance of `VpcTagInput` via:
//
//	VpcTagArgs{...}
type VpcTagInput interface {
	pulumi.Input

	ToVpcTagOutput() VpcTagOutput
	ToVpcTagOutputWithContext(context.Context) VpcTagOutput
}

type VpcTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcTag)(nil)).Elem()
}

func (i VpcTagArgs) ToVpcTagOutput() VpcTagOutput {
	return i.ToVpcTagOutputWithContext(context.Background())
}

func (i VpcTagArgs) ToVpcTagOutputWithContext(ctx context.Context) VpcTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcTagOutput)
}

// VpcTagArrayInput is an input type that accepts VpcTagArray and VpcTagArrayOutput values.
// You can construct a concrete instance of `VpcTagArrayInput` via:
//
//	VpcTagArray{ VpcTagArgs{...} }
type VpcTagArrayInput interface {
	pulumi.Input

	ToVpcTagArrayOutput() VpcTagArrayOutput
	ToVpcTagArrayOutputWithContext(context.Context) VpcTagArrayOutput
}

type VpcTagArray []VpcTagInput

func (VpcTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcTag)(nil)).Elem()
}

func (i VpcTagArray) ToVpcTagArrayOutput() VpcTagArrayOutput {
	return i.ToVpcTagArrayOutputWithContext(context.Background())
}

func (i VpcTagArray) ToVpcTagArrayOutputWithContext(ctx context.Context) VpcTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcTagArrayOutput)
}

type VpcTagOutput struct{ *pulumi.OutputState }

func (VpcTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcTag)(nil)).Elem()
}

func (o VpcTagOutput) ToVpcTagOutput() VpcTagOutput {
	return o
}

func (o VpcTagOutput) ToVpcTagOutputWithContext(ctx context.Context) VpcTagOutput {
	return o
}

// The Key of Tags.
func (o VpcTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcTagArrayOutput struct{ *pulumi.OutputState }

func (VpcTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcTag)(nil)).Elem()
}

func (o VpcTagArrayOutput) ToVpcTagArrayOutput() VpcTagArrayOutput {
	return o
}

func (o VpcTagArrayOutput) ToVpcTagArrayOutputWithContext(ctx context.Context) VpcTagArrayOutput {
	return o
}

func (o VpcTagArrayOutput) Index(i pulumi.IntInput) VpcTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcTag {
		return vs[0].([]VpcTag)[vs[1].(int)]
	}).(VpcTagOutput)
}

type VpcsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcsTagInput is an input type that accepts VpcsTagArgs and VpcsTagOutput values.
// You can construct a concrete instance of `VpcsTagInput` via:
//
//	VpcsTagArgs{...}
type VpcsTagInput interface {
	pulumi.Input

	ToVpcsTagOutput() VpcsTagOutput
	ToVpcsTagOutputWithContext(context.Context) VpcsTagOutput
}

type VpcsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsTag)(nil)).Elem()
}

func (i VpcsTagArgs) ToVpcsTagOutput() VpcsTagOutput {
	return i.ToVpcsTagOutputWithContext(context.Background())
}

func (i VpcsTagArgs) ToVpcsTagOutputWithContext(ctx context.Context) VpcsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsTagOutput)
}

// VpcsTagArrayInput is an input type that accepts VpcsTagArray and VpcsTagArrayOutput values.
// You can construct a concrete instance of `VpcsTagArrayInput` via:
//
//	VpcsTagArray{ VpcsTagArgs{...} }
type VpcsTagArrayInput interface {
	pulumi.Input

	ToVpcsTagArrayOutput() VpcsTagArrayOutput
	ToVpcsTagArrayOutputWithContext(context.Context) VpcsTagArrayOutput
}

type VpcsTagArray []VpcsTagInput

func (VpcsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsTag)(nil)).Elem()
}

func (i VpcsTagArray) ToVpcsTagArrayOutput() VpcsTagArrayOutput {
	return i.ToVpcsTagArrayOutputWithContext(context.Background())
}

func (i VpcsTagArray) ToVpcsTagArrayOutputWithContext(ctx context.Context) VpcsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsTagArrayOutput)
}

type VpcsTagOutput struct{ *pulumi.OutputState }

func (VpcsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsTag)(nil)).Elem()
}

func (o VpcsTagOutput) ToVpcsTagOutput() VpcsTagOutput {
	return o
}

func (o VpcsTagOutput) ToVpcsTagOutputWithContext(ctx context.Context) VpcsTagOutput {
	return o
}

// The Key of Tags.
func (o VpcsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcsTagArrayOutput struct{ *pulumi.OutputState }

func (VpcsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsTag)(nil)).Elem()
}

func (o VpcsTagArrayOutput) ToVpcsTagArrayOutput() VpcsTagArrayOutput {
	return o
}

func (o VpcsTagArrayOutput) ToVpcsTagArrayOutputWithContext(ctx context.Context) VpcsTagArrayOutput {
	return o
}

func (o VpcsTagArrayOutput) Index(i pulumi.IntInput) VpcsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsTag {
		return vs[0].([]VpcsTag)[vs[1].(int)]
	}).(VpcsTagOutput)
}

type VpcsVpc struct {
	// The account ID of VPC.
	AccountId string `pulumi:"accountId"`
	// The associate cen list of VPC.
	AssociateCens []VpcsVpcAssociateCen `pulumi:"associateCens"`
	// The auxiliary cidr block list of VPC.
	AuxiliaryCidrBlocks []string `pulumi:"auxiliaryCidrBlocks"`
	// The cidr block of VPC.
	CidrBlock string `pulumi:"cidrBlock"`
	// The create time of VPC.
	CreationTime string `pulumi:"creationTime"`
	// The description of VPC.
	Description string `pulumi:"description"`
	// The dns server list of VPC.
	DnsServers []string `pulumi:"dnsServers"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The nat gateway ID list of VPC.
	NatGatewayIds []string `pulumi:"natGatewayIds"`
	// The ProjectName of the VPC.
	ProjectName string `pulumi:"projectName"`
	// The route table ID list of VPC.
	RouteTableIds []string `pulumi:"routeTableIds"`
	// The security group ID list of VPC.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The status of VPC.
	Status string `pulumi:"status"`
	// The subnet ID list of VPC.
	SubnetIds []string `pulumi:"subnetIds"`
	// Tags.
	Tags []VpcsVpcTag `pulumi:"tags"`
	// The update time of VPC.
	UpdateTime string `pulumi:"updateTime"`
	// The ID of VPC.
	VpcId string `pulumi:"vpcId"`
	// The vpc name to query.
	VpcName string `pulumi:"vpcName"`
}

// VpcsVpcInput is an input type that accepts VpcsVpcArgs and VpcsVpcOutput values.
// You can construct a concrete instance of `VpcsVpcInput` via:
//
//	VpcsVpcArgs{...}
type VpcsVpcInput interface {
	pulumi.Input

	ToVpcsVpcOutput() VpcsVpcOutput
	ToVpcsVpcOutputWithContext(context.Context) VpcsVpcOutput
}

type VpcsVpcArgs struct {
	// The account ID of VPC.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The associate cen list of VPC.
	AssociateCens VpcsVpcAssociateCenArrayInput `pulumi:"associateCens"`
	// The auxiliary cidr block list of VPC.
	AuxiliaryCidrBlocks pulumi.StringArrayInput `pulumi:"auxiliaryCidrBlocks"`
	// The cidr block of VPC.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The create time of VPC.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The description of VPC.
	Description pulumi.StringInput `pulumi:"description"`
	// The dns server list of VPC.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// The IPv6 CIDR block of the VPC.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The nat gateway ID list of VPC.
	NatGatewayIds pulumi.StringArrayInput `pulumi:"natGatewayIds"`
	// The ProjectName of the VPC.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The route table ID list of VPC.
	RouteTableIds pulumi.StringArrayInput `pulumi:"routeTableIds"`
	// The security group ID list of VPC.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The status of VPC.
	Status pulumi.StringInput `pulumi:"status"`
	// The subnet ID list of VPC.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Tags.
	Tags VpcsVpcTagArrayInput `pulumi:"tags"`
	// The update time of VPC.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The ID of VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vpc name to query.
	VpcName pulumi.StringInput `pulumi:"vpcName"`
}

func (VpcsVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpc)(nil)).Elem()
}

func (i VpcsVpcArgs) ToVpcsVpcOutput() VpcsVpcOutput {
	return i.ToVpcsVpcOutputWithContext(context.Background())
}

func (i VpcsVpcArgs) ToVpcsVpcOutputWithContext(ctx context.Context) VpcsVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcOutput)
}

// VpcsVpcArrayInput is an input type that accepts VpcsVpcArray and VpcsVpcArrayOutput values.
// You can construct a concrete instance of `VpcsVpcArrayInput` via:
//
//	VpcsVpcArray{ VpcsVpcArgs{...} }
type VpcsVpcArrayInput interface {
	pulumi.Input

	ToVpcsVpcArrayOutput() VpcsVpcArrayOutput
	ToVpcsVpcArrayOutputWithContext(context.Context) VpcsVpcArrayOutput
}

type VpcsVpcArray []VpcsVpcInput

func (VpcsVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpc)(nil)).Elem()
}

func (i VpcsVpcArray) ToVpcsVpcArrayOutput() VpcsVpcArrayOutput {
	return i.ToVpcsVpcArrayOutputWithContext(context.Background())
}

func (i VpcsVpcArray) ToVpcsVpcArrayOutputWithContext(ctx context.Context) VpcsVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcArrayOutput)
}

type VpcsVpcOutput struct{ *pulumi.OutputState }

func (VpcsVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpc)(nil)).Elem()
}

func (o VpcsVpcOutput) ToVpcsVpcOutput() VpcsVpcOutput {
	return o
}

func (o VpcsVpcOutput) ToVpcsVpcOutputWithContext(ctx context.Context) VpcsVpcOutput {
	return o
}

// The account ID of VPC.
func (o VpcsVpcOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.AccountId }).(pulumi.StringOutput)
}

// The associate cen list of VPC.
func (o VpcsVpcOutput) AssociateCens() VpcsVpcAssociateCenArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []VpcsVpcAssociateCen { return v.AssociateCens }).(VpcsVpcAssociateCenArrayOutput)
}

// The auxiliary cidr block list of VPC.
func (o VpcsVpcOutput) AuxiliaryCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.AuxiliaryCidrBlocks }).(pulumi.StringArrayOutput)
}

// The cidr block of VPC.
func (o VpcsVpcOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The create time of VPC.
func (o VpcsVpcOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The description of VPC.
func (o VpcsVpcOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.Description }).(pulumi.StringOutput)
}

// The dns server list of VPC.
func (o VpcsVpcOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// The IPv6 CIDR block of the VPC.
func (o VpcsVpcOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The nat gateway ID list of VPC.
func (o VpcsVpcOutput) NatGatewayIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.NatGatewayIds }).(pulumi.StringArrayOutput)
}

// The ProjectName of the VPC.
func (o VpcsVpcOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The route table ID list of VPC.
func (o VpcsVpcOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

// The security group ID list of VPC.
func (o VpcsVpcOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The status of VPC.
func (o VpcsVpcOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.Status }).(pulumi.StringOutput)
}

// The subnet ID list of VPC.
func (o VpcsVpcOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Tags.
func (o VpcsVpcOutput) Tags() VpcsVpcTagArrayOutput {
	return o.ApplyT(func(v VpcsVpc) []VpcsVpcTag { return v.Tags }).(VpcsVpcTagArrayOutput)
}

// The update time of VPC.
func (o VpcsVpcOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The ID of VPC.
func (o VpcsVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vpc name to query.
func (o VpcsVpcOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpc) string { return v.VpcName }).(pulumi.StringOutput)
}

type VpcsVpcArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpc)(nil)).Elem()
}

func (o VpcsVpcArrayOutput) ToVpcsVpcArrayOutput() VpcsVpcArrayOutput {
	return o
}

func (o VpcsVpcArrayOutput) ToVpcsVpcArrayOutputWithContext(ctx context.Context) VpcsVpcArrayOutput {
	return o
}

func (o VpcsVpcArrayOutput) Index(i pulumi.IntInput) VpcsVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpc {
		return vs[0].([]VpcsVpc)[vs[1].(int)]
	}).(VpcsVpcOutput)
}

type VpcsVpcAssociateCen struct {
	// The ID of CEN.
	CenId string `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId string `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus string `pulumi:"cenStatus"`
}

// VpcsVpcAssociateCenInput is an input type that accepts VpcsVpcAssociateCenArgs and VpcsVpcAssociateCenOutput values.
// You can construct a concrete instance of `VpcsVpcAssociateCenInput` via:
//
//	VpcsVpcAssociateCenArgs{...}
type VpcsVpcAssociateCenInput interface {
	pulumi.Input

	ToVpcsVpcAssociateCenOutput() VpcsVpcAssociateCenOutput
	ToVpcsVpcAssociateCenOutputWithContext(context.Context) VpcsVpcAssociateCenOutput
}

type VpcsVpcAssociateCenArgs struct {
	// The ID of CEN.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// The owner ID of CEN.
	CenOwnerId pulumi.StringInput `pulumi:"cenOwnerId"`
	// The status of CEN.
	CenStatus pulumi.StringInput `pulumi:"cenStatus"`
}

func (VpcsVpcAssociateCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcAssociateCen)(nil)).Elem()
}

func (i VpcsVpcAssociateCenArgs) ToVpcsVpcAssociateCenOutput() VpcsVpcAssociateCenOutput {
	return i.ToVpcsVpcAssociateCenOutputWithContext(context.Background())
}

func (i VpcsVpcAssociateCenArgs) ToVpcsVpcAssociateCenOutputWithContext(ctx context.Context) VpcsVpcAssociateCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcAssociateCenOutput)
}

// VpcsVpcAssociateCenArrayInput is an input type that accepts VpcsVpcAssociateCenArray and VpcsVpcAssociateCenArrayOutput values.
// You can construct a concrete instance of `VpcsVpcAssociateCenArrayInput` via:
//
//	VpcsVpcAssociateCenArray{ VpcsVpcAssociateCenArgs{...} }
type VpcsVpcAssociateCenArrayInput interface {
	pulumi.Input

	ToVpcsVpcAssociateCenArrayOutput() VpcsVpcAssociateCenArrayOutput
	ToVpcsVpcAssociateCenArrayOutputWithContext(context.Context) VpcsVpcAssociateCenArrayOutput
}

type VpcsVpcAssociateCenArray []VpcsVpcAssociateCenInput

func (VpcsVpcAssociateCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcAssociateCen)(nil)).Elem()
}

func (i VpcsVpcAssociateCenArray) ToVpcsVpcAssociateCenArrayOutput() VpcsVpcAssociateCenArrayOutput {
	return i.ToVpcsVpcAssociateCenArrayOutputWithContext(context.Background())
}

func (i VpcsVpcAssociateCenArray) ToVpcsVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcsVpcAssociateCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcAssociateCenArrayOutput)
}

type VpcsVpcAssociateCenOutput struct{ *pulumi.OutputState }

func (VpcsVpcAssociateCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcAssociateCen)(nil)).Elem()
}

func (o VpcsVpcAssociateCenOutput) ToVpcsVpcAssociateCenOutput() VpcsVpcAssociateCenOutput {
	return o
}

func (o VpcsVpcAssociateCenOutput) ToVpcsVpcAssociateCenOutputWithContext(ctx context.Context) VpcsVpcAssociateCenOutput {
	return o
}

// The ID of CEN.
func (o VpcsVpcAssociateCenOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcAssociateCen) string { return v.CenId }).(pulumi.StringOutput)
}

// The owner ID of CEN.
func (o VpcsVpcAssociateCenOutput) CenOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcAssociateCen) string { return v.CenOwnerId }).(pulumi.StringOutput)
}

// The status of CEN.
func (o VpcsVpcAssociateCenOutput) CenStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcAssociateCen) string { return v.CenStatus }).(pulumi.StringOutput)
}

type VpcsVpcAssociateCenArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcAssociateCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcAssociateCen)(nil)).Elem()
}

func (o VpcsVpcAssociateCenArrayOutput) ToVpcsVpcAssociateCenArrayOutput() VpcsVpcAssociateCenArrayOutput {
	return o
}

func (o VpcsVpcAssociateCenArrayOutput) ToVpcsVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcsVpcAssociateCenArrayOutput {
	return o
}

func (o VpcsVpcAssociateCenArrayOutput) Index(i pulumi.IntInput) VpcsVpcAssociateCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpcAssociateCen {
		return vs[0].([]VpcsVpcAssociateCen)[vs[1].(int)]
	}).(VpcsVpcAssociateCenOutput)
}

type VpcsVpcTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// VpcsVpcTagInput is an input type that accepts VpcsVpcTagArgs and VpcsVpcTagOutput values.
// You can construct a concrete instance of `VpcsVpcTagInput` via:
//
//	VpcsVpcTagArgs{...}
type VpcsVpcTagInput interface {
	pulumi.Input

	ToVpcsVpcTagOutput() VpcsVpcTagOutput
	ToVpcsVpcTagOutputWithContext(context.Context) VpcsVpcTagOutput
}

type VpcsVpcTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcsVpcTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcTag)(nil)).Elem()
}

func (i VpcsVpcTagArgs) ToVpcsVpcTagOutput() VpcsVpcTagOutput {
	return i.ToVpcsVpcTagOutputWithContext(context.Background())
}

func (i VpcsVpcTagArgs) ToVpcsVpcTagOutputWithContext(ctx context.Context) VpcsVpcTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcTagOutput)
}

// VpcsVpcTagArrayInput is an input type that accepts VpcsVpcTagArray and VpcsVpcTagArrayOutput values.
// You can construct a concrete instance of `VpcsVpcTagArrayInput` via:
//
//	VpcsVpcTagArray{ VpcsVpcTagArgs{...} }
type VpcsVpcTagArrayInput interface {
	pulumi.Input

	ToVpcsVpcTagArrayOutput() VpcsVpcTagArrayOutput
	ToVpcsVpcTagArrayOutputWithContext(context.Context) VpcsVpcTagArrayOutput
}

type VpcsVpcTagArray []VpcsVpcTagInput

func (VpcsVpcTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcTag)(nil)).Elem()
}

func (i VpcsVpcTagArray) ToVpcsVpcTagArrayOutput() VpcsVpcTagArrayOutput {
	return i.ToVpcsVpcTagArrayOutputWithContext(context.Background())
}

func (i VpcsVpcTagArray) ToVpcsVpcTagArrayOutputWithContext(ctx context.Context) VpcsVpcTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcsVpcTagArrayOutput)
}

type VpcsVpcTagOutput struct{ *pulumi.OutputState }

func (VpcsVpcTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcsVpcTag)(nil)).Elem()
}

func (o VpcsVpcTagOutput) ToVpcsVpcTagOutput() VpcsVpcTagOutput {
	return o
}

func (o VpcsVpcTagOutput) ToVpcsVpcTagOutputWithContext(ctx context.Context) VpcsVpcTagOutput {
	return o
}

// The Key of Tags.
func (o VpcsVpcTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o VpcsVpcTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcsVpcTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcsVpcTagArrayOutput struct{ *pulumi.OutputState }

func (VpcsVpcTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcsVpcTag)(nil)).Elem()
}

func (o VpcsVpcTagArrayOutput) ToVpcsVpcTagArrayOutput() VpcsVpcTagArrayOutput {
	return o
}

func (o VpcsVpcTagArrayOutput) ToVpcsVpcTagArrayOutputWithContext(ctx context.Context) VpcsVpcTagArrayOutput {
	return o
}

func (o VpcsVpcTagArrayOutput) Index(i pulumi.IntInput) VpcsVpcTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcsVpcTag {
		return vs[0].([]VpcsVpcTag)[vs[1].(int)]
	}).(VpcsVpcTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipsHaVipInput)(nil)).Elem(), HaVipsHaVipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HaVipsHaVipArrayInput)(nil)).Elem(), HaVipsHaVipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AddressBandwidthsIpv6AddressBandwidthInput)(nil)).Elem(), Ipv6AddressBandwidthsIpv6AddressBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AddressBandwidthsIpv6AddressBandwidthArrayInput)(nil)).Elem(), Ipv6AddressBandwidthsIpv6AddressBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AddressesIpv6AddressInput)(nil)).Elem(), Ipv6AddressesIpv6AddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6AddressesIpv6AddressArrayInput)(nil)).Elem(), Ipv6AddressesIpv6AddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6GatewaysIpv6GatewayInput)(nil)).Elem(), Ipv6GatewaysIpv6GatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ipv6GatewaysIpv6GatewayArrayInput)(nil)).Elem(), Ipv6GatewaysIpv6GatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEgressAclEntryInput)(nil)).Elem(), NetworkAclEgressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEgressAclEntryArrayInput)(nil)).Elem(), NetworkAclEgressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclIngressAclEntryInput)(nil)).Elem(), NetworkAclIngressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclIngressAclEntryArrayInput)(nil)).Elem(), NetworkAclIngressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclTagInput)(nil)).Elem(), NetworkAclTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclTagArrayInput)(nil)).Elem(), NetworkAclTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclInput)(nil)).Elem(), NetworkAclsNetworkAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclArrayInput)(nil)).Elem(), NetworkAclsNetworkAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclEgressAclEntryInput)(nil)).Elem(), NetworkAclsNetworkAclEgressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclEgressAclEntryArrayInput)(nil)).Elem(), NetworkAclsNetworkAclEgressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclIngressAclEntryInput)(nil)).Elem(), NetworkAclsNetworkAclIngressAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclIngressAclEntryArrayInput)(nil)).Elem(), NetworkAclsNetworkAclIngressAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclResourceInput)(nil)).Elem(), NetworkAclsNetworkAclResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclResourceArrayInput)(nil)).Elem(), NetworkAclsNetworkAclResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclTagInput)(nil)).Elem(), NetworkAclsNetworkAclTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsNetworkAclTagArrayInput)(nil)).Elem(), NetworkAclsNetworkAclTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsTagInput)(nil)).Elem(), NetworkAclsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclsTagArrayInput)(nil)).Elem(), NetworkAclsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceTagInput)(nil)).Elem(), NetworkInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceTagArrayInput)(nil)).Elem(), NetworkInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfaceInput)(nil)).Elem(), NetworkInterfacesNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfaceArrayInput)(nil)).Elem(), NetworkInterfacesNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetInput)(nil)).Elem(), NetworkInterfacesNetworkInterfacePrivateIpSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetArrayInput)(nil)).Elem(), NetworkInterfacesNetworkInterfacePrivateIpSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpInput)(nil)).Elem(), NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayInput)(nil)).Elem(), NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfaceTagInput)(nil)).Elem(), NetworkInterfacesNetworkInterfaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesNetworkInterfaceTagArrayInput)(nil)).Elem(), NetworkInterfacesNetworkInterfaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesTagInput)(nil)).Elem(), NetworkInterfacesTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfacesTagArrayInput)(nil)).Elem(), NetworkInterfacesTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListPrefixListAssociationInput)(nil)).Elem(), PrefixListPrefixListAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListPrefixListAssociationArrayInput)(nil)).Elem(), PrefixListPrefixListAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListPrefixListEntryInput)(nil)).Elem(), PrefixListPrefixListEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListPrefixListEntryArrayInput)(nil)).Elem(), PrefixListPrefixListEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListTagInput)(nil)).Elem(), PrefixListTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListTagArrayInput)(nil)).Elem(), PrefixListTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListInput)(nil)).Elem(), PrefixListsPrefixListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListArrayInput)(nil)).Elem(), PrefixListsPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListPrefixListAssociationInput)(nil)).Elem(), PrefixListsPrefixListPrefixListAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListPrefixListAssociationArrayInput)(nil)).Elem(), PrefixListsPrefixListPrefixListAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListPrefixListEntryInput)(nil)).Elem(), PrefixListsPrefixListPrefixListEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsPrefixListPrefixListEntryArrayInput)(nil)).Elem(), PrefixListsPrefixListPrefixListEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsTagFilterInput)(nil)).Elem(), PrefixListsTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrefixListsTagFilterArrayInput)(nil)).Elem(), PrefixListsTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesRouteEntryInput)(nil)).Elem(), RouteEntriesRouteEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteEntriesRouteEntryArrayInput)(nil)).Elem(), RouteEntriesRouteEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableInput)(nil)).Elem(), RouteTablesRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteTablesRouteTableArrayInput)(nil)).Elem(), RouteTablesRouteTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRulesSecurityGroupRuleInput)(nil)).Elem(), SecurityGroupRulesSecurityGroupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRulesSecurityGroupRuleArrayInput)(nil)).Elem(), SecurityGroupRulesSecurityGroupRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupTagInput)(nil)).Elem(), SecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupTagArrayInput)(nil)).Elem(), SecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsSecurityGroupInput)(nil)).Elem(), SecurityGroupsSecurityGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsSecurityGroupArrayInput)(nil)).Elem(), SecurityGroupsSecurityGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsSecurityGroupTagInput)(nil)).Elem(), SecurityGroupsSecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsSecurityGroupTagArrayInput)(nil)).Elem(), SecurityGroupsSecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsTagInput)(nil)).Elem(), SecurityGroupsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupsTagArrayInput)(nil)).Elem(), SecurityGroupsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetTagInput)(nil)).Elem(), SubnetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetTagArrayInput)(nil)).Elem(), SubnetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetInput)(nil)).Elem(), SubnetsSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetArrayInput)(nil)).Elem(), SubnetsSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetRouteTableInput)(nil)).Elem(), SubnetsSubnetRouteTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetTagInput)(nil)).Elem(), SubnetsSubnetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsSubnetTagArrayInput)(nil)).Elem(), SubnetsSubnetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsTagInput)(nil)).Elem(), SubnetsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetsTagArrayInput)(nil)).Elem(), SubnetsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAssociateCenInput)(nil)).Elem(), VpcAssociateCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAssociateCenArrayInput)(nil)).Elem(), VpcAssociateCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcTagInput)(nil)).Elem(), VpcTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcTagArrayInput)(nil)).Elem(), VpcTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsTagInput)(nil)).Elem(), VpcsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsTagArrayInput)(nil)).Elem(), VpcsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcInput)(nil)).Elem(), VpcsVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcArrayInput)(nil)).Elem(), VpcsVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcAssociateCenInput)(nil)).Elem(), VpcsVpcAssociateCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcAssociateCenArrayInput)(nil)).Elem(), VpcsVpcAssociateCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcTagInput)(nil)).Elem(), VpcsVpcTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcsVpcTagArrayInput)(nil)).Elem(), VpcsVpcTagArray{})
	pulumi.RegisterOutputType(HaVipsHaVipOutput{})
	pulumi.RegisterOutputType(HaVipsHaVipArrayOutput{})
	pulumi.RegisterOutputType(Ipv6AddressBandwidthsIpv6AddressBandwidthOutput{})
	pulumi.RegisterOutputType(Ipv6AddressBandwidthsIpv6AddressBandwidthArrayOutput{})
	pulumi.RegisterOutputType(Ipv6AddressesIpv6AddressOutput{})
	pulumi.RegisterOutputType(Ipv6AddressesIpv6AddressArrayOutput{})
	pulumi.RegisterOutputType(Ipv6GatewaysIpv6GatewayOutput{})
	pulumi.RegisterOutputType(Ipv6GatewaysIpv6GatewayArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclTagOutput{})
	pulumi.RegisterOutputType(NetworkAclTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclEgressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclEgressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclIngressAclEntryOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclIngressAclEntryArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclResourceOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclResourceArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclTagOutput{})
	pulumi.RegisterOutputType(NetworkAclsNetworkAclTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclsTagOutput{})
	pulumi.RegisterOutputType(NetworkAclsTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTagOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfacePrivateIpSetOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfacePrivateIpSetArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfacePrivateIpSetAssociatedElasticIpArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfaceTagOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesNetworkInterfaceTagArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesTagOutput{})
	pulumi.RegisterOutputType(NetworkInterfacesTagArrayOutput{})
	pulumi.RegisterOutputType(PrefixListPrefixListAssociationOutput{})
	pulumi.RegisterOutputType(PrefixListPrefixListAssociationArrayOutput{})
	pulumi.RegisterOutputType(PrefixListPrefixListEntryOutput{})
	pulumi.RegisterOutputType(PrefixListPrefixListEntryArrayOutput{})
	pulumi.RegisterOutputType(PrefixListTagOutput{})
	pulumi.RegisterOutputType(PrefixListTagArrayOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListArrayOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListPrefixListAssociationOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListPrefixListAssociationArrayOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListPrefixListEntryOutput{})
	pulumi.RegisterOutputType(PrefixListsPrefixListPrefixListEntryArrayOutput{})
	pulumi.RegisterOutputType(PrefixListsTagFilterOutput{})
	pulumi.RegisterOutputType(PrefixListsTagFilterArrayOutput{})
	pulumi.RegisterOutputType(RouteEntriesRouteEntryOutput{})
	pulumi.RegisterOutputType(RouteEntriesRouteEntryArrayOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableOutput{})
	pulumi.RegisterOutputType(RouteTablesRouteTableArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupRulesSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(SecurityGroupRulesSecurityGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupTagOutput{})
	pulumi.RegisterOutputType(SecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupsSecurityGroupOutput{})
	pulumi.RegisterOutputType(SecurityGroupsSecurityGroupArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupsSecurityGroupTagOutput{})
	pulumi.RegisterOutputType(SecurityGroupsSecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupsTagOutput{})
	pulumi.RegisterOutputType(SecurityGroupsTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetTagOutput{})
	pulumi.RegisterOutputType(SubnetTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetArrayOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetRouteTableOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetTagOutput{})
	pulumi.RegisterOutputType(SubnetsSubnetTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetsTagOutput{})
	pulumi.RegisterOutputType(SubnetsTagArrayOutput{})
	pulumi.RegisterOutputType(VpcAssociateCenOutput{})
	pulumi.RegisterOutputType(VpcAssociateCenArrayOutput{})
	pulumi.RegisterOutputType(VpcTagOutput{})
	pulumi.RegisterOutputType(VpcTagArrayOutput{})
	pulumi.RegisterOutputType(VpcsTagOutput{})
	pulumi.RegisterOutputType(VpcsTagArrayOutput{})
	pulumi.RegisterOutputType(VpcsVpcOutput{})
	pulumi.RegisterOutputType(VpcsVpcArrayOutput{})
	pulumi.RegisterOutputType(VpcsVpcAssociateCenOutput{})
	pulumi.RegisterOutputType(VpcsVpcAssociateCenArrayOutput{})
	pulumi.RegisterOutputType(VpcsVpcTagOutput{})
	pulumi.RegisterOutputType(VpcsVpcTagArrayOutput{})
}
