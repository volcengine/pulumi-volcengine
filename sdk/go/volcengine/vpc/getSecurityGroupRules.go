// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of security group rules
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetSecurityGroupRules(ctx, &vpc.GetSecurityGroupRulesArgs{
//				SecurityGroupId: "sg-13f2nau7x93wg3n6nu3z5sxib",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityGroupRules(ctx *pulumi.Context, args *GetSecurityGroupRulesArgs, opts ...pulumi.InvokeOption) (*GetSecurityGroupRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityGroupRulesResult
	err := ctx.Invoke("volcengine:vpc/getSecurityGroupRules:getSecurityGroupRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityGroupRules.
type GetSecurityGroupRulesArgs struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp *string `pulumi:"cidrIp"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction *string `pulumi:"direction"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol *string `pulumi:"protocol"`
	// SecurityGroup ID.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId *string `pulumi:"sourceGroupId"`
}

// A collection of values returned by getSecurityGroupRules.
type GetSecurityGroupRulesResult struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp *string `pulumi:"cidrIp"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction *string `pulumi:"direction"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	OutputFile *string `pulumi:"outputFile"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol *string `pulumi:"protocol"`
	// Id of SecurityGroup.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// The collection of SecurityGroup query.
	SecurityGroupRules []GetSecurityGroupRulesSecurityGroupRule `pulumi:"securityGroupRules"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId *string `pulumi:"sourceGroupId"`
}

func GetSecurityGroupRulesOutput(ctx *pulumi.Context, args GetSecurityGroupRulesOutputArgs, opts ...pulumi.InvokeOption) GetSecurityGroupRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityGroupRulesResult, error) {
			args := v.(GetSecurityGroupRulesArgs)
			r, err := GetSecurityGroupRules(ctx, &args, opts...)
			var s GetSecurityGroupRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityGroupRulesResultOutput)
}

// A collection of arguments for invoking getSecurityGroupRules.
type GetSecurityGroupRulesOutputArgs struct {
	// Cidr ip of egress/ingress Rule.
	CidrIp pulumi.StringPtrInput `pulumi:"cidrIp"`
	// Direction of rule, ingress (inbound) or egress (outbound).
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// SecurityGroup ID.
	SecurityGroupId pulumi.StringInput `pulumi:"securityGroupId"`
	// ID of the source security group whose access permission you want to set.
	SourceGroupId pulumi.StringPtrInput `pulumi:"sourceGroupId"`
}

func (GetSecurityGroupRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRulesArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityGroupRules.
type GetSecurityGroupRulesResultOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupRulesResult)(nil)).Elem()
}

func (o GetSecurityGroupRulesResultOutput) ToGetSecurityGroupRulesResultOutput() GetSecurityGroupRulesResultOutput {
	return o
}

func (o GetSecurityGroupRulesResultOutput) ToGetSecurityGroupRulesResultOutputWithContext(ctx context.Context) GetSecurityGroupRulesResultOutput {
	return o
}

// Cidr ip of egress/ingress Rule.
func (o GetSecurityGroupRulesResultOutput) CidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesResult) *string { return v.CidrIp }).(pulumi.StringPtrOutput)
}

// Direction of rule, ingress (inbound) or egress (outbound).
func (o GetSecurityGroupRulesResultOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesResult) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityGroupRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecurityGroupRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
func (o GetSecurityGroupRulesResultOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesResult) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Id of SecurityGroup.
func (o GetSecurityGroupRulesResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// The collection of SecurityGroup query.
func (o GetSecurityGroupRulesResultOutput) SecurityGroupRules() GetSecurityGroupRulesSecurityGroupRuleArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesResult) []GetSecurityGroupRulesSecurityGroupRule {
		return v.SecurityGroupRules
	}).(GetSecurityGroupRulesSecurityGroupRuleArrayOutput)
}

// ID of the source security group whose access permission you want to set.
func (o GetSecurityGroupRulesResultOutput) SourceGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityGroupRulesResult) *string { return v.SourceGroupId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityGroupRulesResultOutput{})
}
