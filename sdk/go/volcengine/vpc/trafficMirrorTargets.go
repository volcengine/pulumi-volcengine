// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of traffic mirror targets
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetTrafficMirrorTargets(ctx, &vpc.GetTrafficMirrorTargetsArgs{
//				TrafficMirrorTargetIds: []string{
//					"tmt-rry7yljufsw0v0x58w2****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: volcengine.vpc.TrafficMirrorTargets has been deprecated in favor of volcengine.vpc.getTrafficMirrorTargets
func TrafficMirrorTargets(ctx *pulumi.Context, args *TrafficMirrorTargetsArgs, opts ...pulumi.InvokeOption) (*TrafficMirrorTargetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv TrafficMirrorTargetsResult
	err := ctx.Invoke("volcengine:vpc/trafficMirrorTargets:TrafficMirrorTargets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking TrafficMirrorTargets.
type TrafficMirrorTargetsArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror target.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []TrafficMirrorTargetsTag `pulumi:"tags"`
	// A list of traffic mirror target IDs.
	TrafficMirrorTargetIds []string `pulumi:"trafficMirrorTargetIds"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName *string `pulumi:"trafficMirrorTargetName"`
}

// A collection of values returned by TrafficMirrorTargets.
type TrafficMirrorTargetsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror target.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []TrafficMirrorTargetsTag `pulumi:"tags"`
	// The total count of query.
	TotalCount             int      `pulumi:"totalCount"`
	TrafficMirrorTargetIds []string `pulumi:"trafficMirrorTargetIds"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName *string `pulumi:"trafficMirrorTargetName"`
	// The collection of query.
	TrafficMirrorTargets []TrafficMirrorTargetsTrafficMirrorTarget `pulumi:"trafficMirrorTargets"`
}

func TrafficMirrorTargetsOutput(ctx *pulumi.Context, args TrafficMirrorTargetsOutputArgs, opts ...pulumi.InvokeOption) TrafficMirrorTargetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (TrafficMirrorTargetsResult, error) {
			args := v.(TrafficMirrorTargetsArgs)
			r, err := TrafficMirrorTargets(ctx, &args, opts...)
			var s TrafficMirrorTargetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(TrafficMirrorTargetsResultOutput)
}

// A collection of arguments for invoking TrafficMirrorTargets.
type TrafficMirrorTargetsOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of traffic mirror target.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags TrafficMirrorTargetsTagArrayInput `pulumi:"tags"`
	// A list of traffic mirror target IDs.
	TrafficMirrorTargetIds pulumi.StringArrayInput `pulumi:"trafficMirrorTargetIds"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName pulumi.StringPtrInput `pulumi:"trafficMirrorTargetName"`
}

func (TrafficMirrorTargetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetsArgs)(nil)).Elem()
}

// A collection of values returned by TrafficMirrorTargets.
type TrafficMirrorTargetsResultOutput struct{ *pulumi.OutputState }

func (TrafficMirrorTargetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorTargetsResult)(nil)).Elem()
}

func (o TrafficMirrorTargetsResultOutput) ToTrafficMirrorTargetsResultOutput() TrafficMirrorTargetsResultOutput {
	return o
}

func (o TrafficMirrorTargetsResultOutput) ToTrafficMirrorTargetsResultOutputWithContext(ctx context.Context) TrafficMirrorTargetsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o TrafficMirrorTargetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o TrafficMirrorTargetsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o TrafficMirrorTargetsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of traffic mirror target.
func (o TrafficMirrorTargetsResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o TrafficMirrorTargetsResultOutput) Tags() TrafficMirrorTargetsTagArrayOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) []TrafficMirrorTargetsTag { return v.Tags }).(TrafficMirrorTargetsTagArrayOutput)
}

// The total count of query.
func (o TrafficMirrorTargetsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o TrafficMirrorTargetsResultOutput) TrafficMirrorTargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) []string { return v.TrafficMirrorTargetIds }).(pulumi.StringArrayOutput)
}

// The name of traffic mirror target.
func (o TrafficMirrorTargetsResultOutput) TrafficMirrorTargetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) *string { return v.TrafficMirrorTargetName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o TrafficMirrorTargetsResultOutput) TrafficMirrorTargets() TrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return o.ApplyT(func(v TrafficMirrorTargetsResult) []TrafficMirrorTargetsTrafficMirrorTarget {
		return v.TrafficMirrorTargets
	}).(TrafficMirrorTargetsTrafficMirrorTargetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(TrafficMirrorTargetsResultOutput{})
}
