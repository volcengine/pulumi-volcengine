// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of traffic mirror sessions
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetTrafficMirrorSessions(ctx, &vpc.GetTrafficMirrorSessionsArgs{
//				TrafficMirrorSessionIds: []string{
//					"tms-mjpcyvp71r0g5smt1ayf****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTrafficMirrorSessions(ctx *pulumi.Context, args *GetTrafficMirrorSessionsArgs, opts ...pulumi.InvokeOption) (*GetTrafficMirrorSessionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTrafficMirrorSessionsResult
	err := ctx.Invoke("volcengine:vpc/getTrafficMirrorSessions:getTrafficMirrorSessions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficMirrorSessions.
type GetTrafficMirrorSessionsArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// The ID of network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The packet length of traffic mirror session.
	PacketLength *int `pulumi:"packetLength"`
	// The priority of traffic mirror session.
	Priority *int `pulumi:"priority"`
	// The project name of traffic mirror session.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTrafficMirrorSessionsTag `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId *string `pulumi:"trafficMirrorFilterId"`
	// A list of traffic mirror session IDs.
	TrafficMirrorSessionIds []string `pulumi:"trafficMirrorSessionIds"`
	// A list of traffic mirror session names.
	TrafficMirrorSessionNames []string `pulumi:"trafficMirrorSessionNames"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId *string `pulumi:"trafficMirrorTargetId"`
	// The ID of virtual network.
	VirtualNetworkId *int `pulumi:"virtualNetworkId"`
}

// A collection of values returned by getTrafficMirrorSessions.
type GetTrafficMirrorSessionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                 string  `pulumi:"id"`
	NameRegex          *string `pulumi:"nameRegex"`
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	OutputFile         *string `pulumi:"outputFile"`
	// The packet length of traffic mirror session.
	PacketLength *int `pulumi:"packetLength"`
	// The priority of traffic mirror session.
	Priority *int `pulumi:"priority"`
	// The project name of traffic mirror session.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTrafficMirrorSessionsTag `pulumi:"tags"`
	// The total count of query.
	TotalCount int `pulumi:"totalCount"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId     *string  `pulumi:"trafficMirrorFilterId"`
	TrafficMirrorSessionIds   []string `pulumi:"trafficMirrorSessionIds"`
	TrafficMirrorSessionNames []string `pulumi:"trafficMirrorSessionNames"`
	// The collection of query.
	TrafficMirrorSessions []GetTrafficMirrorSessionsTrafficMirrorSession `pulumi:"trafficMirrorSessions"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId *string `pulumi:"trafficMirrorTargetId"`
	// The ID of virtual network.
	VirtualNetworkId *int `pulumi:"virtualNetworkId"`
}

func GetTrafficMirrorSessionsOutput(ctx *pulumi.Context, args GetTrafficMirrorSessionsOutputArgs, opts ...pulumi.InvokeOption) GetTrafficMirrorSessionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTrafficMirrorSessionsResult, error) {
			args := v.(GetTrafficMirrorSessionsArgs)
			r, err := GetTrafficMirrorSessions(ctx, &args, opts...)
			var s GetTrafficMirrorSessionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTrafficMirrorSessionsResultOutput)
}

// A collection of arguments for invoking getTrafficMirrorSessions.
type GetTrafficMirrorSessionsOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// The ID of network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The packet length of traffic mirror session.
	PacketLength pulumi.IntPtrInput `pulumi:"packetLength"`
	// The priority of traffic mirror session.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The project name of traffic mirror session.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags GetTrafficMirrorSessionsTagArrayInput `pulumi:"tags"`
	// The ID of traffic mirror filter.
	TrafficMirrorFilterId pulumi.StringPtrInput `pulumi:"trafficMirrorFilterId"`
	// A list of traffic mirror session IDs.
	TrafficMirrorSessionIds pulumi.StringArrayInput `pulumi:"trafficMirrorSessionIds"`
	// A list of traffic mirror session names.
	TrafficMirrorSessionNames pulumi.StringArrayInput `pulumi:"trafficMirrorSessionNames"`
	// The ID of traffic mirror target.
	TrafficMirrorTargetId pulumi.StringPtrInput `pulumi:"trafficMirrorTargetId"`
	// The ID of virtual network.
	VirtualNetworkId pulumi.IntPtrInput `pulumi:"virtualNetworkId"`
}

func (GetTrafficMirrorSessionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsArgs)(nil)).Elem()
}

// A collection of values returned by getTrafficMirrorSessions.
type GetTrafficMirrorSessionsResultOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorSessionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorSessionsResult)(nil)).Elem()
}

func (o GetTrafficMirrorSessionsResultOutput) ToGetTrafficMirrorSessionsResultOutput() GetTrafficMirrorSessionsResultOutput {
	return o
}

func (o GetTrafficMirrorSessionsResultOutput) ToGetTrafficMirrorSessionsResultOutputWithContext(ctx context.Context) GetTrafficMirrorSessionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTrafficMirrorSessionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrafficMirrorSessionsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorSessionsResultOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorSessionsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The packet length of traffic mirror session.
func (o GetTrafficMirrorSessionsResultOutput) PacketLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *int { return v.PacketLength }).(pulumi.IntPtrOutput)
}

// The priority of traffic mirror session.
func (o GetTrafficMirrorSessionsResultOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The project name of traffic mirror session.
func (o GetTrafficMirrorSessionsResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetTrafficMirrorSessionsResultOutput) Tags() GetTrafficMirrorSessionsTagArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) []GetTrafficMirrorSessionsTag { return v.Tags }).(GetTrafficMirrorSessionsTagArrayOutput)
}

// The total count of query.
func (o GetTrafficMirrorSessionsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The ID of traffic mirror filter.
func (o GetTrafficMirrorSessionsResultOutput) TrafficMirrorFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *string { return v.TrafficMirrorFilterId }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorSessionsResultOutput) TrafficMirrorSessionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) []string { return v.TrafficMirrorSessionIds }).(pulumi.StringArrayOutput)
}

func (o GetTrafficMirrorSessionsResultOutput) TrafficMirrorSessionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) []string { return v.TrafficMirrorSessionNames }).(pulumi.StringArrayOutput)
}

// The collection of query.
func (o GetTrafficMirrorSessionsResultOutput) TrafficMirrorSessions() GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) []GetTrafficMirrorSessionsTrafficMirrorSession {
		return v.TrafficMirrorSessions
	}).(GetTrafficMirrorSessionsTrafficMirrorSessionArrayOutput)
}

// The ID of traffic mirror target.
func (o GetTrafficMirrorSessionsResultOutput) TrafficMirrorTargetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *string { return v.TrafficMirrorTargetId }).(pulumi.StringPtrOutput)
}

// The ID of virtual network.
func (o GetTrafficMirrorSessionsResultOutput) VirtualNetworkId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorSessionsResult) *int { return v.VirtualNetworkId }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTrafficMirrorSessionsResultOutput{})
}
