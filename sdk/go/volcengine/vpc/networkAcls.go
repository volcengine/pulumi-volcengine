// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of network acls
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.NetworkAcls(ctx, &vpc.NetworkAclsArgs{
//				NetworkAclName: pulumi.StringRef("ms-tf-acl"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func NetworkAcls(ctx *pulumi.Context, args *NetworkAclsArgs, opts ...pulumi.InvokeOption) (*NetworkAclsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv NetworkAclsResult
	err := ctx.Invoke("volcengine:vpc/networkAcls:NetworkAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking NetworkAcls.
type NetworkAclsArgs struct {
	// A list of Network Acl IDs.
	Ids []string `pulumi:"ids"`
	// A Name Regex of Network Acl.
	NameRegex *string `pulumi:"nameRegex"`
	// The name of Network Acl.
	NetworkAclName *string `pulumi:"networkAclName"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The subnet id of Network Acl.
	SubnetId *string `pulumi:"subnetId"`
	// The vpc id of Network Acl.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by NetworkAcls.
type NetworkAclsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	NameRegex *string  `pulumi:"nameRegex"`
	// The Name of Network Acl.
	NetworkAclName *string `pulumi:"networkAclName"`
	// The collection of Network Acl query.
	NetworkAcls []NetworkAclsNetworkAcl `pulumi:"networkAcls"`
	OutputFile  *string                 `pulumi:"outputFile"`
	SubnetId    *string                 `pulumi:"subnetId"`
	// The total count of Network Acl query.
	TotalCount int `pulumi:"totalCount"`
	// The vpc id of Network Acl.
	VpcId *string `pulumi:"vpcId"`
}

func NetworkAclsOutput(ctx *pulumi.Context, args NetworkAclsOutputArgs, opts ...pulumi.InvokeOption) NetworkAclsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (NetworkAclsResult, error) {
			args := v.(NetworkAclsArgs)
			r, err := NetworkAcls(ctx, &args, opts...)
			var s NetworkAclsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(NetworkAclsResultOutput)
}

// A collection of arguments for invoking NetworkAcls.
type NetworkAclsOutputArgs struct {
	// A list of Network Acl IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// A Name Regex of Network Acl.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// The name of Network Acl.
	NetworkAclName pulumi.StringPtrInput `pulumi:"networkAclName"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The subnet id of Network Acl.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The vpc id of Network Acl.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (NetworkAclsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsArgs)(nil)).Elem()
}

// A collection of values returned by NetworkAcls.
type NetworkAclsResultOutput struct{ *pulumi.OutputState }

func (NetworkAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclsResult)(nil)).Elem()
}

func (o NetworkAclsResultOutput) ToNetworkAclsResultOutput() NetworkAclsResultOutput {
	return o
}

func (o NetworkAclsResultOutput) ToNetworkAclsResultOutputWithContext(ctx context.Context) NetworkAclsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o NetworkAclsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o NetworkAclsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkAclsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o NetworkAclsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

// The Name of Network Acl.
func (o NetworkAclsResultOutput) NetworkAclName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclsResult) *string { return v.NetworkAclName }).(pulumi.StringPtrOutput)
}

// The collection of Network Acl query.
func (o NetworkAclsResultOutput) NetworkAcls() NetworkAclsNetworkAclArrayOutput {
	return o.ApplyT(func(v NetworkAclsResult) []NetworkAclsNetworkAcl { return v.NetworkAcls }).(NetworkAclsNetworkAclArrayOutput)
}

func (o NetworkAclsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o NetworkAclsResultOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclsResult) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The total count of Network Acl query.
func (o NetworkAclsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

// The vpc id of Network Acl.
func (o NetworkAclsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkAclsResultOutput{})
}
