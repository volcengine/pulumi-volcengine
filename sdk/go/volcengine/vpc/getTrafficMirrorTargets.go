// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of traffic mirror targets
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.GetTrafficMirrorTargets(ctx, &vpc.GetTrafficMirrorTargetsArgs{
//				TrafficMirrorTargetIds: []string{
//					"tmt-rry7yljufsw0v0x58w2****",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTrafficMirrorTargets(ctx *pulumi.Context, args *GetTrafficMirrorTargetsArgs, opts ...pulumi.InvokeOption) (*GetTrafficMirrorTargetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTrafficMirrorTargetsResult
	err := ctx.Invoke("volcengine:vpc/getTrafficMirrorTargets:getTrafficMirrorTargets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTrafficMirrorTargets.
type GetTrafficMirrorTargetsArgs struct {
	// A Name Regex of Resource.
	NameRegex *string `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror target.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTrafficMirrorTargetsTag `pulumi:"tags"`
	// A list of traffic mirror target IDs.
	TrafficMirrorTargetIds []string `pulumi:"trafficMirrorTargetIds"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName *string `pulumi:"trafficMirrorTargetName"`
}

// A collection of values returned by getTrafficMirrorTargets.
type GetTrafficMirrorTargetsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The project name of traffic mirror target.
	ProjectName *string `pulumi:"projectName"`
	// Tags.
	Tags []GetTrafficMirrorTargetsTag `pulumi:"tags"`
	// The total count of query.
	TotalCount             int      `pulumi:"totalCount"`
	TrafficMirrorTargetIds []string `pulumi:"trafficMirrorTargetIds"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName *string `pulumi:"trafficMirrorTargetName"`
	// The collection of query.
	TrafficMirrorTargets []GetTrafficMirrorTargetsTrafficMirrorTarget `pulumi:"trafficMirrorTargets"`
}

func GetTrafficMirrorTargetsOutput(ctx *pulumi.Context, args GetTrafficMirrorTargetsOutputArgs, opts ...pulumi.InvokeOption) GetTrafficMirrorTargetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTrafficMirrorTargetsResult, error) {
			args := v.(GetTrafficMirrorTargetsArgs)
			r, err := GetTrafficMirrorTargets(ctx, &args, opts...)
			var s GetTrafficMirrorTargetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTrafficMirrorTargetsResultOutput)
}

// A collection of arguments for invoking getTrafficMirrorTargets.
type GetTrafficMirrorTargetsOutputArgs struct {
	// A Name Regex of Resource.
	NameRegex pulumi.StringPtrInput `pulumi:"nameRegex"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The project name of traffic mirror target.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
	// Tags.
	Tags GetTrafficMirrorTargetsTagArrayInput `pulumi:"tags"`
	// A list of traffic mirror target IDs.
	TrafficMirrorTargetIds pulumi.StringArrayInput `pulumi:"trafficMirrorTargetIds"`
	// The name of traffic mirror target.
	TrafficMirrorTargetName pulumi.StringPtrInput `pulumi:"trafficMirrorTargetName"`
}

func (GetTrafficMirrorTargetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorTargetsArgs)(nil)).Elem()
}

// A collection of values returned by getTrafficMirrorTargets.
type GetTrafficMirrorTargetsResultOutput struct{ *pulumi.OutputState }

func (GetTrafficMirrorTargetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficMirrorTargetsResult)(nil)).Elem()
}

func (o GetTrafficMirrorTargetsResultOutput) ToGetTrafficMirrorTargetsResultOutput() GetTrafficMirrorTargetsResultOutput {
	return o
}

func (o GetTrafficMirrorTargetsResultOutput) ToGetTrafficMirrorTargetsResultOutputWithContext(ctx context.Context) GetTrafficMirrorTargetsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTrafficMirrorTargetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTrafficMirrorTargetsResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o GetTrafficMirrorTargetsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of traffic mirror target.
func (o GetTrafficMirrorTargetsResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// Tags.
func (o GetTrafficMirrorTargetsResultOutput) Tags() GetTrafficMirrorTargetsTagArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) []GetTrafficMirrorTargetsTag { return v.Tags }).(GetTrafficMirrorTargetsTagArrayOutput)
}

// The total count of query.
func (o GetTrafficMirrorTargetsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func (o GetTrafficMirrorTargetsResultOutput) TrafficMirrorTargetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) []string { return v.TrafficMirrorTargetIds }).(pulumi.StringArrayOutput)
}

// The name of traffic mirror target.
func (o GetTrafficMirrorTargetsResultOutput) TrafficMirrorTargetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) *string { return v.TrafficMirrorTargetName }).(pulumi.StringPtrOutput)
}

// The collection of query.
func (o GetTrafficMirrorTargetsResultOutput) TrafficMirrorTargets() GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput {
	return o.ApplyT(func(v GetTrafficMirrorTargetsResult) []GetTrafficMirrorTargetsTrafficMirrorTarget {
		return v.TrafficMirrorTargets
	}).(GetTrafficMirrorTargetsTrafficMirrorTargetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTrafficMirrorTargetsResultOutput{})
}
