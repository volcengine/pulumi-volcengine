// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

var _ = internal.GetEnvOrDefault

type AclAclEntry struct {
	// The description of the AclEntry.
	Description *string `pulumi:"description"`
	// The content of the AclEntry.
	Entry string `pulumi:"entry"`
}

// AclAclEntryInput is an input type that accepts AclAclEntryArgs and AclAclEntryOutput values.
// You can construct a concrete instance of `AclAclEntryInput` via:
//
//	AclAclEntryArgs{...}
type AclAclEntryInput interface {
	pulumi.Input

	ToAclAclEntryOutput() AclAclEntryOutput
	ToAclAclEntryOutputWithContext(context.Context) AclAclEntryOutput
}

type AclAclEntryArgs struct {
	// The description of the AclEntry.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The content of the AclEntry.
	Entry pulumi.StringInput `pulumi:"entry"`
}

func (AclAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAclEntry)(nil)).Elem()
}

func (i AclAclEntryArgs) ToAclAclEntryOutput() AclAclEntryOutput {
	return i.ToAclAclEntryOutputWithContext(context.Background())
}

func (i AclAclEntryArgs) ToAclAclEntryOutputWithContext(ctx context.Context) AclAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAclEntryOutput)
}

// AclAclEntryArrayInput is an input type that accepts AclAclEntryArray and AclAclEntryArrayOutput values.
// You can construct a concrete instance of `AclAclEntryArrayInput` via:
//
//	AclAclEntryArray{ AclAclEntryArgs{...} }
type AclAclEntryArrayInput interface {
	pulumi.Input

	ToAclAclEntryArrayOutput() AclAclEntryArrayOutput
	ToAclAclEntryArrayOutputWithContext(context.Context) AclAclEntryArrayOutput
}

type AclAclEntryArray []AclAclEntryInput

func (AclAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAclEntry)(nil)).Elem()
}

func (i AclAclEntryArray) ToAclAclEntryArrayOutput() AclAclEntryArrayOutput {
	return i.ToAclAclEntryArrayOutputWithContext(context.Background())
}

func (i AclAclEntryArray) ToAclAclEntryArrayOutputWithContext(ctx context.Context) AclAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclAclEntryArrayOutput)
}

type AclAclEntryOutput struct{ *pulumi.OutputState }

func (AclAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclAclEntry)(nil)).Elem()
}

func (o AclAclEntryOutput) ToAclAclEntryOutput() AclAclEntryOutput {
	return o
}

func (o AclAclEntryOutput) ToAclAclEntryOutputWithContext(ctx context.Context) AclAclEntryOutput {
	return o
}

// The description of the AclEntry.
func (o AclAclEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AclAclEntry) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The content of the AclEntry.
func (o AclAclEntryOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v AclAclEntry) string { return v.Entry }).(pulumi.StringOutput)
}

type AclAclEntryArrayOutput struct{ *pulumi.OutputState }

func (AclAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclAclEntry)(nil)).Elem()
}

func (o AclAclEntryArrayOutput) ToAclAclEntryArrayOutput() AclAclEntryArrayOutput {
	return o
}

func (o AclAclEntryArrayOutput) ToAclAclEntryArrayOutputWithContext(ctx context.Context) AclAclEntryArrayOutput {
	return o
}

func (o AclAclEntryArrayOutput) Index(i pulumi.IntInput) AclAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclAclEntry {
		return vs[0].([]AclAclEntry)[vs[1].(int)]
	}).(AclAclEntryOutput)
}

type AclsAcl struct {
	// The entries info of acl.
	AclEntries []AclsAclAclEntry `pulumi:"aclEntries"`
	// The count of acl entry.
	AclEntryCount int `pulumi:"aclEntryCount"`
	// The ID of Acl.
	AclId string `pulumi:"aclId"`
	// The name of acl.
	AclName string `pulumi:"aclName"`
	// Creation time of Acl.
	CreateTime string `pulumi:"createTime"`
	// The description of Acl.
	Description string `pulumi:"description"`
	// The ID of Acl.
	Id string `pulumi:"id"`
	// The listeners of acl.
	Listeners []AclsAclListener `pulumi:"listeners"`
	// The name of project.
	ProjectName string `pulumi:"projectName"`
	// Update time of Acl.
	UpdateTime string `pulumi:"updateTime"`
}

// AclsAclInput is an input type that accepts AclsAclArgs and AclsAclOutput values.
// You can construct a concrete instance of `AclsAclInput` via:
//
//	AclsAclArgs{...}
type AclsAclInput interface {
	pulumi.Input

	ToAclsAclOutput() AclsAclOutput
	ToAclsAclOutputWithContext(context.Context) AclsAclOutput
}

type AclsAclArgs struct {
	// The entries info of acl.
	AclEntries AclsAclAclEntryArrayInput `pulumi:"aclEntries"`
	// The count of acl entry.
	AclEntryCount pulumi.IntInput `pulumi:"aclEntryCount"`
	// The ID of Acl.
	AclId pulumi.StringInput `pulumi:"aclId"`
	// The name of acl.
	AclName pulumi.StringInput `pulumi:"aclName"`
	// Creation time of Acl.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of Acl.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of Acl.
	Id pulumi.StringInput `pulumi:"id"`
	// The listeners of acl.
	Listeners AclsAclListenerArrayInput `pulumi:"listeners"`
	// The name of project.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// Update time of Acl.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (AclsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAcl)(nil)).Elem()
}

func (i AclsAclArgs) ToAclsAclOutput() AclsAclOutput {
	return i.ToAclsAclOutputWithContext(context.Background())
}

func (i AclsAclArgs) ToAclsAclOutputWithContext(ctx context.Context) AclsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclOutput)
}

// AclsAclArrayInput is an input type that accepts AclsAclArray and AclsAclArrayOutput values.
// You can construct a concrete instance of `AclsAclArrayInput` via:
//
//	AclsAclArray{ AclsAclArgs{...} }
type AclsAclArrayInput interface {
	pulumi.Input

	ToAclsAclArrayOutput() AclsAclArrayOutput
	ToAclsAclArrayOutputWithContext(context.Context) AclsAclArrayOutput
}

type AclsAclArray []AclsAclInput

func (AclsAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAcl)(nil)).Elem()
}

func (i AclsAclArray) ToAclsAclArrayOutput() AclsAclArrayOutput {
	return i.ToAclsAclArrayOutputWithContext(context.Background())
}

func (i AclsAclArray) ToAclsAclArrayOutputWithContext(ctx context.Context) AclsAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclArrayOutput)
}

type AclsAclOutput struct{ *pulumi.OutputState }

func (AclsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAcl)(nil)).Elem()
}

func (o AclsAclOutput) ToAclsAclOutput() AclsAclOutput {
	return o
}

func (o AclsAclOutput) ToAclsAclOutputWithContext(ctx context.Context) AclsAclOutput {
	return o
}

// The entries info of acl.
func (o AclsAclOutput) AclEntries() AclsAclAclEntryArrayOutput {
	return o.ApplyT(func(v AclsAcl) []AclsAclAclEntry { return v.AclEntries }).(AclsAclAclEntryArrayOutput)
}

// The count of acl entry.
func (o AclsAclOutput) AclEntryCount() pulumi.IntOutput {
	return o.ApplyT(func(v AclsAcl) int { return v.AclEntryCount }).(pulumi.IntOutput)
}

// The ID of Acl.
func (o AclsAclOutput) AclId() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.AclId }).(pulumi.StringOutput)
}

// The name of acl.
func (o AclsAclOutput) AclName() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.AclName }).(pulumi.StringOutput)
}

// Creation time of Acl.
func (o AclsAclOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of Acl.
func (o AclsAclOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of Acl.
func (o AclsAclOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.Id }).(pulumi.StringOutput)
}

// The listeners of acl.
func (o AclsAclOutput) Listeners() AclsAclListenerArrayOutput {
	return o.ApplyT(func(v AclsAcl) []AclsAclListener { return v.Listeners }).(AclsAclListenerArrayOutput)
}

// The name of project.
func (o AclsAclOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.ProjectName }).(pulumi.StringOutput)
}

// Update time of Acl.
func (o AclsAclOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAcl) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type AclsAclArrayOutput struct{ *pulumi.OutputState }

func (AclsAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAcl)(nil)).Elem()
}

func (o AclsAclArrayOutput) ToAclsAclArrayOutput() AclsAclArrayOutput {
	return o
}

func (o AclsAclArrayOutput) ToAclsAclArrayOutputWithContext(ctx context.Context) AclsAclArrayOutput {
	return o
}

func (o AclsAclArrayOutput) Index(i pulumi.IntInput) AclsAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclsAcl {
		return vs[0].([]AclsAcl)[vs[1].(int)]
	}).(AclsAclOutput)
}

type AclsAclAclEntry struct {
	// The description of Acl.
	Description string `pulumi:"description"`
	// The info of entry.
	Entry string `pulumi:"entry"`
}

// AclsAclAclEntryInput is an input type that accepts AclsAclAclEntryArgs and AclsAclAclEntryOutput values.
// You can construct a concrete instance of `AclsAclAclEntryInput` via:
//
//	AclsAclAclEntryArgs{...}
type AclsAclAclEntryInput interface {
	pulumi.Input

	ToAclsAclAclEntryOutput() AclsAclAclEntryOutput
	ToAclsAclAclEntryOutputWithContext(context.Context) AclsAclAclEntryOutput
}

type AclsAclAclEntryArgs struct {
	// The description of Acl.
	Description pulumi.StringInput `pulumi:"description"`
	// The info of entry.
	Entry pulumi.StringInput `pulumi:"entry"`
}

func (AclsAclAclEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAclAclEntry)(nil)).Elem()
}

func (i AclsAclAclEntryArgs) ToAclsAclAclEntryOutput() AclsAclAclEntryOutput {
	return i.ToAclsAclAclEntryOutputWithContext(context.Background())
}

func (i AclsAclAclEntryArgs) ToAclsAclAclEntryOutputWithContext(ctx context.Context) AclsAclAclEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclAclEntryOutput)
}

// AclsAclAclEntryArrayInput is an input type that accepts AclsAclAclEntryArray and AclsAclAclEntryArrayOutput values.
// You can construct a concrete instance of `AclsAclAclEntryArrayInput` via:
//
//	AclsAclAclEntryArray{ AclsAclAclEntryArgs{...} }
type AclsAclAclEntryArrayInput interface {
	pulumi.Input

	ToAclsAclAclEntryArrayOutput() AclsAclAclEntryArrayOutput
	ToAclsAclAclEntryArrayOutputWithContext(context.Context) AclsAclAclEntryArrayOutput
}

type AclsAclAclEntryArray []AclsAclAclEntryInput

func (AclsAclAclEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAclAclEntry)(nil)).Elem()
}

func (i AclsAclAclEntryArray) ToAclsAclAclEntryArrayOutput() AclsAclAclEntryArrayOutput {
	return i.ToAclsAclAclEntryArrayOutputWithContext(context.Background())
}

func (i AclsAclAclEntryArray) ToAclsAclAclEntryArrayOutputWithContext(ctx context.Context) AclsAclAclEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclAclEntryArrayOutput)
}

type AclsAclAclEntryOutput struct{ *pulumi.OutputState }

func (AclsAclAclEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAclAclEntry)(nil)).Elem()
}

func (o AclsAclAclEntryOutput) ToAclsAclAclEntryOutput() AclsAclAclEntryOutput {
	return o
}

func (o AclsAclAclEntryOutput) ToAclsAclAclEntryOutputWithContext(ctx context.Context) AclsAclAclEntryOutput {
	return o
}

// The description of Acl.
func (o AclsAclAclEntryOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclAclEntry) string { return v.Description }).(pulumi.StringOutput)
}

// The info of entry.
func (o AclsAclAclEntryOutput) Entry() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclAclEntry) string { return v.Entry }).(pulumi.StringOutput)
}

type AclsAclAclEntryArrayOutput struct{ *pulumi.OutputState }

func (AclsAclAclEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAclAclEntry)(nil)).Elem()
}

func (o AclsAclAclEntryArrayOutput) ToAclsAclAclEntryArrayOutput() AclsAclAclEntryArrayOutput {
	return o
}

func (o AclsAclAclEntryArrayOutput) ToAclsAclAclEntryArrayOutputWithContext(ctx context.Context) AclsAclAclEntryArrayOutput {
	return o
}

func (o AclsAclAclEntryArrayOutput) Index(i pulumi.IntInput) AclsAclAclEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclsAclAclEntry {
		return vs[0].([]AclsAclAclEntry)[vs[1].(int)]
	}).(AclsAclAclEntryOutput)
}

type AclsAclListener struct {
	// The type of acl.
	AclType string `pulumi:"aclType"`
	// The ID of Listener.
	ListenerId string `pulumi:"listenerId"`
	// The Name of Listener.
	ListenerName string `pulumi:"listenerName"`
	// The port info of listener.
	Port int `pulumi:"port"`
	// The protocol info of listener.
	Protocol string `pulumi:"protocol"`
}

// AclsAclListenerInput is an input type that accepts AclsAclListenerArgs and AclsAclListenerOutput values.
// You can construct a concrete instance of `AclsAclListenerInput` via:
//
//	AclsAclListenerArgs{...}
type AclsAclListenerInput interface {
	pulumi.Input

	ToAclsAclListenerOutput() AclsAclListenerOutput
	ToAclsAclListenerOutputWithContext(context.Context) AclsAclListenerOutput
}

type AclsAclListenerArgs struct {
	// The type of acl.
	AclType pulumi.StringInput `pulumi:"aclType"`
	// The ID of Listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The Name of Listener.
	ListenerName pulumi.StringInput `pulumi:"listenerName"`
	// The port info of listener.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol info of listener.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (AclsAclListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAclListener)(nil)).Elem()
}

func (i AclsAclListenerArgs) ToAclsAclListenerOutput() AclsAclListenerOutput {
	return i.ToAclsAclListenerOutputWithContext(context.Background())
}

func (i AclsAclListenerArgs) ToAclsAclListenerOutputWithContext(ctx context.Context) AclsAclListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclListenerOutput)
}

// AclsAclListenerArrayInput is an input type that accepts AclsAclListenerArray and AclsAclListenerArrayOutput values.
// You can construct a concrete instance of `AclsAclListenerArrayInput` via:
//
//	AclsAclListenerArray{ AclsAclListenerArgs{...} }
type AclsAclListenerArrayInput interface {
	pulumi.Input

	ToAclsAclListenerArrayOutput() AclsAclListenerArrayOutput
	ToAclsAclListenerArrayOutputWithContext(context.Context) AclsAclListenerArrayOutput
}

type AclsAclListenerArray []AclsAclListenerInput

func (AclsAclListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAclListener)(nil)).Elem()
}

func (i AclsAclListenerArray) ToAclsAclListenerArrayOutput() AclsAclListenerArrayOutput {
	return i.ToAclsAclListenerArrayOutputWithContext(context.Background())
}

func (i AclsAclListenerArray) ToAclsAclListenerArrayOutputWithContext(ctx context.Context) AclsAclListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AclsAclListenerArrayOutput)
}

type AclsAclListenerOutput struct{ *pulumi.OutputState }

func (AclsAclListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AclsAclListener)(nil)).Elem()
}

func (o AclsAclListenerOutput) ToAclsAclListenerOutput() AclsAclListenerOutput {
	return o
}

func (o AclsAclListenerOutput) ToAclsAclListenerOutputWithContext(ctx context.Context) AclsAclListenerOutput {
	return o
}

// The type of acl.
func (o AclsAclListenerOutput) AclType() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclListener) string { return v.AclType }).(pulumi.StringOutput)
}

// The ID of Listener.
func (o AclsAclListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The Name of Listener.
func (o AclsAclListenerOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclListener) string { return v.ListenerName }).(pulumi.StringOutput)
}

// The port info of listener.
func (o AclsAclListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v AclsAclListener) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol info of listener.
func (o AclsAclListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v AclsAclListener) string { return v.Protocol }).(pulumi.StringOutput)
}

type AclsAclListenerArrayOutput struct{ *pulumi.OutputState }

func (AclsAclListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AclsAclListener)(nil)).Elem()
}

func (o AclsAclListenerArrayOutput) ToAclsAclListenerArrayOutput() AclsAclListenerArrayOutput {
	return o
}

func (o AclsAclListenerArrayOutput) ToAclsAclListenerArrayOutputWithContext(ctx context.Context) AclsAclListenerArrayOutput {
	return o
}

func (o AclsAclListenerArrayOutput) Index(i pulumi.IntInput) AclsAclListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AclsAclListener {
		return vs[0].([]AclsAclListener)[vs[1].(int)]
	}).(AclsAclListenerOutput)
}

type AlbEipBillingConfig struct {
	// The peek bandwidth of the EIP which automatically assigned to the Alb. Unit: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing type of the EIP which automatically assigned to the Alb. Valid values: `PostPaidByBandwidth`, `PostPaidByTraffic`.
	EipBillingType string `pulumi:"eipBillingType"`
	// The ISP of the EIP which automatically associated to the Alb, the value can be `BGP`.
	Isp string `pulumi:"isp"`
}

// AlbEipBillingConfigInput is an input type that accepts AlbEipBillingConfigArgs and AlbEipBillingConfigOutput values.
// You can construct a concrete instance of `AlbEipBillingConfigInput` via:
//
//	AlbEipBillingConfigArgs{...}
type AlbEipBillingConfigInput interface {
	pulumi.Input

	ToAlbEipBillingConfigOutput() AlbEipBillingConfigOutput
	ToAlbEipBillingConfigOutputWithContext(context.Context) AlbEipBillingConfigOutput
}

type AlbEipBillingConfigArgs struct {
	// The peek bandwidth of the EIP which automatically assigned to the Alb. Unit: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing type of the EIP which automatically assigned to the Alb. Valid values: `PostPaidByBandwidth`, `PostPaidByTraffic`.
	EipBillingType pulumi.StringInput `pulumi:"eipBillingType"`
	// The ISP of the EIP which automatically associated to the Alb, the value can be `BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (AlbEipBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbEipBillingConfig)(nil)).Elem()
}

func (i AlbEipBillingConfigArgs) ToAlbEipBillingConfigOutput() AlbEipBillingConfigOutput {
	return i.ToAlbEipBillingConfigOutputWithContext(context.Background())
}

func (i AlbEipBillingConfigArgs) ToAlbEipBillingConfigOutputWithContext(ctx context.Context) AlbEipBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbEipBillingConfigOutput)
}

func (i AlbEipBillingConfigArgs) ToAlbEipBillingConfigPtrOutput() AlbEipBillingConfigPtrOutput {
	return i.ToAlbEipBillingConfigPtrOutputWithContext(context.Background())
}

func (i AlbEipBillingConfigArgs) ToAlbEipBillingConfigPtrOutputWithContext(ctx context.Context) AlbEipBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbEipBillingConfigOutput).ToAlbEipBillingConfigPtrOutputWithContext(ctx)
}

// AlbEipBillingConfigPtrInput is an input type that accepts AlbEipBillingConfigArgs, AlbEipBillingConfigPtr and AlbEipBillingConfigPtrOutput values.
// You can construct a concrete instance of `AlbEipBillingConfigPtrInput` via:
//
//	        AlbEipBillingConfigArgs{...}
//
//	or:
//
//	        nil
type AlbEipBillingConfigPtrInput interface {
	pulumi.Input

	ToAlbEipBillingConfigPtrOutput() AlbEipBillingConfigPtrOutput
	ToAlbEipBillingConfigPtrOutputWithContext(context.Context) AlbEipBillingConfigPtrOutput
}

type albEipBillingConfigPtrType AlbEipBillingConfigArgs

func AlbEipBillingConfigPtr(v *AlbEipBillingConfigArgs) AlbEipBillingConfigPtrInput {
	return (*albEipBillingConfigPtrType)(v)
}

func (*albEipBillingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlbEipBillingConfig)(nil)).Elem()
}

func (i *albEipBillingConfigPtrType) ToAlbEipBillingConfigPtrOutput() AlbEipBillingConfigPtrOutput {
	return i.ToAlbEipBillingConfigPtrOutputWithContext(context.Background())
}

func (i *albEipBillingConfigPtrType) ToAlbEipBillingConfigPtrOutputWithContext(ctx context.Context) AlbEipBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbEipBillingConfigPtrOutput)
}

type AlbEipBillingConfigOutput struct{ *pulumi.OutputState }

func (AlbEipBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbEipBillingConfig)(nil)).Elem()
}

func (o AlbEipBillingConfigOutput) ToAlbEipBillingConfigOutput() AlbEipBillingConfigOutput {
	return o
}

func (o AlbEipBillingConfigOutput) ToAlbEipBillingConfigOutputWithContext(ctx context.Context) AlbEipBillingConfigOutput {
	return o
}

func (o AlbEipBillingConfigOutput) ToAlbEipBillingConfigPtrOutput() AlbEipBillingConfigPtrOutput {
	return o.ToAlbEipBillingConfigPtrOutputWithContext(context.Background())
}

func (o AlbEipBillingConfigOutput) ToAlbEipBillingConfigPtrOutputWithContext(ctx context.Context) AlbEipBillingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlbEipBillingConfig) *AlbEipBillingConfig {
		return &v
	}).(AlbEipBillingConfigPtrOutput)
}

// The peek bandwidth of the EIP which automatically assigned to the Alb. Unit: Mbps.
func (o AlbEipBillingConfigOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v AlbEipBillingConfig) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing type of the EIP which automatically assigned to the Alb. Valid values: `PostPaidByBandwidth`, `PostPaidByTraffic`.
func (o AlbEipBillingConfigOutput) EipBillingType() pulumi.StringOutput {
	return o.ApplyT(func(v AlbEipBillingConfig) string { return v.EipBillingType }).(pulumi.StringOutput)
}

// The ISP of the EIP which automatically associated to the Alb, the value can be `BGP`.
func (o AlbEipBillingConfigOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v AlbEipBillingConfig) string { return v.Isp }).(pulumi.StringOutput)
}

type AlbEipBillingConfigPtrOutput struct{ *pulumi.OutputState }

func (AlbEipBillingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlbEipBillingConfig)(nil)).Elem()
}

func (o AlbEipBillingConfigPtrOutput) ToAlbEipBillingConfigPtrOutput() AlbEipBillingConfigPtrOutput {
	return o
}

func (o AlbEipBillingConfigPtrOutput) ToAlbEipBillingConfigPtrOutputWithContext(ctx context.Context) AlbEipBillingConfigPtrOutput {
	return o
}

func (o AlbEipBillingConfigPtrOutput) Elem() AlbEipBillingConfigOutput {
	return o.ApplyT(func(v *AlbEipBillingConfig) AlbEipBillingConfig {
		if v != nil {
			return *v
		}
		var ret AlbEipBillingConfig
		return ret
	}).(AlbEipBillingConfigOutput)
}

// The peek bandwidth of the EIP which automatically assigned to the Alb. Unit: Mbps.
func (o AlbEipBillingConfigPtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlbEipBillingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// The billing type of the EIP which automatically assigned to the Alb. Valid values: `PostPaidByBandwidth`, `PostPaidByTraffic`.
func (o AlbEipBillingConfigPtrOutput) EipBillingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlbEipBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EipBillingType
	}).(pulumi.StringPtrOutput)
}

// The ISP of the EIP which automatically associated to the Alb, the value can be `BGP`.
func (o AlbEipBillingConfigPtrOutput) Isp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlbEipBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Isp
	}).(pulumi.StringPtrOutput)
}

type AlbIpv6EipBillingConfig struct {
	// The peek bandwidth of the Ipv6 EIP which automatically assigned to the Alb. Unit: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing type of the Tpv6 EIP which automatically assigned to the Alb. Valid values: `PostPaidByBandwidth`, `PostPaidByTraffic`.
	BillingType string `pulumi:"billingType"`
	// The ISP of the Ipv6 EIP which automatically associated to the Alb, the value can be `BGP`.
	Isp string `pulumi:"isp"`
}

// AlbIpv6EipBillingConfigInput is an input type that accepts AlbIpv6EipBillingConfigArgs and AlbIpv6EipBillingConfigOutput values.
// You can construct a concrete instance of `AlbIpv6EipBillingConfigInput` via:
//
//	AlbIpv6EipBillingConfigArgs{...}
type AlbIpv6EipBillingConfigInput interface {
	pulumi.Input

	ToAlbIpv6EipBillingConfigOutput() AlbIpv6EipBillingConfigOutput
	ToAlbIpv6EipBillingConfigOutputWithContext(context.Context) AlbIpv6EipBillingConfigOutput
}

type AlbIpv6EipBillingConfigArgs struct {
	// The peek bandwidth of the Ipv6 EIP which automatically assigned to the Alb. Unit: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing type of the Tpv6 EIP which automatically assigned to the Alb. Valid values: `PostPaidByBandwidth`, `PostPaidByTraffic`.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The ISP of the Ipv6 EIP which automatically associated to the Alb, the value can be `BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (AlbIpv6EipBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbIpv6EipBillingConfig)(nil)).Elem()
}

func (i AlbIpv6EipBillingConfigArgs) ToAlbIpv6EipBillingConfigOutput() AlbIpv6EipBillingConfigOutput {
	return i.ToAlbIpv6EipBillingConfigOutputWithContext(context.Background())
}

func (i AlbIpv6EipBillingConfigArgs) ToAlbIpv6EipBillingConfigOutputWithContext(ctx context.Context) AlbIpv6EipBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbIpv6EipBillingConfigOutput)
}

func (i AlbIpv6EipBillingConfigArgs) ToAlbIpv6EipBillingConfigPtrOutput() AlbIpv6EipBillingConfigPtrOutput {
	return i.ToAlbIpv6EipBillingConfigPtrOutputWithContext(context.Background())
}

func (i AlbIpv6EipBillingConfigArgs) ToAlbIpv6EipBillingConfigPtrOutputWithContext(ctx context.Context) AlbIpv6EipBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbIpv6EipBillingConfigOutput).ToAlbIpv6EipBillingConfigPtrOutputWithContext(ctx)
}

// AlbIpv6EipBillingConfigPtrInput is an input type that accepts AlbIpv6EipBillingConfigArgs, AlbIpv6EipBillingConfigPtr and AlbIpv6EipBillingConfigPtrOutput values.
// You can construct a concrete instance of `AlbIpv6EipBillingConfigPtrInput` via:
//
//	        AlbIpv6EipBillingConfigArgs{...}
//
//	or:
//
//	        nil
type AlbIpv6EipBillingConfigPtrInput interface {
	pulumi.Input

	ToAlbIpv6EipBillingConfigPtrOutput() AlbIpv6EipBillingConfigPtrOutput
	ToAlbIpv6EipBillingConfigPtrOutputWithContext(context.Context) AlbIpv6EipBillingConfigPtrOutput
}

type albIpv6EipBillingConfigPtrType AlbIpv6EipBillingConfigArgs

func AlbIpv6EipBillingConfigPtr(v *AlbIpv6EipBillingConfigArgs) AlbIpv6EipBillingConfigPtrInput {
	return (*albIpv6EipBillingConfigPtrType)(v)
}

func (*albIpv6EipBillingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlbIpv6EipBillingConfig)(nil)).Elem()
}

func (i *albIpv6EipBillingConfigPtrType) ToAlbIpv6EipBillingConfigPtrOutput() AlbIpv6EipBillingConfigPtrOutput {
	return i.ToAlbIpv6EipBillingConfigPtrOutputWithContext(context.Background())
}

func (i *albIpv6EipBillingConfigPtrType) ToAlbIpv6EipBillingConfigPtrOutputWithContext(ctx context.Context) AlbIpv6EipBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbIpv6EipBillingConfigPtrOutput)
}

type AlbIpv6EipBillingConfigOutput struct{ *pulumi.OutputState }

func (AlbIpv6EipBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbIpv6EipBillingConfig)(nil)).Elem()
}

func (o AlbIpv6EipBillingConfigOutput) ToAlbIpv6EipBillingConfigOutput() AlbIpv6EipBillingConfigOutput {
	return o
}

func (o AlbIpv6EipBillingConfigOutput) ToAlbIpv6EipBillingConfigOutputWithContext(ctx context.Context) AlbIpv6EipBillingConfigOutput {
	return o
}

func (o AlbIpv6EipBillingConfigOutput) ToAlbIpv6EipBillingConfigPtrOutput() AlbIpv6EipBillingConfigPtrOutput {
	return o.ToAlbIpv6EipBillingConfigPtrOutputWithContext(context.Background())
}

func (o AlbIpv6EipBillingConfigOutput) ToAlbIpv6EipBillingConfigPtrOutputWithContext(ctx context.Context) AlbIpv6EipBillingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlbIpv6EipBillingConfig) *AlbIpv6EipBillingConfig {
		return &v
	}).(AlbIpv6EipBillingConfigPtrOutput)
}

// The peek bandwidth of the Ipv6 EIP which automatically assigned to the Alb. Unit: Mbps.
func (o AlbIpv6EipBillingConfigOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v AlbIpv6EipBillingConfig) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing type of the Tpv6 EIP which automatically assigned to the Alb. Valid values: `PostPaidByBandwidth`, `PostPaidByTraffic`.
func (o AlbIpv6EipBillingConfigOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v AlbIpv6EipBillingConfig) string { return v.BillingType }).(pulumi.StringOutput)
}

// The ISP of the Ipv6 EIP which automatically associated to the Alb, the value can be `BGP`.
func (o AlbIpv6EipBillingConfigOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v AlbIpv6EipBillingConfig) string { return v.Isp }).(pulumi.StringOutput)
}

type AlbIpv6EipBillingConfigPtrOutput struct{ *pulumi.OutputState }

func (AlbIpv6EipBillingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlbIpv6EipBillingConfig)(nil)).Elem()
}

func (o AlbIpv6EipBillingConfigPtrOutput) ToAlbIpv6EipBillingConfigPtrOutput() AlbIpv6EipBillingConfigPtrOutput {
	return o
}

func (o AlbIpv6EipBillingConfigPtrOutput) ToAlbIpv6EipBillingConfigPtrOutputWithContext(ctx context.Context) AlbIpv6EipBillingConfigPtrOutput {
	return o
}

func (o AlbIpv6EipBillingConfigPtrOutput) Elem() AlbIpv6EipBillingConfigOutput {
	return o.ApplyT(func(v *AlbIpv6EipBillingConfig) AlbIpv6EipBillingConfig {
		if v != nil {
			return *v
		}
		var ret AlbIpv6EipBillingConfig
		return ret
	}).(AlbIpv6EipBillingConfigOutput)
}

// The peek bandwidth of the Ipv6 EIP which automatically assigned to the Alb. Unit: Mbps.
func (o AlbIpv6EipBillingConfigPtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlbIpv6EipBillingConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// The billing type of the Tpv6 EIP which automatically assigned to the Alb. Valid values: `PostPaidByBandwidth`, `PostPaidByTraffic`.
func (o AlbIpv6EipBillingConfigPtrOutput) BillingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlbIpv6EipBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.BillingType
	}).(pulumi.StringPtrOutput)
}

// The ISP of the Ipv6 EIP which automatically associated to the Alb, the value can be `BGP`.
func (o AlbIpv6EipBillingConfigPtrOutput) Isp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlbIpv6EipBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Isp
	}).(pulumi.StringPtrOutput)
}

type AlbTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// AlbTagInput is an input type that accepts AlbTagArgs and AlbTagOutput values.
// You can construct a concrete instance of `AlbTagInput` via:
//
//	AlbTagArgs{...}
type AlbTagInput interface {
	pulumi.Input

	ToAlbTagOutput() AlbTagOutput
	ToAlbTagOutputWithContext(context.Context) AlbTagOutput
}

type AlbTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlbTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbTag)(nil)).Elem()
}

func (i AlbTagArgs) ToAlbTagOutput() AlbTagOutput {
	return i.ToAlbTagOutputWithContext(context.Background())
}

func (i AlbTagArgs) ToAlbTagOutputWithContext(ctx context.Context) AlbTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbTagOutput)
}

// AlbTagArrayInput is an input type that accepts AlbTagArray and AlbTagArrayOutput values.
// You can construct a concrete instance of `AlbTagArrayInput` via:
//
//	AlbTagArray{ AlbTagArgs{...} }
type AlbTagArrayInput interface {
	pulumi.Input

	ToAlbTagArrayOutput() AlbTagArrayOutput
	ToAlbTagArrayOutputWithContext(context.Context) AlbTagArrayOutput
}

type AlbTagArray []AlbTagInput

func (AlbTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbTag)(nil)).Elem()
}

func (i AlbTagArray) ToAlbTagArrayOutput() AlbTagArrayOutput {
	return i.ToAlbTagArrayOutputWithContext(context.Background())
}

func (i AlbTagArray) ToAlbTagArrayOutputWithContext(ctx context.Context) AlbTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbTagArrayOutput)
}

type AlbTagOutput struct{ *pulumi.OutputState }

func (AlbTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbTag)(nil)).Elem()
}

func (o AlbTagOutput) ToAlbTagOutput() AlbTagOutput {
	return o
}

func (o AlbTagOutput) ToAlbTagOutputWithContext(ctx context.Context) AlbTagOutput {
	return o
}

// The Key of Tags.
func (o AlbTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AlbTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o AlbTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlbTag) string { return v.Value }).(pulumi.StringOutput)
}

type AlbTagArrayOutput struct{ *pulumi.OutputState }

func (AlbTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbTag)(nil)).Elem()
}

func (o AlbTagArrayOutput) ToAlbTagArrayOutput() AlbTagArrayOutput {
	return o
}

func (o AlbTagArrayOutput) ToAlbTagArrayOutputWithContext(ctx context.Context) AlbTagArrayOutput {
	return o
}

func (o AlbTagArrayOutput) Index(i pulumi.IntInput) AlbTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbTag {
		return vs[0].([]AlbTag)[vs[1].(int)]
	}).(AlbTagOutput)
}

type AlbZoneMapping struct {
	// The IP address information of the Alb in this availability zone.
	LoadBalancerAddresses []AlbZoneMappingLoadBalancerAddress `pulumi:"loadBalancerAddresses"`
	// The subnet id of the Alb in this availability zone.
	SubnetId *string `pulumi:"subnetId"`
	// The availability zone id of the Alb.
	ZoneId *string `pulumi:"zoneId"`
}

// AlbZoneMappingInput is an input type that accepts AlbZoneMappingArgs and AlbZoneMappingOutput values.
// You can construct a concrete instance of `AlbZoneMappingInput` via:
//
//	AlbZoneMappingArgs{...}
type AlbZoneMappingInput interface {
	pulumi.Input

	ToAlbZoneMappingOutput() AlbZoneMappingOutput
	ToAlbZoneMappingOutputWithContext(context.Context) AlbZoneMappingOutput
}

type AlbZoneMappingArgs struct {
	// The IP address information of the Alb in this availability zone.
	LoadBalancerAddresses AlbZoneMappingLoadBalancerAddressArrayInput `pulumi:"loadBalancerAddresses"`
	// The subnet id of the Alb in this availability zone.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The availability zone id of the Alb.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (AlbZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbZoneMapping)(nil)).Elem()
}

func (i AlbZoneMappingArgs) ToAlbZoneMappingOutput() AlbZoneMappingOutput {
	return i.ToAlbZoneMappingOutputWithContext(context.Background())
}

func (i AlbZoneMappingArgs) ToAlbZoneMappingOutputWithContext(ctx context.Context) AlbZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbZoneMappingOutput)
}

// AlbZoneMappingArrayInput is an input type that accepts AlbZoneMappingArray and AlbZoneMappingArrayOutput values.
// You can construct a concrete instance of `AlbZoneMappingArrayInput` via:
//
//	AlbZoneMappingArray{ AlbZoneMappingArgs{...} }
type AlbZoneMappingArrayInput interface {
	pulumi.Input

	ToAlbZoneMappingArrayOutput() AlbZoneMappingArrayOutput
	ToAlbZoneMappingArrayOutputWithContext(context.Context) AlbZoneMappingArrayOutput
}

type AlbZoneMappingArray []AlbZoneMappingInput

func (AlbZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbZoneMapping)(nil)).Elem()
}

func (i AlbZoneMappingArray) ToAlbZoneMappingArrayOutput() AlbZoneMappingArrayOutput {
	return i.ToAlbZoneMappingArrayOutputWithContext(context.Background())
}

func (i AlbZoneMappingArray) ToAlbZoneMappingArrayOutputWithContext(ctx context.Context) AlbZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbZoneMappingArrayOutput)
}

type AlbZoneMappingOutput struct{ *pulumi.OutputState }

func (AlbZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbZoneMapping)(nil)).Elem()
}

func (o AlbZoneMappingOutput) ToAlbZoneMappingOutput() AlbZoneMappingOutput {
	return o
}

func (o AlbZoneMappingOutput) ToAlbZoneMappingOutputWithContext(ctx context.Context) AlbZoneMappingOutput {
	return o
}

// The IP address information of the Alb in this availability zone.
func (o AlbZoneMappingOutput) LoadBalancerAddresses() AlbZoneMappingLoadBalancerAddressArrayOutput {
	return o.ApplyT(func(v AlbZoneMapping) []AlbZoneMappingLoadBalancerAddress { return v.LoadBalancerAddresses }).(AlbZoneMappingLoadBalancerAddressArrayOutput)
}

// The subnet id of the Alb in this availability zone.
func (o AlbZoneMappingOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlbZoneMapping) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The availability zone id of the Alb.
func (o AlbZoneMappingOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlbZoneMapping) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type AlbZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (AlbZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbZoneMapping)(nil)).Elem()
}

func (o AlbZoneMappingArrayOutput) ToAlbZoneMappingArrayOutput() AlbZoneMappingArrayOutput {
	return o
}

func (o AlbZoneMappingArrayOutput) ToAlbZoneMappingArrayOutputWithContext(ctx context.Context) AlbZoneMappingArrayOutput {
	return o
}

func (o AlbZoneMappingArrayOutput) Index(i pulumi.IntInput) AlbZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbZoneMapping {
		return vs[0].([]AlbZoneMapping)[vs[1].(int)]
	}).(AlbZoneMappingOutput)
}

type AlbZoneMappingLoadBalancerAddress struct {
	// The Eip address of the Alb in this availability zone.
	EipAddress *string `pulumi:"eipAddress"`
	// The Eip id of alb instance in this availability zone.
	EipId *string `pulumi:"eipId"`
	// The Eni address of the Alb in this availability zone.
	EniAddress *string `pulumi:"eniAddress"`
	// The Eni id of the Alb in this availability zone.
	EniId *string `pulumi:"eniId"`
	// The Eni Ipv6 address of the Alb in this availability zone.
	EniIpv6Address *string `pulumi:"eniIpv6Address"`
	// The Ipv6 Eip id of alb instance in this availability zone.
	Ipv6EipId *string `pulumi:"ipv6EipId"`
}

// AlbZoneMappingLoadBalancerAddressInput is an input type that accepts AlbZoneMappingLoadBalancerAddressArgs and AlbZoneMappingLoadBalancerAddressOutput values.
// You can construct a concrete instance of `AlbZoneMappingLoadBalancerAddressInput` via:
//
//	AlbZoneMappingLoadBalancerAddressArgs{...}
type AlbZoneMappingLoadBalancerAddressInput interface {
	pulumi.Input

	ToAlbZoneMappingLoadBalancerAddressOutput() AlbZoneMappingLoadBalancerAddressOutput
	ToAlbZoneMappingLoadBalancerAddressOutputWithContext(context.Context) AlbZoneMappingLoadBalancerAddressOutput
}

type AlbZoneMappingLoadBalancerAddressArgs struct {
	// The Eip address of the Alb in this availability zone.
	EipAddress pulumi.StringPtrInput `pulumi:"eipAddress"`
	// The Eip id of alb instance in this availability zone.
	EipId pulumi.StringPtrInput `pulumi:"eipId"`
	// The Eni address of the Alb in this availability zone.
	EniAddress pulumi.StringPtrInput `pulumi:"eniAddress"`
	// The Eni id of the Alb in this availability zone.
	EniId pulumi.StringPtrInput `pulumi:"eniId"`
	// The Eni Ipv6 address of the Alb in this availability zone.
	EniIpv6Address pulumi.StringPtrInput `pulumi:"eniIpv6Address"`
	// The Ipv6 Eip id of alb instance in this availability zone.
	Ipv6EipId pulumi.StringPtrInput `pulumi:"ipv6EipId"`
}

func (AlbZoneMappingLoadBalancerAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (i AlbZoneMappingLoadBalancerAddressArgs) ToAlbZoneMappingLoadBalancerAddressOutput() AlbZoneMappingLoadBalancerAddressOutput {
	return i.ToAlbZoneMappingLoadBalancerAddressOutputWithContext(context.Background())
}

func (i AlbZoneMappingLoadBalancerAddressArgs) ToAlbZoneMappingLoadBalancerAddressOutputWithContext(ctx context.Context) AlbZoneMappingLoadBalancerAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbZoneMappingLoadBalancerAddressOutput)
}

// AlbZoneMappingLoadBalancerAddressArrayInput is an input type that accepts AlbZoneMappingLoadBalancerAddressArray and AlbZoneMappingLoadBalancerAddressArrayOutput values.
// You can construct a concrete instance of `AlbZoneMappingLoadBalancerAddressArrayInput` via:
//
//	AlbZoneMappingLoadBalancerAddressArray{ AlbZoneMappingLoadBalancerAddressArgs{...} }
type AlbZoneMappingLoadBalancerAddressArrayInput interface {
	pulumi.Input

	ToAlbZoneMappingLoadBalancerAddressArrayOutput() AlbZoneMappingLoadBalancerAddressArrayOutput
	ToAlbZoneMappingLoadBalancerAddressArrayOutputWithContext(context.Context) AlbZoneMappingLoadBalancerAddressArrayOutput
}

type AlbZoneMappingLoadBalancerAddressArray []AlbZoneMappingLoadBalancerAddressInput

func (AlbZoneMappingLoadBalancerAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (i AlbZoneMappingLoadBalancerAddressArray) ToAlbZoneMappingLoadBalancerAddressArrayOutput() AlbZoneMappingLoadBalancerAddressArrayOutput {
	return i.ToAlbZoneMappingLoadBalancerAddressArrayOutputWithContext(context.Background())
}

func (i AlbZoneMappingLoadBalancerAddressArray) ToAlbZoneMappingLoadBalancerAddressArrayOutputWithContext(ctx context.Context) AlbZoneMappingLoadBalancerAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbZoneMappingLoadBalancerAddressArrayOutput)
}

type AlbZoneMappingLoadBalancerAddressOutput struct{ *pulumi.OutputState }

func (AlbZoneMappingLoadBalancerAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (o AlbZoneMappingLoadBalancerAddressOutput) ToAlbZoneMappingLoadBalancerAddressOutput() AlbZoneMappingLoadBalancerAddressOutput {
	return o
}

func (o AlbZoneMappingLoadBalancerAddressOutput) ToAlbZoneMappingLoadBalancerAddressOutputWithContext(ctx context.Context) AlbZoneMappingLoadBalancerAddressOutput {
	return o
}

// The Eip address of the Alb in this availability zone.
func (o AlbZoneMappingLoadBalancerAddressOutput) EipAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlbZoneMappingLoadBalancerAddress) *string { return v.EipAddress }).(pulumi.StringPtrOutput)
}

// The Eip id of alb instance in this availability zone.
func (o AlbZoneMappingLoadBalancerAddressOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlbZoneMappingLoadBalancerAddress) *string { return v.EipId }).(pulumi.StringPtrOutput)
}

// The Eni address of the Alb in this availability zone.
func (o AlbZoneMappingLoadBalancerAddressOutput) EniAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlbZoneMappingLoadBalancerAddress) *string { return v.EniAddress }).(pulumi.StringPtrOutput)
}

// The Eni id of the Alb in this availability zone.
func (o AlbZoneMappingLoadBalancerAddressOutput) EniId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlbZoneMappingLoadBalancerAddress) *string { return v.EniId }).(pulumi.StringPtrOutput)
}

// The Eni Ipv6 address of the Alb in this availability zone.
func (o AlbZoneMappingLoadBalancerAddressOutput) EniIpv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlbZoneMappingLoadBalancerAddress) *string { return v.EniIpv6Address }).(pulumi.StringPtrOutput)
}

// The Ipv6 Eip id of alb instance in this availability zone.
func (o AlbZoneMappingLoadBalancerAddressOutput) Ipv6EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlbZoneMappingLoadBalancerAddress) *string { return v.Ipv6EipId }).(pulumi.StringPtrOutput)
}

type AlbZoneMappingLoadBalancerAddressArrayOutput struct{ *pulumi.OutputState }

func (AlbZoneMappingLoadBalancerAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (o AlbZoneMappingLoadBalancerAddressArrayOutput) ToAlbZoneMappingLoadBalancerAddressArrayOutput() AlbZoneMappingLoadBalancerAddressArrayOutput {
	return o
}

func (o AlbZoneMappingLoadBalancerAddressArrayOutput) ToAlbZoneMappingLoadBalancerAddressArrayOutputWithContext(ctx context.Context) AlbZoneMappingLoadBalancerAddressArrayOutput {
	return o
}

func (o AlbZoneMappingLoadBalancerAddressArrayOutput) Index(i pulumi.IntInput) AlbZoneMappingLoadBalancerAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbZoneMappingLoadBalancerAddress {
		return vs[0].([]AlbZoneMappingLoadBalancerAddress)[vs[1].(int)]
	}).(AlbZoneMappingLoadBalancerAddressOutput)
}

type AlbsAlb struct {
	// The access log information of the Alb.
	AccessLogs []AlbsAlbAccessLog `pulumi:"accessLogs"`
	// The address ip version of the Alb, valid value: `IPv4`, `DualStack`.
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// The business status of the Alb, valid value:`Normal`, `FinancialLocked`.
	BusinessStatus string `pulumi:"businessStatus"`
	// The create time of the Alb.
	CreateTime string `pulumi:"createTime"`
	// The deletion protection function of the Alb instance is turned on or off.
	DeleteProtection string `pulumi:"deleteProtection"`
	// The expected deleted time of the Alb. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
	DeletedTime string `pulumi:"deletedTime"`
	// The description of the Alb.
	Description string `pulumi:"description"`
	// The DNS name.
	DnsName string `pulumi:"dnsName"`
	// The health log information of the Alb.
	HealthLogs []AlbsAlbHealthLog `pulumi:"healthLogs"`
	// The ID of the Alb.
	Id string `pulumi:"id"`
	// The listener information of the Alb.
	Listeners []AlbsAlbListener `pulumi:"listeners"`
	// The billing type of the Alb.
	LoadBalancerBillingType int `pulumi:"loadBalancerBillingType"`
	// The ID of the Alb.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The name of the Alb.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// The local addresses of the Alb.
	LocalAddresses []string `pulumi:"localAddresses"`
	// The reason why Alb is locked. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
	LockReason string `pulumi:"lockReason"`
	// The overdue time of the Alb. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
	OverdueTime string `pulumi:"overdueTime"`
	// The project name of the Alb.
	ProjectName string `pulumi:"projectName"`
	// The status of the Alb.
	Status string `pulumi:"status"`
	// Tags.
	Tags []AlbsAlbTag `pulumi:"tags"`
	// The tls access log information of the Alb.
	TlsAccessLogs []AlbsAlbTlsAccessLog `pulumi:"tlsAccessLogs"`
	// The type of the Alb, valid value: `public`, `private`.
	Type string `pulumi:"type"`
	// The update time of the Alb.
	UpdateTime string `pulumi:"updateTime"`
	// The vpc id which Alb belongs to.
	VpcId string `pulumi:"vpcId"`
	// Configuration information of the Alb instance in different Availability Zones.
	ZoneMappings []AlbsAlbZoneMapping `pulumi:"zoneMappings"`
}

// AlbsAlbInput is an input type that accepts AlbsAlbArgs and AlbsAlbOutput values.
// You can construct a concrete instance of `AlbsAlbInput` via:
//
//	AlbsAlbArgs{...}
type AlbsAlbInput interface {
	pulumi.Input

	ToAlbsAlbOutput() AlbsAlbOutput
	ToAlbsAlbOutputWithContext(context.Context) AlbsAlbOutput
}

type AlbsAlbArgs struct {
	// The access log information of the Alb.
	AccessLogs AlbsAlbAccessLogArrayInput `pulumi:"accessLogs"`
	// The address ip version of the Alb, valid value: `IPv4`, `DualStack`.
	AddressIpVersion pulumi.StringInput `pulumi:"addressIpVersion"`
	// The business status of the Alb, valid value:`Normal`, `FinancialLocked`.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The create time of the Alb.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The deletion protection function of the Alb instance is turned on or off.
	DeleteProtection pulumi.StringInput `pulumi:"deleteProtection"`
	// The expected deleted time of the Alb. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// The description of the Alb.
	Description pulumi.StringInput `pulumi:"description"`
	// The DNS name.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// The health log information of the Alb.
	HealthLogs AlbsAlbHealthLogArrayInput `pulumi:"healthLogs"`
	// The ID of the Alb.
	Id pulumi.StringInput `pulumi:"id"`
	// The listener information of the Alb.
	Listeners AlbsAlbListenerArrayInput `pulumi:"listeners"`
	// The billing type of the Alb.
	LoadBalancerBillingType pulumi.IntInput `pulumi:"loadBalancerBillingType"`
	// The ID of the Alb.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// The name of the Alb.
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	// The local addresses of the Alb.
	LocalAddresses pulumi.StringArrayInput `pulumi:"localAddresses"`
	// The reason why Alb is locked. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The overdue time of the Alb. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// The project name of the Alb.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of the Alb.
	Status pulumi.StringInput `pulumi:"status"`
	// Tags.
	Tags AlbsAlbTagArrayInput `pulumi:"tags"`
	// The tls access log information of the Alb.
	TlsAccessLogs AlbsAlbTlsAccessLogArrayInput `pulumi:"tlsAccessLogs"`
	// The type of the Alb, valid value: `public`, `private`.
	Type pulumi.StringInput `pulumi:"type"`
	// The update time of the Alb.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The vpc id which Alb belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// Configuration information of the Alb instance in different Availability Zones.
	ZoneMappings AlbsAlbZoneMappingArrayInput `pulumi:"zoneMappings"`
}

func (AlbsAlbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlb)(nil)).Elem()
}

func (i AlbsAlbArgs) ToAlbsAlbOutput() AlbsAlbOutput {
	return i.ToAlbsAlbOutputWithContext(context.Background())
}

func (i AlbsAlbArgs) ToAlbsAlbOutputWithContext(ctx context.Context) AlbsAlbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbOutput)
}

// AlbsAlbArrayInput is an input type that accepts AlbsAlbArray and AlbsAlbArrayOutput values.
// You can construct a concrete instance of `AlbsAlbArrayInput` via:
//
//	AlbsAlbArray{ AlbsAlbArgs{...} }
type AlbsAlbArrayInput interface {
	pulumi.Input

	ToAlbsAlbArrayOutput() AlbsAlbArrayOutput
	ToAlbsAlbArrayOutputWithContext(context.Context) AlbsAlbArrayOutput
}

type AlbsAlbArray []AlbsAlbInput

func (AlbsAlbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlb)(nil)).Elem()
}

func (i AlbsAlbArray) ToAlbsAlbArrayOutput() AlbsAlbArrayOutput {
	return i.ToAlbsAlbArrayOutputWithContext(context.Background())
}

func (i AlbsAlbArray) ToAlbsAlbArrayOutputWithContext(ctx context.Context) AlbsAlbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbArrayOutput)
}

type AlbsAlbOutput struct{ *pulumi.OutputState }

func (AlbsAlbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlb)(nil)).Elem()
}

func (o AlbsAlbOutput) ToAlbsAlbOutput() AlbsAlbOutput {
	return o
}

func (o AlbsAlbOutput) ToAlbsAlbOutputWithContext(ctx context.Context) AlbsAlbOutput {
	return o
}

// The access log information of the Alb.
func (o AlbsAlbOutput) AccessLogs() AlbsAlbAccessLogArrayOutput {
	return o.ApplyT(func(v AlbsAlb) []AlbsAlbAccessLog { return v.AccessLogs }).(AlbsAlbAccessLogArrayOutput)
}

// The address ip version of the Alb, valid value: `IPv4`, `DualStack`.
func (o AlbsAlbOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// The business status of the Alb, valid value:`Normal`, `FinancialLocked`.
func (o AlbsAlbOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The create time of the Alb.
func (o AlbsAlbOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The deletion protection function of the Alb instance is turned on or off.
func (o AlbsAlbOutput) DeleteProtection() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.DeleteProtection }).(pulumi.StringOutput)
}

// The expected deleted time of the Alb. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
func (o AlbsAlbOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// The description of the Alb.
func (o AlbsAlbOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.Description }).(pulumi.StringOutput)
}

// The DNS name.
func (o AlbsAlbOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.DnsName }).(pulumi.StringOutput)
}

// The health log information of the Alb.
func (o AlbsAlbOutput) HealthLogs() AlbsAlbHealthLogArrayOutput {
	return o.ApplyT(func(v AlbsAlb) []AlbsAlbHealthLog { return v.HealthLogs }).(AlbsAlbHealthLogArrayOutput)
}

// The ID of the Alb.
func (o AlbsAlbOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.Id }).(pulumi.StringOutput)
}

// The listener information of the Alb.
func (o AlbsAlbOutput) Listeners() AlbsAlbListenerArrayOutput {
	return o.ApplyT(func(v AlbsAlb) []AlbsAlbListener { return v.Listeners }).(AlbsAlbListenerArrayOutput)
}

// The billing type of the Alb.
func (o AlbsAlbOutput) LoadBalancerBillingType() pulumi.IntOutput {
	return o.ApplyT(func(v AlbsAlb) int { return v.LoadBalancerBillingType }).(pulumi.IntOutput)
}

// The ID of the Alb.
func (o AlbsAlbOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// The name of the Alb.
func (o AlbsAlbOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// The local addresses of the Alb.
func (o AlbsAlbOutput) LocalAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlbsAlb) []string { return v.LocalAddresses }).(pulumi.StringArrayOutput)
}

// The reason why Alb is locked. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
func (o AlbsAlbOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.LockReason }).(pulumi.StringOutput)
}

// The overdue time of the Alb. This parameter has a query value only when the status of the Alb instance is `FinancialLocked`.
func (o AlbsAlbOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// The project name of the Alb.
func (o AlbsAlbOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of the Alb.
func (o AlbsAlbOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.Status }).(pulumi.StringOutput)
}

// Tags.
func (o AlbsAlbOutput) Tags() AlbsAlbTagArrayOutput {
	return o.ApplyT(func(v AlbsAlb) []AlbsAlbTag { return v.Tags }).(AlbsAlbTagArrayOutput)
}

// The tls access log information of the Alb.
func (o AlbsAlbOutput) TlsAccessLogs() AlbsAlbTlsAccessLogArrayOutput {
	return o.ApplyT(func(v AlbsAlb) []AlbsAlbTlsAccessLog { return v.TlsAccessLogs }).(AlbsAlbTlsAccessLogArrayOutput)
}

// The type of the Alb, valid value: `public`, `private`.
func (o AlbsAlbOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.Type }).(pulumi.StringOutput)
}

// The update time of the Alb.
func (o AlbsAlbOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The vpc id which Alb belongs to.
func (o AlbsAlbOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlb) string { return v.VpcId }).(pulumi.StringOutput)
}

// Configuration information of the Alb instance in different Availability Zones.
func (o AlbsAlbOutput) ZoneMappings() AlbsAlbZoneMappingArrayOutput {
	return o.ApplyT(func(v AlbsAlb) []AlbsAlbZoneMapping { return v.ZoneMappings }).(AlbsAlbZoneMappingArrayOutput)
}

type AlbsAlbArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlb)(nil)).Elem()
}

func (o AlbsAlbArrayOutput) ToAlbsAlbArrayOutput() AlbsAlbArrayOutput {
	return o
}

func (o AlbsAlbArrayOutput) ToAlbsAlbArrayOutputWithContext(ctx context.Context) AlbsAlbArrayOutput {
	return o
}

func (o AlbsAlbArrayOutput) Index(i pulumi.IntInput) AlbsAlbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlb {
		return vs[0].([]AlbsAlb)[vs[1].(int)]
	}).(AlbsAlbOutput)
}

type AlbsAlbAccessLog struct {
	// The bucket name where the logs are stored.
	BucketName string `pulumi:"bucketName"`
	// Whether the tls access log function is enabled.
	Enabled bool `pulumi:"enabled"`
}

// AlbsAlbAccessLogInput is an input type that accepts AlbsAlbAccessLogArgs and AlbsAlbAccessLogOutput values.
// You can construct a concrete instance of `AlbsAlbAccessLogInput` via:
//
//	AlbsAlbAccessLogArgs{...}
type AlbsAlbAccessLogInput interface {
	pulumi.Input

	ToAlbsAlbAccessLogOutput() AlbsAlbAccessLogOutput
	ToAlbsAlbAccessLogOutputWithContext(context.Context) AlbsAlbAccessLogOutput
}

type AlbsAlbAccessLogArgs struct {
	// The bucket name where the logs are stored.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Whether the tls access log function is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (AlbsAlbAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbAccessLog)(nil)).Elem()
}

func (i AlbsAlbAccessLogArgs) ToAlbsAlbAccessLogOutput() AlbsAlbAccessLogOutput {
	return i.ToAlbsAlbAccessLogOutputWithContext(context.Background())
}

func (i AlbsAlbAccessLogArgs) ToAlbsAlbAccessLogOutputWithContext(ctx context.Context) AlbsAlbAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbAccessLogOutput)
}

// AlbsAlbAccessLogArrayInput is an input type that accepts AlbsAlbAccessLogArray and AlbsAlbAccessLogArrayOutput values.
// You can construct a concrete instance of `AlbsAlbAccessLogArrayInput` via:
//
//	AlbsAlbAccessLogArray{ AlbsAlbAccessLogArgs{...} }
type AlbsAlbAccessLogArrayInput interface {
	pulumi.Input

	ToAlbsAlbAccessLogArrayOutput() AlbsAlbAccessLogArrayOutput
	ToAlbsAlbAccessLogArrayOutputWithContext(context.Context) AlbsAlbAccessLogArrayOutput
}

type AlbsAlbAccessLogArray []AlbsAlbAccessLogInput

func (AlbsAlbAccessLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbAccessLog)(nil)).Elem()
}

func (i AlbsAlbAccessLogArray) ToAlbsAlbAccessLogArrayOutput() AlbsAlbAccessLogArrayOutput {
	return i.ToAlbsAlbAccessLogArrayOutputWithContext(context.Background())
}

func (i AlbsAlbAccessLogArray) ToAlbsAlbAccessLogArrayOutputWithContext(ctx context.Context) AlbsAlbAccessLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbAccessLogArrayOutput)
}

type AlbsAlbAccessLogOutput struct{ *pulumi.OutputState }

func (AlbsAlbAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbAccessLog)(nil)).Elem()
}

func (o AlbsAlbAccessLogOutput) ToAlbsAlbAccessLogOutput() AlbsAlbAccessLogOutput {
	return o
}

func (o AlbsAlbAccessLogOutput) ToAlbsAlbAccessLogOutputWithContext(ctx context.Context) AlbsAlbAccessLogOutput {
	return o
}

// The bucket name where the logs are stored.
func (o AlbsAlbAccessLogOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbAccessLog) string { return v.BucketName }).(pulumi.StringOutput)
}

// Whether the tls access log function is enabled.
func (o AlbsAlbAccessLogOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AlbsAlbAccessLog) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type AlbsAlbAccessLogArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbAccessLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbAccessLog)(nil)).Elem()
}

func (o AlbsAlbAccessLogArrayOutput) ToAlbsAlbAccessLogArrayOutput() AlbsAlbAccessLogArrayOutput {
	return o
}

func (o AlbsAlbAccessLogArrayOutput) ToAlbsAlbAccessLogArrayOutputWithContext(ctx context.Context) AlbsAlbAccessLogArrayOutput {
	return o
}

func (o AlbsAlbAccessLogArrayOutput) Index(i pulumi.IntInput) AlbsAlbAccessLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbAccessLog {
		return vs[0].([]AlbsAlbAccessLog)[vs[1].(int)]
	}).(AlbsAlbAccessLogOutput)
}

type AlbsAlbHealthLog struct {
	// Whether the tls access log function is enabled.
	Enabled bool `pulumi:"enabled"`
	// The TLS project id bound to the access log.
	ProjectId string `pulumi:"projectId"`
	// The TLS topic id bound to the access log.
	TopicId string `pulumi:"topicId"`
}

// AlbsAlbHealthLogInput is an input type that accepts AlbsAlbHealthLogArgs and AlbsAlbHealthLogOutput values.
// You can construct a concrete instance of `AlbsAlbHealthLogInput` via:
//
//	AlbsAlbHealthLogArgs{...}
type AlbsAlbHealthLogInput interface {
	pulumi.Input

	ToAlbsAlbHealthLogOutput() AlbsAlbHealthLogOutput
	ToAlbsAlbHealthLogOutputWithContext(context.Context) AlbsAlbHealthLogOutput
}

type AlbsAlbHealthLogArgs struct {
	// Whether the tls access log function is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The TLS project id bound to the access log.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The TLS topic id bound to the access log.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (AlbsAlbHealthLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbHealthLog)(nil)).Elem()
}

func (i AlbsAlbHealthLogArgs) ToAlbsAlbHealthLogOutput() AlbsAlbHealthLogOutput {
	return i.ToAlbsAlbHealthLogOutputWithContext(context.Background())
}

func (i AlbsAlbHealthLogArgs) ToAlbsAlbHealthLogOutputWithContext(ctx context.Context) AlbsAlbHealthLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbHealthLogOutput)
}

// AlbsAlbHealthLogArrayInput is an input type that accepts AlbsAlbHealthLogArray and AlbsAlbHealthLogArrayOutput values.
// You can construct a concrete instance of `AlbsAlbHealthLogArrayInput` via:
//
//	AlbsAlbHealthLogArray{ AlbsAlbHealthLogArgs{...} }
type AlbsAlbHealthLogArrayInput interface {
	pulumi.Input

	ToAlbsAlbHealthLogArrayOutput() AlbsAlbHealthLogArrayOutput
	ToAlbsAlbHealthLogArrayOutputWithContext(context.Context) AlbsAlbHealthLogArrayOutput
}

type AlbsAlbHealthLogArray []AlbsAlbHealthLogInput

func (AlbsAlbHealthLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbHealthLog)(nil)).Elem()
}

func (i AlbsAlbHealthLogArray) ToAlbsAlbHealthLogArrayOutput() AlbsAlbHealthLogArrayOutput {
	return i.ToAlbsAlbHealthLogArrayOutputWithContext(context.Background())
}

func (i AlbsAlbHealthLogArray) ToAlbsAlbHealthLogArrayOutputWithContext(ctx context.Context) AlbsAlbHealthLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbHealthLogArrayOutput)
}

type AlbsAlbHealthLogOutput struct{ *pulumi.OutputState }

func (AlbsAlbHealthLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbHealthLog)(nil)).Elem()
}

func (o AlbsAlbHealthLogOutput) ToAlbsAlbHealthLogOutput() AlbsAlbHealthLogOutput {
	return o
}

func (o AlbsAlbHealthLogOutput) ToAlbsAlbHealthLogOutputWithContext(ctx context.Context) AlbsAlbHealthLogOutput {
	return o
}

// Whether the tls access log function is enabled.
func (o AlbsAlbHealthLogOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AlbsAlbHealthLog) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The TLS project id bound to the access log.
func (o AlbsAlbHealthLogOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbHealthLog) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The TLS topic id bound to the access log.
func (o AlbsAlbHealthLogOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbHealthLog) string { return v.TopicId }).(pulumi.StringOutput)
}

type AlbsAlbHealthLogArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbHealthLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbHealthLog)(nil)).Elem()
}

func (o AlbsAlbHealthLogArrayOutput) ToAlbsAlbHealthLogArrayOutput() AlbsAlbHealthLogArrayOutput {
	return o
}

func (o AlbsAlbHealthLogArrayOutput) ToAlbsAlbHealthLogArrayOutputWithContext(ctx context.Context) AlbsAlbHealthLogArrayOutput {
	return o
}

func (o AlbsAlbHealthLogArrayOutput) Index(i pulumi.IntInput) AlbsAlbHealthLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbHealthLog {
		return vs[0].([]AlbsAlbHealthLog)[vs[1].(int)]
	}).(AlbsAlbHealthLogOutput)
}

type AlbsAlbListener struct {
	// The listener id of the Alb.
	ListenerId string `pulumi:"listenerId"`
	// The listener name of the Alb.
	ListenerName string `pulumi:"listenerName"`
}

// AlbsAlbListenerInput is an input type that accepts AlbsAlbListenerArgs and AlbsAlbListenerOutput values.
// You can construct a concrete instance of `AlbsAlbListenerInput` via:
//
//	AlbsAlbListenerArgs{...}
type AlbsAlbListenerInput interface {
	pulumi.Input

	ToAlbsAlbListenerOutput() AlbsAlbListenerOutput
	ToAlbsAlbListenerOutputWithContext(context.Context) AlbsAlbListenerOutput
}

type AlbsAlbListenerArgs struct {
	// The listener id of the Alb.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The listener name of the Alb.
	ListenerName pulumi.StringInput `pulumi:"listenerName"`
}

func (AlbsAlbListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbListener)(nil)).Elem()
}

func (i AlbsAlbListenerArgs) ToAlbsAlbListenerOutput() AlbsAlbListenerOutput {
	return i.ToAlbsAlbListenerOutputWithContext(context.Background())
}

func (i AlbsAlbListenerArgs) ToAlbsAlbListenerOutputWithContext(ctx context.Context) AlbsAlbListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbListenerOutput)
}

// AlbsAlbListenerArrayInput is an input type that accepts AlbsAlbListenerArray and AlbsAlbListenerArrayOutput values.
// You can construct a concrete instance of `AlbsAlbListenerArrayInput` via:
//
//	AlbsAlbListenerArray{ AlbsAlbListenerArgs{...} }
type AlbsAlbListenerArrayInput interface {
	pulumi.Input

	ToAlbsAlbListenerArrayOutput() AlbsAlbListenerArrayOutput
	ToAlbsAlbListenerArrayOutputWithContext(context.Context) AlbsAlbListenerArrayOutput
}

type AlbsAlbListenerArray []AlbsAlbListenerInput

func (AlbsAlbListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbListener)(nil)).Elem()
}

func (i AlbsAlbListenerArray) ToAlbsAlbListenerArrayOutput() AlbsAlbListenerArrayOutput {
	return i.ToAlbsAlbListenerArrayOutputWithContext(context.Background())
}

func (i AlbsAlbListenerArray) ToAlbsAlbListenerArrayOutputWithContext(ctx context.Context) AlbsAlbListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbListenerArrayOutput)
}

type AlbsAlbListenerOutput struct{ *pulumi.OutputState }

func (AlbsAlbListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbListener)(nil)).Elem()
}

func (o AlbsAlbListenerOutput) ToAlbsAlbListenerOutput() AlbsAlbListenerOutput {
	return o
}

func (o AlbsAlbListenerOutput) ToAlbsAlbListenerOutputWithContext(ctx context.Context) AlbsAlbListenerOutput {
	return o
}

// The listener id of the Alb.
func (o AlbsAlbListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The listener name of the Alb.
func (o AlbsAlbListenerOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbListener) string { return v.ListenerName }).(pulumi.StringOutput)
}

type AlbsAlbListenerArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbListener)(nil)).Elem()
}

func (o AlbsAlbListenerArrayOutput) ToAlbsAlbListenerArrayOutput() AlbsAlbListenerArrayOutput {
	return o
}

func (o AlbsAlbListenerArrayOutput) ToAlbsAlbListenerArrayOutputWithContext(ctx context.Context) AlbsAlbListenerArrayOutput {
	return o
}

func (o AlbsAlbListenerArrayOutput) Index(i pulumi.IntInput) AlbsAlbListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbListener {
		return vs[0].([]AlbsAlbListener)[vs[1].(int)]
	}).(AlbsAlbListenerOutput)
}

type AlbsAlbTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// AlbsAlbTagInput is an input type that accepts AlbsAlbTagArgs and AlbsAlbTagOutput values.
// You can construct a concrete instance of `AlbsAlbTagInput` via:
//
//	AlbsAlbTagArgs{...}
type AlbsAlbTagInput interface {
	pulumi.Input

	ToAlbsAlbTagOutput() AlbsAlbTagOutput
	ToAlbsAlbTagOutputWithContext(context.Context) AlbsAlbTagOutput
}

type AlbsAlbTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlbsAlbTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbTag)(nil)).Elem()
}

func (i AlbsAlbTagArgs) ToAlbsAlbTagOutput() AlbsAlbTagOutput {
	return i.ToAlbsAlbTagOutputWithContext(context.Background())
}

func (i AlbsAlbTagArgs) ToAlbsAlbTagOutputWithContext(ctx context.Context) AlbsAlbTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbTagOutput)
}

// AlbsAlbTagArrayInput is an input type that accepts AlbsAlbTagArray and AlbsAlbTagArrayOutput values.
// You can construct a concrete instance of `AlbsAlbTagArrayInput` via:
//
//	AlbsAlbTagArray{ AlbsAlbTagArgs{...} }
type AlbsAlbTagArrayInput interface {
	pulumi.Input

	ToAlbsAlbTagArrayOutput() AlbsAlbTagArrayOutput
	ToAlbsAlbTagArrayOutputWithContext(context.Context) AlbsAlbTagArrayOutput
}

type AlbsAlbTagArray []AlbsAlbTagInput

func (AlbsAlbTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbTag)(nil)).Elem()
}

func (i AlbsAlbTagArray) ToAlbsAlbTagArrayOutput() AlbsAlbTagArrayOutput {
	return i.ToAlbsAlbTagArrayOutputWithContext(context.Background())
}

func (i AlbsAlbTagArray) ToAlbsAlbTagArrayOutputWithContext(ctx context.Context) AlbsAlbTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbTagArrayOutput)
}

type AlbsAlbTagOutput struct{ *pulumi.OutputState }

func (AlbsAlbTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbTag)(nil)).Elem()
}

func (o AlbsAlbTagOutput) ToAlbsAlbTagOutput() AlbsAlbTagOutput {
	return o
}

func (o AlbsAlbTagOutput) ToAlbsAlbTagOutputWithContext(ctx context.Context) AlbsAlbTagOutput {
	return o
}

// The Key of Tags.
func (o AlbsAlbTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o AlbsAlbTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbTag) string { return v.Value }).(pulumi.StringOutput)
}

type AlbsAlbTagArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbTag)(nil)).Elem()
}

func (o AlbsAlbTagArrayOutput) ToAlbsAlbTagArrayOutput() AlbsAlbTagArrayOutput {
	return o
}

func (o AlbsAlbTagArrayOutput) ToAlbsAlbTagArrayOutputWithContext(ctx context.Context) AlbsAlbTagArrayOutput {
	return o
}

func (o AlbsAlbTagArrayOutput) Index(i pulumi.IntInput) AlbsAlbTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbTag {
		return vs[0].([]AlbsAlbTag)[vs[1].(int)]
	}).(AlbsAlbTagOutput)
}

type AlbsAlbTlsAccessLog struct {
	// Whether the tls access log function is enabled.
	Enabled bool `pulumi:"enabled"`
	// The TLS project id bound to the access log.
	ProjectId string `pulumi:"projectId"`
	// The TLS topic id bound to the access log.
	TopicId string `pulumi:"topicId"`
}

// AlbsAlbTlsAccessLogInput is an input type that accepts AlbsAlbTlsAccessLogArgs and AlbsAlbTlsAccessLogOutput values.
// You can construct a concrete instance of `AlbsAlbTlsAccessLogInput` via:
//
//	AlbsAlbTlsAccessLogArgs{...}
type AlbsAlbTlsAccessLogInput interface {
	pulumi.Input

	ToAlbsAlbTlsAccessLogOutput() AlbsAlbTlsAccessLogOutput
	ToAlbsAlbTlsAccessLogOutputWithContext(context.Context) AlbsAlbTlsAccessLogOutput
}

type AlbsAlbTlsAccessLogArgs struct {
	// Whether the tls access log function is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The TLS project id bound to the access log.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// The TLS topic id bound to the access log.
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (AlbsAlbTlsAccessLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbTlsAccessLog)(nil)).Elem()
}

func (i AlbsAlbTlsAccessLogArgs) ToAlbsAlbTlsAccessLogOutput() AlbsAlbTlsAccessLogOutput {
	return i.ToAlbsAlbTlsAccessLogOutputWithContext(context.Background())
}

func (i AlbsAlbTlsAccessLogArgs) ToAlbsAlbTlsAccessLogOutputWithContext(ctx context.Context) AlbsAlbTlsAccessLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbTlsAccessLogOutput)
}

// AlbsAlbTlsAccessLogArrayInput is an input type that accepts AlbsAlbTlsAccessLogArray and AlbsAlbTlsAccessLogArrayOutput values.
// You can construct a concrete instance of `AlbsAlbTlsAccessLogArrayInput` via:
//
//	AlbsAlbTlsAccessLogArray{ AlbsAlbTlsAccessLogArgs{...} }
type AlbsAlbTlsAccessLogArrayInput interface {
	pulumi.Input

	ToAlbsAlbTlsAccessLogArrayOutput() AlbsAlbTlsAccessLogArrayOutput
	ToAlbsAlbTlsAccessLogArrayOutputWithContext(context.Context) AlbsAlbTlsAccessLogArrayOutput
}

type AlbsAlbTlsAccessLogArray []AlbsAlbTlsAccessLogInput

func (AlbsAlbTlsAccessLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbTlsAccessLog)(nil)).Elem()
}

func (i AlbsAlbTlsAccessLogArray) ToAlbsAlbTlsAccessLogArrayOutput() AlbsAlbTlsAccessLogArrayOutput {
	return i.ToAlbsAlbTlsAccessLogArrayOutputWithContext(context.Background())
}

func (i AlbsAlbTlsAccessLogArray) ToAlbsAlbTlsAccessLogArrayOutputWithContext(ctx context.Context) AlbsAlbTlsAccessLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbTlsAccessLogArrayOutput)
}

type AlbsAlbTlsAccessLogOutput struct{ *pulumi.OutputState }

func (AlbsAlbTlsAccessLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbTlsAccessLog)(nil)).Elem()
}

func (o AlbsAlbTlsAccessLogOutput) ToAlbsAlbTlsAccessLogOutput() AlbsAlbTlsAccessLogOutput {
	return o
}

func (o AlbsAlbTlsAccessLogOutput) ToAlbsAlbTlsAccessLogOutputWithContext(ctx context.Context) AlbsAlbTlsAccessLogOutput {
	return o
}

// Whether the tls access log function is enabled.
func (o AlbsAlbTlsAccessLogOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AlbsAlbTlsAccessLog) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The TLS project id bound to the access log.
func (o AlbsAlbTlsAccessLogOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbTlsAccessLog) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The TLS topic id bound to the access log.
func (o AlbsAlbTlsAccessLogOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbTlsAccessLog) string { return v.TopicId }).(pulumi.StringOutput)
}

type AlbsAlbTlsAccessLogArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbTlsAccessLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbTlsAccessLog)(nil)).Elem()
}

func (o AlbsAlbTlsAccessLogArrayOutput) ToAlbsAlbTlsAccessLogArrayOutput() AlbsAlbTlsAccessLogArrayOutput {
	return o
}

func (o AlbsAlbTlsAccessLogArrayOutput) ToAlbsAlbTlsAccessLogArrayOutputWithContext(ctx context.Context) AlbsAlbTlsAccessLogArrayOutput {
	return o
}

func (o AlbsAlbTlsAccessLogArrayOutput) Index(i pulumi.IntInput) AlbsAlbTlsAccessLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbTlsAccessLog {
		return vs[0].([]AlbsAlbTlsAccessLog)[vs[1].(int)]
	}).(AlbsAlbTlsAccessLogOutput)
}

type AlbsAlbZoneMapping struct {
	// The IP address information of the Alb in this availability zone.
	LoadBalancerAddresses []AlbsAlbZoneMappingLoadBalancerAddress `pulumi:"loadBalancerAddresses"`
	// The subnet id of the Alb in this availability zone.
	SubnetId string `pulumi:"subnetId"`
	// The availability zone id of the Alb.
	ZoneId string `pulumi:"zoneId"`
}

// AlbsAlbZoneMappingInput is an input type that accepts AlbsAlbZoneMappingArgs and AlbsAlbZoneMappingOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingInput` via:
//
//	AlbsAlbZoneMappingArgs{...}
type AlbsAlbZoneMappingInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingOutput() AlbsAlbZoneMappingOutput
	ToAlbsAlbZoneMappingOutputWithContext(context.Context) AlbsAlbZoneMappingOutput
}

type AlbsAlbZoneMappingArgs struct {
	// The IP address information of the Alb in this availability zone.
	LoadBalancerAddresses AlbsAlbZoneMappingLoadBalancerAddressArrayInput `pulumi:"loadBalancerAddresses"`
	// The subnet id of the Alb in this availability zone.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// The availability zone id of the Alb.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (AlbsAlbZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMapping)(nil)).Elem()
}

func (i AlbsAlbZoneMappingArgs) ToAlbsAlbZoneMappingOutput() AlbsAlbZoneMappingOutput {
	return i.ToAlbsAlbZoneMappingOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingArgs) ToAlbsAlbZoneMappingOutputWithContext(ctx context.Context) AlbsAlbZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingOutput)
}

// AlbsAlbZoneMappingArrayInput is an input type that accepts AlbsAlbZoneMappingArray and AlbsAlbZoneMappingArrayOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingArrayInput` via:
//
//	AlbsAlbZoneMappingArray{ AlbsAlbZoneMappingArgs{...} }
type AlbsAlbZoneMappingArrayInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingArrayOutput() AlbsAlbZoneMappingArrayOutput
	ToAlbsAlbZoneMappingArrayOutputWithContext(context.Context) AlbsAlbZoneMappingArrayOutput
}

type AlbsAlbZoneMappingArray []AlbsAlbZoneMappingInput

func (AlbsAlbZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMapping)(nil)).Elem()
}

func (i AlbsAlbZoneMappingArray) ToAlbsAlbZoneMappingArrayOutput() AlbsAlbZoneMappingArrayOutput {
	return i.ToAlbsAlbZoneMappingArrayOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingArray) ToAlbsAlbZoneMappingArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingArrayOutput)
}

type AlbsAlbZoneMappingOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMapping)(nil)).Elem()
}

func (o AlbsAlbZoneMappingOutput) ToAlbsAlbZoneMappingOutput() AlbsAlbZoneMappingOutput {
	return o
}

func (o AlbsAlbZoneMappingOutput) ToAlbsAlbZoneMappingOutputWithContext(ctx context.Context) AlbsAlbZoneMappingOutput {
	return o
}

// The IP address information of the Alb in this availability zone.
func (o AlbsAlbZoneMappingOutput) LoadBalancerAddresses() AlbsAlbZoneMappingLoadBalancerAddressArrayOutput {
	return o.ApplyT(func(v AlbsAlbZoneMapping) []AlbsAlbZoneMappingLoadBalancerAddress { return v.LoadBalancerAddresses }).(AlbsAlbZoneMappingLoadBalancerAddressArrayOutput)
}

// The subnet id of the Alb in this availability zone.
func (o AlbsAlbZoneMappingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMapping) string { return v.SubnetId }).(pulumi.StringOutput)
}

// The availability zone id of the Alb.
func (o AlbsAlbZoneMappingOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMapping) string { return v.ZoneId }).(pulumi.StringOutput)
}

type AlbsAlbZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMapping)(nil)).Elem()
}

func (o AlbsAlbZoneMappingArrayOutput) ToAlbsAlbZoneMappingArrayOutput() AlbsAlbZoneMappingArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingArrayOutput) ToAlbsAlbZoneMappingArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingArrayOutput) Index(i pulumi.IntInput) AlbsAlbZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbZoneMapping {
		return vs[0].([]AlbsAlbZoneMapping)[vs[1].(int)]
	}).(AlbsAlbZoneMappingOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddress struct {
	// The Eip address of the Alb.
	EipAddress string `pulumi:"eipAddress"`
	// The Eip id of alb instance in this availability zone.
	EipId string `pulumi:"eipId"`
	// The Eip information of the Alb in this availability zone.
	Eips []AlbsAlbZoneMappingLoadBalancerAddressEip `pulumi:"eips"`
	// The private ip address of the Alb.
	EniAddress string `pulumi:"eniAddress"`
	// The Eni id of the Alb in this availability zone.
	EniId string `pulumi:"eniId"`
	// The Eni Ipv6 address of the Alb in this availability zone.
	EniIpv6Address string `pulumi:"eniIpv6Address"`
	// The Ipv6 Eip id of alb instance in this availability zone.
	Ipv6EipId string `pulumi:"ipv6EipId"`
	// The Ipv6 Eip information of the Alb in this availability zone.
	Ipv6Eips []AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip `pulumi:"ipv6Eips"`
}

// AlbsAlbZoneMappingLoadBalancerAddressInput is an input type that accepts AlbsAlbZoneMappingLoadBalancerAddressArgs and AlbsAlbZoneMappingLoadBalancerAddressOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingLoadBalancerAddressInput` via:
//
//	AlbsAlbZoneMappingLoadBalancerAddressArgs{...}
type AlbsAlbZoneMappingLoadBalancerAddressInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingLoadBalancerAddressOutput() AlbsAlbZoneMappingLoadBalancerAddressOutput
	ToAlbsAlbZoneMappingLoadBalancerAddressOutputWithContext(context.Context) AlbsAlbZoneMappingLoadBalancerAddressOutput
}

type AlbsAlbZoneMappingLoadBalancerAddressArgs struct {
	// The Eip address of the Alb.
	EipAddress pulumi.StringInput `pulumi:"eipAddress"`
	// The Eip id of alb instance in this availability zone.
	EipId pulumi.StringInput `pulumi:"eipId"`
	// The Eip information of the Alb in this availability zone.
	Eips AlbsAlbZoneMappingLoadBalancerAddressEipArrayInput `pulumi:"eips"`
	// The private ip address of the Alb.
	EniAddress pulumi.StringInput `pulumi:"eniAddress"`
	// The Eni id of the Alb in this availability zone.
	EniId pulumi.StringInput `pulumi:"eniId"`
	// The Eni Ipv6 address of the Alb in this availability zone.
	EniIpv6Address pulumi.StringInput `pulumi:"eniIpv6Address"`
	// The Ipv6 Eip id of alb instance in this availability zone.
	Ipv6EipId pulumi.StringInput `pulumi:"ipv6EipId"`
	// The Ipv6 Eip information of the Alb in this availability zone.
	Ipv6Eips AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayInput `pulumi:"ipv6Eips"`
}

func (AlbsAlbZoneMappingLoadBalancerAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (i AlbsAlbZoneMappingLoadBalancerAddressArgs) ToAlbsAlbZoneMappingLoadBalancerAddressOutput() AlbsAlbZoneMappingLoadBalancerAddressOutput {
	return i.ToAlbsAlbZoneMappingLoadBalancerAddressOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingLoadBalancerAddressArgs) ToAlbsAlbZoneMappingLoadBalancerAddressOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingLoadBalancerAddressOutput)
}

// AlbsAlbZoneMappingLoadBalancerAddressArrayInput is an input type that accepts AlbsAlbZoneMappingLoadBalancerAddressArray and AlbsAlbZoneMappingLoadBalancerAddressArrayOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingLoadBalancerAddressArrayInput` via:
//
//	AlbsAlbZoneMappingLoadBalancerAddressArray{ AlbsAlbZoneMappingLoadBalancerAddressArgs{...} }
type AlbsAlbZoneMappingLoadBalancerAddressArrayInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingLoadBalancerAddressArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressArrayOutput
	ToAlbsAlbZoneMappingLoadBalancerAddressArrayOutputWithContext(context.Context) AlbsAlbZoneMappingLoadBalancerAddressArrayOutput
}

type AlbsAlbZoneMappingLoadBalancerAddressArray []AlbsAlbZoneMappingLoadBalancerAddressInput

func (AlbsAlbZoneMappingLoadBalancerAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (i AlbsAlbZoneMappingLoadBalancerAddressArray) ToAlbsAlbZoneMappingLoadBalancerAddressArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressArrayOutput {
	return i.ToAlbsAlbZoneMappingLoadBalancerAddressArrayOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingLoadBalancerAddressArray) ToAlbsAlbZoneMappingLoadBalancerAddressArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingLoadBalancerAddressArrayOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingLoadBalancerAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) ToAlbsAlbZoneMappingLoadBalancerAddressOutput() AlbsAlbZoneMappingLoadBalancerAddressOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) ToAlbsAlbZoneMappingLoadBalancerAddressOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressOutput {
	return o
}

// The Eip address of the Alb.
func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddress) string { return v.EipAddress }).(pulumi.StringOutput)
}

// The Eip id of alb instance in this availability zone.
func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) EipId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddress) string { return v.EipId }).(pulumi.StringOutput)
}

// The Eip information of the Alb in this availability zone.
func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) Eips() AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddress) []AlbsAlbZoneMappingLoadBalancerAddressEip {
		return v.Eips
	}).(AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput)
}

// The private ip address of the Alb.
func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) EniAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddress) string { return v.EniAddress }).(pulumi.StringOutput)
}

// The Eni id of the Alb in this availability zone.
func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) EniId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddress) string { return v.EniId }).(pulumi.StringOutput)
}

// The Eni Ipv6 address of the Alb in this availability zone.
func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) EniIpv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddress) string { return v.EniIpv6Address }).(pulumi.StringOutput)
}

// The Ipv6 Eip id of alb instance in this availability zone.
func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) Ipv6EipId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddress) string { return v.Ipv6EipId }).(pulumi.StringOutput)
}

// The Ipv6 Eip information of the Alb in this availability zone.
func (o AlbsAlbZoneMappingLoadBalancerAddressOutput) Ipv6Eips() AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddress) []AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip {
		return v.Ipv6Eips
	}).(AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingLoadBalancerAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (o AlbsAlbZoneMappingLoadBalancerAddressArrayOutput) ToAlbsAlbZoneMappingLoadBalancerAddressArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressArrayOutput) ToAlbsAlbZoneMappingLoadBalancerAddressArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressArrayOutput) Index(i pulumi.IntInput) AlbsAlbZoneMappingLoadBalancerAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbZoneMappingLoadBalancerAddress {
		return vs[0].([]AlbsAlbZoneMappingLoadBalancerAddress)[vs[1].(int)]
	}).(AlbsAlbZoneMappingLoadBalancerAddressOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressEip struct {
	// The association mode of the Alb. This parameter has a query value only when the type of the Eip is `anycast`.
	AssociationMode string `pulumi:"associationMode"`
	// The peek bandwidth of the Ipv6 Eip assigned to Alb. Units: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The Eip address of the Alb.
	EipAddress string `pulumi:"eipAddress"`
	// The billing type of the Eip assigned to Alb. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
	EipBillingType string `pulumi:"eipBillingType"`
	// The Eip type of the Alb.
	EipType string `pulumi:"eipType"`
	// The ISP of the Ipv6 Eip assigned to Alb, the value can be `BGP`.
	Isp string `pulumi:"isp"`
	// The pop locations of the Alb. This parameter has a query value only when the type of the Eip is `anycast`.
	PopLocations []AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation `pulumi:"popLocations"`
	// The security protection types of the Alb.
	SecurityProtectionTypes []string `pulumi:"securityProtectionTypes"`
}

// AlbsAlbZoneMappingLoadBalancerAddressEipInput is an input type that accepts AlbsAlbZoneMappingLoadBalancerAddressEipArgs and AlbsAlbZoneMappingLoadBalancerAddressEipOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingLoadBalancerAddressEipInput` via:
//
//	AlbsAlbZoneMappingLoadBalancerAddressEipArgs{...}
type AlbsAlbZoneMappingLoadBalancerAddressEipInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingLoadBalancerAddressEipOutput() AlbsAlbZoneMappingLoadBalancerAddressEipOutput
	ToAlbsAlbZoneMappingLoadBalancerAddressEipOutputWithContext(context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipOutput
}

type AlbsAlbZoneMappingLoadBalancerAddressEipArgs struct {
	// The association mode of the Alb. This parameter has a query value only when the type of the Eip is `anycast`.
	AssociationMode pulumi.StringInput `pulumi:"associationMode"`
	// The peek bandwidth of the Ipv6 Eip assigned to Alb. Units: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The Eip address of the Alb.
	EipAddress pulumi.StringInput `pulumi:"eipAddress"`
	// The billing type of the Eip assigned to Alb. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
	EipBillingType pulumi.StringInput `pulumi:"eipBillingType"`
	// The Eip type of the Alb.
	EipType pulumi.StringInput `pulumi:"eipType"`
	// The ISP of the Ipv6 Eip assigned to Alb, the value can be `BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
	// The pop locations of the Alb. This parameter has a query value only when the type of the Eip is `anycast`.
	PopLocations AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayInput `pulumi:"popLocations"`
	// The security protection types of the Alb.
	SecurityProtectionTypes pulumi.StringArrayInput `pulumi:"securityProtectionTypes"`
}

func (AlbsAlbZoneMappingLoadBalancerAddressEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressEip)(nil)).Elem()
}

func (i AlbsAlbZoneMappingLoadBalancerAddressEipArgs) ToAlbsAlbZoneMappingLoadBalancerAddressEipOutput() AlbsAlbZoneMappingLoadBalancerAddressEipOutput {
	return i.ToAlbsAlbZoneMappingLoadBalancerAddressEipOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingLoadBalancerAddressEipArgs) ToAlbsAlbZoneMappingLoadBalancerAddressEipOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingLoadBalancerAddressEipOutput)
}

// AlbsAlbZoneMappingLoadBalancerAddressEipArrayInput is an input type that accepts AlbsAlbZoneMappingLoadBalancerAddressEipArray and AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingLoadBalancerAddressEipArrayInput` via:
//
//	AlbsAlbZoneMappingLoadBalancerAddressEipArray{ AlbsAlbZoneMappingLoadBalancerAddressEipArgs{...} }
type AlbsAlbZoneMappingLoadBalancerAddressEipArrayInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput
	ToAlbsAlbZoneMappingLoadBalancerAddressEipArrayOutputWithContext(context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput
}

type AlbsAlbZoneMappingLoadBalancerAddressEipArray []AlbsAlbZoneMappingLoadBalancerAddressEipInput

func (AlbsAlbZoneMappingLoadBalancerAddressEipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMappingLoadBalancerAddressEip)(nil)).Elem()
}

func (i AlbsAlbZoneMappingLoadBalancerAddressEipArray) ToAlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput {
	return i.ToAlbsAlbZoneMappingLoadBalancerAddressEipArrayOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingLoadBalancerAddressEipArray) ToAlbsAlbZoneMappingLoadBalancerAddressEipArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressEipOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingLoadBalancerAddressEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressEip)(nil)).Elem()
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) ToAlbsAlbZoneMappingLoadBalancerAddressEipOutput() AlbsAlbZoneMappingLoadBalancerAddressEipOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) ToAlbsAlbZoneMappingLoadBalancerAddressEipOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipOutput {
	return o
}

// The association mode of the Alb. This parameter has a query value only when the type of the Eip is `anycast`.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) AssociationMode() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEip) string { return v.AssociationMode }).(pulumi.StringOutput)
}

// The peek bandwidth of the Ipv6 Eip assigned to Alb. Units: Mbps.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEip) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The Eip address of the Alb.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEip) string { return v.EipAddress }).(pulumi.StringOutput)
}

// The billing type of the Eip assigned to Alb. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) EipBillingType() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEip) string { return v.EipBillingType }).(pulumi.StringOutput)
}

// The Eip type of the Alb.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) EipType() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEip) string { return v.EipType }).(pulumi.StringOutput)
}

// The ISP of the Ipv6 Eip assigned to Alb, the value can be `BGP`.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEip) string { return v.Isp }).(pulumi.StringOutput)
}

// The pop locations of the Alb. This parameter has a query value only when the type of the Eip is `anycast`.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) PopLocations() AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEip) []AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation {
		return v.PopLocations
	}).(AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput)
}

// The security protection types of the Alb.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipOutput) SecurityProtectionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEip) []string { return v.SecurityProtectionTypes }).(pulumi.StringArrayOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMappingLoadBalancerAddressEip)(nil)).Elem()
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput) ToAlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput) ToAlbsAlbZoneMappingLoadBalancerAddressEipArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput) Index(i pulumi.IntInput) AlbsAlbZoneMappingLoadBalancerAddressEipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbZoneMappingLoadBalancerAddressEip {
		return vs[0].([]AlbsAlbZoneMappingLoadBalancerAddressEip)[vs[1].(int)]
	}).(AlbsAlbZoneMappingLoadBalancerAddressEipOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation struct {
	// The pop id of the Anycast Eip.
	PopId string `pulumi:"popId"`
	// The pop name of the Anycast Eip.
	PopName string `pulumi:"popName"`
}

// AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationInput is an input type that accepts AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArgs and AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationInput` via:
//
//	AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArgs{...}
type AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput() AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput
	ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutputWithContext(context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput
}

type AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArgs struct {
	// The pop id of the Anycast Eip.
	PopId pulumi.StringInput `pulumi:"popId"`
	// The pop name of the Anycast Eip.
	PopName pulumi.StringInput `pulumi:"popName"`
}

func (AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation)(nil)).Elem()
}

func (i AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArgs) ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput() AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput {
	return i.ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArgs) ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput)
}

// AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayInput is an input type that accepts AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArray and AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayInput` via:
//
//	AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArray{ AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArgs{...} }
type AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput
	ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutputWithContext(context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput
}

type AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArray []AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationInput

func (AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation)(nil)).Elem()
}

func (i AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArray) ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput {
	return i.ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArray) ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation)(nil)).Elem()
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput) ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput() AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput) ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput {
	return o
}

// The pop id of the Anycast Eip.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput) PopId() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation) string { return v.PopId }).(pulumi.StringOutput)
}

// The pop name of the Anycast Eip.
func (o AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput) PopName() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation) string { return v.PopName }).(pulumi.StringOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation)(nil)).Elem()
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput) ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput) ToAlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput) Index(i pulumi.IntInput) AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation {
		return vs[0].([]AlbsAlbZoneMappingLoadBalancerAddressEipPopLocation)[vs[1].(int)]
	}).(AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip struct {
	// The peek bandwidth of the Ipv6 Eip assigned to Alb. Units: Mbps.
	Bandwidth int `pulumi:"bandwidth"`
	// The billing type of the Ipv6 Eip assigned to Alb. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
	BillingType string `pulumi:"billingType"`
	// The ISP of the Ipv6 Eip assigned to Alb, the value can be `BGP`.
	Isp string `pulumi:"isp"`
}

// AlbsAlbZoneMappingLoadBalancerAddressIpv6EipInput is an input type that accepts AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArgs and AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingLoadBalancerAddressIpv6EipInput` via:
//
//	AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArgs{...}
type AlbsAlbZoneMappingLoadBalancerAddressIpv6EipInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput() AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput
	ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutputWithContext(context.Context) AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput
}

type AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArgs struct {
	// The peek bandwidth of the Ipv6 Eip assigned to Alb. Units: Mbps.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The billing type of the Ipv6 Eip assigned to Alb. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// The ISP of the Ipv6 Eip assigned to Alb, the value can be `BGP`.
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip)(nil)).Elem()
}

func (i AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArgs) ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput() AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput {
	return i.ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArgs) ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput)
}

// AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayInput is an input type that accepts AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArray and AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput values.
// You can construct a concrete instance of `AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayInput` via:
//
//	AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArray{ AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArgs{...} }
type AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayInput interface {
	pulumi.Input

	ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput
	ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutputWithContext(context.Context) AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput
}

type AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArray []AlbsAlbZoneMappingLoadBalancerAddressIpv6EipInput

func (AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip)(nil)).Elem()
}

func (i AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArray) ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput {
	return i.ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutputWithContext(context.Background())
}

func (i AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArray) ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip)(nil)).Elem()
}

func (o AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput) ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput() AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput) ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput {
	return o
}

// The peek bandwidth of the Ipv6 Eip assigned to Alb. Units: Mbps.
func (o AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The billing type of the Ipv6 Eip assigned to Alb. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
func (o AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip) string { return v.BillingType }).(pulumi.StringOutput)
}

// The ISP of the Ipv6 Eip assigned to Alb, the value can be `BGP`.
func (o AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip) string { return v.Isp }).(pulumi.StringOutput)
}

type AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput struct{ *pulumi.OutputState }

func (AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip)(nil)).Elem()
}

func (o AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput) ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput() AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput) ToAlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutputWithContext(ctx context.Context) AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput {
	return o
}

func (o AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput) Index(i pulumi.IntInput) AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip {
		return vs[0].([]AlbsAlbZoneMappingLoadBalancerAddressIpv6Eip)[vs[1].(int)]
	}).(AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput)
}

type AlbsTag struct {
	// The Key of Tags.
	Key string `pulumi:"key"`
	// The Value of Tags.
	Value string `pulumi:"value"`
}

// AlbsTagInput is an input type that accepts AlbsTagArgs and AlbsTagOutput values.
// You can construct a concrete instance of `AlbsTagInput` via:
//
//	AlbsTagArgs{...}
type AlbsTagInput interface {
	pulumi.Input

	ToAlbsTagOutput() AlbsTagOutput
	ToAlbsTagOutputWithContext(context.Context) AlbsTagOutput
}

type AlbsTagArgs struct {
	// The Key of Tags.
	Key pulumi.StringInput `pulumi:"key"`
	// The Value of Tags.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlbsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsTag)(nil)).Elem()
}

func (i AlbsTagArgs) ToAlbsTagOutput() AlbsTagOutput {
	return i.ToAlbsTagOutputWithContext(context.Background())
}

func (i AlbsTagArgs) ToAlbsTagOutputWithContext(ctx context.Context) AlbsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsTagOutput)
}

// AlbsTagArrayInput is an input type that accepts AlbsTagArray and AlbsTagArrayOutput values.
// You can construct a concrete instance of `AlbsTagArrayInput` via:
//
//	AlbsTagArray{ AlbsTagArgs{...} }
type AlbsTagArrayInput interface {
	pulumi.Input

	ToAlbsTagArrayOutput() AlbsTagArrayOutput
	ToAlbsTagArrayOutputWithContext(context.Context) AlbsTagArrayOutput
}

type AlbsTagArray []AlbsTagInput

func (AlbsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsTag)(nil)).Elem()
}

func (i AlbsTagArray) ToAlbsTagArrayOutput() AlbsTagArrayOutput {
	return i.ToAlbsTagArrayOutputWithContext(context.Background())
}

func (i AlbsTagArray) ToAlbsTagArrayOutputWithContext(ctx context.Context) AlbsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlbsTagArrayOutput)
}

type AlbsTagOutput struct{ *pulumi.OutputState }

func (AlbsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlbsTag)(nil)).Elem()
}

func (o AlbsTagOutput) ToAlbsTagOutput() AlbsTagOutput {
	return o
}

func (o AlbsTagOutput) ToAlbsTagOutputWithContext(ctx context.Context) AlbsTagOutput {
	return o
}

// The Key of Tags.
func (o AlbsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The Value of Tags.
func (o AlbsTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlbsTag) string { return v.Value }).(pulumi.StringOutput)
}

type AlbsTagArrayOutput struct{ *pulumi.OutputState }

func (AlbsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlbsTag)(nil)).Elem()
}

func (o AlbsTagArrayOutput) ToAlbsTagArrayOutput() AlbsTagArrayOutput {
	return o
}

func (o AlbsTagArrayOutput) ToAlbsTagArrayOutputWithContext(ctx context.Context) AlbsTagArrayOutput {
	return o
}

func (o AlbsTagArrayOutput) Index(i pulumi.IntInput) AlbsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlbsTag {
		return vs[0].([]AlbsTag)[vs[1].(int)]
	}).(AlbsTagOutput)
}

type CaCertificatesCertificate struct {
	// The ID of the CA certificate.
	CaCertificateId string `pulumi:"caCertificateId"`
	// The name of the CA certificate.
	CaCertificateName string `pulumi:"caCertificateName"`
	// The type of the CA certificate.
	CertificateType string `pulumi:"certificateType"`
	// The create time of the CA Certificate.
	CreateTime string `pulumi:"createTime"`
	// The description of the CA certificate.
	Description string `pulumi:"description"`
	// The domain name of the CA Certificate.
	DomainName string `pulumi:"domainName"`
	// The expire time of the CA Certificate.
	ExpiredAt string `pulumi:"expiredAt"`
	// The ID list of the CA Listener.
	Listeners []string `pulumi:"listeners"`
	// The project name of the CA certificate.
	ProjectName string `pulumi:"projectName"`
	// The status of the CA Certificate.
	Status string `pulumi:"status"`
}

// CaCertificatesCertificateInput is an input type that accepts CaCertificatesCertificateArgs and CaCertificatesCertificateOutput values.
// You can construct a concrete instance of `CaCertificatesCertificateInput` via:
//
//	CaCertificatesCertificateArgs{...}
type CaCertificatesCertificateInput interface {
	pulumi.Input

	ToCaCertificatesCertificateOutput() CaCertificatesCertificateOutput
	ToCaCertificatesCertificateOutputWithContext(context.Context) CaCertificatesCertificateOutput
}

type CaCertificatesCertificateArgs struct {
	// The ID of the CA certificate.
	CaCertificateId pulumi.StringInput `pulumi:"caCertificateId"`
	// The name of the CA certificate.
	CaCertificateName pulumi.StringInput `pulumi:"caCertificateName"`
	// The type of the CA certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The create time of the CA Certificate.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the CA certificate.
	Description pulumi.StringInput `pulumi:"description"`
	// The domain name of the CA Certificate.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The expire time of the CA Certificate.
	ExpiredAt pulumi.StringInput `pulumi:"expiredAt"`
	// The ID list of the CA Listener.
	Listeners pulumi.StringArrayInput `pulumi:"listeners"`
	// The project name of the CA certificate.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of the CA Certificate.
	Status pulumi.StringInput `pulumi:"status"`
}

func (CaCertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaCertificatesCertificate)(nil)).Elem()
}

func (i CaCertificatesCertificateArgs) ToCaCertificatesCertificateOutput() CaCertificatesCertificateOutput {
	return i.ToCaCertificatesCertificateOutputWithContext(context.Background())
}

func (i CaCertificatesCertificateArgs) ToCaCertificatesCertificateOutputWithContext(ctx context.Context) CaCertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaCertificatesCertificateOutput)
}

// CaCertificatesCertificateArrayInput is an input type that accepts CaCertificatesCertificateArray and CaCertificatesCertificateArrayOutput values.
// You can construct a concrete instance of `CaCertificatesCertificateArrayInput` via:
//
//	CaCertificatesCertificateArray{ CaCertificatesCertificateArgs{...} }
type CaCertificatesCertificateArrayInput interface {
	pulumi.Input

	ToCaCertificatesCertificateArrayOutput() CaCertificatesCertificateArrayOutput
	ToCaCertificatesCertificateArrayOutputWithContext(context.Context) CaCertificatesCertificateArrayOutput
}

type CaCertificatesCertificateArray []CaCertificatesCertificateInput

func (CaCertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaCertificatesCertificate)(nil)).Elem()
}

func (i CaCertificatesCertificateArray) ToCaCertificatesCertificateArrayOutput() CaCertificatesCertificateArrayOutput {
	return i.ToCaCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i CaCertificatesCertificateArray) ToCaCertificatesCertificateArrayOutputWithContext(ctx context.Context) CaCertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaCertificatesCertificateArrayOutput)
}

type CaCertificatesCertificateOutput struct{ *pulumi.OutputState }

func (CaCertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaCertificatesCertificate)(nil)).Elem()
}

func (o CaCertificatesCertificateOutput) ToCaCertificatesCertificateOutput() CaCertificatesCertificateOutput {
	return o
}

func (o CaCertificatesCertificateOutput) ToCaCertificatesCertificateOutputWithContext(ctx context.Context) CaCertificatesCertificateOutput {
	return o
}

// The ID of the CA certificate.
func (o CaCertificatesCertificateOutput) CaCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.CaCertificateId }).(pulumi.StringOutput)
}

// The name of the CA certificate.
func (o CaCertificatesCertificateOutput) CaCertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.CaCertificateName }).(pulumi.StringOutput)
}

// The type of the CA certificate.
func (o CaCertificatesCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The create time of the CA Certificate.
func (o CaCertificatesCertificateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the CA certificate.
func (o CaCertificatesCertificateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.Description }).(pulumi.StringOutput)
}

// The domain name of the CA Certificate.
func (o CaCertificatesCertificateOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.DomainName }).(pulumi.StringOutput)
}

// The expire time of the CA Certificate.
func (o CaCertificatesCertificateOutput) ExpiredAt() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.ExpiredAt }).(pulumi.StringOutput)
}

// The ID list of the CA Listener.
func (o CaCertificatesCertificateOutput) Listeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) []string { return v.Listeners }).(pulumi.StringArrayOutput)
}

// The project name of the CA certificate.
func (o CaCertificatesCertificateOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of the CA Certificate.
func (o CaCertificatesCertificateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CaCertificatesCertificate) string { return v.Status }).(pulumi.StringOutput)
}

type CaCertificatesCertificateArrayOutput struct{ *pulumi.OutputState }

func (CaCertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaCertificatesCertificate)(nil)).Elem()
}

func (o CaCertificatesCertificateArrayOutput) ToCaCertificatesCertificateArrayOutput() CaCertificatesCertificateArrayOutput {
	return o
}

func (o CaCertificatesCertificateArrayOutput) ToCaCertificatesCertificateArrayOutputWithContext(ctx context.Context) CaCertificatesCertificateArrayOutput {
	return o
}

func (o CaCertificatesCertificateArrayOutput) Index(i pulumi.IntInput) CaCertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CaCertificatesCertificate {
		return vs[0].([]CaCertificatesCertificate)[vs[1].(int)]
	}).(CaCertificatesCertificateOutput)
}

type CertificatesCertificate struct {
	// The ID of the Certificate.
	CertificateId string `pulumi:"certificateId"`
	// The Name of Certificate.
	CertificateName string `pulumi:"certificateName"`
	// The type of the Certificate.
	CertificateType string `pulumi:"certificateType"`
	// The create time of the Certificate.
	CreateTime string `pulumi:"createTime"`
	// The description of the Certificate.
	Description string `pulumi:"description"`
	// The domain name of the Certificate.
	DomainName string `pulumi:"domainName"`
	// The expire time of the Certificate.
	ExpiredAt string `pulumi:"expiredAt"`
	// The ID of the Certificate.
	Id string `pulumi:"id"`
	// The ID list of the Listener.
	Listeners []string `pulumi:"listeners"`
	// The ProjectName of the Certificate.
	ProjectName string `pulumi:"projectName"`
	// The status of the Certificate.
	Status string `pulumi:"status"`
}

// CertificatesCertificateInput is an input type that accepts CertificatesCertificateArgs and CertificatesCertificateOutput values.
// You can construct a concrete instance of `CertificatesCertificateInput` via:
//
//	CertificatesCertificateArgs{...}
type CertificatesCertificateInput interface {
	pulumi.Input

	ToCertificatesCertificateOutput() CertificatesCertificateOutput
	ToCertificatesCertificateOutputWithContext(context.Context) CertificatesCertificateOutput
}

type CertificatesCertificateArgs struct {
	// The ID of the Certificate.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The Name of Certificate.
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// The type of the Certificate.
	CertificateType pulumi.StringInput `pulumi:"certificateType"`
	// The create time of the Certificate.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the Certificate.
	Description pulumi.StringInput `pulumi:"description"`
	// The domain name of the Certificate.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The expire time of the Certificate.
	ExpiredAt pulumi.StringInput `pulumi:"expiredAt"`
	// The ID of the Certificate.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID list of the Listener.
	Listeners pulumi.StringArrayInput `pulumi:"listeners"`
	// The ProjectName of the Certificate.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of the Certificate.
	Status pulumi.StringInput `pulumi:"status"`
}

func (CertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesCertificate)(nil)).Elem()
}

func (i CertificatesCertificateArgs) ToCertificatesCertificateOutput() CertificatesCertificateOutput {
	return i.ToCertificatesCertificateOutputWithContext(context.Background())
}

func (i CertificatesCertificateArgs) ToCertificatesCertificateOutputWithContext(ctx context.Context) CertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesCertificateOutput)
}

// CertificatesCertificateArrayInput is an input type that accepts CertificatesCertificateArray and CertificatesCertificateArrayOutput values.
// You can construct a concrete instance of `CertificatesCertificateArrayInput` via:
//
//	CertificatesCertificateArray{ CertificatesCertificateArgs{...} }
type CertificatesCertificateArrayInput interface {
	pulumi.Input

	ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput
	ToCertificatesCertificateArrayOutputWithContext(context.Context) CertificatesCertificateArrayOutput
}

type CertificatesCertificateArray []CertificatesCertificateInput

func (CertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesCertificate)(nil)).Elem()
}

func (i CertificatesCertificateArray) ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput {
	return i.ToCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i CertificatesCertificateArray) ToCertificatesCertificateArrayOutputWithContext(ctx context.Context) CertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatesCertificateArrayOutput)
}

type CertificatesCertificateOutput struct{ *pulumi.OutputState }

func (CertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatesCertificate)(nil)).Elem()
}

func (o CertificatesCertificateOutput) ToCertificatesCertificateOutput() CertificatesCertificateOutput {
	return o
}

func (o CertificatesCertificateOutput) ToCertificatesCertificateOutputWithContext(ctx context.Context) CertificatesCertificateOutput {
	return o
}

// The ID of the Certificate.
func (o CertificatesCertificateOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The Name of Certificate.
func (o CertificatesCertificateOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.CertificateName }).(pulumi.StringOutput)
}

// The type of the Certificate.
func (o CertificatesCertificateOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.CertificateType }).(pulumi.StringOutput)
}

// The create time of the Certificate.
func (o CertificatesCertificateOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the Certificate.
func (o CertificatesCertificateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.Description }).(pulumi.StringOutput)
}

// The domain name of the Certificate.
func (o CertificatesCertificateOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.DomainName }).(pulumi.StringOutput)
}

// The expire time of the Certificate.
func (o CertificatesCertificateOutput) ExpiredAt() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.ExpiredAt }).(pulumi.StringOutput)
}

// The ID of the Certificate.
func (o CertificatesCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The ID list of the Listener.
func (o CertificatesCertificateOutput) Listeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CertificatesCertificate) []string { return v.Listeners }).(pulumi.StringArrayOutput)
}

// The ProjectName of the Certificate.
func (o CertificatesCertificateOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of the Certificate.
func (o CertificatesCertificateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatesCertificate) string { return v.Status }).(pulumi.StringOutput)
}

type CertificatesCertificateArrayOutput struct{ *pulumi.OutputState }

func (CertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificatesCertificate)(nil)).Elem()
}

func (o CertificatesCertificateArrayOutput) ToCertificatesCertificateArrayOutput() CertificatesCertificateArrayOutput {
	return o
}

func (o CertificatesCertificateArrayOutput) ToCertificatesCertificateArrayOutputWithContext(ctx context.Context) CertificatesCertificateArrayOutput {
	return o
}

func (o CertificatesCertificateArrayOutput) Index(i pulumi.IntInput) CertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificatesCertificate {
		return vs[0].([]CertificatesCertificate)[vs[1].(int)]
	}).(CertificatesCertificateOutput)
}

type CustomizedCfgsCfg struct {
	// The create time of CustomizedCfg.
	CreateTime string `pulumi:"createTime"`
	// The content of CustomizedCfg.
	CustomizedCfgContent string `pulumi:"customizedCfgContent"`
	// The ID of CustomizedCfg.
	CustomizedCfgId string `pulumi:"customizedCfgId"`
	// The name of the CustomizedCfg.
	CustomizedCfgName string `pulumi:"customizedCfgName"`
	// The description of CustomizedCfg.
	Description string `pulumi:"description"`
	// The ID of CustomizedCfg.
	Id string `pulumi:"id"`
	// The listeners of CustomizedCfg.
	Listeners []CustomizedCfgsCfgListener `pulumi:"listeners"`
	// The project name of the CustomizedCfg.
	ProjectName string `pulumi:"projectName"`
	// The status of CustomizedCfg.
	Status string `pulumi:"status"`
	// The update time of CustomizedCfg.
	UpdateTime string `pulumi:"updateTime"`
}

// CustomizedCfgsCfgInput is an input type that accepts CustomizedCfgsCfgArgs and CustomizedCfgsCfgOutput values.
// You can construct a concrete instance of `CustomizedCfgsCfgInput` via:
//
//	CustomizedCfgsCfgArgs{...}
type CustomizedCfgsCfgInput interface {
	pulumi.Input

	ToCustomizedCfgsCfgOutput() CustomizedCfgsCfgOutput
	ToCustomizedCfgsCfgOutputWithContext(context.Context) CustomizedCfgsCfgOutput
}

type CustomizedCfgsCfgArgs struct {
	// The create time of CustomizedCfg.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The content of CustomizedCfg.
	CustomizedCfgContent pulumi.StringInput `pulumi:"customizedCfgContent"`
	// The ID of CustomizedCfg.
	CustomizedCfgId pulumi.StringInput `pulumi:"customizedCfgId"`
	// The name of the CustomizedCfg.
	CustomizedCfgName pulumi.StringInput `pulumi:"customizedCfgName"`
	// The description of CustomizedCfg.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of CustomizedCfg.
	Id pulumi.StringInput `pulumi:"id"`
	// The listeners of CustomizedCfg.
	Listeners CustomizedCfgsCfgListenerArrayInput `pulumi:"listeners"`
	// The project name of the CustomizedCfg.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The status of CustomizedCfg.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of CustomizedCfg.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (CustomizedCfgsCfgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizedCfgsCfg)(nil)).Elem()
}

func (i CustomizedCfgsCfgArgs) ToCustomizedCfgsCfgOutput() CustomizedCfgsCfgOutput {
	return i.ToCustomizedCfgsCfgOutputWithContext(context.Background())
}

func (i CustomizedCfgsCfgArgs) ToCustomizedCfgsCfgOutputWithContext(ctx context.Context) CustomizedCfgsCfgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizedCfgsCfgOutput)
}

// CustomizedCfgsCfgArrayInput is an input type that accepts CustomizedCfgsCfgArray and CustomizedCfgsCfgArrayOutput values.
// You can construct a concrete instance of `CustomizedCfgsCfgArrayInput` via:
//
//	CustomizedCfgsCfgArray{ CustomizedCfgsCfgArgs{...} }
type CustomizedCfgsCfgArrayInput interface {
	pulumi.Input

	ToCustomizedCfgsCfgArrayOutput() CustomizedCfgsCfgArrayOutput
	ToCustomizedCfgsCfgArrayOutputWithContext(context.Context) CustomizedCfgsCfgArrayOutput
}

type CustomizedCfgsCfgArray []CustomizedCfgsCfgInput

func (CustomizedCfgsCfgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomizedCfgsCfg)(nil)).Elem()
}

func (i CustomizedCfgsCfgArray) ToCustomizedCfgsCfgArrayOutput() CustomizedCfgsCfgArrayOutput {
	return i.ToCustomizedCfgsCfgArrayOutputWithContext(context.Background())
}

func (i CustomizedCfgsCfgArray) ToCustomizedCfgsCfgArrayOutputWithContext(ctx context.Context) CustomizedCfgsCfgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizedCfgsCfgArrayOutput)
}

type CustomizedCfgsCfgOutput struct{ *pulumi.OutputState }

func (CustomizedCfgsCfgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizedCfgsCfg)(nil)).Elem()
}

func (o CustomizedCfgsCfgOutput) ToCustomizedCfgsCfgOutput() CustomizedCfgsCfgOutput {
	return o
}

func (o CustomizedCfgsCfgOutput) ToCustomizedCfgsCfgOutputWithContext(ctx context.Context) CustomizedCfgsCfgOutput {
	return o
}

// The create time of CustomizedCfg.
func (o CustomizedCfgsCfgOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The content of CustomizedCfg.
func (o CustomizedCfgsCfgOutput) CustomizedCfgContent() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.CustomizedCfgContent }).(pulumi.StringOutput)
}

// The ID of CustomizedCfg.
func (o CustomizedCfgsCfgOutput) CustomizedCfgId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.CustomizedCfgId }).(pulumi.StringOutput)
}

// The name of the CustomizedCfg.
func (o CustomizedCfgsCfgOutput) CustomizedCfgName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.CustomizedCfgName }).(pulumi.StringOutput)
}

// The description of CustomizedCfg.
func (o CustomizedCfgsCfgOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of CustomizedCfg.
func (o CustomizedCfgsCfgOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.Id }).(pulumi.StringOutput)
}

// The listeners of CustomizedCfg.
func (o CustomizedCfgsCfgOutput) Listeners() CustomizedCfgsCfgListenerArrayOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) []CustomizedCfgsCfgListener { return v.Listeners }).(CustomizedCfgsCfgListenerArrayOutput)
}

// The project name of the CustomizedCfg.
func (o CustomizedCfgsCfgOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The status of CustomizedCfg.
func (o CustomizedCfgsCfgOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of CustomizedCfg.
func (o CustomizedCfgsCfgOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfg) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type CustomizedCfgsCfgArrayOutput struct{ *pulumi.OutputState }

func (CustomizedCfgsCfgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomizedCfgsCfg)(nil)).Elem()
}

func (o CustomizedCfgsCfgArrayOutput) ToCustomizedCfgsCfgArrayOutput() CustomizedCfgsCfgArrayOutput {
	return o
}

func (o CustomizedCfgsCfgArrayOutput) ToCustomizedCfgsCfgArrayOutputWithContext(ctx context.Context) CustomizedCfgsCfgArrayOutput {
	return o
}

func (o CustomizedCfgsCfgArrayOutput) Index(i pulumi.IntInput) CustomizedCfgsCfgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomizedCfgsCfg {
		return vs[0].([]CustomizedCfgsCfg)[vs[1].(int)]
	}).(CustomizedCfgsCfgOutput)
}

type CustomizedCfgsCfgListener struct {
	// The id of the listener.
	ListenerId string `pulumi:"listenerId"`
	// The Name of Listener.
	ListenerName string `pulumi:"listenerName"`
	// The port info of listener.
	Port int `pulumi:"port"`
	// The protocol info of listener.
	Protocol string `pulumi:"protocol"`
}

// CustomizedCfgsCfgListenerInput is an input type that accepts CustomizedCfgsCfgListenerArgs and CustomizedCfgsCfgListenerOutput values.
// You can construct a concrete instance of `CustomizedCfgsCfgListenerInput` via:
//
//	CustomizedCfgsCfgListenerArgs{...}
type CustomizedCfgsCfgListenerInput interface {
	pulumi.Input

	ToCustomizedCfgsCfgListenerOutput() CustomizedCfgsCfgListenerOutput
	ToCustomizedCfgsCfgListenerOutputWithContext(context.Context) CustomizedCfgsCfgListenerOutput
}

type CustomizedCfgsCfgListenerArgs struct {
	// The id of the listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The Name of Listener.
	ListenerName pulumi.StringInput `pulumi:"listenerName"`
	// The port info of listener.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol info of listener.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (CustomizedCfgsCfgListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizedCfgsCfgListener)(nil)).Elem()
}

func (i CustomizedCfgsCfgListenerArgs) ToCustomizedCfgsCfgListenerOutput() CustomizedCfgsCfgListenerOutput {
	return i.ToCustomizedCfgsCfgListenerOutputWithContext(context.Background())
}

func (i CustomizedCfgsCfgListenerArgs) ToCustomizedCfgsCfgListenerOutputWithContext(ctx context.Context) CustomizedCfgsCfgListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizedCfgsCfgListenerOutput)
}

// CustomizedCfgsCfgListenerArrayInput is an input type that accepts CustomizedCfgsCfgListenerArray and CustomizedCfgsCfgListenerArrayOutput values.
// You can construct a concrete instance of `CustomizedCfgsCfgListenerArrayInput` via:
//
//	CustomizedCfgsCfgListenerArray{ CustomizedCfgsCfgListenerArgs{...} }
type CustomizedCfgsCfgListenerArrayInput interface {
	pulumi.Input

	ToCustomizedCfgsCfgListenerArrayOutput() CustomizedCfgsCfgListenerArrayOutput
	ToCustomizedCfgsCfgListenerArrayOutputWithContext(context.Context) CustomizedCfgsCfgListenerArrayOutput
}

type CustomizedCfgsCfgListenerArray []CustomizedCfgsCfgListenerInput

func (CustomizedCfgsCfgListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomizedCfgsCfgListener)(nil)).Elem()
}

func (i CustomizedCfgsCfgListenerArray) ToCustomizedCfgsCfgListenerArrayOutput() CustomizedCfgsCfgListenerArrayOutput {
	return i.ToCustomizedCfgsCfgListenerArrayOutputWithContext(context.Background())
}

func (i CustomizedCfgsCfgListenerArray) ToCustomizedCfgsCfgListenerArrayOutputWithContext(ctx context.Context) CustomizedCfgsCfgListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomizedCfgsCfgListenerArrayOutput)
}

type CustomizedCfgsCfgListenerOutput struct{ *pulumi.OutputState }

func (CustomizedCfgsCfgListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomizedCfgsCfgListener)(nil)).Elem()
}

func (o CustomizedCfgsCfgListenerOutput) ToCustomizedCfgsCfgListenerOutput() CustomizedCfgsCfgListenerOutput {
	return o
}

func (o CustomizedCfgsCfgListenerOutput) ToCustomizedCfgsCfgListenerOutputWithContext(ctx context.Context) CustomizedCfgsCfgListenerOutput {
	return o
}

// The id of the listener.
func (o CustomizedCfgsCfgListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfgListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The Name of Listener.
func (o CustomizedCfgsCfgListenerOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfgListener) string { return v.ListenerName }).(pulumi.StringOutput)
}

// The port info of listener.
func (o CustomizedCfgsCfgListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v CustomizedCfgsCfgListener) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol info of listener.
func (o CustomizedCfgsCfgListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v CustomizedCfgsCfgListener) string { return v.Protocol }).(pulumi.StringOutput)
}

type CustomizedCfgsCfgListenerArrayOutput struct{ *pulumi.OutputState }

func (CustomizedCfgsCfgListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomizedCfgsCfgListener)(nil)).Elem()
}

func (o CustomizedCfgsCfgListenerArrayOutput) ToCustomizedCfgsCfgListenerArrayOutput() CustomizedCfgsCfgListenerArrayOutput {
	return o
}

func (o CustomizedCfgsCfgListenerArrayOutput) ToCustomizedCfgsCfgListenerArrayOutputWithContext(ctx context.Context) CustomizedCfgsCfgListenerArrayOutput {
	return o
}

func (o CustomizedCfgsCfgListenerArrayOutput) Index(i pulumi.IntInput) CustomizedCfgsCfgListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomizedCfgsCfgListener {
		return vs[0].([]CustomizedCfgsCfgListener)[vs[1].(int)]
	}).(CustomizedCfgsCfgListenerOutput)
}

type HealthCheckTemplatesHealthCheckTemplate struct {
	// The description of health check template.
	Description string `pulumi:"description"`
	// The domain name to health check.
	HealthCheckDomain string `pulumi:"healthCheckDomain"`
	// The normal HTTP status code for health check, the default is http_2xx, http_3xx, separated by commas.
	HealthCheckHttpCode string `pulumi:"healthCheckHttpCode"`
	// The HTTP version of health check.
	HealthCheckHttpVersion string `pulumi:"healthCheckHttpVersion"`
	// The interval for performing health checks, the default value is 2, and the value is 1-300.
	HealthCheckInterval int `pulumi:"healthCheckInterval"`
	// The health check method,default is `GET`,support `GET` and ``HEAD.
	HealthCheckMethod string `pulumi:"healthCheckMethod"`
	// The protocol of health check,only support HTTP.
	HealthCheckProtocol string `pulumi:"healthCheckProtocol"`
	// The ID of health check template.
	HealthCheckTemplateId string `pulumi:"healthCheckTemplateId"`
	// The name of health check template to query.
	HealthCheckTemplateName string `pulumi:"healthCheckTemplateName"`
	// The timeout of health check response,the default value is 2, and the value is 1-60.
	HealthCheckTimeout int `pulumi:"healthCheckTimeout"`
	// The uri to health check,default is `/`.
	HealthCheckUri string `pulumi:"healthCheckUri"`
	// The healthy threshold of the health check, the default is 3, the value is 2-10.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// The id of the health check template.
	Id string `pulumi:"id"`
	// The unhealthy threshold of the health check, the default is 3, the value is 2-10.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// HealthCheckTemplatesHealthCheckTemplateInput is an input type that accepts HealthCheckTemplatesHealthCheckTemplateArgs and HealthCheckTemplatesHealthCheckTemplateOutput values.
// You can construct a concrete instance of `HealthCheckTemplatesHealthCheckTemplateInput` via:
//
//	HealthCheckTemplatesHealthCheckTemplateArgs{...}
type HealthCheckTemplatesHealthCheckTemplateInput interface {
	pulumi.Input

	ToHealthCheckTemplatesHealthCheckTemplateOutput() HealthCheckTemplatesHealthCheckTemplateOutput
	ToHealthCheckTemplatesHealthCheckTemplateOutputWithContext(context.Context) HealthCheckTemplatesHealthCheckTemplateOutput
}

type HealthCheckTemplatesHealthCheckTemplateArgs struct {
	// The description of health check template.
	Description pulumi.StringInput `pulumi:"description"`
	// The domain name to health check.
	HealthCheckDomain pulumi.StringInput `pulumi:"healthCheckDomain"`
	// The normal HTTP status code for health check, the default is http_2xx, http_3xx, separated by commas.
	HealthCheckHttpCode pulumi.StringInput `pulumi:"healthCheckHttpCode"`
	// The HTTP version of health check.
	HealthCheckHttpVersion pulumi.StringInput `pulumi:"healthCheckHttpVersion"`
	// The interval for performing health checks, the default value is 2, and the value is 1-300.
	HealthCheckInterval pulumi.IntInput `pulumi:"healthCheckInterval"`
	// The health check method,default is `GET`,support `GET` and ``HEAD.
	HealthCheckMethod pulumi.StringInput `pulumi:"healthCheckMethod"`
	// The protocol of health check,only support HTTP.
	HealthCheckProtocol pulumi.StringInput `pulumi:"healthCheckProtocol"`
	// The ID of health check template.
	HealthCheckTemplateId pulumi.StringInput `pulumi:"healthCheckTemplateId"`
	// The name of health check template to query.
	HealthCheckTemplateName pulumi.StringInput `pulumi:"healthCheckTemplateName"`
	// The timeout of health check response,the default value is 2, and the value is 1-60.
	HealthCheckTimeout pulumi.IntInput `pulumi:"healthCheckTimeout"`
	// The uri to health check,default is `/`.
	HealthCheckUri pulumi.StringInput `pulumi:"healthCheckUri"`
	// The healthy threshold of the health check, the default is 3, the value is 2-10.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// The id of the health check template.
	Id pulumi.StringInput `pulumi:"id"`
	// The unhealthy threshold of the health check, the default is 3, the value is 2-10.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (HealthCheckTemplatesHealthCheckTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckTemplatesHealthCheckTemplate)(nil)).Elem()
}

func (i HealthCheckTemplatesHealthCheckTemplateArgs) ToHealthCheckTemplatesHealthCheckTemplateOutput() HealthCheckTemplatesHealthCheckTemplateOutput {
	return i.ToHealthCheckTemplatesHealthCheckTemplateOutputWithContext(context.Background())
}

func (i HealthCheckTemplatesHealthCheckTemplateArgs) ToHealthCheckTemplatesHealthCheckTemplateOutputWithContext(ctx context.Context) HealthCheckTemplatesHealthCheckTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckTemplatesHealthCheckTemplateOutput)
}

// HealthCheckTemplatesHealthCheckTemplateArrayInput is an input type that accepts HealthCheckTemplatesHealthCheckTemplateArray and HealthCheckTemplatesHealthCheckTemplateArrayOutput values.
// You can construct a concrete instance of `HealthCheckTemplatesHealthCheckTemplateArrayInput` via:
//
//	HealthCheckTemplatesHealthCheckTemplateArray{ HealthCheckTemplatesHealthCheckTemplateArgs{...} }
type HealthCheckTemplatesHealthCheckTemplateArrayInput interface {
	pulumi.Input

	ToHealthCheckTemplatesHealthCheckTemplateArrayOutput() HealthCheckTemplatesHealthCheckTemplateArrayOutput
	ToHealthCheckTemplatesHealthCheckTemplateArrayOutputWithContext(context.Context) HealthCheckTemplatesHealthCheckTemplateArrayOutput
}

type HealthCheckTemplatesHealthCheckTemplateArray []HealthCheckTemplatesHealthCheckTemplateInput

func (HealthCheckTemplatesHealthCheckTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthCheckTemplatesHealthCheckTemplate)(nil)).Elem()
}

func (i HealthCheckTemplatesHealthCheckTemplateArray) ToHealthCheckTemplatesHealthCheckTemplateArrayOutput() HealthCheckTemplatesHealthCheckTemplateArrayOutput {
	return i.ToHealthCheckTemplatesHealthCheckTemplateArrayOutputWithContext(context.Background())
}

func (i HealthCheckTemplatesHealthCheckTemplateArray) ToHealthCheckTemplatesHealthCheckTemplateArrayOutputWithContext(ctx context.Context) HealthCheckTemplatesHealthCheckTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckTemplatesHealthCheckTemplateArrayOutput)
}

type HealthCheckTemplatesHealthCheckTemplateOutput struct{ *pulumi.OutputState }

func (HealthCheckTemplatesHealthCheckTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckTemplatesHealthCheckTemplate)(nil)).Elem()
}

func (o HealthCheckTemplatesHealthCheckTemplateOutput) ToHealthCheckTemplatesHealthCheckTemplateOutput() HealthCheckTemplatesHealthCheckTemplateOutput {
	return o
}

func (o HealthCheckTemplatesHealthCheckTemplateOutput) ToHealthCheckTemplatesHealthCheckTemplateOutputWithContext(ctx context.Context) HealthCheckTemplatesHealthCheckTemplateOutput {
	return o
}

// The description of health check template.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The domain name to health check.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckDomain() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.HealthCheckDomain }).(pulumi.StringOutput)
}

// The normal HTTP status code for health check, the default is http_2xx, http_3xx, separated by commas.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckHttpCode() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.HealthCheckHttpCode }).(pulumi.StringOutput)
}

// The HTTP version of health check.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckHttpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.HealthCheckHttpVersion }).(pulumi.StringOutput)
}

// The interval for performing health checks, the default value is 2, and the value is 1-300.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) int { return v.HealthCheckInterval }).(pulumi.IntOutput)
}

// The health check method,default is `GET`,support `GET` and “HEAD.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckMethod() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.HealthCheckMethod }).(pulumi.StringOutput)
}

// The protocol of health check,only support HTTP.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.HealthCheckProtocol }).(pulumi.StringOutput)
}

// The ID of health check template.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.HealthCheckTemplateId }).(pulumi.StringOutput)
}

// The name of health check template to query.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.HealthCheckTemplateName }).(pulumi.StringOutput)
}

// The timeout of health check response,the default value is 2, and the value is 1-60.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) int { return v.HealthCheckTimeout }).(pulumi.IntOutput)
}

// The uri to health check,default is `/`.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthCheckUri() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.HealthCheckUri }).(pulumi.StringOutput)
}

// The healthy threshold of the health check, the default is 3, the value is 2-10.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// The id of the health check template.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// The unhealthy threshold of the health check, the default is 3, the value is 2-10.
func (o HealthCheckTemplatesHealthCheckTemplateOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v HealthCheckTemplatesHealthCheckTemplate) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type HealthCheckTemplatesHealthCheckTemplateArrayOutput struct{ *pulumi.OutputState }

func (HealthCheckTemplatesHealthCheckTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthCheckTemplatesHealthCheckTemplate)(nil)).Elem()
}

func (o HealthCheckTemplatesHealthCheckTemplateArrayOutput) ToHealthCheckTemplatesHealthCheckTemplateArrayOutput() HealthCheckTemplatesHealthCheckTemplateArrayOutput {
	return o
}

func (o HealthCheckTemplatesHealthCheckTemplateArrayOutput) ToHealthCheckTemplatesHealthCheckTemplateArrayOutputWithContext(ctx context.Context) HealthCheckTemplatesHealthCheckTemplateArrayOutput {
	return o
}

func (o HealthCheckTemplatesHealthCheckTemplateArrayOutput) Index(i pulumi.IntInput) HealthCheckTemplatesHealthCheckTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthCheckTemplatesHealthCheckTemplate {
		return vs[0].([]HealthCheckTemplatesHealthCheckTemplate)[vs[1].(int)]
	}).(HealthCheckTemplatesHealthCheckTemplateOutput)
}

type ListenerDomainExtensionsDomainExtension struct {
	// The server certificate ID that domain used.
	CertificateId string `pulumi:"certificateId"`
	// The domain.
	Domain string `pulumi:"domain"`
	// The extension domain ID.
	DomainExtensionId string `pulumi:"domainExtensionId"`
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// A Listener ID.
	ListenerId string `pulumi:"listenerId"`
}

// ListenerDomainExtensionsDomainExtensionInput is an input type that accepts ListenerDomainExtensionsDomainExtensionArgs and ListenerDomainExtensionsDomainExtensionOutput values.
// You can construct a concrete instance of `ListenerDomainExtensionsDomainExtensionInput` via:
//
//	ListenerDomainExtensionsDomainExtensionArgs{...}
type ListenerDomainExtensionsDomainExtensionInput interface {
	pulumi.Input

	ToListenerDomainExtensionsDomainExtensionOutput() ListenerDomainExtensionsDomainExtensionOutput
	ToListenerDomainExtensionsDomainExtensionOutputWithContext(context.Context) ListenerDomainExtensionsDomainExtensionOutput
}

type ListenerDomainExtensionsDomainExtensionArgs struct {
	// The server certificate ID that domain used.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The domain.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The extension domain ID.
	DomainExtensionId pulumi.StringInput `pulumi:"domainExtensionId"`
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// A Listener ID.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
}

func (ListenerDomainExtensionsDomainExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDomainExtensionsDomainExtension)(nil)).Elem()
}

func (i ListenerDomainExtensionsDomainExtensionArgs) ToListenerDomainExtensionsDomainExtensionOutput() ListenerDomainExtensionsDomainExtensionOutput {
	return i.ToListenerDomainExtensionsDomainExtensionOutputWithContext(context.Background())
}

func (i ListenerDomainExtensionsDomainExtensionArgs) ToListenerDomainExtensionsDomainExtensionOutputWithContext(ctx context.Context) ListenerDomainExtensionsDomainExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDomainExtensionsDomainExtensionOutput)
}

// ListenerDomainExtensionsDomainExtensionArrayInput is an input type that accepts ListenerDomainExtensionsDomainExtensionArray and ListenerDomainExtensionsDomainExtensionArrayOutput values.
// You can construct a concrete instance of `ListenerDomainExtensionsDomainExtensionArrayInput` via:
//
//	ListenerDomainExtensionsDomainExtensionArray{ ListenerDomainExtensionsDomainExtensionArgs{...} }
type ListenerDomainExtensionsDomainExtensionArrayInput interface {
	pulumi.Input

	ToListenerDomainExtensionsDomainExtensionArrayOutput() ListenerDomainExtensionsDomainExtensionArrayOutput
	ToListenerDomainExtensionsDomainExtensionArrayOutputWithContext(context.Context) ListenerDomainExtensionsDomainExtensionArrayOutput
}

type ListenerDomainExtensionsDomainExtensionArray []ListenerDomainExtensionsDomainExtensionInput

func (ListenerDomainExtensionsDomainExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerDomainExtensionsDomainExtension)(nil)).Elem()
}

func (i ListenerDomainExtensionsDomainExtensionArray) ToListenerDomainExtensionsDomainExtensionArrayOutput() ListenerDomainExtensionsDomainExtensionArrayOutput {
	return i.ToListenerDomainExtensionsDomainExtensionArrayOutputWithContext(context.Background())
}

func (i ListenerDomainExtensionsDomainExtensionArray) ToListenerDomainExtensionsDomainExtensionArrayOutputWithContext(ctx context.Context) ListenerDomainExtensionsDomainExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDomainExtensionsDomainExtensionArrayOutput)
}

type ListenerDomainExtensionsDomainExtensionOutput struct{ *pulumi.OutputState }

func (ListenerDomainExtensionsDomainExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDomainExtensionsDomainExtension)(nil)).Elem()
}

func (o ListenerDomainExtensionsDomainExtensionOutput) ToListenerDomainExtensionsDomainExtensionOutput() ListenerDomainExtensionsDomainExtensionOutput {
	return o
}

func (o ListenerDomainExtensionsDomainExtensionOutput) ToListenerDomainExtensionsDomainExtensionOutputWithContext(ctx context.Context) ListenerDomainExtensionsDomainExtensionOutput {
	return o
}

// The server certificate ID that domain used.
func (o ListenerDomainExtensionsDomainExtensionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDomainExtensionsDomainExtension) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The domain.
func (o ListenerDomainExtensionsDomainExtensionOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDomainExtensionsDomainExtension) string { return v.Domain }).(pulumi.StringOutput)
}

// The extension domain ID.
func (o ListenerDomainExtensionsDomainExtensionOutput) DomainExtensionId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDomainExtensionsDomainExtension) string { return v.DomainExtensionId }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o ListenerDomainExtensionsDomainExtensionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDomainExtensionsDomainExtension) string { return v.Id }).(pulumi.StringOutput)
}

// A Listener ID.
func (o ListenerDomainExtensionsDomainExtensionOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDomainExtensionsDomainExtension) string { return v.ListenerId }).(pulumi.StringOutput)
}

type ListenerDomainExtensionsDomainExtensionArrayOutput struct{ *pulumi.OutputState }

func (ListenerDomainExtensionsDomainExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerDomainExtensionsDomainExtension)(nil)).Elem()
}

func (o ListenerDomainExtensionsDomainExtensionArrayOutput) ToListenerDomainExtensionsDomainExtensionArrayOutput() ListenerDomainExtensionsDomainExtensionArrayOutput {
	return o
}

func (o ListenerDomainExtensionsDomainExtensionArrayOutput) ToListenerDomainExtensionsDomainExtensionArrayOutputWithContext(ctx context.Context) ListenerDomainExtensionsDomainExtensionArrayOutput {
	return o
}

func (o ListenerDomainExtensionsDomainExtensionArrayOutput) Index(i pulumi.IntInput) ListenerDomainExtensionsDomainExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerDomainExtensionsDomainExtension {
		return vs[0].([]ListenerDomainExtensionsDomainExtension)[vs[1].(int)]
	}).(ListenerDomainExtensionsDomainExtensionOutput)
}

type ListenersListener struct {
	// The ID of the access control policy group bound to the listener, only returned when the AclStatus parameter is on.
	AclIds []string `pulumi:"aclIds"`
	// Whether to enable the access control function,valid value is on or off.
	AclStatus string `pulumi:"aclStatus"`
	// The access control type.
	AclType string `pulumi:"aclType"`
	// CA certificate ID associated with HTTPS listener.
	CaCertificateId string `pulumi:"caCertificateId"`
	// The server certificate ID that domain used.
	CertificateId string `pulumi:"certificateId"`
	// The create time of the Listener.
	CreateTime string `pulumi:"createTime"`
	// The customized configuration ID, the value is empty string when not bound.
	CustomizedCfgId string `pulumi:"customizedCfgId"`
	// The description of listener.
	Description string `pulumi:"description"`
	// The HTTPS listener association list of extension domains for.
	DomainExtensions []ListenersListenerDomainExtension `pulumi:"domainExtensions"`
	// The HTTP2 feature switch,valid value is on or off.
	EnableHttp2 string `pulumi:"enableHttp2"`
	// The QUIC feature switch,valid value is on or off.
	EnableQuic string `pulumi:"enableQuic"`
	// The enable status of the Listener.
	Enabled string `pulumi:"enabled"`
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The ID of the Listener.
	ListenerId string `pulumi:"listenerId"`
	// The name of the Listener.
	ListenerName string `pulumi:"listenerName"`
	// The id of the Alb.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The port receiving request of the Listener.
	Port int `pulumi:"port"`
	// The project name of the listener.
	ProjectName string `pulumi:"projectName"`
	// The protocol of the Listener.
	Protocol string `pulumi:"protocol"`
	// The ID of server group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The list of server groups with associated listeners.
	ServerGroups []ListenersListenerServerGroup `pulumi:"serverGroups"`
	// The status of the Listener.
	Status string `pulumi:"status"`
	// The update time of the Listener.
	UpdateTime string `pulumi:"updateTime"`
}

// ListenersListenerInput is an input type that accepts ListenersListenerArgs and ListenersListenerOutput values.
// You can construct a concrete instance of `ListenersListenerInput` via:
//
//	ListenersListenerArgs{...}
type ListenersListenerInput interface {
	pulumi.Input

	ToListenersListenerOutput() ListenersListenerOutput
	ToListenersListenerOutputWithContext(context.Context) ListenersListenerOutput
}

type ListenersListenerArgs struct {
	// The ID of the access control policy group bound to the listener, only returned when the AclStatus parameter is on.
	AclIds pulumi.StringArrayInput `pulumi:"aclIds"`
	// Whether to enable the access control function,valid value is on or off.
	AclStatus pulumi.StringInput `pulumi:"aclStatus"`
	// The access control type.
	AclType pulumi.StringInput `pulumi:"aclType"`
	// CA certificate ID associated with HTTPS listener.
	CaCertificateId pulumi.StringInput `pulumi:"caCertificateId"`
	// The server certificate ID that domain used.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The create time of the Listener.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The customized configuration ID, the value is empty string when not bound.
	CustomizedCfgId pulumi.StringInput `pulumi:"customizedCfgId"`
	// The description of listener.
	Description pulumi.StringInput `pulumi:"description"`
	// The HTTPS listener association list of extension domains for.
	DomainExtensions ListenersListenerDomainExtensionArrayInput `pulumi:"domainExtensions"`
	// The HTTP2 feature switch,valid value is on or off.
	EnableHttp2 pulumi.StringInput `pulumi:"enableHttp2"`
	// The QUIC feature switch,valid value is on or off.
	EnableQuic pulumi.StringInput `pulumi:"enableQuic"`
	// The enable status of the Listener.
	Enabled pulumi.StringInput `pulumi:"enabled"`
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The name of the Listener.
	ListenerName pulumi.StringInput `pulumi:"listenerName"`
	// The id of the Alb.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// The port receiving request of the Listener.
	Port pulumi.IntInput `pulumi:"port"`
	// The project name of the listener.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The protocol of the Listener.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The ID of server group.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The list of server groups with associated listeners.
	ServerGroups ListenersListenerServerGroupArrayInput `pulumi:"serverGroups"`
	// The status of the Listener.
	Status pulumi.StringInput `pulumi:"status"`
	// The update time of the Listener.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (ListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListener)(nil)).Elem()
}

func (i ListenersListenerArgs) ToListenersListenerOutput() ListenersListenerOutput {
	return i.ToListenersListenerOutputWithContext(context.Background())
}

func (i ListenersListenerArgs) ToListenersListenerOutputWithContext(ctx context.Context) ListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerOutput)
}

// ListenersListenerArrayInput is an input type that accepts ListenersListenerArray and ListenersListenerArrayOutput values.
// You can construct a concrete instance of `ListenersListenerArrayInput` via:
//
//	ListenersListenerArray{ ListenersListenerArgs{...} }
type ListenersListenerArrayInput interface {
	pulumi.Input

	ToListenersListenerArrayOutput() ListenersListenerArrayOutput
	ToListenersListenerArrayOutputWithContext(context.Context) ListenersListenerArrayOutput
}

type ListenersListenerArray []ListenersListenerInput

func (ListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListener)(nil)).Elem()
}

func (i ListenersListenerArray) ToListenersListenerArrayOutput() ListenersListenerArrayOutput {
	return i.ToListenersListenerArrayOutputWithContext(context.Background())
}

func (i ListenersListenerArray) ToListenersListenerArrayOutputWithContext(ctx context.Context) ListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerArrayOutput)
}

type ListenersListenerOutput struct{ *pulumi.OutputState }

func (ListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListener)(nil)).Elem()
}

func (o ListenersListenerOutput) ToListenersListenerOutput() ListenersListenerOutput {
	return o
}

func (o ListenersListenerOutput) ToListenersListenerOutputWithContext(ctx context.Context) ListenersListenerOutput {
	return o
}

// The ID of the access control policy group bound to the listener, only returned when the AclStatus parameter is on.
func (o ListenersListenerOutput) AclIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenersListener) []string { return v.AclIds }).(pulumi.StringArrayOutput)
}

// Whether to enable the access control function,valid value is on or off.
func (o ListenersListenerOutput) AclStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.AclStatus }).(pulumi.StringOutput)
}

// The access control type.
func (o ListenersListenerOutput) AclType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.AclType }).(pulumi.StringOutput)
}

// CA certificate ID associated with HTTPS listener.
func (o ListenersListenerOutput) CaCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.CaCertificateId }).(pulumi.StringOutput)
}

// The server certificate ID that domain used.
func (o ListenersListenerOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The create time of the Listener.
func (o ListenersListenerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The customized configuration ID, the value is empty string when not bound.
func (o ListenersListenerOutput) CustomizedCfgId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.CustomizedCfgId }).(pulumi.StringOutput)
}

// The description of listener.
func (o ListenersListenerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Description }).(pulumi.StringOutput)
}

// The HTTPS listener association list of extension domains for.
func (o ListenersListenerOutput) DomainExtensions() ListenersListenerDomainExtensionArrayOutput {
	return o.ApplyT(func(v ListenersListener) []ListenersListenerDomainExtension { return v.DomainExtensions }).(ListenersListenerDomainExtensionArrayOutput)
}

// The HTTP2 feature switch,valid value is on or off.
func (o ListenersListenerOutput) EnableHttp2() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.EnableHttp2 }).(pulumi.StringOutput)
}

// The QUIC feature switch,valid value is on or off.
func (o ListenersListenerOutput) EnableQuic() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.EnableQuic }).(pulumi.StringOutput)
}

// The enable status of the Listener.
func (o ListenersListenerOutput) Enabled() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Enabled }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o ListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o ListenersListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The name of the Listener.
func (o ListenersListenerOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ListenerName }).(pulumi.StringOutput)
}

// The id of the Alb.
func (o ListenersListenerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// The port receiving request of the Listener.
func (o ListenersListenerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ListenersListener) int { return v.Port }).(pulumi.IntOutput)
}

// The project name of the listener.
func (o ListenersListenerOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The protocol of the Listener.
func (o ListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// The ID of server group.
func (o ListenersListenerOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The list of server groups with associated listeners.
func (o ListenersListenerOutput) ServerGroups() ListenersListenerServerGroupArrayOutput {
	return o.ApplyT(func(v ListenersListener) []ListenersListenerServerGroup { return v.ServerGroups }).(ListenersListenerServerGroupArrayOutput)
}

// The status of the Listener.
func (o ListenersListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.Status }).(pulumi.StringOutput)
}

// The update time of the Listener.
func (o ListenersListenerOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListener) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type ListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (ListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListener)(nil)).Elem()
}

func (o ListenersListenerArrayOutput) ToListenersListenerArrayOutput() ListenersListenerArrayOutput {
	return o
}

func (o ListenersListenerArrayOutput) ToListenersListenerArrayOutputWithContext(ctx context.Context) ListenersListenerArrayOutput {
	return o
}

func (o ListenersListenerArrayOutput) Index(i pulumi.IntInput) ListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenersListener {
		return vs[0].([]ListenersListener)[vs[1].(int)]
	}).(ListenersListenerOutput)
}

type ListenersListenerDomainExtension struct {
	// The server certificate ID that domain used.
	CertificateId string `pulumi:"certificateId"`
	// The domain.
	Domain string `pulumi:"domain"`
	// The extension domain ID.
	DomainExtensionId string `pulumi:"domainExtensionId"`
	// The ID of the Listener.
	ListenerId string `pulumi:"listenerId"`
}

// ListenersListenerDomainExtensionInput is an input type that accepts ListenersListenerDomainExtensionArgs and ListenersListenerDomainExtensionOutput values.
// You can construct a concrete instance of `ListenersListenerDomainExtensionInput` via:
//
//	ListenersListenerDomainExtensionArgs{...}
type ListenersListenerDomainExtensionInput interface {
	pulumi.Input

	ToListenersListenerDomainExtensionOutput() ListenersListenerDomainExtensionOutput
	ToListenersListenerDomainExtensionOutputWithContext(context.Context) ListenersListenerDomainExtensionOutput
}

type ListenersListenerDomainExtensionArgs struct {
	// The server certificate ID that domain used.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	// The domain.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The extension domain ID.
	DomainExtensionId pulumi.StringInput `pulumi:"domainExtensionId"`
	// The ID of the Listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
}

func (ListenersListenerDomainExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListenerDomainExtension)(nil)).Elem()
}

func (i ListenersListenerDomainExtensionArgs) ToListenersListenerDomainExtensionOutput() ListenersListenerDomainExtensionOutput {
	return i.ToListenersListenerDomainExtensionOutputWithContext(context.Background())
}

func (i ListenersListenerDomainExtensionArgs) ToListenersListenerDomainExtensionOutputWithContext(ctx context.Context) ListenersListenerDomainExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerDomainExtensionOutput)
}

// ListenersListenerDomainExtensionArrayInput is an input type that accepts ListenersListenerDomainExtensionArray and ListenersListenerDomainExtensionArrayOutput values.
// You can construct a concrete instance of `ListenersListenerDomainExtensionArrayInput` via:
//
//	ListenersListenerDomainExtensionArray{ ListenersListenerDomainExtensionArgs{...} }
type ListenersListenerDomainExtensionArrayInput interface {
	pulumi.Input

	ToListenersListenerDomainExtensionArrayOutput() ListenersListenerDomainExtensionArrayOutput
	ToListenersListenerDomainExtensionArrayOutputWithContext(context.Context) ListenersListenerDomainExtensionArrayOutput
}

type ListenersListenerDomainExtensionArray []ListenersListenerDomainExtensionInput

func (ListenersListenerDomainExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListenerDomainExtension)(nil)).Elem()
}

func (i ListenersListenerDomainExtensionArray) ToListenersListenerDomainExtensionArrayOutput() ListenersListenerDomainExtensionArrayOutput {
	return i.ToListenersListenerDomainExtensionArrayOutputWithContext(context.Background())
}

func (i ListenersListenerDomainExtensionArray) ToListenersListenerDomainExtensionArrayOutputWithContext(ctx context.Context) ListenersListenerDomainExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerDomainExtensionArrayOutput)
}

type ListenersListenerDomainExtensionOutput struct{ *pulumi.OutputState }

func (ListenersListenerDomainExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListenerDomainExtension)(nil)).Elem()
}

func (o ListenersListenerDomainExtensionOutput) ToListenersListenerDomainExtensionOutput() ListenersListenerDomainExtensionOutput {
	return o
}

func (o ListenersListenerDomainExtensionOutput) ToListenersListenerDomainExtensionOutputWithContext(ctx context.Context) ListenersListenerDomainExtensionOutput {
	return o
}

// The server certificate ID that domain used.
func (o ListenersListenerDomainExtensionOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerDomainExtension) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The domain.
func (o ListenersListenerDomainExtensionOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerDomainExtension) string { return v.Domain }).(pulumi.StringOutput)
}

// The extension domain ID.
func (o ListenersListenerDomainExtensionOutput) DomainExtensionId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerDomainExtension) string { return v.DomainExtensionId }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o ListenersListenerDomainExtensionOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerDomainExtension) string { return v.ListenerId }).(pulumi.StringOutput)
}

type ListenersListenerDomainExtensionArrayOutput struct{ *pulumi.OutputState }

func (ListenersListenerDomainExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListenerDomainExtension)(nil)).Elem()
}

func (o ListenersListenerDomainExtensionArrayOutput) ToListenersListenerDomainExtensionArrayOutput() ListenersListenerDomainExtensionArrayOutput {
	return o
}

func (o ListenersListenerDomainExtensionArrayOutput) ToListenersListenerDomainExtensionArrayOutputWithContext(ctx context.Context) ListenersListenerDomainExtensionArrayOutput {
	return o
}

func (o ListenersListenerDomainExtensionArrayOutput) Index(i pulumi.IntInput) ListenersListenerDomainExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenersListenerDomainExtension {
		return vs[0].([]ListenersListenerDomainExtension)[vs[1].(int)]
	}).(ListenersListenerDomainExtensionOutput)
}

type ListenersListenerServerGroup struct {
	// The ID of server group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The name of server group.
	ServerGroupName string `pulumi:"serverGroupName"`
}

// ListenersListenerServerGroupInput is an input type that accepts ListenersListenerServerGroupArgs and ListenersListenerServerGroupOutput values.
// You can construct a concrete instance of `ListenersListenerServerGroupInput` via:
//
//	ListenersListenerServerGroupArgs{...}
type ListenersListenerServerGroupInput interface {
	pulumi.Input

	ToListenersListenerServerGroupOutput() ListenersListenerServerGroupOutput
	ToListenersListenerServerGroupOutputWithContext(context.Context) ListenersListenerServerGroupOutput
}

type ListenersListenerServerGroupArgs struct {
	// The ID of server group.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The name of server group.
	ServerGroupName pulumi.StringInput `pulumi:"serverGroupName"`
}

func (ListenersListenerServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListenerServerGroup)(nil)).Elem()
}

func (i ListenersListenerServerGroupArgs) ToListenersListenerServerGroupOutput() ListenersListenerServerGroupOutput {
	return i.ToListenersListenerServerGroupOutputWithContext(context.Background())
}

func (i ListenersListenerServerGroupArgs) ToListenersListenerServerGroupOutputWithContext(ctx context.Context) ListenersListenerServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerServerGroupOutput)
}

// ListenersListenerServerGroupArrayInput is an input type that accepts ListenersListenerServerGroupArray and ListenersListenerServerGroupArrayOutput values.
// You can construct a concrete instance of `ListenersListenerServerGroupArrayInput` via:
//
//	ListenersListenerServerGroupArray{ ListenersListenerServerGroupArgs{...} }
type ListenersListenerServerGroupArrayInput interface {
	pulumi.Input

	ToListenersListenerServerGroupArrayOutput() ListenersListenerServerGroupArrayOutput
	ToListenersListenerServerGroupArrayOutputWithContext(context.Context) ListenersListenerServerGroupArrayOutput
}

type ListenersListenerServerGroupArray []ListenersListenerServerGroupInput

func (ListenersListenerServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListenerServerGroup)(nil)).Elem()
}

func (i ListenersListenerServerGroupArray) ToListenersListenerServerGroupArrayOutput() ListenersListenerServerGroupArrayOutput {
	return i.ToListenersListenerServerGroupArrayOutputWithContext(context.Background())
}

func (i ListenersListenerServerGroupArray) ToListenersListenerServerGroupArrayOutputWithContext(ctx context.Context) ListenersListenerServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenersListenerServerGroupArrayOutput)
}

type ListenersListenerServerGroupOutput struct{ *pulumi.OutputState }

func (ListenersListenerServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenersListenerServerGroup)(nil)).Elem()
}

func (o ListenersListenerServerGroupOutput) ToListenersListenerServerGroupOutput() ListenersListenerServerGroupOutput {
	return o
}

func (o ListenersListenerServerGroupOutput) ToListenersListenerServerGroupOutputWithContext(ctx context.Context) ListenersListenerServerGroupOutput {
	return o
}

// The ID of server group.
func (o ListenersListenerServerGroupOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerServerGroup) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The name of server group.
func (o ListenersListenerServerGroupOutput) ServerGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ListenersListenerServerGroup) string { return v.ServerGroupName }).(pulumi.StringOutput)
}

type ListenersListenerServerGroupArrayOutput struct{ *pulumi.OutputState }

func (ListenersListenerServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenersListenerServerGroup)(nil)).Elem()
}

func (o ListenersListenerServerGroupArrayOutput) ToListenersListenerServerGroupArrayOutput() ListenersListenerServerGroupArrayOutput {
	return o
}

func (o ListenersListenerServerGroupArrayOutput) ToListenersListenerServerGroupArrayOutputWithContext(ctx context.Context) ListenersListenerServerGroupArrayOutput {
	return o
}

func (o ListenersListenerServerGroupArrayOutput) Index(i pulumi.IntInput) ListenersListenerServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenersListenerServerGroup {
		return vs[0].([]ListenersListenerServerGroup)[vs[1].(int)]
	}).(ListenersListenerServerGroupOutput)
}

type RuleRedirectConfig struct {
	// The redirect domain, only support exact domain name.
	RedirectDomain *string `pulumi:"redirectDomain"`
	// The redirect http code, support 301(default), 302, 307, 308.
	RedirectHttpCode *string `pulumi:"redirectHttpCode"`
	// The redirect port.
	RedirectPort *string `pulumi:"redirectPort"`
	// The redirect protocol, support HTTP, HTTPS(default).
	RedirectProtocol *string `pulumi:"redirectProtocol"`
	// The redirect URI.
	RedirectUri *string `pulumi:"redirectUri"`
}

// RuleRedirectConfigInput is an input type that accepts RuleRedirectConfigArgs and RuleRedirectConfigOutput values.
// You can construct a concrete instance of `RuleRedirectConfigInput` via:
//
//	RuleRedirectConfigArgs{...}
type RuleRedirectConfigInput interface {
	pulumi.Input

	ToRuleRedirectConfigOutput() RuleRedirectConfigOutput
	ToRuleRedirectConfigOutputWithContext(context.Context) RuleRedirectConfigOutput
}

type RuleRedirectConfigArgs struct {
	// The redirect domain, only support exact domain name.
	RedirectDomain pulumi.StringPtrInput `pulumi:"redirectDomain"`
	// The redirect http code, support 301(default), 302, 307, 308.
	RedirectHttpCode pulumi.StringPtrInput `pulumi:"redirectHttpCode"`
	// The redirect port.
	RedirectPort pulumi.StringPtrInput `pulumi:"redirectPort"`
	// The redirect protocol, support HTTP, HTTPS(default).
	RedirectProtocol pulumi.StringPtrInput `pulumi:"redirectProtocol"`
	// The redirect URI.
	RedirectUri pulumi.StringPtrInput `pulumi:"redirectUri"`
}

func (RuleRedirectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRedirectConfig)(nil)).Elem()
}

func (i RuleRedirectConfigArgs) ToRuleRedirectConfigOutput() RuleRedirectConfigOutput {
	return i.ToRuleRedirectConfigOutputWithContext(context.Background())
}

func (i RuleRedirectConfigArgs) ToRuleRedirectConfigOutputWithContext(ctx context.Context) RuleRedirectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRedirectConfigOutput)
}

func (i RuleRedirectConfigArgs) ToRuleRedirectConfigPtrOutput() RuleRedirectConfigPtrOutput {
	return i.ToRuleRedirectConfigPtrOutputWithContext(context.Background())
}

func (i RuleRedirectConfigArgs) ToRuleRedirectConfigPtrOutputWithContext(ctx context.Context) RuleRedirectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRedirectConfigOutput).ToRuleRedirectConfigPtrOutputWithContext(ctx)
}

// RuleRedirectConfigPtrInput is an input type that accepts RuleRedirectConfigArgs, RuleRedirectConfigPtr and RuleRedirectConfigPtrOutput values.
// You can construct a concrete instance of `RuleRedirectConfigPtrInput` via:
//
//	        RuleRedirectConfigArgs{...}
//
//	or:
//
//	        nil
type RuleRedirectConfigPtrInput interface {
	pulumi.Input

	ToRuleRedirectConfigPtrOutput() RuleRedirectConfigPtrOutput
	ToRuleRedirectConfigPtrOutputWithContext(context.Context) RuleRedirectConfigPtrOutput
}

type ruleRedirectConfigPtrType RuleRedirectConfigArgs

func RuleRedirectConfigPtr(v *RuleRedirectConfigArgs) RuleRedirectConfigPtrInput {
	return (*ruleRedirectConfigPtrType)(v)
}

func (*ruleRedirectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRedirectConfig)(nil)).Elem()
}

func (i *ruleRedirectConfigPtrType) ToRuleRedirectConfigPtrOutput() RuleRedirectConfigPtrOutput {
	return i.ToRuleRedirectConfigPtrOutputWithContext(context.Background())
}

func (i *ruleRedirectConfigPtrType) ToRuleRedirectConfigPtrOutputWithContext(ctx context.Context) RuleRedirectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRedirectConfigPtrOutput)
}

type RuleRedirectConfigOutput struct{ *pulumi.OutputState }

func (RuleRedirectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRedirectConfig)(nil)).Elem()
}

func (o RuleRedirectConfigOutput) ToRuleRedirectConfigOutput() RuleRedirectConfigOutput {
	return o
}

func (o RuleRedirectConfigOutput) ToRuleRedirectConfigOutputWithContext(ctx context.Context) RuleRedirectConfigOutput {
	return o
}

func (o RuleRedirectConfigOutput) ToRuleRedirectConfigPtrOutput() RuleRedirectConfigPtrOutput {
	return o.ToRuleRedirectConfigPtrOutputWithContext(context.Background())
}

func (o RuleRedirectConfigOutput) ToRuleRedirectConfigPtrOutputWithContext(ctx context.Context) RuleRedirectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleRedirectConfig) *RuleRedirectConfig {
		return &v
	}).(RuleRedirectConfigPtrOutput)
}

// The redirect domain, only support exact domain name.
func (o RuleRedirectConfigOutput) RedirectDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleRedirectConfig) *string { return v.RedirectDomain }).(pulumi.StringPtrOutput)
}

// The redirect http code, support 301(default), 302, 307, 308.
func (o RuleRedirectConfigOutput) RedirectHttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleRedirectConfig) *string { return v.RedirectHttpCode }).(pulumi.StringPtrOutput)
}

// The redirect port.
func (o RuleRedirectConfigOutput) RedirectPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleRedirectConfig) *string { return v.RedirectPort }).(pulumi.StringPtrOutput)
}

// The redirect protocol, support HTTP, HTTPS(default).
func (o RuleRedirectConfigOutput) RedirectProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleRedirectConfig) *string { return v.RedirectProtocol }).(pulumi.StringPtrOutput)
}

// The redirect URI.
func (o RuleRedirectConfigOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleRedirectConfig) *string { return v.RedirectUri }).(pulumi.StringPtrOutput)
}

type RuleRedirectConfigPtrOutput struct{ *pulumi.OutputState }

func (RuleRedirectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRedirectConfig)(nil)).Elem()
}

func (o RuleRedirectConfigPtrOutput) ToRuleRedirectConfigPtrOutput() RuleRedirectConfigPtrOutput {
	return o
}

func (o RuleRedirectConfigPtrOutput) ToRuleRedirectConfigPtrOutputWithContext(ctx context.Context) RuleRedirectConfigPtrOutput {
	return o
}

func (o RuleRedirectConfigPtrOutput) Elem() RuleRedirectConfigOutput {
	return o.ApplyT(func(v *RuleRedirectConfig) RuleRedirectConfig {
		if v != nil {
			return *v
		}
		var ret RuleRedirectConfig
		return ret
	}).(RuleRedirectConfigOutput)
}

// The redirect domain, only support exact domain name.
func (o RuleRedirectConfigPtrOutput) RedirectDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedirectDomain
	}).(pulumi.StringPtrOutput)
}

// The redirect http code, support 301(default), 302, 307, 308.
func (o RuleRedirectConfigPtrOutput) RedirectHttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedirectHttpCode
	}).(pulumi.StringPtrOutput)
}

// The redirect port.
func (o RuleRedirectConfigPtrOutput) RedirectPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedirectPort
	}).(pulumi.StringPtrOutput)
}

// The redirect protocol, support HTTP, HTTPS(default).
func (o RuleRedirectConfigPtrOutput) RedirectProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedirectProtocol
	}).(pulumi.StringPtrOutput)
}

// The redirect URI.
func (o RuleRedirectConfigPtrOutput) RedirectUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedirectConfig) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUri
	}).(pulumi.StringPtrOutput)
}

type RuleRewriteConfig struct {
	// Rewrite path.
	RewritePath string `pulumi:"rewritePath"`
}

// RuleRewriteConfigInput is an input type that accepts RuleRewriteConfigArgs and RuleRewriteConfigOutput values.
// You can construct a concrete instance of `RuleRewriteConfigInput` via:
//
//	RuleRewriteConfigArgs{...}
type RuleRewriteConfigInput interface {
	pulumi.Input

	ToRuleRewriteConfigOutput() RuleRewriteConfigOutput
	ToRuleRewriteConfigOutputWithContext(context.Context) RuleRewriteConfigOutput
}

type RuleRewriteConfigArgs struct {
	// Rewrite path.
	RewritePath pulumi.StringInput `pulumi:"rewritePath"`
}

func (RuleRewriteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRewriteConfig)(nil)).Elem()
}

func (i RuleRewriteConfigArgs) ToRuleRewriteConfigOutput() RuleRewriteConfigOutput {
	return i.ToRuleRewriteConfigOutputWithContext(context.Background())
}

func (i RuleRewriteConfigArgs) ToRuleRewriteConfigOutputWithContext(ctx context.Context) RuleRewriteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRewriteConfigOutput)
}

func (i RuleRewriteConfigArgs) ToRuleRewriteConfigPtrOutput() RuleRewriteConfigPtrOutput {
	return i.ToRuleRewriteConfigPtrOutputWithContext(context.Background())
}

func (i RuleRewriteConfigArgs) ToRuleRewriteConfigPtrOutputWithContext(ctx context.Context) RuleRewriteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRewriteConfigOutput).ToRuleRewriteConfigPtrOutputWithContext(ctx)
}

// RuleRewriteConfigPtrInput is an input type that accepts RuleRewriteConfigArgs, RuleRewriteConfigPtr and RuleRewriteConfigPtrOutput values.
// You can construct a concrete instance of `RuleRewriteConfigPtrInput` via:
//
//	        RuleRewriteConfigArgs{...}
//
//	or:
//
//	        nil
type RuleRewriteConfigPtrInput interface {
	pulumi.Input

	ToRuleRewriteConfigPtrOutput() RuleRewriteConfigPtrOutput
	ToRuleRewriteConfigPtrOutputWithContext(context.Context) RuleRewriteConfigPtrOutput
}

type ruleRewriteConfigPtrType RuleRewriteConfigArgs

func RuleRewriteConfigPtr(v *RuleRewriteConfigArgs) RuleRewriteConfigPtrInput {
	return (*ruleRewriteConfigPtrType)(v)
}

func (*ruleRewriteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRewriteConfig)(nil)).Elem()
}

func (i *ruleRewriteConfigPtrType) ToRuleRewriteConfigPtrOutput() RuleRewriteConfigPtrOutput {
	return i.ToRuleRewriteConfigPtrOutputWithContext(context.Background())
}

func (i *ruleRewriteConfigPtrType) ToRuleRewriteConfigPtrOutputWithContext(ctx context.Context) RuleRewriteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRewriteConfigPtrOutput)
}

type RuleRewriteConfigOutput struct{ *pulumi.OutputState }

func (RuleRewriteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRewriteConfig)(nil)).Elem()
}

func (o RuleRewriteConfigOutput) ToRuleRewriteConfigOutput() RuleRewriteConfigOutput {
	return o
}

func (o RuleRewriteConfigOutput) ToRuleRewriteConfigOutputWithContext(ctx context.Context) RuleRewriteConfigOutput {
	return o
}

func (o RuleRewriteConfigOutput) ToRuleRewriteConfigPtrOutput() RuleRewriteConfigPtrOutput {
	return o.ToRuleRewriteConfigPtrOutputWithContext(context.Background())
}

func (o RuleRewriteConfigOutput) ToRuleRewriteConfigPtrOutputWithContext(ctx context.Context) RuleRewriteConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleRewriteConfig) *RuleRewriteConfig {
		return &v
	}).(RuleRewriteConfigPtrOutput)
}

// Rewrite path.
func (o RuleRewriteConfigOutput) RewritePath() pulumi.StringOutput {
	return o.ApplyT(func(v RuleRewriteConfig) string { return v.RewritePath }).(pulumi.StringOutput)
}

type RuleRewriteConfigPtrOutput struct{ *pulumi.OutputState }

func (RuleRewriteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRewriteConfig)(nil)).Elem()
}

func (o RuleRewriteConfigPtrOutput) ToRuleRewriteConfigPtrOutput() RuleRewriteConfigPtrOutput {
	return o
}

func (o RuleRewriteConfigPtrOutput) ToRuleRewriteConfigPtrOutputWithContext(ctx context.Context) RuleRewriteConfigPtrOutput {
	return o
}

func (o RuleRewriteConfigPtrOutput) Elem() RuleRewriteConfigOutput {
	return o.ApplyT(func(v *RuleRewriteConfig) RuleRewriteConfig {
		if v != nil {
			return *v
		}
		var ret RuleRewriteConfig
		return ret
	}).(RuleRewriteConfigOutput)
}

// Rewrite path.
func (o RuleRewriteConfigPtrOutput) RewritePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRewriteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.RewritePath
	}).(pulumi.StringPtrOutput)
}

type RulesRule struct {
	// The Description of Rule.
	Description string `pulumi:"description"`
	// The Domain of Rule.
	Domain string `pulumi:"domain"`
	// The Id of Rule.
	Id string `pulumi:"id"`
	// Redirect related configuration.
	RedirectConfigs []RulesRuleRedirectConfig `pulumi:"redirectConfigs"`
	// The list of rewrite configurations.
	RewriteConfigs []RulesRuleRewriteConfig `pulumi:"rewriteConfigs"`
	// Rewrite configuration switch for forwarding rules, only allows configuration and takes effect when RuleAction is empty (i.e., forwarding to server group). Only available for whitelist users, please submit an application to experience. Supported values are as follows:
	// on: enable.
	// off: disable.
	RewriteEnabled string `pulumi:"rewriteEnabled"`
	// The forwarding rule action, if this parameter is empty, forward to server group, if value is `Redirect`, will redirect.
	RuleAction string `pulumi:"ruleAction"`
	// The Id of Rule.
	RuleId string `pulumi:"ruleId"`
	// The Id of Server Group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// Forwarding rule QPS rate limiting switch:
	// on: enable.
	// off: disable (default).
	TrafficLimitEnabled string `pulumi:"trafficLimitEnabled"`
	// When Rules.N.TrafficLimitEnabled is turned on, this field is required. Requests per second. Valid values are between 100 and 100000.
	TrafficLimitQps int `pulumi:"trafficLimitQps"`
	// The Url of Rule.
	Url string `pulumi:"url"`
}

// RulesRuleInput is an input type that accepts RulesRuleArgs and RulesRuleOutput values.
// You can construct a concrete instance of `RulesRuleInput` via:
//
//	RulesRuleArgs{...}
type RulesRuleInput interface {
	pulumi.Input

	ToRulesRuleOutput() RulesRuleOutput
	ToRulesRuleOutputWithContext(context.Context) RulesRuleOutput
}

type RulesRuleArgs struct {
	// The Description of Rule.
	Description pulumi.StringInput `pulumi:"description"`
	// The Domain of Rule.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The Id of Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// Redirect related configuration.
	RedirectConfigs RulesRuleRedirectConfigArrayInput `pulumi:"redirectConfigs"`
	// The list of rewrite configurations.
	RewriteConfigs RulesRuleRewriteConfigArrayInput `pulumi:"rewriteConfigs"`
	// Rewrite configuration switch for forwarding rules, only allows configuration and takes effect when RuleAction is empty (i.e., forwarding to server group). Only available for whitelist users, please submit an application to experience. Supported values are as follows:
	// on: enable.
	// off: disable.
	RewriteEnabled pulumi.StringInput `pulumi:"rewriteEnabled"`
	// The forwarding rule action, if this parameter is empty, forward to server group, if value is `Redirect`, will redirect.
	RuleAction pulumi.StringInput `pulumi:"ruleAction"`
	// The Id of Rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The Id of Server Group.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// Forwarding rule QPS rate limiting switch:
	// on: enable.
	// off: disable (default).
	TrafficLimitEnabled pulumi.StringInput `pulumi:"trafficLimitEnabled"`
	// When Rules.N.TrafficLimitEnabled is turned on, this field is required. Requests per second. Valid values are between 100 and 100000.
	TrafficLimitQps pulumi.IntInput `pulumi:"trafficLimitQps"`
	// The Url of Rule.
	Url pulumi.StringInput `pulumi:"url"`
}

func (RulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRule)(nil)).Elem()
}

func (i RulesRuleArgs) ToRulesRuleOutput() RulesRuleOutput {
	return i.ToRulesRuleOutputWithContext(context.Background())
}

func (i RulesRuleArgs) ToRulesRuleOutputWithContext(ctx context.Context) RulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleOutput)
}

// RulesRuleArrayInput is an input type that accepts RulesRuleArray and RulesRuleArrayOutput values.
// You can construct a concrete instance of `RulesRuleArrayInput` via:
//
//	RulesRuleArray{ RulesRuleArgs{...} }
type RulesRuleArrayInput interface {
	pulumi.Input

	ToRulesRuleArrayOutput() RulesRuleArrayOutput
	ToRulesRuleArrayOutputWithContext(context.Context) RulesRuleArrayOutput
}

type RulesRuleArray []RulesRuleInput

func (RulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRule)(nil)).Elem()
}

func (i RulesRuleArray) ToRulesRuleArrayOutput() RulesRuleArrayOutput {
	return i.ToRulesRuleArrayOutputWithContext(context.Background())
}

func (i RulesRuleArray) ToRulesRuleArrayOutputWithContext(ctx context.Context) RulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleArrayOutput)
}

type RulesRuleOutput struct{ *pulumi.OutputState }

func (RulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRule)(nil)).Elem()
}

func (o RulesRuleOutput) ToRulesRuleOutput() RulesRuleOutput {
	return o
}

func (o RulesRuleOutput) ToRulesRuleOutputWithContext(ctx context.Context) RulesRuleOutput {
	return o
}

// The Description of Rule.
func (o RulesRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Description }).(pulumi.StringOutput)
}

// The Domain of Rule.
func (o RulesRuleOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Domain }).(pulumi.StringOutput)
}

// The Id of Rule.
func (o RulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// Redirect related configuration.
func (o RulesRuleOutput) RedirectConfigs() RulesRuleRedirectConfigArrayOutput {
	return o.ApplyT(func(v RulesRule) []RulesRuleRedirectConfig { return v.RedirectConfigs }).(RulesRuleRedirectConfigArrayOutput)
}

// The list of rewrite configurations.
func (o RulesRuleOutput) RewriteConfigs() RulesRuleRewriteConfigArrayOutput {
	return o.ApplyT(func(v RulesRule) []RulesRuleRewriteConfig { return v.RewriteConfigs }).(RulesRuleRewriteConfigArrayOutput)
}

// Rewrite configuration switch for forwarding rules, only allows configuration and takes effect when RuleAction is empty (i.e., forwarding to server group). Only available for whitelist users, please submit an application to experience. Supported values are as follows:
// on: enable.
// off: disable.
func (o RulesRuleOutput) RewriteEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.RewriteEnabled }).(pulumi.StringOutput)
}

// The forwarding rule action, if this parameter is empty, forward to server group, if value is `Redirect`, will redirect.
func (o RulesRuleOutput) RuleAction() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.RuleAction }).(pulumi.StringOutput)
}

// The Id of Rule.
func (o RulesRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The Id of Server Group.
func (o RulesRuleOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// Forwarding rule QPS rate limiting switch:
// on: enable.
// off: disable (default).
func (o RulesRuleOutput) TrafficLimitEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.TrafficLimitEnabled }).(pulumi.StringOutput)
}

// When Rules.N.TrafficLimitEnabled is turned on, this field is required. Requests per second. Valid values are between 100 and 100000.
func (o RulesRuleOutput) TrafficLimitQps() pulumi.IntOutput {
	return o.ApplyT(func(v RulesRule) int { return v.TrafficLimitQps }).(pulumi.IntOutput)
}

// The Url of Rule.
func (o RulesRuleOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRule) string { return v.Url }).(pulumi.StringOutput)
}

type RulesRuleArrayOutput struct{ *pulumi.OutputState }

func (RulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRule)(nil)).Elem()
}

func (o RulesRuleArrayOutput) ToRulesRuleArrayOutput() RulesRuleArrayOutput {
	return o
}

func (o RulesRuleArrayOutput) ToRulesRuleArrayOutputWithContext(ctx context.Context) RulesRuleArrayOutput {
	return o
}

func (o RulesRuleArrayOutput) Index(i pulumi.IntInput) RulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesRule {
		return vs[0].([]RulesRule)[vs[1].(int)]
	}).(RulesRuleOutput)
}

type RulesRuleRedirectConfig struct {
	// The redirect domain.
	RedirectDomain string `pulumi:"redirectDomain"`
	// The redirect HTTP code,support 301(default), 302, 307, 308.
	RedirectHttpCode string `pulumi:"redirectHttpCode"`
	// The redirect port.
	RedirectPort string `pulumi:"redirectPort"`
	// The redirect protocol,support HTTP,HTTPS(default).
	RedirectProtocol string `pulumi:"redirectProtocol"`
	// The redirect URI.
	RedirectUri string `pulumi:"redirectUri"`
}

// RulesRuleRedirectConfigInput is an input type that accepts RulesRuleRedirectConfigArgs and RulesRuleRedirectConfigOutput values.
// You can construct a concrete instance of `RulesRuleRedirectConfigInput` via:
//
//	RulesRuleRedirectConfigArgs{...}
type RulesRuleRedirectConfigInput interface {
	pulumi.Input

	ToRulesRuleRedirectConfigOutput() RulesRuleRedirectConfigOutput
	ToRulesRuleRedirectConfigOutputWithContext(context.Context) RulesRuleRedirectConfigOutput
}

type RulesRuleRedirectConfigArgs struct {
	// The redirect domain.
	RedirectDomain pulumi.StringInput `pulumi:"redirectDomain"`
	// The redirect HTTP code,support 301(default), 302, 307, 308.
	RedirectHttpCode pulumi.StringInput `pulumi:"redirectHttpCode"`
	// The redirect port.
	RedirectPort pulumi.StringInput `pulumi:"redirectPort"`
	// The redirect protocol,support HTTP,HTTPS(default).
	RedirectProtocol pulumi.StringInput `pulumi:"redirectProtocol"`
	// The redirect URI.
	RedirectUri pulumi.StringInput `pulumi:"redirectUri"`
}

func (RulesRuleRedirectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRuleRedirectConfig)(nil)).Elem()
}

func (i RulesRuleRedirectConfigArgs) ToRulesRuleRedirectConfigOutput() RulesRuleRedirectConfigOutput {
	return i.ToRulesRuleRedirectConfigOutputWithContext(context.Background())
}

func (i RulesRuleRedirectConfigArgs) ToRulesRuleRedirectConfigOutputWithContext(ctx context.Context) RulesRuleRedirectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleRedirectConfigOutput)
}

// RulesRuleRedirectConfigArrayInput is an input type that accepts RulesRuleRedirectConfigArray and RulesRuleRedirectConfigArrayOutput values.
// You can construct a concrete instance of `RulesRuleRedirectConfigArrayInput` via:
//
//	RulesRuleRedirectConfigArray{ RulesRuleRedirectConfigArgs{...} }
type RulesRuleRedirectConfigArrayInput interface {
	pulumi.Input

	ToRulesRuleRedirectConfigArrayOutput() RulesRuleRedirectConfigArrayOutput
	ToRulesRuleRedirectConfigArrayOutputWithContext(context.Context) RulesRuleRedirectConfigArrayOutput
}

type RulesRuleRedirectConfigArray []RulesRuleRedirectConfigInput

func (RulesRuleRedirectConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRuleRedirectConfig)(nil)).Elem()
}

func (i RulesRuleRedirectConfigArray) ToRulesRuleRedirectConfigArrayOutput() RulesRuleRedirectConfigArrayOutput {
	return i.ToRulesRuleRedirectConfigArrayOutputWithContext(context.Background())
}

func (i RulesRuleRedirectConfigArray) ToRulesRuleRedirectConfigArrayOutputWithContext(ctx context.Context) RulesRuleRedirectConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleRedirectConfigArrayOutput)
}

type RulesRuleRedirectConfigOutput struct{ *pulumi.OutputState }

func (RulesRuleRedirectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRuleRedirectConfig)(nil)).Elem()
}

func (o RulesRuleRedirectConfigOutput) ToRulesRuleRedirectConfigOutput() RulesRuleRedirectConfigOutput {
	return o
}

func (o RulesRuleRedirectConfigOutput) ToRulesRuleRedirectConfigOutputWithContext(ctx context.Context) RulesRuleRedirectConfigOutput {
	return o
}

// The redirect domain.
func (o RulesRuleRedirectConfigOutput) RedirectDomain() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRuleRedirectConfig) string { return v.RedirectDomain }).(pulumi.StringOutput)
}

// The redirect HTTP code,support 301(default), 302, 307, 308.
func (o RulesRuleRedirectConfigOutput) RedirectHttpCode() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRuleRedirectConfig) string { return v.RedirectHttpCode }).(pulumi.StringOutput)
}

// The redirect port.
func (o RulesRuleRedirectConfigOutput) RedirectPort() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRuleRedirectConfig) string { return v.RedirectPort }).(pulumi.StringOutput)
}

// The redirect protocol,support HTTP,HTTPS(default).
func (o RulesRuleRedirectConfigOutput) RedirectProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRuleRedirectConfig) string { return v.RedirectProtocol }).(pulumi.StringOutput)
}

// The redirect URI.
func (o RulesRuleRedirectConfigOutput) RedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRuleRedirectConfig) string { return v.RedirectUri }).(pulumi.StringOutput)
}

type RulesRuleRedirectConfigArrayOutput struct{ *pulumi.OutputState }

func (RulesRuleRedirectConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRuleRedirectConfig)(nil)).Elem()
}

func (o RulesRuleRedirectConfigArrayOutput) ToRulesRuleRedirectConfigArrayOutput() RulesRuleRedirectConfigArrayOutput {
	return o
}

func (o RulesRuleRedirectConfigArrayOutput) ToRulesRuleRedirectConfigArrayOutputWithContext(ctx context.Context) RulesRuleRedirectConfigArrayOutput {
	return o
}

func (o RulesRuleRedirectConfigArrayOutput) Index(i pulumi.IntInput) RulesRuleRedirectConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesRuleRedirectConfig {
		return vs[0].([]RulesRuleRedirectConfig)[vs[1].(int)]
	}).(RulesRuleRedirectConfigOutput)
}

type RulesRuleRewriteConfig struct {
	// Rewrite path.
	RewritePath string `pulumi:"rewritePath"`
}

// RulesRuleRewriteConfigInput is an input type that accepts RulesRuleRewriteConfigArgs and RulesRuleRewriteConfigOutput values.
// You can construct a concrete instance of `RulesRuleRewriteConfigInput` via:
//
//	RulesRuleRewriteConfigArgs{...}
type RulesRuleRewriteConfigInput interface {
	pulumi.Input

	ToRulesRuleRewriteConfigOutput() RulesRuleRewriteConfigOutput
	ToRulesRuleRewriteConfigOutputWithContext(context.Context) RulesRuleRewriteConfigOutput
}

type RulesRuleRewriteConfigArgs struct {
	// Rewrite path.
	RewritePath pulumi.StringInput `pulumi:"rewritePath"`
}

func (RulesRuleRewriteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRuleRewriteConfig)(nil)).Elem()
}

func (i RulesRuleRewriteConfigArgs) ToRulesRuleRewriteConfigOutput() RulesRuleRewriteConfigOutput {
	return i.ToRulesRuleRewriteConfigOutputWithContext(context.Background())
}

func (i RulesRuleRewriteConfigArgs) ToRulesRuleRewriteConfigOutputWithContext(ctx context.Context) RulesRuleRewriteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleRewriteConfigOutput)
}

// RulesRuleRewriteConfigArrayInput is an input type that accepts RulesRuleRewriteConfigArray and RulesRuleRewriteConfigArrayOutput values.
// You can construct a concrete instance of `RulesRuleRewriteConfigArrayInput` via:
//
//	RulesRuleRewriteConfigArray{ RulesRuleRewriteConfigArgs{...} }
type RulesRuleRewriteConfigArrayInput interface {
	pulumi.Input

	ToRulesRuleRewriteConfigArrayOutput() RulesRuleRewriteConfigArrayOutput
	ToRulesRuleRewriteConfigArrayOutputWithContext(context.Context) RulesRuleRewriteConfigArrayOutput
}

type RulesRuleRewriteConfigArray []RulesRuleRewriteConfigInput

func (RulesRuleRewriteConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRuleRewriteConfig)(nil)).Elem()
}

func (i RulesRuleRewriteConfigArray) ToRulesRuleRewriteConfigArrayOutput() RulesRuleRewriteConfigArrayOutput {
	return i.ToRulesRuleRewriteConfigArrayOutputWithContext(context.Background())
}

func (i RulesRuleRewriteConfigArray) ToRulesRuleRewriteConfigArrayOutputWithContext(ctx context.Context) RulesRuleRewriteConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesRuleRewriteConfigArrayOutput)
}

type RulesRuleRewriteConfigOutput struct{ *pulumi.OutputState }

func (RulesRuleRewriteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesRuleRewriteConfig)(nil)).Elem()
}

func (o RulesRuleRewriteConfigOutput) ToRulesRuleRewriteConfigOutput() RulesRuleRewriteConfigOutput {
	return o
}

func (o RulesRuleRewriteConfigOutput) ToRulesRuleRewriteConfigOutputWithContext(ctx context.Context) RulesRuleRewriteConfigOutput {
	return o
}

// Rewrite path.
func (o RulesRuleRewriteConfigOutput) RewritePath() pulumi.StringOutput {
	return o.ApplyT(func(v RulesRuleRewriteConfig) string { return v.RewritePath }).(pulumi.StringOutput)
}

type RulesRuleRewriteConfigArrayOutput struct{ *pulumi.OutputState }

func (RulesRuleRewriteConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesRuleRewriteConfig)(nil)).Elem()
}

func (o RulesRuleRewriteConfigArrayOutput) ToRulesRuleRewriteConfigArrayOutput() RulesRuleRewriteConfigArrayOutput {
	return o
}

func (o RulesRuleRewriteConfigArrayOutput) ToRulesRuleRewriteConfigArrayOutputWithContext(ctx context.Context) RulesRuleRewriteConfigArrayOutput {
	return o
}

func (o RulesRuleRewriteConfigArrayOutput) Index(i pulumi.IntInput) RulesRuleRewriteConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesRuleRewriteConfig {
		return vs[0].([]RulesRuleRewriteConfig)[vs[1].(int)]
	}).(RulesRuleRewriteConfigOutput)
}

type ServerGroupHealthCheck struct {
	// The domain of health check.
	Domain *string `pulumi:"domain"`
	// The enable status of health check function. Valid values: `on`, `off`. Default is `on`.
	Enabled *string `pulumi:"enabled"`
	// The healthy threshold of health check. Valid value range in 2~10. Default is 3.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// The normal http status code of health check, the value can be `http2xx` or `http3xx` or `http4xx` or `http5xx`.
	HttpCode *string `pulumi:"httpCode"`
	// The http version of health check. Valid values: `HTTP1.0`, `HTTP1.1`. Default is `HTTP1.0`.
	HttpVersion *string `pulumi:"httpVersion"`
	// The interval executing health check. Unit: second. Valid value range in 1~300. Default is 2.
	Interval *int `pulumi:"interval"`
	// The method of health check. Valid values: `GET` or `HEAD`. Default is `HEAD`.
	Method *string `pulumi:"method"`
	// The response timeout of health check. Unit: second. Valid value range in 1~60. Default is 2.
	Timeout *int `pulumi:"timeout"`
	// The unhealthy threshold of health check. Valid value range in 2~10. Default is 3.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
	// The uri of health check.
	Uri *string `pulumi:"uri"`
}

// ServerGroupHealthCheckInput is an input type that accepts ServerGroupHealthCheckArgs and ServerGroupHealthCheckOutput values.
// You can construct a concrete instance of `ServerGroupHealthCheckInput` via:
//
//	ServerGroupHealthCheckArgs{...}
type ServerGroupHealthCheckInput interface {
	pulumi.Input

	ToServerGroupHealthCheckOutput() ServerGroupHealthCheckOutput
	ToServerGroupHealthCheckOutputWithContext(context.Context) ServerGroupHealthCheckOutput
}

type ServerGroupHealthCheckArgs struct {
	// The domain of health check.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The enable status of health check function. Valid values: `on`, `off`. Default is `on`.
	Enabled pulumi.StringPtrInput `pulumi:"enabled"`
	// The healthy threshold of health check. Valid value range in 2~10. Default is 3.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// The normal http status code of health check, the value can be `http2xx` or `http3xx` or `http4xx` or `http5xx`.
	HttpCode pulumi.StringPtrInput `pulumi:"httpCode"`
	// The http version of health check. Valid values: `HTTP1.0`, `HTTP1.1`. Default is `HTTP1.0`.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// The interval executing health check. Unit: second. Valid value range in 1~300. Default is 2.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The method of health check. Valid values: `GET` or `HEAD`. Default is `HEAD`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The response timeout of health check. Unit: second. Valid value range in 1~60. Default is 2.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The unhealthy threshold of health check. Valid value range in 2~10. Default is 3.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
	// The uri of health check.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (ServerGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupHealthCheck)(nil)).Elem()
}

func (i ServerGroupHealthCheckArgs) ToServerGroupHealthCheckOutput() ServerGroupHealthCheckOutput {
	return i.ToServerGroupHealthCheckOutputWithContext(context.Background())
}

func (i ServerGroupHealthCheckArgs) ToServerGroupHealthCheckOutputWithContext(ctx context.Context) ServerGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupHealthCheckOutput)
}

func (i ServerGroupHealthCheckArgs) ToServerGroupHealthCheckPtrOutput() ServerGroupHealthCheckPtrOutput {
	return i.ToServerGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i ServerGroupHealthCheckArgs) ToServerGroupHealthCheckPtrOutputWithContext(ctx context.Context) ServerGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupHealthCheckOutput).ToServerGroupHealthCheckPtrOutputWithContext(ctx)
}

// ServerGroupHealthCheckPtrInput is an input type that accepts ServerGroupHealthCheckArgs, ServerGroupHealthCheckPtr and ServerGroupHealthCheckPtrOutput values.
// You can construct a concrete instance of `ServerGroupHealthCheckPtrInput` via:
//
//	        ServerGroupHealthCheckArgs{...}
//
//	or:
//
//	        nil
type ServerGroupHealthCheckPtrInput interface {
	pulumi.Input

	ToServerGroupHealthCheckPtrOutput() ServerGroupHealthCheckPtrOutput
	ToServerGroupHealthCheckPtrOutputWithContext(context.Context) ServerGroupHealthCheckPtrOutput
}

type serverGroupHealthCheckPtrType ServerGroupHealthCheckArgs

func ServerGroupHealthCheckPtr(v *ServerGroupHealthCheckArgs) ServerGroupHealthCheckPtrInput {
	return (*serverGroupHealthCheckPtrType)(v)
}

func (*serverGroupHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupHealthCheck)(nil)).Elem()
}

func (i *serverGroupHealthCheckPtrType) ToServerGroupHealthCheckPtrOutput() ServerGroupHealthCheckPtrOutput {
	return i.ToServerGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i *serverGroupHealthCheckPtrType) ToServerGroupHealthCheckPtrOutputWithContext(ctx context.Context) ServerGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupHealthCheckPtrOutput)
}

type ServerGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (ServerGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupHealthCheck)(nil)).Elem()
}

func (o ServerGroupHealthCheckOutput) ToServerGroupHealthCheckOutput() ServerGroupHealthCheckOutput {
	return o
}

func (o ServerGroupHealthCheckOutput) ToServerGroupHealthCheckOutputWithContext(ctx context.Context) ServerGroupHealthCheckOutput {
	return o
}

func (o ServerGroupHealthCheckOutput) ToServerGroupHealthCheckPtrOutput() ServerGroupHealthCheckPtrOutput {
	return o.ToServerGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (o ServerGroupHealthCheckOutput) ToServerGroupHealthCheckPtrOutputWithContext(ctx context.Context) ServerGroupHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerGroupHealthCheck) *ServerGroupHealthCheck {
		return &v
	}).(ServerGroupHealthCheckPtrOutput)
}

// The domain of health check.
func (o ServerGroupHealthCheckOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The enable status of health check function. Valid values: `on`, `off`. Default is `on`.
func (o ServerGroupHealthCheckOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *string { return v.Enabled }).(pulumi.StringPtrOutput)
}

// The healthy threshold of health check. Valid value range in 2~10. Default is 3.
func (o ServerGroupHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The normal http status code of health check, the value can be `http2xx` or `http3xx` or `http4xx` or `http5xx`.
func (o ServerGroupHealthCheckOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *string { return v.HttpCode }).(pulumi.StringPtrOutput)
}

// The http version of health check. Valid values: `HTTP1.0`, `HTTP1.1`. Default is `HTTP1.0`.
func (o ServerGroupHealthCheckOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// The interval executing health check. Unit: second. Valid value range in 1~300. Default is 2.
func (o ServerGroupHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The method of health check. Valid values: `GET` or `HEAD`. Default is `HEAD`.
func (o ServerGroupHealthCheckOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The response timeout of health check. Unit: second. Valid value range in 1~60. Default is 2.
func (o ServerGroupHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The unhealthy threshold of health check. Valid value range in 2~10. Default is 3.
func (o ServerGroupHealthCheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

// The uri of health check.
func (o ServerGroupHealthCheckOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheck) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type ServerGroupHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (ServerGroupHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupHealthCheck)(nil)).Elem()
}

func (o ServerGroupHealthCheckPtrOutput) ToServerGroupHealthCheckPtrOutput() ServerGroupHealthCheckPtrOutput {
	return o
}

func (o ServerGroupHealthCheckPtrOutput) ToServerGroupHealthCheckPtrOutputWithContext(ctx context.Context) ServerGroupHealthCheckPtrOutput {
	return o
}

func (o ServerGroupHealthCheckPtrOutput) Elem() ServerGroupHealthCheckOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) ServerGroupHealthCheck {
		if v != nil {
			return *v
		}
		var ret ServerGroupHealthCheck
		return ret
	}).(ServerGroupHealthCheckOutput)
}

// The domain of health check.
func (o ServerGroupHealthCheckPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// The enable status of health check function. Valid values: `on`, `off`. Default is `on`.
func (o ServerGroupHealthCheckPtrOutput) Enabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.StringPtrOutput)
}

// The healthy threshold of health check. Valid value range in 2~10. Default is 3.
func (o ServerGroupHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The normal http status code of health check, the value can be `http2xx` or `http3xx` or `http4xx` or `http5xx`.
func (o ServerGroupHealthCheckPtrOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.HttpCode
	}).(pulumi.StringPtrOutput)
}

// The http version of health check. Valid values: `HTTP1.0`, `HTTP1.1`. Default is `HTTP1.0`.
func (o ServerGroupHealthCheckPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// The interval executing health check. Unit: second. Valid value range in 1~300. Default is 2.
func (o ServerGroupHealthCheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// The method of health check. Valid values: `GET` or `HEAD`. Default is `HEAD`.
func (o ServerGroupHealthCheckPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The response timeout of health check. Unit: second. Valid value range in 1~60. Default is 2.
func (o ServerGroupHealthCheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The unhealthy threshold of health check. Valid value range in 2~10. Default is 3.
func (o ServerGroupHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The uri of health check.
func (o ServerGroupHealthCheckPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

type ServerGroupServersServer struct {
	// The description of the instance.
	Description string `pulumi:"description"`
	// The server id of instance in ServerGroup.
	Id string `pulumi:"id"`
	// The ID of ecs instance or the network card bound to ecs instance.
	InstanceId string `pulumi:"instanceId"`
	// The private ip of the instance.
	Ip string `pulumi:"ip"`
	// The port receiving request.
	Port int `pulumi:"port"`
	// The server id of instance in ServerGroup.
	ServerId string `pulumi:"serverId"`
	// The type of instance. Optional choice contains `ecs`, `eni`.
	Type string `pulumi:"type"`
	// The weight of the instance.
	Weight int `pulumi:"weight"`
}

// ServerGroupServersServerInput is an input type that accepts ServerGroupServersServerArgs and ServerGroupServersServerOutput values.
// You can construct a concrete instance of `ServerGroupServersServerInput` via:
//
//	ServerGroupServersServerArgs{...}
type ServerGroupServersServerInput interface {
	pulumi.Input

	ToServerGroupServersServerOutput() ServerGroupServersServerOutput
	ToServerGroupServersServerOutputWithContext(context.Context) ServerGroupServersServerOutput
}

type ServerGroupServersServerArgs struct {
	// The description of the instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The server id of instance in ServerGroup.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of ecs instance or the network card bound to ecs instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The private ip of the instance.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The port receiving request.
	Port pulumi.IntInput `pulumi:"port"`
	// The server id of instance in ServerGroup.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The type of instance. Optional choice contains `ecs`, `eni`.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of the instance.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ServerGroupServersServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupServersServer)(nil)).Elem()
}

func (i ServerGroupServersServerArgs) ToServerGroupServersServerOutput() ServerGroupServersServerOutput {
	return i.ToServerGroupServersServerOutputWithContext(context.Background())
}

func (i ServerGroupServersServerArgs) ToServerGroupServersServerOutputWithContext(ctx context.Context) ServerGroupServersServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupServersServerOutput)
}

// ServerGroupServersServerArrayInput is an input type that accepts ServerGroupServersServerArray and ServerGroupServersServerArrayOutput values.
// You can construct a concrete instance of `ServerGroupServersServerArrayInput` via:
//
//	ServerGroupServersServerArray{ ServerGroupServersServerArgs{...} }
type ServerGroupServersServerArrayInput interface {
	pulumi.Input

	ToServerGroupServersServerArrayOutput() ServerGroupServersServerArrayOutput
	ToServerGroupServersServerArrayOutputWithContext(context.Context) ServerGroupServersServerArrayOutput
}

type ServerGroupServersServerArray []ServerGroupServersServerInput

func (ServerGroupServersServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupServersServer)(nil)).Elem()
}

func (i ServerGroupServersServerArray) ToServerGroupServersServerArrayOutput() ServerGroupServersServerArrayOutput {
	return i.ToServerGroupServersServerArrayOutputWithContext(context.Background())
}

func (i ServerGroupServersServerArray) ToServerGroupServersServerArrayOutputWithContext(ctx context.Context) ServerGroupServersServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupServersServerArrayOutput)
}

type ServerGroupServersServerOutput struct{ *pulumi.OutputState }

func (ServerGroupServersServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupServersServer)(nil)).Elem()
}

func (o ServerGroupServersServerOutput) ToServerGroupServersServerOutput() ServerGroupServersServerOutput {
	return o
}

func (o ServerGroupServersServerOutput) ToServerGroupServersServerOutputWithContext(ctx context.Context) ServerGroupServersServerOutput {
	return o
}

// The description of the instance.
func (o ServerGroupServersServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.Description }).(pulumi.StringOutput)
}

// The server id of instance in ServerGroup.
func (o ServerGroupServersServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of ecs instance or the network card bound to ecs instance.
func (o ServerGroupServersServerOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The private ip of the instance.
func (o ServerGroupServersServerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.Ip }).(pulumi.StringOutput)
}

// The port receiving request.
func (o ServerGroupServersServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupServersServer) int { return v.Port }).(pulumi.IntOutput)
}

// The server id of instance in ServerGroup.
func (o ServerGroupServersServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.ServerId }).(pulumi.StringOutput)
}

// The type of instance. Optional choice contains `ecs`, `eni`.
func (o ServerGroupServersServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupServersServer) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of the instance.
func (o ServerGroupServersServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupServersServer) int { return v.Weight }).(pulumi.IntOutput)
}

type ServerGroupServersServerArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupServersServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupServersServer)(nil)).Elem()
}

func (o ServerGroupServersServerArrayOutput) ToServerGroupServersServerArrayOutput() ServerGroupServersServerArrayOutput {
	return o
}

func (o ServerGroupServersServerArrayOutput) ToServerGroupServersServerArrayOutputWithContext(ctx context.Context) ServerGroupServersServerArrayOutput {
	return o
}

func (o ServerGroupServersServerArrayOutput) Index(i pulumi.IntInput) ServerGroupServersServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupServersServer {
		return vs[0].([]ServerGroupServersServer)[vs[1].(int)]
	}).(ServerGroupServersServerOutput)
}

type ServerGroupStickySessionConfig struct {
	// The cookie name of the sticky session. This field is required when the value of the `stickySessionType` is `server`.
	Cookie *string `pulumi:"cookie"`
	// The cookie timeout of the sticky session. Unit: second. Valid value range in 1~86400. Default is 1000. This field is required when the value of the `stickySessionType` is `insert`.
	CookieTimeout *int `pulumi:"cookieTimeout"`
	// The enable status of sticky session. Valid values: `on`, `off`. Default is `off`.
	StickySessionEnabled *string `pulumi:"stickySessionEnabled"`
	// The cookie handle type of the sticky session. Valid values: `insert`, `server`. Default is `insert`. This field is required when the value of the `stickySessionEnabled` is `on`.
	StickySessionType *string `pulumi:"stickySessionType"`
}

// ServerGroupStickySessionConfigInput is an input type that accepts ServerGroupStickySessionConfigArgs and ServerGroupStickySessionConfigOutput values.
// You can construct a concrete instance of `ServerGroupStickySessionConfigInput` via:
//
//	ServerGroupStickySessionConfigArgs{...}
type ServerGroupStickySessionConfigInput interface {
	pulumi.Input

	ToServerGroupStickySessionConfigOutput() ServerGroupStickySessionConfigOutput
	ToServerGroupStickySessionConfigOutputWithContext(context.Context) ServerGroupStickySessionConfigOutput
}

type ServerGroupStickySessionConfigArgs struct {
	// The cookie name of the sticky session. This field is required when the value of the `stickySessionType` is `server`.
	Cookie pulumi.StringPtrInput `pulumi:"cookie"`
	// The cookie timeout of the sticky session. Unit: second. Valid value range in 1~86400. Default is 1000. This field is required when the value of the `stickySessionType` is `insert`.
	CookieTimeout pulumi.IntPtrInput `pulumi:"cookieTimeout"`
	// The enable status of sticky session. Valid values: `on`, `off`. Default is `off`.
	StickySessionEnabled pulumi.StringPtrInput `pulumi:"stickySessionEnabled"`
	// The cookie handle type of the sticky session. Valid values: `insert`, `server`. Default is `insert`. This field is required when the value of the `stickySessionEnabled` is `on`.
	StickySessionType pulumi.StringPtrInput `pulumi:"stickySessionType"`
}

func (ServerGroupStickySessionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupStickySessionConfig)(nil)).Elem()
}

func (i ServerGroupStickySessionConfigArgs) ToServerGroupStickySessionConfigOutput() ServerGroupStickySessionConfigOutput {
	return i.ToServerGroupStickySessionConfigOutputWithContext(context.Background())
}

func (i ServerGroupStickySessionConfigArgs) ToServerGroupStickySessionConfigOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupStickySessionConfigOutput)
}

func (i ServerGroupStickySessionConfigArgs) ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput {
	return i.ToServerGroupStickySessionConfigPtrOutputWithContext(context.Background())
}

func (i ServerGroupStickySessionConfigArgs) ToServerGroupStickySessionConfigPtrOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupStickySessionConfigOutput).ToServerGroupStickySessionConfigPtrOutputWithContext(ctx)
}

// ServerGroupStickySessionConfigPtrInput is an input type that accepts ServerGroupStickySessionConfigArgs, ServerGroupStickySessionConfigPtr and ServerGroupStickySessionConfigPtrOutput values.
// You can construct a concrete instance of `ServerGroupStickySessionConfigPtrInput` via:
//
//	        ServerGroupStickySessionConfigArgs{...}
//
//	or:
//
//	        nil
type ServerGroupStickySessionConfigPtrInput interface {
	pulumi.Input

	ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput
	ToServerGroupStickySessionConfigPtrOutputWithContext(context.Context) ServerGroupStickySessionConfigPtrOutput
}

type serverGroupStickySessionConfigPtrType ServerGroupStickySessionConfigArgs

func ServerGroupStickySessionConfigPtr(v *ServerGroupStickySessionConfigArgs) ServerGroupStickySessionConfigPtrInput {
	return (*serverGroupStickySessionConfigPtrType)(v)
}

func (*serverGroupStickySessionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupStickySessionConfig)(nil)).Elem()
}

func (i *serverGroupStickySessionConfigPtrType) ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput {
	return i.ToServerGroupStickySessionConfigPtrOutputWithContext(context.Background())
}

func (i *serverGroupStickySessionConfigPtrType) ToServerGroupStickySessionConfigPtrOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupStickySessionConfigPtrOutput)
}

type ServerGroupStickySessionConfigOutput struct{ *pulumi.OutputState }

func (ServerGroupStickySessionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupStickySessionConfig)(nil)).Elem()
}

func (o ServerGroupStickySessionConfigOutput) ToServerGroupStickySessionConfigOutput() ServerGroupStickySessionConfigOutput {
	return o
}

func (o ServerGroupStickySessionConfigOutput) ToServerGroupStickySessionConfigOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigOutput {
	return o
}

func (o ServerGroupStickySessionConfigOutput) ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput {
	return o.ToServerGroupStickySessionConfigPtrOutputWithContext(context.Background())
}

func (o ServerGroupStickySessionConfigOutput) ToServerGroupStickySessionConfigPtrOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerGroupStickySessionConfig) *ServerGroupStickySessionConfig {
		return &v
	}).(ServerGroupStickySessionConfigPtrOutput)
}

// The cookie name of the sticky session. This field is required when the value of the `stickySessionType` is `server`.
func (o ServerGroupStickySessionConfigOutput) Cookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *string { return v.Cookie }).(pulumi.StringPtrOutput)
}

// The cookie timeout of the sticky session. Unit: second. Valid value range in 1~86400. Default is 1000. This field is required when the value of the `stickySessionType` is `insert`.
func (o ServerGroupStickySessionConfigOutput) CookieTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *int { return v.CookieTimeout }).(pulumi.IntPtrOutput)
}

// The enable status of sticky session. Valid values: `on`, `off`. Default is `off`.
func (o ServerGroupStickySessionConfigOutput) StickySessionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *string { return v.StickySessionEnabled }).(pulumi.StringPtrOutput)
}

// The cookie handle type of the sticky session. Valid values: `insert`, `server`. Default is `insert`. This field is required when the value of the `stickySessionEnabled` is `on`.
func (o ServerGroupStickySessionConfigOutput) StickySessionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *string { return v.StickySessionType }).(pulumi.StringPtrOutput)
}

type ServerGroupStickySessionConfigPtrOutput struct{ *pulumi.OutputState }

func (ServerGroupStickySessionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupStickySessionConfig)(nil)).Elem()
}

func (o ServerGroupStickySessionConfigPtrOutput) ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput {
	return o
}

func (o ServerGroupStickySessionConfigPtrOutput) ToServerGroupStickySessionConfigPtrOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigPtrOutput {
	return o
}

func (o ServerGroupStickySessionConfigPtrOutput) Elem() ServerGroupStickySessionConfigOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) ServerGroupStickySessionConfig {
		if v != nil {
			return *v
		}
		var ret ServerGroupStickySessionConfig
		return ret
	}).(ServerGroupStickySessionConfigOutput)
}

// The cookie name of the sticky session. This field is required when the value of the `stickySessionType` is `server`.
func (o ServerGroupStickySessionConfigPtrOutput) Cookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cookie
	}).(pulumi.StringPtrOutput)
}

// The cookie timeout of the sticky session. Unit: second. Valid value range in 1~86400. Default is 1000. This field is required when the value of the `stickySessionType` is `insert`.
func (o ServerGroupStickySessionConfigPtrOutput) CookieTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) *int {
		if v == nil {
			return nil
		}
		return v.CookieTimeout
	}).(pulumi.IntPtrOutput)
}

// The enable status of sticky session. Valid values: `on`, `off`. Default is `off`.
func (o ServerGroupStickySessionConfigPtrOutput) StickySessionEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) *string {
		if v == nil {
			return nil
		}
		return v.StickySessionEnabled
	}).(pulumi.StringPtrOutput)
}

// The cookie handle type of the sticky session. Valid values: `insert`, `server`. Default is `insert`. This field is required when the value of the `stickySessionEnabled` is `on`.
func (o ServerGroupStickySessionConfigPtrOutput) StickySessionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) *string {
		if v == nil {
			return nil
		}
		return v.StickySessionType
	}).(pulumi.StringPtrOutput)
}

type ServerGroupsServerGroup struct {
	// The create time of the Alb server group.
	CreateTime string `pulumi:"createTime"`
	// The description of the server group server.
	Description string `pulumi:"description"`
	// The health check config of the Alb server group.
	HealthChecks []ServerGroupsServerGroupHealthCheck `pulumi:"healthChecks"`
	// The ID of the Alb server group.
	Id string `pulumi:"id"`
	// The listener information of the Alb server group.
	Listeners []string `pulumi:"listeners"`
	// The project name of Alb server group.
	ProjectName string `pulumi:"projectName"`
	// The scheduler algorithm of the Alb server group.
	Scheduler string `pulumi:"scheduler"`
	// The server count of the Alb server group.
	ServerCount int `pulumi:"serverCount"`
	// The ID of the Alb server group.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The name of the Alb server group.
	ServerGroupName string `pulumi:"serverGroupName"`
	// The type of Alb server group. Valid values: `instance`, `ip`.
	ServerGroupType string `pulumi:"serverGroupType"`
	// The server information of the Alb server group.
	Servers []ServerGroupsServerGroupServer `pulumi:"servers"`
	// The status of the Alb server group.
	Status string `pulumi:"status"`
	// The sticky session config of the Alb server group.
	StickySessionConfigs []ServerGroupsServerGroupStickySessionConfig `pulumi:"stickySessionConfigs"`
	// The update time of the Alb server group.
	UpdateTime string `pulumi:"updateTime"`
	// The vpc id of the Alb server group.
	VpcId string `pulumi:"vpcId"`
}

// ServerGroupsServerGroupInput is an input type that accepts ServerGroupsServerGroupArgs and ServerGroupsServerGroupOutput values.
// You can construct a concrete instance of `ServerGroupsServerGroupInput` via:
//
//	ServerGroupsServerGroupArgs{...}
type ServerGroupsServerGroupInput interface {
	pulumi.Input

	ToServerGroupsServerGroupOutput() ServerGroupsServerGroupOutput
	ToServerGroupsServerGroupOutputWithContext(context.Context) ServerGroupsServerGroupOutput
}

type ServerGroupsServerGroupArgs struct {
	// The create time of the Alb server group.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of the server group server.
	Description pulumi.StringInput `pulumi:"description"`
	// The health check config of the Alb server group.
	HealthChecks ServerGroupsServerGroupHealthCheckArrayInput `pulumi:"healthChecks"`
	// The ID of the Alb server group.
	Id pulumi.StringInput `pulumi:"id"`
	// The listener information of the Alb server group.
	Listeners pulumi.StringArrayInput `pulumi:"listeners"`
	// The project name of Alb server group.
	ProjectName pulumi.StringInput `pulumi:"projectName"`
	// The scheduler algorithm of the Alb server group.
	Scheduler pulumi.StringInput `pulumi:"scheduler"`
	// The server count of the Alb server group.
	ServerCount pulumi.IntInput `pulumi:"serverCount"`
	// The ID of the Alb server group.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The name of the Alb server group.
	ServerGroupName pulumi.StringInput `pulumi:"serverGroupName"`
	// The type of Alb server group. Valid values: `instance`, `ip`.
	ServerGroupType pulumi.StringInput `pulumi:"serverGroupType"`
	// The server information of the Alb server group.
	Servers ServerGroupsServerGroupServerArrayInput `pulumi:"servers"`
	// The status of the Alb server group.
	Status pulumi.StringInput `pulumi:"status"`
	// The sticky session config of the Alb server group.
	StickySessionConfigs ServerGroupsServerGroupStickySessionConfigArrayInput `pulumi:"stickySessionConfigs"`
	// The update time of the Alb server group.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
	// The vpc id of the Alb server group.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (ServerGroupsServerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsServerGroup)(nil)).Elem()
}

func (i ServerGroupsServerGroupArgs) ToServerGroupsServerGroupOutput() ServerGroupsServerGroupOutput {
	return i.ToServerGroupsServerGroupOutputWithContext(context.Background())
}

func (i ServerGroupsServerGroupArgs) ToServerGroupsServerGroupOutputWithContext(ctx context.Context) ServerGroupsServerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsServerGroupOutput)
}

// ServerGroupsServerGroupArrayInput is an input type that accepts ServerGroupsServerGroupArray and ServerGroupsServerGroupArrayOutput values.
// You can construct a concrete instance of `ServerGroupsServerGroupArrayInput` via:
//
//	ServerGroupsServerGroupArray{ ServerGroupsServerGroupArgs{...} }
type ServerGroupsServerGroupArrayInput interface {
	pulumi.Input

	ToServerGroupsServerGroupArrayOutput() ServerGroupsServerGroupArrayOutput
	ToServerGroupsServerGroupArrayOutputWithContext(context.Context) ServerGroupsServerGroupArrayOutput
}

type ServerGroupsServerGroupArray []ServerGroupsServerGroupInput

func (ServerGroupsServerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsServerGroup)(nil)).Elem()
}

func (i ServerGroupsServerGroupArray) ToServerGroupsServerGroupArrayOutput() ServerGroupsServerGroupArrayOutput {
	return i.ToServerGroupsServerGroupArrayOutputWithContext(context.Background())
}

func (i ServerGroupsServerGroupArray) ToServerGroupsServerGroupArrayOutputWithContext(ctx context.Context) ServerGroupsServerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsServerGroupArrayOutput)
}

type ServerGroupsServerGroupOutput struct{ *pulumi.OutputState }

func (ServerGroupsServerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsServerGroup)(nil)).Elem()
}

func (o ServerGroupsServerGroupOutput) ToServerGroupsServerGroupOutput() ServerGroupsServerGroupOutput {
	return o
}

func (o ServerGroupsServerGroupOutput) ToServerGroupsServerGroupOutputWithContext(ctx context.Context) ServerGroupsServerGroupOutput {
	return o
}

// The create time of the Alb server group.
func (o ServerGroupsServerGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the server group server.
func (o ServerGroupsServerGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The health check config of the Alb server group.
func (o ServerGroupsServerGroupOutput) HealthChecks() ServerGroupsServerGroupHealthCheckArrayOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) []ServerGroupsServerGroupHealthCheck { return v.HealthChecks }).(ServerGroupsServerGroupHealthCheckArrayOutput)
}

// The ID of the Alb server group.
func (o ServerGroupsServerGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The listener information of the Alb server group.
func (o ServerGroupsServerGroupOutput) Listeners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) []string { return v.Listeners }).(pulumi.StringArrayOutput)
}

// The project name of Alb server group.
func (o ServerGroupsServerGroupOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.ProjectName }).(pulumi.StringOutput)
}

// The scheduler algorithm of the Alb server group.
func (o ServerGroupsServerGroupOutput) Scheduler() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.Scheduler }).(pulumi.StringOutput)
}

// The server count of the Alb server group.
func (o ServerGroupsServerGroupOutput) ServerCount() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) int { return v.ServerCount }).(pulumi.IntOutput)
}

// The ID of the Alb server group.
func (o ServerGroupsServerGroupOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The name of the Alb server group.
func (o ServerGroupsServerGroupOutput) ServerGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.ServerGroupName }).(pulumi.StringOutput)
}

// The type of Alb server group. Valid values: `instance`, `ip`.
func (o ServerGroupsServerGroupOutput) ServerGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.ServerGroupType }).(pulumi.StringOutput)
}

// The server information of the Alb server group.
func (o ServerGroupsServerGroupOutput) Servers() ServerGroupsServerGroupServerArrayOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) []ServerGroupsServerGroupServer { return v.Servers }).(ServerGroupsServerGroupServerArrayOutput)
}

// The status of the Alb server group.
func (o ServerGroupsServerGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The sticky session config of the Alb server group.
func (o ServerGroupsServerGroupOutput) StickySessionConfigs() ServerGroupsServerGroupStickySessionConfigArrayOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) []ServerGroupsServerGroupStickySessionConfig {
		return v.StickySessionConfigs
	}).(ServerGroupsServerGroupStickySessionConfigArrayOutput)
}

// The update time of the Alb server group.
func (o ServerGroupsServerGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// The vpc id of the Alb server group.
func (o ServerGroupsServerGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

type ServerGroupsServerGroupArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupsServerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsServerGroup)(nil)).Elem()
}

func (o ServerGroupsServerGroupArrayOutput) ToServerGroupsServerGroupArrayOutput() ServerGroupsServerGroupArrayOutput {
	return o
}

func (o ServerGroupsServerGroupArrayOutput) ToServerGroupsServerGroupArrayOutputWithContext(ctx context.Context) ServerGroupsServerGroupArrayOutput {
	return o
}

func (o ServerGroupsServerGroupArrayOutput) Index(i pulumi.IntInput) ServerGroupsServerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupsServerGroup {
		return vs[0].([]ServerGroupsServerGroup)[vs[1].(int)]
	}).(ServerGroupsServerGroupOutput)
}

type ServerGroupsServerGroupHealthCheck struct {
	// The domain of health check.
	Domain string `pulumi:"domain"`
	// The enable status of health check function.
	Enabled string `pulumi:"enabled"`
	// The healthy threshold of health check.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// The normal http status code of health check.
	HttpCode *string `pulumi:"httpCode"`
	// The http version of health check.
	HttpVersion *string `pulumi:"httpVersion"`
	// The interval executing health check.
	Interval int `pulumi:"interval"`
	// The method of health check.
	Method string `pulumi:"method"`
	// The protocol of health check.
	Protocol *string `pulumi:"protocol"`
	// The response timeout of health check.
	Timeout *int `pulumi:"timeout"`
	// The unhealthy threshold of health check.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
	// The uri of health check.
	Uri string `pulumi:"uri"`
}

// ServerGroupsServerGroupHealthCheckInput is an input type that accepts ServerGroupsServerGroupHealthCheckArgs and ServerGroupsServerGroupHealthCheckOutput values.
// You can construct a concrete instance of `ServerGroupsServerGroupHealthCheckInput` via:
//
//	ServerGroupsServerGroupHealthCheckArgs{...}
type ServerGroupsServerGroupHealthCheckInput interface {
	pulumi.Input

	ToServerGroupsServerGroupHealthCheckOutput() ServerGroupsServerGroupHealthCheckOutput
	ToServerGroupsServerGroupHealthCheckOutputWithContext(context.Context) ServerGroupsServerGroupHealthCheckOutput
}

type ServerGroupsServerGroupHealthCheckArgs struct {
	// The domain of health check.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The enable status of health check function.
	Enabled pulumi.StringInput `pulumi:"enabled"`
	// The healthy threshold of health check.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// The normal http status code of health check.
	HttpCode pulumi.StringPtrInput `pulumi:"httpCode"`
	// The http version of health check.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// The interval executing health check.
	Interval pulumi.IntInput `pulumi:"interval"`
	// The method of health check.
	Method pulumi.StringInput `pulumi:"method"`
	// The protocol of health check.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The response timeout of health check.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The unhealthy threshold of health check.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
	// The uri of health check.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (ServerGroupsServerGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsServerGroupHealthCheck)(nil)).Elem()
}

func (i ServerGroupsServerGroupHealthCheckArgs) ToServerGroupsServerGroupHealthCheckOutput() ServerGroupsServerGroupHealthCheckOutput {
	return i.ToServerGroupsServerGroupHealthCheckOutputWithContext(context.Background())
}

func (i ServerGroupsServerGroupHealthCheckArgs) ToServerGroupsServerGroupHealthCheckOutputWithContext(ctx context.Context) ServerGroupsServerGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsServerGroupHealthCheckOutput)
}

// ServerGroupsServerGroupHealthCheckArrayInput is an input type that accepts ServerGroupsServerGroupHealthCheckArray and ServerGroupsServerGroupHealthCheckArrayOutput values.
// You can construct a concrete instance of `ServerGroupsServerGroupHealthCheckArrayInput` via:
//
//	ServerGroupsServerGroupHealthCheckArray{ ServerGroupsServerGroupHealthCheckArgs{...} }
type ServerGroupsServerGroupHealthCheckArrayInput interface {
	pulumi.Input

	ToServerGroupsServerGroupHealthCheckArrayOutput() ServerGroupsServerGroupHealthCheckArrayOutput
	ToServerGroupsServerGroupHealthCheckArrayOutputWithContext(context.Context) ServerGroupsServerGroupHealthCheckArrayOutput
}

type ServerGroupsServerGroupHealthCheckArray []ServerGroupsServerGroupHealthCheckInput

func (ServerGroupsServerGroupHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsServerGroupHealthCheck)(nil)).Elem()
}

func (i ServerGroupsServerGroupHealthCheckArray) ToServerGroupsServerGroupHealthCheckArrayOutput() ServerGroupsServerGroupHealthCheckArrayOutput {
	return i.ToServerGroupsServerGroupHealthCheckArrayOutputWithContext(context.Background())
}

func (i ServerGroupsServerGroupHealthCheckArray) ToServerGroupsServerGroupHealthCheckArrayOutputWithContext(ctx context.Context) ServerGroupsServerGroupHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsServerGroupHealthCheckArrayOutput)
}

type ServerGroupsServerGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (ServerGroupsServerGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsServerGroupHealthCheck)(nil)).Elem()
}

func (o ServerGroupsServerGroupHealthCheckOutput) ToServerGroupsServerGroupHealthCheckOutput() ServerGroupsServerGroupHealthCheckOutput {
	return o
}

func (o ServerGroupsServerGroupHealthCheckOutput) ToServerGroupsServerGroupHealthCheckOutputWithContext(ctx context.Context) ServerGroupsServerGroupHealthCheckOutput {
	return o
}

// The domain of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) string { return v.Domain }).(pulumi.StringOutput)
}

// The enable status of health check function.
func (o ServerGroupsServerGroupHealthCheckOutput) Enabled() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) string { return v.Enabled }).(pulumi.StringOutput)
}

// The healthy threshold of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// The normal http status code of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) HttpCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) *string { return v.HttpCode }).(pulumi.StringPtrOutput)
}

// The http version of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// The interval executing health check.
func (o ServerGroupsServerGroupHealthCheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) int { return v.Interval }).(pulumi.IntOutput)
}

// The method of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) string { return v.Method }).(pulumi.StringOutput)
}

// The protocol of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The response timeout of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The unhealthy threshold of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

// The uri of health check.
func (o ServerGroupsServerGroupHealthCheckOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupHealthCheck) string { return v.Uri }).(pulumi.StringOutput)
}

type ServerGroupsServerGroupHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupsServerGroupHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsServerGroupHealthCheck)(nil)).Elem()
}

func (o ServerGroupsServerGroupHealthCheckArrayOutput) ToServerGroupsServerGroupHealthCheckArrayOutput() ServerGroupsServerGroupHealthCheckArrayOutput {
	return o
}

func (o ServerGroupsServerGroupHealthCheckArrayOutput) ToServerGroupsServerGroupHealthCheckArrayOutputWithContext(ctx context.Context) ServerGroupsServerGroupHealthCheckArrayOutput {
	return o
}

func (o ServerGroupsServerGroupHealthCheckArrayOutput) Index(i pulumi.IntInput) ServerGroupsServerGroupHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupsServerGroupHealthCheck {
		return vs[0].([]ServerGroupsServerGroupHealthCheck)[vs[1].(int)]
	}).(ServerGroupsServerGroupHealthCheckOutput)
}

type ServerGroupsServerGroupServer struct {
	// The description of the server group server.
	Description string `pulumi:"description"`
	// The id of the ecs instance or the network interface.
	InstanceId string `pulumi:"instanceId"`
	// The private ip of the server group server.
	Ip string `pulumi:"ip"`
	// The port receiving request of the server group server.
	Port int `pulumi:"port"`
	// Whether to enable the remote IP function.
	RemoteEnabled string `pulumi:"remoteEnabled"`
	// The id of the server group server.
	ServerId string `pulumi:"serverId"`
	// The type of the server group server.
	Type string `pulumi:"type"`
	// The weight of the server group server.
	Weight int `pulumi:"weight"`
}

// ServerGroupsServerGroupServerInput is an input type that accepts ServerGroupsServerGroupServerArgs and ServerGroupsServerGroupServerOutput values.
// You can construct a concrete instance of `ServerGroupsServerGroupServerInput` via:
//
//	ServerGroupsServerGroupServerArgs{...}
type ServerGroupsServerGroupServerInput interface {
	pulumi.Input

	ToServerGroupsServerGroupServerOutput() ServerGroupsServerGroupServerOutput
	ToServerGroupsServerGroupServerOutputWithContext(context.Context) ServerGroupsServerGroupServerOutput
}

type ServerGroupsServerGroupServerArgs struct {
	// The description of the server group server.
	Description pulumi.StringInput `pulumi:"description"`
	// The id of the ecs instance or the network interface.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The private ip of the server group server.
	Ip pulumi.StringInput `pulumi:"ip"`
	// The port receiving request of the server group server.
	Port pulumi.IntInput `pulumi:"port"`
	// Whether to enable the remote IP function.
	RemoteEnabled pulumi.StringInput `pulumi:"remoteEnabled"`
	// The id of the server group server.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The type of the server group server.
	Type pulumi.StringInput `pulumi:"type"`
	// The weight of the server group server.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (ServerGroupsServerGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsServerGroupServer)(nil)).Elem()
}

func (i ServerGroupsServerGroupServerArgs) ToServerGroupsServerGroupServerOutput() ServerGroupsServerGroupServerOutput {
	return i.ToServerGroupsServerGroupServerOutputWithContext(context.Background())
}

func (i ServerGroupsServerGroupServerArgs) ToServerGroupsServerGroupServerOutputWithContext(ctx context.Context) ServerGroupsServerGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsServerGroupServerOutput)
}

// ServerGroupsServerGroupServerArrayInput is an input type that accepts ServerGroupsServerGroupServerArray and ServerGroupsServerGroupServerArrayOutput values.
// You can construct a concrete instance of `ServerGroupsServerGroupServerArrayInput` via:
//
//	ServerGroupsServerGroupServerArray{ ServerGroupsServerGroupServerArgs{...} }
type ServerGroupsServerGroupServerArrayInput interface {
	pulumi.Input

	ToServerGroupsServerGroupServerArrayOutput() ServerGroupsServerGroupServerArrayOutput
	ToServerGroupsServerGroupServerArrayOutputWithContext(context.Context) ServerGroupsServerGroupServerArrayOutput
}

type ServerGroupsServerGroupServerArray []ServerGroupsServerGroupServerInput

func (ServerGroupsServerGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsServerGroupServer)(nil)).Elem()
}

func (i ServerGroupsServerGroupServerArray) ToServerGroupsServerGroupServerArrayOutput() ServerGroupsServerGroupServerArrayOutput {
	return i.ToServerGroupsServerGroupServerArrayOutputWithContext(context.Background())
}

func (i ServerGroupsServerGroupServerArray) ToServerGroupsServerGroupServerArrayOutputWithContext(ctx context.Context) ServerGroupsServerGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsServerGroupServerArrayOutput)
}

type ServerGroupsServerGroupServerOutput struct{ *pulumi.OutputState }

func (ServerGroupsServerGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsServerGroupServer)(nil)).Elem()
}

func (o ServerGroupsServerGroupServerOutput) ToServerGroupsServerGroupServerOutput() ServerGroupsServerGroupServerOutput {
	return o
}

func (o ServerGroupsServerGroupServerOutput) ToServerGroupsServerGroupServerOutputWithContext(ctx context.Context) ServerGroupsServerGroupServerOutput {
	return o
}

// The description of the server group server.
func (o ServerGroupsServerGroupServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupServer) string { return v.Description }).(pulumi.StringOutput)
}

// The id of the ecs instance or the network interface.
func (o ServerGroupsServerGroupServerOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupServer) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The private ip of the server group server.
func (o ServerGroupsServerGroupServerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupServer) string { return v.Ip }).(pulumi.StringOutput)
}

// The port receiving request of the server group server.
func (o ServerGroupsServerGroupServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupServer) int { return v.Port }).(pulumi.IntOutput)
}

// Whether to enable the remote IP function.
func (o ServerGroupsServerGroupServerOutput) RemoteEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupServer) string { return v.RemoteEnabled }).(pulumi.StringOutput)
}

// The id of the server group server.
func (o ServerGroupsServerGroupServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupServer) string { return v.ServerId }).(pulumi.StringOutput)
}

// The type of the server group server.
func (o ServerGroupsServerGroupServerOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupServer) string { return v.Type }).(pulumi.StringOutput)
}

// The weight of the server group server.
func (o ServerGroupsServerGroupServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupServer) int { return v.Weight }).(pulumi.IntOutput)
}

type ServerGroupsServerGroupServerArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupsServerGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsServerGroupServer)(nil)).Elem()
}

func (o ServerGroupsServerGroupServerArrayOutput) ToServerGroupsServerGroupServerArrayOutput() ServerGroupsServerGroupServerArrayOutput {
	return o
}

func (o ServerGroupsServerGroupServerArrayOutput) ToServerGroupsServerGroupServerArrayOutputWithContext(ctx context.Context) ServerGroupsServerGroupServerArrayOutput {
	return o
}

func (o ServerGroupsServerGroupServerArrayOutput) Index(i pulumi.IntInput) ServerGroupsServerGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupsServerGroupServer {
		return vs[0].([]ServerGroupsServerGroupServer)[vs[1].(int)]
	}).(ServerGroupsServerGroupServerOutput)
}

type ServerGroupsServerGroupStickySessionConfig struct {
	// The cookie name of the sticky session.
	Cookie string `pulumi:"cookie"`
	// The cookie timeout of the sticky session.
	CookieTimeout int `pulumi:"cookieTimeout"`
	// The enable status of sticky session.
	StickySessionEnabled string `pulumi:"stickySessionEnabled"`
	// The cookie handle type of the sticky session.
	StickySessionType string `pulumi:"stickySessionType"`
}

// ServerGroupsServerGroupStickySessionConfigInput is an input type that accepts ServerGroupsServerGroupStickySessionConfigArgs and ServerGroupsServerGroupStickySessionConfigOutput values.
// You can construct a concrete instance of `ServerGroupsServerGroupStickySessionConfigInput` via:
//
//	ServerGroupsServerGroupStickySessionConfigArgs{...}
type ServerGroupsServerGroupStickySessionConfigInput interface {
	pulumi.Input

	ToServerGroupsServerGroupStickySessionConfigOutput() ServerGroupsServerGroupStickySessionConfigOutput
	ToServerGroupsServerGroupStickySessionConfigOutputWithContext(context.Context) ServerGroupsServerGroupStickySessionConfigOutput
}

type ServerGroupsServerGroupStickySessionConfigArgs struct {
	// The cookie name of the sticky session.
	Cookie pulumi.StringInput `pulumi:"cookie"`
	// The cookie timeout of the sticky session.
	CookieTimeout pulumi.IntInput `pulumi:"cookieTimeout"`
	// The enable status of sticky session.
	StickySessionEnabled pulumi.StringInput `pulumi:"stickySessionEnabled"`
	// The cookie handle type of the sticky session.
	StickySessionType pulumi.StringInput `pulumi:"stickySessionType"`
}

func (ServerGroupsServerGroupStickySessionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsServerGroupStickySessionConfig)(nil)).Elem()
}

func (i ServerGroupsServerGroupStickySessionConfigArgs) ToServerGroupsServerGroupStickySessionConfigOutput() ServerGroupsServerGroupStickySessionConfigOutput {
	return i.ToServerGroupsServerGroupStickySessionConfigOutputWithContext(context.Background())
}

func (i ServerGroupsServerGroupStickySessionConfigArgs) ToServerGroupsServerGroupStickySessionConfigOutputWithContext(ctx context.Context) ServerGroupsServerGroupStickySessionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsServerGroupStickySessionConfigOutput)
}

// ServerGroupsServerGroupStickySessionConfigArrayInput is an input type that accepts ServerGroupsServerGroupStickySessionConfigArray and ServerGroupsServerGroupStickySessionConfigArrayOutput values.
// You can construct a concrete instance of `ServerGroupsServerGroupStickySessionConfigArrayInput` via:
//
//	ServerGroupsServerGroupStickySessionConfigArray{ ServerGroupsServerGroupStickySessionConfigArgs{...} }
type ServerGroupsServerGroupStickySessionConfigArrayInput interface {
	pulumi.Input

	ToServerGroupsServerGroupStickySessionConfigArrayOutput() ServerGroupsServerGroupStickySessionConfigArrayOutput
	ToServerGroupsServerGroupStickySessionConfigArrayOutputWithContext(context.Context) ServerGroupsServerGroupStickySessionConfigArrayOutput
}

type ServerGroupsServerGroupStickySessionConfigArray []ServerGroupsServerGroupStickySessionConfigInput

func (ServerGroupsServerGroupStickySessionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsServerGroupStickySessionConfig)(nil)).Elem()
}

func (i ServerGroupsServerGroupStickySessionConfigArray) ToServerGroupsServerGroupStickySessionConfigArrayOutput() ServerGroupsServerGroupStickySessionConfigArrayOutput {
	return i.ToServerGroupsServerGroupStickySessionConfigArrayOutputWithContext(context.Background())
}

func (i ServerGroupsServerGroupStickySessionConfigArray) ToServerGroupsServerGroupStickySessionConfigArrayOutputWithContext(ctx context.Context) ServerGroupsServerGroupStickySessionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupsServerGroupStickySessionConfigArrayOutput)
}

type ServerGroupsServerGroupStickySessionConfigOutput struct{ *pulumi.OutputState }

func (ServerGroupsServerGroupStickySessionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupsServerGroupStickySessionConfig)(nil)).Elem()
}

func (o ServerGroupsServerGroupStickySessionConfigOutput) ToServerGroupsServerGroupStickySessionConfigOutput() ServerGroupsServerGroupStickySessionConfigOutput {
	return o
}

func (o ServerGroupsServerGroupStickySessionConfigOutput) ToServerGroupsServerGroupStickySessionConfigOutputWithContext(ctx context.Context) ServerGroupsServerGroupStickySessionConfigOutput {
	return o
}

// The cookie name of the sticky session.
func (o ServerGroupsServerGroupStickySessionConfigOutput) Cookie() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupStickySessionConfig) string { return v.Cookie }).(pulumi.StringOutput)
}

// The cookie timeout of the sticky session.
func (o ServerGroupsServerGroupStickySessionConfigOutput) CookieTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupStickySessionConfig) int { return v.CookieTimeout }).(pulumi.IntOutput)
}

// The enable status of sticky session.
func (o ServerGroupsServerGroupStickySessionConfigOutput) StickySessionEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupStickySessionConfig) string { return v.StickySessionEnabled }).(pulumi.StringOutput)
}

// The cookie handle type of the sticky session.
func (o ServerGroupsServerGroupStickySessionConfigOutput) StickySessionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServerGroupsServerGroupStickySessionConfig) string { return v.StickySessionType }).(pulumi.StringOutput)
}

type ServerGroupsServerGroupStickySessionConfigArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupsServerGroupStickySessionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupsServerGroupStickySessionConfig)(nil)).Elem()
}

func (o ServerGroupsServerGroupStickySessionConfigArrayOutput) ToServerGroupsServerGroupStickySessionConfigArrayOutput() ServerGroupsServerGroupStickySessionConfigArrayOutput {
	return o
}

func (o ServerGroupsServerGroupStickySessionConfigArrayOutput) ToServerGroupsServerGroupStickySessionConfigArrayOutputWithContext(ctx context.Context) ServerGroupsServerGroupStickySessionConfigArrayOutput {
	return o
}

func (o ServerGroupsServerGroupStickySessionConfigArrayOutput) Index(i pulumi.IntInput) ServerGroupsServerGroupStickySessionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupsServerGroupStickySessionConfig {
		return vs[0].([]ServerGroupsServerGroupStickySessionConfig)[vs[1].(int)]
	}).(ServerGroupsServerGroupStickySessionConfigOutput)
}

type ZonesZone struct {
	// The id of the zone.
	Id string `pulumi:"id"`
	// The id of the zone.
	ZoneId string `pulumi:"zoneId"`
}

// ZonesZoneInput is an input type that accepts ZonesZoneArgs and ZonesZoneOutput values.
// You can construct a concrete instance of `ZonesZoneInput` via:
//
//	ZonesZoneArgs{...}
type ZonesZoneInput interface {
	pulumi.Input

	ToZonesZoneOutput() ZonesZoneOutput
	ToZonesZoneOutputWithContext(context.Context) ZonesZoneOutput
}

type ZonesZoneArgs struct {
	// The id of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// The id of the zone.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (ZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesZone)(nil)).Elem()
}

func (i ZonesZoneArgs) ToZonesZoneOutput() ZonesZoneOutput {
	return i.ToZonesZoneOutputWithContext(context.Background())
}

func (i ZonesZoneArgs) ToZonesZoneOutputWithContext(ctx context.Context) ZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesZoneOutput)
}

// ZonesZoneArrayInput is an input type that accepts ZonesZoneArray and ZonesZoneArrayOutput values.
// You can construct a concrete instance of `ZonesZoneArrayInput` via:
//
//	ZonesZoneArray{ ZonesZoneArgs{...} }
type ZonesZoneArrayInput interface {
	pulumi.Input

	ToZonesZoneArrayOutput() ZonesZoneArrayOutput
	ToZonesZoneArrayOutputWithContext(context.Context) ZonesZoneArrayOutput
}

type ZonesZoneArray []ZonesZoneInput

func (ZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesZone)(nil)).Elem()
}

func (i ZonesZoneArray) ToZonesZoneArrayOutput() ZonesZoneArrayOutput {
	return i.ToZonesZoneArrayOutputWithContext(context.Background())
}

func (i ZonesZoneArray) ToZonesZoneArrayOutputWithContext(ctx context.Context) ZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZonesZoneArrayOutput)
}

type ZonesZoneOutput struct{ *pulumi.OutputState }

func (ZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZonesZone)(nil)).Elem()
}

func (o ZonesZoneOutput) ToZonesZoneOutput() ZonesZoneOutput {
	return o
}

func (o ZonesZoneOutput) ToZonesZoneOutputWithContext(ctx context.Context) ZonesZoneOutput {
	return o
}

// The id of the zone.
func (o ZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// The id of the zone.
func (o ZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v ZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type ZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (ZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZonesZone)(nil)).Elem()
}

func (o ZonesZoneArrayOutput) ToZonesZoneArrayOutput() ZonesZoneArrayOutput {
	return o
}

func (o ZonesZoneArrayOutput) ToZonesZoneArrayOutputWithContext(ctx context.Context) ZonesZoneArrayOutput {
	return o
}

func (o ZonesZoneArrayOutput) Index(i pulumi.IntInput) ZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZonesZone {
		return vs[0].([]ZonesZone)[vs[1].(int)]
	}).(ZonesZoneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AclAclEntryInput)(nil)).Elem(), AclAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclAclEntryArrayInput)(nil)).Elem(), AclAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclInput)(nil)).Elem(), AclsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclArrayInput)(nil)).Elem(), AclsAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclAclEntryInput)(nil)).Elem(), AclsAclAclEntryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclAclEntryArrayInput)(nil)).Elem(), AclsAclAclEntryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclListenerInput)(nil)).Elem(), AclsAclListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AclsAclListenerArrayInput)(nil)).Elem(), AclsAclListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbEipBillingConfigInput)(nil)).Elem(), AlbEipBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbEipBillingConfigPtrInput)(nil)).Elem(), AlbEipBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbIpv6EipBillingConfigInput)(nil)).Elem(), AlbIpv6EipBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbIpv6EipBillingConfigPtrInput)(nil)).Elem(), AlbIpv6EipBillingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbTagInput)(nil)).Elem(), AlbTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbTagArrayInput)(nil)).Elem(), AlbTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbZoneMappingInput)(nil)).Elem(), AlbZoneMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbZoneMappingArrayInput)(nil)).Elem(), AlbZoneMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbZoneMappingLoadBalancerAddressInput)(nil)).Elem(), AlbZoneMappingLoadBalancerAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbZoneMappingLoadBalancerAddressArrayInput)(nil)).Elem(), AlbZoneMappingLoadBalancerAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbInput)(nil)).Elem(), AlbsAlbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbArrayInput)(nil)).Elem(), AlbsAlbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbAccessLogInput)(nil)).Elem(), AlbsAlbAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbAccessLogArrayInput)(nil)).Elem(), AlbsAlbAccessLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbHealthLogInput)(nil)).Elem(), AlbsAlbHealthLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbHealthLogArrayInput)(nil)).Elem(), AlbsAlbHealthLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbListenerInput)(nil)).Elem(), AlbsAlbListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbListenerArrayInput)(nil)).Elem(), AlbsAlbListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbTagInput)(nil)).Elem(), AlbsAlbTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbTagArrayInput)(nil)).Elem(), AlbsAlbTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbTlsAccessLogInput)(nil)).Elem(), AlbsAlbTlsAccessLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbTlsAccessLogArrayInput)(nil)).Elem(), AlbsAlbTlsAccessLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingInput)(nil)).Elem(), AlbsAlbZoneMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingArrayInput)(nil)).Elem(), AlbsAlbZoneMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressInput)(nil)).Elem(), AlbsAlbZoneMappingLoadBalancerAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressArrayInput)(nil)).Elem(), AlbsAlbZoneMappingLoadBalancerAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressEipInput)(nil)).Elem(), AlbsAlbZoneMappingLoadBalancerAddressEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressEipArrayInput)(nil)).Elem(), AlbsAlbZoneMappingLoadBalancerAddressEipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationInput)(nil)).Elem(), AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayInput)(nil)).Elem(), AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressIpv6EipInput)(nil)).Elem(), AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayInput)(nil)).Elem(), AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsTagInput)(nil)).Elem(), AlbsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlbsTagArrayInput)(nil)).Elem(), AlbsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaCertificatesCertificateInput)(nil)).Elem(), CaCertificatesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaCertificatesCertificateArrayInput)(nil)).Elem(), CaCertificatesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesCertificateInput)(nil)).Elem(), CertificatesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificatesCertificateArrayInput)(nil)).Elem(), CertificatesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomizedCfgsCfgInput)(nil)).Elem(), CustomizedCfgsCfgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomizedCfgsCfgArrayInput)(nil)).Elem(), CustomizedCfgsCfgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomizedCfgsCfgListenerInput)(nil)).Elem(), CustomizedCfgsCfgListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomizedCfgsCfgListenerArrayInput)(nil)).Elem(), CustomizedCfgsCfgListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckTemplatesHealthCheckTemplateInput)(nil)).Elem(), HealthCheckTemplatesHealthCheckTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckTemplatesHealthCheckTemplateArrayInput)(nil)).Elem(), HealthCheckTemplatesHealthCheckTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDomainExtensionsDomainExtensionInput)(nil)).Elem(), ListenerDomainExtensionsDomainExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenerDomainExtensionsDomainExtensionArrayInput)(nil)).Elem(), ListenerDomainExtensionsDomainExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerInput)(nil)).Elem(), ListenersListenerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerArrayInput)(nil)).Elem(), ListenersListenerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerDomainExtensionInput)(nil)).Elem(), ListenersListenerDomainExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerDomainExtensionArrayInput)(nil)).Elem(), ListenersListenerDomainExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerServerGroupInput)(nil)).Elem(), ListenersListenerServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ListenersListenerServerGroupArrayInput)(nil)).Elem(), ListenersListenerServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleRedirectConfigInput)(nil)).Elem(), RuleRedirectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleRedirectConfigPtrInput)(nil)).Elem(), RuleRedirectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleRewriteConfigInput)(nil)).Elem(), RuleRewriteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleRewriteConfigPtrInput)(nil)).Elem(), RuleRewriteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleInput)(nil)).Elem(), RulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleArrayInput)(nil)).Elem(), RulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleRedirectConfigInput)(nil)).Elem(), RulesRuleRedirectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleRedirectConfigArrayInput)(nil)).Elem(), RulesRuleRedirectConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleRewriteConfigInput)(nil)).Elem(), RulesRuleRewriteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RulesRuleRewriteConfigArrayInput)(nil)).Elem(), RulesRuleRewriteConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupHealthCheckInput)(nil)).Elem(), ServerGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupHealthCheckPtrInput)(nil)).Elem(), ServerGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupServersServerInput)(nil)).Elem(), ServerGroupServersServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupServersServerArrayInput)(nil)).Elem(), ServerGroupServersServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupStickySessionConfigInput)(nil)).Elem(), ServerGroupStickySessionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupStickySessionConfigPtrInput)(nil)).Elem(), ServerGroupStickySessionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsServerGroupInput)(nil)).Elem(), ServerGroupsServerGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsServerGroupArrayInput)(nil)).Elem(), ServerGroupsServerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsServerGroupHealthCheckInput)(nil)).Elem(), ServerGroupsServerGroupHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsServerGroupHealthCheckArrayInput)(nil)).Elem(), ServerGroupsServerGroupHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsServerGroupServerInput)(nil)).Elem(), ServerGroupsServerGroupServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsServerGroupServerArrayInput)(nil)).Elem(), ServerGroupsServerGroupServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsServerGroupStickySessionConfigInput)(nil)).Elem(), ServerGroupsServerGroupStickySessionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerGroupsServerGroupStickySessionConfigArrayInput)(nil)).Elem(), ServerGroupsServerGroupStickySessionConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesZoneInput)(nil)).Elem(), ZonesZoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZonesZoneArrayInput)(nil)).Elem(), ZonesZoneArray{})
	pulumi.RegisterOutputType(AclAclEntryOutput{})
	pulumi.RegisterOutputType(AclAclEntryArrayOutput{})
	pulumi.RegisterOutputType(AclsAclOutput{})
	pulumi.RegisterOutputType(AclsAclArrayOutput{})
	pulumi.RegisterOutputType(AclsAclAclEntryOutput{})
	pulumi.RegisterOutputType(AclsAclAclEntryArrayOutput{})
	pulumi.RegisterOutputType(AclsAclListenerOutput{})
	pulumi.RegisterOutputType(AclsAclListenerArrayOutput{})
	pulumi.RegisterOutputType(AlbEipBillingConfigOutput{})
	pulumi.RegisterOutputType(AlbEipBillingConfigPtrOutput{})
	pulumi.RegisterOutputType(AlbIpv6EipBillingConfigOutput{})
	pulumi.RegisterOutputType(AlbIpv6EipBillingConfigPtrOutput{})
	pulumi.RegisterOutputType(AlbTagOutput{})
	pulumi.RegisterOutputType(AlbTagArrayOutput{})
	pulumi.RegisterOutputType(AlbZoneMappingOutput{})
	pulumi.RegisterOutputType(AlbZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(AlbZoneMappingLoadBalancerAddressOutput{})
	pulumi.RegisterOutputType(AlbZoneMappingLoadBalancerAddressArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbOutput{})
	pulumi.RegisterOutputType(AlbsAlbArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbAccessLogOutput{})
	pulumi.RegisterOutputType(AlbsAlbAccessLogArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbHealthLogOutput{})
	pulumi.RegisterOutputType(AlbsAlbHealthLogArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbListenerOutput{})
	pulumi.RegisterOutputType(AlbsAlbListenerArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbTagOutput{})
	pulumi.RegisterOutputType(AlbsAlbTagArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbTlsAccessLogOutput{})
	pulumi.RegisterOutputType(AlbsAlbTlsAccessLogArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingLoadBalancerAddressOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingLoadBalancerAddressArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingLoadBalancerAddressEipOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingLoadBalancerAddressEipArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingLoadBalancerAddressEipPopLocationArrayOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingLoadBalancerAddressIpv6EipOutput{})
	pulumi.RegisterOutputType(AlbsAlbZoneMappingLoadBalancerAddressIpv6EipArrayOutput{})
	pulumi.RegisterOutputType(AlbsTagOutput{})
	pulumi.RegisterOutputType(AlbsTagArrayOutput{})
	pulumi.RegisterOutputType(CaCertificatesCertificateOutput{})
	pulumi.RegisterOutputType(CaCertificatesCertificateArrayOutput{})
	pulumi.RegisterOutputType(CertificatesCertificateOutput{})
	pulumi.RegisterOutputType(CertificatesCertificateArrayOutput{})
	pulumi.RegisterOutputType(CustomizedCfgsCfgOutput{})
	pulumi.RegisterOutputType(CustomizedCfgsCfgArrayOutput{})
	pulumi.RegisterOutputType(CustomizedCfgsCfgListenerOutput{})
	pulumi.RegisterOutputType(CustomizedCfgsCfgListenerArrayOutput{})
	pulumi.RegisterOutputType(HealthCheckTemplatesHealthCheckTemplateOutput{})
	pulumi.RegisterOutputType(HealthCheckTemplatesHealthCheckTemplateArrayOutput{})
	pulumi.RegisterOutputType(ListenerDomainExtensionsDomainExtensionOutput{})
	pulumi.RegisterOutputType(ListenerDomainExtensionsDomainExtensionArrayOutput{})
	pulumi.RegisterOutputType(ListenersListenerOutput{})
	pulumi.RegisterOutputType(ListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(ListenersListenerDomainExtensionOutput{})
	pulumi.RegisterOutputType(ListenersListenerDomainExtensionArrayOutput{})
	pulumi.RegisterOutputType(ListenersListenerServerGroupOutput{})
	pulumi.RegisterOutputType(ListenersListenerServerGroupArrayOutput{})
	pulumi.RegisterOutputType(RuleRedirectConfigOutput{})
	pulumi.RegisterOutputType(RuleRedirectConfigPtrOutput{})
	pulumi.RegisterOutputType(RuleRewriteConfigOutput{})
	pulumi.RegisterOutputType(RuleRewriteConfigPtrOutput{})
	pulumi.RegisterOutputType(RulesRuleOutput{})
	pulumi.RegisterOutputType(RulesRuleArrayOutput{})
	pulumi.RegisterOutputType(RulesRuleRedirectConfigOutput{})
	pulumi.RegisterOutputType(RulesRuleRedirectConfigArrayOutput{})
	pulumi.RegisterOutputType(RulesRuleRewriteConfigOutput{})
	pulumi.RegisterOutputType(RulesRuleRewriteConfigArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(ServerGroupHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ServerGroupServersServerOutput{})
	pulumi.RegisterOutputType(ServerGroupServersServerArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupStickySessionConfigOutput{})
	pulumi.RegisterOutputType(ServerGroupStickySessionConfigPtrOutput{})
	pulumi.RegisterOutputType(ServerGroupsServerGroupOutput{})
	pulumi.RegisterOutputType(ServerGroupsServerGroupArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupsServerGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(ServerGroupsServerGroupHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupsServerGroupServerOutput{})
	pulumi.RegisterOutputType(ServerGroupsServerGroupServerArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupsServerGroupStickySessionConfigOutput{})
	pulumi.RegisterOutputType(ServerGroupsServerGroupStickySessionConfigArrayOutput{})
	pulumi.RegisterOutputType(ZonesZoneOutput{})
	pulumi.RegisterOutputType(ZonesZoneArrayOutput{})
}
