// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/internal"
)

// Use this data source to query detailed information of alb acls
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcengine/sdk/go/volcengine/alb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := alb.GetAcls(ctx, &alb.GetAclsArgs{
//				Ids: []string{
//					"acl-1g72w6z11ighs2zbhq4v3rvh4",
//				},
//				ProjectName: pulumi.StringRef("default"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAcls(ctx *pulumi.Context, args *GetAclsArgs, opts ...pulumi.InvokeOption) (*GetAclsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAclsResult
	err := ctx.Invoke("volcengine:alb/getAcls:getAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAcls.
type GetAclsArgs struct {
	// The name of acl.
	AclName *string `pulumi:"aclName"`
	// A list of Acl IDs.
	Ids []string `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
	// The name of project.
	ProjectName *string `pulumi:"projectName"`
}

// A collection of values returned by getAcls.
type GetAclsResult struct {
	// The Name of Acl.
	AclName *string `pulumi:"aclName"`
	// The collection of Acl query.
	Acls []GetAclsAcl `pulumi:"acls"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	OutputFile *string  `pulumi:"outputFile"`
	// The project name of Acl.
	ProjectName *string `pulumi:"projectName"`
	// The total count of Acl query.
	TotalCount int `pulumi:"totalCount"`
}

func GetAclsOutput(ctx *pulumi.Context, args GetAclsOutputArgs, opts ...pulumi.InvokeOption) GetAclsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAclsResult, error) {
			args := v.(GetAclsArgs)
			r, err := GetAcls(ctx, &args, opts...)
			var s GetAclsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAclsResultOutput)
}

// A collection of arguments for invoking getAcls.
type GetAclsOutputArgs struct {
	// The name of acl.
	AclName pulumi.StringPtrInput `pulumi:"aclName"`
	// A list of Acl IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
	// The name of project.
	ProjectName pulumi.StringPtrInput `pulumi:"projectName"`
}

func (GetAclsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsArgs)(nil)).Elem()
}

// A collection of values returned by getAcls.
type GetAclsResultOutput struct{ *pulumi.OutputState }

func (GetAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAclsResult)(nil)).Elem()
}

func (o GetAclsResultOutput) ToGetAclsResultOutput() GetAclsResultOutput {
	return o
}

func (o GetAclsResultOutput) ToGetAclsResultOutputWithContext(ctx context.Context) GetAclsResultOutput {
	return o
}

// The Name of Acl.
func (o GetAclsResultOutput) AclName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclsResult) *string { return v.AclName }).(pulumi.StringPtrOutput)
}

// The collection of Acl query.
func (o GetAclsResultOutput) Acls() GetAclsAclArrayOutput {
	return o.ApplyT(func(v GetAclsResult) []GetAclsAcl { return v.Acls }).(GetAclsAclArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAclsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAclsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAclsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAclsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetAclsResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclsResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The project name of Acl.
func (o GetAclsResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAclsResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// The total count of Acl query.
func (o GetAclsResultOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAclsResult) int { return v.TotalCount }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAclsResultOutput{})
}
