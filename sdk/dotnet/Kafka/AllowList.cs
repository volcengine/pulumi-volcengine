// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Kafka
{
    /// <summary>
    /// Provides a resource to manage kafka allow list
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Kafka.AllowList("foo", new()
    ///     {
    ///         AllowLists = new[]
    ///         {
    ///             "192.168.0.1",
    ///             "10.32.55.66",
    ///             "10.22.55.66",
    ///         },
    ///         AllowListName = "tf-test",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// KafkaAllowList can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:kafka/allowList:AllowList default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:kafka/allowList:AllowList")]
    public partial class AllowList : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the allow list.
        /// </summary>
        [Output("allowListDesc")]
        public Output<string?> AllowListDesc { get; private set; } = null!;

        /// <summary>
        /// The name of the allow list.
        /// </summary>
        [Output("allowListName")]
        public Output<string> AllowListName { get; private set; } = null!;

        /// <summary>
        /// Whitelist rule list. Supports specifying as IP addresses or IP network segments. Each whitelist can be configured with a maximum of 300 IP addresses or network segments.
        /// </summary>
        [Output("allowLists")]
        public Output<ImmutableArray<string>> AllowLists { get; private set; } = null!;


        /// <summary>
        /// Create a AllowList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AllowList(string name, AllowListArgs args, CustomResourceOptions? options = null)
            : base("volcengine:kafka/allowList:AllowList", name, args ?? new AllowListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AllowList(string name, Input<string> id, AllowListState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:kafka/allowList:AllowList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AllowList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AllowList Get(string name, Input<string> id, AllowListState? state = null, CustomResourceOptions? options = null)
        {
            return new AllowList(name, id, state, options);
        }
    }

    public sealed class AllowListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the allow list.
        /// </summary>
        [Input("allowListDesc")]
        public Input<string>? AllowListDesc { get; set; }

        /// <summary>
        /// The name of the allow list.
        /// </summary>
        [Input("allowListName", required: true)]
        public Input<string> AllowListName { get; set; } = null!;

        [Input("allowLists", required: true)]
        private InputList<string>? _allowLists;

        /// <summary>
        /// Whitelist rule list. Supports specifying as IP addresses or IP network segments. Each whitelist can be configured with a maximum of 300 IP addresses or network segments.
        /// </summary>
        public InputList<string> AllowLists
        {
            get => _allowLists ?? (_allowLists = new InputList<string>());
            set => _allowLists = value;
        }

        public AllowListArgs()
        {
        }
        public static new AllowListArgs Empty => new AllowListArgs();
    }

    public sealed class AllowListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the allow list.
        /// </summary>
        [Input("allowListDesc")]
        public Input<string>? AllowListDesc { get; set; }

        /// <summary>
        /// The name of the allow list.
        /// </summary>
        [Input("allowListName")]
        public Input<string>? AllowListName { get; set; }

        [Input("allowLists")]
        private InputList<string>? _allowLists;

        /// <summary>
        /// Whitelist rule list. Supports specifying as IP addresses or IP network segments. Each whitelist can be configured with a maximum of 300 IP addresses or network segments.
        /// </summary>
        public InputList<string> AllowLists
        {
            get => _allowLists ?? (_allowLists = new InputList<string>());
            set => _allowLists = value;
        }

        public AllowListState()
        {
        }
        public static new AllowListState Empty => new AllowListState();
    }
}
