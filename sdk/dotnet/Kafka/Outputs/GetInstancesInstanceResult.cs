// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Kafka.Outputs
{

    [OutputType]
    public sealed class GetInstancesInstanceResult
    {
        /// <summary>
        /// The id of account.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The auto renew status of instance.
        /// </summary>
        public readonly bool AutoRenew;
        /// <summary>
        /// The charge expire time of instance.
        /// </summary>
        public readonly string ChargeExpireTime;
        /// <summary>
        /// The charge start time of instance.
        /// </summary>
        public readonly string ChargeStartTime;
        /// <summary>
        /// The charge status of instance.
        /// </summary>
        public readonly string ChargeStatus;
        /// <summary>
        /// The charge type of instance.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// The compute spec of instance.
        /// </summary>
        public readonly string ComputeSpec;
        /// <summary>
        /// Connection info of the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceConnectionInfoResult> ConnectionInfos;
        /// <summary>
        /// The create time of instance.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The id of eip.
        /// </summary>
        public readonly string EipId;
        /// <summary>
        /// The id of instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The description of instance.
        /// </summary>
        public readonly string InstanceDescription;
        /// <summary>
        /// The id of instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// The name of instance.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// The status of instance.
        /// </summary>
        public readonly string InstanceStatus;
        /// <summary>
        /// The overdue reclaim time of instance.
        /// </summary>
        public readonly string OverdueReclaimTime;
        /// <summary>
        /// The overdue time of instance.
        /// </summary>
        public readonly string OverdueTime;
        /// <summary>
        /// Parameters of the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceParameterResult> Parameters;
        /// <summary>
        /// The period unit of instance.
        /// </summary>
        public readonly string PeriodUnit;
        /// <summary>
        /// Whether enable private domain on public.
        /// </summary>
        public readonly bool PrivateDomainOnPublic;
        /// <summary>
        /// The name of project.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The id of region.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// The storage space of instance.
        /// </summary>
        public readonly int StorageSpace;
        /// <summary>
        /// The storage type of instance.
        /// </summary>
        public readonly string StorageType;
        /// <summary>
        /// The id of subnet.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The tags of instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceTagResult> Tags;
        /// <summary>
        /// The usable partition number of instance.
        /// </summary>
        public readonly int UsablePartitionNumber;
        /// <summary>
        /// The used group number of instance.
        /// </summary>
        public readonly int UsedGroupNumber;
        /// <summary>
        /// The used partition number of instance.
        /// </summary>
        public readonly int UsedPartitionNumber;
        /// <summary>
        /// The used storage space of instance.
        /// </summary>
        public readonly int UsedStorageSpace;
        /// <summary>
        /// The used topic number of instance.
        /// </summary>
        public readonly int UsedTopicNumber;
        /// <summary>
        /// The version of instance.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// The id of vpc.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The zone id of instance.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetInstancesInstanceResult(
            string accountId,

            bool autoRenew,

            string chargeExpireTime,

            string chargeStartTime,

            string chargeStatus,

            string chargeType,

            string computeSpec,

            ImmutableArray<Outputs.GetInstancesInstanceConnectionInfoResult> connectionInfos,

            string createTime,

            string eipId,

            string id,

            string instanceDescription,

            string instanceId,

            string instanceName,

            string instanceStatus,

            string overdueReclaimTime,

            string overdueTime,

            ImmutableArray<Outputs.GetInstancesInstanceParameterResult> parameters,

            string periodUnit,

            bool privateDomainOnPublic,

            string projectName,

            string regionId,

            int storageSpace,

            string storageType,

            string subnetId,

            ImmutableArray<Outputs.GetInstancesInstanceTagResult> tags,

            int usablePartitionNumber,

            int usedGroupNumber,

            int usedPartitionNumber,

            int usedStorageSpace,

            int usedTopicNumber,

            string version,

            string vpcId,

            string zoneId)
        {
            AccountId = accountId;
            AutoRenew = autoRenew;
            ChargeExpireTime = chargeExpireTime;
            ChargeStartTime = chargeStartTime;
            ChargeStatus = chargeStatus;
            ChargeType = chargeType;
            ComputeSpec = computeSpec;
            ConnectionInfos = connectionInfos;
            CreateTime = createTime;
            EipId = eipId;
            Id = id;
            InstanceDescription = instanceDescription;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceStatus = instanceStatus;
            OverdueReclaimTime = overdueReclaimTime;
            OverdueTime = overdueTime;
            Parameters = parameters;
            PeriodUnit = periodUnit;
            PrivateDomainOnPublic = privateDomainOnPublic;
            ProjectName = projectName;
            RegionId = regionId;
            StorageSpace = storageSpace;
            StorageType = storageType;
            SubnetId = subnetId;
            Tags = tags;
            UsablePartitionNumber = usablePartitionNumber;
            UsedGroupNumber = usedGroupNumber;
            UsedPartitionNumber = usedPartitionNumber;
            UsedStorageSpace = usedStorageSpace;
            UsedTopicNumber = usedTopicNumber;
            Version = version;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
}
