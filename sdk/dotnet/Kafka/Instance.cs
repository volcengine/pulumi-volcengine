// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Kafka
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.GetZones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooInstance = new Volcengine.Kafka.Instance("fooInstance", new()
    ///     {
    ///         InstanceName = "acc-test-kafka",
    ///         InstanceDescription = "tf-test",
    ///         Version = "2.2.2",
    ///         ComputeSpec = "kafka.20xrate.hw",
    ///         SubnetId = fooSubnet.Id,
    ///         UserName = "tf-user",
    ///         UserPassword = "tf-pass!@q1",
    ///         ChargeType = "PostPaid",
    ///         StorageSpace = 300,
    ///         PartitionNumber = 350,
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Kafka.Inputs.InstanceTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///         Parameters = new[]
    ///         {
    ///             new Volcengine.Kafka.Inputs.InstanceParameterArgs
    ///             {
    ///                 ParameterName = "MessageMaxByte",
    ///                 ParameterValue = "12",
    ///             },
    ///             new Volcengine.Kafka.Inputs.InstanceParameterArgs
    ///             {
    ///                 ParameterName = "LogRetentionHours",
    ///                 ParameterValue = "70",
    ///             },
    ///             new Volcengine.Kafka.Inputs.InstanceParameterArgs
    ///             {
    ///                 ParameterName = "MessageTimestampType",
    ///                 ParameterValue = "CreateTime",
    ///             },
    ///             new Volcengine.Kafka.Inputs.InstanceParameterArgs
    ///             {
    ///                 ParameterName = "OffsetRetentionMinutes",
    ///                 ParameterValue = "10080",
    ///             },
    ///             new Volcengine.Kafka.Inputs.InstanceParameterArgs
    ///             {
    ///                 ParameterName = "AutoDeleteGroup",
    ///                 ParameterValue = "false",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// KafkaInstance can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:kafka/instance:Instance default kafka-insbjwbbwb
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:kafka/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The auto renew flag of instance. Only effective when instance_charge_type is PrePaid. Default is false.
        /// </summary>
        [Output("autoRenew")]
        public Output<bool?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// The charge type of instance, the value can be `PrePaid` or `PostPaid`.
        /// </summary>
        [Output("chargeType")]
        public Output<string> ChargeType { get; private set; } = null!;

        /// <summary>
        /// The compute spec of instance.
        /// </summary>
        [Output("computeSpec")]
        public Output<string> ComputeSpec { get; private set; } = null!;

        /// <summary>
        /// The description of instance.
        /// </summary>
        [Output("instanceDescription")]
        public Output<string> InstanceDescription { get; private set; } = null!;

        /// <summary>
        /// The name of instance.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// Whether enable rebalance. Only effected in modify when compute_spec field is changed.
        /// </summary>
        [Output("needRebalance")]
        public Output<bool?> NeedRebalance { get; private set; } = null!;

        /// <summary>
        /// Parameter of the instance.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableArray<Outputs.InstanceParameter>> Parameters { get; private set; } = null!;

        /// <summary>
        /// The partition number of instance.
        /// </summary>
        [Output("partitionNumber")]
        public Output<int> PartitionNumber { get; private set; } = null!;

        /// <summary>
        /// The period of instance. Only effective when instance_charge_type is PrePaid. Unit is Month.
        /// </summary>
        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        /// <summary>
        /// The project name of instance.
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The rebalance time.
        /// </summary>
        [Output("rebalanceTime")]
        public Output<string?> RebalanceTime { get; private set; } = null!;

        /// <summary>
        /// The storage space of instance.
        /// </summary>
        [Output("storageSpace")]
        public Output<int> StorageSpace { get; private set; } = null!;

        /// <summary>
        /// The storage type of instance. The value can be ESSD_FlexPL or ESSD_PL0.
        /// </summary>
        [Output("storageType")]
        public Output<string?> StorageType { get; private set; } = null!;

        /// <summary>
        /// The subnet id of instance.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// The tags of instance.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.InstanceTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The user name of instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;

        /// <summary>
        /// The user password of instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("userPassword")]
        public Output<string> UserPassword { get; private set; } = null!;

        /// <summary>
        /// The version of instance, the value can be `2.2.2` or `2.8.2`.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("volcengine:kafka/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:kafka/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
                AdditionalSecretOutputs =
                {
                    "userPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The auto renew flag of instance. Only effective when instance_charge_type is PrePaid. Default is false.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The charge type of instance, the value can be `PrePaid` or `PostPaid`.
        /// </summary>
        [Input("chargeType", required: true)]
        public Input<string> ChargeType { get; set; } = null!;

        /// <summary>
        /// The compute spec of instance.
        /// </summary>
        [Input("computeSpec", required: true)]
        public Input<string> ComputeSpec { get; set; } = null!;

        /// <summary>
        /// The description of instance.
        /// </summary>
        [Input("instanceDescription")]
        public Input<string>? InstanceDescription { get; set; }

        /// <summary>
        /// The name of instance.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Whether enable rebalance. Only effected in modify when compute_spec field is changed.
        /// </summary>
        [Input("needRebalance")]
        public Input<bool>? NeedRebalance { get; set; }

        [Input("parameters")]
        private InputList<Inputs.InstanceParameterArgs>? _parameters;

        /// <summary>
        /// Parameter of the instance.
        /// </summary>
        public InputList<Inputs.InstanceParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.InstanceParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// The partition number of instance.
        /// </summary>
        [Input("partitionNumber")]
        public Input<int>? PartitionNumber { get; set; }

        /// <summary>
        /// The period of instance. Only effective when instance_charge_type is PrePaid. Unit is Month.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The project name of instance.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The rebalance time.
        /// </summary>
        [Input("rebalanceTime")]
        public Input<string>? RebalanceTime { get; set; }

        /// <summary>
        /// The storage space of instance.
        /// </summary>
        [Input("storageSpace")]
        public Input<int>? StorageSpace { get; set; }

        /// <summary>
        /// The storage type of instance. The value can be ESSD_FlexPL or ESSD_PL0.
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        /// <summary>
        /// The subnet id of instance.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.InstanceTagArgs>? _tags;

        /// <summary>
        /// The tags of instance.
        /// </summary>
        public InputList<Inputs.InstanceTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.InstanceTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The user name of instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        [Input("userPassword", required: true)]
        private Input<string>? _userPassword;

        /// <summary>
        /// The user password of instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        public Input<string>? UserPassword
        {
            get => _userPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _userPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The version of instance, the value can be `2.2.2` or `2.8.2`.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The auto renew flag of instance. Only effective when instance_charge_type is PrePaid. Default is false.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The charge type of instance, the value can be `PrePaid` or `PostPaid`.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// The compute spec of instance.
        /// </summary>
        [Input("computeSpec")]
        public Input<string>? ComputeSpec { get; set; }

        /// <summary>
        /// The description of instance.
        /// </summary>
        [Input("instanceDescription")]
        public Input<string>? InstanceDescription { get; set; }

        /// <summary>
        /// The name of instance.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Whether enable rebalance. Only effected in modify when compute_spec field is changed.
        /// </summary>
        [Input("needRebalance")]
        public Input<bool>? NeedRebalance { get; set; }

        [Input("parameters")]
        private InputList<Inputs.InstanceParameterGetArgs>? _parameters;

        /// <summary>
        /// Parameter of the instance.
        /// </summary>
        public InputList<Inputs.InstanceParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.InstanceParameterGetArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// The partition number of instance.
        /// </summary>
        [Input("partitionNumber")]
        public Input<int>? PartitionNumber { get; set; }

        /// <summary>
        /// The period of instance. Only effective when instance_charge_type is PrePaid. Unit is Month.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The project name of instance.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The rebalance time.
        /// </summary>
        [Input("rebalanceTime")]
        public Input<string>? RebalanceTime { get; set; }

        /// <summary>
        /// The storage space of instance.
        /// </summary>
        [Input("storageSpace")]
        public Input<int>? StorageSpace { get; set; }

        /// <summary>
        /// The storage type of instance. The value can be ESSD_FlexPL or ESSD_PL0.
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        /// <summary>
        /// The subnet id of instance.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputList<Inputs.InstanceTagGetArgs>? _tags;

        /// <summary>
        /// The tags of instance.
        /// </summary>
        public InputList<Inputs.InstanceTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.InstanceTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The user name of instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        [Input("userPassword")]
        private Input<string>? _userPassword;

        /// <summary>
        /// The user password of instance. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        public Input<string>? UserPassword
        {
            get => _userPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _userPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The version of instance, the value can be `2.2.2` or `2.8.2`.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
