// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Ebs.Outputs
{

    [OutputType]
    public sealed class SnapshotGroupsSnapshotGroupSnapshotResult
    {
        /// <summary>
        /// The creation time of the snapshot.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The description of the snapshot.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The image id of the snapshot.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// The progress of the snapshot.
        /// </summary>
        public readonly int Progress;
        /// <summary>
        /// The project name of snapshot group.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The id of the snapshot.
        /// </summary>
        public readonly int RetentionDays;
        /// <summary>
        /// The id of the snapshot.
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        public readonly string SnapshotName;
        /// <summary>
        /// The type of the snapshot.
        /// </summary>
        public readonly string SnapshotType;
        /// <summary>
        /// A list of snapshot group status. Valid values: `creating`, `available`, `failed`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.SnapshotGroupsSnapshotGroupSnapshotTagResult> Tags;
        /// <summary>
        /// The volume id of the snapshot.
        /// </summary>
        public readonly string VolumeId;
        /// <summary>
        /// The volume kind of the snapshot.
        /// </summary>
        public readonly string VolumeKind;
        /// <summary>
        /// The volume name of the snapshot.
        /// </summary>
        public readonly string VolumeName;
        /// <summary>
        /// The volume size of the snapshot.
        /// </summary>
        public readonly int VolumeSize;
        /// <summary>
        /// The volume status of the snapshot.
        /// </summary>
        public readonly string VolumeStatus;
        /// <summary>
        /// The volume type of the snapshot.
        /// </summary>
        public readonly string VolumeType;
        /// <summary>
        /// The zone id of the snapshot.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private SnapshotGroupsSnapshotGroupSnapshotResult(
            string creationTime,

            string description,

            string imageId,

            int progress,

            string projectName,

            int retentionDays,

            string snapshotId,

            string snapshotName,

            string snapshotType,

            string status,

            ImmutableArray<Outputs.SnapshotGroupsSnapshotGroupSnapshotTagResult> tags,

            string volumeId,

            string volumeKind,

            string volumeName,

            int volumeSize,

            string volumeStatus,

            string volumeType,

            string zoneId)
        {
            CreationTime = creationTime;
            Description = description;
            ImageId = imageId;
            Progress = progress;
            ProjectName = projectName;
            RetentionDays = retentionDays;
            SnapshotId = snapshotId;
            SnapshotName = snapshotName;
            SnapshotType = snapshotType;
            Status = status;
            Tags = tags;
            VolumeId = volumeId;
            VolumeKind = volumeKind;
            VolumeName = volumeName;
            VolumeSize = volumeSize;
            VolumeStatus = volumeStatus;
            VolumeType = volumeType;
            ZoneId = zoneId;
        }
    }
}
