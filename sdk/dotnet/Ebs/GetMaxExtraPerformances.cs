// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Ebs
{
    public static class GetMaxExtraPerformances
    {
        /// <summary>
        /// Use this data source to query detailed information of ebs max extra performances
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Ebs.GetMaxExtraPerformances.Invoke(new()
        ///     {
        ///         Size = 60,
        ///         VolumeType = "TSSD_TL0",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMaxExtraPerformancesResult> InvokeAsync(GetMaxExtraPerformancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMaxExtraPerformancesResult>("volcengine:ebs/getMaxExtraPerformances:getMaxExtraPerformances", args ?? new GetMaxExtraPerformancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of ebs max extra performances
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Ebs.GetMaxExtraPerformances.Invoke(new()
        ///     {
        ///         Size = 60,
        ///         VolumeType = "TSSD_TL0",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMaxExtraPerformancesResult> Invoke(GetMaxExtraPerformancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMaxExtraPerformancesResult>("volcengine:ebs/getMaxExtraPerformances:getMaxExtraPerformances", args ?? new GetMaxExtraPerformancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaxExtraPerformancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The size of the volume. Unit: GiB.
        /// </summary>
        [Input("size")]
        public int? Size { get; set; }

        /// <summary>
        /// The id of the volume.
        /// </summary>
        [Input("volumeId")]
        public string? VolumeId { get; set; }

        /// <summary>
        /// The type of the volume. Valid values: `TSSD_TL0`.
        /// </summary>
        [Input("volumeType")]
        public string? VolumeType { get; set; }

        public GetMaxExtraPerformancesArgs()
        {
        }
        public static new GetMaxExtraPerformancesArgs Empty => new GetMaxExtraPerformancesArgs();
    }

    public sealed class GetMaxExtraPerformancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The size of the volume. Unit: GiB.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The id of the volume.
        /// </summary>
        [Input("volumeId")]
        public Input<string>? VolumeId { get; set; }

        /// <summary>
        /// The type of the volume. Valid values: `TSSD_TL0`.
        /// </summary>
        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public GetMaxExtraPerformancesInvokeArgs()
        {
        }
        public static new GetMaxExtraPerformancesInvokeArgs Empty => new GetMaxExtraPerformancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetMaxExtraPerformancesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMaxExtraPerformancesPerformanceResult> Performances;
        public readonly int? Size;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        public readonly string? VolumeId;
        public readonly string? VolumeType;

        [OutputConstructor]
        private GetMaxExtraPerformancesResult(
            string id,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.GetMaxExtraPerformancesPerformanceResult> performances,

            int? size,

            int totalCount,

            string? volumeId,

            string? volumeType)
        {
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Performances = performances;
            Size = size;
            TotalCount = totalCount;
            VolumeId = volumeId;
            VolumeType = volumeType;
        }
    }
}
