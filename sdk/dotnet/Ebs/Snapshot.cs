// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Ebs
{
    /// <summary>
    /// Provides a resource to manage ebs snapshot
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.GetZones.Invoke();
    /// 
    ///     var fooVolume = new Volcengine.Ebs.Volume("fooVolume", new()
    ///     {
    ///         VolumeName = "acc-test-volume",
    ///         VolumeType = "ESSD_PL0",
    ///         Description = "acc-test",
    ///         Kind = "data",
    ///         Size = 500,
    ///         ZoneId = fooZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         VolumeChargeType = "PostPaid",
    ///         ProjectName = "default",
    ///     });
    /// 
    ///     var fooSnapshot = new Volcengine.Ebs.Snapshot("fooSnapshot", new()
    ///     {
    ///         VolumeId = fooVolume.Id,
    ///         SnapshotName = "acc-test-snapshot",
    ///         Description = "acc-test",
    ///         RetentionDays = 3,
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Ebs.Inputs.SnapshotTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// EbsSnapshot can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:ebs/snapshot:Snapshot default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:ebs/snapshot:Snapshot")]
    public partial class Snapshot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the snapshot.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The description of the snapshot.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The project name of the snapshot.
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The retention days of the snapshot. Valid values: 1~65536. Not specifying this field means permanently preserving the snapshot.When modifying this field, the retention days only supports extension and not shortening. The value range is N+1~65536, where N is the retention days set during snapshot creation.
        /// </summary>
        [Output("retentionDays")]
        public Output<int> RetentionDays { get; private set; } = null!;

        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        [Output("snapshotName")]
        public Output<string> SnapshotName { get; private set; } = null!;

        /// <summary>
        /// The type of the snapshot.
        /// </summary>
        [Output("snapshotType")]
        public Output<string> SnapshotType { get; private set; } = null!;

        /// <summary>
        /// The status of the snapshot.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.SnapshotTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The volume id to create snapshot.
        /// </summary>
        [Output("volumeId")]
        public Output<string> VolumeId { get; private set; } = null!;

        /// <summary>
        /// The volume kind of the snapshot.
        /// </summary>
        [Output("volumeKind")]
        public Output<string> VolumeKind { get; private set; } = null!;

        /// <summary>
        /// The volume name of the snapshot.
        /// </summary>
        [Output("volumeName")]
        public Output<string> VolumeName { get; private set; } = null!;

        /// <summary>
        /// The volume size of the snapshot.
        /// </summary>
        [Output("volumeSize")]
        public Output<int> VolumeSize { get; private set; } = null!;

        /// <summary>
        /// The volume status of the snapshot.
        /// </summary>
        [Output("volumeStatus")]
        public Output<string> VolumeStatus { get; private set; } = null!;

        /// <summary>
        /// The volume type of the snapshot.
        /// </summary>
        [Output("volumeType")]
        public Output<string> VolumeType { get; private set; } = null!;

        /// <summary>
        /// The zone id of the snapshot.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a Snapshot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Snapshot(string name, SnapshotArgs args, CustomResourceOptions? options = null)
            : base("volcengine:ebs/snapshot:Snapshot", name, args ?? new SnapshotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Snapshot(string name, Input<string> id, SnapshotState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:ebs/snapshot:Snapshot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Snapshot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Snapshot Get(string name, Input<string> id, SnapshotState? state = null, CustomResourceOptions? options = null)
        {
            return new Snapshot(name, id, state, options);
        }
    }

    public sealed class SnapshotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the snapshot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The project name of the snapshot.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The retention days of the snapshot. Valid values: 1~65536. Not specifying this field means permanently preserving the snapshot.When modifying this field, the retention days only supports extension and not shortening. The value range is N+1~65536, where N is the retention days set during snapshot creation.
        /// </summary>
        [Input("retentionDays")]
        public Input<int>? RetentionDays { get; set; }

        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        [Input("snapshotName", required: true)]
        public Input<string> SnapshotName { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.SnapshotTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.SnapshotTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.SnapshotTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The volume id to create snapshot.
        /// </summary>
        [Input("volumeId", required: true)]
        public Input<string> VolumeId { get; set; } = null!;

        public SnapshotArgs()
        {
        }
        public static new SnapshotArgs Empty => new SnapshotArgs();
    }

    public sealed class SnapshotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the snapshot.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The description of the snapshot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The project name of the snapshot.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The retention days of the snapshot. Valid values: 1~65536. Not specifying this field means permanently preserving the snapshot.When modifying this field, the retention days only supports extension and not shortening. The value range is N+1~65536, where N is the retention days set during snapshot creation.
        /// </summary>
        [Input("retentionDays")]
        public Input<int>? RetentionDays { get; set; }

        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        /// <summary>
        /// The type of the snapshot.
        /// </summary>
        [Input("snapshotType")]
        public Input<string>? SnapshotType { get; set; }

        /// <summary>
        /// The status of the snapshot.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<Inputs.SnapshotTagGetArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.SnapshotTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.SnapshotTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The volume id to create snapshot.
        /// </summary>
        [Input("volumeId")]
        public Input<string>? VolumeId { get; set; }

        /// <summary>
        /// The volume kind of the snapshot.
        /// </summary>
        [Input("volumeKind")]
        public Input<string>? VolumeKind { get; set; }

        /// <summary>
        /// The volume name of the snapshot.
        /// </summary>
        [Input("volumeName")]
        public Input<string>? VolumeName { get; set; }

        /// <summary>
        /// The volume size of the snapshot.
        /// </summary>
        [Input("volumeSize")]
        public Input<int>? VolumeSize { get; set; }

        /// <summary>
        /// The volume status of the snapshot.
        /// </summary>
        [Input("volumeStatus")]
        public Input<string>? VolumeStatus { get; set; }

        /// <summary>
        /// The volume type of the snapshot.
        /// </summary>
        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        /// <summary>
        /// The zone id of the snapshot.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public SnapshotState()
        {
        }
        public static new SnapshotState Empty => new SnapshotState();
    }
}
