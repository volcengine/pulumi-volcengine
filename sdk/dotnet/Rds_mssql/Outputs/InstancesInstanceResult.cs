// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rds_mssql.Outputs
{

    [OutputType]
    public sealed class InstancesInstanceResult
    {
        /// <summary>
        /// The used backup space of the instance. Unit: GiB.
        /// </summary>
        public readonly double BackupUse;
        /// <summary>
        /// The charge detail.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesInstanceChargeDetailResult> ChargeDetails;
        /// <summary>
        /// The connection info of the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesInstanceConnectionInfoResult> ConnectionInfos;
        /// <summary>
        /// Node creation time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Compatible version. Valid values: `SQLServer_2019_Std`, `SQLServer_2019_Web`, `SQLServer_2019_Ent`.
        /// </summary>
        public readonly string DbEngineVersion;
        /// <summary>
        /// The id of the instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The inner version of the instance.
        /// </summary>
        public readonly string InnerVersion;
        /// <summary>
        /// The instance category.
        /// </summary>
        public readonly string InstanceCategory;
        /// <summary>
        /// Id of the instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// Name of the instance.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// Status of the instance.
        /// </summary>
        public readonly string InstanceStatus;
        /// <summary>
        /// Instance type. Valid values: `HA`, `Basic`, `Cluster`.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// The Memory.
        /// </summary>
        public readonly int Memory;
        /// <summary>
        /// Node detail information.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesInstanceNodeDetailInfoResult> NodeDetailInfos;
        /// <summary>
        /// The node spec.
        /// </summary>
        public readonly string NodeSpec;
        /// <summary>
        /// The count of instance parameters.
        /// </summary>
        public readonly int ParameterCount;
        /// <summary>
        /// The list of instance parameters.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesInstanceParameterResult> Parameters;
        /// <summary>
        /// The port of the instance.
        /// </summary>
        public readonly string Port;
        /// <summary>
        /// The id of the primary instance.
        /// </summary>
        public readonly string PrimaryInstanceId;
        /// <summary>
        /// The project name.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The number of read only instance.
        /// </summary>
        public readonly int ReadOnlyNumber;
        /// <summary>
        /// The region id.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// Server sorting rules.
        /// </summary>
        public readonly string ServerCollation;
        /// <summary>
        /// Whether to enable slow query function.
        /// </summary>
        public readonly bool SlowQueryEnable;
        /// <summary>
        /// The slow query time. Unit: second.
        /// </summary>
        public readonly string SlowQueryTime;
        /// <summary>
        /// The storage space.
        /// </summary>
        public readonly int StorageSpace;
        /// <summary>
        /// The storage type.
        /// </summary>
        public readonly string StorageType;
        /// <summary>
        /// The used storage space.
        /// </summary>
        public readonly double StorageUse;
        /// <summary>
        /// The subnet id.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesInstanceTagResult> Tags;
        /// <summary>
        /// The time zone.
        /// </summary>
        public readonly string TimeZone;
        /// <summary>
        /// The update time of the instance.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The CPU size of the instance. For example: 1 represents 1U.
        /// </summary>
        public readonly int VCpu;
        /// <summary>
        /// The vpc id.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The id of the zone.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private InstancesInstanceResult(
            double backupUse,

            ImmutableArray<Outputs.InstancesInstanceChargeDetailResult> chargeDetails,

            ImmutableArray<Outputs.InstancesInstanceConnectionInfoResult> connectionInfos,

            string createTime,

            string dbEngineVersion,

            string id,

            string innerVersion,

            string instanceCategory,

            string instanceId,

            string instanceName,

            string instanceStatus,

            string instanceType,

            int memory,

            ImmutableArray<Outputs.InstancesInstanceNodeDetailInfoResult> nodeDetailInfos,

            string nodeSpec,

            int parameterCount,

            ImmutableArray<Outputs.InstancesInstanceParameterResult> parameters,

            string port,

            string primaryInstanceId,

            string projectName,

            int readOnlyNumber,

            string regionId,

            string serverCollation,

            bool slowQueryEnable,

            string slowQueryTime,

            int storageSpace,

            string storageType,

            double storageUse,

            string subnetId,

            ImmutableArray<Outputs.InstancesInstanceTagResult> tags,

            string timeZone,

            string updateTime,

            int vCpu,

            string vpcId,

            string zoneId)
        {
            BackupUse = backupUse;
            ChargeDetails = chargeDetails;
            ConnectionInfos = connectionInfos;
            CreateTime = createTime;
            DbEngineVersion = dbEngineVersion;
            Id = id;
            InnerVersion = innerVersion;
            InstanceCategory = instanceCategory;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceStatus = instanceStatus;
            InstanceType = instanceType;
            Memory = memory;
            NodeDetailInfos = nodeDetailInfos;
            NodeSpec = nodeSpec;
            ParameterCount = parameterCount;
            Parameters = parameters;
            Port = port;
            PrimaryInstanceId = primaryInstanceId;
            ProjectName = projectName;
            ReadOnlyNumber = readOnlyNumber;
            RegionId = regionId;
            ServerCollation = serverCollation;
            SlowQueryEnable = slowQueryEnable;
            SlowQueryTime = slowQueryTime;
            StorageSpace = storageSpace;
            StorageType = storageType;
            StorageUse = storageUse;
            SubnetId = subnetId;
            Tags = tags;
            TimeZone = timeZone;
            UpdateTime = updateTime;
            VCpu = vCpu;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
}
