// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cr
{
    public static class GetAuthorizationTokens
    {
        /// <summary>
        /// Use this data source to query detailed information of cr authorization tokens
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Cr.GetAuthorizationTokens.Invoke(new()
        ///     {
        ///         Registry = "tf-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAuthorizationTokensResult> InvokeAsync(GetAuthorizationTokensArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthorizationTokensResult>("volcengine:cr/getAuthorizationTokens:getAuthorizationTokens", args ?? new GetAuthorizationTokensArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cr authorization tokens
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Cr.GetAuthorizationTokens.Invoke(new()
        ///     {
        ///         Registry = "tf-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAuthorizationTokensResult> Invoke(GetAuthorizationTokensInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthorizationTokensResult>("volcengine:cr/getAuthorizationTokens:getAuthorizationTokens", args ?? new GetAuthorizationTokensInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthorizationTokensArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The cr instance name want to query.
        /// </summary>
        [Input("registry", required: true)]
        public string Registry { get; set; } = null!;

        public GetAuthorizationTokensArgs()
        {
        }
        public static new GetAuthorizationTokensArgs Empty => new GetAuthorizationTokensArgs();
    }

    public sealed class GetAuthorizationTokensInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The cr instance name want to query.
        /// </summary>
        [Input("registry", required: true)]
        public Input<string> Registry { get; set; } = null!;

        public GetAuthorizationTokensInvokeArgs()
        {
        }
        public static new GetAuthorizationTokensInvokeArgs Empty => new GetAuthorizationTokensInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthorizationTokensResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        public readonly string Registry;
        /// <summary>
        /// The collection of users.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAuthorizationTokensTokenResult> Tokens;
        /// <summary>
        /// The total count of instance query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetAuthorizationTokensResult(
            string id,

            string? outputFile,

            string registry,

            ImmutableArray<Outputs.GetAuthorizationTokensTokenResult> tokens,

            int totalCount)
        {
            Id = id;
            OutputFile = outputFile;
            Registry = registry;
            Tokens = tokens;
            TotalCount = totalCount;
        }
    }
}
