// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cr
{
    public static class GetNamespaces
    {
        /// <summary>
        /// Use this data source to query detailed information of cr namespaces
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Cr.GetNamespaces.Invoke(new()
        ///     {
        ///         Names = new[]
        ///         {
        ///             "namespace-*",
        ///         },
        ///         Registry = "tf-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNamespacesResult> InvokeAsync(GetNamespacesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNamespacesResult>("volcengine:cr/getNamespaces:getNamespaces", args ?? new GetNamespacesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cr namespaces
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Cr.GetNamespaces.Invoke(new()
        ///     {
        ///         Names = new[]
        ///         {
        ///             "namespace-*",
        ///         },
        ///         Registry = "tf-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNamespacesResult> Invoke(GetNamespacesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNamespacesResult>("volcengine:cr/getNamespaces:getNamespaces", args ?? new GetNamespacesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNamespacesArgs : global::Pulumi.InvokeArgs
    {
        [Input("names")]
        private List<string>? _names;

        /// <summary>
        /// The list of instance IDs.
        /// </summary>
        public List<string> Names
        {
            get => _names ?? (_names = new List<string>());
            set => _names = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The target cr instance name.
        /// </summary>
        [Input("registry", required: true)]
        public string Registry { get; set; } = null!;

        public GetNamespacesArgs()
        {
        }
        public static new GetNamespacesArgs Empty => new GetNamespacesArgs();
    }

    public sealed class GetNamespacesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("names")]
        private InputList<string>? _names;

        /// <summary>
        /// The list of instance IDs.
        /// </summary>
        public InputList<string> Names
        {
            get => _names ?? (_names = new InputList<string>());
            set => _names = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The target cr instance name.
        /// </summary>
        [Input("registry", required: true)]
        public Input<string> Registry { get; set; } = null!;

        public GetNamespacesInvokeArgs()
        {
        }
        public static new GetNamespacesInvokeArgs Empty => new GetNamespacesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNamespacesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Names;
        /// <summary>
        /// The collection of namespaces query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespacesNamespaceResult> Namespaces;
        public readonly string? OutputFile;
        public readonly string Registry;
        /// <summary>
        /// The total count of instance query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetNamespacesResult(
            string id,

            ImmutableArray<string> names,

            ImmutableArray<Outputs.GetNamespacesNamespaceResult> namespaces,

            string? outputFile,

            string registry,

            int totalCount)
        {
            Id = id;
            Names = names;
            Namespaces = namespaces;
            OutputFile = outputFile;
            Registry = registry;
            TotalCount = totalCount;
        }
    }
}
