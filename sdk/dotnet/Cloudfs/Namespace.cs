// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloudfs
{
    /// <summary>
    /// Provides a resource to manage cloudfs namespace
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Cloudfs.Namespace("foo", new()
    ///     {
    ///         FsName = "tf-test-fs",
    ///         ReadOnly = true,
    ///         TosBucket = "tf-test",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CloudfsNamespace can be imported using the FsName:NsId, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:cloudfs/namespace:Namespace default tfname:1801439850948****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:cloudfs/namespace:Namespace")]
    public partial class Namespace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time of the namespace.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// The name of file system.
        /// </summary>
        [Output("fsName")]
        public Output<string> FsName { get; private set; } = null!;

        /// <summary>
        /// Whether the tos bucket is your own bucket.
        /// </summary>
        [Output("isMyBucket")]
        public Output<bool> IsMyBucket { get; private set; } = null!;

        /// <summary>
        /// The id of namespace.
        /// </summary>
        [Output("nsId")]
        public Output<string> NsId { get; private set; } = null!;

        /// <summary>
        /// Whether the namespace is read-only.
        /// </summary>
        [Output("readOnly")]
        public Output<bool?> ReadOnly { get; private set; } = null!;

        /// <summary>
        /// Whether the namespace is the official service for volcengine.
        /// </summary>
        [Output("serviceManaged")]
        public Output<bool> ServiceManaged { get; private set; } = null!;

        /// <summary>
        /// The status of the namespace.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("tosAccountId")]
        public Output<int?> TosAccountId { get; private set; } = null!;

        /// <summary>
        /// The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("tosAk")]
        public Output<string?> TosAk { get; private set; } = null!;

        /// <summary>
        /// The name of tos bucket.
        /// </summary>
        [Output("tosBucket")]
        public Output<string> TosBucket { get; private set; } = null!;

        /// <summary>
        /// The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path.
        /// </summary>
        [Output("tosPrefix")]
        public Output<string?> TosPrefix { get; private set; } = null!;

        /// <summary>
        /// The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("tosSk")]
        public Output<string?> TosSk { get; private set; } = null!;


        /// <summary>
        /// Create a Namespace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Namespace(string name, NamespaceArgs args, CustomResourceOptions? options = null)
            : base("volcengine:cloudfs/namespace:Namespace", name, args ?? new NamespaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Namespace(string name, Input<string> id, NamespaceState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:cloudfs/namespace:Namespace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Namespace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Namespace Get(string name, Input<string> id, NamespaceState? state = null, CustomResourceOptions? options = null)
        {
            return new Namespace(name, id, state, options);
        }
    }

    public sealed class NamespaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName", required: true)]
        public Input<string> FsName { get; set; } = null!;

        /// <summary>
        /// Whether the namespace is read-only.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("tosAccountId")]
        public Input<int>? TosAccountId { get; set; }

        /// <summary>
        /// The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("tosAk")]
        public Input<string>? TosAk { get; set; }

        /// <summary>
        /// The name of tos bucket.
        /// </summary>
        [Input("tosBucket", required: true)]
        public Input<string> TosBucket { get; set; } = null!;

        /// <summary>
        /// The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path.
        /// </summary>
        [Input("tosPrefix")]
        public Input<string>? TosPrefix { get; set; }

        /// <summary>
        /// The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("tosSk")]
        public Input<string>? TosSk { get; set; }

        public NamespaceArgs()
        {
        }
        public static new NamespaceArgs Empty => new NamespaceArgs();
    }

    public sealed class NamespaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time of the namespace.
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName")]
        public Input<string>? FsName { get; set; }

        /// <summary>
        /// Whether the tos bucket is your own bucket.
        /// </summary>
        [Input("isMyBucket")]
        public Input<bool>? IsMyBucket { get; set; }

        /// <summary>
        /// The id of namespace.
        /// </summary>
        [Input("nsId")]
        public Input<string>? NsId { get; set; }

        /// <summary>
        /// Whether the namespace is read-only.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// Whether the namespace is the official service for volcengine.
        /// </summary>
        [Input("serviceManaged")]
        public Input<bool>? ServiceManaged { get; set; }

        /// <summary>
        /// The status of the namespace.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("tosAccountId")]
        public Input<int>? TosAccountId { get; set; }

        /// <summary>
        /// The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("tosAk")]
        public Input<string>? TosAk { get; set; }

        /// <summary>
        /// The name of tos bucket.
        /// </summary>
        [Input("tosBucket")]
        public Input<string>? TosBucket { get; set; }

        /// <summary>
        /// The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path.
        /// </summary>
        [Input("tosPrefix")]
        public Input<string>? TosPrefix { get; set; }

        /// <summary>
        /// The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("tosSk")]
        public Input<string>? TosSk { get; set; }

        public NamespaceState()
        {
        }
        public static new NamespaceState Empty => new NamespaceState();
    }
}
