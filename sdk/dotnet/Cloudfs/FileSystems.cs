// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloudfs
{
    public static class FileSystems
    {
        /// <summary>
        /// Use this data source to query detailed information of cloudfs file systems
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Cloudfs.FileSystems.Invoke(new()
        ///     {
        ///         FsName = "tftest2",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<FileSystemsResult> InvokeAsync(FileSystemsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<FileSystemsResult>("volcengine:cloudfs/fileSystems:FileSystems", args ?? new FileSystemsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cloudfs file systems
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Cloudfs.FileSystems.Invoke(new()
        ///     {
        ///         FsName = "tftest2",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<FileSystemsResult> Invoke(FileSystemsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<FileSystemsResult>("volcengine:cloudfs/fileSystems:FileSystems", args ?? new FileSystemsInvokeArgs(), options.WithDefaults());
    }


    public sealed class FileSystemsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName")]
        public string? FsName { get; set; }

        /// <summary>
        /// The status of file system.
        /// </summary>
        [Input("metaStatus")]
        public string? MetaStatus { get; set; }

        /// <summary>
        /// A Name Regex of cloudfs.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public FileSystemsArgs()
        {
        }
        public static new FileSystemsArgs Empty => new FileSystemsArgs();
    }

    public sealed class FileSystemsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName")]
        public Input<string>? FsName { get; set; }

        /// <summary>
        /// The status of file system.
        /// </summary>
        [Input("metaStatus")]
        public Input<string>? MetaStatus { get; set; }

        /// <summary>
        /// A Name Regex of cloudfs.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public FileSystemsInvokeArgs()
        {
        }
        public static new FileSystemsInvokeArgs Empty => new FileSystemsInvokeArgs();
    }


    [OutputType]
    public sealed class FileSystemsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.FileSystemsFileSystemResult> FileSystems;
        public readonly string? FsName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? MetaStatus;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private FileSystemsResult(
            ImmutableArray<Outputs.FileSystemsFileSystemResult> fileSystems,

            string? fsName,

            string id,

            string? metaStatus,

            string? nameRegex,

            string? outputFile,

            int totalCount)
        {
            FileSystems = fileSystems;
            FsName = fsName;
            Id = id;
            MetaStatus = metaStatus;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
