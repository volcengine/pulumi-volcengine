// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloudfs
{
    public static class Namespaces
    {
        /// <summary>
        /// Use this data source to query detailed information of cloudfs namespaces
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Cloudfs.Namespaces.Invoke(new()
        ///     {
        ///         FsName = "tf-test-fs",
        ///         NsId = "1801439850948****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<NamespacesResult> InvokeAsync(NamespacesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<NamespacesResult>("volcengine:cloudfs/namespaces:Namespaces", args ?? new NamespacesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cloudfs namespaces
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Cloudfs.Namespaces.Invoke(new()
        ///     {
        ///         FsName = "tf-test-fs",
        ///         NsId = "1801439850948****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<NamespacesResult> Invoke(NamespacesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<NamespacesResult>("volcengine:cloudfs/namespaces:Namespaces", args ?? new NamespacesInvokeArgs(), options.WithDefaults());
    }


    public sealed class NamespacesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName", required: true)]
        public string FsName { get; set; } = null!;

        /// <summary>
        /// The id of namespace.
        /// </summary>
        [Input("nsId")]
        public string? NsId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The name of tos bucket.
        /// </summary>
        [Input("tosBucket")]
        public string? TosBucket { get; set; }

        public NamespacesArgs()
        {
        }
        public static new NamespacesArgs Empty => new NamespacesArgs();
    }

    public sealed class NamespacesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName", required: true)]
        public Input<string> FsName { get; set; } = null!;

        /// <summary>
        /// The id of namespace.
        /// </summary>
        [Input("nsId")]
        public Input<string>? NsId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The name of tos bucket.
        /// </summary>
        [Input("tosBucket")]
        public Input<string>? TosBucket { get; set; }

        public NamespacesInvokeArgs()
        {
        }
        public static new NamespacesInvokeArgs Empty => new NamespacesInvokeArgs();
    }


    [OutputType]
    public sealed class NamespacesResult
    {
        public readonly string FsName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.NamespacesNamespaceResult> Namespaces;
        public readonly string? NsId;
        public readonly string? OutputFile;
        /// <summary>
        /// The name of the tos bucket.
        /// </summary>
        public readonly string? TosBucket;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private NamespacesResult(
            string fsName,

            string id,

            ImmutableArray<Outputs.NamespacesNamespaceResult> namespaces,

            string? nsId,

            string? outputFile,

            string? tosBucket,

            int totalCount)
        {
            FsName = fsName;
            Id = id;
            Namespaces = namespaces;
            NsId = nsId;
            OutputFile = outputFile;
            TosBucket = tosBucket;
            TotalCount = totalCount;
        }
    }
}
