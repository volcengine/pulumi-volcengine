// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloudfs
{
    /// <summary>
    /// Provides a resource to manage cloudfs file system
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Cloudfs.FileSystem("foo", new()
    ///     {
    ///         CacheCapacityTib = 10,
    ///         CachePlan = "T2",
    ///         FsName = "tffile",
    ///         Mode = "HDFS_MODE",
    ///         ReadOnly = true,
    ///         SecurityGroupId = "sg-rrv1klfg5s00v0x578mx14m",
    ///         SubnetId = "subnet-13fca1crr5d6o3n6nu46cyb5m",
    ///         TosBucket = "tfacc",
    ///         TosPrefix = "pre/",
    ///         VpcRouteEnabled = true,
    ///         ZoneId = "cn-beijing-b",
    ///     });
    /// 
    ///     var foo1 = new Volcengine.Cloudfs.FileSystem("foo1", new()
    ///     {
    ///         CacheCapacityTib = 15,
    ///         CachePlan = "T2",
    ///         FsName = "tffileu",
    ///         Mode = "ACC_MODE",
    ///         ReadOnly = true,
    ///         SecurityGroupId = "sg-rrv1klfg5s00v0x578mx14m",
    ///         SubnetId = "subnet-13fca1crr5d6o3n6nu46cyb5m",
    ///         TosBucket = "tfacc",
    ///         VpcRouteEnabled = false,
    ///         ZoneId = "cn-beijing-b",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CloudFileSystem can be imported using the FsName, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:cloudfs/fileSystem:FileSystem default tfname
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:cloudfs/fileSystem:FileSystem")]
    public partial class FileSystem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The default vpc access id.
        /// </summary>
        [Output("accessId")]
        public Output<string> AccessId { get; private set; } = null!;

        /// <summary>
        /// The capacity of cache. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Output("cacheCapacityTib")]
        public Output<int?> CacheCapacityTib { get; private set; } = null!;

        /// <summary>
        /// The cache plan. The value can be `DISABLED` or `T2` or `T4`. When expanding the cache size, the cache plan should remain the same. For data lakes, cache must be enabled.
        /// </summary>
        [Output("cachePlan")]
        public Output<string> CachePlan { get; private set; } = null!;

        /// <summary>
        /// The creation time.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// The name of file system.
        /// </summary>
        [Output("fsName")]
        public Output<string> FsName { get; private set; } = null!;

        /// <summary>
        /// The mode of file system. The value can be `HDFS_MODE` or `ACC_MODE`.
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// The point mount.
        /// </summary>
        [Output("mountPoint")]
        public Output<string> MountPoint { get; private set; } = null!;

        /// <summary>
        /// Whether the Namespace created automatically when mounting the TOS Bucket is read-only. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("readOnly")]
        public Output<bool?> ReadOnly { get; private set; } = null!;

        /// <summary>
        /// The id of security group. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Output("securityGroupId")]
        public Output<string?> SecurityGroupId { get; private set; } = null!;

        /// <summary>
        /// Status of file system.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The id of subnet. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Output("subnetId")]
        public Output<string?> SubnetId { get; private set; } = null!;

        /// <summary>
        /// When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Output("tosAccountId")]
        public Output<int?> TosAccountId { get; private set; } = null!;

        /// <summary>
        /// The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Output("tosAk")]
        public Output<string?> TosAk { get; private set; } = null!;

        /// <summary>
        /// The tos bucket. When importing ACC_MODE resources, this attribute will not be imported.
        /// </summary>
        [Output("tosBucket")]
        public Output<string?> TosBucket { get; private set; } = null!;

        /// <summary>
        /// The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path. When importing ACC_MODE resources, this attribute will not be imported.
        /// </summary>
        [Output("tosPrefix")]
        public Output<string?> TosPrefix { get; private set; } = null!;

        /// <summary>
        /// The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Output("tosSk")]
        public Output<string?> TosSk { get; private set; } = null!;

        /// <summary>
        /// The id of vpc.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// Whether enable all vpc route.
        /// </summary>
        [Output("vpcRouteEnabled")]
        public Output<bool?> VpcRouteEnabled { get; private set; } = null!;

        /// <summary>
        /// The id of zone.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a FileSystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FileSystem(string name, FileSystemArgs args, CustomResourceOptions? options = null)
            : base("volcengine:cloudfs/fileSystem:FileSystem", name, args ?? new FileSystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FileSystem(string name, Input<string> id, FileSystemState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:cloudfs/fileSystem:FileSystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FileSystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FileSystem Get(string name, Input<string> id, FileSystemState? state = null, CustomResourceOptions? options = null)
        {
            return new FileSystem(name, id, state, options);
        }
    }

    public sealed class FileSystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The capacity of cache. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Input("cacheCapacityTib")]
        public Input<int>? CacheCapacityTib { get; set; }

        /// <summary>
        /// The cache plan. The value can be `DISABLED` or `T2` or `T4`. When expanding the cache size, the cache plan should remain the same. For data lakes, cache must be enabled.
        /// </summary>
        [Input("cachePlan", required: true)]
        public Input<string> CachePlan { get; set; } = null!;

        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName", required: true)]
        public Input<string> FsName { get; set; } = null!;

        /// <summary>
        /// The mode of file system. The value can be `HDFS_MODE` or `ACC_MODE`.
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// Whether the Namespace created automatically when mounting the TOS Bucket is read-only. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// The id of security group. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        /// <summary>
        /// The id of subnet. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Input("tosAccountId")]
        public Input<int>? TosAccountId { get; set; }

        /// <summary>
        /// The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Input("tosAk")]
        public Input<string>? TosAk { get; set; }

        /// <summary>
        /// The tos bucket. When importing ACC_MODE resources, this attribute will not be imported.
        /// </summary>
        [Input("tosBucket")]
        public Input<string>? TosBucket { get; set; }

        /// <summary>
        /// The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path. When importing ACC_MODE resources, this attribute will not be imported.
        /// </summary>
        [Input("tosPrefix")]
        public Input<string>? TosPrefix { get; set; }

        /// <summary>
        /// The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Input("tosSk")]
        public Input<string>? TosSk { get; set; }

        /// <summary>
        /// Whether enable all vpc route.
        /// </summary>
        [Input("vpcRouteEnabled")]
        public Input<bool>? VpcRouteEnabled { get; set; }

        /// <summary>
        /// The id of zone.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public FileSystemArgs()
        {
        }
        public static new FileSystemArgs Empty => new FileSystemArgs();
    }

    public sealed class FileSystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default vpc access id.
        /// </summary>
        [Input("accessId")]
        public Input<string>? AccessId { get; set; }

        /// <summary>
        /// The capacity of cache. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Input("cacheCapacityTib")]
        public Input<int>? CacheCapacityTib { get; set; }

        /// <summary>
        /// The cache plan. The value can be `DISABLED` or `T2` or `T4`. When expanding the cache size, the cache plan should remain the same. For data lakes, cache must be enabled.
        /// </summary>
        [Input("cachePlan")]
        public Input<string>? CachePlan { get; set; }

        /// <summary>
        /// The creation time.
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName")]
        public Input<string>? FsName { get; set; }

        /// <summary>
        /// The mode of file system. The value can be `HDFS_MODE` or `ACC_MODE`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// The point mount.
        /// </summary>
        [Input("mountPoint")]
        public Input<string>? MountPoint { get; set; }

        /// <summary>
        /// Whether the Namespace created automatically when mounting the TOS Bucket is read-only. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// The id of security group. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        /// <summary>
        /// Status of file system.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The id of subnet. This parameter is required when cache acceleration is enabled.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Input("tosAccountId")]
        public Input<int>? TosAccountId { get; set; }

        /// <summary>
        /// The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Input("tosAk")]
        public Input<string>? TosAk { get; set; }

        /// <summary>
        /// The tos bucket. When importing ACC_MODE resources, this attribute will not be imported.
        /// </summary>
        [Input("tosBucket")]
        public Input<string>? TosBucket { get; set; }

        /// <summary>
        /// The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path. When importing ACC_MODE resources, this attribute will not be imported.
        /// </summary>
        [Input("tosPrefix")]
        public Input<string>? TosPrefix { get; set; }

        /// <summary>
        /// The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported.
        /// </summary>
        [Input("tosSk")]
        public Input<string>? TosSk { get; set; }

        /// <summary>
        /// The id of vpc.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// Whether enable all vpc route.
        /// </summary>
        [Input("vpcRouteEnabled")]
        public Input<bool>? VpcRouteEnabled { get; set; }

        /// <summary>
        /// The id of zone.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public FileSystemState()
        {
        }
        public static new FileSystemState Empty => new FileSystemState();
    }
}
