// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloudfs
{
    public static class Accesses
    {
        /// <summary>
        /// Use this data source to query detailed information of cloudfs accesses
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Cloudfs.Accesses.Invoke(new()
        ///     {
        ///         FsName = "tftest2",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<AccessesResult> InvokeAsync(AccessesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<AccessesResult>("volcengine:cloudfs/accesses:Accesses", args ?? new AccessesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cloudfs accesses
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Cloudfs.Accesses.Invoke(new()
        ///     {
        ///         FsName = "tftest2",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<AccessesResult> Invoke(AccessesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<AccessesResult>("volcengine:cloudfs/accesses:Accesses", args ?? new AccessesInvokeArgs(), options.WithDefaults());
    }


    public sealed class AccessesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName", required: true)]
        public string FsName { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public AccessesArgs()
        {
        }
        public static new AccessesArgs Empty => new AccessesArgs();
    }

    public sealed class AccessesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of file system.
        /// </summary>
        [Input("fsName", required: true)]
        public Input<string> FsName { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public AccessesInvokeArgs()
        {
        }
        public static new AccessesInvokeArgs Empty => new AccessesInvokeArgs();
    }


    [OutputType]
    public sealed class AccessesResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.AccessesAccessResult> Accesses;
        /// <summary>
        /// The name of cloud fs.
        /// </summary>
        public readonly string FsName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private AccessesResult(
            ImmutableArray<Outputs.AccessesAccessResult> accesses,

            string fsName,

            string id,

            string? outputFile,

            int totalCount)
        {
            Accesses = accesses;
            FsName = fsName;
            Id = id;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
