// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Financial_relation
{
    public static class GetFinancialRelations
    {
        /// <summary>
        /// Use this data source to query detailed information of financial relations
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Financial_relation.GetFinancialRelations.Invoke(new()
        ///     {
        ///         AccountIds = new[]
        ///         {
        ///             "210026****",
        ///         },
        ///         Relations = new[]
        ///         {
        ///             "1",
        ///         },
        ///         Statuses = new[]
        ///         {
        ///             "200",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFinancialRelationsResult> InvokeAsync(GetFinancialRelationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFinancialRelationsResult>("volcengine:financial_relation/getFinancialRelations:getFinancialRelations", args ?? new GetFinancialRelationsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of financial relations
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Financial_relation.GetFinancialRelations.Invoke(new()
        ///     {
        ///         AccountIds = new[]
        ///         {
        ///             "210026****",
        ///         },
        ///         Relations = new[]
        ///         {
        ///             "1",
        ///         },
        ///         Statuses = new[]
        ///         {
        ///             "200",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFinancialRelationsResult> Invoke(GetFinancialRelationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFinancialRelationsResult>("volcengine:financial_relation/getFinancialRelations:getFinancialRelations", args ?? new GetFinancialRelationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFinancialRelationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountIds")]
        private List<string>? _accountIds;

        /// <summary>
        /// A list of sub account IDs.
        /// </summary>
        public List<string> AccountIds
        {
            get => _accountIds ?? (_accountIds = new List<string>());
            set => _accountIds = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("relations")]
        private List<string>? _relations;

        /// <summary>
        /// A list of relation. Valid values: `1`, `4`.
        /// </summary>
        public List<string> Relations
        {
            get => _relations ?? (_relations = new List<string>());
            set => _relations = value;
        }

        [Input("statuses")]
        private List<string>? _statuses;

        /// <summary>
        /// A list of status. Valid values: `100`, `200`, `250`, `300`, `400`, `500`.
        /// </summary>
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        public GetFinancialRelationsArgs()
        {
        }
        public static new GetFinancialRelationsArgs Empty => new GetFinancialRelationsArgs();
    }

    public sealed class GetFinancialRelationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountIds")]
        private InputList<string>? _accountIds;

        /// <summary>
        /// A list of sub account IDs.
        /// </summary>
        public InputList<string> AccountIds
        {
            get => _accountIds ?? (_accountIds = new InputList<string>());
            set => _accountIds = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("relations")]
        private InputList<string>? _relations;

        /// <summary>
        /// A list of relation. Valid values: `1`, `4`.
        /// </summary>
        public InputList<string> Relations
        {
            get => _relations ?? (_relations = new InputList<string>());
            set => _relations = value;
        }

        [Input("statuses")]
        private InputList<string>? _statuses;

        /// <summary>
        /// A list of status. Valid values: `100`, `200`, `250`, `300`, `400`, `500`.
        /// </summary>
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        public GetFinancialRelationsInvokeArgs()
        {
        }
        public static new GetFinancialRelationsInvokeArgs Empty => new GetFinancialRelationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFinancialRelationsResult
    {
        public readonly ImmutableArray<string> AccountIds;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFinancialRelationsFinancialRelationResult> FinancialRelations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        /// <summary>
        /// The relation of the financial.
        /// </summary>
        public readonly ImmutableArray<string> Relations;
        /// <summary>
        /// The status of the financial relation.
        /// </summary>
        public readonly ImmutableArray<string> Statuses;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetFinancialRelationsResult(
            ImmutableArray<string> accountIds,

            ImmutableArray<Outputs.GetFinancialRelationsFinancialRelationResult> financialRelations,

            string id,

            string? outputFile,

            ImmutableArray<string> relations,

            ImmutableArray<string> statuses,

            int totalCount)
        {
            AccountIds = accountIds;
            FinancialRelations = financialRelations;
            Id = id;
            OutputFile = outputFile;
            Relations = relations;
            Statuses = statuses;
            TotalCount = totalCount;
        }
    }
}
