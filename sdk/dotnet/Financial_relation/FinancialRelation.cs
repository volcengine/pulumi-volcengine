// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Financial_relation
{
    /// <summary>
    /// Provides a resource to manage financial relation
    /// 
    /// ## Import
    /// 
    /// FinancialRelation can be imported using the sub_account_id:relation:relation_id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:financial_relation/financialRelation:FinancialRelation default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:financial_relation/financialRelation:FinancialRelation")]
    public partial class FinancialRelation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The display name of the sub account.
        /// </summary>
        [Output("accountAlias")]
        public Output<string> AccountAlias { get; private set; } = null!;

        /// <summary>
        /// The authorization list of financial management. This field is valid and required when the relation is 4. Valid value range is `1-5`.
        /// </summary>
        [Output("authLists")]
        public Output<ImmutableArray<int>> AuthLists { get; private set; } = null!;

        /// <summary>
        /// The relation of the financial. Valid values: `1`, `4`. `1` means financial custody, `4` means financial management.
        /// </summary>
        [Output("relation")]
        public Output<int> Relation { get; private set; } = null!;

        /// <summary>
        /// The id of the financial relation.
        /// </summary>
        [Output("relationId")]
        public Output<string> RelationId { get; private set; } = null!;

        /// <summary>
        /// The status of the financial relation.
        /// </summary>
        [Output("status")]
        public Output<int> Status { get; private set; } = null!;

        /// <summary>
        /// The sub account id.
        /// </summary>
        [Output("subAccountId")]
        public Output<int> SubAccountId { get; private set; } = null!;


        /// <summary>
        /// Create a FinancialRelation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FinancialRelation(string name, FinancialRelationArgs args, CustomResourceOptions? options = null)
            : base("volcengine:financial_relation/financialRelation:FinancialRelation", name, args ?? new FinancialRelationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FinancialRelation(string name, Input<string> id, FinancialRelationState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:financial_relation/financialRelation:FinancialRelation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FinancialRelation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FinancialRelation Get(string name, Input<string> id, FinancialRelationState? state = null, CustomResourceOptions? options = null)
        {
            return new FinancialRelation(name, id, state, options);
        }
    }

    public sealed class FinancialRelationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The display name of the sub account.
        /// </summary>
        [Input("accountAlias")]
        public Input<string>? AccountAlias { get; set; }

        [Input("authLists")]
        private InputList<int>? _authLists;

        /// <summary>
        /// The authorization list of financial management. This field is valid and required when the relation is 4. Valid value range is `1-5`.
        /// </summary>
        public InputList<int> AuthLists
        {
            get => _authLists ?? (_authLists = new InputList<int>());
            set => _authLists = value;
        }

        /// <summary>
        /// The relation of the financial. Valid values: `1`, `4`. `1` means financial custody, `4` means financial management.
        /// </summary>
        [Input("relation")]
        public Input<int>? Relation { get; set; }

        /// <summary>
        /// The sub account id.
        /// </summary>
        [Input("subAccountId", required: true)]
        public Input<int> SubAccountId { get; set; } = null!;

        public FinancialRelationArgs()
        {
        }
        public static new FinancialRelationArgs Empty => new FinancialRelationArgs();
    }

    public sealed class FinancialRelationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The display name of the sub account.
        /// </summary>
        [Input("accountAlias")]
        public Input<string>? AccountAlias { get; set; }

        [Input("authLists")]
        private InputList<int>? _authLists;

        /// <summary>
        /// The authorization list of financial management. This field is valid and required when the relation is 4. Valid value range is `1-5`.
        /// </summary>
        public InputList<int> AuthLists
        {
            get => _authLists ?? (_authLists = new InputList<int>());
            set => _authLists = value;
        }

        /// <summary>
        /// The relation of the financial. Valid values: `1`, `4`. `1` means financial custody, `4` means financial management.
        /// </summary>
        [Input("relation")]
        public Input<int>? Relation { get; set; }

        /// <summary>
        /// The id of the financial relation.
        /// </summary>
        [Input("relationId")]
        public Input<string>? RelationId { get; set; }

        /// <summary>
        /// The status of the financial relation.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// The sub account id.
        /// </summary>
        [Input("subAccountId")]
        public Input<int>? SubAccountId { get; set; }

        public FinancialRelationState()
        {
        }
        public static new FinancialRelationState Empty => new FinancialRelationState();
    }
}
