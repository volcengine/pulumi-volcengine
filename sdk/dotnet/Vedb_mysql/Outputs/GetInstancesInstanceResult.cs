// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vedb_mysql.Outputs
{

    [OutputType]
    public sealed class GetInstancesInstanceResult
    {
        /// <summary>
        /// Whether auto-renewal is enabled in the prepaid scenario. Values:
        /// true: Auto-renewal is enabled.
        /// false: Auto-renewal is not enabled.
        /// </summary>
        public readonly bool AutoRenew;
        /// <summary>
        /// The billing expiration time in the prepaid scenario, in the format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string ChargeEndTime;
        /// <summary>
        /// The time when billing starts. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string ChargeStartTime;
        /// <summary>
        /// Payment status:
        /// Normal: Normal.
        /// Overdue: In arrears.
        /// Shutdown: Shut down.
        /// </summary>
        public readonly string ChargeStatus;
        /// <summary>
        /// The charge type of the veDB Mysql instance.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// The create time of the veDB Mysql instance.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The version of the veDB Mysql instance.
        /// </summary>
        public readonly string DbEngineVersion;
        /// <summary>
        /// The ID of the veDB Mysql instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The id of the veDB Mysql instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// The name of the veDB Mysql instance.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// The status of the veDB Mysql instance.
        /// </summary>
        public readonly string InstanceStatus;
        /// <summary>
        /// Whether the table name is case sensitive, the default value is 1.
        /// Ranges:
        /// 0: Table names are stored as fixed and table names are case-sensitive.
        /// 1: Table names will be stored in lowercase and table names are not case sensitive.
        /// </summary>
        public readonly string LowerCaseTableNames;
        /// <summary>
        /// Detailed information of instance nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceNodeResult> Nodes;
        /// <summary>
        /// Expected release time when shut down due to arrears. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string OverdueReclaimTime;
        /// <summary>
        /// Overdue shutdown time. Format: yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string OverdueTime;
        /// <summary>
        /// Total storage capacity in GiB for prepaid services.
        /// </summary>
        public readonly int PrePaidStorageInGb;
        /// <summary>
        /// The project name of the veDB Mysql instance.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The region id.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// Storage billing type. Values:
        /// PostPaid: Pay-as-you-go (postpaid).
        /// PrePaid: Monthly/yearly subscription (prepaid).
        /// </summary>
        public readonly string StorageChargeType;
        /// <summary>
        /// Used storage size, unit: GiB.
        /// </summary>
        public readonly double StorageUsedGib;
        /// <summary>
        /// The subnet ID of the veDB Mysql instance.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceTagResult> Tags;
        /// <summary>
        /// Time zone.
        /// </summary>
        public readonly string TimeZone;
        /// <summary>
        /// The vpc ID of the veDB Mysql instance.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The available zone of the veDB Mysql instance.
        /// </summary>
        public readonly string ZoneIds;

        [OutputConstructor]
        private GetInstancesInstanceResult(
            bool autoRenew,

            string chargeEndTime,

            string chargeStartTime,

            string chargeStatus,

            string chargeType,

            string createTime,

            string dbEngineVersion,

            string id,

            string instanceId,

            string instanceName,

            string instanceStatus,

            string lowerCaseTableNames,

            ImmutableArray<Outputs.GetInstancesInstanceNodeResult> nodes,

            string overdueReclaimTime,

            string overdueTime,

            int prePaidStorageInGb,

            string projectName,

            string regionId,

            string storageChargeType,

            double storageUsedGib,

            string subnetId,

            ImmutableArray<Outputs.GetInstancesInstanceTagResult> tags,

            string timeZone,

            string vpcId,

            string zoneIds)
        {
            AutoRenew = autoRenew;
            ChargeEndTime = chargeEndTime;
            ChargeStartTime = chargeStartTime;
            ChargeStatus = chargeStatus;
            ChargeType = chargeType;
            CreateTime = createTime;
            DbEngineVersion = dbEngineVersion;
            Id = id;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceStatus = instanceStatus;
            LowerCaseTableNames = lowerCaseTableNames;
            Nodes = nodes;
            OverdueReclaimTime = overdueReclaimTime;
            OverdueTime = overdueTime;
            PrePaidStorageInGb = prePaidStorageInGb;
            ProjectName = projectName;
            RegionId = regionId;
            StorageChargeType = storageChargeType;
            StorageUsedGib = storageUsedGib;
            SubnetId = subnetId;
            Tags = tags;
            TimeZone = timeZone;
            VpcId = vpcId;
            ZoneIds = zoneIds;
        }
    }
}
