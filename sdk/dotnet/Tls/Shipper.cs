// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls
{
    /// <summary>
    /// Provides a resource to manage tls shipper
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Tls.Shipper("foo", new()
    ///     {
    ///         ContentInfo = new Volcengine.Tls.Inputs.ShipperContentInfoArgs
    ///         {
    ///             Format = "json",
    ///             JsonInfo = new Volcengine.Tls.Inputs.ShipperContentInfoJsonInfoArgs
    ///             {
    ///                 Enable = true,
    ///                 Keys = new[]
    ///                 {
    ///                     "__content",
    ///                     "__pod_name__",
    ///                     "__path__",
    ///                     "__tf-test__",
    ///                 },
    ///             },
    ///         },
    ///         ShipperEndTime = 1751255700021,
    ///         ShipperName = "tf-test",
    ///         ShipperStartTime = 1750737324521,
    ///         ShipperType = "tos",
    ///         TopicId = "8ba48bd7-2493-4300-b1d0-cb7xxxxxx",
    ///         TosShipperInfo = new Volcengine.Tls.Inputs.ShipperTosShipperInfoArgs
    ///         {
    ///             Bucket = "tf-test",
    ///             Compress = "snappy",
    ///             Interval = 100,
    ///             MaxSize = 100,
    ///             PartitionFormat = "%Y/%m/%d/%H/%M",
    ///             Prefix = "terraform_1.9.4_linux_amd64.zip",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Shipper can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:tls/shipper:Shipper default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:tls/shipper:Shipper")]
    public partial class Shipper : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration of the delivery format for log content.
        /// </summary>
        [Output("contentInfo")]
        public Output<Outputs.ShipperContentInfo> ContentInfo { get; private set; } = null!;

        /// <summary>
        /// JSON format log content configuration.
        /// </summary>
        [Output("kafkaShipperInfo")]
        public Output<Outputs.ShipperKafkaShipperInfo> KafkaShipperInfo { get; private set; } = null!;

        /// <summary>
        /// Delivery end time, millisecond timestamp. If not configured, it will keep delivering. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("shipperEndTime")]
        public Output<int?> ShipperEndTime { get; private set; } = null!;

        /// <summary>
        /// Delivery configuration name.
        /// </summary>
        [Output("shipperName")]
        public Output<string> ShipperName { get; private set; } = null!;

        /// <summary>
        /// Delivery start time, millisecond timestamp. If not configured, it defaults to the current time. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("shipperStartTime")]
        public Output<int?> ShipperStartTime { get; private set; } = null!;

        /// <summary>
        /// The type of delivery.
        /// </summary>
        [Output("shipperType")]
        public Output<string> ShipperType { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the delivery configuration. The default value is true.
        /// </summary>
        [Output("status")]
        public Output<bool> Status { get; private set; } = null!;

        /// <summary>
        /// The log topic ID where the log to be delivered is located.
        /// </summary>
        [Output("topicId")]
        public Output<string> TopicId { get; private set; } = null!;

        /// <summary>
        /// Deliver the relevant configuration to the object storage (TOS).
        /// </summary>
        [Output("tosShipperInfo")]
        public Output<Outputs.ShipperTosShipperInfo> TosShipperInfo { get; private set; } = null!;


        /// <summary>
        /// Create a Shipper resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Shipper(string name, ShipperArgs args, CustomResourceOptions? options = null)
            : base("volcengine:tls/shipper:Shipper", name, args ?? new ShipperArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Shipper(string name, Input<string> id, ShipperState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:tls/shipper:Shipper", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Shipper resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Shipper Get(string name, Input<string> id, ShipperState? state = null, CustomResourceOptions? options = null)
        {
            return new Shipper(name, id, state, options);
        }
    }

    public sealed class ShipperArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration of the delivery format for log content.
        /// </summary>
        [Input("contentInfo", required: true)]
        public Input<Inputs.ShipperContentInfoArgs> ContentInfo { get; set; } = null!;

        /// <summary>
        /// JSON format log content configuration.
        /// </summary>
        [Input("kafkaShipperInfo")]
        public Input<Inputs.ShipperKafkaShipperInfoArgs>? KafkaShipperInfo { get; set; }

        /// <summary>
        /// Delivery end time, millisecond timestamp. If not configured, it will keep delivering. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("shipperEndTime")]
        public Input<int>? ShipperEndTime { get; set; }

        /// <summary>
        /// Delivery configuration name.
        /// </summary>
        [Input("shipperName", required: true)]
        public Input<string> ShipperName { get; set; } = null!;

        /// <summary>
        /// Delivery start time, millisecond timestamp. If not configured, it defaults to the current time. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("shipperStartTime")]
        public Input<int>? ShipperStartTime { get; set; }

        /// <summary>
        /// The type of delivery.
        /// </summary>
        [Input("shipperType")]
        public Input<string>? ShipperType { get; set; }

        /// <summary>
        /// Whether to enable the delivery configuration. The default value is true.
        /// </summary>
        [Input("status")]
        public Input<bool>? Status { get; set; }

        /// <summary>
        /// The log topic ID where the log to be delivered is located.
        /// </summary>
        [Input("topicId", required: true)]
        public Input<string> TopicId { get; set; } = null!;

        /// <summary>
        /// Deliver the relevant configuration to the object storage (TOS).
        /// </summary>
        [Input("tosShipperInfo")]
        public Input<Inputs.ShipperTosShipperInfoArgs>? TosShipperInfo { get; set; }

        public ShipperArgs()
        {
        }
        public static new ShipperArgs Empty => new ShipperArgs();
    }

    public sealed class ShipperState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration of the delivery format for log content.
        /// </summary>
        [Input("contentInfo")]
        public Input<Inputs.ShipperContentInfoGetArgs>? ContentInfo { get; set; }

        /// <summary>
        /// JSON format log content configuration.
        /// </summary>
        [Input("kafkaShipperInfo")]
        public Input<Inputs.ShipperKafkaShipperInfoGetArgs>? KafkaShipperInfo { get; set; }

        /// <summary>
        /// Delivery end time, millisecond timestamp. If not configured, it will keep delivering. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("shipperEndTime")]
        public Input<int>? ShipperEndTime { get; set; }

        /// <summary>
        /// Delivery configuration name.
        /// </summary>
        [Input("shipperName")]
        public Input<string>? ShipperName { get; set; }

        /// <summary>
        /// Delivery start time, millisecond timestamp. If not configured, it defaults to the current time. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("shipperStartTime")]
        public Input<int>? ShipperStartTime { get; set; }

        /// <summary>
        /// The type of delivery.
        /// </summary>
        [Input("shipperType")]
        public Input<string>? ShipperType { get; set; }

        /// <summary>
        /// Whether to enable the delivery configuration. The default value is true.
        /// </summary>
        [Input("status")]
        public Input<bool>? Status { get; set; }

        /// <summary>
        /// The log topic ID where the log to be delivered is located.
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        /// <summary>
        /// Deliver the relevant configuration to the object storage (TOS).
        /// </summary>
        [Input("tosShipperInfo")]
        public Input<Inputs.ShipperTosShipperInfoGetArgs>? TosShipperInfo { get; set; }

        public ShipperState()
        {
        }
        public static new ShipperState Empty => new ShipperState();
    }
}
