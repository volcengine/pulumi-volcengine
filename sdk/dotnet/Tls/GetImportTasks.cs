// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls
{
    public static class GetImportTasks
    {
        /// <summary>
        /// Use this data source to query detailed information of tls import tasks
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Tls.GetImportTasks.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetImportTasksResult> InvokeAsync(GetImportTasksArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImportTasksResult>("volcengine:tls/getImportTasks:getImportTasks", args ?? new GetImportTasksArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tls import tasks
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Tls.GetImportTasks.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetImportTasksResult> Invoke(GetImportTasksInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImportTasksResult>("volcengine:tls/getImportTasks:getImportTasks", args ?? new GetImportTasksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImportTasksArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the IAM project name to query the data import tasks under the specified IAM project.
        /// </summary>
        [Input("iamProjectName")]
        public string? IamProjectName { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Specify the log item ID for querying the data import tasks under the specified log item.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// Specify the name of the log item for querying the data import tasks under the specified log item. Support fuzzy query..
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        /// <summary>
        /// Specify the import type for querying the data import tasks related to this import type.
        /// </summary>
        [Input("sourceType")]
        public string? SourceType { get; set; }

        /// <summary>
        /// Specify the status of the import task.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        /// <summary>
        /// Import the task ID of the data to be queried.
        /// </summary>
        [Input("taskId")]
        public string? TaskId { get; set; }

        /// <summary>
        /// Import the task name of the data to be queried.
        /// </summary>
        [Input("taskName")]
        public string? TaskName { get; set; }

        /// <summary>
        /// Specify the log topic ID for querying the data import tasks related to this log topic.
        /// </summary>
        [Input("topicId")]
        public string? TopicId { get; set; }

        /// <summary>
        /// Specify the name of the log topic for querying the data import tasks related to this log topic. Support fuzzy query.
        /// </summary>
        [Input("topicName")]
        public string? TopicName { get; set; }

        public GetImportTasksArgs()
        {
        }
        public static new GetImportTasksArgs Empty => new GetImportTasksArgs();
    }

    public sealed class GetImportTasksInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the IAM project name to query the data import tasks under the specified IAM project.
        /// </summary>
        [Input("iamProjectName")]
        public Input<string>? IamProjectName { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Specify the log item ID for querying the data import tasks under the specified log item.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Specify the name of the log item for querying the data import tasks under the specified log item. Support fuzzy query..
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// Specify the import type for querying the data import tasks related to this import type.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// Specify the status of the import task.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Import the task ID of the data to be queried.
        /// </summary>
        [Input("taskId")]
        public Input<string>? TaskId { get; set; }

        /// <summary>
        /// Import the task name of the data to be queried.
        /// </summary>
        [Input("taskName")]
        public Input<string>? TaskName { get; set; }

        /// <summary>
        /// Specify the log topic ID for querying the data import tasks related to this log topic.
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        /// <summary>
        /// Specify the name of the log topic for querying the data import tasks related to this log topic. Support fuzzy query.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public GetImportTasksInvokeArgs()
        {
        }
        public static new GetImportTasksInvokeArgs Empty => new GetImportTasksInvokeArgs();
    }


    [OutputType]
    public sealed class GetImportTasksResult
    {
        public readonly string? IamProjectName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// Specify the log item ID for querying the data import tasks under the specified log item.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// Specify the name of the log item for querying the data import tasks under the specified log item. Support fuzzy query..
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// Specify the import type for querying the data import tasks related to this import type.
        /// </summary>
        public readonly string? SourceType;
        public readonly string? Status;
        /// <summary>
        /// Import the task ID of the data to be queried.
        /// </summary>
        public readonly string? TaskId;
        /// <summary>
        /// Data import task list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImportTasksTaskInfoResult> TaskInfos;
        /// <summary>
        /// Import the task name of the data to be queried.
        /// </summary>
        public readonly string? TaskName;
        /// <summary>
        /// Specify the log topic ID for querying the data import tasks related to this log topic.
        /// </summary>
        public readonly string? TopicId;
        /// <summary>
        /// Specify the name of the log topic for querying the data import tasks related to this log topic. Support fuzzy query.
        /// </summary>
        public readonly string? TopicName;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetImportTasksResult(
            string? iamProjectName,

            string id,

            string? nameRegex,

            string? outputFile,

            string? projectId,

            string? projectName,

            string? sourceType,

            string? status,

            string? taskId,

            ImmutableArray<Outputs.GetImportTasksTaskInfoResult> taskInfos,

            string? taskName,

            string? topicId,

            string? topicName,

            int totalCount)
        {
            IamProjectName = iamProjectName;
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProjectId = projectId;
            ProjectName = projectName;
            SourceType = sourceType;
            Status = status;
            TaskId = taskId;
            TaskInfos = taskInfos;
            TaskName = taskName;
            TopicId = topicId;
            TopicName = topicName;
            TotalCount = totalCount;
        }
    }
}
