// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls
{
    public static class GetTopics
    {
        /// <summary>
        /// Use this data source to query detailed information of tls topics
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.GetTopics.Invoke(new()
        ///     {
        ///         ProjectId = "e020c978-4f05-40e1-9167-0113d3ef****",
        ///         TopicId = "edf051ed-3c46-49ba-9339-bea628fe****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTopicsResult> InvokeAsync(GetTopicsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTopicsResult>("volcengine:tls/getTopics:getTopics", args ?? new GetTopicsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tls topics
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.GetTopics.Invoke(new()
        ///     {
        ///         ProjectId = "e020c978-4f05-40e1-9167-0113d3ef****",
        ///         TopicId = "edf051ed-3c46-49ba-9339-bea628fe****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTopicsResult> Invoke(GetTopicsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTopicsResult>("volcengine:tls/getTopics:getTopics", args ?? new GetTopicsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopicsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Whether to match accurately when filtering based on TopicName.
        /// </summary>
        [Input("isFullName")]
        public bool? IsFullName { get; set; }

        /// <summary>
        /// A Name Regex of tls topic.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project id of tls topic.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        [Input("tags")]
        private List<Inputs.GetTopicsTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.GetTopicsTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetTopicsTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The id of tls topic. This field supports fuzzy queries. It is not supported to specify both TopicName and TopicId at the same time.
        /// </summary>
        [Input("topicId")]
        public string? TopicId { get; set; }

        /// <summary>
        /// The name of tls topic. This field supports fuzzy queries. It is not supported to specify both TopicName and TopicId at the same time.
        /// </summary>
        [Input("topicName")]
        public string? TopicName { get; set; }

        public GetTopicsArgs()
        {
        }
        public static new GetTopicsArgs Empty => new GetTopicsArgs();
    }

    public sealed class GetTopicsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Whether to match accurately when filtering based on TopicName.
        /// </summary>
        [Input("isFullName")]
        public Input<bool>? IsFullName { get; set; }

        /// <summary>
        /// A Name Regex of tls topic.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project id of tls topic.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.GetTopicsTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.GetTopicsTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetTopicsTagInputArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The id of tls topic. This field supports fuzzy queries. It is not supported to specify both TopicName and TopicId at the same time.
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        /// <summary>
        /// The name of tls topic. This field supports fuzzy queries. It is not supported to specify both TopicName and TopicId at the same time.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public GetTopicsInvokeArgs()
        {
        }
        public static new GetTopicsInvokeArgs Empty => new GetTopicsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTopicsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsFullName;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The project id of the tls topic.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTopicsTagResult> Tags;
        /// <summary>
        /// The collection of tls topic query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTopicsTlsTopicResult> TlsTopics;
        /// <summary>
        /// The ID of the tls topic.
        /// </summary>
        public readonly string? TopicId;
        /// <summary>
        /// The name of the tls topic.
        /// </summary>
        public readonly string? TopicName;
        /// <summary>
        /// The total count of tls topic query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetTopicsResult(
            string id,

            bool? isFullName,

            string? nameRegex,

            string? outputFile,

            string projectId,

            ImmutableArray<Outputs.GetTopicsTagResult> tags,

            ImmutableArray<Outputs.GetTopicsTlsTopicResult> tlsTopics,

            string? topicId,

            string? topicName,

            int totalCount)
        {
            Id = id;
            IsFullName = isFullName;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProjectId = projectId;
            Tags = tags;
            TlsTopics = tlsTopics;
            TopicId = topicId;
            TopicName = topicName;
            TotalCount = totalCount;
        }
    }
}
