// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls
{
    /// <summary>
    /// Provides a resource to manage tls topic
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Tls.Topic("foo", new()
    ///     {
    ///         AutoSplit = true,
    ///         Description = "test",
    ///         EnableTracking = true,
    ///         MaxSplitShard = 10,
    ///         ProjectId = "e020c978-4f05-40e1-9167-0113d3ef****",
    ///         ShardCount = 2,
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Tls.Inputs.TopicTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///         TimeFormat = "%Y-%m-%dT%H:%M:%S,%f",
    ///         TimeKey = "request_time",
    ///         TopicName = "tf-test-topic",
    ///         Ttl = 10,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Tls Topic can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:tls/topic:Topic default edf051ed-3c46-49ba-9339-bea628fe****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:tls/topic:Topic")]
    public partial class Topic : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to enable automatic partition splitting function of the tls topic.
        /// true: (default) When the amount of data written exceeds the capacity of existing partitions for 5 consecutive minutes, Log Service will automatically split partitions based on the data volume to meet business needs. However, the number of partitions after splitting cannot exceed the maximum number of partitions. Newly split partitions within the last 15 minutes will not be automatically split again.
        /// false: Disables automatic partition splitting.
        /// </summary>
        [Output("autoSplit")]
        public Output<bool> AutoSplit { get; private set; } = null!;

        /// <summary>
        /// The create time of the tls topic.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The description of the tls project.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Whether to enable WebTracking function of the tls topic.
        /// </summary>
        [Output("enableTracking")]
        public Output<bool> EnableTracking { get; private set; } = null!;

        /// <summary>
        /// The id of shard to be manually split. This field is valid only when modifying the topic. 
        /// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("manualSplitShardId")]
        public Output<int?> ManualSplitShardId { get; private set; } = null!;

        /// <summary>
        /// The split number of shard. The valid number should be a non-zero even number, such as 2, 4, 8, or 16. The total number of read-write status shards after splitting cannot exceed 50. 
        /// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("manualSplitShardNumber")]
        public Output<int?> ManualSplitShardNumber { get; private set; } = null!;

        /// <summary>
        /// The maximum number of partitions, which is the maximum number of partitions after partition splitting. The value range is 1 to 10, with a default of 10.
        /// </summary>
        [Output("maxSplitShard")]
        public Output<int> MaxSplitShard { get; private set; } = null!;

        /// <summary>
        /// The modify time of the tls topic.
        /// </summary>
        [Output("modifyTime")]
        public Output<string> ModifyTime { get; private set; } = null!;

        /// <summary>
        /// The project id of the tls topic.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The count of shards in the tls topic. Valid value range: 1-10. This field is only valid when creating tls topic.
        /// </summary>
        [Output("shardCount")]
        public Output<int> ShardCount { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.TopicTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The format of the time field.
        /// </summary>
        [Output("timeFormat")]
        public Output<string> TimeFormat { get; private set; } = null!;

        /// <summary>
        /// The name of the time field.
        /// </summary>
        [Output("timeKey")]
        public Output<string> TimeKey { get; private set; } = null!;

        /// <summary>
        /// The name of the tls topic.
        /// </summary>
        [Output("topicName")]
        public Output<string> TopicName { get; private set; } = null!;

        /// <summary>
        /// The data storage time of the tls topic. Unit: Day. Valid value range: 1-3650.
        /// </summary>
        [Output("ttl")]
        public Output<int> Ttl { get; private set; } = null!;


        /// <summary>
        /// Create a Topic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Topic(string name, TopicArgs args, CustomResourceOptions? options = null)
            : base("volcengine:tls/topic:Topic", name, args ?? new TopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Topic(string name, Input<string> id, TopicState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:tls/topic:Topic", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Topic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Topic Get(string name, Input<string> id, TopicState? state = null, CustomResourceOptions? options = null)
        {
            return new Topic(name, id, state, options);
        }
    }

    public sealed class TopicArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable automatic partition splitting function of the tls topic.
        /// true: (default) When the amount of data written exceeds the capacity of existing partitions for 5 consecutive minutes, Log Service will automatically split partitions based on the data volume to meet business needs. However, the number of partitions after splitting cannot exceed the maximum number of partitions. Newly split partitions within the last 15 minutes will not be automatically split again.
        /// false: Disables automatic partition splitting.
        /// </summary>
        [Input("autoSplit")]
        public Input<bool>? AutoSplit { get; set; }

        /// <summary>
        /// The description of the tls project.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable WebTracking function of the tls topic.
        /// </summary>
        [Input("enableTracking")]
        public Input<bool>? EnableTracking { get; set; }

        /// <summary>
        /// The id of shard to be manually split. This field is valid only when modifying the topic. 
        /// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("manualSplitShardId")]
        public Input<int>? ManualSplitShardId { get; set; }

        /// <summary>
        /// The split number of shard. The valid number should be a non-zero even number, such as 2, 4, 8, or 16. The total number of read-write status shards after splitting cannot exceed 50. 
        /// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("manualSplitShardNumber")]
        public Input<int>? ManualSplitShardNumber { get; set; }

        /// <summary>
        /// The maximum number of partitions, which is the maximum number of partitions after partition splitting. The value range is 1 to 10, with a default of 10.
        /// </summary>
        [Input("maxSplitShard")]
        public Input<int>? MaxSplitShard { get; set; }

        /// <summary>
        /// The project id of the tls topic.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The count of shards in the tls topic. Valid value range: 1-10. This field is only valid when creating tls topic.
        /// </summary>
        [Input("shardCount", required: true)]
        public Input<int> ShardCount { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.TopicTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.TopicTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TopicTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The format of the time field.
        /// </summary>
        [Input("timeFormat")]
        public Input<string>? TimeFormat { get; set; }

        /// <summary>
        /// The name of the time field.
        /// </summary>
        [Input("timeKey")]
        public Input<string>? TimeKey { get; set; }

        /// <summary>
        /// The name of the tls topic.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        /// <summary>
        /// The data storage time of the tls topic. Unit: Day. Valid value range: 1-3650.
        /// </summary>
        [Input("ttl", required: true)]
        public Input<int> Ttl { get; set; } = null!;

        public TopicArgs()
        {
        }
        public static new TopicArgs Empty => new TopicArgs();
    }

    public sealed class TopicState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable automatic partition splitting function of the tls topic.
        /// true: (default) When the amount of data written exceeds the capacity of existing partitions for 5 consecutive minutes, Log Service will automatically split partitions based on the data volume to meet business needs. However, the number of partitions after splitting cannot exceed the maximum number of partitions. Newly split partitions within the last 15 minutes will not be automatically split again.
        /// false: Disables automatic partition splitting.
        /// </summary>
        [Input("autoSplit")]
        public Input<bool>? AutoSplit { get; set; }

        /// <summary>
        /// The create time of the tls topic.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The description of the tls project.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable WebTracking function of the tls topic.
        /// </summary>
        [Input("enableTracking")]
        public Input<bool>? EnableTracking { get; set; }

        /// <summary>
        /// The id of shard to be manually split. This field is valid only when modifying the topic. 
        /// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("manualSplitShardId")]
        public Input<int>? ManualSplitShardId { get; set; }

        /// <summary>
        /// The split number of shard. The valid number should be a non-zero even number, such as 2, 4, 8, or 16. The total number of read-write status shards after splitting cannot exceed 50. 
        /// When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("manualSplitShardNumber")]
        public Input<int>? ManualSplitShardNumber { get; set; }

        /// <summary>
        /// The maximum number of partitions, which is the maximum number of partitions after partition splitting. The value range is 1 to 10, with a default of 10.
        /// </summary>
        [Input("maxSplitShard")]
        public Input<int>? MaxSplitShard { get; set; }

        /// <summary>
        /// The modify time of the tls topic.
        /// </summary>
        [Input("modifyTime")]
        public Input<string>? ModifyTime { get; set; }

        /// <summary>
        /// The project id of the tls topic.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The count of shards in the tls topic. Valid value range: 1-10. This field is only valid when creating tls topic.
        /// </summary>
        [Input("shardCount")]
        public Input<int>? ShardCount { get; set; }

        [Input("tags")]
        private InputList<Inputs.TopicTagGetArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.TopicTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TopicTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The format of the time field.
        /// </summary>
        [Input("timeFormat")]
        public Input<string>? TimeFormat { get; set; }

        /// <summary>
        /// The name of the time field.
        /// </summary>
        [Input("timeKey")]
        public Input<string>? TimeKey { get; set; }

        /// <summary>
        /// The name of the tls topic.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        /// <summary>
        /// The data storage time of the tls topic. Unit: Day. Valid value range: 1-3650.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        public TopicState()
        {
        }
        public static new TopicState Empty => new TopicState();
    }
}
