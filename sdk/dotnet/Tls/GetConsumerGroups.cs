// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls
{
    public static class GetConsumerGroups
    {
        /// <summary>
        /// Use this data source to query detailed information of tls consumer groups
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.GetConsumerGroups.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetConsumerGroupsResult> InvokeAsync(GetConsumerGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConsumerGroupsResult>("volcengine:tls/getConsumerGroups:getConsumerGroups", args ?? new GetConsumerGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tls consumer groups
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.GetConsumerGroups.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConsumerGroupsResult> Invoke(GetConsumerGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConsumerGroupsResult>("volcengine:tls/getConsumerGroups:getConsumerGroups", args ?? new GetConsumerGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConsumerGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the consumer group.
        /// </summary>
        [Input("consumerGroupName")]
        public string? ConsumerGroupName { get; set; }

        /// <summary>
        /// IAM log project name.
        /// </summary>
        [Input("iamProjectName")]
        public string? IamProjectName { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The log project ID to which the consumption group belongs.
        /// </summary>
        [Input("projectId")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// The name of the log item to which the consumption group belongs.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        /// <summary>
        /// The log topic ID to which the consumer belongs.
        /// </summary>
        [Input("topicId")]
        public string? TopicId { get; set; }

        /// <summary>
        /// The name of the log topic to which the consumption group belongs.
        /// </summary>
        [Input("topicName")]
        public string? TopicName { get; set; }

        public GetConsumerGroupsArgs()
        {
        }
        public static new GetConsumerGroupsArgs Empty => new GetConsumerGroupsArgs();
    }

    public sealed class GetConsumerGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the consumer group.
        /// </summary>
        [Input("consumerGroupName")]
        public Input<string>? ConsumerGroupName { get; set; }

        /// <summary>
        /// IAM log project name.
        /// </summary>
        [Input("iamProjectName")]
        public Input<string>? IamProjectName { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The log project ID to which the consumption group belongs.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The name of the log item to which the consumption group belongs.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The log topic ID to which the consumer belongs.
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        /// <summary>
        /// The name of the log topic to which the consumption group belongs.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public GetConsumerGroupsInvokeArgs()
        {
        }
        public static new GetConsumerGroupsInvokeArgs Empty => new GetConsumerGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetConsumerGroupsResult
    {
        /// <summary>
        /// The name of the consumer group.
        /// </summary>
        public readonly string? ConsumerGroupName;
        /// <summary>
        /// List of log service consumption groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConsumerGroupsConsumerGroupResult> ConsumerGroups;
        public readonly string? IamProjectName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The log project ID to which the consumption group belongs.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// The name of the log item to which the consumption group belongs.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// The list of log topic ids to be consumed by the consumer group.
        /// </summary>
        public readonly string? TopicId;
        public readonly string? TopicName;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetConsumerGroupsResult(
            string? consumerGroupName,

            ImmutableArray<Outputs.GetConsumerGroupsConsumerGroupResult> consumerGroups,

            string? iamProjectName,

            string id,

            string? nameRegex,

            string? outputFile,

            string? projectId,

            string? projectName,

            string? topicId,

            string? topicName,

            int totalCount)
        {
            ConsumerGroupName = consumerGroupName;
            ConsumerGroups = consumerGroups;
            IamProjectName = iamProjectName;
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProjectId = projectId;
            ProjectName = projectName;
            TopicId = topicId;
            TopicName = topicName;
            TotalCount = totalCount;
        }
    }
}
