// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls.Inputs
{

    public sealed class ImportTaskTargetInfoExtractRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The regular expression used to identify the first line in each log, and its matching part will serve as the beginning of the log.
        /// </summary>
        [Input("beginRegex")]
        public Input<string>? BeginRegex { get; set; }

        /// <summary>
        /// Log delimiter.
        /// </summary>
        [Input("delimiter")]
        public Input<string>? Delimiter { get; set; }

        [Input("keys")]
        private InputList<string>? _keys;

        /// <summary>
        /// List of log field names (Keys).
        /// </summary>
        public InputList<string> Keys
        {
            get => _keys ?? (_keys = new InputList<string>());
            set => _keys = value;
        }

        /// <summary>
        /// Reference symbol. The content wrapped by the reference will not be separated but will be parsed into a complete field. It is valid if and only if the LogType is delimiter_log.
        /// </summary>
        [Input("quote")]
        public Input<string>? Quote { get; set; }

        /// <summary>
        /// The number of log lines skipped.
        /// </summary>
        [Input("skipLineCount")]
        public Input<int>? SkipLineCount { get; set; }

        /// <summary>
        /// A regular expression for extracting time, used to extract the time value in the TimeKey field and parse it into the corresponding collection time.
        /// </summary>
        [Input("timeExtractRegex")]
        public Input<string>? TimeExtractRegex { get; set; }

        /// <summary>
        /// The parsing format of the time field.
        /// </summary>
        [Input("timeFormat")]
        public Input<string>? TimeFormat { get; set; }

        /// <summary>
        /// The field name of the log time field.
        /// </summary>
        [Input("timeKey")]
        public Input<string>? TimeKey { get; set; }

        /// <summary>
        /// Time zone, supporting both machine time zone (default) and custom time zone. Among them, the custom time zone supports GMT and UTC.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        /// <summary>
        /// When uploading a log that failed to parse, the key name of the parse failed log.
        /// </summary>
        [Input("unMatchLogKey")]
        public Input<string>? UnMatchLogKey { get; set; }

        /// <summary>
        /// Whether to upload the logs of failed parsing.
        /// </summary>
        [Input("unMatchUpLoadSwitch")]
        public Input<bool>? UnMatchUpLoadSwitch { get; set; }

        public ImportTaskTargetInfoExtractRuleArgs()
        {
        }
        public static new ImportTaskTargetInfoExtractRuleArgs Empty => new ImportTaskTargetInfoExtractRuleArgs();
    }
}
