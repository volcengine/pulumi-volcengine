// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls.Outputs
{

    [OutputType]
    public sealed class RuleExtractRule
    {
        /// <summary>
        /// The first log line needs to match the regular expression.
        /// </summary>
        public readonly string? BeginRegex;
        /// <summary>
        /// The delimiter of the log.
        /// </summary>
        public readonly string? Delimiter;
        /// <summary>
        /// The filter key list.
        /// </summary>
        public readonly ImmutableArray<Outputs.RuleExtractRuleFilterKeyRegex> FilterKeyRegexes;
        /// <summary>
        /// A list of log field names (Key).
        /// </summary>
        public readonly ImmutableArray<string> Keys;
        /// <summary>
        /// The entire log needs to match the regular expression.
        /// </summary>
        public readonly string? LogRegex;
        /// <summary>
        /// Automatically extract log fields according to the specified log template.
        /// </summary>
        public readonly Outputs.RuleExtractRuleLogTemplate? LogTemplate;
        /// <summary>
        /// Parsing format of the time field.
        /// </summary>
        public readonly string? TimeFormat;
        /// <summary>
        /// The field name of the log time field.
        /// </summary>
        public readonly string? TimeKey;
        /// <summary>
        /// When uploading the failed log, the key name of the failed log.
        /// </summary>
        public readonly string? UnMatchLogKey;
        /// <summary>
        /// Whether to upload the log of parsing failure.
        /// </summary>
        public readonly bool? UnMatchUpLoadSwitch;

        [OutputConstructor]
        private RuleExtractRule(
            string? beginRegex,

            string? delimiter,

            ImmutableArray<Outputs.RuleExtractRuleFilterKeyRegex> filterKeyRegexes,

            ImmutableArray<string> keys,

            string? logRegex,

            Outputs.RuleExtractRuleLogTemplate? logTemplate,

            string? timeFormat,

            string? timeKey,

            string? unMatchLogKey,

            bool? unMatchUpLoadSwitch)
        {
            BeginRegex = beginRegex;
            Delimiter = delimiter;
            FilterKeyRegexes = filterKeyRegexes;
            Keys = keys;
            LogRegex = logRegex;
            LogTemplate = logTemplate;
            TimeFormat = timeFormat;
            TimeKey = timeKey;
            UnMatchLogKey = unMatchLogKey;
            UnMatchUpLoadSwitch = unMatchUpLoadSwitch;
        }
    }
}
