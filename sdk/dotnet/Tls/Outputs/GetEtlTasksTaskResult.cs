// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls.Outputs
{

    [OutputType]
    public sealed class GetEtlTasksTaskResult
    {
        /// <summary>
        /// Processing task creation time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// A simple description of the processing task.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// DSL type, fixed as NORMAL.
        /// </summary>
        public readonly string DslType;
        /// <summary>
        /// The running status of the processing task.
        /// </summary>
        public readonly bool Enable;
        /// <summary>
        /// Task scheduling status.
        /// </summary>
        public readonly string EtlStatus;
        /// <summary>
        /// The start time of the data to be processed.
        /// </summary>
        public readonly int FromTime;
        /// <summary>
        /// Recent startup time.
        /// </summary>
        public readonly string LastEnableTime;
        /// <summary>
        /// The most recent modification time of the processing task.
        /// </summary>
        public readonly string ModifyTime;
        /// <summary>
        /// The name of the processing task.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specify the log item ID for querying the data processing tasks under the specified log item.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Specify the name of the log item for querying the data processing tasks under the specified log item. Support fuzzy query.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// Processing rules.
        /// </summary>
        public readonly string Script;
        /// <summary>
        /// Specify the log topic ID for querying the data processing tasks related to this log topic.
        /// </summary>
        public readonly string SourceTopicId;
        /// <summary>
        /// Specify the name of the log topic for querying the data processing tasks related to this log topic. Support fuzzy matching.
        /// </summary>
        public readonly string SourceTopicName;
        /// <summary>
        /// Output the relevant information of the target.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEtlTasksTaskTargetResourceResult> TargetResources;
        /// <summary>
        /// The ID of the processing task.
        /// </summary>
        public readonly string TaskId;
        /// <summary>
        /// The task type is fixed as Resident.
        /// </summary>
        public readonly string TaskType;
        /// <summary>
        /// The end time of the data to be processed.
        /// </summary>
        public readonly int ToTime;

        [OutputConstructor]
        private GetEtlTasksTaskResult(
            string createTime,

            string description,

            string dslType,

            bool enable,

            string etlStatus,

            int fromTime,

            string lastEnableTime,

            string modifyTime,

            string name,

            string projectId,

            string projectName,

            string script,

            string sourceTopicId,

            string sourceTopicName,

            ImmutableArray<Outputs.GetEtlTasksTaskTargetResourceResult> targetResources,

            string taskId,

            string taskType,

            int toTime)
        {
            CreateTime = createTime;
            Description = description;
            DslType = dslType;
            Enable = enable;
            EtlStatus = etlStatus;
            FromTime = fromTime;
            LastEnableTime = lastEnableTime;
            ModifyTime = modifyTime;
            Name = name;
            ProjectId = projectId;
            ProjectName = projectName;
            Script = script;
            SourceTopicId = sourceTopicId;
            SourceTopicName = sourceTopicName;
            TargetResources = targetResources;
            TaskId = taskId;
            TaskType = taskType;
            ToTime = toTime;
        }
    }
}
