// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls.Outputs
{

    [OutputType]
    public sealed class ShippersShipperResult
    {
        /// <summary>
        /// The content format configuration of the delivery log.
        /// </summary>
        public readonly Outputs.ShippersShipperContentInfoResult ContentInfo;
        /// <summary>
        /// Processing task creation time.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The default built-in dashboard ID for delivery.
        /// </summary>
        public readonly string DashboardId;
        /// <summary>
        /// JSON format log content configuration.
        /// </summary>
        public readonly Outputs.ShippersShipperKafkaShipperInfoResult KafkaShipperInfo;
        /// <summary>
        /// The most recent modification time of the processing task.
        /// </summary>
        public readonly string ModifyTime;
        /// <summary>
        /// Specify the log item ID for querying the data delivery configuration under the specified log item.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Specify the name of the log item for querying the data delivery configuration under the specified log item. Support fuzzy matching.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// Delivery end time, millisecond timestamp. If not configured, it will keep delivering.
        /// </summary>
        public readonly int ShipperEndTime;
        /// <summary>
        /// Delivery configuration ID.
        /// </summary>
        public readonly string ShipperId;
        /// <summary>
        /// Delivery configuration name.
        /// </summary>
        public readonly string ShipperName;
        /// <summary>
        /// Delivery start time, millisecond timestamp. If not configured, it defaults to the current time.
        /// </summary>
        public readonly int ShipperStartTime;
        /// <summary>
        /// Specify the delivery type for querying the delivery configuration related to that delivery type.
        /// </summary>
        public readonly string ShipperType;
        /// <summary>
        /// Whether to enable the delivery configuration.
        /// </summary>
        public readonly bool Status;
        /// <summary>
        /// Specify the log topic ID for querying the data delivery configuration related to this log topic.
        /// </summary>
        public readonly string TopicId;
        /// <summary>
        /// Specify the name of the log topic for querying the data delivery configuration related to this log topic. Support fuzzy matching.
        /// </summary>
        public readonly string TopicName;
        /// <summary>
        /// Deliver the relevant configuration to the object storage (TOS).
        /// </summary>
        public readonly Outputs.ShippersShipperTosShipperInfoResult TosShipperInfo;

        [OutputConstructor]
        private ShippersShipperResult(
            Outputs.ShippersShipperContentInfoResult contentInfo,

            string createTime,

            string dashboardId,

            Outputs.ShippersShipperKafkaShipperInfoResult kafkaShipperInfo,

            string modifyTime,

            string projectId,

            string projectName,

            int shipperEndTime,

            string shipperId,

            string shipperName,

            int shipperStartTime,

            string shipperType,

            bool status,

            string topicId,

            string topicName,

            Outputs.ShippersShipperTosShipperInfoResult tosShipperInfo)
        {
            ContentInfo = contentInfo;
            CreateTime = createTime;
            DashboardId = dashboardId;
            KafkaShipperInfo = kafkaShipperInfo;
            ModifyTime = modifyTime;
            ProjectId = projectId;
            ProjectName = projectName;
            ShipperEndTime = shipperEndTime;
            ShipperId = shipperId;
            ShipperName = shipperName;
            ShipperStartTime = shipperStartTime;
            ShipperType = shipperType;
            Status = status;
            TopicId = topicId;
            TopicName = topicName;
            TosShipperInfo = tosShipperInfo;
        }
    }
}
