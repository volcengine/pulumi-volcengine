// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tls.Outputs
{

    [OutputType]
    public sealed class IndexKeyValue
    {
        /// <summary>
        /// Whether the value is case sensitive.
        /// </summary>
        public readonly bool? CaseSensitive;
        /// <summary>
        /// The delimiter of the value.
        /// </summary>
        public readonly string? Delimiter;
        /// <summary>
        /// Whether the value include chinese.
        /// </summary>
        public readonly bool? IncludeChinese;
        /// <summary>
        /// Whether to create indexes for all fields in JSON fields with text values. This field is valid when the `value_type` is `json`.
        /// </summary>
        public readonly bool? IndexAll;
        /// <summary>
        /// The JSON subfield key value index.
        /// </summary>
        public readonly ImmutableArray<Outputs.IndexKeyValueJsonKey> JsonKeys;
        /// <summary>
        /// The key of the KeyValueInfo.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// Whether the filed is enabled for analysis.
        /// </summary>
        public readonly bool? SqlFlag;
        /// <summary>
        /// The type of value. Valid values: `long`, `double`, `text`, `json`.
        /// </summary>
        public readonly string ValueType;

        [OutputConstructor]
        private IndexKeyValue(
            bool? caseSensitive,

            string? delimiter,

            bool? includeChinese,

            bool? indexAll,

            ImmutableArray<Outputs.IndexKeyValueJsonKey> jsonKeys,

            string key,

            bool? sqlFlag,

            string valueType)
        {
            CaseSensitive = caseSensitive;
            Delimiter = delimiter;
            IncludeChinese = includeChinese;
            IndexAll = indexAll;
            JsonKeys = jsonKeys;
            Key = key;
            SqlFlag = sqlFlag;
            ValueType = valueType;
        }
    }
}
