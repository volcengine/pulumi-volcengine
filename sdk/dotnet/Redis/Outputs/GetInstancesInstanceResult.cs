// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Redis.Outputs
{

    [OutputType]
    public sealed class GetInstancesInstanceResult
    {
        /// <summary>
        /// The additional bandwidth of a single shard, that is, the extra bandwidth that needs to be added on top of the default bandwidth, unit: MB/s.
        /// </summary>
        public readonly int AdditionalBandwidthPerShard;
        /// <summary>
        /// The list of backup plans.
        /// </summary>
        public readonly Outputs.GetInstancesInstanceBackupPlanResult BackupPlan;
        /// <summary>
        /// The memory capacity information.
        /// </summary>
        public readonly Outputs.GetInstancesInstanceCapacityResult Capacity;
        /// <summary>
        /// The charge type of redis instance to query. Valid values: `PostPaid`, `PrePaid`.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// Set the list of available zones to which the node belongs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceConfigureNodeResult> ConfigureNodes;
        /// <summary>
        /// The creation time of the redis instance.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The data storage form of the instance.
        /// </summary>
        public readonly string DataLayout;
        /// <summary>
        /// The default bandwidth of a single shard in the instance. Both the read bandwidth (i.e., the downlink bandwidth) and the write bandwidth (i.e., the uplink bandwidth) are of this value. Unit: MB/s.
        /// </summary>
        public readonly int DefaultBandwidthPerShard;
        /// <summary>
        /// whether enable deletion protection.
        /// </summary>
        public readonly string DeletionProtection;
        /// <summary>
        /// The engine version of redis instance to query. Valid values: `4.0`, `5.0`, `6.0`.
        /// </summary>
        public readonly string EngineVersion;
        /// <summary>
        /// The expire time of the redis instance, valid when charge type is `PrePaid`.
        /// </summary>
        public readonly string ExpiredTime;
        /// <summary>
        /// The id of the redis instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The type of the instance.
        /// </summary>
        public readonly string InstanceClass;
        /// <summary>
        /// The id of redis instance to query. This field supports fuzzy queries.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// The name of redis instance to query. This field supports fuzzy queries.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// A detailed list of all Shard shards in the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceInstanceShardResult> InstanceShards;
        /// <summary>
        /// The maintainable time of the redis instance.
        /// </summary>
        public readonly string MaintenanceTime;
        /// <summary>
        /// The current maximum number of connections in a single shard for the instance of the instance.
        /// </summary>
        public readonly int MaxConnections;
        /// <summary>
        /// Set the availability zone deployment scheme for the instance. The value range is as follows: 
        /// disabled: Single availability zone deployment scheme.
        /// enabled: Multi-availability zone deployment scheme.
        /// Description:
        /// When the newly created instance is a single-node instance (that is, when the value of NodeNumber is 1), only the single availability zone deployment scheme is allowed. At this time, the value of MultiAZ must be disabled.
        /// </summary>
        public readonly string MultiAz;
        /// <summary>
        /// The list of redis instance node IDs.
        /// </summary>
        public readonly ImmutableArray<string> NodeIds;
        /// <summary>
        /// The number of nodes in each shard.
        /// </summary>
        public readonly int NodeNumber;
        /// <summary>
        /// The list of params.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceParamResult> Params;
        /// <summary>
        /// The project name of redis instance to query.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The region id of the redis instance.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// A detailed list of all Server nodes in the shard.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceServerNodeResult> ServerNodes;
        /// <summary>
        /// (**Deprecated**) Replaced by shard_capacity_v2. The memory capacity of each shard. Unit: GiB.
        /// </summary>
        public readonly double ShardCapacity;
        /// <summary>
        /// The memory capacity of each shard in the instance.
        /// </summary>
        public readonly int ShardCapacityV2;
        /// <summary>
        /// The ID of the shard.
        /// </summary>
        public readonly string ShardId;
        /// <summary>
        /// The number of shards in the redis instance.
        /// </summary>
        public readonly int ShardNumber;
        /// <summary>
        /// Whether enable sharded cluster for redis instance. Valid values: 0, 1.
        /// </summary>
        public readonly int ShardedCluster;
        /// <summary>
        /// The status of redis instance to query.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The subnet id of the redis instance.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceTagResult> Tags;
        /// <summary>
        /// The list of connection information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceVisitAddrResult> VisitAddrs;
        /// <summary>
        /// Whether to enable password-free access when connecting to an instance through a private network.
        /// </summary>
        public readonly string VpcAuthMode;
        /// <summary>
        /// The vpc id of redis instance to query. This field supports fuzzy queries.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The list of zone ID which the redis instance belongs.
        /// </summary>
        public readonly ImmutableArray<string> ZoneIds;

        [OutputConstructor]
        private GetInstancesInstanceResult(
            int additionalBandwidthPerShard,

            Outputs.GetInstancesInstanceBackupPlanResult backupPlan,

            Outputs.GetInstancesInstanceCapacityResult capacity,

            string chargeType,

            ImmutableArray<Outputs.GetInstancesInstanceConfigureNodeResult> configureNodes,

            string createTime,

            string dataLayout,

            int defaultBandwidthPerShard,

            string deletionProtection,

            string engineVersion,

            string expiredTime,

            string id,

            string instanceClass,

            string instanceId,

            string instanceName,

            ImmutableArray<Outputs.GetInstancesInstanceInstanceShardResult> instanceShards,

            string maintenanceTime,

            int maxConnections,

            string multiAz,

            ImmutableArray<string> nodeIds,

            int nodeNumber,

            ImmutableArray<Outputs.GetInstancesInstanceParamResult> @params,

            string projectName,

            string regionId,

            ImmutableArray<Outputs.GetInstancesInstanceServerNodeResult> serverNodes,

            double shardCapacity,

            int shardCapacityV2,

            string shardId,

            int shardNumber,

            int shardedCluster,

            string status,

            string subnetId,

            ImmutableArray<Outputs.GetInstancesInstanceTagResult> tags,

            ImmutableArray<Outputs.GetInstancesInstanceVisitAddrResult> visitAddrs,

            string vpcAuthMode,

            string vpcId,

            ImmutableArray<string> zoneIds)
        {
            AdditionalBandwidthPerShard = additionalBandwidthPerShard;
            BackupPlan = backupPlan;
            Capacity = capacity;
            ChargeType = chargeType;
            ConfigureNodes = configureNodes;
            CreateTime = createTime;
            DataLayout = dataLayout;
            DefaultBandwidthPerShard = defaultBandwidthPerShard;
            DeletionProtection = deletionProtection;
            EngineVersion = engineVersion;
            ExpiredTime = expiredTime;
            Id = id;
            InstanceClass = instanceClass;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceShards = instanceShards;
            MaintenanceTime = maintenanceTime;
            MaxConnections = maxConnections;
            MultiAz = multiAz;
            NodeIds = nodeIds;
            NodeNumber = nodeNumber;
            Params = @params;
            ProjectName = projectName;
            RegionId = regionId;
            ServerNodes = serverNodes;
            ShardCapacity = shardCapacity;
            ShardCapacityV2 = shardCapacityV2;
            ShardId = shardId;
            ShardNumber = shardNumber;
            ShardedCluster = shardedCluster;
            Status = status;
            SubnetId = subnetId;
            Tags = tags;
            VisitAddrs = visitAddrs;
            VpcAuthMode = vpcAuthMode;
            VpcId = vpcId;
            ZoneIds = zoneIds;
        }
    }
}
