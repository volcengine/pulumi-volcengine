// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Redis
{
    [Obsolete(@"volcengine.redis.InstanceSpecs has been deprecated in favor of volcengine.redis.getInstanceSpecs")]
    public static class InstanceSpecs
    {
        /// <summary>
        /// Use this data source to query detailed information of redis instance specs
        /// </summary>
        public static Task<InstanceSpecsResult> InvokeAsync(InstanceSpecsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<InstanceSpecsResult>("volcengine:redis/instanceSpecs:InstanceSpecs", args ?? new InstanceSpecsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of redis instance specs
        /// </summary>
        public static Output<InstanceSpecsResult> Invoke(InstanceSpecsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<InstanceSpecsResult>("volcengine:redis/instanceSpecs:InstanceSpecs", args ?? new InstanceSpecsInvokeArgs(), options.WithDefaults());
    }


    public sealed class InstanceSpecsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The architecture type of the Redis instance.
        /// </summary>
        [Input("archType")]
        public string? ArchType { get; set; }

        /// <summary>
        /// The type of Redis instance.
        /// </summary>
        [Input("instanceClass")]
        public string? InstanceClass { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public InstanceSpecsArgs()
        {
        }
        public static new InstanceSpecsArgs Empty => new InstanceSpecsArgs();
    }

    public sealed class InstanceSpecsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The architecture type of the Redis instance.
        /// </summary>
        [Input("archType")]
        public Input<string>? ArchType { get; set; }

        /// <summary>
        /// The type of Redis instance.
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public InstanceSpecsInvokeArgs()
        {
        }
        public static new InstanceSpecsInvokeArgs Empty => new InstanceSpecsInvokeArgs();
    }


    [OutputType]
    public sealed class InstanceSpecsResult
    {
        /// <summary>
        /// The architecture type of the Redis instance.
        /// </summary>
        public readonly string? ArchType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceClass;
        /// <summary>
        /// The List of Redis instance specifications.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceSpecsInstanceSpecResult> InstanceSpecs;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private InstanceSpecsResult(
            string? archType,

            string id,

            string? instanceClass,

            ImmutableArray<Outputs.InstanceSpecsInstanceSpecResult> instanceSpecs,

            string? nameRegex,

            string? outputFile,

            int totalCount)
        {
            ArchType = archType;
            Id = id;
            InstanceClass = instanceClass;
            InstanceSpecs = instanceSpecs;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
