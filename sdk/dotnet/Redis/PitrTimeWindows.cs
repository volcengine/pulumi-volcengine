// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Redis
{
    [Obsolete(@"volcengine.redis.PitrTimeWindows has been deprecated in favor of volcengine.redis.getPitrTimeWindows")]
    public static class PitrTimeWindows
    {
        /// <summary>
        /// Use this data source to query detailed information of redis pitr time periods
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Redis.GetPitrTimeWindows.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "redis-cnlficlt4974swtbz",
        ///             "redis-cnlfq69d1y1tnguxz",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<PitrTimeWindowsResult> InvokeAsync(PitrTimeWindowsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<PitrTimeWindowsResult>("volcengine:redis/pitrTimeWindows:PitrTimeWindows", args ?? new PitrTimeWindowsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of redis pitr time periods
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Redis.GetPitrTimeWindows.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "redis-cnlficlt4974swtbz",
        ///             "redis-cnlfq69d1y1tnguxz",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<PitrTimeWindowsResult> Invoke(PitrTimeWindowsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<PitrTimeWindowsResult>("volcengine:redis/pitrTimeWindows:PitrTimeWindows", args ?? new PitrTimeWindowsInvokeArgs(), options.WithDefaults());
    }


    public sealed class PitrTimeWindowsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids", required: true)]
        private List<string>? _ids;

        /// <summary>
        /// The ids of the instances.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public PitrTimeWindowsArgs()
        {
        }
        public static new PitrTimeWindowsArgs Empty => new PitrTimeWindowsArgs();
    }

    public sealed class PitrTimeWindowsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids", required: true)]
        private InputList<string>? _ids;

        /// <summary>
        /// The ids of the instances.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public PitrTimeWindowsInvokeArgs()
        {
        }
        public static new PitrTimeWindowsInvokeArgs Empty => new PitrTimeWindowsInvokeArgs();
    }


    [OutputType]
    public sealed class PitrTimeWindowsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// The list of time windows.
        /// </summary>
        public readonly ImmutableArray<Outputs.PitrTimeWindowsPeriodResult> Periods;
        /// <summary>
        /// The total count of redis instances time window query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private PitrTimeWindowsResult(
            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            ImmutableArray<Outputs.PitrTimeWindowsPeriodResult> periods,

            int totalCount)
        {
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            Periods = periods;
            TotalCount = totalCount;
        }
    }
}
