// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Redis
{
    public static class GetParameterGroups
    {
        /// <summary>
        /// Use this data source to query detailed information of redis parameter groups
        /// </summary>
        public static Task<GetParameterGroupsResult> InvokeAsync(GetParameterGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParameterGroupsResult>("volcengine:redis/getParameterGroups:getParameterGroups", args ?? new GetParameterGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of redis parameter groups
        /// </summary>
        public static Output<GetParameterGroupsResult> Invoke(GetParameterGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterGroupsResult>("volcengine:redis/getParameterGroups:getParameterGroups", args ?? new GetParameterGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Redis database version applicable to the parameter template.
        /// </summary>
        [Input("engineVersion")]
        public string? EngineVersion { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The source of creating the parameter template.
        /// </summary>
        [Input("source")]
        public string? Source { get; set; }

        public GetParameterGroupsArgs()
        {
        }
        public static new GetParameterGroupsArgs Empty => new GetParameterGroupsArgs();
    }

    public sealed class GetParameterGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Redis database version applicable to the parameter template.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The source of creating the parameter template.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        public GetParameterGroupsInvokeArgs()
        {
        }
        public static new GetParameterGroupsInvokeArgs Empty => new GetParameterGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetParameterGroupsResult
    {
        /// <summary>
        /// The database version applicable to the parameter template.
        /// </summary>
        public readonly string? EngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The details of the parameter template.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetParameterGroupsParameterGroupResult> ParameterGroups;
        /// <summary>
        /// The source of creating the parameter template.
        /// </summary>
        public readonly string? Source;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetParameterGroupsResult(
            string? engineVersion,

            string id,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.GetParameterGroupsParameterGroupResult> parameterGroups,

            string? source,

            int totalCount)
        {
            EngineVersion = engineVersion;
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ParameterGroups = parameterGroups;
            Source = source;
            TotalCount = totalCount;
        }
    }
}
