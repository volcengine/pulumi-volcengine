// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Redis
{
    /// <summary>
    /// Provides a resource to manage redis backup restore
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooInstance = new Volcengine.Redis.Instance("fooInstance", new()
    ///     {
    ///         ZoneIds = new[]
    ///         {
    ///             fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         },
    ///         InstanceName = "acc-test-tf-redis",
    ///         ShardedCluster = 1,
    ///         Password = "1qaz!QAZ12",
    ///         NodeNumber = 2,
    ///         ShardCapacity = 1024,
    ///         ShardNumber = 2,
    ///         EngineVersion = "5.0",
    ///         SubnetId = fooSubnet.Id,
    ///         DeletionProtection = "disabled",
    ///         VpcAuthMode = "close",
    ///         ChargeType = "PostPaid",
    ///         Port = 6381,
    ///         ProjectName = "default",
    ///     });
    /// 
    ///     var fooBackup = new Volcengine.Redis.Backup("fooBackup", new()
    ///     {
    ///         InstanceId = fooInstance.Id,
    ///     });
    /// 
    ///     var fooBackupRestore = new Volcengine.Redis.BackupRestore("fooBackupRestore", new()
    ///     {
    ///         InstanceId = fooInstance.Id,
    ///         TimePoint = fooBackup.EndTime,
    ///         BackupType = "Full",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Redis Backup Restore can be imported using the restore:instanceId, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:redis/backupRestore:BackupRestore default restore:redis-asdljioeixxxx
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:redis/backupRestore:BackupRestore")]
    public partial class BackupRestore : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The type of backup. The value can be Full or Inc.
        /// </summary>
        [Output("backupType")]
        public Output<string?> BackupType { get; private set; } = null!;

        /// <summary>
        /// Id of instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Time point of backup, for example: 2021-11-09T06:07:26Z. Use lifecycle and ignore_changes in import.
        /// </summary>
        [Output("timePoint")]
        public Output<string> TimePoint { get; private set; } = null!;


        /// <summary>
        /// Create a BackupRestore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupRestore(string name, BackupRestoreArgs args, CustomResourceOptions? options = null)
            : base("volcengine:redis/backupRestore:BackupRestore", name, args ?? new BackupRestoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupRestore(string name, Input<string> id, BackupRestoreState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:redis/backupRestore:BackupRestore", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupRestore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupRestore Get(string name, Input<string> id, BackupRestoreState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupRestore(name, id, state, options);
        }
    }

    public sealed class BackupRestoreArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of backup. The value can be Full or Inc.
        /// </summary>
        [Input("backupType")]
        public Input<string>? BackupType { get; set; }

        /// <summary>
        /// Id of instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Time point of backup, for example: 2021-11-09T06:07:26Z. Use lifecycle and ignore_changes in import.
        /// </summary>
        [Input("timePoint", required: true)]
        public Input<string> TimePoint { get; set; } = null!;

        public BackupRestoreArgs()
        {
        }
        public static new BackupRestoreArgs Empty => new BackupRestoreArgs();
    }

    public sealed class BackupRestoreState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of backup. The value can be Full or Inc.
        /// </summary>
        [Input("backupType")]
        public Input<string>? BackupType { get; set; }

        /// <summary>
        /// Id of instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Time point of backup, for example: 2021-11-09T06:07:26Z. Use lifecycle and ignore_changes in import.
        /// </summary>
        [Input("timePoint")]
        public Input<string>? TimePoint { get; set; }

        public BackupRestoreState()
        {
        }
        public static new BackupRestoreState Empty => new BackupRestoreState();
    }
}
