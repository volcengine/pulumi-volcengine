// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Redis
{
    public static class GetInstanceSpecs
    {
        /// <summary>
        /// Use this data source to query detailed information of redis instance specs
        /// </summary>
        public static Task<GetInstanceSpecsResult> InvokeAsync(GetInstanceSpecsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceSpecsResult>("volcengine:redis/getInstanceSpecs:getInstanceSpecs", args ?? new GetInstanceSpecsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of redis instance specs
        /// </summary>
        public static Output<GetInstanceSpecsResult> Invoke(GetInstanceSpecsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceSpecsResult>("volcengine:redis/getInstanceSpecs:getInstanceSpecs", args ?? new GetInstanceSpecsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceSpecsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The architecture type of the Redis instance.
        /// </summary>
        [Input("archType")]
        public string? ArchType { get; set; }

        /// <summary>
        /// The type of Redis instance.
        /// </summary>
        [Input("instanceClass")]
        public string? InstanceClass { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetInstanceSpecsArgs()
        {
        }
        public static new GetInstanceSpecsArgs Empty => new GetInstanceSpecsArgs();
    }

    public sealed class GetInstanceSpecsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The architecture type of the Redis instance.
        /// </summary>
        [Input("archType")]
        public Input<string>? ArchType { get; set; }

        /// <summary>
        /// The type of Redis instance.
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetInstanceSpecsInvokeArgs()
        {
        }
        public static new GetInstanceSpecsInvokeArgs Empty => new GetInstanceSpecsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceSpecsResult
    {
        /// <summary>
        /// The architecture type of the Redis instance.
        /// </summary>
        public readonly string? ArchType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceClass;
        /// <summary>
        /// The List of Redis instance specifications.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceSpecsInstanceSpecResult> InstanceSpecs;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetInstanceSpecsResult(
            string? archType,

            string id,

            string? instanceClass,

            ImmutableArray<Outputs.GetInstanceSpecsInstanceSpecResult> instanceSpecs,

            string? nameRegex,

            string? outputFile,

            int totalCount)
        {
            ArchType = archType;
            Id = id;
            InstanceClass = instanceClass;
            InstanceSpecs = instanceSpecs;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
