// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vefaas
{
    /// <summary>
    /// Provides a resource to manage vefaas kafka trigger
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Vefaas.KafkaTrigger("foo", new()
    ///     {
    ///         FunctionId = "35ybaxxx",
    ///         MqInstanceId = "kafka-cnngmbeq10mcxxxx",
    ///         TopicName = "topic",
    ///         KafkaCredentials = new Volcengine.Vefaas.Inputs.KafkaTriggerKafkaCredentialsArgs
    ///         {
    ///             Password = "Waxxxxxx",
    ///             Username = "test-1",
    ///             Mechanism = "PLAIN",
    ///         },
    ///         BatchSize = 100,
    ///         Description = "modify",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VefaasKafkaTrigger can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:vefaas/kafkaTrigger:KafkaTrigger default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vefaas/kafkaTrigger:KafkaTrigger")]
    public partial class KafkaTrigger : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The maximum waiting time for batch consumption of triggers.
        /// </summary>
        [Output("batchFlushDurationMilliseconds")]
        public Output<int> BatchFlushDurationMilliseconds { get; private set; } = null!;

        /// <summary>
        /// The number of messages per batch consumed by the trigger in bulk.
        /// </summary>
        [Output("batchSize")]
        public Output<int> BatchSize { get; private set; } = null!;

        /// <summary>
        /// The consumer group name of the message queue Kafka instance.
        /// </summary>
        [Output("consumerGroup")]
        public Output<string> ConsumerGroup { get; private set; } = null!;

        /// <summary>
        /// The creation time of the Kafka trigger.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The description of the Kafka trigger.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Whether to enable triggers at the same time as creating them.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The ID of Function.
        /// </summary>
        [Output("functionId")]
        public Output<string> FunctionId { get; private set; } = null!;

        /// <summary>
        /// Kafka identity authentication. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("kafkaCredentials")]
        public Output<Outputs.KafkaTriggerKafkaCredentials> KafkaCredentials { get; private set; } = null!;

        /// <summary>
        /// The last update time of the Kafka trigger.
        /// </summary>
        [Output("lastUpdateTime")]
        public Output<string> LastUpdateTime { get; private set; } = null!;

        /// <summary>
        /// The maximum number of retries when a function has a runtime error.
        /// </summary>
        [Output("maximumRetryAttempts")]
        public Output<int> MaximumRetryAttempts { get; private set; } = null!;

        /// <summary>
        /// The instance ID of Message queue Kafka.
        /// </summary>
        [Output("mqInstanceId")]
        public Output<string> MqInstanceId { get; private set; } = null!;

        /// <summary>
        /// The name of the Kafka trigger.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specify the location where the messages in the Topic start to be consumed.
        /// </summary>
        [Output("startingPosition")]
        public Output<string> StartingPosition { get; private set; } = null!;

        /// <summary>
        /// The status of Kafka trigger.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The Topic name of the message queue Kafka instance.
        /// </summary>
        [Output("topicName")]
        public Output<string> TopicName { get; private set; } = null!;


        /// <summary>
        /// Create a KafkaTrigger resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KafkaTrigger(string name, KafkaTriggerArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vefaas/kafkaTrigger:KafkaTrigger", name, args ?? new KafkaTriggerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KafkaTrigger(string name, Input<string> id, KafkaTriggerState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vefaas/kafkaTrigger:KafkaTrigger", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KafkaTrigger resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KafkaTrigger Get(string name, Input<string> id, KafkaTriggerState? state = null, CustomResourceOptions? options = null)
        {
            return new KafkaTrigger(name, id, state, options);
        }
    }

    public sealed class KafkaTriggerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum waiting time for batch consumption of triggers.
        /// </summary>
        [Input("batchFlushDurationMilliseconds")]
        public Input<int>? BatchFlushDurationMilliseconds { get; set; }

        /// <summary>
        /// The number of messages per batch consumed by the trigger in bulk.
        /// </summary>
        [Input("batchSize")]
        public Input<int>? BatchSize { get; set; }

        /// <summary>
        /// The description of the Kafka trigger.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable triggers at the same time as creating them.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The ID of Function.
        /// </summary>
        [Input("functionId", required: true)]
        public Input<string> FunctionId { get; set; } = null!;

        /// <summary>
        /// Kafka identity authentication. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("kafkaCredentials", required: true)]
        public Input<Inputs.KafkaTriggerKafkaCredentialsArgs> KafkaCredentials { get; set; } = null!;

        /// <summary>
        /// The maximum number of retries when a function has a runtime error.
        /// </summary>
        [Input("maximumRetryAttempts")]
        public Input<int>? MaximumRetryAttempts { get; set; }

        /// <summary>
        /// The instance ID of Message queue Kafka.
        /// </summary>
        [Input("mqInstanceId", required: true)]
        public Input<string> MqInstanceId { get; set; } = null!;

        /// <summary>
        /// The name of the Kafka trigger.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the location where the messages in the Topic start to be consumed.
        /// </summary>
        [Input("startingPosition")]
        public Input<string>? StartingPosition { get; set; }

        /// <summary>
        /// The Topic name of the message queue Kafka instance.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public KafkaTriggerArgs()
        {
        }
        public static new KafkaTriggerArgs Empty => new KafkaTriggerArgs();
    }

    public sealed class KafkaTriggerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum waiting time for batch consumption of triggers.
        /// </summary>
        [Input("batchFlushDurationMilliseconds")]
        public Input<int>? BatchFlushDurationMilliseconds { get; set; }

        /// <summary>
        /// The number of messages per batch consumed by the trigger in bulk.
        /// </summary>
        [Input("batchSize")]
        public Input<int>? BatchSize { get; set; }

        /// <summary>
        /// The consumer group name of the message queue Kafka instance.
        /// </summary>
        [Input("consumerGroup")]
        public Input<string>? ConsumerGroup { get; set; }

        /// <summary>
        /// The creation time of the Kafka trigger.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The description of the Kafka trigger.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable triggers at the same time as creating them.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The ID of Function.
        /// </summary>
        [Input("functionId")]
        public Input<string>? FunctionId { get; set; }

        /// <summary>
        /// Kafka identity authentication. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("kafkaCredentials")]
        public Input<Inputs.KafkaTriggerKafkaCredentialsGetArgs>? KafkaCredentials { get; set; }

        /// <summary>
        /// The last update time of the Kafka trigger.
        /// </summary>
        [Input("lastUpdateTime")]
        public Input<string>? LastUpdateTime { get; set; }

        /// <summary>
        /// The maximum number of retries when a function has a runtime error.
        /// </summary>
        [Input("maximumRetryAttempts")]
        public Input<int>? MaximumRetryAttempts { get; set; }

        /// <summary>
        /// The instance ID of Message queue Kafka.
        /// </summary>
        [Input("mqInstanceId")]
        public Input<string>? MqInstanceId { get; set; }

        /// <summary>
        /// The name of the Kafka trigger.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specify the location where the messages in the Topic start to be consumed.
        /// </summary>
        [Input("startingPosition")]
        public Input<string>? StartingPosition { get; set; }

        /// <summary>
        /// The status of Kafka trigger.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The Topic name of the message queue Kafka instance.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public KafkaTriggerState()
        {
        }
        public static new KafkaTriggerState Empty => new KafkaTriggerState();
    }
}
