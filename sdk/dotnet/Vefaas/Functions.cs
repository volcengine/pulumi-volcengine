// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vefaas
{
    [Obsolete(@"volcengine.vefaas.Functions has been deprecated in favor of volcengine.vefaas.getFunctions")]
    public static class Functions
    {
        /// <summary>
        /// Use this data source to query detailed information of vefaas functions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vefaas.GetFunctions.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<FunctionsResult> InvokeAsync(FunctionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<FunctionsResult>("volcengine:vefaas/functions:Functions", args ?? new FunctionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vefaas functions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vefaas.GetFunctions.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<FunctionsResult> Invoke(FunctionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<FunctionsResult>("volcengine:vefaas/functions:Functions", args ?? new FunctionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class FunctionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public FunctionsArgs()
        {
        }
        public static new FunctionsArgs Empty => new FunctionsArgs();
    }

    public sealed class FunctionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public FunctionsInvokeArgs()
        {
        }
        public static new FunctionsInvokeArgs Empty => new FunctionsInvokeArgs();
    }


    [OutputType]
    public sealed class FunctionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.FunctionsItemResult> Items;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private FunctionsResult(
            string id,

            ImmutableArray<Outputs.FunctionsItemResult> items,

            string? nameRegex,

            string? outputFile,

            int totalCount)
        {
            Id = id;
            Items = items;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
