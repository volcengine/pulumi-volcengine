// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vefaas
{
    /// <summary>
    /// Provides a resource to manage vefaas release
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Vefaas.Release("foo", new()
    ///     {
    ///         FunctionId = "9p5emxxxx",
    ///         RevisionNumber = 0,
    ///         TargetTrafficWeight = 30,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VefaasRelease can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:vefaas/release:Release default FunctionId:ReleaseRecordId
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vefaas/release:Release")]
    public partial class Release : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The current percentage of current published traffic.
        /// </summary>
        [Output("currentTrafficWeight")]
        public Output<int> CurrentTrafficWeight { get; private set; } = null!;

        /// <summary>
        /// The description of released this time.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Error code when the release fails.
        /// </summary>
        [Output("errorCode")]
        public Output<string> ErrorCode { get; private set; } = null!;

        /// <summary>
        /// Download link for the failed instance log.
        /// </summary>
        [Output("failedInstanceLogs")]
        public Output<string> FailedInstanceLogs { get; private set; } = null!;

        /// <summary>
        /// The ID of Function.
        /// </summary>
        [Output("functionId")]
        public Output<string> FunctionId { get; private set; } = null!;

        /// <summary>
        /// Upper limit of the number of function instances.
        /// </summary>
        [Output("maxInstance")]
        public Output<int?> MaxInstance { get; private set; } = null!;

        /// <summary>
        /// The version number of the newly released version.
        /// </summary>
        [Output("newRevisionNumber")]
        public Output<int> NewRevisionNumber { get; private set; } = null!;

        /// <summary>
        /// The version number of the old version.
        /// </summary>
        [Output("oldRevisionNumber")]
        public Output<int> OldRevisionNumber { get; private set; } = null!;

        /// <summary>
        /// The ID of Release record.
        /// </summary>
        [Output("releaseRecordId")]
        public Output<string> ReleaseRecordId { get; private set; } = null!;

        /// <summary>
        /// When the RevisionNumber to be released is 0, the Latest code (Latest) will be released and a new version will be created. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("revisionNumber")]
        public Output<int> RevisionNumber { get; private set; } = null!;

        /// <summary>
        /// Percentage of grayscale step size.
        /// </summary>
        [Output("rollingStep")]
        public Output<string?> RollingStep { get; private set; } = null!;

        /// <summary>
        /// The current version number that is stably running online.
        /// </summary>
        [Output("stableRevisionNumber")]
        public Output<int> StableRevisionNumber { get; private set; } = null!;

        /// <summary>
        /// The current release start time.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// The status of function release.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Detailed information of the function release status.
        /// </summary>
        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        /// <summary>
        /// Target percentage of published traffic.
        /// </summary>
        [Output("targetTrafficWeight")]
        public Output<int> TargetTrafficWeight { get; private set; } = null!;


        /// <summary>
        /// Create a Release resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Release(string name, ReleaseArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vefaas/release:Release", name, args ?? new ReleaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Release(string name, Input<string> id, ReleaseState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vefaas/release:Release", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Release resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Release Get(string name, Input<string> id, ReleaseState? state = null, CustomResourceOptions? options = null)
        {
            return new Release(name, id, state, options);
        }
    }

    public sealed class ReleaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of released this time.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of Function.
        /// </summary>
        [Input("functionId", required: true)]
        public Input<string> FunctionId { get; set; } = null!;

        /// <summary>
        /// Upper limit of the number of function instances.
        /// </summary>
        [Input("maxInstance")]
        public Input<int>? MaxInstance { get; set; }

        /// <summary>
        /// When the RevisionNumber to be released is 0, the Latest code (Latest) will be released and a new version will be created. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("revisionNumber", required: true)]
        public Input<int> RevisionNumber { get; set; } = null!;

        /// <summary>
        /// Percentage of grayscale step size.
        /// </summary>
        [Input("rollingStep")]
        public Input<string>? RollingStep { get; set; }

        /// <summary>
        /// Target percentage of published traffic.
        /// </summary>
        [Input("targetTrafficWeight")]
        public Input<int>? TargetTrafficWeight { get; set; }

        public ReleaseArgs()
        {
        }
        public static new ReleaseArgs Empty => new ReleaseArgs();
    }

    public sealed class ReleaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The current percentage of current published traffic.
        /// </summary>
        [Input("currentTrafficWeight")]
        public Input<int>? CurrentTrafficWeight { get; set; }

        /// <summary>
        /// The description of released this time.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Error code when the release fails.
        /// </summary>
        [Input("errorCode")]
        public Input<string>? ErrorCode { get; set; }

        /// <summary>
        /// Download link for the failed instance log.
        /// </summary>
        [Input("failedInstanceLogs")]
        public Input<string>? FailedInstanceLogs { get; set; }

        /// <summary>
        /// The ID of Function.
        /// </summary>
        [Input("functionId")]
        public Input<string>? FunctionId { get; set; }

        /// <summary>
        /// Upper limit of the number of function instances.
        /// </summary>
        [Input("maxInstance")]
        public Input<int>? MaxInstance { get; set; }

        /// <summary>
        /// The version number of the newly released version.
        /// </summary>
        [Input("newRevisionNumber")]
        public Input<int>? NewRevisionNumber { get; set; }

        /// <summary>
        /// The version number of the old version.
        /// </summary>
        [Input("oldRevisionNumber")]
        public Input<int>? OldRevisionNumber { get; set; }

        /// <summary>
        /// The ID of Release record.
        /// </summary>
        [Input("releaseRecordId")]
        public Input<string>? ReleaseRecordId { get; set; }

        /// <summary>
        /// When the RevisionNumber to be released is 0, the Latest code (Latest) will be released and a new version will be created. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("revisionNumber")]
        public Input<int>? RevisionNumber { get; set; }

        /// <summary>
        /// Percentage of grayscale step size.
        /// </summary>
        [Input("rollingStep")]
        public Input<string>? RollingStep { get; set; }

        /// <summary>
        /// The current version number that is stably running online.
        /// </summary>
        [Input("stableRevisionNumber")]
        public Input<int>? StableRevisionNumber { get; set; }

        /// <summary>
        /// The current release start time.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The status of function release.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Detailed information of the function release status.
        /// </summary>
        [Input("statusMessage")]
        public Input<string>? StatusMessage { get; set; }

        /// <summary>
        /// Target percentage of published traffic.
        /// </summary>
        [Input("targetTrafficWeight")]
        public Input<int>? TargetTrafficWeight { get; set; }

        public ReleaseState()
        {
        }
        public static new ReleaseState Empty => new ReleaseState();
    }
}
