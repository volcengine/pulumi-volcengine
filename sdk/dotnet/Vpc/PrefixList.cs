// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    /// <summary>
    /// Provides a resource to manage vpc prefix list
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Vpc.PrefixList("foo", new()
    ///     {
    ///         Description = "acc test description",
    ///         IpVersion = "IPv4",
    ///         MaxEntries = 7,
    ///         PrefixListEntries = new[]
    ///         {
    ///             new Volcengine.Vpc.Inputs.PrefixListPrefixListEntryArgs
    ///             {
    ///                 Cidr = "192.168.4.0/28",
    ///                 Description = "acc-test-1",
    ///             },
    ///             new Volcengine.Vpc.Inputs.PrefixListPrefixListEntryArgs
    ///             {
    ///                 Cidr = "192.168.9.0/28",
    ///                 Description = "acc-test-4",
    ///             },
    ///             new Volcengine.Vpc.Inputs.PrefixListPrefixListEntryArgs
    ///             {
    ///                 Cidr = "192.168.8.0/28",
    ///                 Description = "acc-test-5",
    ///             },
    ///         },
    ///         PrefixListName = "acc-test-prefix",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Vpc.Inputs.PrefixListTagArgs
    ///             {
    ///                 Key = "tf-key1",
    ///                 Value = "tf-value1",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VpcPrefixList can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:vpc/prefixList:PrefixList default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vpc/prefixList:PrefixList")]
    public partial class PrefixList : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the prefix list.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// IP version type. Possible values:
        /// IPv4 (default): IPv4 type.
        /// IPv6: IPv6 type.
        /// </summary>
        [Output("ipVersion")]
        public Output<string> IpVersion { get; private set; } = null!;

        /// <summary>
        /// Maximum number of entries, which is the maximum number of entries that can be added to the prefix list. The value range is 1 to 200.
        /// </summary>
        [Output("maxEntries")]
        public Output<int> MaxEntries { get; private set; } = null!;

        /// <summary>
        /// Collection of resources associated with VPC prefix list.
        /// </summary>
        [Output("prefixListAssociations")]
        public Output<ImmutableArray<Outputs.PrefixListPrefixListAssociation>> PrefixListAssociations { get; private set; } = null!;

        /// <summary>
        /// Prefix list entry list.
        /// </summary>
        [Output("prefixListEntries")]
        public Output<ImmutableArray<Outputs.PrefixListPrefixListEntry>> PrefixListEntries { get; private set; } = null!;

        /// <summary>
        /// The name of the prefix list.
        /// </summary>
        [Output("prefixListName")]
        public Output<string> PrefixListName { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.PrefixListTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a PrefixList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrefixList(string name, PrefixListArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vpc/prefixList:PrefixList", name, args ?? new PrefixListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrefixList(string name, Input<string> id, PrefixListState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vpc/prefixList:PrefixList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrefixList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrefixList Get(string name, Input<string> id, PrefixListState? state = null, CustomResourceOptions? options = null)
        {
            return new PrefixList(name, id, state, options);
        }
    }

    public sealed class PrefixListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the prefix list.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// IP version type. Possible values:
        /// IPv4 (default): IPv4 type.
        /// IPv6: IPv6 type.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// Maximum number of entries, which is the maximum number of entries that can be added to the prefix list. The value range is 1 to 200.
        /// </summary>
        [Input("maxEntries", required: true)]
        public Input<int> MaxEntries { get; set; } = null!;

        [Input("prefixListEntries")]
        private InputList<Inputs.PrefixListPrefixListEntryArgs>? _prefixListEntries;

        /// <summary>
        /// Prefix list entry list.
        /// </summary>
        public InputList<Inputs.PrefixListPrefixListEntryArgs> PrefixListEntries
        {
            get => _prefixListEntries ?? (_prefixListEntries = new InputList<Inputs.PrefixListPrefixListEntryArgs>());
            set => _prefixListEntries = value;
        }

        /// <summary>
        /// The name of the prefix list.
        /// </summary>
        [Input("prefixListName")]
        public Input<string>? PrefixListName { get; set; }

        [Input("tags")]
        private InputList<Inputs.PrefixListTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.PrefixListTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PrefixListTagArgs>());
            set => _tags = value;
        }

        public PrefixListArgs()
        {
        }
        public static new PrefixListArgs Empty => new PrefixListArgs();
    }

    public sealed class PrefixListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the prefix list.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// IP version type. Possible values:
        /// IPv4 (default): IPv4 type.
        /// IPv6: IPv6 type.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// Maximum number of entries, which is the maximum number of entries that can be added to the prefix list. The value range is 1 to 200.
        /// </summary>
        [Input("maxEntries")]
        public Input<int>? MaxEntries { get; set; }

        [Input("prefixListAssociations")]
        private InputList<Inputs.PrefixListPrefixListAssociationGetArgs>? _prefixListAssociations;

        /// <summary>
        /// Collection of resources associated with VPC prefix list.
        /// </summary>
        public InputList<Inputs.PrefixListPrefixListAssociationGetArgs> PrefixListAssociations
        {
            get => _prefixListAssociations ?? (_prefixListAssociations = new InputList<Inputs.PrefixListPrefixListAssociationGetArgs>());
            set => _prefixListAssociations = value;
        }

        [Input("prefixListEntries")]
        private InputList<Inputs.PrefixListPrefixListEntryGetArgs>? _prefixListEntries;

        /// <summary>
        /// Prefix list entry list.
        /// </summary>
        public InputList<Inputs.PrefixListPrefixListEntryGetArgs> PrefixListEntries
        {
            get => _prefixListEntries ?? (_prefixListEntries = new InputList<Inputs.PrefixListPrefixListEntryGetArgs>());
            set => _prefixListEntries = value;
        }

        /// <summary>
        /// The name of the prefix list.
        /// </summary>
        [Input("prefixListName")]
        public Input<string>? PrefixListName { get; set; }

        [Input("tags")]
        private InputList<Inputs.PrefixListTagGetArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.PrefixListTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PrefixListTagGetArgs>());
            set => _tags = value;
        }

        public PrefixListState()
        {
        }
        public static new PrefixListState Empty => new PrefixListState();
    }
}
