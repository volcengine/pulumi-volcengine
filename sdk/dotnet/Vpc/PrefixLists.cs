// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    public static class PrefixLists
    {
        /// <summary>
        /// Use this data source to query detailed information of vpc prefix lists
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooPrefixList = new Volcengine.Vpc.PrefixList("fooPrefixList", new()
        ///     {
        ///         PrefixListName = "acc-test-prefix",
        ///         MaxEntries = 3,
        ///         Description = "acc test description",
        ///         IpVersion = "IPv4",
        ///         PrefixListEntries = new[]
        ///         {
        ///             new Volcengine.Vpc.Inputs.PrefixListPrefixListEntryArgs
        ///             {
        ///                 Cidr = "192.168.4.0/28",
        ///                 Description = "acc-test-1",
        ///             },
        ///             new Volcengine.Vpc.Inputs.PrefixListPrefixListEntryArgs
        ///             {
        ///                 Cidr = "192.168.5.0/28",
        ///                 Description = "acc-test-2",
        ///             },
        ///         },
        ///         Tags = new[]
        ///         {
        ///             new Volcengine.Vpc.Inputs.PrefixListTagArgs
        ///             {
        ///                 Key = "tf-key1",
        ///                 Value = "tf-value1",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooPrefixLists = Volcengine.Vpc.PrefixLists.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooPrefixList.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<PrefixListsResult> InvokeAsync(PrefixListsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<PrefixListsResult>("volcengine:vpc/prefixLists:PrefixLists", args ?? new PrefixListsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vpc prefix lists
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooPrefixList = new Volcengine.Vpc.PrefixList("fooPrefixList", new()
        ///     {
        ///         PrefixListName = "acc-test-prefix",
        ///         MaxEntries = 3,
        ///         Description = "acc test description",
        ///         IpVersion = "IPv4",
        ///         PrefixListEntries = new[]
        ///         {
        ///             new Volcengine.Vpc.Inputs.PrefixListPrefixListEntryArgs
        ///             {
        ///                 Cidr = "192.168.4.0/28",
        ///                 Description = "acc-test-1",
        ///             },
        ///             new Volcengine.Vpc.Inputs.PrefixListPrefixListEntryArgs
        ///             {
        ///                 Cidr = "192.168.5.0/28",
        ///                 Description = "acc-test-2",
        ///             },
        ///         },
        ///         Tags = new[]
        ///         {
        ///             new Volcengine.Vpc.Inputs.PrefixListTagArgs
        ///             {
        ///                 Key = "tf-key1",
        ///                 Value = "tf-value1",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooPrefixLists = Volcengine.Vpc.PrefixLists.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooPrefixList.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<PrefixListsResult> Invoke(PrefixListsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<PrefixListsResult>("volcengine:vpc/prefixLists:PrefixLists", args ?? new PrefixListsInvokeArgs(), options.WithDefaults());
    }


    public sealed class PrefixListsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of prefix list ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// IP version of prefix list.
        /// </summary>
        [Input("ipVersion")]
        public string? IpVersion { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// A Name of prefix list.
        /// </summary>
        [Input("prefixListName")]
        public string? PrefixListName { get; set; }

        [Input("tagFilters")]
        private List<Inputs.PrefixListsTagFilterArgs>? _tagFilters;

        /// <summary>
        /// List of tag filters.
        /// </summary>
        public List<Inputs.PrefixListsTagFilterArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new List<Inputs.PrefixListsTagFilterArgs>());
            set => _tagFilters = value;
        }

        public PrefixListsArgs()
        {
        }
        public static new PrefixListsArgs Empty => new PrefixListsArgs();
    }

    public sealed class PrefixListsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of prefix list ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// IP version of prefix list.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// A Name of prefix list.
        /// </summary>
        [Input("prefixListName")]
        public Input<string>? PrefixListName { get; set; }

        [Input("tagFilters")]
        private InputList<Inputs.PrefixListsTagFilterInputArgs>? _tagFilters;

        /// <summary>
        /// List of tag filters.
        /// </summary>
        public InputList<Inputs.PrefixListsTagFilterInputArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.PrefixListsTagFilterInputArgs>());
            set => _tagFilters = value;
        }

        public PrefixListsInvokeArgs()
        {
        }
        public static new PrefixListsInvokeArgs Empty => new PrefixListsInvokeArgs();
    }


    [OutputType]
    public sealed class PrefixListsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The ip version of the prefix list.
        /// </summary>
        public readonly string? IpVersion;
        public readonly string? OutputFile;
        /// <summary>
        /// The prefix list name.
        /// </summary>
        public readonly string? PrefixListName;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrefixListsPrefixListResult> PrefixLists;
        public readonly ImmutableArray<Outputs.PrefixListsTagFilterResult> TagFilters;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private PrefixListsResult(
            string id,

            ImmutableArray<string> ids,

            string? ipVersion,

            string? outputFile,

            string? prefixListName,

            ImmutableArray<Outputs.PrefixListsPrefixListResult> prefixLists,

            ImmutableArray<Outputs.PrefixListsTagFilterResult> tagFilters,

            int totalCount)
        {
            Id = id;
            Ids = ids;
            IpVersion = ipVersion;
            OutputFile = outputFile;
            PrefixListName = prefixListName;
            PrefixLists = prefixLists;
            TagFilters = tagFilters;
            TotalCount = totalCount;
        }
    }
}
