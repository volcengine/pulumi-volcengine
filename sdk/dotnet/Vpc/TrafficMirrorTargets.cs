// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    [Obsolete(@"volcengine.vpc.TrafficMirrorTargets has been deprecated in favor of volcengine.vpc.getTrafficMirrorTargets")]
    public static class TrafficMirrorTargets
    {
        /// <summary>
        /// Use this data source to query detailed information of traffic mirror targets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vpc.GetTrafficMirrorTargets.Invoke(new()
        ///     {
        ///         TrafficMirrorTargetIds = new[]
        ///         {
        ///             "tmt-rry7yljufsw0v0x58w2****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<TrafficMirrorTargetsResult> InvokeAsync(TrafficMirrorTargetsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<TrafficMirrorTargetsResult>("volcengine:vpc/trafficMirrorTargets:TrafficMirrorTargets", args ?? new TrafficMirrorTargetsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of traffic mirror targets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vpc.GetTrafficMirrorTargets.Invoke(new()
        ///     {
        ///         TrafficMirrorTargetIds = new[]
        ///         {
        ///             "tmt-rry7yljufsw0v0x58w2****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<TrafficMirrorTargetsResult> Invoke(TrafficMirrorTargetsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<TrafficMirrorTargetsResult>("volcengine:vpc/trafficMirrorTargets:TrafficMirrorTargets", args ?? new TrafficMirrorTargetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class TrafficMirrorTargetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project name of traffic mirror target.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        [Input("tags")]
        private List<Inputs.TrafficMirrorTargetsTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.TrafficMirrorTargetsTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.TrafficMirrorTargetsTagArgs>());
            set => _tags = value;
        }

        [Input("trafficMirrorTargetIds")]
        private List<string>? _trafficMirrorTargetIds;

        /// <summary>
        /// A list of traffic mirror target IDs.
        /// </summary>
        public List<string> TrafficMirrorTargetIds
        {
            get => _trafficMirrorTargetIds ?? (_trafficMirrorTargetIds = new List<string>());
            set => _trafficMirrorTargetIds = value;
        }

        /// <summary>
        /// The name of traffic mirror target.
        /// </summary>
        [Input("trafficMirrorTargetName")]
        public string? TrafficMirrorTargetName { get; set; }

        public TrafficMirrorTargetsArgs()
        {
        }
        public static new TrafficMirrorTargetsArgs Empty => new TrafficMirrorTargetsArgs();
    }

    public sealed class TrafficMirrorTargetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project name of traffic mirror target.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.TrafficMirrorTargetsTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.TrafficMirrorTargetsTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TrafficMirrorTargetsTagInputArgs>());
            set => _tags = value;
        }

        [Input("trafficMirrorTargetIds")]
        private InputList<string>? _trafficMirrorTargetIds;

        /// <summary>
        /// A list of traffic mirror target IDs.
        /// </summary>
        public InputList<string> TrafficMirrorTargetIds
        {
            get => _trafficMirrorTargetIds ?? (_trafficMirrorTargetIds = new InputList<string>());
            set => _trafficMirrorTargetIds = value;
        }

        /// <summary>
        /// The name of traffic mirror target.
        /// </summary>
        [Input("trafficMirrorTargetName")]
        public Input<string>? TrafficMirrorTargetName { get; set; }

        public TrafficMirrorTargetsInvokeArgs()
        {
        }
        public static new TrafficMirrorTargetsInvokeArgs Empty => new TrafficMirrorTargetsInvokeArgs();
    }


    [OutputType]
    public sealed class TrafficMirrorTargetsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The project name of traffic mirror target.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.TrafficMirrorTargetsTagResult> Tags;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        public readonly ImmutableArray<string> TrafficMirrorTargetIds;
        /// <summary>
        /// The name of traffic mirror target.
        /// </summary>
        public readonly string? TrafficMirrorTargetName;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.TrafficMirrorTargetsTrafficMirrorTargetResult> TrafficMirrorTargets;

        [OutputConstructor]
        private TrafficMirrorTargetsResult(
            string id,

            string? nameRegex,

            string? outputFile,

            string? projectName,

            ImmutableArray<Outputs.TrafficMirrorTargetsTagResult> tags,

            int totalCount,

            ImmutableArray<string> trafficMirrorTargetIds,

            string? trafficMirrorTargetName,

            ImmutableArray<Outputs.TrafficMirrorTargetsTrafficMirrorTargetResult> trafficMirrorTargets)
        {
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProjectName = projectName;
            Tags = tags;
            TotalCount = totalCount;
            TrafficMirrorTargetIds = trafficMirrorTargetIds;
            TrafficMirrorTargetName = trafficMirrorTargetName;
            TrafficMirrorTargets = trafficMirrorTargets;
        }
    }
}
