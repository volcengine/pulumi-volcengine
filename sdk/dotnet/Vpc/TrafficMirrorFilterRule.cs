// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    /// <summary>
    /// Provides a resource to manage traffic mirror filter rule
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Vpc.TrafficMirrorFilter("foo", new()
    ///     {
    ///         TrafficMirrorFilterName = "acc-test-traffic-mirror-filter",
    ///         Description = "acc-test",
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Vpc.Inputs.TrafficMirrorFilterTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var foo_ingress = new Volcengine.Vpc.TrafficMirrorFilterRule("foo-ingress", new()
    ///     {
    ///         TrafficMirrorFilterId = foo.Id,
    ///         TrafficDirection = "ingress",
    ///         Description = "acc-test",
    ///         Priority = 1,
    ///         Policy = "reject",
    ///         Protocol = "all",
    ///         SourceCidrBlock = "10.0.1.0/24",
    ///         SourcePortRange = "-1/-1",
    ///         DestinationCidrBlock = "10.0.0.0/24",
    ///         DestinationPortRange = "-1/-1",
    ///     });
    /// 
    ///     var foo_egress = new Volcengine.Vpc.TrafficMirrorFilterRule("foo-egress", new()
    ///     {
    ///         TrafficMirrorFilterId = foo.Id,
    ///         TrafficDirection = "egress",
    ///         Description = "acc-test",
    ///         Priority = 2,
    ///         Policy = "reject",
    ///         Protocol = "tcp",
    ///         SourceCidrBlock = "10.0.1.0/24",
    ///         SourcePortRange = "80/80",
    ///         DestinationCidrBlock = "10.0.0.0/24",
    ///         DestinationPortRange = "88/90",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TrafficMirrorFilterRule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule")]
    public partial class TrafficMirrorFilterRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The create time of traffic mirror filter rule.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The description of traffic mirror filter rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The destination cidr block of traffic mirror filter rule.
        /// </summary>
        [Output("destinationCidrBlock")]
        public Output<string> DestinationCidrBlock { get; private set; } = null!;

        /// <summary>
        /// The destination port range of traffic mirror filter rule. When the protocol is `all` or `icmp`, the value is `-1/-1`. 
        /// When the protocol is `tcp` or `udp`, the value can be `1/200`, `80/80`, which means port 1 to port 200, port 80.
        /// </summary>
        [Output("destinationPortRange")]
        public Output<string> DestinationPortRange { get; private set; } = null!;

        /// <summary>
        /// The policy of traffic mirror filter rule. Valid values: `accept`, `reject`.
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;

        /// <summary>
        /// The priority of traffic mirror filter rule. Valid values: 1~1000. Default value is 1.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// The protocol of traffic mirror filter rule. Valid values: `tcp`, `udp`, `icmp`, `all`.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// The source cidr block of traffic mirror filter rule.
        /// </summary>
        [Output("sourceCidrBlock")]
        public Output<string> SourceCidrBlock { get; private set; } = null!;

        /// <summary>
        /// The source port range of traffic mirror filter rule. When the protocol is `all` or `icmp`, the value is `-1/-1`. 
        /// When the protocol is `tcp` or `udp`, the value can be `1/200`, `80/80`, which means port 1 to port 200, port 80.
        /// </summary>
        [Output("sourcePortRange")]
        public Output<string> SourcePortRange { get; private set; } = null!;

        /// <summary>
        /// The status of traffic mirror filter rule.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The traffic direction of traffic mirror filter rule. Valid values: `ingress`; `egress`.
        /// </summary>
        [Output("trafficDirection")]
        public Output<string> TrafficDirection { get; private set; } = null!;

        /// <summary>
        /// The ID of traffic mirror filter.
        /// </summary>
        [Output("trafficMirrorFilterId")]
        public Output<string> TrafficMirrorFilterId { get; private set; } = null!;

        /// <summary>
        /// The ID of traffic mirror filter rule.
        /// </summary>
        [Output("trafficMirrorFilterRuleId")]
        public Output<string> TrafficMirrorFilterRuleId { get; private set; } = null!;

        /// <summary>
        /// The last update time of traffic mirror filter rule.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a TrafficMirrorFilterRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrafficMirrorFilterRule(string name, TrafficMirrorFilterRuleArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, args ?? new TrafficMirrorFilterRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrafficMirrorFilterRule(string name, Input<string> id, TrafficMirrorFilterRuleState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vpc/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrafficMirrorFilterRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrafficMirrorFilterRule Get(string name, Input<string> id, TrafficMirrorFilterRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new TrafficMirrorFilterRule(name, id, state, options);
        }
    }

    public sealed class TrafficMirrorFilterRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of traffic mirror filter rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The destination cidr block of traffic mirror filter rule.
        /// </summary>
        [Input("destinationCidrBlock", required: true)]
        public Input<string> DestinationCidrBlock { get; set; } = null!;

        /// <summary>
        /// The destination port range of traffic mirror filter rule. When the protocol is `all` or `icmp`, the value is `-1/-1`. 
        /// When the protocol is `tcp` or `udp`, the value can be `1/200`, `80/80`, which means port 1 to port 200, port 80.
        /// </summary>
        [Input("destinationPortRange")]
        public Input<string>? DestinationPortRange { get; set; }

        /// <summary>
        /// The policy of traffic mirror filter rule. Valid values: `accept`, `reject`.
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        /// <summary>
        /// The priority of traffic mirror filter rule. Valid values: 1~1000. Default value is 1.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The protocol of traffic mirror filter rule. Valid values: `tcp`, `udp`, `icmp`, `all`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// The source cidr block of traffic mirror filter rule.
        /// </summary>
        [Input("sourceCidrBlock", required: true)]
        public Input<string> SourceCidrBlock { get; set; } = null!;

        /// <summary>
        /// The source port range of traffic mirror filter rule. When the protocol is `all` or `icmp`, the value is `-1/-1`. 
        /// When the protocol is `tcp` or `udp`, the value can be `1/200`, `80/80`, which means port 1 to port 200, port 80.
        /// </summary>
        [Input("sourcePortRange")]
        public Input<string>? SourcePortRange { get; set; }

        /// <summary>
        /// The traffic direction of traffic mirror filter rule. Valid values: `ingress`; `egress`.
        /// </summary>
        [Input("trafficDirection", required: true)]
        public Input<string> TrafficDirection { get; set; } = null!;

        /// <summary>
        /// The ID of traffic mirror filter.
        /// </summary>
        [Input("trafficMirrorFilterId", required: true)]
        public Input<string> TrafficMirrorFilterId { get; set; } = null!;

        public TrafficMirrorFilterRuleArgs()
        {
        }
        public static new TrafficMirrorFilterRuleArgs Empty => new TrafficMirrorFilterRuleArgs();
    }

    public sealed class TrafficMirrorFilterRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The create time of traffic mirror filter rule.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The description of traffic mirror filter rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The destination cidr block of traffic mirror filter rule.
        /// </summary>
        [Input("destinationCidrBlock")]
        public Input<string>? DestinationCidrBlock { get; set; }

        /// <summary>
        /// The destination port range of traffic mirror filter rule. When the protocol is `all` or `icmp`, the value is `-1/-1`. 
        /// When the protocol is `tcp` or `udp`, the value can be `1/200`, `80/80`, which means port 1 to port 200, port 80.
        /// </summary>
        [Input("destinationPortRange")]
        public Input<string>? DestinationPortRange { get; set; }

        /// <summary>
        /// The policy of traffic mirror filter rule. Valid values: `accept`, `reject`.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// The priority of traffic mirror filter rule. Valid values: 1~1000. Default value is 1.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The protocol of traffic mirror filter rule. Valid values: `tcp`, `udp`, `icmp`, `all`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// The source cidr block of traffic mirror filter rule.
        /// </summary>
        [Input("sourceCidrBlock")]
        public Input<string>? SourceCidrBlock { get; set; }

        /// <summary>
        /// The source port range of traffic mirror filter rule. When the protocol is `all` or `icmp`, the value is `-1/-1`. 
        /// When the protocol is `tcp` or `udp`, the value can be `1/200`, `80/80`, which means port 1 to port 200, port 80.
        /// </summary>
        [Input("sourcePortRange")]
        public Input<string>? SourcePortRange { get; set; }

        /// <summary>
        /// The status of traffic mirror filter rule.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The traffic direction of traffic mirror filter rule. Valid values: `ingress`; `egress`.
        /// </summary>
        [Input("trafficDirection")]
        public Input<string>? TrafficDirection { get; set; }

        /// <summary>
        /// The ID of traffic mirror filter.
        /// </summary>
        [Input("trafficMirrorFilterId")]
        public Input<string>? TrafficMirrorFilterId { get; set; }

        /// <summary>
        /// The ID of traffic mirror filter rule.
        /// </summary>
        [Input("trafficMirrorFilterRuleId")]
        public Input<string>? TrafficMirrorFilterRuleId { get; set; }

        /// <summary>
        /// The last update time of traffic mirror filter rule.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public TrafficMirrorFilterRuleState()
        {
        }
        public static new TrafficMirrorFilterRuleState Empty => new TrafficMirrorFilterRuleState();
    }
}
