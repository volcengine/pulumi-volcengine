// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    public static class GetIpv6Gateways
    {
        /// <summary>
        /// Use this data source to query detailed information of vpc ipv6 gateways
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vpc.GetIpv6Gateways.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "ipv6gw-12bcapllb5ukg17q7y2sd3thx",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIpv6GatewaysResult> InvokeAsync(GetIpv6GatewaysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpv6GatewaysResult>("volcengine:vpc/getIpv6Gateways:getIpv6Gateways", args ?? new GetIpv6GatewaysArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vpc ipv6 gateways
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vpc.GetIpv6Gateways.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "ipv6gw-12bcapllb5ukg17q7y2sd3thx",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIpv6GatewaysResult> Invoke(GetIpv6GatewaysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpv6GatewaysResult>("volcengine:vpc/getIpv6Gateways:getIpv6Gateways", args ?? new GetIpv6GatewaysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpv6GatewaysArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// The ID list of the Ipv6Gateways.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the Ipv6Gateway.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A Name Regex of the Ipv6Gateway.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("vpcIds")]
        private List<string>? _vpcIds;

        /// <summary>
        /// The ID list of the VPC which the Ipv6Gateway belongs to.
        /// </summary>
        public List<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new List<string>());
            set => _vpcIds = value;
        }

        public GetIpv6GatewaysArgs()
        {
        }
        public static new GetIpv6GatewaysArgs Empty => new GetIpv6GatewaysArgs();
    }

    public sealed class GetIpv6GatewaysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The ID list of the Ipv6Gateways.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the Ipv6Gateway.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A Name Regex of the Ipv6Gateway.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("vpcIds")]
        private InputList<string>? _vpcIds;

        /// <summary>
        /// The ID list of the VPC which the Ipv6Gateway belongs to.
        /// </summary>
        public InputList<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new InputList<string>());
            set => _vpcIds = value;
        }

        public GetIpv6GatewaysInvokeArgs()
        {
        }
        public static new GetIpv6GatewaysInvokeArgs Empty => new GetIpv6GatewaysInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpv6GatewaysResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The collection of Ipv6Gateway query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIpv6GatewaysIpv6GatewayResult> Ipv6Gateways;
        /// <summary>
        /// The Name of the Ipv6Gateway.
        /// </summary>
        public readonly string? Name;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of Ipv6Gateway query.
        /// </summary>
        public readonly int TotalCount;
        public readonly ImmutableArray<string> VpcIds;

        [OutputConstructor]
        private GetIpv6GatewaysResult(
            string id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetIpv6GatewaysIpv6GatewayResult> ipv6Gateways,

            string? name,

            string? nameRegex,

            string? outputFile,

            int totalCount,

            ImmutableArray<string> vpcIds)
        {
            Id = id;
            Ids = ids;
            Ipv6Gateways = ipv6Gateways;
            Name = name;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
            VpcIds = vpcIds;
        }
    }
}
