// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    public static class GetNetworkInterfaces
    {
        /// <summary>
        /// Use this data source to query detailed information of network interfaces
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vpc.GetNetworkInterfaces.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "eni-2744htx2w0j5s7fap8t3ivwze",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkInterfacesResult> InvokeAsync(GetNetworkInterfacesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkInterfacesResult>("volcengine:vpc/getNetworkInterfaces:getNetworkInterfaces", args ?? new GetNetworkInterfacesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of network interfaces
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vpc.GetNetworkInterfaces.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "eni-2744htx2w0j5s7fap8t3ivwze",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkInterfacesResult> Invoke(GetNetworkInterfacesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkInterfacesResult>("volcengine:vpc/getNetworkInterfaces:getNetworkInterfaces", args ?? new GetNetworkInterfacesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkInterfacesArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of ENI ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// An id of the instance to which the ENI is bound.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        [Input("networkInterfaceIds")]
        private List<string>? _networkInterfaceIds;

        /// <summary>
        /// A list of network interface ids.
        /// </summary>
        public List<string> NetworkInterfaceIds
        {
            get => _networkInterfaceIds ?? (_networkInterfaceIds = new List<string>());
            set => _networkInterfaceIds = value;
        }

        /// <summary>
        /// A name of ENI.
        /// </summary>
        [Input("networkInterfaceName")]
        public string? NetworkInterfaceName { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("primaryIpAddresses")]
        private List<string>? _primaryIpAddresses;

        /// <summary>
        /// A list of primary IP address of ENI.
        /// </summary>
        public List<string> PrimaryIpAddresses
        {
            get => _primaryIpAddresses ?? (_primaryIpAddresses = new List<string>());
            set => _primaryIpAddresses = value;
        }

        [Input("privateIpAddresses")]
        private List<string>? _privateIpAddresses;

        /// <summary>
        /// A list of private IP addresses.
        /// </summary>
        public List<string> PrivateIpAddresses
        {
            get => _privateIpAddresses ?? (_privateIpAddresses = new List<string>());
            set => _privateIpAddresses = value;
        }

        /// <summary>
        /// The ProjectName of the ENI.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        /// <summary>
        /// An id of the security group to which the secondary ENI belongs.
        /// </summary>
        [Input("securityGroupId")]
        public string? SecurityGroupId { get; set; }

        /// <summary>
        /// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        /// <summary>
        /// An id of the subnet to which the ENI is connected.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        [Input("tags")]
        private List<Inputs.GetNetworkInterfacesTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.GetNetworkInterfacesTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetNetworkInterfacesTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// A type of ENI, Optional choice contains `primary`, `secondary`.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        /// <summary>
        /// An id of the virtual private cloud (VPC) to which the ENI belongs.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        /// <summary>
        /// The zone ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetNetworkInterfacesArgs()
        {
        }
        public static new GetNetworkInterfacesArgs Empty => new GetNetworkInterfacesArgs();
    }

    public sealed class GetNetworkInterfacesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of ENI ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// An id of the instance to which the ENI is bound.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("networkInterfaceIds")]
        private InputList<string>? _networkInterfaceIds;

        /// <summary>
        /// A list of network interface ids.
        /// </summary>
        public InputList<string> NetworkInterfaceIds
        {
            get => _networkInterfaceIds ?? (_networkInterfaceIds = new InputList<string>());
            set => _networkInterfaceIds = value;
        }

        /// <summary>
        /// A name of ENI.
        /// </summary>
        [Input("networkInterfaceName")]
        public Input<string>? NetworkInterfaceName { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("primaryIpAddresses")]
        private InputList<string>? _primaryIpAddresses;

        /// <summary>
        /// A list of primary IP address of ENI.
        /// </summary>
        public InputList<string> PrimaryIpAddresses
        {
            get => _primaryIpAddresses ?? (_primaryIpAddresses = new InputList<string>());
            set => _primaryIpAddresses = value;
        }

        [Input("privateIpAddresses")]
        private InputList<string>? _privateIpAddresses;

        /// <summary>
        /// A list of private IP addresses.
        /// </summary>
        public InputList<string> PrivateIpAddresses
        {
            get => _privateIpAddresses ?? (_privateIpAddresses = new InputList<string>());
            set => _privateIpAddresses = value;
        }

        /// <summary>
        /// The ProjectName of the ENI.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// An id of the security group to which the secondary ENI belongs.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        /// <summary>
        /// A status of ENI, Optional choice contains `Creating`, `Available`, `Attaching`, `InUse`, `Detaching`, `Deleting`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// An id of the subnet to which the ENI is connected.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputList<Inputs.GetNetworkInterfacesTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.GetNetworkInterfacesTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetNetworkInterfacesTagInputArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// A type of ENI, Optional choice contains `primary`, `secondary`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// An id of the virtual private cloud (VPC) to which the ENI belongs.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The zone ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public GetNetworkInterfacesInvokeArgs()
        {
        }
        public static new GetNetworkInterfacesInvokeArgs Empty => new GetNetworkInterfacesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkInterfacesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? InstanceId;
        public readonly ImmutableArray<string> NetworkInterfaceIds;
        /// <summary>
        /// The name of the ENI.
        /// </summary>
        public readonly string? NetworkInterfaceName;
        /// <summary>
        /// The collection of ENI.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkInterfacesNetworkInterfaceResult> NetworkInterfaces;
        public readonly string? OutputFile;
        public readonly ImmutableArray<string> PrimaryIpAddresses;
        public readonly ImmutableArray<string> PrivateIpAddresses;
        /// <summary>
        /// The ProjectName of the ENI.
        /// </summary>
        public readonly string? ProjectName;
        public readonly string? SecurityGroupId;
        /// <summary>
        /// The status of the ENI.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The id of the subnet to which the ENI is connected.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkInterfacesTagResult> Tags;
        /// <summary>
        /// The total count of ENI query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The type of the ENI.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The id of the virtual private cloud (VPC) to which the ENI belongs.
        /// </summary>
        public readonly string? VpcId;
        /// <summary>
        /// The zone id of the ENI.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private GetNetworkInterfacesResult(
            string id,

            ImmutableArray<string> ids,

            string? instanceId,

            ImmutableArray<string> networkInterfaceIds,

            string? networkInterfaceName,

            ImmutableArray<Outputs.GetNetworkInterfacesNetworkInterfaceResult> networkInterfaces,

            string? outputFile,

            ImmutableArray<string> primaryIpAddresses,

            ImmutableArray<string> privateIpAddresses,

            string? projectName,

            string? securityGroupId,

            string? status,

            string? subnetId,

            ImmutableArray<Outputs.GetNetworkInterfacesTagResult> tags,

            int totalCount,

            string? type,

            string? vpcId,

            string? zoneId)
        {
            Id = id;
            Ids = ids;
            InstanceId = instanceId;
            NetworkInterfaceIds = networkInterfaceIds;
            NetworkInterfaceName = networkInterfaceName;
            NetworkInterfaces = networkInterfaces;
            OutputFile = outputFile;
            PrimaryIpAddresses = primaryIpAddresses;
            PrivateIpAddresses = privateIpAddresses;
            ProjectName = projectName;
            SecurityGroupId = securityGroupId;
            Status = status;
            SubnetId = subnetId;
            Tags = tags;
            TotalCount = totalCount;
            Type = type;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
}
