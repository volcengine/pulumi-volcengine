// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    public static class GetTrafficMirrorFilterRules
    {
        /// <summary>
        /// Use this data source to query detailed information of traffic mirror filter rules
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vpc.GetTrafficMirrorFilterRules.Invoke(new()
        ///     {
        ///         TrafficMirrorFilterIds = new[]
        ///         {
        ///             "tmf-mivro9v5x24g5smt1bsq****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTrafficMirrorFilterRulesResult> InvokeAsync(GetTrafficMirrorFilterRulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrafficMirrorFilterRulesResult>("volcengine:vpc/getTrafficMirrorFilterRules:getTrafficMirrorFilterRules", args ?? new GetTrafficMirrorFilterRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of traffic mirror filter rules
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vpc.GetTrafficMirrorFilterRules.Invoke(new()
        ///     {
        ///         TrafficMirrorFilterIds = new[]
        ///         {
        ///             "tmf-mivro9v5x24g5smt1bsq****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTrafficMirrorFilterRulesResult> Invoke(GetTrafficMirrorFilterRulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrafficMirrorFilterRulesResult>("volcengine:vpc/getTrafficMirrorFilterRules:getTrafficMirrorFilterRules", args ?? new GetTrafficMirrorFilterRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrafficMirrorFilterRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project name of traffic mirror filter.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        [Input("tags")]
        private List<Inputs.GetTrafficMirrorFilterRulesTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.GetTrafficMirrorFilterRulesTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetTrafficMirrorFilterRulesTagArgs>());
            set => _tags = value;
        }

        [Input("trafficMirrorFilterIds")]
        private List<string>? _trafficMirrorFilterIds;

        /// <summary>
        /// A list of traffic mirror filter IDs.
        /// </summary>
        public List<string> TrafficMirrorFilterIds
        {
            get => _trafficMirrorFilterIds ?? (_trafficMirrorFilterIds = new List<string>());
            set => _trafficMirrorFilterIds = value;
        }

        [Input("trafficMirrorFilterNames")]
        private List<string>? _trafficMirrorFilterNames;

        /// <summary>
        /// A list of traffic mirror filter names.
        /// </summary>
        public List<string> TrafficMirrorFilterNames
        {
            get => _trafficMirrorFilterNames ?? (_trafficMirrorFilterNames = new List<string>());
            set => _trafficMirrorFilterNames = value;
        }

        public GetTrafficMirrorFilterRulesArgs()
        {
        }
        public static new GetTrafficMirrorFilterRulesArgs Empty => new GetTrafficMirrorFilterRulesArgs();
    }

    public sealed class GetTrafficMirrorFilterRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project name of traffic mirror filter.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.GetTrafficMirrorFilterRulesTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.GetTrafficMirrorFilterRulesTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetTrafficMirrorFilterRulesTagInputArgs>());
            set => _tags = value;
        }

        [Input("trafficMirrorFilterIds")]
        private InputList<string>? _trafficMirrorFilterIds;

        /// <summary>
        /// A list of traffic mirror filter IDs.
        /// </summary>
        public InputList<string> TrafficMirrorFilterIds
        {
            get => _trafficMirrorFilterIds ?? (_trafficMirrorFilterIds = new InputList<string>());
            set => _trafficMirrorFilterIds = value;
        }

        [Input("trafficMirrorFilterNames")]
        private InputList<string>? _trafficMirrorFilterNames;

        /// <summary>
        /// A list of traffic mirror filter names.
        /// </summary>
        public InputList<string> TrafficMirrorFilterNames
        {
            get => _trafficMirrorFilterNames ?? (_trafficMirrorFilterNames = new InputList<string>());
            set => _trafficMirrorFilterNames = value;
        }

        public GetTrafficMirrorFilterRulesInvokeArgs()
        {
        }
        public static new GetTrafficMirrorFilterRulesInvokeArgs Empty => new GetTrafficMirrorFilterRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrafficMirrorFilterRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        public readonly string? ProjectName;
        public readonly ImmutableArray<Outputs.GetTrafficMirrorFilterRulesTagResult> Tags;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        public readonly ImmutableArray<string> TrafficMirrorFilterIds;
        public readonly ImmutableArray<string> TrafficMirrorFilterNames;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleResult> TrafficMirrorFilterRules;

        [OutputConstructor]
        private GetTrafficMirrorFilterRulesResult(
            string id,

            string? outputFile,

            string? projectName,

            ImmutableArray<Outputs.GetTrafficMirrorFilterRulesTagResult> tags,

            int totalCount,

            ImmutableArray<string> trafficMirrorFilterIds,

            ImmutableArray<string> trafficMirrorFilterNames,

            ImmutableArray<Outputs.GetTrafficMirrorFilterRulesTrafficMirrorFilterRuleResult> trafficMirrorFilterRules)
        {
            Id = id;
            OutputFile = outputFile;
            ProjectName = projectName;
            Tags = tags;
            TotalCount = totalCount;
            TrafficMirrorFilterIds = trafficMirrorFilterIds;
            TrafficMirrorFilterNames = trafficMirrorFilterNames;
            TrafficMirrorFilterRules = trafficMirrorFilterRules;
        }
    }
}
