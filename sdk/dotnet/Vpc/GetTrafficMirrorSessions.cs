// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    public static class GetTrafficMirrorSessions
    {
        /// <summary>
        /// Use this data source to query detailed information of traffic mirror sessions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vpc.GetTrafficMirrorSessions.Invoke(new()
        ///     {
        ///         TrafficMirrorSessionIds = new[]
        ///         {
        ///             "tms-mjpcyvp71r0g5smt1ayf****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTrafficMirrorSessionsResult> InvokeAsync(GetTrafficMirrorSessionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrafficMirrorSessionsResult>("volcengine:vpc/getTrafficMirrorSessions:getTrafficMirrorSessions", args ?? new GetTrafficMirrorSessionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of traffic mirror sessions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vpc.GetTrafficMirrorSessions.Invoke(new()
        ///     {
        ///         TrafficMirrorSessionIds = new[]
        ///         {
        ///             "tms-mjpcyvp71r0g5smt1ayf****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTrafficMirrorSessionsResult> Invoke(GetTrafficMirrorSessionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrafficMirrorSessionsResult>("volcengine:vpc/getTrafficMirrorSessions:getTrafficMirrorSessions", args ?? new GetTrafficMirrorSessionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrafficMirrorSessionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// The ID of network interface.
        /// </summary>
        [Input("networkInterfaceId")]
        public string? NetworkInterfaceId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The packet length of traffic mirror session.
        /// </summary>
        [Input("packetLength")]
        public int? PacketLength { get; set; }

        /// <summary>
        /// The priority of traffic mirror session.
        /// </summary>
        [Input("priority")]
        public int? Priority { get; set; }

        /// <summary>
        /// The project name of traffic mirror session.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        [Input("tags")]
        private List<Inputs.GetTrafficMirrorSessionsTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.GetTrafficMirrorSessionsTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetTrafficMirrorSessionsTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of traffic mirror filter.
        /// </summary>
        [Input("trafficMirrorFilterId")]
        public string? TrafficMirrorFilterId { get; set; }

        [Input("trafficMirrorSessionIds")]
        private List<string>? _trafficMirrorSessionIds;

        /// <summary>
        /// A list of traffic mirror session IDs.
        /// </summary>
        public List<string> TrafficMirrorSessionIds
        {
            get => _trafficMirrorSessionIds ?? (_trafficMirrorSessionIds = new List<string>());
            set => _trafficMirrorSessionIds = value;
        }

        [Input("trafficMirrorSessionNames")]
        private List<string>? _trafficMirrorSessionNames;

        /// <summary>
        /// A list of traffic mirror session names.
        /// </summary>
        public List<string> TrafficMirrorSessionNames
        {
            get => _trafficMirrorSessionNames ?? (_trafficMirrorSessionNames = new List<string>());
            set => _trafficMirrorSessionNames = value;
        }

        /// <summary>
        /// The ID of traffic mirror target.
        /// </summary>
        [Input("trafficMirrorTargetId")]
        public string? TrafficMirrorTargetId { get; set; }

        /// <summary>
        /// The ID of virtual network.
        /// </summary>
        [Input("virtualNetworkId")]
        public int? VirtualNetworkId { get; set; }

        public GetTrafficMirrorSessionsArgs()
        {
        }
        public static new GetTrafficMirrorSessionsArgs Empty => new GetTrafficMirrorSessionsArgs();
    }

    public sealed class GetTrafficMirrorSessionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// The ID of network interface.
        /// </summary>
        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The packet length of traffic mirror session.
        /// </summary>
        [Input("packetLength")]
        public Input<int>? PacketLength { get; set; }

        /// <summary>
        /// The priority of traffic mirror session.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The project name of traffic mirror session.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.GetTrafficMirrorSessionsTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.GetTrafficMirrorSessionsTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetTrafficMirrorSessionsTagInputArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of traffic mirror filter.
        /// </summary>
        [Input("trafficMirrorFilterId")]
        public Input<string>? TrafficMirrorFilterId { get; set; }

        [Input("trafficMirrorSessionIds")]
        private InputList<string>? _trafficMirrorSessionIds;

        /// <summary>
        /// A list of traffic mirror session IDs.
        /// </summary>
        public InputList<string> TrafficMirrorSessionIds
        {
            get => _trafficMirrorSessionIds ?? (_trafficMirrorSessionIds = new InputList<string>());
            set => _trafficMirrorSessionIds = value;
        }

        [Input("trafficMirrorSessionNames")]
        private InputList<string>? _trafficMirrorSessionNames;

        /// <summary>
        /// A list of traffic mirror session names.
        /// </summary>
        public InputList<string> TrafficMirrorSessionNames
        {
            get => _trafficMirrorSessionNames ?? (_trafficMirrorSessionNames = new InputList<string>());
            set => _trafficMirrorSessionNames = value;
        }

        /// <summary>
        /// The ID of traffic mirror target.
        /// </summary>
        [Input("trafficMirrorTargetId")]
        public Input<string>? TrafficMirrorTargetId { get; set; }

        /// <summary>
        /// The ID of virtual network.
        /// </summary>
        [Input("virtualNetworkId")]
        public Input<int>? VirtualNetworkId { get; set; }

        public GetTrafficMirrorSessionsInvokeArgs()
        {
        }
        public static new GetTrafficMirrorSessionsInvokeArgs Empty => new GetTrafficMirrorSessionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrafficMirrorSessionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? NetworkInterfaceId;
        public readonly string? OutputFile;
        /// <summary>
        /// The packet length of traffic mirror session.
        /// </summary>
        public readonly int? PacketLength;
        /// <summary>
        /// The priority of traffic mirror session.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// The project name of traffic mirror session.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrafficMirrorSessionsTagResult> Tags;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The ID of traffic mirror filter.
        /// </summary>
        public readonly string? TrafficMirrorFilterId;
        public readonly ImmutableArray<string> TrafficMirrorSessionIds;
        public readonly ImmutableArray<string> TrafficMirrorSessionNames;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrafficMirrorSessionsTrafficMirrorSessionResult> TrafficMirrorSessions;
        /// <summary>
        /// The ID of traffic mirror target.
        /// </summary>
        public readonly string? TrafficMirrorTargetId;
        /// <summary>
        /// The ID of virtual network.
        /// </summary>
        public readonly int? VirtualNetworkId;

        [OutputConstructor]
        private GetTrafficMirrorSessionsResult(
            string id,

            string? nameRegex,

            string? networkInterfaceId,

            string? outputFile,

            int? packetLength,

            int? priority,

            string? projectName,

            ImmutableArray<Outputs.GetTrafficMirrorSessionsTagResult> tags,

            int totalCount,

            string? trafficMirrorFilterId,

            ImmutableArray<string> trafficMirrorSessionIds,

            ImmutableArray<string> trafficMirrorSessionNames,

            ImmutableArray<Outputs.GetTrafficMirrorSessionsTrafficMirrorSessionResult> trafficMirrorSessions,

            string? trafficMirrorTargetId,

            int? virtualNetworkId)
        {
            Id = id;
            NameRegex = nameRegex;
            NetworkInterfaceId = networkInterfaceId;
            OutputFile = outputFile;
            PacketLength = packetLength;
            Priority = priority;
            ProjectName = projectName;
            Tags = tags;
            TotalCount = totalCount;
            TrafficMirrorFilterId = trafficMirrorFilterId;
            TrafficMirrorSessionIds = trafficMirrorSessionIds;
            TrafficMirrorSessionNames = trafficMirrorSessionNames;
            TrafficMirrorSessions = trafficMirrorSessions;
            TrafficMirrorTargetId = trafficMirrorTargetId;
            VirtualNetworkId = virtualNetworkId;
        }
    }
}
