// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    /// <summary>
    /// Provides a resource to manage ha vip
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooHaVip = new Volcengine.Vpc.HaVip("fooHaVip", new()
    ///     {
    ///         HaVipName = "acc-test-ha-vip",
    ///         Description = "acc-test",
    ///         SubnetId = fooSubnet.Id,
    ///     });
    /// 
    ///     //  ip_address = "172.16.0.5"
    ///     var fooAddress = new Volcengine.Eip.Address("fooAddress", new()
    ///     {
    ///         BillingType = "PostPaidByTraffic",
    ///     });
    /// 
    ///     var fooAssociate = new Volcengine.Eip.Associate("fooAssociate", new()
    ///     {
    ///         AllocationId = fooAddress.Id,
    ///         InstanceId = fooHaVip.Id,
    ///         InstanceType = "HaVip",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// HaVip can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:vpc/haVip:HaVip default havip-2byzv8icq1b7k2dx0eegb****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vpc/haVip:HaVip")]
    public partial class HaVip : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The associated eip address of the Ha Vip.
        /// </summary>
        [Output("associatedEipAddress")]
        public Output<string> AssociatedEipAddress { get; private set; } = null!;

        /// <summary>
        /// The associated eip id of the Ha Vip.
        /// </summary>
        [Output("associatedEipId")]
        public Output<string> AssociatedEipId { get; private set; } = null!;

        /// <summary>
        /// The associated instance ids of the Ha Vip.
        /// </summary>
        [Output("associatedInstanceIds")]
        public Output<ImmutableArray<string>> AssociatedInstanceIds { get; private set; } = null!;

        /// <summary>
        /// The associated instance type of the Ha Vip.
        /// </summary>
        [Output("associatedInstanceType")]
        public Output<string> AssociatedInstanceType { get; private set; } = null!;

        /// <summary>
        /// The create time of the Ha Vip.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The description of the Ha Vip.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the Ha Vip.
        /// </summary>
        [Output("haVipName")]
        public Output<string> HaVipName { get; private set; } = null!;

        /// <summary>
        /// The ip address of the Ha Vip.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The master instance id of the Ha Vip.
        /// </summary>
        [Output("masterInstanceId")]
        public Output<string> MasterInstanceId { get; private set; } = null!;

        /// <summary>
        /// The project name of the Ha Vip.
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The status of the Ha Vip.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The subnet id of the Ha Vip.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// The update time of the Ha Vip.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The vpc id of the Ha Vip.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a HaVip resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HaVip(string name, HaVipArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vpc/haVip:HaVip", name, args ?? new HaVipArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HaVip(string name, Input<string> id, HaVipState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vpc/haVip:HaVip", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HaVip resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HaVip Get(string name, Input<string> id, HaVipState? state = null, CustomResourceOptions? options = null)
        {
            return new HaVip(name, id, state, options);
        }
    }

    public sealed class HaVipArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Ha Vip.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Ha Vip.
        /// </summary>
        [Input("haVipName")]
        public Input<string>? HaVipName { get; set; }

        /// <summary>
        /// The ip address of the Ha Vip.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The subnet id of the Ha Vip.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public HaVipArgs()
        {
        }
        public static new HaVipArgs Empty => new HaVipArgs();
    }

    public sealed class HaVipState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The associated eip address of the Ha Vip.
        /// </summary>
        [Input("associatedEipAddress")]
        public Input<string>? AssociatedEipAddress { get; set; }

        /// <summary>
        /// The associated eip id of the Ha Vip.
        /// </summary>
        [Input("associatedEipId")]
        public Input<string>? AssociatedEipId { get; set; }

        [Input("associatedInstanceIds")]
        private InputList<string>? _associatedInstanceIds;

        /// <summary>
        /// The associated instance ids of the Ha Vip.
        /// </summary>
        public InputList<string> AssociatedInstanceIds
        {
            get => _associatedInstanceIds ?? (_associatedInstanceIds = new InputList<string>());
            set => _associatedInstanceIds = value;
        }

        /// <summary>
        /// The associated instance type of the Ha Vip.
        /// </summary>
        [Input("associatedInstanceType")]
        public Input<string>? AssociatedInstanceType { get; set; }

        /// <summary>
        /// The create time of the Ha Vip.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The description of the Ha Vip.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Ha Vip.
        /// </summary>
        [Input("haVipName")]
        public Input<string>? HaVipName { get; set; }

        /// <summary>
        /// The ip address of the Ha Vip.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The master instance id of the Ha Vip.
        /// </summary>
        [Input("masterInstanceId")]
        public Input<string>? MasterInstanceId { get; set; }

        /// <summary>
        /// The project name of the Ha Vip.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The status of the Ha Vip.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The subnet id of the Ha Vip.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The update time of the Ha Vip.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The vpc id of the Ha Vip.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public HaVipState()
        {
        }
        public static new HaVipState Empty => new HaVipState();
    }
}
