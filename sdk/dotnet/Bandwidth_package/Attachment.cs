// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Bandwidth_package
{
    /// <summary>
    /// Provides a resource to manage bandwidth package attachment
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooAddress = new Volcengine.Eip.Address("fooAddress", new()
    ///     {
    ///         BillingType = "PostPaidByBandwidth",
    ///         Bandwidth = 1,
    ///         Isp = "BGP",
    ///         Description = "acc-test",
    ///         ProjectName = "default",
    ///     });
    /// 
    ///     var ipv4BandwidthPackage = new Volcengine.Bandwidth_package.BandwidthPackage("ipv4BandwidthPackage", new()
    ///     {
    ///         BandwidthPackageName = "acc-test-bp",
    ///         BillingType = "PostPaidByBandwidth",
    ///         Isp = "BGP",
    ///         Description = "acc-test",
    ///         Bandwidth = 2,
    ///         Protocol = "IPv4",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Bandwidth_package.Inputs.BandwidthPackageTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var ipv4Attachment = new Volcengine.Bandwidth_package.Attachment("ipv4Attachment", new()
    ///     {
    ///         AllocationId = fooAddress.Id,
    ///         BandwidthPackageId = ipv4BandwidthPackage.Id,
    ///     });
    /// 
    ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
    /// 
    ///     var fooImages = Volcengine.Ecs.Images.Invoke(new()
    ///     {
    ///         OsType = "Linux",
    ///         Visibility = "public",
    ///         InstanceTypeId = "ecs.g1.large",
    ///     });
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///         EnableIpv6 = true,
    ///     });
    /// 
    ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///         Ipv6CidrBlock = 1,
    ///     });
    /// 
    ///     var fooSecurityGroup = new Volcengine.Vpc.SecurityGroup("fooSecurityGroup", new()
    ///     {
    ///         VpcId = fooVpc.Id,
    ///         SecurityGroupName = "acc-test-security-group",
    ///     });
    /// 
    ///     var fooIpv6Gateway = new Volcengine.Vpc.Ipv6Gateway("fooIpv6Gateway", new()
    ///     {
    ///         VpcId = fooVpc.Id,
    ///         Description = "test",
    ///     });
    /// 
    ///     var fooInstance = new Volcengine.Ecs.Instance("fooInstance", new()
    ///     {
    ///         ImageId = fooImages.Apply(imagesResult =&gt; imagesResult.Images[0]?.ImageId),
    ///         InstanceType = "ecs.g1.large",
    ///         InstanceName = "acc-test-ecs-name",
    ///         Password = "93f0cb0614Aab12",
    ///         InstanceChargeType = "PostPaid",
    ///         SystemVolumeType = "ESSD_PL0",
    ///         SystemVolumeSize = 40,
    ///         SubnetId = fooSubnet.Id,
    ///         SecurityGroupIds = new[]
    ///         {
    ///             fooSecurityGroup.Id,
    ///         },
    ///         Ipv6AddressCount = 1,
    ///     });
    /// 
    ///     var fooIpv6Addresses = Volcengine.Vpc.Ipv6Addresses.Invoke(new()
    ///     {
    ///         AssociatedInstanceId = fooInstance.Id,
    ///     });
    /// 
    ///     var fooIpv6AddressBandwidth = new Volcengine.Vpc.Ipv6AddressBandwidth("fooIpv6AddressBandwidth", new()
    ///     {
    ///         Ipv6Address = fooIpv6Addresses.Apply(ipv6AddressesResult =&gt; ipv6AddressesResult.Ipv6Addresses[0]?.Ipv6Address),
    ///         BillingType = "PostPaidByBandwidth",
    ///         Bandwidth = 5,
    ///     });
    /// 
    ///     var ipv6 = new Volcengine.Bandwidth_package.BandwidthPackage("ipv6", new()
    ///     {
    ///         BandwidthPackageName = "acc-test-bp",
    ///         BillingType = "PostPaidByBandwidth",
    ///         Isp = "BGP",
    ///         Description = "acc-test",
    ///         Bandwidth = 2,
    ///         Protocol = "IPv6",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Bandwidth_package.Inputs.BandwidthPackageTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooAttachment = new Volcengine.Bandwidth_package.Attachment("fooAttachment", new()
    ///     {
    ///         AllocationId = fooIpv6AddressBandwidth.Id,
    ///         BandwidthPackageId = ipv6.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BandwidthPackageAttachment can be imported using the bandwidth package id and eip id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:bandwidth_package/attachment:Attachment default BandwidthPackageId:EipId
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:bandwidth_package/attachment:Attachment")]
    public partial class Attachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the public IP or IPv6 public bandwidth to be added to the shared bandwidth package instance.
        /// </summary>
        [Output("allocationId")]
        public Output<string> AllocationId { get; private set; } = null!;

        /// <summary>
        /// The bandwidth package id.
        /// </summary>
        [Output("bandwidthPackageId")]
        public Output<string> BandwidthPackageId { get; private set; } = null!;


        /// <summary>
        /// Create a Attachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Attachment(string name, AttachmentArgs args, CustomResourceOptions? options = null)
            : base("volcengine:bandwidth_package/attachment:Attachment", name, args ?? new AttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Attachment(string name, Input<string> id, AttachmentState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:bandwidth_package/attachment:Attachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Attachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Attachment Get(string name, Input<string> id, AttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new Attachment(name, id, state, options);
        }
    }

    public sealed class AttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the public IP or IPv6 public bandwidth to be added to the shared bandwidth package instance.
        /// </summary>
        [Input("allocationId", required: true)]
        public Input<string> AllocationId { get; set; } = null!;

        /// <summary>
        /// The bandwidth package id.
        /// </summary>
        [Input("bandwidthPackageId", required: true)]
        public Input<string> BandwidthPackageId { get; set; } = null!;

        public AttachmentArgs()
        {
        }
        public static new AttachmentArgs Empty => new AttachmentArgs();
    }

    public sealed class AttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the public IP or IPv6 public bandwidth to be added to the shared bandwidth package instance.
        /// </summary>
        [Input("allocationId")]
        public Input<string>? AllocationId { get; set; }

        /// <summary>
        /// The bandwidth package id.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        public AttachmentState()
        {
        }
        public static new AttachmentState Empty => new AttachmentState();
    }
}
