// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Bandwidth_package
{
    public static class BandwidthPackages
    {
        /// <summary>
        /// Use this data source to query detailed information of bandwidth packages
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooBandwidthPackage = new List&lt;Volcengine.Bandwidth_package.BandwidthPackage&gt;();
        ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
        ///     {
        ///         var range = new { Value = rangeIndex };
        ///         fooBandwidthPackage.Add(new Volcengine.Bandwidth_package.BandwidthPackage($"fooBandwidthPackage-{range.Value}", new()
        ///         {
        ///             BandwidthPackageName = "acc-test-bp",
        ///             BillingType = "PostPaidByBandwidth",
        ///             Isp = "BGP",
        ///             Description = "acc-test",
        ///             Bandwidth = 2,
        ///             Protocol = "IPv4",
        ///             SecurityProtectionTypes = new[]
        ///             {
        ///                 "AntiDDoS_Enhanced",
        ///             },
        ///             Tags = new[]
        ///             {
        ///                 new Volcengine.Bandwidth_package.Inputs.BandwidthPackageTagArgs
        ///                 {
        ///                     Key = "k1",
        ///                     Value = "v1",
        ///                 },
        ///             },
        ///         }));
        ///     }
        ///     var fooBandwidthPackages = Volcengine.Bandwidth_package.BandwidthPackages.Invoke(new()
        ///     {
        ///         Ids = fooBandwidthPackage.Select(__item =&gt; __item.Id).ToList(),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<BandwidthPackagesResult> InvokeAsync(BandwidthPackagesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<BandwidthPackagesResult>("volcengine:bandwidth_package/bandwidthPackages:BandwidthPackages", args ?? new BandwidthPackagesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of bandwidth packages
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooBandwidthPackage = new List&lt;Volcengine.Bandwidth_package.BandwidthPackage&gt;();
        ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
        ///     {
        ///         var range = new { Value = rangeIndex };
        ///         fooBandwidthPackage.Add(new Volcengine.Bandwidth_package.BandwidthPackage($"fooBandwidthPackage-{range.Value}", new()
        ///         {
        ///             BandwidthPackageName = "acc-test-bp",
        ///             BillingType = "PostPaidByBandwidth",
        ///             Isp = "BGP",
        ///             Description = "acc-test",
        ///             Bandwidth = 2,
        ///             Protocol = "IPv4",
        ///             SecurityProtectionTypes = new[]
        ///             {
        ///                 "AntiDDoS_Enhanced",
        ///             },
        ///             Tags = new[]
        ///             {
        ///                 new Volcengine.Bandwidth_package.Inputs.BandwidthPackageTagArgs
        ///                 {
        ///                     Key = "k1",
        ///                     Value = "v1",
        ///                 },
        ///             },
        ///         }));
        ///     }
        ///     var fooBandwidthPackages = Volcengine.Bandwidth_package.BandwidthPackages.Invoke(new()
        ///     {
        ///         Ids = fooBandwidthPackage.Select(__item =&gt; __item.Id).ToList(),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<BandwidthPackagesResult> Invoke(BandwidthPackagesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<BandwidthPackagesResult>("volcengine:bandwidth_package/bandwidthPackages:BandwidthPackages", args ?? new BandwidthPackagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class BandwidthPackagesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Shared bandwidth package name to be queried.
        /// </summary>
        [Input("bandwidthPackageName")]
        public string? BandwidthPackageName { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// Shared bandwidth package instance ID to be queried.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// Line types for shared bandwidth packages.
        /// </summary>
        [Input("isp")]
        public string? Isp { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project name of the bandwidth package to be queried.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        /// <summary>
        /// The IP protocol values for shared bandwidth packages are as follows: `IPv4`: IPv4 protocol. `IPv6`: IPv6 protocol.
        /// </summary>
        [Input("protocol")]
        public string? Protocol { get; set; }

        /// <summary>
        /// Security protection types for shared bandwidth packages.
        /// </summary>
        [Input("securityProtectionEnabled")]
        public bool? SecurityProtectionEnabled { get; set; }

        [Input("tagFilters")]
        private List<Inputs.BandwidthPackagesTagFilterArgs>? _tagFilters;

        /// <summary>
        /// A list of tags.
        /// </summary>
        public List<Inputs.BandwidthPackagesTagFilterArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new List<Inputs.BandwidthPackagesTagFilterArgs>());
            set => _tagFilters = value;
        }

        public BandwidthPackagesArgs()
        {
        }
        public static new BandwidthPackagesArgs Empty => new BandwidthPackagesArgs();
    }

    public sealed class BandwidthPackagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Shared bandwidth package name to be queried.
        /// </summary>
        [Input("bandwidthPackageName")]
        public Input<string>? BandwidthPackageName { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// Shared bandwidth package instance ID to be queried.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// Line types for shared bandwidth packages.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project name of the bandwidth package to be queried.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The IP protocol values for shared bandwidth packages are as follows: `IPv4`: IPv4 protocol. `IPv6`: IPv6 protocol.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Security protection types for shared bandwidth packages.
        /// </summary>
        [Input("securityProtectionEnabled")]
        public Input<bool>? SecurityProtectionEnabled { get; set; }

        [Input("tagFilters")]
        private InputList<Inputs.BandwidthPackagesTagFilterInputArgs>? _tagFilters;

        /// <summary>
        /// A list of tags.
        /// </summary>
        public InputList<Inputs.BandwidthPackagesTagFilterInputArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.BandwidthPackagesTagFilterInputArgs>());
            set => _tagFilters = value;
        }

        public BandwidthPackagesInvokeArgs()
        {
        }
        public static new BandwidthPackagesInvokeArgs Empty => new BandwidthPackagesInvokeArgs();
    }


    [OutputType]
    public sealed class BandwidthPackagesResult
    {
        /// <summary>
        /// The name of the bandwidth package.
        /// </summary>
        public readonly string? BandwidthPackageName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The line type.
        /// </summary>
        public readonly string? Isp;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.BandwidthPackagesPackageResult> Packages;
        /// <summary>
        /// The project name of the bandwidth package.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// The protocol of the bandwidth package.
        /// </summary>
        public readonly string? Protocol;
        public readonly bool? SecurityProtectionEnabled;
        public readonly ImmutableArray<Outputs.BandwidthPackagesTagFilterResult> TagFilters;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private BandwidthPackagesResult(
            string? bandwidthPackageName,

            string id,

            ImmutableArray<string> ids,

            string? isp,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.BandwidthPackagesPackageResult> packages,

            string? projectName,

            string? protocol,

            bool? securityProtectionEnabled,

            ImmutableArray<Outputs.BandwidthPackagesTagFilterResult> tagFilters,

            int totalCount)
        {
            BandwidthPackageName = bandwidthPackageName;
            Id = id;
            Ids = ids;
            Isp = isp;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Packages = packages;
            ProjectName = projectName;
            Protocol = protocol;
            SecurityProtectionEnabled = securityProtectionEnabled;
            TagFilters = tagFilters;
            TotalCount = totalCount;
        }
    }
}
