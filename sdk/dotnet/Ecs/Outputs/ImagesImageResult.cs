// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Ecs.Outputs
{

    [OutputType]
    public sealed class ImagesImageResult
    {
        /// <summary>
        /// The architecture of Image.
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// The boot mode of Image.
        /// </summary>
        public readonly string BootMode;
        /// <summary>
        /// The create time of Image.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The description of Image.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of Image.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// The name of Image.
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// Whether the Image support cloud-init.
        /// </summary>
        public readonly bool IsSupportCloudInit;
        /// <summary>
        /// The name of Image operating system.
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// The operating system type of Image.
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// The platform of Image.
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// The platform version of Image.
        /// </summary>
        public readonly string PlatformVersion;
        /// <summary>
        /// The share mode of Image.
        /// </summary>
        public readonly string ShareStatus;
        /// <summary>
        /// The size(GiB) of Image.
        /// </summary>
        public readonly int Size;
        /// <summary>
        /// A list of Image status, the value can be `available` or `creating` or `error`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImagesImageTagResult> Tags;
        /// <summary>
        /// The update time of Image.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// The visibility of Image.
        /// </summary>
        public readonly string Visibility;

        [OutputConstructor]
        private ImagesImageResult(
            string architecture,

            string bootMode,

            string createdAt,

            string description,

            string imageId,

            string imageName,

            bool isSupportCloudInit,

            string osName,

            string osType,

            string platform,

            string platformVersion,

            string shareStatus,

            int size,

            string status,

            ImmutableArray<Outputs.ImagesImageTagResult> tags,

            string updatedAt,

            string visibility)
        {
            Architecture = architecture;
            BootMode = bootMode;
            CreatedAt = createdAt;
            Description = description;
            ImageId = imageId;
            ImageName = imageName;
            IsSupportCloudInit = isSupportCloudInit;
            OsName = osName;
            OsType = osType;
            Platform = platform;
            PlatformVersion = platformVersion;
            ShareStatus = shareStatus;
            Size = size;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
            Visibility = visibility;
        }
    }
}
