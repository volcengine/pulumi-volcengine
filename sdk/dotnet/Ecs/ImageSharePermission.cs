// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Ecs
{
    /// <summary>
    /// Provides a resource to manage image share permission
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooImage = new Volcengine.Ecs.Image("fooImage", new()
    ///     {
    ///         ImageName = "acc-test-image",
    ///         Description = "acc-test",
    ///         InstanceId = "i-ydi2q1s7wgqc6ild****",
    ///         CreateWholeImage = false,
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Ecs.Inputs.ImageTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooImageSharePermission = new Volcengine.Ecs.ImageSharePermission("fooImageSharePermission", new()
    ///     {
    ///         ImageId = fooImage.Id,
    ///         AccountId = "21000*****",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ImageSharePermission can be imported using the image_id:account_id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:ecs/imageSharePermission:ImageSharePermission default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:ecs/imageSharePermission:ImageSharePermission")]
    public partial class ImageSharePermission : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The share account id of the image.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The id of the image.
        /// </summary>
        [Output("imageId")]
        public Output<string> ImageId { get; private set; } = null!;


        /// <summary>
        /// Create a ImageSharePermission resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImageSharePermission(string name, ImageSharePermissionArgs args, CustomResourceOptions? options = null)
            : base("volcengine:ecs/imageSharePermission:ImageSharePermission", name, args ?? new ImageSharePermissionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImageSharePermission(string name, Input<string> id, ImageSharePermissionState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:ecs/imageSharePermission:ImageSharePermission", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImageSharePermission resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImageSharePermission Get(string name, Input<string> id, ImageSharePermissionState? state = null, CustomResourceOptions? options = null)
        {
            return new ImageSharePermission(name, id, state, options);
        }
    }

    public sealed class ImageSharePermissionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The share account id of the image.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The id of the image.
        /// </summary>
        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        public ImageSharePermissionArgs()
        {
        }
        public static new ImageSharePermissionArgs Empty => new ImageSharePermissionArgs();
    }

    public sealed class ImageSharePermissionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The share account id of the image.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The id of the image.
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        public ImageSharePermissionState()
        {
        }
        public static new ImageSharePermissionState Empty => new ImageSharePermissionState();
    }
}
