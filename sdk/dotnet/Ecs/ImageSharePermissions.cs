// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Ecs
{
    [Obsolete(@"volcengine.ecs.ImageSharePermissions has been deprecated in favor of volcengine.ecs.getImageSharePermissions")]
    public static class ImageSharePermissions
    {
        /// <summary>
        /// Use this data source to query detailed information of image share permissions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Ecs.GetImageSharePermissions.Invoke(new()
        ///     {
        ///         ImageId = "image-ydi2wozhozfu03z2****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<ImageSharePermissionsResult> InvokeAsync(ImageSharePermissionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ImageSharePermissionsResult>("volcengine:ecs/imageSharePermissions:ImageSharePermissions", args ?? new ImageSharePermissionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of image share permissions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Ecs.GetImageSharePermissions.Invoke(new()
        ///     {
        ///         ImageId = "image-ydi2wozhozfu03z2****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<ImageSharePermissionsResult> Invoke(ImageSharePermissionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ImageSharePermissionsResult>("volcengine:ecs/imageSharePermissions:ImageSharePermissions", args ?? new ImageSharePermissionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ImageSharePermissionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the image.
        /// </summary>
        [Input("imageId", required: true)]
        public string ImageId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public ImageSharePermissionsArgs()
        {
        }
        public static new ImageSharePermissionsArgs Empty => new ImageSharePermissionsArgs();
    }

    public sealed class ImageSharePermissionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the image.
        /// </summary>
        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public ImageSharePermissionsInvokeArgs()
        {
        }
        public static new ImageSharePermissionsInvokeArgs Empty => new ImageSharePermissionsInvokeArgs();
    }


    [OutputType]
    public sealed class ImageSharePermissionsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImageSharePermissionsAccountResult> Accounts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ImageId;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private ImageSharePermissionsResult(
            ImmutableArray<Outputs.ImageSharePermissionsAccountResult> accounts,

            string id,

            string imageId,

            string? outputFile,

            int totalCount)
        {
            Accounts = accounts;
            Id = id;
            ImageId = imageId;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
