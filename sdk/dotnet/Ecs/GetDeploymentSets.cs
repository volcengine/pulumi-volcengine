// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Ecs
{
    public static class GetDeploymentSets
    {
        /// <summary>
        /// Use this data source to query detailed information of ecs deployment sets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooDeploymentSet = new List&lt;Volcengine.Ecs.DeploymentSet&gt;();
        ///     for (var rangeIndex = 0; rangeIndex &lt; 3; rangeIndex++)
        ///     {
        ///         var range = new { Value = rangeIndex };
        ///         fooDeploymentSet.Add(new Volcengine.Ecs.DeploymentSet($"fooDeploymentSet-{range.Value}", new()
        ///         {
        ///             DeploymentSetName = $"acc-test-ecs-ds-{range.Value}",
        ///             Description = "acc-test",
        ///             Granularity = "switch",
        ///             Strategy = "Availability",
        ///         }));
        ///     }
        ///     var fooDeploymentSets = Volcengine.Ecs.GetDeploymentSets.Invoke(new()
        ///     {
        ///         Granularity = "switch",
        ///         Ids = fooDeploymentSet.Select(__item =&gt; __item.Id).ToList(),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDeploymentSetsResult> InvokeAsync(GetDeploymentSetsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentSetsResult>("volcengine:ecs/getDeploymentSets:getDeploymentSets", args ?? new GetDeploymentSetsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of ecs deployment sets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooDeploymentSet = new List&lt;Volcengine.Ecs.DeploymentSet&gt;();
        ///     for (var rangeIndex = 0; rangeIndex &lt; 3; rangeIndex++)
        ///     {
        ///         var range = new { Value = rangeIndex };
        ///         fooDeploymentSet.Add(new Volcengine.Ecs.DeploymentSet($"fooDeploymentSet-{range.Value}", new()
        ///         {
        ///             DeploymentSetName = $"acc-test-ecs-ds-{range.Value}",
        ///             Description = "acc-test",
        ///             Granularity = "switch",
        ///             Strategy = "Availability",
        ///         }));
        ///     }
        ///     var fooDeploymentSets = Volcengine.Ecs.GetDeploymentSets.Invoke(new()
        ///     {
        ///         Granularity = "switch",
        ///         Ids = fooDeploymentSet.Select(__item =&gt; __item.Id).ToList(),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDeploymentSetsResult> Invoke(GetDeploymentSetsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentSetsResult>("volcengine:ecs/getDeploymentSets:getDeploymentSets", args ?? new GetDeploymentSetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentSetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The granularity of ECS DeploymentSet.Valid values: switch, host, rack.
        /// </summary>
        [Input("granularity")]
        public string? Granularity { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of ECS DeploymentSet IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A Name Regex of ECS DeploymentSet.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetDeploymentSetsArgs()
        {
        }
        public static new GetDeploymentSetsArgs Empty => new GetDeploymentSetsArgs();
    }

    public sealed class GetDeploymentSetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The granularity of ECS DeploymentSet.Valid values: switch, host, rack.
        /// </summary>
        [Input("granularity")]
        public Input<string>? Granularity { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of ECS DeploymentSet IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A Name Regex of ECS DeploymentSet.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetDeploymentSetsInvokeArgs()
        {
        }
        public static new GetDeploymentSetsInvokeArgs Empty => new GetDeploymentSetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentSetsResult
    {
        /// <summary>
        /// The collection of ECS DeploymentSet query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDeploymentSetsDeploymentSetResult> DeploymentSets;
        /// <summary>
        /// The granularity of ECS DeploymentSet.
        /// </summary>
        public readonly string? Granularity;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of ECS DeploymentSet query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetDeploymentSetsResult(
            ImmutableArray<Outputs.GetDeploymentSetsDeploymentSetResult> deploymentSets,

            string? granularity,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            int totalCount)
        {
            DeploymentSets = deploymentSets;
            Granularity = granularity;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
