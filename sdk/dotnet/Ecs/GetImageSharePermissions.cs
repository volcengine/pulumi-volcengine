// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Ecs
{
    public static class GetImageSharePermissions
    {
        /// <summary>
        /// Use this data source to query detailed information of image share permissions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Ecs.GetImageSharePermissions.Invoke(new()
        ///     {
        ///         ImageId = "image-ydi2wozhozfu03z2****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetImageSharePermissionsResult> InvokeAsync(GetImageSharePermissionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageSharePermissionsResult>("volcengine:ecs/getImageSharePermissions:getImageSharePermissions", args ?? new GetImageSharePermissionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of image share permissions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Ecs.GetImageSharePermissions.Invoke(new()
        ///     {
        ///         ImageId = "image-ydi2wozhozfu03z2****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetImageSharePermissionsResult> Invoke(GetImageSharePermissionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageSharePermissionsResult>("volcengine:ecs/getImageSharePermissions:getImageSharePermissions", args ?? new GetImageSharePermissionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageSharePermissionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the image.
        /// </summary>
        [Input("imageId", required: true)]
        public string ImageId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetImageSharePermissionsArgs()
        {
        }
        public static new GetImageSharePermissionsArgs Empty => new GetImageSharePermissionsArgs();
    }

    public sealed class GetImageSharePermissionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the image.
        /// </summary>
        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetImageSharePermissionsInvokeArgs()
        {
        }
        public static new GetImageSharePermissionsInvokeArgs Empty => new GetImageSharePermissionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetImageSharePermissionsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageSharePermissionsAccountResult> Accounts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ImageId;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetImageSharePermissionsResult(
            ImmutableArray<Outputs.GetImageSharePermissionsAccountResult> accounts,

            string id,

            string imageId,

            string? outputFile,

            int totalCount)
        {
            Accounts = accounts;
            Id = id;
            ImageId = imageId;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
