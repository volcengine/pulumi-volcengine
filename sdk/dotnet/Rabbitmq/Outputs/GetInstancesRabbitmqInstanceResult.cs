// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rabbitmq.Outputs
{

    [OutputType]
    public sealed class GetInstancesRabbitmqInstanceResult
    {
        /// <summary>
        /// The account id of the rabbitmq instance.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Whether enable the public network parsing function of the rabbitmq instance.
        /// </summary>
        public readonly bool ApplyPrivateDnsToPublic;
        /// <summary>
        /// The type of the rabbitmq instance.
        /// </summary>
        public readonly string ArchType;
        /// <summary>
        /// The charge detail information of the rabbitmq instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesRabbitmqInstanceChargeDetailResult> ChargeDetails;
        /// <summary>
        /// The compute specification of the rabbitmq instance.
        /// </summary>
        public readonly string ComputeSpec;
        /// <summary>
        /// The create time of the rabbitmq instance.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The eip id of the rabbitmq instance.
        /// </summary>
        public readonly string EipId;
        /// <summary>
        /// The endpoint info of the rabbitmq instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesRabbitmqInstanceEndpointResult> Endpoints;
        /// <summary>
        /// The id of the rabbitmq instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The WebUI admin user name of the rabbitmq instance.
        /// </summary>
        public readonly string InitUserName;
        /// <summary>
        /// The description of the rabbitmq instance.
        /// </summary>
        public readonly string InstanceDescription;
        /// <summary>
        /// The id of rabbitmq instance. This field supports fuzzy query.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// The name of rabbitmq instance. This field supports fuzzy query.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// The status of rabbitmq instance.
        /// </summary>
        public readonly string InstanceStatus;
        /// <summary>
        /// The project name of rabbitmq instance.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The region description of the rabbitmq instance.
        /// </summary>
        public readonly string RegionDescription;
        /// <summary>
        /// The region id of the rabbitmq instance.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// The total storage space of the rabbitmq instance. Unit: GiB.
        /// </summary>
        public readonly int StorageSpace;
        /// <summary>
        /// The subnet id of the rabbitmq instance.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesRabbitmqInstanceTagResult> Tags;
        /// <summary>
        /// The used storage space of the rabbitmq instance. Unit: GiB.
        /// </summary>
        public readonly int UsedStorageSpace;
        /// <summary>
        /// The version of the rabbitmq instance.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// The vpc id of rabbitmq instance. This field supports fuzzy query.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The zone description of the rabbitmq instance.
        /// </summary>
        public readonly string ZoneDescription;
        /// <summary>
        /// The zone id of rabbitmq instance. This field supports fuzzy query.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetInstancesRabbitmqInstanceResult(
            string accountId,

            bool applyPrivateDnsToPublic,

            string archType,

            ImmutableArray<Outputs.GetInstancesRabbitmqInstanceChargeDetailResult> chargeDetails,

            string computeSpec,

            string createTime,

            string eipId,

            ImmutableArray<Outputs.GetInstancesRabbitmqInstanceEndpointResult> endpoints,

            string id,

            string initUserName,

            string instanceDescription,

            string instanceId,

            string instanceName,

            string instanceStatus,

            string projectName,

            string regionDescription,

            string regionId,

            int storageSpace,

            string subnetId,

            ImmutableArray<Outputs.GetInstancesRabbitmqInstanceTagResult> tags,

            int usedStorageSpace,

            string version,

            string vpcId,

            string zoneDescription,

            string zoneId)
        {
            AccountId = accountId;
            ApplyPrivateDnsToPublic = applyPrivateDnsToPublic;
            ArchType = archType;
            ChargeDetails = chargeDetails;
            ComputeSpec = computeSpec;
            CreateTime = createTime;
            EipId = eipId;
            Endpoints = endpoints;
            Id = id;
            InitUserName = initUserName;
            InstanceDescription = instanceDescription;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceStatus = instanceStatus;
            ProjectName = projectName;
            RegionDescription = regionDescription;
            RegionId = regionId;
            StorageSpace = storageSpace;
            SubnetId = subnetId;
            Tags = tags;
            UsedStorageSpace = usedStorageSpace;
            Version = version;
            VpcId = vpcId;
            ZoneDescription = zoneDescription;
            ZoneId = zoneId;
        }
    }
}
