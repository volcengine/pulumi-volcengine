// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Escloud_v2
{
    public static class GetEscloudNodeAvailableSpecs
    {
        /// <summary>
        /// Use this data source to query detailed information of escloud node available specs
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Escloud_v2.GetEscloudNodeAvailableSpecs.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEscloudNodeAvailableSpecsResult> InvokeAsync(GetEscloudNodeAvailableSpecsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEscloudNodeAvailableSpecsResult>("volcengine:escloud_v2/getEscloudNodeAvailableSpecs:getEscloudNodeAvailableSpecs", args ?? new GetEscloudNodeAvailableSpecsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of escloud node available specs
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Escloud_v2.GetEscloudNodeAvailableSpecs.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEscloudNodeAvailableSpecsResult> Invoke(GetEscloudNodeAvailableSpecsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEscloudNodeAvailableSpecsResult>("volcengine:escloud_v2/getEscloudNodeAvailableSpecs:getEscloudNodeAvailableSpecs", args ?? new GetEscloudNodeAvailableSpecsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEscloudNodeAvailableSpecsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the instance.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetEscloudNodeAvailableSpecsArgs()
        {
        }
        public static new GetEscloudNodeAvailableSpecsArgs Empty => new GetEscloudNodeAvailableSpecsArgs();
    }

    public sealed class GetEscloudNodeAvailableSpecsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetEscloudNodeAvailableSpecsInvokeArgs()
        {
        }
        public static new GetEscloudNodeAvailableSpecsInvokeArgs Empty => new GetEscloudNodeAvailableSpecsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEscloudNodeAvailableSpecsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceId;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEscloudNodeAvailableSpecsNodeSpecResult> NodeSpecs;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetEscloudNodeAvailableSpecsResult(
            string id,

            string? instanceId,

            ImmutableArray<Outputs.GetEscloudNodeAvailableSpecsNodeSpecResult> nodeSpecs,

            string? outputFile,

            int totalCount)
        {
            Id = id;
            InstanceId = instanceId;
            NodeSpecs = nodeSpecs;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
