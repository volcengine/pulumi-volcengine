// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Escloud_v2
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         Description = "tfdesc",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooInstanceV2 = new Volcengine.Escloud.InstanceV2("fooInstanceV2", new()
    ///     {
    ///         InstanceName = "acc-test-escloud-instance",
    ///         Version = "V7_10",
    ///         ZoneIds = new[]
    ///         {
    ///             fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///             fooZones.Apply(zonesResult =&gt; zonesResult.Zones[1]?.Id),
    ///             fooZones.Apply(zonesResult =&gt; zonesResult.Zones[2]?.Id),
    ///         },
    ///         SubnetId = fooSubnet.Id,
    ///         EnableHttps = false,
    ///         AdminPassword = "Password@@123",
    ///         ChargeType = "PostPaid",
    ///         AutoRenew = false,
    ///         Period = 1,
    ///         ConfigurationCode = "es.standard",
    ///         EnablePureMaster = true,
    ///         DeletionProtection = false,
    ///         ProjectName = "default",
    ///         NodeSpecsAssigns = new[]
    ///         {
    ///             new Volcengine.Escloud.Inputs.InstanceV2NodeSpecsAssignArgs
    ///             {
    ///                 Type = "Master",
    ///                 Number = 3,
    ///                 ResourceSpecName = "es.x2.medium",
    ///                 StorageSpecName = "es.volume.essd.pl0",
    ///                 StorageSize = 20,
    ///             },
    ///             new Volcengine.Escloud.Inputs.InstanceV2NodeSpecsAssignArgs
    ///             {
    ///                 Type = "Hot",
    ///                 Number = 6,
    ///                 ResourceSpecName = "es.x2.medium",
    ///                 StorageSpecName = "es.volume.essd.flexpl-standard",
    ///                 StorageSize = 500,
    ///                 ExtraPerformance = new Volcengine.Escloud.Inputs.InstanceV2NodeSpecsAssignExtraPerformanceArgs
    ///                 {
    ///                     Throughput = 65,
    ///                 },
    ///             },
    ///             new Volcengine.Escloud.Inputs.InstanceV2NodeSpecsAssignArgs
    ///             {
    ///                 Type = "Kibana",
    ///                 Number = 1,
    ///                 ResourceSpecName = "kibana.x2.small",
    ///                 StorageSpecName = "",
    ///                 StorageSize = 0,
    ///             },
    ///         },
    ///         NetworkSpecs = new[]
    ///         {
    ///             new Volcengine.Escloud.Inputs.InstanceV2NetworkSpecArgs
    ///             {
    ///                 Type = "Elasticsearch",
    ///                 Bandwidth = 1,
    ///                 IsOpen = true,
    ///                 SpecName = "es.eip.bgp_fixed_bandwidth",
    ///             },
    ///             new Volcengine.Escloud.Inputs.InstanceV2NetworkSpecArgs
    ///             {
    ///                 Type = "Kibana",
    ///                 Bandwidth = 1,
    ///                 IsOpen = true,
    ///                 SpecName = "es.eip.bgp_fixed_bandwidth",
    ///             },
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Escloud.Inputs.InstanceV2TagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     //  maintenance_time = "02:00-08:00"
    ///     //  maintenance_day = ["FRIDAY", "MONDAY"]
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// EscloudInstanceV2 can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2 default resource_id
    /// ```
    /// </summary>
    [Obsolete(@"volcengine.escloud_v2/escloudinstancev2.EscloudInstanceV2 has been deprecated in favor of volcengine.escloud/instancev2.InstanceV2")]
    [VolcengineResourceType("volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2")]
    public partial class EscloudInstanceV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("adminPassword")]
        public Output<string> AdminPassword { get; private set; } = null!;

        /// <summary>
        /// Whether to automatically renew in prepaid scenarios. Default is false.
        /// </summary>
        [Output("autoRenew")]
        public Output<bool?> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// The cerebro private domain of instance.
        /// </summary>
        [Output("cerebroPrivateDomain")]
        public Output<string> CerebroPrivateDomain { get; private set; } = null!;

        /// <summary>
        /// The cerebro public domain of instance.
        /// </summary>
        [Output("cerebroPublicDomain")]
        public Output<string> CerebroPublicDomain { get; private set; } = null!;

        /// <summary>
        /// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
        /// </summary>
        [Output("chargeType")]
        public Output<string> ChargeType { get; private set; } = null!;

        /// <summary>
        /// Configuration code used for billing.
        /// </summary>
        [Output("configurationCode")]
        public Output<string> ConfigurationCode { get; private set; } = null!;

        /// <summary>
        /// Whether enable deletion protection for ESCloud instance. Default is false.
        /// </summary>
        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// Whether Https access is enabled.
        /// </summary>
        [Output("enableHttps")]
        public Output<bool> EnableHttps { get; private set; } = null!;

        /// <summary>
        /// Whether the Master node is independent.
        /// </summary>
        [Output("enablePureMaster")]
        public Output<bool> EnablePureMaster { get; private set; } = null!;

        /// <summary>
        /// The eip address of instance.
        /// </summary>
        [Output("esEip")]
        public Output<string> EsEip { get; private set; } = null!;

        /// <summary>
        /// The eip id associated with the instance.
        /// </summary>
        [Output("esEipId")]
        public Output<string> EsEipId { get; private set; } = null!;

        /// <summary>
        /// The es private domain of instance.
        /// </summary>
        [Output("esPrivateDomain")]
        public Output<string> EsPrivateDomain { get; private set; } = null!;

        /// <summary>
        /// The es private endpoint of instance.
        /// </summary>
        [Output("esPrivateEndpoint")]
        public Output<string> EsPrivateEndpoint { get; private set; } = null!;

        /// <summary>
        /// The whitelist of es private ip.
        /// </summary>
        [Output("esPrivateIpWhitelist")]
        public Output<string> EsPrivateIpWhitelist { get; private set; } = null!;

        /// <summary>
        /// The es public domain of instance.
        /// </summary>
        [Output("esPublicDomain")]
        public Output<string> EsPublicDomain { get; private set; } = null!;

        /// <summary>
        /// The es public endpoint of instance.
        /// </summary>
        [Output("esPublicEndpoint")]
        public Output<string> EsPublicEndpoint { get; private set; } = null!;

        /// <summary>
        /// The whitelist of es public ip.
        /// </summary>
        [Output("esPublicIpWhitelist")]
        public Output<string> EsPublicIpWhitelist { get; private set; } = null!;

        /// <summary>
        /// The name of ESCloud instance.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// The eip address of kibana.
        /// </summary>
        [Output("kibanaEip")]
        public Output<string> KibanaEip { get; private set; } = null!;

        /// <summary>
        /// The eip id associated with kibana.
        /// </summary>
        [Output("kibanaEipId")]
        public Output<string> KibanaEipId { get; private set; } = null!;

        /// <summary>
        /// The kibana private domain of instance.
        /// </summary>
        [Output("kibanaPrivateDomain")]
        public Output<string> KibanaPrivateDomain { get; private set; } = null!;

        /// <summary>
        /// The whitelist of kibana private ip.
        /// </summary>
        [Output("kibanaPrivateIpWhitelist")]
        public Output<string> KibanaPrivateIpWhitelist { get; private set; } = null!;

        /// <summary>
        /// The kibana public domain of instance.
        /// </summary>
        [Output("kibanaPublicDomain")]
        public Output<string> KibanaPublicDomain { get; private set; } = null!;

        /// <summary>
        /// The whitelist of kibana public ip.
        /// </summary>
        [Output("kibanaPublicIpWhitelist")]
        public Output<string> KibanaPublicIpWhitelist { get; private set; } = null!;

        /// <summary>
        /// The main zone id of instance.
        /// </summary>
        [Output("mainZoneId")]
        public Output<string> MainZoneId { get; private set; } = null!;

        /// <summary>
        /// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
        /// </summary>
        [Output("maintenanceDays")]
        public Output<ImmutableArray<string>> MaintenanceDays { get; private set; } = null!;

        /// <summary>
        /// The maintainable time period for the instance. Works only on modified scenes.
        /// </summary>
        [Output("maintenanceTime")]
        public Output<string> MaintenanceTime { get; private set; } = null!;

        /// <summary>
        /// The public network config of the ESCloud instance.
        /// </summary>
        [Output("networkSpecs")]
        public Output<ImmutableArray<Outputs.EscloudInstanceV2NetworkSpec>> NetworkSpecs { get; private set; } = null!;

        /// <summary>
        /// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
        /// </summary>
        [Output("nodeSpecsAssigns")]
        public Output<ImmutableArray<Outputs.EscloudInstanceV2NodeSpecsAssign>> NodeSpecsAssigns { get; private set; } = null!;

        /// <summary>
        /// Purchase duration in prepaid scenarios. Unit: Monthly.
        /// </summary>
        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        /// <summary>
        /// The project name to which the ESCloud instance belongs.
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The status of instance.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The id of subnet, the subnet must belong to the AZ selected.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.EscloudInstanceV2Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        /// <summary>
        /// The zone id of the ESCloud instance. Support specifying multiple availability zones.
        /// The first zone id is the primary availability zone, while the rest are backup availability zones.
        /// </summary>
        [Output("zoneIds")]
        public Output<ImmutableArray<string>> ZoneIds { get; private set; } = null!;


        /// <summary>
        /// Create a EscloudInstanceV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EscloudInstanceV2(string name, EscloudInstanceV2Args args, CustomResourceOptions? options = null)
            : base("volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2", name, args ?? new EscloudInstanceV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private EscloudInstanceV2(string name, Input<string> id, EscloudInstanceV2State? state = null, CustomResourceOptions? options = null)
            : base("volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
                AdditionalSecretOutputs =
                {
                    "adminPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EscloudInstanceV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EscloudInstanceV2 Get(string name, Input<string> id, EscloudInstanceV2State? state = null, CustomResourceOptions? options = null)
        {
            return new EscloudInstanceV2(name, id, state, options);
        }
    }

    public sealed class EscloudInstanceV2Args : global::Pulumi.ResourceArgs
    {
        [Input("adminPassword", required: true)]
        private Input<string>? _adminPassword;

        /// <summary>
        /// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        public Input<string>? AdminPassword
        {
            get => _adminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether to automatically renew in prepaid scenarios. Default is false.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
        /// </summary>
        [Input("chargeType", required: true)]
        public Input<string> ChargeType { get; set; } = null!;

        /// <summary>
        /// Configuration code used for billing.
        /// </summary>
        [Input("configurationCode", required: true)]
        public Input<string> ConfigurationCode { get; set; } = null!;

        /// <summary>
        /// Whether enable deletion protection for ESCloud instance. Default is false.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// Whether Https access is enabled.
        /// </summary>
        [Input("enableHttps", required: true)]
        public Input<bool> EnableHttps { get; set; } = null!;

        /// <summary>
        /// Whether the Master node is independent.
        /// </summary>
        [Input("enablePureMaster")]
        public Input<bool>? EnablePureMaster { get; set; }

        /// <summary>
        /// The name of ESCloud instance.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        [Input("maintenanceDays")]
        private InputList<string>? _maintenanceDays;

        /// <summary>
        /// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
        /// </summary>
        public InputList<string> MaintenanceDays
        {
            get => _maintenanceDays ?? (_maintenanceDays = new InputList<string>());
            set => _maintenanceDays = value;
        }

        /// <summary>
        /// The maintainable time period for the instance. Works only on modified scenes.
        /// </summary>
        [Input("maintenanceTime")]
        public Input<string>? MaintenanceTime { get; set; }

        [Input("networkSpecs")]
        private InputList<Inputs.EscloudInstanceV2NetworkSpecArgs>? _networkSpecs;

        /// <summary>
        /// The public network config of the ESCloud instance.
        /// </summary>
        public InputList<Inputs.EscloudInstanceV2NetworkSpecArgs> NetworkSpecs
        {
            get => _networkSpecs ?? (_networkSpecs = new InputList<Inputs.EscloudInstanceV2NetworkSpecArgs>());
            set => _networkSpecs = value;
        }

        [Input("nodeSpecsAssigns", required: true)]
        private InputList<Inputs.EscloudInstanceV2NodeSpecsAssignArgs>? _nodeSpecsAssigns;

        /// <summary>
        /// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
        /// </summary>
        public InputList<Inputs.EscloudInstanceV2NodeSpecsAssignArgs> NodeSpecsAssigns
        {
            get => _nodeSpecsAssigns ?? (_nodeSpecsAssigns = new InputList<Inputs.EscloudInstanceV2NodeSpecsAssignArgs>());
            set => _nodeSpecsAssigns = value;
        }

        /// <summary>
        /// Purchase duration in prepaid scenarios. Unit: Monthly.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The project name to which the ESCloud instance belongs.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The id of subnet, the subnet must belong to the AZ selected.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.EscloudInstanceV2TagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.EscloudInstanceV2TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.EscloudInstanceV2TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        [Input("zoneIds", required: true)]
        private InputList<string>? _zoneIds;

        /// <summary>
        /// The zone id of the ESCloud instance. Support specifying multiple availability zones.
        /// The first zone id is the primary availability zone, while the rest are backup availability zones.
        /// </summary>
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public EscloudInstanceV2Args()
        {
        }
        public static new EscloudInstanceV2Args Empty => new EscloudInstanceV2Args();
    }

    public sealed class EscloudInstanceV2State : global::Pulumi.ResourceArgs
    {
        [Input("adminPassword")]
        private Input<string>? _adminPassword;

        /// <summary>
        /// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        public Input<string>? AdminPassword
        {
            get => _adminPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _adminPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether to automatically renew in prepaid scenarios. Default is false.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The cerebro private domain of instance.
        /// </summary>
        [Input("cerebroPrivateDomain")]
        public Input<string>? CerebroPrivateDomain { get; set; }

        /// <summary>
        /// The cerebro public domain of instance.
        /// </summary>
        [Input("cerebroPublicDomain")]
        public Input<string>? CerebroPublicDomain { get; set; }

        /// <summary>
        /// The charge type of ESCloud instance, valid values: `PostPaid`, `PrePaid`.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// Configuration code used for billing.
        /// </summary>
        [Input("configurationCode")]
        public Input<string>? ConfigurationCode { get; set; }

        /// <summary>
        /// Whether enable deletion protection for ESCloud instance. Default is false.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// Whether Https access is enabled.
        /// </summary>
        [Input("enableHttps")]
        public Input<bool>? EnableHttps { get; set; }

        /// <summary>
        /// Whether the Master node is independent.
        /// </summary>
        [Input("enablePureMaster")]
        public Input<bool>? EnablePureMaster { get; set; }

        /// <summary>
        /// The eip address of instance.
        /// </summary>
        [Input("esEip")]
        public Input<string>? EsEip { get; set; }

        /// <summary>
        /// The eip id associated with the instance.
        /// </summary>
        [Input("esEipId")]
        public Input<string>? EsEipId { get; set; }

        /// <summary>
        /// The es private domain of instance.
        /// </summary>
        [Input("esPrivateDomain")]
        public Input<string>? EsPrivateDomain { get; set; }

        /// <summary>
        /// The es private endpoint of instance.
        /// </summary>
        [Input("esPrivateEndpoint")]
        public Input<string>? EsPrivateEndpoint { get; set; }

        /// <summary>
        /// The whitelist of es private ip.
        /// </summary>
        [Input("esPrivateIpWhitelist")]
        public Input<string>? EsPrivateIpWhitelist { get; set; }

        /// <summary>
        /// The es public domain of instance.
        /// </summary>
        [Input("esPublicDomain")]
        public Input<string>? EsPublicDomain { get; set; }

        /// <summary>
        /// The es public endpoint of instance.
        /// </summary>
        [Input("esPublicEndpoint")]
        public Input<string>? EsPublicEndpoint { get; set; }

        /// <summary>
        /// The whitelist of es public ip.
        /// </summary>
        [Input("esPublicIpWhitelist")]
        public Input<string>? EsPublicIpWhitelist { get; set; }

        /// <summary>
        /// The name of ESCloud instance.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// The eip address of kibana.
        /// </summary>
        [Input("kibanaEip")]
        public Input<string>? KibanaEip { get; set; }

        /// <summary>
        /// The eip id associated with kibana.
        /// </summary>
        [Input("kibanaEipId")]
        public Input<string>? KibanaEipId { get; set; }

        /// <summary>
        /// The kibana private domain of instance.
        /// </summary>
        [Input("kibanaPrivateDomain")]
        public Input<string>? KibanaPrivateDomain { get; set; }

        /// <summary>
        /// The whitelist of kibana private ip.
        /// </summary>
        [Input("kibanaPrivateIpWhitelist")]
        public Input<string>? KibanaPrivateIpWhitelist { get; set; }

        /// <summary>
        /// The kibana public domain of instance.
        /// </summary>
        [Input("kibanaPublicDomain")]
        public Input<string>? KibanaPublicDomain { get; set; }

        /// <summary>
        /// The whitelist of kibana public ip.
        /// </summary>
        [Input("kibanaPublicIpWhitelist")]
        public Input<string>? KibanaPublicIpWhitelist { get; set; }

        /// <summary>
        /// The main zone id of instance.
        /// </summary>
        [Input("mainZoneId")]
        public Input<string>? MainZoneId { get; set; }

        [Input("maintenanceDays")]
        private InputList<string>? _maintenanceDays;

        /// <summary>
        /// The maintainable day for the instance. Valid values: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`. Works only on modified scenes.
        /// </summary>
        public InputList<string> MaintenanceDays
        {
            get => _maintenanceDays ?? (_maintenanceDays = new InputList<string>());
            set => _maintenanceDays = value;
        }

        /// <summary>
        /// The maintainable time period for the instance. Works only on modified scenes.
        /// </summary>
        [Input("maintenanceTime")]
        public Input<string>? MaintenanceTime { get; set; }

        [Input("networkSpecs")]
        private InputList<Inputs.EscloudInstanceV2NetworkSpecGetArgs>? _networkSpecs;

        /// <summary>
        /// The public network config of the ESCloud instance.
        /// </summary>
        public InputList<Inputs.EscloudInstanceV2NetworkSpecGetArgs> NetworkSpecs
        {
            get => _networkSpecs ?? (_networkSpecs = new InputList<Inputs.EscloudInstanceV2NetworkSpecGetArgs>());
            set => _networkSpecs = value;
        }

        [Input("nodeSpecsAssigns")]
        private InputList<Inputs.EscloudInstanceV2NodeSpecsAssignGetArgs>? _nodeSpecsAssigns;

        /// <summary>
        /// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
        /// </summary>
        public InputList<Inputs.EscloudInstanceV2NodeSpecsAssignGetArgs> NodeSpecsAssigns
        {
            get => _nodeSpecsAssigns ?? (_nodeSpecsAssigns = new InputList<Inputs.EscloudInstanceV2NodeSpecsAssignGetArgs>());
            set => _nodeSpecsAssigns = value;
        }

        /// <summary>
        /// Purchase duration in prepaid scenarios. Unit: Monthly.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The project name to which the ESCloud instance belongs.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The status of instance.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The id of subnet, the subnet must belong to the AZ selected.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputList<Inputs.EscloudInstanceV2TagGetArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.EscloudInstanceV2TagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.EscloudInstanceV2TagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The version of instance. When creating ESCloud instance, the valid value is `V6_7` or `V7_10`. When creating OpenSearch instance, the valid value is `OPEN_SEARCH_2_9`.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        [Input("zoneIds")]
        private InputList<string>? _zoneIds;

        /// <summary>
        /// The zone id of the ESCloud instance. Support specifying multiple availability zones.
        /// The first zone id is the primary availability zone, while the rest are backup availability zones.
        /// </summary>
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public EscloudInstanceV2State()
        {
        }
        public static new EscloudInstanceV2State Empty => new EscloudInstanceV2State();
    }
}
