// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Escloud_v2
{
    [Obsolete(@"volcengine.escloud_v2/escloudinstancesv2.EscloudInstancesV2 has been deprecated in favor of volcengine.escloud/getinstancesv2.getInstancesV2")]
    public static class EscloudInstancesV2
    {
        public static Task<EscloudInstancesV2Result> InvokeAsync(EscloudInstancesV2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<EscloudInstancesV2Result>("volcengine:escloud_v2/escloudInstancesV2:EscloudInstancesV2", args ?? new EscloudInstancesV2Args(), options.WithDefaults());

        public static Output<EscloudInstancesV2Result> Invoke(EscloudInstancesV2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<EscloudInstancesV2Result>("volcengine:escloud_v2/escloudInstancesV2:EscloudInstancesV2", args ?? new EscloudInstancesV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class EscloudInstancesV2Args : global::Pulumi.InvokeArgs
    {
        [Input("chargeTypes")]
        private List<string>? _chargeTypes;
        public List<string> ChargeTypes
        {
            get => _chargeTypes ?? (_chargeTypes = new List<string>());
            set => _chargeTypes = value;
        }

        [Input("ids")]
        private List<string>? _ids;
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("instanceNames")]
        private List<string>? _instanceNames;
        public List<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new List<string>());
            set => _instanceNames = value;
        }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("projectName")]
        public string? ProjectName { get; set; }

        [Input("statuses")]
        private List<string>? _statuses;
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        [Input("tags")]
        private List<Inputs.EscloudInstancesV2TagArgs>? _tags;
        public List<Inputs.EscloudInstancesV2TagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.EscloudInstancesV2TagArgs>());
            set => _tags = value;
        }

        [Input("versions")]
        private List<string>? _versions;
        public List<string> Versions
        {
            get => _versions ?? (_versions = new List<string>());
            set => _versions = value;
        }

        [Input("zoneIds")]
        private List<string>? _zoneIds;
        public List<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new List<string>());
            set => _zoneIds = value;
        }

        public EscloudInstancesV2Args()
        {
        }
        public static new EscloudInstancesV2Args Empty => new EscloudInstancesV2Args();
    }

    public sealed class EscloudInstancesV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("chargeTypes")]
        private InputList<string>? _chargeTypes;
        public InputList<string> ChargeTypes
        {
            get => _chargeTypes ?? (_chargeTypes = new InputList<string>());
            set => _chargeTypes = value;
        }

        [Input("ids")]
        private InputList<string>? _ids;
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("statuses")]
        private InputList<string>? _statuses;
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        [Input("tags")]
        private InputList<Inputs.EscloudInstancesV2TagInputArgs>? _tags;
        public InputList<Inputs.EscloudInstancesV2TagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.EscloudInstancesV2TagInputArgs>());
            set => _tags = value;
        }

        [Input("versions")]
        private InputList<string>? _versions;
        public InputList<string> Versions
        {
            get => _versions ?? (_versions = new InputList<string>());
            set => _versions = value;
        }

        [Input("zoneIds")]
        private InputList<string>? _zoneIds;
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public EscloudInstancesV2InvokeArgs()
        {
        }
        public static new EscloudInstancesV2InvokeArgs Empty => new EscloudInstancesV2InvokeArgs();
    }


    [OutputType]
    public sealed class EscloudInstancesV2Result
    {
        public readonly ImmutableArray<string> ChargeTypes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly ImmutableArray<string> InstanceNames;
        public readonly ImmutableArray<Outputs.EscloudInstancesV2InstanceResult> Instances;
        public readonly string? OutputFile;
        public readonly string? ProjectName;
        public readonly ImmutableArray<string> Statuses;
        public readonly ImmutableArray<Outputs.EscloudInstancesV2TagResult> Tags;
        public readonly int TotalCount;
        public readonly ImmutableArray<string> Versions;
        public readonly ImmutableArray<string> ZoneIds;

        [OutputConstructor]
        private EscloudInstancesV2Result(
            ImmutableArray<string> chargeTypes,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<string> instanceNames,

            ImmutableArray<Outputs.EscloudInstancesV2InstanceResult> instances,

            string? outputFile,

            string? projectName,

            ImmutableArray<string> statuses,

            ImmutableArray<Outputs.EscloudInstancesV2TagResult> tags,

            int totalCount,

            ImmutableArray<string> versions,

            ImmutableArray<string> zoneIds)
        {
            ChargeTypes = chargeTypes;
            Id = id;
            Ids = ids;
            InstanceNames = instanceNames;
            Instances = instances;
            OutputFile = outputFile;
            ProjectName = projectName;
            Statuses = statuses;
            Tags = tags;
            TotalCount = totalCount;
            Versions = versions;
            ZoneIds = zoneIds;
        }
    }
}
