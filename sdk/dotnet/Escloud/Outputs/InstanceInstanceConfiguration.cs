// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Escloud.Outputs
{

    [OutputType]
    public sealed class InstanceInstanceConfiguration
    {
        /// <summary>
        /// The password of administrator account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        public readonly string AdminPassword;
        /// <summary>
        /// The name of administrator account(should be admin).
        /// </summary>
        public readonly string AdminUserName;
        /// <summary>
        /// The charge type of ESCloud instance, the value can be PostPaid or PrePaid.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// Configuration code used for billing.
        /// </summary>
        public readonly string ConfigurationCode;
        /// <summary>
        /// Whether Https access is enabled.
        /// </summary>
        public readonly bool EnableHttps;
        /// <summary>
        /// Whether the Master node is independent.
        /// </summary>
        public readonly bool EnablePureMaster;
        /// <summary>
        /// Whether to force restart when changes are made. If true, it means that the cluster will be forced to restart without paying attention to instance availability. Works only on modified the node_specs_assigns field.
        /// </summary>
        public readonly bool? ForceRestartAfterScale;
        /// <summary>
        /// The name of ESCloud instance.
        /// </summary>
        public readonly string? InstanceName;
        /// <summary>
        /// The maintainable date for the instance. Works only on modified scenes.
        /// </summary>
        public readonly ImmutableArray<string> MaintenanceDays;
        /// <summary>
        /// The maintainable time period for the instance. Works only on modified scenes.
        /// </summary>
        public readonly string? MaintenanceTime;
        /// <summary>
        /// The number and configuration of various ESCloud instance node. Kibana NodeSpecsAssign should not be modified.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceInstanceConfigurationNodeSpecsAssign> NodeSpecsAssigns;
        /// <summary>
        /// The project name  to which the ESCloud instance belongs.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// The region ID of ESCloud instance.
        /// </summary>
        public readonly string? RegionId;
        /// <summary>
        /// The ID of subnet, the subnet must belong to the AZ selected.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The version of ESCloud instance, the value is V6_7 or V7_10.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// The available zone ID of ESCloud instance.
        /// </summary>
        public readonly string? ZoneId;
        /// <summary>
        /// The zone count of the ESCloud instance used.
        /// </summary>
        public readonly int ZoneNumber;

        [OutputConstructor]
        private InstanceInstanceConfiguration(
            string adminPassword,

            string adminUserName,

            string chargeType,

            string configurationCode,

            bool enableHttps,

            bool enablePureMaster,

            bool? forceRestartAfterScale,

            string? instanceName,

            ImmutableArray<string> maintenanceDays,

            string? maintenanceTime,

            ImmutableArray<Outputs.InstanceInstanceConfigurationNodeSpecsAssign> nodeSpecsAssigns,

            string? projectName,

            string? regionId,

            string subnetId,

            string version,

            string? zoneId,

            int zoneNumber)
        {
            AdminPassword = adminPassword;
            AdminUserName = adminUserName;
            ChargeType = chargeType;
            ConfigurationCode = configurationCode;
            EnableHttps = enableHttps;
            EnablePureMaster = enablePureMaster;
            ForceRestartAfterScale = forceRestartAfterScale;
            InstanceName = instanceName;
            MaintenanceDays = maintenanceDays;
            MaintenanceTime = maintenanceTime;
            NodeSpecsAssigns = nodeSpecsAssigns;
            ProjectName = projectName;
            RegionId = regionId;
            SubnetId = subnetId;
            Version = version;
            ZoneId = zoneId;
            ZoneNumber = zoneNumber;
        }
    }
}
