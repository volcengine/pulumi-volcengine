// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Escloud.Outputs
{

    [OutputType]
    public sealed class GetInstancesV2InstanceNodeResult
    {
        /// <summary>
        /// Is cold node.
        /// </summary>
        public readonly bool IsCold;
        /// <summary>
        /// Is coordinator node.
        /// </summary>
        public readonly bool IsCoordinator;
        /// <summary>
        /// Is hot node.
        /// </summary>
        public readonly bool IsHot;
        /// <summary>
        /// Is kibana node.
        /// </summary>
        public readonly bool IsKibana;
        /// <summary>
        /// Is master node.
        /// </summary>
        public readonly bool IsMaster;
        /// <summary>
        /// Is warm node.
        /// </summary>
        public readonly bool IsWarm;
        /// <summary>
        /// The show name of node.
        /// </summary>
        public readonly string NodeDisplayName;
        /// <summary>
        /// The name of node.
        /// </summary>
        public readonly string NodeName;
        /// <summary>
        /// The node resource spec of master.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesV2InstanceNodeResourceSpecResult> ResourceSpecs;
        /// <summary>
        /// The restart times of node.
        /// </summary>
        public readonly int RestartNumber;
        /// <summary>
        /// The start time of node.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// The status of node.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The node storage spec of master.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesV2InstanceNodeStorageSpecResult> StorageSpecs;

        [OutputConstructor]
        private GetInstancesV2InstanceNodeResult(
            bool isCold,

            bool isCoordinator,

            bool isHot,

            bool isKibana,

            bool isMaster,

            bool isWarm,

            string nodeDisplayName,

            string nodeName,

            ImmutableArray<Outputs.GetInstancesV2InstanceNodeResourceSpecResult> resourceSpecs,

            int restartNumber,

            string startTime,

            string status,

            ImmutableArray<Outputs.GetInstancesV2InstanceNodeStorageSpecResult> storageSpecs)
        {
            IsCold = isCold;
            IsCoordinator = isCoordinator;
            IsHot = isHot;
            IsKibana = isKibana;
            IsMaster = isMaster;
            IsWarm = isWarm;
            NodeDisplayName = nodeDisplayName;
            NodeName = nodeName;
            ResourceSpecs = resourceSpecs;
            RestartNumber = restartNumber;
            StartTime = startTime;
            Status = status;
            StorageSpecs = storageSpecs;
        }
    }
}
