// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Escloud
{
    /// <summary>
    /// (Deprecated! Recommend use volcengine.escloud.InstanceV2 replace) Provides a resource to manage escloud instance
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
    ///     {
    ///         SubnetName = "acc-test-subnet_new",
    ///         Description = "tfdesc",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooInstance = new Volcengine.Escloud.Instance("fooInstance", new()
    ///     {
    ///         InstanceConfiguration = new Volcengine.Escloud.Inputs.InstanceInstanceConfigurationArgs
    ///         {
    ///             Version = "V6_7",
    ///             ZoneNumber = 1,
    ///             EnableHttps = true,
    ///             AdminUserName = "admin",
    ///             AdminPassword = "Password@@",
    ///             ChargeType = "PostPaid",
    ///             ConfigurationCode = "es.standard",
    ///             EnablePureMaster = true,
    ///             InstanceName = "acc-test-0",
    ///             NodeSpecsAssigns = new[]
    ///             {
    ///                 new Volcengine.Escloud.Inputs.InstanceInstanceConfigurationNodeSpecsAssignArgs
    ///                 {
    ///                     Type = "Master",
    ///                     Number = 3,
    ///                     ResourceSpecName = "es.x4.medium",
    ///                     StorageSpecName = "es.volume.essd.pl0",
    ///                     StorageSize = 100,
    ///                 },
    ///                 new Volcengine.Escloud.Inputs.InstanceInstanceConfigurationNodeSpecsAssignArgs
    ///                 {
    ///                     Type = "Hot",
    ///                     Number = 2,
    ///                     ResourceSpecName = "es.x4.large",
    ///                     StorageSpecName = "es.volume.essd.pl0",
    ///                     StorageSize = 100,
    ///                 },
    ///                 new Volcengine.Escloud.Inputs.InstanceInstanceConfigurationNodeSpecsAssignArgs
    ///                 {
    ///                     Type = "Kibana",
    ///                     Number = 1,
    ///                     ResourceSpecName = "kibana.x2.small",
    ///                 },
    ///             },
    ///             SubnetId = fooSubnet.Id,
    ///             ProjectName = "default",
    ///             ForceRestartAfterScale = false,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ESCloud Instance can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:escloud/instance:Instance default n769ewmjjqyqh5dv
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:escloud/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The configuration of ESCloud instance.
        /// </summary>
        [Output("instanceConfiguration")]
        public Output<Outputs.InstanceInstanceConfiguration> InstanceConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("volcengine:escloud/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:escloud/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration of ESCloud instance.
        /// </summary>
        [Input("instanceConfiguration", required: true)]
        public Input<Inputs.InstanceInstanceConfigurationArgs> InstanceConfiguration { get; set; } = null!;

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration of ESCloud instance.
        /// </summary>
        [Input("instanceConfiguration")]
        public Input<Inputs.InstanceInstanceConfigurationGetArgs>? InstanceConfiguration { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
