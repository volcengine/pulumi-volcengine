// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Iam
{
    /// <summary>
    /// Provides a resource to manage iam saml provider
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Iam.SamlProvider("foo", new()
    ///     {
    ///         EncodedSamlMetadataDocument = "your document",
    ///         SamlProviderName = "terraform",
    ///         SsoType = 2,
    ///         Status = 1,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// IamSamlProvider can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:iam/samlProvider:SamlProvider default SAMLProviderName
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:iam/samlProvider:SamlProvider")]
    public partial class SamlProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identity provider creation time, such as 20150123T123318Z.
        /// </summary>
        [Output("createDate")]
        public Output<string> CreateDate { get; private set; } = null!;

        /// <summary>
        /// The description of the SAML provider.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Metadata document, encoded in Base64.
        /// </summary>
        [Output("encodedSamlMetadataDocument")]
        public Output<string> EncodedSamlMetadataDocument { get; private set; } = null!;

        /// <summary>
        /// The name of the SAML provider.
        /// </summary>
        [Output("samlProviderName")]
        public Output<string> SamlProviderName { get; private set; } = null!;

        /// <summary>
        /// SSO types, 1. Role-based SSO, 2. User-based SSO.
        /// </summary>
        [Output("ssoType")]
        public Output<int> SsoType { get; private set; } = null!;

        /// <summary>
        /// User SSO status, 1. Enabled, 2. Disable other console login methods after enabling, 3. Disabled, is a required field when creating user SSO.
        /// </summary>
        [Output("status")]
        public Output<int?> Status { get; private set; } = null!;

        /// <summary>
        /// The format for the resource name of an identity provider is trn:iam::${accountID}:saml-provider/{$SAMLProviderName}.
        /// </summary>
        [Output("trn")]
        public Output<string> Trn { get; private set; } = null!;

        /// <summary>
        /// Identity provider update time, such as: 20150123T123318Z.
        /// </summary>
        [Output("updateDate")]
        public Output<string> UpdateDate { get; private set; } = null!;


        /// <summary>
        /// Create a SamlProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SamlProvider(string name, SamlProviderArgs args, CustomResourceOptions? options = null)
            : base("volcengine:iam/samlProvider:SamlProvider", name, args ?? new SamlProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SamlProvider(string name, Input<string> id, SamlProviderState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:iam/samlProvider:SamlProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SamlProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SamlProvider Get(string name, Input<string> id, SamlProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new SamlProvider(name, id, state, options);
        }
    }

    public sealed class SamlProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the SAML provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Metadata document, encoded in Base64.
        /// </summary>
        [Input("encodedSamlMetadataDocument", required: true)]
        public Input<string> EncodedSamlMetadataDocument { get; set; } = null!;

        /// <summary>
        /// The name of the SAML provider.
        /// </summary>
        [Input("samlProviderName", required: true)]
        public Input<string> SamlProviderName { get; set; } = null!;

        /// <summary>
        /// SSO types, 1. Role-based SSO, 2. User-based SSO.
        /// </summary>
        [Input("ssoType", required: true)]
        public Input<int> SsoType { get; set; } = null!;

        /// <summary>
        /// User SSO status, 1. Enabled, 2. Disable other console login methods after enabling, 3. Disabled, is a required field when creating user SSO.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        public SamlProviderArgs()
        {
        }
        public static new SamlProviderArgs Empty => new SamlProviderArgs();
    }

    public sealed class SamlProviderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identity provider creation time, such as 20150123T123318Z.
        /// </summary>
        [Input("createDate")]
        public Input<string>? CreateDate { get; set; }

        /// <summary>
        /// The description of the SAML provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Metadata document, encoded in Base64.
        /// </summary>
        [Input("encodedSamlMetadataDocument")]
        public Input<string>? EncodedSamlMetadataDocument { get; set; }

        /// <summary>
        /// The name of the SAML provider.
        /// </summary>
        [Input("samlProviderName")]
        public Input<string>? SamlProviderName { get; set; }

        /// <summary>
        /// SSO types, 1. Role-based SSO, 2. User-based SSO.
        /// </summary>
        [Input("ssoType")]
        public Input<int>? SsoType { get; set; }

        /// <summary>
        /// User SSO status, 1. Enabled, 2. Disable other console login methods after enabling, 3. Disabled, is a required field when creating user SSO.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// The format for the resource name of an identity provider is trn:iam::${accountID}:saml-provider/{$SAMLProviderName}.
        /// </summary>
        [Input("trn")]
        public Input<string>? Trn { get; set; }

        /// <summary>
        /// Identity provider update time, such as: 20150123T123318Z.
        /// </summary>
        [Input("updateDate")]
        public Input<string>? UpdateDate { get; set; }

        public SamlProviderState()
        {
        }
        public static new SamlProviderState Empty => new SamlProviderState();
    }
}
