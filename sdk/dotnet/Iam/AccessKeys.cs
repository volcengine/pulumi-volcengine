// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Iam
{
    [Obsolete(@"volcengine.iam.AccessKeys has been deprecated in favor of volcengine.iam.getAccessKeys")]
    public static class AccessKeys
    {
        /// <summary>
        /// Use this data source to query detailed information of iam access keys
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Iam.GetAccessKeys.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<AccessKeysResult> InvokeAsync(AccessKeysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<AccessKeysResult>("volcengine:iam/accessKeys:AccessKeys", args ?? new AccessKeysArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of iam access keys
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Iam.GetAccessKeys.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<AccessKeysResult> Invoke(AccessKeysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<AccessKeysResult>("volcengine:iam/accessKeys:AccessKeys", args ?? new AccessKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class AccessKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of IAM.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The user names.
        /// </summary>
        [Input("userName")]
        public string? UserName { get; set; }

        public AccessKeysArgs()
        {
        }
        public static new AccessKeysArgs Empty => new AccessKeysArgs();
    }

    public sealed class AccessKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of IAM.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The user names.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public AccessKeysInvokeArgs()
        {
        }
        public static new AccessKeysInvokeArgs Empty => new AccessKeysInvokeArgs();
    }


    [OutputType]
    public sealed class AccessKeysResult
    {
        /// <summary>
        /// The collection of access keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.AccessKeysAccessKeyMetadataResult> AccessKeyMetadatas;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of user query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The user name.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private AccessKeysResult(
            ImmutableArray<Outputs.AccessKeysAccessKeyMetadataResult> accessKeyMetadatas,

            string id,

            string? nameRegex,

            string? outputFile,

            int totalCount,

            string? userName)
        {
            AccessKeyMetadatas = accessKeyMetadatas;
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
            UserName = userName;
        }
    }
}
