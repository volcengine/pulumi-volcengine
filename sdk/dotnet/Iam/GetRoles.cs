// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Iam
{
    public static class GetRoles
    {
        /// <summary>
        /// Use this data source to query detailed information of iam roles
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo1 = new Volcengine.Iam.Role("foo1", new()
        ///     {
        ///         Description = "acc-test1",
        ///         DisplayName = "acc-test1",
        ///         MaxSessionDuration = 3600,
        ///         RoleName = "acc-test-role1",
        ///         TrustPolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"auto_scaling\"]}}]}",
        ///     });
        /// 
        ///     var foo2 = new Volcengine.Iam.Role("foo2", new()
        ///     {
        ///         Description = "acc-test2",
        ///         DisplayName = "acc-test2",
        ///         MaxSessionDuration = 3600,
        ///         RoleName = "acc-test-role2",
        ///         TrustPolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"ecs\"]}}]}",
        ///     });
        /// 
        ///     var foo = Volcengine.Iam.GetRoles.Invoke(new()
        ///     {
        ///         RoleName = $"{foo1.RoleName},{foo2.RoleName}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRolesResult> InvokeAsync(GetRolesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRolesResult>("volcengine:iam/getRoles:getRoles", args ?? new GetRolesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of iam roles
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo1 = new Volcengine.Iam.Role("foo1", new()
        ///     {
        ///         Description = "acc-test1",
        ///         DisplayName = "acc-test1",
        ///         MaxSessionDuration = 3600,
        ///         RoleName = "acc-test-role1",
        ///         TrustPolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"auto_scaling\"]}}]}",
        ///     });
        /// 
        ///     var foo2 = new Volcengine.Iam.Role("foo2", new()
        ///     {
        ///         Description = "acc-test2",
        ///         DisplayName = "acc-test2",
        ///         MaxSessionDuration = 3600,
        ///         RoleName = "acc-test-role2",
        ///         TrustPolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Principal\":{\"Service\":[\"ecs\"]}}]}",
        ///     });
        /// 
        ///     var foo = Volcengine.Iam.GetRoles.Invoke(new()
        ///     {
        ///         RoleName = $"{foo1.RoleName},{foo2.RoleName}",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRolesResult> Invoke(GetRolesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRolesResult>("volcengine:iam/getRoles:getRoles", args ?? new GetRolesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRolesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Role.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The query field of Role.
        /// </summary>
        [Input("query")]
        public string? Query { get; set; }

        /// <summary>
        /// The name of the Role, comma separated.
        /// </summary>
        [Input("roleName")]
        public string? RoleName { get; set; }

        public GetRolesArgs()
        {
        }
        public static new GetRolesArgs Empty => new GetRolesArgs();
    }

    public sealed class GetRolesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Role.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The query field of Role.
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        /// <summary>
        /// The name of the Role, comma separated.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        public GetRolesInvokeArgs()
        {
        }
        public static new GetRolesInvokeArgs Empty => new GetRolesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRolesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        public readonly string? Query;
        /// <summary>
        /// The name of the Role.
        /// </summary>
        public readonly string? RoleName;
        /// <summary>
        /// The collection of Role query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRolesRoleResult> Roles;
        /// <summary>
        /// The total count of Role query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetRolesResult(
            string id,

            string? nameRegex,

            string? outputFile,

            string? query,

            string? roleName,

            ImmutableArray<Outputs.GetRolesRoleResult> roles,

            int totalCount)
        {
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Query = query;
            RoleName = roleName;
            Roles = roles;
            TotalCount = totalCount;
        }
    }
}
