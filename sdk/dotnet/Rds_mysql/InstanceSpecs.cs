// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rds_mysql
{
    [Obsolete(@"volcengine.rds_mysql.InstanceSpecs has been deprecated in favor of volcengine.rds_mysql.getInstanceSpecs")]
    public static class InstanceSpecs
    {
        /// <summary>
        /// Use this data source to query detailed information of rds mysql instance specs
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Rds_mysql.GetInstanceSpecs.Invoke(new()
        ///     {
        ///         DbEngineVersion = "MySQL_8_0",
        ///         InstanceType = "DoubleNode",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<InstanceSpecsResult> InvokeAsync(InstanceSpecsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<InstanceSpecsResult>("volcengine:rds_mysql/instanceSpecs:InstanceSpecs", args ?? new InstanceSpecsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of rds mysql instance specs
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Rds_mysql.GetInstanceSpecs.Invoke(new()
        ///     {
        ///         DbEngineVersion = "MySQL_8_0",
        ///         InstanceType = "DoubleNode",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<InstanceSpecsResult> Invoke(InstanceSpecsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<InstanceSpecsResult>("volcengine:rds_mysql/instanceSpecs:InstanceSpecs", args ?? new InstanceSpecsInvokeArgs(), options.WithDefaults());
    }


    public sealed class InstanceSpecsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Compatible version. Values:
        /// MySQL_5_7: MySQL 5.7 version. Default value.
        /// MySQL_8_0: MySQL 8.0 version.
        /// </summary>
        [Input("dbEngineVersion")]
        public string? DbEngineVersion { get; set; }

        /// <summary>
        /// Instance type. The value is DoubleNode.
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Instance specification code.
        /// </summary>
        [Input("specCode")]
        public string? SpecCode { get; set; }

        /// <summary>
        /// Availability zone ID.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public InstanceSpecsArgs()
        {
        }
        public static new InstanceSpecsArgs Empty => new InstanceSpecsArgs();
    }

    public sealed class InstanceSpecsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Compatible version. Values:
        /// MySQL_5_7: MySQL 5.7 version. Default value.
        /// MySQL_8_0: MySQL 8.0 version.
        /// </summary>
        [Input("dbEngineVersion")]
        public Input<string>? DbEngineVersion { get; set; }

        /// <summary>
        /// Instance type. The value is DoubleNode.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Instance specification code.
        /// </summary>
        [Input("specCode")]
        public Input<string>? SpecCode { get; set; }

        /// <summary>
        /// Availability zone ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public InstanceSpecsInvokeArgs()
        {
        }
        public static new InstanceSpecsInvokeArgs Empty => new InstanceSpecsInvokeArgs();
    }


    [OutputType]
    public sealed class InstanceSpecsResult
    {
        /// <summary>
        /// Compatible version. Values:
        /// MySQL_5_7: MySQL 5.7 version. Default value.
        /// MySQL_8_0: MySQL 8.0 version.
        /// </summary>
        public readonly string? DbEngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceSpecsInstanceSpecResult> InstanceSpecs;
        /// <summary>
        /// Instance type. The value is DoubleNode.
        /// </summary>
        public readonly string? InstanceType;
        public readonly string? OutputFile;
        /// <summary>
        /// Instance specification code.
        /// </summary>
        public readonly string? SpecCode;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// Availability zone ID.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private InstanceSpecsResult(
            string? dbEngineVersion,

            string id,

            ImmutableArray<Outputs.InstanceSpecsInstanceSpecResult> instanceSpecs,

            string? instanceType,

            string? outputFile,

            string? specCode,

            int totalCount,

            string? zoneId)
        {
            DbEngineVersion = dbEngineVersion;
            Id = id;
            InstanceSpecs = instanceSpecs;
            InstanceType = instanceType;
            OutputFile = outputFile;
            SpecCode = specCode;
            TotalCount = totalCount;
            ZoneId = zoneId;
        }
    }
}
