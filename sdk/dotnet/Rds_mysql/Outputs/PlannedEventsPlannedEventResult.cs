// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rds_mysql.Outputs
{

    [OutputType]
    public sealed class PlannedEventsPlannedEventResult
    {
        /// <summary>
        /// The business impact of the planned event.
        /// </summary>
        public readonly string BusinessImpact;
        /// <summary>
        /// The database engine of the planned event.
        /// </summary>
        public readonly string DbEngine;
        /// <summary>
        /// The action of the planned event.
        /// </summary>
        public readonly string EventAction;
        /// <summary>
        /// The id of the planned event.
        /// </summary>
        public readonly string EventId;
        /// <summary>
        /// The name of the planned event.
        /// </summary>
        public readonly string EventName;
        /// <summary>
        /// The type of the planned event.
        /// </summary>
        public readonly string EventType;
        /// <summary>
        /// The id of the instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// The name of the instance.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// The latest postponable time. The format is yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string MaxDelayTime;
        /// <summary>
        /// The initially set start time. The format is yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string OriginBeginTime;
        /// <summary>
        /// The start time of the planned execution. The format is yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string PlannedBeginTime;
        /// <summary>
        /// The end time of the planned execution. The format is yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string PlannedEndTime;
        /// <summary>
        /// Description information of the operation and maintenance event.
        /// </summary>
        public readonly string PlannedEventDescription;
        /// <summary>
        /// The reasons for the occurrence of the event, which are provided to help you understand the reasons for the occurrence of unexpected events.
        /// </summary>
        public readonly string PlannedEventReason;
        /// <summary>
        /// The start time of the planned switch. The format is yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string PlannedSwitchBeginTime;
        /// <summary>
        /// The end time of the planned switch. The format is yyyy-MM-ddTHH:mm:ssZ (UTC time).
        /// </summary>
        public readonly string PlannedSwitchEndTime;
        /// <summary>
        /// The region.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The status of the planned event.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private PlannedEventsPlannedEventResult(
            string businessImpact,

            string dbEngine,

            string eventAction,

            string eventId,

            string eventName,

            string eventType,

            string instanceId,

            string instanceName,

            string maxDelayTime,

            string originBeginTime,

            string plannedBeginTime,

            string plannedEndTime,

            string plannedEventDescription,

            string plannedEventReason,

            string plannedSwitchBeginTime,

            string plannedSwitchEndTime,

            string region,

            string status)
        {
            BusinessImpact = businessImpact;
            DbEngine = dbEngine;
            EventAction = eventAction;
            EventId = eventId;
            EventName = eventName;
            EventType = eventType;
            InstanceId = instanceId;
            InstanceName = instanceName;
            MaxDelayTime = maxDelayTime;
            OriginBeginTime = originBeginTime;
            PlannedBeginTime = plannedBeginTime;
            PlannedEndTime = plannedEndTime;
            PlannedEventDescription = plannedEventDescription;
            PlannedEventReason = plannedEventReason;
            PlannedSwitchBeginTime = plannedSwitchBeginTime;
            PlannedSwitchEndTime = plannedSwitchEndTime;
            Region = region;
            Status = status;
        }
    }
}
