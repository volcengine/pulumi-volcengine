// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rds_mysql
{
    public static class GetEndpoints
    {
        /// <summary>
        /// Use this data source to query detailed information of rds mysql endpoints
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Rds_mysql.GetEndpoints.Invoke(new()
        ///     {
        ///         InstanceId = "mysql-38c3d4f05f6e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEndpointsResult> InvokeAsync(GetEndpointsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEndpointsResult>("volcengine:rds_mysql/getEndpoints:getEndpoints", args ?? new GetEndpointsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of rds mysql endpoints
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Rds_mysql.GetEndpoints.Invoke(new()
        ///     {
        ///         InstanceId = "mysql-38c3d4f05f6e",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEndpointsResult> Invoke(GetEndpointsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEndpointsResult>("volcengine:rds_mysql/getEndpoints:getEndpoints", args ?? new GetEndpointsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEndpointsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the mysql instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetEndpointsArgs()
        {
        }
        public static new GetEndpointsArgs Empty => new GetEndpointsArgs();
    }

    public sealed class GetEndpointsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the mysql instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetEndpointsInvokeArgs()
        {
        }
        public static new GetEndpointsInvokeArgs Empty => new GetEndpointsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEndpointsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEndpointsEndpointResult> Endpoints;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetEndpointsResult(
            ImmutableArray<Outputs.GetEndpointsEndpointResult> endpoints,

            string id,

            string instanceId,

            string? outputFile,

            int totalCount)
        {
            Endpoints = endpoints;
            Id = id;
            InstanceId = instanceId;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
