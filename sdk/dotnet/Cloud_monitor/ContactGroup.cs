// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_monitor
{
    /// <summary>
    /// Provides a resource to manage cloud monitor contact group
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Cloud_monitor.ContactGroup("foo", new()
    ///     {
    ///         ContactsIdLists = new[]
    ///         {
    ///             "1737376113733353472",
    ///             "1737375997680111616",
    ///         },
    ///         Description = "tftest",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CloudMonitorContactGroup can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:cloud_monitor/contactGroup:ContactGroup default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:cloud_monitor/contactGroup:ContactGroup")]
    public partial class ContactGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When creating a contact group, contacts should be added with their contact ID. The maximum number of IDs allowed is 10, meaning that the maximum number of members in a single contact group is 10.
        /// </summary>
        [Output("contactsIdLists")]
        public Output<ImmutableArray<string>> ContactsIdLists { get; private set; } = null!;

        /// <summary>
        /// The description of the contact group.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the contact group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a ContactGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContactGroup(string name, ContactGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("volcengine:cloud_monitor/contactGroup:ContactGroup", name, args ?? new ContactGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContactGroup(string name, Input<string> id, ContactGroupState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:cloud_monitor/contactGroup:ContactGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContactGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContactGroup Get(string name, Input<string> id, ContactGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ContactGroup(name, id, state, options);
        }
    }

    public sealed class ContactGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("contactsIdLists")]
        private InputList<string>? _contactsIdLists;

        /// <summary>
        /// When creating a contact group, contacts should be added with their contact ID. The maximum number of IDs allowed is 10, meaning that the maximum number of members in a single contact group is 10.
        /// </summary>
        public InputList<string> ContactsIdLists
        {
            get => _contactsIdLists ?? (_contactsIdLists = new InputList<string>());
            set => _contactsIdLists = value;
        }

        /// <summary>
        /// The description of the contact group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the contact group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ContactGroupArgs()
        {
        }
        public static new ContactGroupArgs Empty => new ContactGroupArgs();
    }

    public sealed class ContactGroupState : global::Pulumi.ResourceArgs
    {
        [Input("contactsIdLists")]
        private InputList<string>? _contactsIdLists;

        /// <summary>
        /// When creating a contact group, contacts should be added with their contact ID. The maximum number of IDs allowed is 10, meaning that the maximum number of members in a single contact group is 10.
        /// </summary>
        public InputList<string> ContactsIdLists
        {
            get => _contactsIdLists ?? (_contactsIdLists = new InputList<string>());
            set => _contactsIdLists = value;
        }

        /// <summary>
        /// The description of the contact group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the contact group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ContactGroupState()
        {
        }
        public static new ContactGroupState Empty => new ContactGroupState();
    }
}
