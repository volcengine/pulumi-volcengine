// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_monitor
{
    /// <summary>
    /// Provides a resource to manage cloud monitor rule
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Cloud_monitor.Rule("foo", new()
    ///     {
    ///         AlertMethods = new[]
    ///         {
    ///             "Email",
    ///             "Webhook",
    ///         },
    ///         ConditionOperator = "||",
    ///         Conditions = new[]
    ///         {
    ///             new Volcengine.Cloud_monitor.Inputs.RuleConditionArgs
    ///             {
    ///                 ComparisonOperator = "&gt;",
    ///                 MetricName = "DiskUsageAvail",
    ///                 MetricUnit = "Megabytes",
    ///                 Statistics = "avg",
    ///                 Threshold = "100",
    ///             },
    ///             new Volcengine.Cloud_monitor.Inputs.RuleConditionArgs
    ///             {
    ///                 ComparisonOperator = "&gt;",
    ///                 MetricName = "DiskUsageUtilization",
    ///                 MetricUnit = "Percent",
    ///                 Statistics = "avg",
    ///                 Threshold = "90",
    ///             },
    ///         },
    ///         ContactGroupIds = new[]
    ///         {
    ///             "174284616403161****",
    ///         },
    ///         Description = "acc-test",
    ///         EffectEndAt = "22:55",
    ///         EffectStartAt = "00:15",
    ///         EnableState = "disable",
    ///         EvaluationCount = 5,
    ///         Level = "warning",
    ///         MultipleConditions = true,
    ///         Namespace = "VCM_ECS",
    ///         OriginalDimensions = new[]
    ///         {
    ///             new Volcengine.Cloud_monitor.Inputs.RuleOriginalDimensionArgs
    ///             {
    ///                 Key = "ResourceID",
    ///                 Values = new[]
    ///                 {
    ///                     "*",
    ///                 },
    ///             },
    ///             new Volcengine.Cloud_monitor.Inputs.RuleOriginalDimensionArgs
    ///             {
    ///                 Key = "DiskName",
    ///                 Values = new[]
    ///                 {
    ///                     "vda",
    ///                     "vda1",
    ///                 },
    ///             },
    ///         },
    ///         RecoveryNotify = new Volcengine.Cloud_monitor.Inputs.RuleRecoveryNotifyArgs
    ///         {
    ///             Enable = true,
    ///         },
    ///         Regions = "cn-beijing",
    ///         RuleName = "acc-test-rule",
    ///         SilenceTime = 5,
    ///         SubNamespace = "Storage",
    ///         WebHook = "http://alert.volc.com/callback",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CloudMonitorRule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:cloud_monitor/rule:Rule default 174284623567451****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:cloud_monitor/rule:Rule")]
    public partial class Rule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The alert methods of the cloud monitor rule. Valid values: `Email`, `Phone`, `SMS`, `Webhook`.
        /// </summary>
        [Output("alertMethods")]
        public Output<ImmutableArray<string>> AlertMethods { get; private set; } = null!;

        /// <summary>
        /// The alert state of the cloud monitor rule.
        /// </summary>
        [Output("alertState")]
        public Output<string> AlertState { get; private set; } = null!;

        /// <summary>
        /// The condition operator of the cloud monitor rule. Valid values: `&amp;&amp;`, `||`.
        /// </summary>
        [Output("conditionOperator")]
        public Output<string> ConditionOperator { get; private set; } = null!;

        /// <summary>
        /// The conditions of the cloud monitor rule.
        /// </summary>
        [Output("conditions")]
        public Output<ImmutableArray<Outputs.RuleCondition>> Conditions { get; private set; } = null!;

        /// <summary>
        /// The contact group ids of the cloud monitor rule. When the alert method is `Email`, `SMS`, or `Phone`, This field must be specified.
        /// </summary>
        [Output("contactGroupIds")]
        public Output<ImmutableArray<string>> ContactGroupIds { get; private set; } = null!;

        /// <summary>
        /// The created time of the cloud monitor rule.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The description of the cloud monitor rule.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The effect end time of the cloud monitor rule. The expression is `HH:MM`.
        /// </summary>
        [Output("effectEndAt")]
        public Output<string> EffectEndAt { get; private set; } = null!;

        /// <summary>
        /// The effect start time of the cloud monitor rule. The expression is `HH:MM`.
        /// </summary>
        [Output("effectStartAt")]
        public Output<string> EffectStartAt { get; private set; } = null!;

        /// <summary>
        /// The enable state of the cloud monitor rule. Valid values: `enable`, `disable`.
        /// </summary>
        [Output("enableState")]
        public Output<string> EnableState { get; private set; } = null!;

        /// <summary>
        /// The evaluation count of the cloud monitor rule.
        /// </summary>
        [Output("evaluationCount")]
        public Output<int> EvaluationCount { get; private set; } = null!;

        /// <summary>
        /// The level of the cloud monitor rule. Valid values: `critical`, `warning`, `notice`.
        /// </summary>
        [Output("level")]
        public Output<string> Level { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the multiple conditions function of the cloud monitor rule.
        /// </summary>
        [Output("multipleConditions")]
        public Output<bool> MultipleConditions { get; private set; } = null!;

        /// <summary>
        /// The namespace of the cloud monitor rule.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// The original dimensions of the cloud monitor rule.
        /// </summary>
        [Output("originalDimensions")]
        public Output<ImmutableArray<Outputs.RuleOriginalDimension>> OriginalDimensions { get; private set; } = null!;

        /// <summary>
        /// The recovery notify of the cloud monitor rule.
        /// </summary>
        [Output("recoveryNotify")]
        public Output<Outputs.RuleRecoveryNotify> RecoveryNotify { get; private set; } = null!;

        /// <summary>
        /// The region ids of the cloud monitor rule. Only one region id can be specified currently.
        /// </summary>
        [Output("regions")]
        public Output<string> Regions { get; private set; } = null!;

        /// <summary>
        /// The name of the cloud monitor rule.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        /// <summary>
        /// The silence time of the cloud monitor rule. Unit in minutes. Valid values: 5, 30, 60, 180, 360, 720, 1440.
        /// </summary>
        [Output("silenceTime")]
        public Output<int> SilenceTime { get; private set; } = null!;

        /// <summary>
        /// The sub namespace of the cloud monitor rule.
        /// </summary>
        [Output("subNamespace")]
        public Output<string> SubNamespace { get; private set; } = null!;

        /// <summary>
        /// The updated time of the cloud monitor rule.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The web hook of the cloud monitor rule. When the alert method is `Webhook`, This field must be specified.
        /// </summary>
        [Output("webHook")]
        public Output<string?> WebHook { get; private set; } = null!;


        /// <summary>
        /// Create a Rule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Rule(string name, RuleArgs args, CustomResourceOptions? options = null)
            : base("volcengine:cloud_monitor/rule:Rule", name, args ?? new RuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Rule(string name, Input<string> id, RuleState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:cloud_monitor/rule:Rule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Rule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Rule Get(string name, Input<string> id, RuleState? state = null, CustomResourceOptions? options = null)
        {
            return new Rule(name, id, state, options);
        }
    }

    public sealed class RuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("alertMethods", required: true)]
        private InputList<string>? _alertMethods;

        /// <summary>
        /// The alert methods of the cloud monitor rule. Valid values: `Email`, `Phone`, `SMS`, `Webhook`.
        /// </summary>
        public InputList<string> AlertMethods
        {
            get => _alertMethods ?? (_alertMethods = new InputList<string>());
            set => _alertMethods = value;
        }

        /// <summary>
        /// The condition operator of the cloud monitor rule. Valid values: `&amp;&amp;`, `||`.
        /// </summary>
        [Input("conditionOperator")]
        public Input<string>? ConditionOperator { get; set; }

        [Input("conditions", required: true)]
        private InputList<Inputs.RuleConditionArgs>? _conditions;

        /// <summary>
        /// The conditions of the cloud monitor rule.
        /// </summary>
        public InputList<Inputs.RuleConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.RuleConditionArgs>());
            set => _conditions = value;
        }

        [Input("contactGroupIds")]
        private InputList<string>? _contactGroupIds;

        /// <summary>
        /// The contact group ids of the cloud monitor rule. When the alert method is `Email`, `SMS`, or `Phone`, This field must be specified.
        /// </summary>
        public InputList<string> ContactGroupIds
        {
            get => _contactGroupIds ?? (_contactGroupIds = new InputList<string>());
            set => _contactGroupIds = value;
        }

        /// <summary>
        /// The description of the cloud monitor rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The effect end time of the cloud monitor rule. The expression is `HH:MM`.
        /// </summary>
        [Input("effectEndAt", required: true)]
        public Input<string> EffectEndAt { get; set; } = null!;

        /// <summary>
        /// The effect start time of the cloud monitor rule. The expression is `HH:MM`.
        /// </summary>
        [Input("effectStartAt", required: true)]
        public Input<string> EffectStartAt { get; set; } = null!;

        /// <summary>
        /// The enable state of the cloud monitor rule. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("enableState", required: true)]
        public Input<string> EnableState { get; set; } = null!;

        /// <summary>
        /// The evaluation count of the cloud monitor rule.
        /// </summary>
        [Input("evaluationCount", required: true)]
        public Input<int> EvaluationCount { get; set; } = null!;

        /// <summary>
        /// The level of the cloud monitor rule. Valid values: `critical`, `warning`, `notice`.
        /// </summary>
        [Input("level", required: true)]
        public Input<string> Level { get; set; } = null!;

        /// <summary>
        /// Whether to enable the multiple conditions function of the cloud monitor rule.
        /// </summary>
        [Input("multipleConditions")]
        public Input<bool>? MultipleConditions { get; set; }

        /// <summary>
        /// The namespace of the cloud monitor rule.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("originalDimensions", required: true)]
        private InputList<Inputs.RuleOriginalDimensionArgs>? _originalDimensions;

        /// <summary>
        /// The original dimensions of the cloud monitor rule.
        /// </summary>
        public InputList<Inputs.RuleOriginalDimensionArgs> OriginalDimensions
        {
            get => _originalDimensions ?? (_originalDimensions = new InputList<Inputs.RuleOriginalDimensionArgs>());
            set => _originalDimensions = value;
        }

        /// <summary>
        /// The recovery notify of the cloud monitor rule.
        /// </summary>
        [Input("recoveryNotify")]
        public Input<Inputs.RuleRecoveryNotifyArgs>? RecoveryNotify { get; set; }

        /// <summary>
        /// The region ids of the cloud monitor rule. Only one region id can be specified currently.
        /// </summary>
        [Input("regions", required: true)]
        public Input<string> Regions { get; set; } = null!;

        /// <summary>
        /// The name of the cloud monitor rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// The silence time of the cloud monitor rule. Unit in minutes. Valid values: 5, 30, 60, 180, 360, 720, 1440.
        /// </summary>
        [Input("silenceTime", required: true)]
        public Input<int> SilenceTime { get; set; } = null!;

        /// <summary>
        /// The sub namespace of the cloud monitor rule.
        /// </summary>
        [Input("subNamespace", required: true)]
        public Input<string> SubNamespace { get; set; } = null!;

        /// <summary>
        /// The web hook of the cloud monitor rule. When the alert method is `Webhook`, This field must be specified.
        /// </summary>
        [Input("webHook")]
        public Input<string>? WebHook { get; set; }

        public RuleArgs()
        {
        }
        public static new RuleArgs Empty => new RuleArgs();
    }

    public sealed class RuleState : global::Pulumi.ResourceArgs
    {
        [Input("alertMethods")]
        private InputList<string>? _alertMethods;

        /// <summary>
        /// The alert methods of the cloud monitor rule. Valid values: `Email`, `Phone`, `SMS`, `Webhook`.
        /// </summary>
        public InputList<string> AlertMethods
        {
            get => _alertMethods ?? (_alertMethods = new InputList<string>());
            set => _alertMethods = value;
        }

        /// <summary>
        /// The alert state of the cloud monitor rule.
        /// </summary>
        [Input("alertState")]
        public Input<string>? AlertState { get; set; }

        /// <summary>
        /// The condition operator of the cloud monitor rule. Valid values: `&amp;&amp;`, `||`.
        /// </summary>
        [Input("conditionOperator")]
        public Input<string>? ConditionOperator { get; set; }

        [Input("conditions")]
        private InputList<Inputs.RuleConditionGetArgs>? _conditions;

        /// <summary>
        /// The conditions of the cloud monitor rule.
        /// </summary>
        public InputList<Inputs.RuleConditionGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.RuleConditionGetArgs>());
            set => _conditions = value;
        }

        [Input("contactGroupIds")]
        private InputList<string>? _contactGroupIds;

        /// <summary>
        /// The contact group ids of the cloud monitor rule. When the alert method is `Email`, `SMS`, or `Phone`, This field must be specified.
        /// </summary>
        public InputList<string> ContactGroupIds
        {
            get => _contactGroupIds ?? (_contactGroupIds = new InputList<string>());
            set => _contactGroupIds = value;
        }

        /// <summary>
        /// The created time of the cloud monitor rule.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The description of the cloud monitor rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The effect end time of the cloud monitor rule. The expression is `HH:MM`.
        /// </summary>
        [Input("effectEndAt")]
        public Input<string>? EffectEndAt { get; set; }

        /// <summary>
        /// The effect start time of the cloud monitor rule. The expression is `HH:MM`.
        /// </summary>
        [Input("effectStartAt")]
        public Input<string>? EffectStartAt { get; set; }

        /// <summary>
        /// The enable state of the cloud monitor rule. Valid values: `enable`, `disable`.
        /// </summary>
        [Input("enableState")]
        public Input<string>? EnableState { get; set; }

        /// <summary>
        /// The evaluation count of the cloud monitor rule.
        /// </summary>
        [Input("evaluationCount")]
        public Input<int>? EvaluationCount { get; set; }

        /// <summary>
        /// The level of the cloud monitor rule. Valid values: `critical`, `warning`, `notice`.
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// Whether to enable the multiple conditions function of the cloud monitor rule.
        /// </summary>
        [Input("multipleConditions")]
        public Input<bool>? MultipleConditions { get; set; }

        /// <summary>
        /// The namespace of the cloud monitor rule.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("originalDimensions")]
        private InputList<Inputs.RuleOriginalDimensionGetArgs>? _originalDimensions;

        /// <summary>
        /// The original dimensions of the cloud monitor rule.
        /// </summary>
        public InputList<Inputs.RuleOriginalDimensionGetArgs> OriginalDimensions
        {
            get => _originalDimensions ?? (_originalDimensions = new InputList<Inputs.RuleOriginalDimensionGetArgs>());
            set => _originalDimensions = value;
        }

        /// <summary>
        /// The recovery notify of the cloud monitor rule.
        /// </summary>
        [Input("recoveryNotify")]
        public Input<Inputs.RuleRecoveryNotifyGetArgs>? RecoveryNotify { get; set; }

        /// <summary>
        /// The region ids of the cloud monitor rule. Only one region id can be specified currently.
        /// </summary>
        [Input("regions")]
        public Input<string>? Regions { get; set; }

        /// <summary>
        /// The name of the cloud monitor rule.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// The silence time of the cloud monitor rule. Unit in minutes. Valid values: 5, 30, 60, 180, 360, 720, 1440.
        /// </summary>
        [Input("silenceTime")]
        public Input<int>? SilenceTime { get; set; }

        /// <summary>
        /// The sub namespace of the cloud monitor rule.
        /// </summary>
        [Input("subNamespace")]
        public Input<string>? SubNamespace { get; set; }

        /// <summary>
        /// The updated time of the cloud monitor rule.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The web hook of the cloud monitor rule. When the alert method is `Webhook`, This field must be specified.
        /// </summary>
        [Input("webHook")]
        public Input<string>? WebHook { get; set; }

        public RuleState()
        {
        }
        public static new RuleState Empty => new RuleState();
    }
}
