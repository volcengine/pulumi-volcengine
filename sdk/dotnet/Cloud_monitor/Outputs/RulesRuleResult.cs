// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_monitor.Outputs
{

    [OutputType]
    public sealed class RulesRuleResult
    {
        /// <summary>
        /// The alert methods of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<string> AlertMethods;
        /// <summary>
        /// The alert state of the cloud monitor rule. Valid values: `altering`, `normal`.
        /// </summary>
        public readonly string AlertState;
        /// <summary>
        /// The condition operator of the cloud monitor rule. Valid values: `&amp;&amp;`, `||`.
        /// </summary>
        public readonly string ConditionOperator;
        /// <summary>
        /// The conditions of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesRuleConditionResult> Conditions;
        /// <summary>
        /// The contact group ids of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<string> ContactGroupIds;
        /// <summary>
        /// The created time of the cloud monitor rule.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The description of the cloud monitor rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The effect end time of the cloud monitor rule.
        /// </summary>
        public readonly string EffectEndAt;
        /// <summary>
        /// The effect start time of the cloud monitor rule.
        /// </summary>
        public readonly string EffectStartAt;
        /// <summary>
        /// The enable state of the cloud monitor rule. Valid values: `enable`, `disable`.
        /// </summary>
        public readonly string EnableState;
        /// <summary>
        /// The evaluation count of the cloud monitor rule.
        /// </summary>
        public readonly int EvaluationCount;
        /// <summary>
        /// The id of the cloud monitor rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The level of the cloud monitor rule. Valid values: `critical`, `warning`, `notice`.
        /// </summary>
        public readonly string Level;
        /// <summary>
        /// Whether to enable the multiple conditions function of the cloud monitor rule.
        /// </summary>
        public readonly bool MultipleConditions;
        /// <summary>
        /// The namespace of the cloud monitor rule.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The original dimensions of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesRuleOriginalDimensionResult> OriginalDimensions;
        /// <summary>
        /// The region id of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<string> Regions;
        /// <summary>
        /// The name of the cloud monitor rule. This field support fuzzy query.
        /// </summary>
        public readonly string RuleName;
        /// <summary>
        /// The silence time of the cloud monitor rule. Unit in minutes.
        /// </summary>
        public readonly int SilenceTime;
        /// <summary>
        /// The sub namespace of the cloud monitor rule.
        /// </summary>
        public readonly string SubNamespace;
        /// <summary>
        /// The updated time of the cloud monitor rule.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// The web hook of the cloud monitor rule.
        /// </summary>
        public readonly string WebHook;

        [OutputConstructor]
        private RulesRuleResult(
            ImmutableArray<string> alertMethods,

            string alertState,

            string conditionOperator,

            ImmutableArray<Outputs.RulesRuleConditionResult> conditions,

            ImmutableArray<string> contactGroupIds,

            string createdAt,

            string description,

            string effectEndAt,

            string effectStartAt,

            string enableState,

            int evaluationCount,

            string id,

            string level,

            bool multipleConditions,

            string @namespace,

            ImmutableArray<Outputs.RulesRuleOriginalDimensionResult> originalDimensions,

            ImmutableArray<string> regions,

            string ruleName,

            int silenceTime,

            string subNamespace,

            string updatedAt,

            string webHook)
        {
            AlertMethods = alertMethods;
            AlertState = alertState;
            ConditionOperator = conditionOperator;
            Conditions = conditions;
            ContactGroupIds = contactGroupIds;
            CreatedAt = createdAt;
            Description = description;
            EffectEndAt = effectEndAt;
            EffectStartAt = effectStartAt;
            EnableState = enableState;
            EvaluationCount = evaluationCount;
            Id = id;
            Level = level;
            MultipleConditions = multipleConditions;
            Namespace = @namespace;
            OriginalDimensions = originalDimensions;
            Regions = regions;
            RuleName = ruleName;
            SilenceTime = silenceTime;
            SubNamespace = subNamespace;
            UpdatedAt = updatedAt;
            WebHook = webHook;
        }
    }
}
