// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_monitor
{
    public static class Rules
    {
        /// <summary>
        /// Use this data source to query detailed information of cloud monitor rules
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Cloud_monitor.Rules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "174402785374661****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<RulesResult> InvokeAsync(RulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<RulesResult>("volcengine:cloud_monitor/rules:Rules", args ?? new RulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cloud monitor rules
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Cloud_monitor.Rules.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "174402785374661****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<RulesResult> Invoke(RulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<RulesResult>("volcengine:cloud_monitor/rules:Rules", args ?? new RulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class RulesArgs : global::Pulumi.InvokeArgs
    {
        [Input("alertStates")]
        private List<string>? _alertStates;

        /// <summary>
        /// The alert state of the cloud monitor rule. Valid values: `altering`, `normal`.
        /// </summary>
        public List<string> AlertStates
        {
            get => _alertStates ?? (_alertStates = new List<string>());
            set => _alertStates = value;
        }

        [Input("enableStates")]
        private List<string>? _enableStates;

        /// <summary>
        /// The enable state of the cloud monitor rule. Valid values: `enable`, `disable`.
        /// </summary>
        public List<string> EnableStates
        {
            get => _enableStates ?? (_enableStates = new List<string>());
            set => _enableStates = value;
        }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of cloud monitor ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("levels")]
        private List<string>? _levels;

        /// <summary>
        /// The level of the cloud monitor rule. Valid values: `critical`, `warning`, `notice`.
        /// </summary>
        public List<string> Levels
        {
            get => _levels ?? (_levels = new List<string>());
            set => _levels = value;
        }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("namespaces")]
        private List<string>? _namespaces;

        /// <summary>
        /// The namespace of the cloud monitor rule.
        /// </summary>
        public List<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new List<string>());
            set => _namespaces = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The name of the cloud monitor rule. This field support fuzzy query.
        /// </summary>
        [Input("ruleName")]
        public string? RuleName { get; set; }

        public RulesArgs()
        {
        }
        public static new RulesArgs Empty => new RulesArgs();
    }

    public sealed class RulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("alertStates")]
        private InputList<string>? _alertStates;

        /// <summary>
        /// The alert state of the cloud monitor rule. Valid values: `altering`, `normal`.
        /// </summary>
        public InputList<string> AlertStates
        {
            get => _alertStates ?? (_alertStates = new InputList<string>());
            set => _alertStates = value;
        }

        [Input("enableStates")]
        private InputList<string>? _enableStates;

        /// <summary>
        /// The enable state of the cloud monitor rule. Valid values: `enable`, `disable`.
        /// </summary>
        public InputList<string> EnableStates
        {
            get => _enableStates ?? (_enableStates = new InputList<string>());
            set => _enableStates = value;
        }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of cloud monitor ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("levels")]
        private InputList<string>? _levels;

        /// <summary>
        /// The level of the cloud monitor rule. Valid values: `critical`, `warning`, `notice`.
        /// </summary>
        public InputList<string> Levels
        {
            get => _levels ?? (_levels = new InputList<string>());
            set => _levels = value;
        }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("namespaces")]
        private InputList<string>? _namespaces;

        /// <summary>
        /// The namespace of the cloud monitor rule.
        /// </summary>
        public InputList<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new InputList<string>());
            set => _namespaces = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The name of the cloud monitor rule. This field support fuzzy query.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        public RulesInvokeArgs()
        {
        }
        public static new RulesInvokeArgs Empty => new RulesInvokeArgs();
    }


    [OutputType]
    public sealed class RulesResult
    {
        /// <summary>
        /// The alert state of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<string> AlertStates;
        /// <summary>
        /// The enable state of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<string> EnableStates;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The level of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<string> Levels;
        public readonly string? NameRegex;
        /// <summary>
        /// The namespace of the cloud monitor rule.
        /// </summary>
        public readonly ImmutableArray<string> Namespaces;
        public readonly string? OutputFile;
        /// <summary>
        /// The name of the cloud monitor rule.
        /// </summary>
        public readonly string? RuleName;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesRuleResult> Rules;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private RulesResult(
            ImmutableArray<string> alertStates,

            ImmutableArray<string> enableStates,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<string> levels,

            string? nameRegex,

            ImmutableArray<string> namespaces,

            string? outputFile,

            string? ruleName,

            ImmutableArray<Outputs.RulesRuleResult> rules,

            int totalCount)
        {
            AlertStates = alertStates;
            EnableStates = enableStates;
            Id = id;
            Ids = ids;
            Levels = levels;
            NameRegex = nameRegex;
            Namespaces = namespaces;
            OutputFile = outputFile;
            RuleName = ruleName;
            Rules = rules;
            TotalCount = totalCount;
        }
    }
}
