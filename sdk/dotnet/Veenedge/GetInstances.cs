// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Veenedge
{
    public static class GetInstances
    {
        /// <summary>
        /// Use this data source to query detailed information of veenedge instances
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Veenedge.GetInstances.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "veen28*****21",
        ///             "veen177110*****172",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInstancesResult> InvokeAsync(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("volcengine:veenedge/getInstances:getInstances", args ?? new GetInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of veenedge instances
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Veenedge.GetInstances.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "veen28*****21",
        ///             "veen177110*****172",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInstancesResult> Invoke(GetInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstancesResult>("volcengine:veenedge/getInstances:getInstances", args ?? new GetInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstancesArgs : global::Pulumi.InvokeArgs
    {
        [Input("cloudServerIds")]
        private List<string>? _cloudServerIds;

        /// <summary>
        /// The list of cloud server ids.
        /// </summary>
        public List<string> CloudServerIds
        {
            get => _cloudServerIds ?? (_cloudServerIds = new List<string>());
            set => _cloudServerIds = value;
        }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of instance IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("names")]
        private List<string>? _names;

        /// <summary>
        /// A list of instance names.
        /// </summary>
        public List<string> Names
        {
            get => _names ?? (_names = new List<string>());
            set => _names = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("statuses")]
        private List<string>? _statuses;

        /// <summary>
        /// The list of instance status. The value can be `opening` or `starting` or `running` or `stopping` or `stop` or `rebooting` or `terminating`.
        /// </summary>
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        public GetInstancesArgs()
        {
        }
        public static new GetInstancesArgs Empty => new GetInstancesArgs();
    }

    public sealed class GetInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("cloudServerIds")]
        private InputList<string>? _cloudServerIds;

        /// <summary>
        /// The list of cloud server ids.
        /// </summary>
        public InputList<string> CloudServerIds
        {
            get => _cloudServerIds ?? (_cloudServerIds = new InputList<string>());
            set => _cloudServerIds = value;
        }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of instance IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("names")]
        private InputList<string>? _names;

        /// <summary>
        /// A list of instance names.
        /// </summary>
        public InputList<string> Names
        {
            get => _names ?? (_names = new InputList<string>());
            set => _names = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("statuses")]
        private InputList<string>? _statuses;

        /// <summary>
        /// The list of instance status. The value can be `opening` or `starting` or `running` or `stopping` or `stop` or `rebooting` or `terminating`.
        /// </summary>
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        public GetInstancesInvokeArgs()
        {
        }
        public static new GetInstancesInvokeArgs Empty => new GetInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstancesResult
    {
        public readonly ImmutableArray<string> CloudServerIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The collection of instance query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstanceResult> Instances;
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly ImmutableArray<string> Statuses;
        /// <summary>
        /// The total count of instance query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetInstancesResult(
            ImmutableArray<string> cloudServerIds,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetInstancesInstanceResult> instances,

            ImmutableArray<string> names,

            string? outputFile,

            ImmutableArray<string> statuses,

            int totalCount)
        {
            CloudServerIds = cloudServerIds;
            Id = id;
            Ids = ids;
            Instances = instances;
            Names = names;
            OutputFile = outputFile;
            Statuses = statuses;
            TotalCount = totalCount;
        }
    }
}
