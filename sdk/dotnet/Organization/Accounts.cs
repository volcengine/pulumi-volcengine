// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Organization
{
    public static class Accounts
    {
        /// <summary>
        /// Use this data source to query detailed information of organization accounts
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Organization.Accounts.Invoke(new()
        ///     {
        ///         Search = "210061****",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<AccountsResult> InvokeAsync(AccountsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<AccountsResult>("volcengine:organization/accounts:Accounts", args ?? new AccountsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of organization accounts
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Organization.Accounts.Invoke(new()
        ///     {
        ///         Search = "210061****",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<AccountsResult> Invoke(AccountsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<AccountsResult>("volcengine:organization/accounts:Accounts", args ?? new AccountsInvokeArgs(), options.WithDefaults());
    }


    public sealed class AccountsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// The id of the organization unit.
        /// </summary>
        [Input("orgUnitId")]
        public string? OrgUnitId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The id or the show name of the account. This field supports fuzzy query.
        /// </summary>
        [Input("search")]
        public string? Search { get; set; }

        /// <summary>
        /// The id of the verification.
        /// </summary>
        [Input("verificationId")]
        public string? VerificationId { get; set; }

        public AccountsArgs()
        {
        }
        public static new AccountsArgs Empty => new AccountsArgs();
    }

    public sealed class AccountsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// The id of the organization unit.
        /// </summary>
        [Input("orgUnitId")]
        public Input<string>? OrgUnitId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The id or the show name of the account. This field supports fuzzy query.
        /// </summary>
        [Input("search")]
        public Input<string>? Search { get; set; }

        /// <summary>
        /// The id of the verification.
        /// </summary>
        [Input("verificationId")]
        public Input<string>? VerificationId { get; set; }

        public AccountsInvokeArgs()
        {
        }
        public static new AccountsInvokeArgs Empty => new AccountsInvokeArgs();
    }


    [OutputType]
    public sealed class AccountsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.AccountsAccountResult> Accounts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        /// <summary>
        /// The id of the organization unit.
        /// </summary>
        public readonly string? OrgUnitId;
        public readonly string? OutputFile;
        public readonly string? Search;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        public readonly string? VerificationId;

        [OutputConstructor]
        private AccountsResult(
            ImmutableArray<Outputs.AccountsAccountResult> accounts,

            string id,

            string? nameRegex,

            string? orgUnitId,

            string? outputFile,

            string? search,

            int totalCount,

            string? verificationId)
        {
            Accounts = accounts;
            Id = id;
            NameRegex = nameRegex;
            OrgUnitId = orgUnitId;
            OutputFile = outputFile;
            Search = search;
            TotalCount = totalCount;
            VerificationId = verificationId;
        }
    }
}
