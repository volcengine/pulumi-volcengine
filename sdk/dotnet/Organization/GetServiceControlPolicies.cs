// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Organization
{
    public static class GetServiceControlPolicies
    {
        /// <summary>
        /// Use this data source to query detailed information of organization service control policies
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Organization.GetServiceControlPolicies.Invoke(new()
        ///     {
        ///         PolicyType = "Custom",
        ///         Query = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServiceControlPoliciesResult> InvokeAsync(GetServiceControlPoliciesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceControlPoliciesResult>("volcengine:organization/getServiceControlPolicies:getServiceControlPolicies", args ?? new GetServiceControlPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of organization service control policies
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Organization.GetServiceControlPolicies.Invoke(new()
        ///     {
        ///         PolicyType = "Custom",
        ///         Query = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServiceControlPoliciesResult> Invoke(GetServiceControlPoliciesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceControlPoliciesResult>("volcengine:organization/getServiceControlPolicies:getServiceControlPolicies", args ?? new GetServiceControlPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceControlPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The type of policy. The value can be System or Custom.
        /// </summary>
        [Input("policyType")]
        public string? PolicyType { get; set; }

        /// <summary>
        /// Query policies, support policy name or description.
        /// </summary>
        [Input("query")]
        public string? Query { get; set; }

        public GetServiceControlPoliciesArgs()
        {
        }
        public static new GetServiceControlPoliciesArgs Empty => new GetServiceControlPoliciesArgs();
    }

    public sealed class GetServiceControlPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The type of policy. The value can be System or Custom.
        /// </summary>
        [Input("policyType")]
        public Input<string>? PolicyType { get; set; }

        /// <summary>
        /// Query policies, support policy name or description.
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        public GetServiceControlPoliciesInvokeArgs()
        {
        }
        public static new GetServiceControlPoliciesInvokeArgs Empty => new GetServiceControlPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceControlPoliciesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of Policy query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceControlPoliciesPolicyResult> Policies;
        /// <summary>
        /// The type of the Policy.
        /// </summary>
        public readonly string? PolicyType;
        public readonly string? Query;
        /// <summary>
        /// The total count of Policy query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetServiceControlPoliciesResult(
            string id,

            string? outputFile,

            ImmutableArray<Outputs.GetServiceControlPoliciesPolicyResult> policies,

            string? policyType,

            string? query,

            int totalCount)
        {
            Id = id;
            OutputFile = outputFile;
            Policies = policies;
            PolicyType = policyType;
            Query = query;
            TotalCount = totalCount;
        }
    }
}
