// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Organization
{
    /// <summary>
    /// Provides a resource to manage organization account
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooUnit = new Volcengine.Organization.Unit("fooUnit", new()
    ///     {
    ///         ParentId = "730671013833632****",
    ///         Description = "acc-test",
    ///     });
    /// 
    ///     var fooAccount = new Volcengine.Organization.Account("fooAccount", new()
    ///     {
    ///         AccountName = "acc-test-account",
    ///         ShowName = "acc-test-account",
    ///         Description = "acc-test",
    ///         OrgUnitId = fooUnit.Id,
    ///         VerificationRelationId = "210026****",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Organization.Inputs.AccountTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// OrganizationAccount can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:organization/account:Account default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:organization/account:Account")]
    public partial class Account : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the account.
        /// </summary>
        [Output("accountName")]
        public Output<string> AccountName { get; private set; } = null!;

        /// <summary>
        /// The description of the account.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the iam role.
        /// </summary>
        [Output("iamRole")]
        public Output<string> IamRole { get; private set; } = null!;

        /// <summary>
        /// The id of the organization.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// The id of the organization unit. Default is root organization.
        /// </summary>
        [Output("orgUnitId")]
        public Output<string> OrgUnitId { get; private set; } = null!;

        /// <summary>
        /// The name of the organization unit.
        /// </summary>
        [Output("orgUnitName")]
        public Output<string> OrgUnitName { get; private set; } = null!;

        /// <summary>
        /// The id of the organization verification.
        /// </summary>
        [Output("orgVerificationId")]
        public Output<string> OrgVerificationId { get; private set; } = null!;

        /// <summary>
        /// The owner id of the account.
        /// </summary>
        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        /// <summary>
        /// The show name of the account.
        /// </summary>
        [Output("showName")]
        public Output<string> ShowName { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.AccountTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The verification relation id of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Output("verificationRelationId")]
        public Output<string?> VerificationRelationId { get; private set; } = null!;


        /// <summary>
        /// Create a Account resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Account(string name, AccountArgs args, CustomResourceOptions? options = null)
            : base("volcengine:organization/account:Account", name, args ?? new AccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Account(string name, Input<string> id, AccountState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:organization/account:Account", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Account resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Account Get(string name, Input<string> id, AccountState? state = null, CustomResourceOptions? options = null)
        {
            return new Account(name, id, state, options);
        }
    }

    public sealed class AccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// The description of the account.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The id of the organization unit. Default is root organization.
        /// </summary>
        [Input("orgUnitId")]
        public Input<string>? OrgUnitId { get; set; }

        /// <summary>
        /// The show name of the account.
        /// </summary>
        [Input("showName", required: true)]
        public Input<string> ShowName { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.AccountTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.AccountTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.AccountTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The verification relation id of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("verificationRelationId")]
        public Input<string>? VerificationRelationId { get; set; }

        public AccountArgs()
        {
        }
        public static new AccountArgs Empty => new AccountArgs();
    }

    public sealed class AccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the account.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        /// <summary>
        /// The description of the account.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the iam role.
        /// </summary>
        [Input("iamRole")]
        public Input<string>? IamRole { get; set; }

        /// <summary>
        /// The id of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// The id of the organization unit. Default is root organization.
        /// </summary>
        [Input("orgUnitId")]
        public Input<string>? OrgUnitId { get; set; }

        /// <summary>
        /// The name of the organization unit.
        /// </summary>
        [Input("orgUnitName")]
        public Input<string>? OrgUnitName { get; set; }

        /// <summary>
        /// The id of the organization verification.
        /// </summary>
        [Input("orgVerificationId")]
        public Input<string>? OrgVerificationId { get; set; }

        /// <summary>
        /// The owner id of the account.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// The show name of the account.
        /// </summary>
        [Input("showName")]
        public Input<string>? ShowName { get; set; }

        [Input("tags")]
        private InputList<Inputs.AccountTagGetArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.AccountTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.AccountTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The verification relation id of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        /// </summary>
        [Input("verificationRelationId")]
        public Input<string>? VerificationRelationId { get; set; }

        public AccountState()
        {
        }
        public static new AccountState Empty => new AccountState();
    }
}
