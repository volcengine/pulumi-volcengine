// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Privatelink
{
    public static class VpcEndpointServicePermissions
    {
        /// <summary>
        /// Use this data source to query detailed information of privatelink vpc endpoint service permissions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
        /// 
        ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
        ///     {
        ///         VpcName = "acc-test-vpc",
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
        ///     {
        ///         SubnetName = "acc-test-subnet",
        ///         CidrBlock = "172.16.0.0/24",
        ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
        ///         VpcId = fooVpc.Id,
        ///     });
        /// 
        ///     var fooClb = new Volcengine.Clb.Clb("fooClb", new()
        ///     {
        ///         Type = "public",
        ///         SubnetId = fooSubnet.Id,
        ///         LoadBalancerSpec = "small_1",
        ///         Description = "acc-test-demo",
        ///         LoadBalancerName = "acc-test-clb",
        ///         LoadBalancerBillingType = "PostPaid",
        ///         EipBillingConfig = new Volcengine.Clb.Inputs.ClbEipBillingConfigArgs
        ///         {
        ///             Isp = "BGP",
        ///             EipBillingType = "PostPaidByBandwidth",
        ///             Bandwidth = 1,
        ///         },
        ///         Tags = new[]
        ///         {
        ///             new Volcengine.Clb.Inputs.ClbTagArgs
        ///             {
        ///                 Key = "k1",
        ///                 Value = "v1",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooVpcEndpointService = new Volcengine.Privatelink.VpcEndpointService("fooVpcEndpointService", new()
        ///     {
        ///         Resources = new[]
        ///         {
        ///             new Volcengine.Privatelink.Inputs.VpcEndpointServiceResourceArgs
        ///             {
        ///                 ResourceId = fooClb.Id,
        ///                 ResourceType = "CLB",
        ///             },
        ///         },
        ///         Description = "acc-test",
        ///         AutoAcceptEnabled = true,
        ///     });
        /// 
        ///     var fooVpcEndpointServicePermission = new Volcengine.Privatelink.VpcEndpointServicePermission("fooVpcEndpointServicePermission", new()
        ///     {
        ///         ServiceId = fooVpcEndpointService.Id,
        ///         PermitAccountId = "210000000",
        ///     });
        /// 
        ///     var fooVpcEndpointServicePermissions = Volcengine.Privatelink.VpcEndpointServicePermissions.Invoke(new()
        ///     {
        ///         PermitAccountId = fooVpcEndpointServicePermission.PermitAccountId,
        ///         ServiceId = fooVpcEndpointService.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<VpcEndpointServicePermissionsResult> InvokeAsync(VpcEndpointServicePermissionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<VpcEndpointServicePermissionsResult>("volcengine:privatelink/vpcEndpointServicePermissions:VpcEndpointServicePermissions", args ?? new VpcEndpointServicePermissionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of privatelink vpc endpoint service permissions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
        /// 
        ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
        ///     {
        ///         VpcName = "acc-test-vpc",
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
        ///     {
        ///         SubnetName = "acc-test-subnet",
        ///         CidrBlock = "172.16.0.0/24",
        ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
        ///         VpcId = fooVpc.Id,
        ///     });
        /// 
        ///     var fooClb = new Volcengine.Clb.Clb("fooClb", new()
        ///     {
        ///         Type = "public",
        ///         SubnetId = fooSubnet.Id,
        ///         LoadBalancerSpec = "small_1",
        ///         Description = "acc-test-demo",
        ///         LoadBalancerName = "acc-test-clb",
        ///         LoadBalancerBillingType = "PostPaid",
        ///         EipBillingConfig = new Volcengine.Clb.Inputs.ClbEipBillingConfigArgs
        ///         {
        ///             Isp = "BGP",
        ///             EipBillingType = "PostPaidByBandwidth",
        ///             Bandwidth = 1,
        ///         },
        ///         Tags = new[]
        ///         {
        ///             new Volcengine.Clb.Inputs.ClbTagArgs
        ///             {
        ///                 Key = "k1",
        ///                 Value = "v1",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooVpcEndpointService = new Volcengine.Privatelink.VpcEndpointService("fooVpcEndpointService", new()
        ///     {
        ///         Resources = new[]
        ///         {
        ///             new Volcengine.Privatelink.Inputs.VpcEndpointServiceResourceArgs
        ///             {
        ///                 ResourceId = fooClb.Id,
        ///                 ResourceType = "CLB",
        ///             },
        ///         },
        ///         Description = "acc-test",
        ///         AutoAcceptEnabled = true,
        ///     });
        /// 
        ///     var fooVpcEndpointServicePermission = new Volcengine.Privatelink.VpcEndpointServicePermission("fooVpcEndpointServicePermission", new()
        ///     {
        ///         ServiceId = fooVpcEndpointService.Id,
        ///         PermitAccountId = "210000000",
        ///     });
        /// 
        ///     var fooVpcEndpointServicePermissions = Volcengine.Privatelink.VpcEndpointServicePermissions.Invoke(new()
        ///     {
        ///         PermitAccountId = fooVpcEndpointServicePermission.PermitAccountId,
        ///         ServiceId = fooVpcEndpointService.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<VpcEndpointServicePermissionsResult> Invoke(VpcEndpointServicePermissionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<VpcEndpointServicePermissionsResult>("volcengine:privatelink/vpcEndpointServicePermissions:VpcEndpointServicePermissions", args ?? new VpcEndpointServicePermissionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class VpcEndpointServicePermissionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The Id of permit account.
        /// </summary>
        [Input("permitAccountId")]
        public string? PermitAccountId { get; set; }

        /// <summary>
        /// The Id of service.
        /// </summary>
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public VpcEndpointServicePermissionsArgs()
        {
        }
        public static new VpcEndpointServicePermissionsArgs Empty => new VpcEndpointServicePermissionsArgs();
    }

    public sealed class VpcEndpointServicePermissionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The Id of permit account.
        /// </summary>
        [Input("permitAccountId")]
        public Input<string>? PermitAccountId { get; set; }

        /// <summary>
        /// The Id of service.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public VpcEndpointServicePermissionsInvokeArgs()
        {
        }
        public static new VpcEndpointServicePermissionsInvokeArgs Empty => new VpcEndpointServicePermissionsInvokeArgs();
    }


    [OutputType]
    public sealed class VpcEndpointServicePermissionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.VpcEndpointServicePermissionsPermissionResult> Permissions;
        /// <summary>
        /// The permit account id.
        /// </summary>
        public readonly string? PermitAccountId;
        public readonly string ServiceId;
        /// <summary>
        /// Returns the total amount of the data list.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private VpcEndpointServicePermissionsResult(
            string id,

            string? outputFile,

            ImmutableArray<Outputs.VpcEndpointServicePermissionsPermissionResult> permissions,

            string? permitAccountId,

            string serviceId,

            int totalCount)
        {
            Id = id;
            OutputFile = outputFile;
            Permissions = permissions;
            PermitAccountId = permitAccountId;
            ServiceId = serviceId;
            TotalCount = totalCount;
        }
    }
}
