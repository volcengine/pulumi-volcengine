// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_identity
{
    public static class GetPermissionSets
    {
        /// <summary>
        /// Use this data source to query detailed information of cloud identity permission sets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooPermissionSet = new List&lt;Volcengine.Cloud_identity.PermissionSet&gt;();
        ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
        ///     {
        ///         var range = new { Value = rangeIndex };
        ///         fooPermissionSet.Add(new Volcengine.Cloud_identity.PermissionSet($"fooPermissionSet-{range.Value}", new()
        ///         {
        ///             Description = "tf",
        ///             SessionDuration = 5000,
        ///             PermissionPolicies = new[]
        ///             {
        ///                 new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///                 {
        ///                     PermissionPolicyType = "System",
        ///                     PermissionPolicyName = "AdministratorAccess",
        ///                     InlinePolicyDocument = "",
        ///                 },
        ///                 new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///                 {
        ///                     PermissionPolicyType = "System",
        ///                     PermissionPolicyName = "ReadOnlyAccess",
        ///                     InlinePolicyDocument = "",
        ///                 },
        ///                 new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///                 {
        ///                     PermissionPolicyType = "Inline",
        ///                     InlinePolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
        ///                 },
        ///             },
        ///         }));
        ///     }
        ///     var fooPermissionSets = Volcengine.Cloud_identity.GetPermissionSets.Invoke(new()
        ///     {
        ///         Ids = fooPermissionSet.Select(__item =&gt; __item.Id).ToList(),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPermissionSetsResult> InvokeAsync(GetPermissionSetsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPermissionSetsResult>("volcengine:cloud_identity/getPermissionSets:getPermissionSets", args ?? new GetPermissionSetsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cloud identity permission sets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooPermissionSet = new List&lt;Volcengine.Cloud_identity.PermissionSet&gt;();
        ///     for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
        ///     {
        ///         var range = new { Value = rangeIndex };
        ///         fooPermissionSet.Add(new Volcengine.Cloud_identity.PermissionSet($"fooPermissionSet-{range.Value}", new()
        ///         {
        ///             Description = "tf",
        ///             SessionDuration = 5000,
        ///             PermissionPolicies = new[]
        ///             {
        ///                 new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///                 {
        ///                     PermissionPolicyType = "System",
        ///                     PermissionPolicyName = "AdministratorAccess",
        ///                     InlinePolicyDocument = "",
        ///                 },
        ///                 new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///                 {
        ///                     PermissionPolicyType = "System",
        ///                     PermissionPolicyName = "ReadOnlyAccess",
        ///                     InlinePolicyDocument = "",
        ///                 },
        ///                 new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///                 {
        ///                     PermissionPolicyType = "Inline",
        ///                     InlinePolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
        ///                 },
        ///             },
        ///         }));
        ///     }
        ///     var fooPermissionSets = Volcengine.Cloud_identity.GetPermissionSets.Invoke(new()
        ///     {
        ///         Ids = fooPermissionSet.Select(__item =&gt; __item.Id).ToList(),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPermissionSetsResult> Invoke(GetPermissionSetsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPermissionSetsResult>("volcengine:cloud_identity/getPermissionSets:getPermissionSets", args ?? new GetPermissionSetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPermissionSetsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of cloud identity permission set IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A Name Regex of cloud identity permission set.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetPermissionSetsArgs()
        {
        }
        public static new GetPermissionSetsArgs Empty => new GetPermissionSetsArgs();
    }

    public sealed class GetPermissionSetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of cloud identity permission set IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A Name Regex of cloud identity permission set.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetPermissionSetsInvokeArgs()
        {
        }
        public static new GetPermissionSetsInvokeArgs Empty => new GetPermissionSetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPermissionSetsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPermissionSetsPermissionSetResult> PermissionSets;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetPermissionSetsResult(
            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.GetPermissionSetsPermissionSetResult> permissionSets,

            int totalCount)
        {
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            PermissionSets = permissionSets;
            TotalCount = totalCount;
        }
    }
}
