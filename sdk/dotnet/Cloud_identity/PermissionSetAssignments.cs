// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_identity
{
    public static class PermissionSetAssignments
    {
        /// <summary>
        /// Use this data source to query detailed information of cloud identity permission set assignments
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooPermissionSet = new Volcengine.Cloud_identity.PermissionSet("fooPermissionSet", new()
        ///     {
        ///         Description = "tf",
        ///         SessionDuration = 5000,
        ///         PermissionPolicies = new[]
        ///         {
        ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///             {
        ///                 PermissionPolicyType = "System",
        ///                 PermissionPolicyName = "AdministratorAccess",
        ///                 InlinePolicyDocument = "",
        ///             },
        ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///             {
        ///                 PermissionPolicyType = "System",
        ///                 PermissionPolicyName = "ReadOnlyAccess",
        ///                 InlinePolicyDocument = "",
        ///             },
        ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///             {
        ///                 PermissionPolicyType = "Inline",
        ///                 InlinePolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooUser = new Volcengine.Cloud_identity.User("fooUser", new()
        ///     {
        ///         UserName = "acc-test-user",
        ///         DisplayName = "tf-test-user",
        ///         Description = "tf",
        ///         Email = "88@qq.com",
        ///         Phone = "181",
        ///     });
        /// 
        ///     var fooPermissionSetAssignment = new Volcengine.Cloud_identity.PermissionSetAssignment("fooPermissionSetAssignment", new()
        ///     {
        ///         PermissionSetId = fooPermissionSet.Id,
        ///         TargetId = "210026****",
        ///         PrincipalType = "User",
        ///         PrincipalId = fooUser.Id,
        ///     });
        /// 
        ///     var fooPermissionSetAssignments = Volcengine.Cloud_identity.PermissionSetAssignments.Invoke(new()
        ///     {
        ///         PermissionSetId = fooPermissionSetAssignment.PermissionSetId,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<PermissionSetAssignmentsResult> InvokeAsync(PermissionSetAssignmentsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<PermissionSetAssignmentsResult>("volcengine:cloud_identity/permissionSetAssignments:PermissionSetAssignments", args ?? new PermissionSetAssignmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cloud identity permission set assignments
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooPermissionSet = new Volcengine.Cloud_identity.PermissionSet("fooPermissionSet", new()
        ///     {
        ///         Description = "tf",
        ///         SessionDuration = 5000,
        ///         PermissionPolicies = new[]
        ///         {
        ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///             {
        ///                 PermissionPolicyType = "System",
        ///                 PermissionPolicyName = "AdministratorAccess",
        ///                 InlinePolicyDocument = "",
        ///             },
        ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///             {
        ///                 PermissionPolicyType = "System",
        ///                 PermissionPolicyName = "ReadOnlyAccess",
        ///                 InlinePolicyDocument = "",
        ///             },
        ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
        ///             {
        ///                 PermissionPolicyType = "Inline",
        ///                 InlinePolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooUser = new Volcengine.Cloud_identity.User("fooUser", new()
        ///     {
        ///         UserName = "acc-test-user",
        ///         DisplayName = "tf-test-user",
        ///         Description = "tf",
        ///         Email = "88@qq.com",
        ///         Phone = "181",
        ///     });
        /// 
        ///     var fooPermissionSetAssignment = new Volcengine.Cloud_identity.PermissionSetAssignment("fooPermissionSetAssignment", new()
        ///     {
        ///         PermissionSetId = fooPermissionSet.Id,
        ///         TargetId = "210026****",
        ///         PrincipalType = "User",
        ///         PrincipalId = fooUser.Id,
        ///     });
        /// 
        ///     var fooPermissionSetAssignments = Volcengine.Cloud_identity.PermissionSetAssignments.Invoke(new()
        ///     {
        ///         PermissionSetId = fooPermissionSetAssignment.PermissionSetId,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<PermissionSetAssignmentsResult> Invoke(PermissionSetAssignmentsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<PermissionSetAssignmentsResult>("volcengine:cloud_identity/permissionSetAssignments:PermissionSetAssignments", args ?? new PermissionSetAssignmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class PermissionSetAssignmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The id of cloud identity permission set.
        /// </summary>
        [Input("permissionSetId")]
        public string? PermissionSetId { get; set; }

        /// <summary>
        /// The principal id of cloud identity permission set. When the `principal_type` is `User`, this field is specified to `UserId`. When the `principal_type` is `Group`, this field is specified to `GroupId`.
        /// </summary>
        [Input("principalId")]
        public string? PrincipalId { get; set; }

        /// <summary>
        /// The principal type of cloud identity permission set. Valid values: `User`, `Group`.
        /// </summary>
        [Input("principalType")]
        public string? PrincipalType { get; set; }

        /// <summary>
        /// The target account id of cloud identity permission set assignment.
        /// </summary>
        [Input("targetId")]
        public string? TargetId { get; set; }

        public PermissionSetAssignmentsArgs()
        {
        }
        public static new PermissionSetAssignmentsArgs Empty => new PermissionSetAssignmentsArgs();
    }

    public sealed class PermissionSetAssignmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The id of cloud identity permission set.
        /// </summary>
        [Input("permissionSetId")]
        public Input<string>? PermissionSetId { get; set; }

        /// <summary>
        /// The principal id of cloud identity permission set. When the `principal_type` is `User`, this field is specified to `UserId`. When the `principal_type` is `Group`, this field is specified to `GroupId`.
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// The principal type of cloud identity permission set. Valid values: `User`, `Group`.
        /// </summary>
        [Input("principalType")]
        public Input<string>? PrincipalType { get; set; }

        /// <summary>
        /// The target account id of cloud identity permission set assignment.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        public PermissionSetAssignmentsInvokeArgs()
        {
        }
        public static new PermissionSetAssignmentsInvokeArgs Empty => new PermissionSetAssignmentsInvokeArgs();
    }


    [OutputType]
    public sealed class PermissionSetAssignmentsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.PermissionSetAssignmentsAssignmentResult> Assignments;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The id of the cloud identity permission set.
        /// </summary>
        public readonly string? PermissionSetId;
        /// <summary>
        /// The principal id of the cloud identity permission set assignment.
        /// </summary>
        public readonly string? PrincipalId;
        /// <summary>
        /// The principal type of the cloud identity permission set assignment.
        /// </summary>
        public readonly string? PrincipalType;
        /// <summary>
        /// The target account id of the cloud identity permission set assignment.
        /// </summary>
        public readonly string? TargetId;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private PermissionSetAssignmentsResult(
            ImmutableArray<Outputs.PermissionSetAssignmentsAssignmentResult> assignments,

            string id,

            string? nameRegex,

            string? outputFile,

            string? permissionSetId,

            string? principalId,

            string? principalType,

            string? targetId,

            int totalCount)
        {
            Assignments = assignments;
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            PermissionSetId = permissionSetId;
            PrincipalId = principalId;
            PrincipalType = principalType;
            TargetId = targetId;
            TotalCount = totalCount;
        }
    }
}
