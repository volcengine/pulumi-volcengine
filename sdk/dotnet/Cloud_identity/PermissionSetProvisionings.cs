// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_identity
{
    public static class PermissionSetProvisionings
    {
        /// <summary>
        /// Use this data source to query detailed information of cloud identity permission set provisionings
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Cloud_identity.PermissionSetProvisionings.Invoke(new()
        ///     {
        ///         TargetId = "210026****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<PermissionSetProvisioningsResult> InvokeAsync(PermissionSetProvisioningsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<PermissionSetProvisioningsResult>("volcengine:cloud_identity/permissionSetProvisionings:PermissionSetProvisionings", args ?? new PermissionSetProvisioningsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cloud identity permission set provisionings
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Cloud_identity.PermissionSetProvisionings.Invoke(new()
        ///     {
        ///         TargetId = "210026****",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<PermissionSetProvisioningsResult> Invoke(PermissionSetProvisioningsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<PermissionSetProvisioningsResult>("volcengine:cloud_identity/permissionSetProvisionings:PermissionSetProvisionings", args ?? new PermissionSetProvisioningsInvokeArgs(), options.WithDefaults());
    }


    public sealed class PermissionSetProvisioningsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The id of cloud identity permission set.
        /// </summary>
        [Input("permissionSetId")]
        public string? PermissionSetId { get; set; }

        /// <summary>
        /// The target account id of cloud identity permission set.
        /// </summary>
        [Input("targetId")]
        public string? TargetId { get; set; }

        public PermissionSetProvisioningsArgs()
        {
        }
        public static new PermissionSetProvisioningsArgs Empty => new PermissionSetProvisioningsArgs();
    }

    public sealed class PermissionSetProvisioningsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The id of cloud identity permission set.
        /// </summary>
        [Input("permissionSetId")]
        public Input<string>? PermissionSetId { get; set; }

        /// <summary>
        /// The target account id of cloud identity permission set.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        public PermissionSetProvisioningsInvokeArgs()
        {
        }
        public static new PermissionSetProvisioningsInvokeArgs Empty => new PermissionSetProvisioningsInvokeArgs();
    }


    [OutputType]
    public sealed class PermissionSetProvisioningsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.PermissionSetProvisioningsPermissionProvisioningResult> PermissionProvisionings;
        /// <summary>
        /// The id of the cloud identity permission set.
        /// </summary>
        public readonly string? PermissionSetId;
        /// <summary>
        /// The target account id of the cloud identity permission set provisioning.
        /// </summary>
        public readonly string? TargetId;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private PermissionSetProvisioningsResult(
            string id,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.PermissionSetProvisioningsPermissionProvisioningResult> permissionProvisionings,

            string? permissionSetId,

            string? targetId,

            int totalCount)
        {
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            PermissionProvisionings = permissionProvisionings;
            PermissionSetId = permissionSetId;
            TargetId = targetId;
            TotalCount = totalCount;
        }
    }
}
