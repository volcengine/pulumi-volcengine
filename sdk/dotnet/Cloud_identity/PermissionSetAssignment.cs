// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_identity
{
    /// <summary>
    /// Provides a resource to manage cloud identity permission set assignment
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooPermissionSet = new Volcengine.Cloud_identity.PermissionSet("fooPermissionSet", new()
    ///     {
    ///         Description = "tf",
    ///         SessionDuration = 5000,
    ///         PermissionPolicies = new[]
    ///         {
    ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
    ///             {
    ///                 PermissionPolicyType = "System",
    ///                 PermissionPolicyName = "AdministratorAccess",
    ///                 InlinePolicyDocument = "",
    ///             },
    ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
    ///             {
    ///                 PermissionPolicyType = "System",
    ///                 PermissionPolicyName = "ReadOnlyAccess",
    ///                 InlinePolicyDocument = "",
    ///             },
    ///             new Volcengine.Cloud_identity.Inputs.PermissionSetPermissionPolicyArgs
    ///             {
    ///                 PermissionPolicyType = "Inline",
    ///                 InlinePolicyDocument = "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooUser = new Volcengine.Cloud_identity.User("fooUser", new()
    ///     {
    ///         UserName = "acc-test-user",
    ///         DisplayName = "tf-test-user",
    ///         Description = "tf",
    ///         Email = "88@qq.com",
    ///         Phone = "181",
    ///     });
    /// 
    ///     var fooPermissionSetAssignment = new Volcengine.Cloud_identity.PermissionSetAssignment("fooPermissionSetAssignment", new()
    ///     {
    ///         PermissionSetId = fooPermissionSet.Id,
    ///         TargetId = "210026****",
    ///         PrincipalType = "User",
    ///         PrincipalId = fooUser.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CloudIdentityPermissionSetAssignment can be imported using the permission_set_id:target_id:principal_type:principal_id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:cloud_identity/permissionSetAssignment:PermissionSetAssignment default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:cloud_identity/permissionSetAssignment:PermissionSetAssignment")]
    public partial class PermissionSetAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The deprovision strategy when deleting the cloud identity permission set assignment. Valid values: `DeprovisionForLastPermissionSetOnAccount`, `None`. Default is `DeprovisionForLastPermissionSetOnAccount`. 
        /// When the `deprovision_strategy` is `DeprovisionForLastPermissionSetOnAccount`, and the permission set assignment to be deleted is the last assignment for the same account, this option is used for the DeprovisionPermissionSet operation.
        /// </summary>
        [Output("deprovisionStrategy")]
        public Output<string?> DeprovisionStrategy { get; private set; } = null!;

        /// <summary>
        /// The id of the cloud identity permission set.
        /// </summary>
        [Output("permissionSetId")]
        public Output<string> PermissionSetId { get; private set; } = null!;

        /// <summary>
        /// The principal id of the cloud identity permission set. When the `principal_type` is `User`, this field is specified to `UserId`. When the `principal_type` is `Group`, this field is specified to `GroupId`.
        /// </summary>
        [Output("principalId")]
        public Output<string> PrincipalId { get; private set; } = null!;

        /// <summary>
        /// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
        /// </summary>
        [Output("principalType")]
        public Output<string> PrincipalType { get; private set; } = null!;

        /// <summary>
        /// The target account id of the cloud identity permission set assignment.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;


        /// <summary>
        /// Create a PermissionSetAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PermissionSetAssignment(string name, PermissionSetAssignmentArgs args, CustomResourceOptions? options = null)
            : base("volcengine:cloud_identity/permissionSetAssignment:PermissionSetAssignment", name, args ?? new PermissionSetAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PermissionSetAssignment(string name, Input<string> id, PermissionSetAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:cloud_identity/permissionSetAssignment:PermissionSetAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PermissionSetAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PermissionSetAssignment Get(string name, Input<string> id, PermissionSetAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new PermissionSetAssignment(name, id, state, options);
        }
    }

    public sealed class PermissionSetAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The deprovision strategy when deleting the cloud identity permission set assignment. Valid values: `DeprovisionForLastPermissionSetOnAccount`, `None`. Default is `DeprovisionForLastPermissionSetOnAccount`. 
        /// When the `deprovision_strategy` is `DeprovisionForLastPermissionSetOnAccount`, and the permission set assignment to be deleted is the last assignment for the same account, this option is used for the DeprovisionPermissionSet operation.
        /// </summary>
        [Input("deprovisionStrategy")]
        public Input<string>? DeprovisionStrategy { get; set; }

        /// <summary>
        /// The id of the cloud identity permission set.
        /// </summary>
        [Input("permissionSetId", required: true)]
        public Input<string> PermissionSetId { get; set; } = null!;

        /// <summary>
        /// The principal id of the cloud identity permission set. When the `principal_type` is `User`, this field is specified to `UserId`. When the `principal_type` is `Group`, this field is specified to `GroupId`.
        /// </summary>
        [Input("principalId", required: true)]
        public Input<string> PrincipalId { get; set; } = null!;

        /// <summary>
        /// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
        /// </summary>
        [Input("principalType", required: true)]
        public Input<string> PrincipalType { get; set; } = null!;

        /// <summary>
        /// The target account id of the cloud identity permission set assignment.
        /// </summary>
        [Input("targetId", required: true)]
        public Input<string> TargetId { get; set; } = null!;

        public PermissionSetAssignmentArgs()
        {
        }
        public static new PermissionSetAssignmentArgs Empty => new PermissionSetAssignmentArgs();
    }

    public sealed class PermissionSetAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The deprovision strategy when deleting the cloud identity permission set assignment. Valid values: `DeprovisionForLastPermissionSetOnAccount`, `None`. Default is `DeprovisionForLastPermissionSetOnAccount`. 
        /// When the `deprovision_strategy` is `DeprovisionForLastPermissionSetOnAccount`, and the permission set assignment to be deleted is the last assignment for the same account, this option is used for the DeprovisionPermissionSet operation.
        /// </summary>
        [Input("deprovisionStrategy")]
        public Input<string>? DeprovisionStrategy { get; set; }

        /// <summary>
        /// The id of the cloud identity permission set.
        /// </summary>
        [Input("permissionSetId")]
        public Input<string>? PermissionSetId { get; set; }

        /// <summary>
        /// The principal id of the cloud identity permission set. When the `principal_type` is `User`, this field is specified to `UserId`. When the `principal_type` is `Group`, this field is specified to `GroupId`.
        /// </summary>
        [Input("principalId")]
        public Input<string>? PrincipalId { get; set; }

        /// <summary>
        /// The principal type of the cloud identity permission set. Valid values: `User`, `Group`.
        /// </summary>
        [Input("principalType")]
        public Input<string>? PrincipalType { get; set; }

        /// <summary>
        /// The target account id of the cloud identity permission set assignment.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        public PermissionSetAssignmentState()
        {
        }
        public static new PermissionSetAssignmentState Empty => new PermissionSetAssignmentState();
    }
}
