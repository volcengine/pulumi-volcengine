// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rocketmq.Outputs
{

    [OutputType]
    public sealed class InstancesRocketmqInstanceResult
    {
        /// <summary>
        /// The account id of the rocketmq instance.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// Whether the private dns to public function is enabled for the rocketmq instance.
        /// </summary>
        public readonly bool ApplyPrivateDnsToPublic;
        /// <summary>
        /// The available queue number of the rocketmq instance.
        /// </summary>
        public readonly int AvailableQueueNumber;
        /// <summary>
        /// The charge detail information of the rocketmq instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesRocketmqInstanceChargeDetailResult> ChargeDetails;
        /// <summary>
        /// The compute spec of the rocketmq instance.
        /// </summary>
        public readonly string ComputeSpec;
        /// <summary>
        /// The connection information of the rocketmq.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesRocketmqInstanceConnectionInfoResult> ConnectionInfos;
        /// <summary>
        /// The create time of the rocketmq instance.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The eip id of the rocketmq instance.
        /// </summary>
        public readonly string EipId;
        /// <summary>
        /// Whether the ssl authentication is enabled for the rocketmq instance.
        /// </summary>
        public readonly bool EnableSsl;
        /// <summary>
        /// The reserved time of messages on the RocketMQ server of the message queue. Messages that exceed the reserved time will be cleared after expiration. The unit is in hours.
        /// </summary>
        public readonly int FileReservedTime;
        /// <summary>
        /// The id of the rocketmq instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The description of the rocketmq instance.
        /// </summary>
        public readonly string InstanceDescription;
        /// <summary>
        /// The id of rocketmq instance.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// The name of rocketmq instance. This field support fuzzy query.
        /// </summary>
        public readonly string InstanceName;
        /// <summary>
        /// The status of rocketmq instance.
        /// </summary>
        public readonly string InstanceStatus;
        /// <summary>
        /// The project name of rocketmq instance.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The region id of the rocketmq instance.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// The ssl mode of the rocketmq instance.
        /// </summary>
        public readonly string SslMode;
        /// <summary>
        /// The total storage space of the rocketmq instance.
        /// </summary>
        public readonly int StorageSpace;
        /// <summary>
        /// The subnet id of the rocketmq instance.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesRocketmqInstanceTagResult> Tags;
        /// <summary>
        /// The used group number of the rocketmq instance.
        /// </summary>
        public readonly int UsedGroupNumber;
        /// <summary>
        /// The used queue number of the rocketmq instance.
        /// </summary>
        public readonly int UsedQueueNumber;
        /// <summary>
        /// The used storage space of the rocketmq instance.
        /// </summary>
        public readonly int UsedStorageSpace;
        /// <summary>
        /// The used topic number of the rocketmq instance.
        /// </summary>
        public readonly int UsedTopicNumber;
        /// <summary>
        /// The version of rocketmq instance. Valid values: `4.8`.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// The vpc id of rocketmq instance.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The zone id of rocketmq instance.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private InstancesRocketmqInstanceResult(
            string accountId,

            bool applyPrivateDnsToPublic,

            int availableQueueNumber,

            ImmutableArray<Outputs.InstancesRocketmqInstanceChargeDetailResult> chargeDetails,

            string computeSpec,

            ImmutableArray<Outputs.InstancesRocketmqInstanceConnectionInfoResult> connectionInfos,

            string createTime,

            string eipId,

            bool enableSsl,

            int fileReservedTime,

            string id,

            string instanceDescription,

            string instanceId,

            string instanceName,

            string instanceStatus,

            string projectName,

            string regionId,

            string sslMode,

            int storageSpace,

            string subnetId,

            ImmutableArray<Outputs.InstancesRocketmqInstanceTagResult> tags,

            int usedGroupNumber,

            int usedQueueNumber,

            int usedStorageSpace,

            int usedTopicNumber,

            string version,

            string vpcId,

            string zoneId)
        {
            AccountId = accountId;
            ApplyPrivateDnsToPublic = applyPrivateDnsToPublic;
            AvailableQueueNumber = availableQueueNumber;
            ChargeDetails = chargeDetails;
            ComputeSpec = computeSpec;
            ConnectionInfos = connectionInfos;
            CreateTime = createTime;
            EipId = eipId;
            EnableSsl = enableSsl;
            FileReservedTime = fileReservedTime;
            Id = id;
            InstanceDescription = instanceDescription;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceStatus = instanceStatus;
            ProjectName = projectName;
            RegionId = regionId;
            SslMode = sslMode;
            StorageSpace = storageSpace;
            SubnetId = subnetId;
            Tags = tags;
            UsedGroupNumber = usedGroupNumber;
            UsedQueueNumber = usedQueueNumber;
            UsedStorageSpace = usedStorageSpace;
            UsedTopicNumber = usedTopicNumber;
            Version = version;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
}
