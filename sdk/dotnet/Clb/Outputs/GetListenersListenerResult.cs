// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Clb.Outputs
{

    [OutputType]
    public sealed class GetListenersListenerResult
    {
        /// <summary>
        /// The acl ID list to which the Listener is bound.
        /// </summary>
        public readonly ImmutableArray<string> AclIds;
        /// <summary>
        /// The acl status of the Listener.
        /// </summary>
        public readonly string AclStatus;
        /// <summary>
        /// The acl type of the Listener.
        /// </summary>
        public readonly string AclType;
        /// <summary>
        /// The bandwidth of the Listener. Unit: Mbps.
        /// </summary>
        public readonly int Bandwidth;
        /// <summary>
        /// The ID of the certificate which is associated with the Listener.
        /// </summary>
        public readonly string CertificateId;
        /// <summary>
        /// Whether to enable connection drain of the Listener.
        /// </summary>
        public readonly string ConnectionDrainEnabled;
        /// <summary>
        /// The connection drain timeout of the Listener.
        /// </summary>
        public readonly int ConnectionDrainTimeout;
        /// <summary>
        /// The name of the cookie for session persistence configured on the backend server.
        /// </summary>
        public readonly string Cookie;
        /// <summary>
        /// The create time of the Listener.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The enable status of the Listener.
        /// </summary>
        public readonly string Enabled;
        /// <summary>
        /// The domain of health check.
        /// </summary>
        public readonly string HealthCheckDomain;
        /// <summary>
        /// The enable status of health check function.
        /// </summary>
        public readonly string HealthCheckEnabled;
        /// <summary>
        /// The healthy threshold of health check.
        /// </summary>
        public readonly int HealthCheckHealthyThreshold;
        /// <summary>
        /// The normal http status code of health check.
        /// </summary>
        public readonly string HealthCheckHttpCode;
        /// <summary>
        /// The interval executing health check.
        /// </summary>
        public readonly int HealthCheckInterval;
        /// <summary>
        /// The method of health check.
        /// </summary>
        public readonly string HealthCheckMethod;
        /// <summary>
        /// The response timeout of health check.
        /// </summary>
        public readonly int HealthCheckTimeout;
        /// <summary>
        /// The expected response string for the health check.
        /// </summary>
        public readonly string HealthCheckUdpExpect;
        /// <summary>
        /// A request string to perform a health check.
        /// </summary>
        public readonly string HealthCheckUdpRequest;
        /// <summary>
        /// The unhealthy threshold of health check.
        /// </summary>
        public readonly int HealthCheckUnHealthyThreshold;
        /// <summary>
        /// The uri of health check.
        /// </summary>
        public readonly string HealthCheckUri;
        /// <summary>
        /// The ID of the Listener.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the Listener.
        /// </summary>
        public readonly string ListenerId;
        /// <summary>
        /// The name of the Listener.
        /// </summary>
        public readonly string ListenerName;
        /// <summary>
        /// The persistence timeout of the Listener.
        /// </summary>
        public readonly int PersistenceTimeout;
        /// <summary>
        /// The persistence type of the Listener.
        /// </summary>
        public readonly string PersistenceType;
        /// <summary>
        /// The port receiving request of the Listener.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The protocol of the Listener.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Whether to enable proxy protocol.
        /// </summary>
        public readonly string ProxyProtocolType;
        /// <summary>
        /// The ID of the backend server group which is associated with the Listener.
        /// </summary>
        public readonly string ServerGroupId;
        /// <summary>
        /// The status of the Listener.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The update time of the Listener.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetListenersListenerResult(
            ImmutableArray<string> aclIds,

            string aclStatus,

            string aclType,

            int bandwidth,

            string certificateId,

            string connectionDrainEnabled,

            int connectionDrainTimeout,

            string cookie,

            string createTime,

            string enabled,

            string healthCheckDomain,

            string healthCheckEnabled,

            int healthCheckHealthyThreshold,

            string healthCheckHttpCode,

            int healthCheckInterval,

            string healthCheckMethod,

            int healthCheckTimeout,

            string healthCheckUdpExpect,

            string healthCheckUdpRequest,

            int healthCheckUnHealthyThreshold,

            string healthCheckUri,

            string id,

            string listenerId,

            string listenerName,

            int persistenceTimeout,

            string persistenceType,

            int port,

            string protocol,

            string proxyProtocolType,

            string serverGroupId,

            string status,

            string updateTime)
        {
            AclIds = aclIds;
            AclStatus = aclStatus;
            AclType = aclType;
            Bandwidth = bandwidth;
            CertificateId = certificateId;
            ConnectionDrainEnabled = connectionDrainEnabled;
            ConnectionDrainTimeout = connectionDrainTimeout;
            Cookie = cookie;
            CreateTime = createTime;
            Enabled = enabled;
            HealthCheckDomain = healthCheckDomain;
            HealthCheckEnabled = healthCheckEnabled;
            HealthCheckHealthyThreshold = healthCheckHealthyThreshold;
            HealthCheckHttpCode = healthCheckHttpCode;
            HealthCheckInterval = healthCheckInterval;
            HealthCheckMethod = healthCheckMethod;
            HealthCheckTimeout = healthCheckTimeout;
            HealthCheckUdpExpect = healthCheckUdpExpect;
            HealthCheckUdpRequest = healthCheckUdpRequest;
            HealthCheckUnHealthyThreshold = healthCheckUnHealthyThreshold;
            HealthCheckUri = healthCheckUri;
            Id = id;
            ListenerId = listenerId;
            ListenerName = listenerName;
            PersistenceTimeout = persistenceTimeout;
            PersistenceType = persistenceType;
            Port = port;
            Protocol = protocol;
            ProxyProtocolType = proxyProtocolType;
            ServerGroupId = serverGroupId;
            Status = status;
            UpdateTime = updateTime;
        }
    }
}
