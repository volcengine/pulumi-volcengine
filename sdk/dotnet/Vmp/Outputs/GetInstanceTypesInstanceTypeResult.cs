// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vmp.Outputs
{

    [OutputType]
    public sealed class GetInstanceTypesInstanceTypeResult
    {
        /// <summary>
        /// Maximum number of active sequences.
        /// </summary>
        public readonly int ActiveSeries;
        /// <summary>
        /// Number of zone.
        /// </summary>
        public readonly int AvailabilityZoneReplicas;
        /// <summary>
        /// Whether the workspace is exclusive.
        /// </summary>
        public readonly bool Dedicated;
        /// <summary>
        /// The ID of instance type.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Maximum write samples per second.
        /// </summary>
        public readonly int IngestSamplesPerSecond;
        /// <summary>
        /// Maximum number of concurrent queries.
        /// </summary>
        public readonly int QueryConcurrency;
        /// <summary>
        /// Maximum Query QPS.
        /// </summary>
        public readonly int QueryPerSecond;
        /// <summary>
        /// Data replicas per az.
        /// </summary>
        public readonly int ReplicasPerZone;
        /// <summary>
        /// Maximum data retention time.
        /// </summary>
        public readonly string RetentionPeriod;
        /// <summary>
        /// Maximum scan samples per second.
        /// </summary>
        public readonly int ScanSamplesPerSecond;
        /// <summary>
        /// Maximum number of scan sequences per second.
        /// </summary>
        public readonly int ScanSeriesPerSecond;

        [OutputConstructor]
        private GetInstanceTypesInstanceTypeResult(
            int activeSeries,

            int availabilityZoneReplicas,

            bool dedicated,

            string id,

            int ingestSamplesPerSecond,

            int queryConcurrency,

            int queryPerSecond,

            int replicasPerZone,

            string retentionPeriod,

            int scanSamplesPerSecond,

            int scanSeriesPerSecond)
        {
            ActiveSeries = activeSeries;
            AvailabilityZoneReplicas = availabilityZoneReplicas;
            Dedicated = dedicated;
            Id = id;
            IngestSamplesPerSecond = ingestSamplesPerSecond;
            QueryConcurrency = queryConcurrency;
            QueryPerSecond = queryPerSecond;
            ReplicasPerZone = replicasPerZone;
            RetentionPeriod = retentionPeriod;
            ScanSamplesPerSecond = scanSamplesPerSecond;
            ScanSeriesPerSecond = scanSeriesPerSecond;
        }
    }
}
