// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vmp.Outputs
{

    [OutputType]
    public sealed class NotifyTemplatesNotifyTemplateResult
    {
        /// <summary>
        /// The active notify template info.
        /// </summary>
        public readonly ImmutableArray<Outputs.NotifyTemplatesNotifyTemplateActiveResult> Actives;
        /// <summary>
        /// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
        /// </summary>
        public readonly string Channel;
        /// <summary>
        /// The create time of notify template.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The description of notify template.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of notify template.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of notify template. This field support fuzzy query.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The resolved notify template info.
        /// </summary>
        public readonly ImmutableArray<Outputs.NotifyTemplatesNotifyTemplateResolvedResult> Resolveds;
        /// <summary>
        /// The update time of notify template.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private NotifyTemplatesNotifyTemplateResult(
            ImmutableArray<Outputs.NotifyTemplatesNotifyTemplateActiveResult> actives,

            string channel,

            string createTime,

            string description,

            string id,

            string name,

            ImmutableArray<Outputs.NotifyTemplatesNotifyTemplateResolvedResult> resolveds,

            string updateTime)
        {
            Actives = actives;
            Channel = channel;
            CreateTime = createTime;
            Description = description;
            Id = id;
            Name = name;
            Resolveds = resolveds;
            UpdateTime = updateTime;
        }
    }
}
