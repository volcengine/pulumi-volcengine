// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vmp
{
    public static class GetContacts
    {
        /// <summary>
        /// Use this data source to query detailed information of vmp contacts
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooContact = new Volcengine.Vmp.Contact("fooContact", new()
        ///     {
        ///         Email = "acctest1@tftest.com",
        ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
        ///         {
        ///             Address = "https://www.acctest1.com",
        ///         },
        ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
        ///         {
        ///             Address = "https://www.acctest1.com",
        ///         },
        ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
        ///         {
        ///             Address = "https://www.dingacctest1.com",
        ///             AtMobiles = new[]
        ///             {
        ///                 "18046891812",
        ///             },
        ///         },
        ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
        ///         {
        ///             CountryCode = "+86",
        ///             Number = "18310101010",
        ///         },
        ///     });
        /// 
        ///     var fooContacts = Volcengine.Vmp.GetContacts.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooContact.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetContactsResult> InvokeAsync(GetContactsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContactsResult>("volcengine:vmp/getContacts:getContacts", args ?? new GetContactsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vmp contacts
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooContact = new Volcengine.Vmp.Contact("fooContact", new()
        ///     {
        ///         Email = "acctest1@tftest.com",
        ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
        ///         {
        ///             Address = "https://www.acctest1.com",
        ///         },
        ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
        ///         {
        ///             Address = "https://www.acctest1.com",
        ///         },
        ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
        ///         {
        ///             Address = "https://www.dingacctest1.com",
        ///             AtMobiles = new[]
        ///             {
        ///                 "18046891812",
        ///             },
        ///         },
        ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
        ///         {
        ///             CountryCode = "+86",
        ///             Number = "18310101010",
        ///         },
        ///     });
        /// 
        ///     var fooContacts = Volcengine.Vmp.GetContacts.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooContact.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetContactsResult> Invoke(GetContactsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContactsResult>("volcengine:vmp/getContacts:getContacts", args ?? new GetContactsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContactsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email of contact.
        /// </summary>
        [Input("email")]
        public string? Email { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of contact ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of contact.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetContactsArgs()
        {
        }
        public static new GetContactsArgs Empty => new GetContactsArgs();
    }

    public sealed class GetContactsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The email of contact.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of contact ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of contact.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetContactsInvokeArgs()
        {
        }
        public static new GetContactsInvokeArgs Empty => new GetContactsInvokeArgs();
    }


    [OutputType]
    public sealed class GetContactsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContactsContactResult> Contacts;
        /// <summary>
        /// The email of contact.
        /// </summary>
        public readonly string? Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The name of contact.
        /// </summary>
        public readonly string? Name;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetContactsResult(
            ImmutableArray<Outputs.GetContactsContactResult> contacts,

            string? email,

            string id,

            ImmutableArray<string> ids,

            string? name,

            string? outputFile,

            int totalCount)
        {
            Contacts = contacts;
            Email = email;
            Id = id;
            Ids = ids;
            Name = name;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
