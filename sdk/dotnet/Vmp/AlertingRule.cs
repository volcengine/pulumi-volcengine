// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vmp
{
    /// <summary>
    /// Provides a resource to manage vmp alerting rule
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooWorkspace = new Volcengine.Vmp.Workspace("fooWorkspace", new()
    ///     {
    ///         InstanceTypeId = "vmp.standard.15d",
    ///         DeleteProtectionEnabled = false,
    ///         Description = "acc-test-1",
    ///         Username = "admin123",
    ///         Password = "Pass123456",
    ///     });
    /// 
    ///     var fooContact = new Volcengine.Vmp.Contact("fooContact", new()
    ///     {
    ///         Email = "acctest1@tftest.com",
    ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
    ///         {
    ///             Address = "https://www.acctest1.com",
    ///         },
    ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
    ///         {
    ///             Address = "https://www.acctest1.com",
    ///         },
    ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
    ///         {
    ///             Address = "https://www.dingacctest1.com",
    ///             AtMobiles = new[]
    ///             {
    ///                 "18046891812",
    ///             },
    ///         },
    ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
    ///         {
    ///             CountryCode = "+86",
    ///             Number = "18310101010",
    ///         },
    ///     });
    /// 
    ///     var foo1Contact = new Volcengine.Vmp.Contact("foo1Contact", new()
    ///     {
    ///         Email = "acctest2@tftest.com",
    ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
    ///         {
    ///             Address = "https://www.acctest2.com",
    ///         },
    ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
    ///         {
    ///             Address = "https://www.acctest2.com",
    ///         },
    ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
    ///         {
    ///             Address = "https://www.dingacctest2.com",
    ///             AtMobiles = new[]
    ///             {
    ///                 "18046891813",
    ///             },
    ///         },
    ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
    ///         {
    ///             CountryCode = "+86",
    ///             Number = "18310101011",
    ///         },
    ///     });
    /// 
    ///     var fooContactGroup = new Volcengine.Vmp.ContactGroup("fooContactGroup", new()
    ///     {
    ///         ContactIds = new[]
    ///         {
    ///             fooContact.Id,
    ///         },
    ///     });
    /// 
    ///     var foo1ContactGroup = new Volcengine.Vmp.ContactGroup("foo1ContactGroup", new()
    ///     {
    ///         ContactIds = new[]
    ///         {
    ///             foo1Contact.Id,
    ///         },
    ///     });
    /// 
    ///     var fooNotifyPolicy = new Volcengine.Vmp.NotifyPolicy("fooNotifyPolicy", new()
    ///     {
    ///         Description = "acc-test-1",
    ///         Levels = new[]
    ///         {
    ///             new Volcengine.Vmp.Inputs.NotifyPolicyLevelArgs
    ///             {
    ///                 Level = "P1",
    ///                 ContactGroupIds = new[]
    ///                 {
    ///                     fooContactGroup.Id,
    ///                 },
    ///                 Channels = new[]
    ///                 {
    ///                     "Email",
    ///                     "Webhook",
    ///                 },
    ///             },
    ///             new Volcengine.Vmp.Inputs.NotifyPolicyLevelArgs
    ///             {
    ///                 Level = "P0",
    ///                 ContactGroupIds = new[]
    ///                 {
    ///                     foo1ContactGroup.Id,
    ///                 },
    ///                 Channels = new[]
    ///                 {
    ///                     "LarkBotWebhook",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooNotifyGroupPolicy = new Volcengine.Vmp.NotifyGroupPolicy("fooNotifyGroupPolicy", new()
    ///     {
    ///         Description = "acc-test-1",
    ///         Levels = new[]
    ///         {
    ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
    ///             {
    ///                 Level = "P2",
    ///                 GroupBies = new[]
    ///                 {
    ///                     "__rule__",
    ///                 },
    ///                 GroupWait = "35",
    ///                 GroupInterval = "60",
    ///                 RepeatInterval = "70",
    ///             },
    ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
    ///             {
    ///                 Level = "P0",
    ///                 GroupBies = new[]
    ///                 {
    ///                     "__rule__",
    ///                 },
    ///                 GroupWait = "30",
    ///                 GroupInterval = "60",
    ///                 RepeatInterval = "70",
    ///             },
    ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
    ///             {
    ///                 Level = "P1",
    ///                 GroupBies = new[]
    ///                 {
    ///                     "__rule__",
    ///                 },
    ///                 GroupWait = "40",
    ///                 GroupInterval = "75",
    ///                 RepeatInterval = "75",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooAlertingRule = new Volcengine.Vmp.AlertingRule("fooAlertingRule", new()
    ///     {
    ///         Description = "acc-test-1",
    ///         NotifyPolicyId = fooNotifyPolicy.Id,
    ///         NotifyGroupPolicyId = fooNotifyGroupPolicy.Id,
    ///         Query = new Volcengine.Vmp.Inputs.AlertingRuleQueryArgs
    ///         {
    ///             WorkspaceId = fooWorkspace.Id,
    ///             PromQl = "sum(up)",
    ///         },
    ///         Levels = new[]
    ///         {
    ///             new Volcengine.Vmp.Inputs.AlertingRuleLevelArgs
    ///             {
    ///                 Level = "P0",
    ///                 For = "0s",
    ///                 Comparator = "&gt;=",
    ///                 Threshold = 2,
    ///             },
    ///             new Volcengine.Vmp.Inputs.AlertingRuleLevelArgs
    ///             {
    ///                 Level = "P1",
    ///                 For = "0s",
    ///                 Comparator = "&gt;=",
    ///                 Threshold = 1,
    ///             },
    ///             new Volcengine.Vmp.Inputs.AlertingRuleLevelArgs
    ///             {
    ///                 Level = "P2",
    ///                 For = "0s",
    ///                 Comparator = "&gt;=",
    ///                 Threshold = 0.5,
    ///             },
    ///         },
    ///         Annotations = new[]
    ///         {
    ///             new Volcengine.Vmp.Inputs.AlertingRuleAnnotationArgs
    ///             {
    ///                 Name = "annotation",
    ///                 Value = "acc-test",
    ///             },
    ///         },
    ///         Labels = new[]
    ///         {
    ///             new Volcengine.Vmp.Inputs.AlertingRuleLabelArgs
    ///             {
    ///                 Name = "label",
    ///                 Value = "acc-test",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VmpAlertingRule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:vmp/alertingRule:AlertingRule default 5bd29e81-2717-4ac8-a1a6-d76da2b1****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vmp/alertingRule:AlertingRule")]
    public partial class AlertingRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The annotations of the vmp alerting rule.
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableArray<Outputs.AlertingRuleAnnotation>> Annotations { get; private set; } = null!;

        /// <summary>
        /// The create time of the vmp alerting rule.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The description of the vmp alerting rule.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The labels of the vmp alerting rule.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableArray<Outputs.AlertingRuleLabel>> Labels { get; private set; } = null!;

        /// <summary>
        /// The alerting levels of the vmp alerting rule.
        /// </summary>
        [Output("levels")]
        public Output<ImmutableArray<Outputs.AlertingRuleLevel>> Levels { get; private set; } = null!;

        /// <summary>
        /// The name of the vmp alerting rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The id of the notify group policy.
        /// </summary>
        [Output("notifyGroupPolicyId")]
        public Output<string> NotifyGroupPolicyId { get; private set; } = null!;

        /// <summary>
        /// The id of the notify policy.
        /// </summary>
        [Output("notifyPolicyId")]
        public Output<string?> NotifyPolicyId { get; private set; } = null!;

        /// <summary>
        /// The alerting query of the vmp alerting rule.
        /// </summary>
        [Output("query")]
        public Output<Outputs.AlertingRuleQuery> Query { get; private set; } = null!;

        /// <summary>
        /// The status of the vmp alerting rule.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The update time of the vmp alerting rule.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a AlertingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlertingRule(string name, AlertingRuleArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vmp/alertingRule:AlertingRule", name, args ?? new AlertingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlertingRule(string name, Input<string> id, AlertingRuleState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vmp/alertingRule:AlertingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlertingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlertingRule Get(string name, Input<string> id, AlertingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new AlertingRule(name, id, state, options);
        }
    }

    public sealed class AlertingRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<Inputs.AlertingRuleAnnotationArgs>? _annotations;

        /// <summary>
        /// The annotations of the vmp alerting rule.
        /// </summary>
        public InputList<Inputs.AlertingRuleAnnotationArgs> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<Inputs.AlertingRuleAnnotationArgs>());
            set => _annotations = value;
        }

        /// <summary>
        /// The description of the vmp alerting rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputList<Inputs.AlertingRuleLabelArgs>? _labels;

        /// <summary>
        /// The labels of the vmp alerting rule.
        /// </summary>
        public InputList<Inputs.AlertingRuleLabelArgs> Labels
        {
            get => _labels ?? (_labels = new InputList<Inputs.AlertingRuleLabelArgs>());
            set => _labels = value;
        }

        [Input("levels", required: true)]
        private InputList<Inputs.AlertingRuleLevelArgs>? _levels;

        /// <summary>
        /// The alerting levels of the vmp alerting rule.
        /// </summary>
        public InputList<Inputs.AlertingRuleLevelArgs> Levels
        {
            get => _levels ?? (_levels = new InputList<Inputs.AlertingRuleLevelArgs>());
            set => _levels = value;
        }

        /// <summary>
        /// The name of the vmp alerting rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The id of the notify group policy.
        /// </summary>
        [Input("notifyGroupPolicyId", required: true)]
        public Input<string> NotifyGroupPolicyId { get; set; } = null!;

        /// <summary>
        /// The id of the notify policy.
        /// </summary>
        [Input("notifyPolicyId")]
        public Input<string>? NotifyPolicyId { get; set; }

        /// <summary>
        /// The alerting query of the vmp alerting rule.
        /// </summary>
        [Input("query", required: true)]
        public Input<Inputs.AlertingRuleQueryArgs> Query { get; set; } = null!;

        public AlertingRuleArgs()
        {
        }
        public static new AlertingRuleArgs Empty => new AlertingRuleArgs();
    }

    public sealed class AlertingRuleState : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputList<Inputs.AlertingRuleAnnotationGetArgs>? _annotations;

        /// <summary>
        /// The annotations of the vmp alerting rule.
        /// </summary>
        public InputList<Inputs.AlertingRuleAnnotationGetArgs> Annotations
        {
            get => _annotations ?? (_annotations = new InputList<Inputs.AlertingRuleAnnotationGetArgs>());
            set => _annotations = value;
        }

        /// <summary>
        /// The create time of the vmp alerting rule.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The description of the vmp alerting rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputList<Inputs.AlertingRuleLabelGetArgs>? _labels;

        /// <summary>
        /// The labels of the vmp alerting rule.
        /// </summary>
        public InputList<Inputs.AlertingRuleLabelGetArgs> Labels
        {
            get => _labels ?? (_labels = new InputList<Inputs.AlertingRuleLabelGetArgs>());
            set => _labels = value;
        }

        [Input("levels")]
        private InputList<Inputs.AlertingRuleLevelGetArgs>? _levels;

        /// <summary>
        /// The alerting levels of the vmp alerting rule.
        /// </summary>
        public InputList<Inputs.AlertingRuleLevelGetArgs> Levels
        {
            get => _levels ?? (_levels = new InputList<Inputs.AlertingRuleLevelGetArgs>());
            set => _levels = value;
        }

        /// <summary>
        /// The name of the vmp alerting rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The id of the notify group policy.
        /// </summary>
        [Input("notifyGroupPolicyId")]
        public Input<string>? NotifyGroupPolicyId { get; set; }

        /// <summary>
        /// The id of the notify policy.
        /// </summary>
        [Input("notifyPolicyId")]
        public Input<string>? NotifyPolicyId { get; set; }

        /// <summary>
        /// The alerting query of the vmp alerting rule.
        /// </summary>
        [Input("query")]
        public Input<Inputs.AlertingRuleQueryGetArgs>? Query { get; set; }

        /// <summary>
        /// The status of the vmp alerting rule.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The update time of the vmp alerting rule.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public AlertingRuleState()
        {
        }
        public static new AlertingRuleState Empty => new AlertingRuleState();
    }
}
