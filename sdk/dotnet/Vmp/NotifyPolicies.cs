// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vmp
{
    [Obsolete(@"volcengine.vmp.NotifyPolicies has been deprecated in favor of volcengine.vmp.getNotifyPolicies")]
    public static class NotifyPolicies
    {
        /// <summary>
        /// Use this data source to query detailed information of vmp notify policies
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooContact = new Volcengine.Vmp.Contact("fooContact", new()
        ///     {
        ///         Email = "acctest1@tftest.com",
        ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
        ///         {
        ///             Address = "https://www.acctest1.com",
        ///         },
        ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
        ///         {
        ///             Address = "https://www.acctest1.com",
        ///         },
        ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
        ///         {
        ///             Address = "https://www.dingacctest1.com",
        ///             AtMobiles = new[]
        ///             {
        ///                 "18046891812",
        ///             },
        ///         },
        ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
        ///         {
        ///             CountryCode = "+86",
        ///             Number = "18310101010",
        ///         },
        ///     });
        /// 
        ///     var foo1Contact = new Volcengine.Vmp.Contact("foo1Contact", new()
        ///     {
        ///         Email = "acctest2@tftest.com",
        ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
        ///         {
        ///             Address = "https://www.acctest2.com",
        ///         },
        ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
        ///         {
        ///             Address = "https://www.acctest2.com",
        ///         },
        ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
        ///         {
        ///             Address = "https://www.dingacctest2.com",
        ///             AtMobiles = new[]
        ///             {
        ///                 "18046891813",
        ///             },
        ///         },
        ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
        ///         {
        ///             CountryCode = "+86",
        ///             Number = "18310101011",
        ///         },
        ///     });
        /// 
        ///     var fooContactGroup = new Volcengine.Vmp.ContactGroup("fooContactGroup", new()
        ///     {
        ///         ContactIds = new[]
        ///         {
        ///             fooContact.Id,
        ///         },
        ///     });
        /// 
        ///     var foo1ContactGroup = new Volcengine.Vmp.ContactGroup("foo1ContactGroup", new()
        ///     {
        ///         ContactIds = new[]
        ///         {
        ///             foo1Contact.Id,
        ///         },
        ///     });
        /// 
        ///     var fooNotifyPolicy = new Volcengine.Vmp.NotifyPolicy("fooNotifyPolicy", new()
        ///     {
        ///         Description = "acc-test-1",
        ///         Levels = new[]
        ///         {
        ///             new Volcengine.Vmp.Inputs.NotifyPolicyLevelArgs
        ///             {
        ///                 Level = "P1",
        ///                 ContactGroupIds = new[]
        ///                 {
        ///                     fooContactGroup.Id,
        ///                 },
        ///                 Channels = new[]
        ///                 {
        ///                     "Email",
        ///                     "Webhook",
        ///                 },
        ///             },
        ///             new Volcengine.Vmp.Inputs.NotifyPolicyLevelArgs
        ///             {
        ///                 Level = "P0",
        ///                 ContactGroupIds = new[]
        ///                 {
        ///                     foo1ContactGroup.Id,
        ///                 },
        ///                 Channels = new[]
        ///                 {
        ///                     "LarkBotWebhook",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooNotifyPolicies = Volcengine.Vmp.GetNotifyPolicies.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooNotifyPolicy.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<NotifyPoliciesResult> InvokeAsync(NotifyPoliciesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<NotifyPoliciesResult>("volcengine:vmp/notifyPolicies:NotifyPolicies", args ?? new NotifyPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vmp notify policies
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooContact = new Volcengine.Vmp.Contact("fooContact", new()
        ///     {
        ///         Email = "acctest1@tftest.com",
        ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
        ///         {
        ///             Address = "https://www.acctest1.com",
        ///         },
        ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
        ///         {
        ///             Address = "https://www.acctest1.com",
        ///         },
        ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
        ///         {
        ///             Address = "https://www.dingacctest1.com",
        ///             AtMobiles = new[]
        ///             {
        ///                 "18046891812",
        ///             },
        ///         },
        ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
        ///         {
        ///             CountryCode = "+86",
        ///             Number = "18310101010",
        ///         },
        ///     });
        /// 
        ///     var foo1Contact = new Volcengine.Vmp.Contact("foo1Contact", new()
        ///     {
        ///         Email = "acctest2@tftest.com",
        ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
        ///         {
        ///             Address = "https://www.acctest2.com",
        ///         },
        ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
        ///         {
        ///             Address = "https://www.acctest2.com",
        ///         },
        ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
        ///         {
        ///             Address = "https://www.dingacctest2.com",
        ///             AtMobiles = new[]
        ///             {
        ///                 "18046891813",
        ///             },
        ///         },
        ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
        ///         {
        ///             CountryCode = "+86",
        ///             Number = "18310101011",
        ///         },
        ///     });
        /// 
        ///     var fooContactGroup = new Volcengine.Vmp.ContactGroup("fooContactGroup", new()
        ///     {
        ///         ContactIds = new[]
        ///         {
        ///             fooContact.Id,
        ///         },
        ///     });
        /// 
        ///     var foo1ContactGroup = new Volcengine.Vmp.ContactGroup("foo1ContactGroup", new()
        ///     {
        ///         ContactIds = new[]
        ///         {
        ///             foo1Contact.Id,
        ///         },
        ///     });
        /// 
        ///     var fooNotifyPolicy = new Volcengine.Vmp.NotifyPolicy("fooNotifyPolicy", new()
        ///     {
        ///         Description = "acc-test-1",
        ///         Levels = new[]
        ///         {
        ///             new Volcengine.Vmp.Inputs.NotifyPolicyLevelArgs
        ///             {
        ///                 Level = "P1",
        ///                 ContactGroupIds = new[]
        ///                 {
        ///                     fooContactGroup.Id,
        ///                 },
        ///                 Channels = new[]
        ///                 {
        ///                     "Email",
        ///                     "Webhook",
        ///                 },
        ///             },
        ///             new Volcengine.Vmp.Inputs.NotifyPolicyLevelArgs
        ///             {
        ///                 Level = "P0",
        ///                 ContactGroupIds = new[]
        ///                 {
        ///                     foo1ContactGroup.Id,
        ///                 },
        ///                 Channels = new[]
        ///                 {
        ///                     "LarkBotWebhook",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooNotifyPolicies = Volcengine.Vmp.GetNotifyPolicies.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooNotifyPolicy.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<NotifyPoliciesResult> Invoke(NotifyPoliciesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<NotifyPoliciesResult>("volcengine:vmp/notifyPolicies:NotifyPolicies", args ?? new NotifyPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class NotifyPoliciesArgs : global::Pulumi.InvokeArgs
    {
        [Input("channelNotifyTemplateIds")]
        private List<string>? _channelNotifyTemplateIds;

        /// <summary>
        /// The channel notify template for the alarm notification policy.
        /// </summary>
        public List<string> ChannelNotifyTemplateIds
        {
            get => _channelNotifyTemplateIds ?? (_channelNotifyTemplateIds = new List<string>());
            set => _channelNotifyTemplateIds = value;
        }

        [Input("contactGroupIds")]
        private List<string>? _contactGroupIds;

        /// <summary>
        /// The contact group for the alarm notification policy.
        /// </summary>
        public List<string> ContactGroupIds
        {
            get => _contactGroupIds ?? (_contactGroupIds = new List<string>());
            set => _contactGroupIds = value;
        }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of notify policy ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of notify policy.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public NotifyPoliciesArgs()
        {
        }
        public static new NotifyPoliciesArgs Empty => new NotifyPoliciesArgs();
    }

    public sealed class NotifyPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("channelNotifyTemplateIds")]
        private InputList<string>? _channelNotifyTemplateIds;

        /// <summary>
        /// The channel notify template for the alarm notification policy.
        /// </summary>
        public InputList<string> ChannelNotifyTemplateIds
        {
            get => _channelNotifyTemplateIds ?? (_channelNotifyTemplateIds = new InputList<string>());
            set => _channelNotifyTemplateIds = value;
        }

        [Input("contactGroupIds")]
        private InputList<string>? _contactGroupIds;

        /// <summary>
        /// The contact group for the alarm notification policy.
        /// </summary>
        public InputList<string> ContactGroupIds
        {
            get => _contactGroupIds ?? (_contactGroupIds = new InputList<string>());
            set => _contactGroupIds = value;
        }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of notify policy ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of notify policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public NotifyPoliciesInvokeArgs()
        {
        }
        public static new NotifyPoliciesInvokeArgs Empty => new NotifyPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class NotifyPoliciesResult
    {
        /// <summary>
        /// The channel notify template for the alarm notification policy.
        /// </summary>
        public readonly ImmutableArray<string> ChannelNotifyTemplateIds;
        /// <summary>
        /// The contact group for the alarm notification policy.
        /// </summary>
        public readonly ImmutableArray<string> ContactGroupIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The name of notify policy.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of notify policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.NotifyPoliciesNotifyPolicyResult> NotifyPolicies;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private NotifyPoliciesResult(
            ImmutableArray<string> channelNotifyTemplateIds,

            ImmutableArray<string> contactGroupIds,

            string id,

            ImmutableArray<string> ids,

            string? name,

            ImmutableArray<Outputs.NotifyPoliciesNotifyPolicyResult> notifyPolicies,

            string? outputFile,

            int totalCount)
        {
            ChannelNotifyTemplateIds = channelNotifyTemplateIds;
            ContactGroupIds = contactGroupIds;
            Id = id;
            Ids = ids;
            Name = name;
            NotifyPolicies = notifyPolicies;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
