// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vmp
{
    /// <summary>
    /// Provides a resource to manage vmp notify policy
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooContact = new Volcengine.Vmp.Contact("fooContact", new()
    ///     {
    ///         Email = "acctest1@tftest.com",
    ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
    ///         {
    ///             Address = "https://www.acctest1.com",
    ///         },
    ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
    ///         {
    ///             Address = "https://www.acctest1.com",
    ///         },
    ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
    ///         {
    ///             Address = "https://www.dingacctest1.com",
    ///             AtMobiles = new[]
    ///             {
    ///                 "18046891812",
    ///             },
    ///         },
    ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
    ///         {
    ///             CountryCode = "+86",
    ///             Number = "18310101010",
    ///         },
    ///     });
    /// 
    ///     var foo1Contact = new Volcengine.Vmp.Contact("foo1Contact", new()
    ///     {
    ///         Email = "acctest2@tftest.com",
    ///         Webhook = new Volcengine.Vmp.Inputs.ContactWebhookArgs
    ///         {
    ///             Address = "https://www.acctest2.com",
    ///         },
    ///         LarkBotWebhook = new Volcengine.Vmp.Inputs.ContactLarkBotWebhookArgs
    ///         {
    ///             Address = "https://www.acctest2.com",
    ///         },
    ///         DingTalkBotWebhook = new Volcengine.Vmp.Inputs.ContactDingTalkBotWebhookArgs
    ///         {
    ///             Address = "https://www.dingacctest2.com",
    ///             AtMobiles = new[]
    ///             {
    ///                 "18046891813",
    ///             },
    ///         },
    ///         PhoneNumber = new Volcengine.Vmp.Inputs.ContactPhoneNumberArgs
    ///         {
    ///             CountryCode = "+86",
    ///             Number = "18310101011",
    ///         },
    ///     });
    /// 
    ///     var fooContactGroup = new Volcengine.Vmp.ContactGroup("fooContactGroup", new()
    ///     {
    ///         ContactIds = new[]
    ///         {
    ///             fooContact.Id,
    ///         },
    ///     });
    /// 
    ///     var foo1ContactGroup = new Volcengine.Vmp.ContactGroup("foo1ContactGroup", new()
    ///     {
    ///         ContactIds = new[]
    ///         {
    ///             foo1Contact.Id,
    ///         },
    ///     });
    /// 
    ///     var fooNotifyPolicy = new Volcengine.Vmp.NotifyPolicy("fooNotifyPolicy", new()
    ///     {
    ///         Description = "acc-test-1",
    ///         Levels = new[]
    ///         {
    ///             new Volcengine.Vmp.Inputs.NotifyPolicyLevelArgs
    ///             {
    ///                 Level = "P1",
    ///                 ContactGroupIds = new[]
    ///                 {
    ///                     fooContactGroup.Id,
    ///                 },
    ///                 Channels = new[]
    ///                 {
    ///                     "Email",
    ///                     "Webhook",
    ///                 },
    ///             },
    ///             new Volcengine.Vmp.Inputs.NotifyPolicyLevelArgs
    ///             {
    ///                 Level = "P0",
    ///                 ContactGroupIds = new[]
    ///                 {
    ///                     foo1ContactGroup.Id,
    ///                 },
    ///                 Channels = new[]
    ///                 {
    ///                     "LarkBotWebhook",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VMP Notify Policy can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:vmp/notifyPolicy:NotifyPolicy default 60dde3ca-951c-4c05-8777-e5a7caa07ad6
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vmp/notifyPolicy:NotifyPolicy")]
    public partial class NotifyPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The channel notify template for the alarm notification policy.
        /// </summary>
        [Output("channelNotifyTemplateIds")]
        public Output<ImmutableArray<string>> ChannelNotifyTemplateIds { get; private set; } = null!;

        /// <summary>
        /// The description of the notify policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The levels of the notify policy.
        /// </summary>
        [Output("levels")]
        public Output<ImmutableArray<Outputs.NotifyPolicyLevel>> Levels { get; private set; } = null!;

        /// <summary>
        /// The name of the notify policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a NotifyPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NotifyPolicy(string name, NotifyPolicyArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vmp/notifyPolicy:NotifyPolicy", name, args ?? new NotifyPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NotifyPolicy(string name, Input<string> id, NotifyPolicyState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vmp/notifyPolicy:NotifyPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NotifyPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NotifyPolicy Get(string name, Input<string> id, NotifyPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new NotifyPolicy(name, id, state, options);
        }
    }

    public sealed class NotifyPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("channelNotifyTemplateIds")]
        private InputList<string>? _channelNotifyTemplateIds;

        /// <summary>
        /// The channel notify template for the alarm notification policy.
        /// </summary>
        public InputList<string> ChannelNotifyTemplateIds
        {
            get => _channelNotifyTemplateIds ?? (_channelNotifyTemplateIds = new InputList<string>());
            set => _channelNotifyTemplateIds = value;
        }

        /// <summary>
        /// The description of the notify policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("levels", required: true)]
        private InputList<Inputs.NotifyPolicyLevelArgs>? _levels;

        /// <summary>
        /// The levels of the notify policy.
        /// </summary>
        public InputList<Inputs.NotifyPolicyLevelArgs> Levels
        {
            get => _levels ?? (_levels = new InputList<Inputs.NotifyPolicyLevelArgs>());
            set => _levels = value;
        }

        /// <summary>
        /// The name of the notify policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public NotifyPolicyArgs()
        {
        }
        public static new NotifyPolicyArgs Empty => new NotifyPolicyArgs();
    }

    public sealed class NotifyPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("channelNotifyTemplateIds")]
        private InputList<string>? _channelNotifyTemplateIds;

        /// <summary>
        /// The channel notify template for the alarm notification policy.
        /// </summary>
        public InputList<string> ChannelNotifyTemplateIds
        {
            get => _channelNotifyTemplateIds ?? (_channelNotifyTemplateIds = new InputList<string>());
            set => _channelNotifyTemplateIds = value;
        }

        /// <summary>
        /// The description of the notify policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("levels")]
        private InputList<Inputs.NotifyPolicyLevelGetArgs>? _levels;

        /// <summary>
        /// The levels of the notify policy.
        /// </summary>
        public InputList<Inputs.NotifyPolicyLevelGetArgs> Levels
        {
            get => _levels ?? (_levels = new InputList<Inputs.NotifyPolicyLevelGetArgs>());
            set => _levels = value;
        }

        /// <summary>
        /// The name of the notify policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public NotifyPolicyState()
        {
        }
        public static new NotifyPolicyState Empty => new NotifyPolicyState();
    }
}
