// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vmp
{
    /// <summary>
    /// Provides a resource to manage vmp notify template
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Vmp.NotifyTemplate("foo", new()
    ///     {
    ///         Active = new Volcengine.Vmp.Inputs.NotifyTemplateActiveArgs
    ///         {
    ///             Content = "acc-test-active-template-content",
    ///             Title = "acc-test-active-template-title",
    ///         },
    ///         Channel = "WeComBotWebhook",
    ///         Description = "acc-test-vmp",
    ///         Resolved = new Volcengine.Vmp.Inputs.NotifyTemplateResolvedArgs
    ///         {
    ///             Content = "acc-test-resolved-template-content",
    ///             Title = "acc-test-resolved-template-title",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VmpNotifyTemplate can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:vmp/notifyTemplate:NotifyTemplate default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vmp/notifyTemplate:NotifyTemplate")]
    public partial class NotifyTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The active notify template info.
        /// </summary>
        [Output("active")]
        public Output<Outputs.NotifyTemplateActive> Active { get; private set; } = null!;

        /// <summary>
        /// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
        /// </summary>
        [Output("channel")]
        public Output<string> Channel { get; private set; } = null!;

        /// <summary>
        /// The create time of notify template.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The description of notify template.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of notify template.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The resolved notify template info.
        /// </summary>
        [Output("resolved")]
        public Output<Outputs.NotifyTemplateResolved> Resolved { get; private set; } = null!;

        /// <summary>
        /// The update time of notify template.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a NotifyTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NotifyTemplate(string name, NotifyTemplateArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vmp/notifyTemplate:NotifyTemplate", name, args ?? new NotifyTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NotifyTemplate(string name, Input<string> id, NotifyTemplateState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vmp/notifyTemplate:NotifyTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NotifyTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NotifyTemplate Get(string name, Input<string> id, NotifyTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new NotifyTemplate(name, id, state, options);
        }
    }

    public sealed class NotifyTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The active notify template info.
        /// </summary>
        [Input("active", required: true)]
        public Input<Inputs.NotifyTemplateActiveArgs> Active { get; set; } = null!;

        /// <summary>
        /// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
        /// </summary>
        [Input("channel", required: true)]
        public Input<string> Channel { get; set; } = null!;

        /// <summary>
        /// The description of notify template.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of notify template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resolved notify template info.
        /// </summary>
        [Input("resolved", required: true)]
        public Input<Inputs.NotifyTemplateResolvedArgs> Resolved { get; set; } = null!;

        public NotifyTemplateArgs()
        {
        }
        public static new NotifyTemplateArgs Empty => new NotifyTemplateArgs();
    }

    public sealed class NotifyTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The active notify template info.
        /// </summary>
        [Input("active")]
        public Input<Inputs.NotifyTemplateActiveGetArgs>? Active { get; set; }

        /// <summary>
        /// The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
        /// </summary>
        [Input("channel")]
        public Input<string>? Channel { get; set; }

        /// <summary>
        /// The create time of notify template.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The description of notify template.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of notify template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resolved notify template info.
        /// </summary>
        [Input("resolved")]
        public Input<Inputs.NotifyTemplateResolvedGetArgs>? Resolved { get; set; }

        /// <summary>
        /// The update time of notify template.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public NotifyTemplateState()
        {
        }
        public static new NotifyTemplateState Empty => new NotifyTemplateState();
    }
}
