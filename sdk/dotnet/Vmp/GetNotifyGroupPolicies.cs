// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vmp
{
    public static class GetNotifyGroupPolicies
    {
        /// <summary>
        /// Use this data source to query detailed information of vmp notify group policies
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooNotifyGroupPolicy = new Volcengine.Vmp.NotifyGroupPolicy("fooNotifyGroupPolicy", new()
        ///     {
        ///         Description = "acc-test-1",
        ///         Levels = new[]
        ///         {
        ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
        ///             {
        ///                 Level = "P2",
        ///                 GroupBies = new[]
        ///                 {
        ///                     "__rule__",
        ///                 },
        ///                 GroupWait = "35",
        ///                 GroupInterval = "30",
        ///                 RepeatInterval = "30",
        ///             },
        ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
        ///             {
        ///                 Level = "P0",
        ///                 GroupBies = new[]
        ///                 {
        ///                     "__rule__",
        ///                 },
        ///                 GroupWait = "30",
        ///                 GroupInterval = "30",
        ///                 RepeatInterval = "30",
        ///             },
        ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
        ///             {
        ///                 Level = "P1",
        ///                 GroupBies = new[]
        ///                 {
        ///                     "__rule__",
        ///                 },
        ///                 GroupWait = "40",
        ///                 GroupInterval = "45",
        ///                 RepeatInterval = "30",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooNotifyGroupPolicies = Volcengine.Vmp.GetNotifyGroupPolicies.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooNotifyGroupPolicy.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNotifyGroupPoliciesResult> InvokeAsync(GetNotifyGroupPoliciesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNotifyGroupPoliciesResult>("volcengine:vmp/getNotifyGroupPolicies:getNotifyGroupPolicies", args ?? new GetNotifyGroupPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vmp notify group policies
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooNotifyGroupPolicy = new Volcengine.Vmp.NotifyGroupPolicy("fooNotifyGroupPolicy", new()
        ///     {
        ///         Description = "acc-test-1",
        ///         Levels = new[]
        ///         {
        ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
        ///             {
        ///                 Level = "P2",
        ///                 GroupBies = new[]
        ///                 {
        ///                     "__rule__",
        ///                 },
        ///                 GroupWait = "35",
        ///                 GroupInterval = "30",
        ///                 RepeatInterval = "30",
        ///             },
        ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
        ///             {
        ///                 Level = "P0",
        ///                 GroupBies = new[]
        ///                 {
        ///                     "__rule__",
        ///                 },
        ///                 GroupWait = "30",
        ///                 GroupInterval = "30",
        ///                 RepeatInterval = "30",
        ///             },
        ///             new Volcengine.Vmp.Inputs.NotifyGroupPolicyLevelArgs
        ///             {
        ///                 Level = "P1",
        ///                 GroupBies = new[]
        ///                 {
        ///                     "__rule__",
        ///                 },
        ///                 GroupWait = "40",
        ///                 GroupInterval = "45",
        ///                 RepeatInterval = "30",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooNotifyGroupPolicies = Volcengine.Vmp.GetNotifyGroupPolicies.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooNotifyGroupPolicy.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNotifyGroupPoliciesResult> Invoke(GetNotifyGroupPoliciesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNotifyGroupPoliciesResult>("volcengine:vmp/getNotifyGroupPolicies:getNotifyGroupPolicies", args ?? new GetNotifyGroupPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNotifyGroupPoliciesArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of notify group policy ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of notify group policy.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetNotifyGroupPoliciesArgs()
        {
        }
        public static new GetNotifyGroupPoliciesArgs Empty => new GetNotifyGroupPoliciesArgs();
    }

    public sealed class GetNotifyGroupPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of notify group policy ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of notify group policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetNotifyGroupPoliciesInvokeArgs()
        {
        }
        public static new GetNotifyGroupPoliciesInvokeArgs Empty => new GetNotifyGroupPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNotifyGroupPoliciesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The name of notify group policy.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The list of notify group policies.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNotifyGroupPoliciesNotifyPolicyResult> NotifyPolicies;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetNotifyGroupPoliciesResult(
            string id,

            ImmutableArray<string> ids,

            string? name,

            ImmutableArray<Outputs.GetNotifyGroupPoliciesNotifyPolicyResult> notifyPolicies,

            string? outputFile,

            int totalCount)
        {
            Id = id;
            Ids = ids;
            Name = name;
            NotifyPolicies = notifyPolicies;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
