// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Veecp.Outputs
{

    [OutputType]
    public sealed class ClustersClusterResult
    {
        /// <summary>
        /// The config of the cluster.
        /// </summary>
        public readonly Outputs.ClustersClusterClusterConfigResult ClusterConfig;
        /// <summary>
        /// ClientToken when the cluster is created successfully. ClientToken is a string that guarantees the idempotency of the request. This string is passed in by the caller.
        /// </summary>
        public readonly string CreateClientToken;
        /// <summary>
        /// Cluster creation time. UTC+0 time in standard RFC3339 format.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Cluster deletion protection. Values: true: Enable deletion protection. false: Disable deletion protection.
        /// </summary>
        public readonly bool DeleteProtectionEnabled;
        /// <summary>
        /// Cluster description information.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the cluster.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Kubernetes version information corresponding to the cluster, specific to the patch version.
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// Cluster log configuration information.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClustersClusterLoggingConfigResult> LoggingConfigs;
        /// <summary>
        /// Cluster name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Statistics on the number of nodes corresponding to each master state in the cluster.
        /// </summary>
        public readonly Outputs.ClustersClusterNodeStatisticsResult NodeStatistics;
        /// <summary>
        /// The config of the pods.
        /// </summary>
        public readonly Outputs.ClustersClusterPodsConfigResult PodsConfig;
        /// <summary>
        /// The config of the services.
        /// </summary>
        public readonly Outputs.ClustersClusterServicesConfigResult ServicesConfig;
        /// <summary>
        /// Cluster status. For detailed instructions, please refer to ClusterStatusResponse.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClustersClusterStatusResult> Statuses;
        /// <summary>
        /// The ClientToken when the last cluster update succeeded. ClientToken is a string that guarantees the idempotency of the request. This string is passed in by the caller.
        /// </summary>
        public readonly string UpdateClientToken;
        /// <summary>
        /// The time when the cluster last accepted a request and executed or completed execution. UTC+0 time in standard RFC3339 format.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private ClustersClusterResult(
            Outputs.ClustersClusterClusterConfigResult clusterConfig,

            string createClientToken,

            string createTime,

            bool deleteProtectionEnabled,

            string description,

            string id,

            string kubernetesVersion,

            ImmutableArray<Outputs.ClustersClusterLoggingConfigResult> loggingConfigs,

            string name,

            Outputs.ClustersClusterNodeStatisticsResult nodeStatistics,

            Outputs.ClustersClusterPodsConfigResult podsConfig,

            Outputs.ClustersClusterServicesConfigResult servicesConfig,

            ImmutableArray<Outputs.ClustersClusterStatusResult> statuses,

            string updateClientToken,

            string updateTime)
        {
            ClusterConfig = clusterConfig;
            CreateClientToken = createClientToken;
            CreateTime = createTime;
            DeleteProtectionEnabled = deleteProtectionEnabled;
            Description = description;
            Id = id;
            KubernetesVersion = kubernetesVersion;
            LoggingConfigs = loggingConfigs;
            Name = name;
            NodeStatistics = nodeStatistics;
            PodsConfig = podsConfig;
            ServicesConfig = servicesConfig;
            Statuses = statuses;
            UpdateClientToken = updateClientToken;
            UpdateTime = updateTime;
        }
    }
}
