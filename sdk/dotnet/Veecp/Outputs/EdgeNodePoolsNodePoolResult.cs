// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Veecp.Outputs
{

    [OutputType]
    public sealed class EdgeNodePoolsNodePoolResult
    {
        /// <summary>
        /// The billing configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdgeNodePoolsNodePoolBillingConfigResult> BillingConfigs;
        /// <summary>
        /// The ClusterId of NodePool.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The Condition of Status.
        /// </summary>
        public readonly ImmutableArray<string> ConditionTypes;
        /// <summary>
        /// The ClientToken when successfully created.
        /// </summary>
        public readonly string CreateClientToken;
        /// <summary>
        /// The CreateTime of NodePool.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Elastic scaling configuration of node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdgeNodePoolsNodePoolElasticConfigResult> ElasticConfigs;
        /// <summary>
        /// The Id of NodePool.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The LabelContent of KubernetesConfig.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdgeNodePoolsNodePoolLabelContentResult> LabelContents;
        /// <summary>
        /// The Name of NodePool.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The method of adding nodes to the node pool.
        /// </summary>
        public readonly ImmutableArray<string> NodeAddMethods;
        /// <summary>
        /// The NodeStatistics of NodeConfig.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdgeNodePoolsNodePoolNodeStatisticResult> NodeStatistics;
        /// <summary>
        /// The Phase of Status.
        /// </summary>
        public readonly string Phase;
        /// <summary>
        /// Edge: Edge node pool. If the return value is empty, it is the central node pool.
        /// </summary>
        public readonly string Profile;
        /// <summary>
        /// The TaintContent of NodeConfig.
        /// </summary>
        public readonly ImmutableArray<Outputs.EdgeNodePoolsNodePoolTaintContentResult> TaintContents;
        /// <summary>
        /// Node pool type, machine-set: central node pool. edge-machine-set: edge node pool. edge-machine-pool: edge elastic node pool.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The ClientToken when last update was successful.
        /// </summary>
        public readonly string UpdateClientToken;
        /// <summary>
        /// The UpdateTime time of NodePool.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The static node pool specifies the node pool to associate with the VPC.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private EdgeNodePoolsNodePoolResult(
            ImmutableArray<Outputs.EdgeNodePoolsNodePoolBillingConfigResult> billingConfigs,

            string clusterId,

            ImmutableArray<string> conditionTypes,

            string createClientToken,

            string createTime,

            ImmutableArray<Outputs.EdgeNodePoolsNodePoolElasticConfigResult> elasticConfigs,

            string id,

            ImmutableArray<Outputs.EdgeNodePoolsNodePoolLabelContentResult> labelContents,

            string name,

            ImmutableArray<string> nodeAddMethods,

            ImmutableArray<Outputs.EdgeNodePoolsNodePoolNodeStatisticResult> nodeStatistics,

            string phase,

            string profile,

            ImmutableArray<Outputs.EdgeNodePoolsNodePoolTaintContentResult> taintContents,

            string type,

            string updateClientToken,

            string updateTime,

            string vpcId)
        {
            BillingConfigs = billingConfigs;
            ClusterId = clusterId;
            ConditionTypes = conditionTypes;
            CreateClientToken = createClientToken;
            CreateTime = createTime;
            ElasticConfigs = elasticConfigs;
            Id = id;
            LabelContents = labelContents;
            Name = name;
            NodeAddMethods = nodeAddMethods;
            NodeStatistics = nodeStatistics;
            Phase = phase;
            Profile = profile;
            TaintContents = taintContents;
            Type = type;
            UpdateClientToken = updateClientToken;
            UpdateTime = updateTime;
            VpcId = vpcId;
        }
    }
}
