// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Veecp
{
    /// <summary>
    /// Provides a resource to manage veecp edge node pool
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Veecp.EdgeNodePool("foo", new()
    ///     {
    ///         ClusterId = "ccvmb0c66t101fnob3dhg",
    ///         ElasticConfig = new Volcengine.Veecp.Inputs.EdgeNodePoolElasticConfigArgs
    ///         {
    ///             AutoScaleConfig = new Volcengine.Veecp.Inputs.EdgeNodePoolElasticConfigAutoScaleConfigArgs
    ///             {
    ///                 DesiredReplicas = 0,
    ///                 Enabled = true,
    ///                 MaxReplicas = 2,
    ///                 MinReplicas = 0,
    ///                 Priority = 10,
    ///             },
    ///             CloudServerIdentity = "cloudserver-47vz7k929cp9xqb",
    ///             InstanceArea = new Volcengine.Veecp.Inputs.EdgeNodePoolElasticConfigInstanceAreaArgs
    ///             {
    ///                 ClusterName = "bdcdn-zzcu02",
    ///                 VpcIdentity = "vpc-l9sz9qlf2t",
    ///             },
    ///         },
    ///         NodePoolType = "edge-machine-pool",
    ///         VpcId = "vpc-l9sz9qlf2t",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VeecpNodePool can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:veecp/edgeNodePool:EdgeNodePool default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:veecp/edgeNodePool:EdgeNodePool")]
    public partial class EdgeNodePool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The billing configuration of the node pool.
        /// </summary>
        [Output("billingConfigs")]
        public Output<Outputs.EdgeNodePoolBillingConfigs?> BillingConfigs { get; private set; } = null!;

        /// <summary>
        /// The ClientToken of NodePool.
        /// </summary>
        [Output("clientToken")]
        public Output<string?> ClientToken { get; private set; } = null!;

        /// <summary>
        /// The ClusterId of NodePool.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Elastic scaling configuration.
        /// </summary>
        [Output("elasticConfig")]
        public Output<Outputs.EdgeNodePoolElasticConfig> ElasticConfig { get; private set; } = null!;

        /// <summary>
        /// The KubernetesConfig of NodeConfig.
        /// </summary>
        [Output("kubernetesConfig")]
        public Output<Outputs.EdgeNodePoolKubernetesConfig> KubernetesConfig { get; private set; } = null!;

        /// <summary>
        /// The Name of NodePool.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Node pool type, with the default being a static node pool. edge-machine-set: Static node pool. edge-machine-pool: Elastic node poolNode pool type, which is static node pool by default. edge-machine-set: static node pool
        /// edge-machine-pool: elastic node pool.
        /// </summary>
        [Output("nodePoolType")]
        public Output<string?> NodePoolType { get; private set; } = null!;

        /// <summary>
        /// The VpcId of NodePool.
        /// </summary>
        [Output("vpcId")]
        public Output<string?> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeNodePool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeNodePool(string name, EdgeNodePoolArgs args, CustomResourceOptions? options = null)
            : base("volcengine:veecp/edgeNodePool:EdgeNodePool", name, args ?? new EdgeNodePoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeNodePool(string name, Input<string> id, EdgeNodePoolState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:veecp/edgeNodePool:EdgeNodePool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeNodePool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeNodePool Get(string name, Input<string> id, EdgeNodePoolState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeNodePool(name, id, state, options);
        }
    }

    public sealed class EdgeNodePoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The billing configuration of the node pool.
        /// </summary>
        [Input("billingConfigs")]
        public Input<Inputs.EdgeNodePoolBillingConfigsArgs>? BillingConfigs { get; set; }

        /// <summary>
        /// The ClientToken of NodePool.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// The ClusterId of NodePool.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// Elastic scaling configuration.
        /// </summary>
        [Input("elasticConfig")]
        public Input<Inputs.EdgeNodePoolElasticConfigArgs>? ElasticConfig { get; set; }

        /// <summary>
        /// The KubernetesConfig of NodeConfig.
        /// </summary>
        [Input("kubernetesConfig")]
        public Input<Inputs.EdgeNodePoolKubernetesConfigArgs>? KubernetesConfig { get; set; }

        /// <summary>
        /// The Name of NodePool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Node pool type, with the default being a static node pool. edge-machine-set: Static node pool. edge-machine-pool: Elastic node poolNode pool type, which is static node pool by default. edge-machine-set: static node pool
        /// edge-machine-pool: elastic node pool.
        /// </summary>
        [Input("nodePoolType")]
        public Input<string>? NodePoolType { get; set; }

        /// <summary>
        /// The VpcId of NodePool.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public EdgeNodePoolArgs()
        {
        }
        public static new EdgeNodePoolArgs Empty => new EdgeNodePoolArgs();
    }

    public sealed class EdgeNodePoolState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The billing configuration of the node pool.
        /// </summary>
        [Input("billingConfigs")]
        public Input<Inputs.EdgeNodePoolBillingConfigsGetArgs>? BillingConfigs { get; set; }

        /// <summary>
        /// The ClientToken of NodePool.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// The ClusterId of NodePool.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Elastic scaling configuration.
        /// </summary>
        [Input("elasticConfig")]
        public Input<Inputs.EdgeNodePoolElasticConfigGetArgs>? ElasticConfig { get; set; }

        /// <summary>
        /// The KubernetesConfig of NodeConfig.
        /// </summary>
        [Input("kubernetesConfig")]
        public Input<Inputs.EdgeNodePoolKubernetesConfigGetArgs>? KubernetesConfig { get; set; }

        /// <summary>
        /// The Name of NodePool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Node pool type, with the default being a static node pool. edge-machine-set: Static node pool. edge-machine-pool: Elastic node poolNode pool type, which is static node pool by default. edge-machine-set: static node pool
        /// edge-machine-pool: elastic node pool.
        /// </summary>
        [Input("nodePoolType")]
        public Input<string>? NodePoolType { get; set; }

        /// <summary>
        /// The VpcId of NodePool.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public EdgeNodePoolState()
        {
        }
        public static new EdgeNodePoolState Empty => new EdgeNodePoolState();
    }
}
