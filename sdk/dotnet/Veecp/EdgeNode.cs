// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Veecp
{
    /// <summary>
    /// Provides a resource to manage veecp edge node
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Veecp.EdgeNode("foo", new()
    ///     {
    ///         AutoCompleteConfig = new Volcengine.Veecp.Inputs.EdgeNodeAutoCompleteConfigArgs
    ///         {
    ///             DirectAdd = true,
    ///             DirectAddInstances = new[]
    ///             {
    ///                 new Volcengine.Veecp.Inputs.EdgeNodeAutoCompleteConfigDirectAddInstanceArgs
    ///                 {
    ///                     CloudServerIdentity = "cloudserver-wvvflw9qdns2qrk",
    ///                     InstanceIdentity = "veen91912104432151420041",
    ///                 },
    ///             },
    ///             Enable = true,
    ///         },
    ///         ClusterId = "ccvmf49t1ndqeechmj8p0",
    ///         NodePoolId = "pcvpkdn7ic26jjcjsa20g",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VeecpNode can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:veecp/edgeNode:EdgeNode default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:veecp/edgeNode:EdgeNode")]
    public partial class EdgeNode : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Machine information to be managed.
        /// </summary>
        [Output("autoCompleteConfig")]
        public Output<Outputs.EdgeNodeAutoCompleteConfig> AutoCompleteConfig { get; private set; } = null!;

        /// <summary>
        /// The client token.
        /// </summary>
        [Output("clientToken")]
        public Output<string> ClientToken { get; private set; } = null!;

        /// <summary>
        /// The cluster id.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The name of node.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The node pool id.
        /// </summary>
        [Output("nodePoolId")]
        public Output<string> NodePoolId { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeNode resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeNode(string name, EdgeNodeArgs args, CustomResourceOptions? options = null)
            : base("volcengine:veecp/edgeNode:EdgeNode", name, args ?? new EdgeNodeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeNode(string name, Input<string> id, EdgeNodeState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:veecp/edgeNode:EdgeNode", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeNode resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeNode Get(string name, Input<string> id, EdgeNodeState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeNode(name, id, state, options);
        }
    }

    public sealed class EdgeNodeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Machine information to be managed.
        /// </summary>
        [Input("autoCompleteConfig", required: true)]
        public Input<Inputs.EdgeNodeAutoCompleteConfigArgs> AutoCompleteConfig { get; set; } = null!;

        /// <summary>
        /// The client token.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// The cluster id.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of node.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The node pool id.
        /// </summary>
        [Input("nodePoolId", required: true)]
        public Input<string> NodePoolId { get; set; } = null!;

        public EdgeNodeArgs()
        {
        }
        public static new EdgeNodeArgs Empty => new EdgeNodeArgs();
    }

    public sealed class EdgeNodeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Machine information to be managed.
        /// </summary>
        [Input("autoCompleteConfig")]
        public Input<Inputs.EdgeNodeAutoCompleteConfigGetArgs>? AutoCompleteConfig { get; set; }

        /// <summary>
        /// The client token.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// The cluster id.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The name of node.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The node pool id.
        /// </summary>
        [Input("nodePoolId")]
        public Input<string>? NodePoolId { get; set; }

        public EdgeNodeState()
        {
        }
        public static new EdgeNodeState Empty => new EdgeNodeState();
    }
}
