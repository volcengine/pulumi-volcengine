// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rds_postgresql
{
    /// <summary>
    /// Provides a resource to manage rds postgresql instance readonly node
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-project1",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
    ///     {
    ///         SubnetName = "acc-subnet-test-2",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooInstance = new Volcengine.Rds_postgresql.Instance("fooInstance", new()
    ///     {
    ///         DbEngineVersion = "PostgreSQL_12",
    ///         NodeSpec = "rds.postgres.1c2g",
    ///         PrimaryZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         SecondaryZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         StorageSpace = 40,
    ///         SubnetId = fooSubnet.Id,
    ///         InstanceName = "acc-test-1",
    ///         ChargeInfo = new Volcengine.Rds_postgresql.Inputs.InstanceChargeInfoArgs
    ///         {
    ///             ChargeType = "PostPaid",
    ///         },
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Rds_postgresql.Inputs.InstanceTagArgs
    ///             {
    ///                 Key = "tfk1",
    ///                 Value = "tfv1",
    ///             },
    ///         },
    ///         Parameters = new[]
    ///         {
    ///             new Volcengine.Rds_postgresql.Inputs.InstanceParameterArgs
    ///             {
    ///                 Name = "auto_explain.log_analyze",
    ///                 Value = "off",
    ///             },
    ///             new Volcengine.Rds_postgresql.Inputs.InstanceParameterArgs
    ///             {
    ///                 Name = "auto_explain.log_format",
    ///                 Value = "text",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooInstanceReadonlyNode = new Volcengine.Rds_postgresql.InstanceReadonlyNode("fooInstanceReadonlyNode", new()
    ///     {
    ///         InstanceId = fooInstance.Id,
    ///         NodeSpec = "rds.postgres.1c2g",
    ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RdsPostgresqlInstanceReadonlyNode can be imported using the instance_id:node_id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:rds_postgresql/instanceReadonlyNode:InstanceReadonlyNode default postgres-21a3333b****:postgres-ca7b7019****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:rds_postgresql/instanceReadonlyNode:InstanceReadonlyNode")]
    public partial class InstanceReadonlyNode : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The RDS PostgreSQL instance id of the readonly node.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The id of the readonly node.
        /// </summary>
        [Output("nodeId")]
        public Output<string> NodeId { get; private set; } = null!;

        /// <summary>
        /// The specification of readonly node.
        /// </summary>
        [Output("nodeSpec")]
        public Output<string> NodeSpec { get; private set; } = null!;

        /// <summary>
        /// The available zone of readonly node.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceReadonlyNode resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceReadonlyNode(string name, InstanceReadonlyNodeArgs args, CustomResourceOptions? options = null)
            : base("volcengine:rds_postgresql/instanceReadonlyNode:InstanceReadonlyNode", name, args ?? new InstanceReadonlyNodeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceReadonlyNode(string name, Input<string> id, InstanceReadonlyNodeState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:rds_postgresql/instanceReadonlyNode:InstanceReadonlyNode", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceReadonlyNode resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceReadonlyNode Get(string name, Input<string> id, InstanceReadonlyNodeState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceReadonlyNode(name, id, state, options);
        }
    }

    public sealed class InstanceReadonlyNodeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The RDS PostgreSQL instance id of the readonly node.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The specification of readonly node.
        /// </summary>
        [Input("nodeSpec", required: true)]
        public Input<string> NodeSpec { get; set; } = null!;

        /// <summary>
        /// The available zone of readonly node.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public InstanceReadonlyNodeArgs()
        {
        }
        public static new InstanceReadonlyNodeArgs Empty => new InstanceReadonlyNodeArgs();
    }

    public sealed class InstanceReadonlyNodeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The RDS PostgreSQL instance id of the readonly node.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The id of the readonly node.
        /// </summary>
        [Input("nodeId")]
        public Input<string>? NodeId { get; set; }

        /// <summary>
        /// The specification of readonly node.
        /// </summary>
        [Input("nodeSpec")]
        public Input<string>? NodeSpec { get; set; }

        /// <summary>
        /// The available zone of readonly node.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public InstanceReadonlyNodeState()
        {
        }
        public static new InstanceReadonlyNodeState Empty => new InstanceReadonlyNodeState();
    }
}
