// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpn.Outputs
{

    [OutputType]
    public sealed class GetSslVpnServersSslVpnServerResult
    {
        /// <summary>
        /// The authentication algorithm of the SSL server.
        /// Values:
        /// `SHA1` (default)
        /// `MD5`
        /// `None` (do not use encryption).
        /// </summary>
        public readonly string Auth;
        /// <summary>
        /// The encryption algorithm of the SSL server.
        /// Values:
        /// `AES-128-CBC` (default)
        /// `AES-192-CBC`
        /// `AES-256-CBC`
        /// `None` (do not use encryption).
        /// </summary>
        public readonly string Cipher;
        /// <summary>
        /// SSL client network segment.
        /// </summary>
        public readonly string ClientIpPool;
        /// <summary>
        /// Whether to compress the transmitted data. The default value is false.
        /// </summary>
        public readonly bool Compress;
        /// <summary>
        /// The creation time.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The description of the ssl server.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The SSL VPN server id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The local network segment of the SSL server. The local network segment is the address segment that the client accesses through the SSL VPN connection.
        /// </summary>
        public readonly ImmutableArray<string> LocalSubnets;
        /// <summary>
        /// The port of the ssl server.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The project name of the ssl server.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The protocol used by the SSL server. Valid values are `TCP`, `UDP`. Default Value: `UDP`.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// The id of the ssl vpn server.
        /// </summary>
        public readonly string SslVpnServerId;
        /// <summary>
        /// The name of the ssl vpn server.
        /// </summary>
        public readonly string SslVpnServerName;
        /// <summary>
        /// The status of the ssl vpn server.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The update time.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The id of the vpn gateway.
        /// </summary>
        public readonly string VpnGatewayId;

        [OutputConstructor]
        private GetSslVpnServersSslVpnServerResult(
            string auth,

            string cipher,

            string clientIpPool,

            bool compress,

            string creationTime,

            string description,

            string id,

            ImmutableArray<string> localSubnets,

            int port,

            string projectName,

            string protocol,

            string sslVpnServerId,

            string sslVpnServerName,

            string status,

            string updateTime,

            string vpnGatewayId)
        {
            Auth = auth;
            Cipher = cipher;
            ClientIpPool = clientIpPool;
            Compress = compress;
            CreationTime = creationTime;
            Description = description;
            Id = id;
            LocalSubnets = localSubnets;
            Port = port;
            ProjectName = projectName;
            Protocol = protocol;
            SslVpnServerId = sslVpnServerId;
            SslVpnServerName = sslVpnServerName;
            Status = status;
            UpdateTime = updateTime;
            VpnGatewayId = vpnGatewayId;
        }
    }
}
