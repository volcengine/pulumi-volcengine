// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Direct_connect
{
    public static class BgpPeers
    {
        /// <summary>
        /// Use this data source to query detailed information of direct connect bgp peers
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Direct_connect.BgpPeers.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "bgp-171w6pn39ruo04d1w33iq****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<BgpPeersResult> InvokeAsync(BgpPeersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<BgpPeersResult>("volcengine:direct_connect/bgpPeers:BgpPeers", args ?? new BgpPeersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of direct connect bgp peers
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Direct_connect.BgpPeers.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "bgp-171w6pn39ruo04d1w33iq****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<BgpPeersResult> Invoke(BgpPeersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<BgpPeersResult>("volcengine:direct_connect/bgpPeers:BgpPeers", args ?? new BgpPeersInvokeArgs(), options.WithDefaults());
    }


    public sealed class BgpPeersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of bgp peer.
        /// </summary>
        [Input("bgpPeerName")]
        public string? BgpPeerName { get; set; }

        /// <summary>
        /// The id of direct connect gateway.
        /// </summary>
        [Input("directConnectGatewayId")]
        public string? DirectConnectGatewayId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The remote asn of bgp peer.
        /// </summary>
        [Input("remoteAsn")]
        public int? RemoteAsn { get; set; }

        /// <summary>
        /// The id of virtual interface.
        /// </summary>
        [Input("virtualInterfaceId")]
        public string? VirtualInterfaceId { get; set; }

        public BgpPeersArgs()
        {
        }
        public static new BgpPeersArgs Empty => new BgpPeersArgs();
    }

    public sealed class BgpPeersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of bgp peer.
        /// </summary>
        [Input("bgpPeerName")]
        public Input<string>? BgpPeerName { get; set; }

        /// <summary>
        /// The id of direct connect gateway.
        /// </summary>
        [Input("directConnectGatewayId")]
        public Input<string>? DirectConnectGatewayId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The remote asn of bgp peer.
        /// </summary>
        [Input("remoteAsn")]
        public Input<int>? RemoteAsn { get; set; }

        /// <summary>
        /// The id of virtual interface.
        /// </summary>
        [Input("virtualInterfaceId")]
        public Input<string>? VirtualInterfaceId { get; set; }

        public BgpPeersInvokeArgs()
        {
        }
        public static new BgpPeersInvokeArgs Empty => new BgpPeersInvokeArgs();
    }


    [OutputType]
    public sealed class BgpPeersResult
    {
        /// <summary>
        /// The name of bgp peer.
        /// </summary>
        public readonly string? BgpPeerName;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.BgpPeersBgpPeerResult> BgpPeers;
        public readonly string? DirectConnectGatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The remote asn of bgp peer.
        /// </summary>
        public readonly int? RemoteAsn;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The id of virtual interface.
        /// </summary>
        public readonly string? VirtualInterfaceId;

        [OutputConstructor]
        private BgpPeersResult(
            string? bgpPeerName,

            ImmutableArray<Outputs.BgpPeersBgpPeerResult> bgpPeers,

            string? directConnectGatewayId,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            int? remoteAsn,

            int totalCount,

            string? virtualInterfaceId)
        {
            BgpPeerName = bgpPeerName;
            BgpPeers = bgpPeers;
            DirectConnectGatewayId = directConnectGatewayId;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            RemoteAsn = remoteAsn;
            TotalCount = totalCount;
            VirtualInterfaceId = virtualInterfaceId;
        }
    }
}
