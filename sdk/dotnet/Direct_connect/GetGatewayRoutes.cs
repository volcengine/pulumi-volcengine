// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Direct_connect
{
    public static class GetGatewayRoutes
    {
        /// <summary>
        /// Use this data source to query detailed information of direct connect gateway routes
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Direct_connect.GetGatewayRoutes.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "dcr-638ry33wmzggn3gd6gv****",
        ///             "dcr-20d6tkadi2k8w65sqhgbj****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGatewayRoutesResult> InvokeAsync(GetGatewayRoutesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayRoutesResult>("volcengine:direct_connect/getGatewayRoutes:getGatewayRoutes", args ?? new GetGatewayRoutesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of direct connect gateway routes
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Direct_connect.GetGatewayRoutes.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "dcr-638ry33wmzggn3gd6gv****",
        ///             "dcr-20d6tkadi2k8w65sqhgbj****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGatewayRoutesResult> Invoke(GetGatewayRoutesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayRoutesResult>("volcengine:direct_connect/getGatewayRoutes:getGatewayRoutes", args ?? new GetGatewayRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayRoutesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cidr block.
        /// </summary>
        [Input("destinationCidrBlock")]
        public string? DestinationCidrBlock { get; set; }

        /// <summary>
        /// The id of direct connect gateway.
        /// </summary>
        [Input("directConnectGatewayId")]
        public string? DirectConnectGatewayId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The id of next hop.
        /// </summary>
        [Input("nextHopId")]
        public string? NextHopId { get; set; }

        /// <summary>
        /// The type of next hop.
        /// </summary>
        [Input("nextHopType")]
        public string? NextHopType { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The type of route. The value can be BGP or CEN or Static.
        /// </summary>
        [Input("routeType")]
        public string? RouteType { get; set; }

        public GetGatewayRoutesArgs()
        {
        }
        public static new GetGatewayRoutesArgs Empty => new GetGatewayRoutesArgs();
    }

    public sealed class GetGatewayRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cidr block.
        /// </summary>
        [Input("destinationCidrBlock")]
        public Input<string>? DestinationCidrBlock { get; set; }

        /// <summary>
        /// The id of direct connect gateway.
        /// </summary>
        [Input("directConnectGatewayId")]
        public Input<string>? DirectConnectGatewayId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The id of next hop.
        /// </summary>
        [Input("nextHopId")]
        public Input<string>? NextHopId { get; set; }

        /// <summary>
        /// The type of next hop.
        /// </summary>
        [Input("nextHopType")]
        public Input<string>? NextHopType { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The type of route. The value can be BGP or CEN or Static.
        /// </summary>
        [Input("routeType")]
        public Input<string>? RouteType { get; set; }

        public GetGatewayRoutesInvokeArgs()
        {
        }
        public static new GetGatewayRoutesInvokeArgs Empty => new GetGatewayRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayRoutesResult
    {
        /// <summary>
        /// The cidr block.
        /// </summary>
        public readonly string? DestinationCidrBlock;
        /// <summary>
        /// The id of direct connect gateway.
        /// </summary>
        public readonly string? DirectConnectGatewayId;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewayRoutesDirectConnectGatewayRouteResult> DirectConnectGatewayRoutes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The id of next hop.
        /// </summary>
        public readonly string? NextHopId;
        /// <summary>
        /// The type of next hop.
        /// </summary>
        public readonly string? NextHopType;
        public readonly string? OutputFile;
        /// <summary>
        /// The type of route.
        /// </summary>
        public readonly string? RouteType;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetGatewayRoutesResult(
            string? destinationCidrBlock,

            string? directConnectGatewayId,

            ImmutableArray<Outputs.GetGatewayRoutesDirectConnectGatewayRouteResult> directConnectGatewayRoutes,

            string id,

            ImmutableArray<string> ids,

            string? nextHopId,

            string? nextHopType,

            string? outputFile,

            string? routeType,

            int totalCount)
        {
            DestinationCidrBlock = destinationCidrBlock;
            DirectConnectGatewayId = directConnectGatewayId;
            DirectConnectGatewayRoutes = directConnectGatewayRoutes;
            Id = id;
            Ids = ids;
            NextHopId = nextHopId;
            NextHopType = nextHopType;
            OutputFile = outputFile;
            RouteType = routeType;
            TotalCount = totalCount;
        }
    }
}
