// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Direct_connect
{
    /// <summary>
    /// Provides a resource to manage direct connect gateway route
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Direct_connect.GatewayRoute("foo", new()
    ///     {
    ///         DestinationCidrBlock = "192.168.40.0/24",
    ///         DirectConnectGatewayId = "dcg-172frxs5utjb44d1w33op****",
    ///         NextHopId = "dcv-1729lrbfx7fuo4d1w34pk****",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DirectConnectGatewayRoute can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:direct_connect/gatewayRoute:GatewayRoute default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:direct_connect/gatewayRoute:GatewayRoute")]
    public partial class GatewayRoute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The id of account.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The create time.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The cidr block.
        /// </summary>
        [Output("destinationCidrBlock")]
        public Output<string> DestinationCidrBlock { get; private set; } = null!;

        /// <summary>
        /// The id of direct connect gateway.
        /// </summary>
        [Output("directConnectGatewayId")]
        public Output<string> DirectConnectGatewayId { get; private set; } = null!;

        /// <summary>
        /// The id of direct connect gateway route.
        /// </summary>
        [Output("directConnectGatewayRouteId")]
        public Output<string> DirectConnectGatewayRouteId { get; private set; } = null!;

        /// <summary>
        /// The id of next hop.
        /// </summary>
        [Output("nextHopId")]
        public Output<string> NextHopId { get; private set; } = null!;

        /// <summary>
        /// The type of next hop.
        /// </summary>
        [Output("nextHopType")]
        public Output<string> NextHopType { get; private set; } = null!;

        /// <summary>
        /// The type of route.
        /// </summary>
        [Output("routeType")]
        public Output<string> RouteType { get; private set; } = null!;

        /// <summary>
        /// The status info.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a GatewayRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GatewayRoute(string name, GatewayRouteArgs args, CustomResourceOptions? options = null)
            : base("volcengine:direct_connect/gatewayRoute:GatewayRoute", name, args ?? new GatewayRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GatewayRoute(string name, Input<string> id, GatewayRouteState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:direct_connect/gatewayRoute:GatewayRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GatewayRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GatewayRoute Get(string name, Input<string> id, GatewayRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new GatewayRoute(name, id, state, options);
        }
    }

    public sealed class GatewayRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cidr block.
        /// </summary>
        [Input("destinationCidrBlock", required: true)]
        public Input<string> DestinationCidrBlock { get; set; } = null!;

        /// <summary>
        /// The id of direct connect gateway.
        /// </summary>
        [Input("directConnectGatewayId", required: true)]
        public Input<string> DirectConnectGatewayId { get; set; } = null!;

        /// <summary>
        /// The id of next hop.
        /// </summary>
        [Input("nextHopId", required: true)]
        public Input<string> NextHopId { get; set; } = null!;

        public GatewayRouteArgs()
        {
        }
        public static new GatewayRouteArgs Empty => new GatewayRouteArgs();
    }

    public sealed class GatewayRouteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of account.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The create time.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The cidr block.
        /// </summary>
        [Input("destinationCidrBlock")]
        public Input<string>? DestinationCidrBlock { get; set; }

        /// <summary>
        /// The id of direct connect gateway.
        /// </summary>
        [Input("directConnectGatewayId")]
        public Input<string>? DirectConnectGatewayId { get; set; }

        /// <summary>
        /// The id of direct connect gateway route.
        /// </summary>
        [Input("directConnectGatewayRouteId")]
        public Input<string>? DirectConnectGatewayRouteId { get; set; }

        /// <summary>
        /// The id of next hop.
        /// </summary>
        [Input("nextHopId")]
        public Input<string>? NextHopId { get; set; }

        /// <summary>
        /// The type of next hop.
        /// </summary>
        [Input("nextHopType")]
        public Input<string>? NextHopType { get; set; }

        /// <summary>
        /// The type of route.
        /// </summary>
        [Input("routeType")]
        public Input<string>? RouteType { get; set; }

        /// <summary>
        /// The status info.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GatewayRouteState()
        {
        }
        public static new GatewayRouteState Empty => new GatewayRouteState();
    }
}
