// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Direct_connect.Outputs
{

    [OutputType]
    public sealed class VirtualInterfacesVirtualInterfaceResult
    {
        /// <summary>
        /// The account ID which this virtual interface belongs.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The band width limit of virtual interface,in Mbps.
        /// </summary>
        public readonly int Bandwidth;
        /// <summary>
        /// The BFD detect interval.
        /// </summary>
        public readonly int BfdDetectInterval;
        /// <summary>
        /// The BFD detect times.
        /// </summary>
        public readonly int BfdDetectMultiplier;
        /// <summary>
        /// The creation time of virtual interface.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The description of the virtual interface.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The direct connect connection ID that associated with this virtual interface.
        /// </summary>
        public readonly string DirectConnectConnectionId;
        /// <summary>
        /// The direct connect gateway ID that associated with this virtual interface.
        /// </summary>
        public readonly string DirectConnectGatewayId;
        /// <summary>
        /// Whether enable BFD detect.
        /// </summary>
        public readonly bool EnableBfd;
        /// <summary>
        /// Whether enable NQA detect.
        /// </summary>
        public readonly bool EnableNqa;
        /// <summary>
        /// The local IP that associated with this virtual interface.
        /// </summary>
        public readonly string LocalIp;
        /// <summary>
        /// The NQA detect interval.
        /// </summary>
        public readonly int NqaDetectInterval;
        /// <summary>
        /// The NAQ detect times.
        /// </summary>
        public readonly int NqaDetectMultiplier;
        /// <summary>
        /// The peer IP that associated with this virtual interface.
        /// </summary>
        public readonly string PeerIp;
        /// <summary>
        /// The route type of virtual interface.
        /// </summary>
        public readonly string RouteType;
        /// <summary>
        /// The status of virtaul interface.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The tags that direct connect gateway added.
        /// </summary>
        public readonly ImmutableArray<Outputs.VirtualInterfacesVirtualInterfaceTagResult> Tags;
        /// <summary>
        /// The update time of virtual interface.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The virtual interface ID.
        /// </summary>
        public readonly string VirtualInterfaceId;
        /// <summary>
        /// The name of virtual interface.
        /// </summary>
        public readonly string VirtualInterfaceName;
        /// <summary>
        /// The VLAN ID of virtual interface.
        /// </summary>
        public readonly int VlanId;

        [OutputConstructor]
        private VirtualInterfacesVirtualInterfaceResult(
            string accountId,

            int bandwidth,

            int bfdDetectInterval,

            int bfdDetectMultiplier,

            string creationTime,

            string description,

            string directConnectConnectionId,

            string directConnectGatewayId,

            bool enableBfd,

            bool enableNqa,

            string localIp,

            int nqaDetectInterval,

            int nqaDetectMultiplier,

            string peerIp,

            string routeType,

            string status,

            ImmutableArray<Outputs.VirtualInterfacesVirtualInterfaceTagResult> tags,

            string updateTime,

            string virtualInterfaceId,

            string virtualInterfaceName,

            int vlanId)
        {
            AccountId = accountId;
            Bandwidth = bandwidth;
            BfdDetectInterval = bfdDetectInterval;
            BfdDetectMultiplier = bfdDetectMultiplier;
            CreationTime = creationTime;
            Description = description;
            DirectConnectConnectionId = directConnectConnectionId;
            DirectConnectGatewayId = directConnectGatewayId;
            EnableBfd = enableBfd;
            EnableNqa = enableNqa;
            LocalIp = localIp;
            NqaDetectInterval = nqaDetectInterval;
            NqaDetectMultiplier = nqaDetectMultiplier;
            PeerIp = peerIp;
            RouteType = routeType;
            Status = status;
            Tags = tags;
            UpdateTime = updateTime;
            VirtualInterfaceId = virtualInterfaceId;
            VirtualInterfaceName = virtualInterfaceName;
            VlanId = vlanId;
        }
    }
}
