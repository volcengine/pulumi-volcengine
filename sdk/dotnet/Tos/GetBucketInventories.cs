// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tos
{
    public static class GetBucketInventories
    {
        /// <summary>
        /// Use this data source to query detailed information of tos bucket inventories
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooBucketInventory = new Volcengine.Tos.BucketInventory("fooBucketInventory", new()
        ///     {
        ///         BucketName = "terraform-demo",
        ///         InventoryId = "acc-test-inventory",
        ///         IsEnabled = true,
        ///         IncludedObjectVersions = "All",
        ///         Schedule = new Volcengine.Tos.Inputs.BucketInventoryScheduleArgs
        ///         {
        ///             Frequency = "Weekly",
        ///         },
        ///         Filter = new Volcengine.Tos.Inputs.BucketInventoryFilterArgs
        ///         {
        ///             Prefix = "test-tf",
        ///         },
        ///         OptionalFields = new Volcengine.Tos.Inputs.BucketInventoryOptionalFieldsArgs
        ///         {
        ///             Fields = new[]
        ///             {
        ///                 "Size",
        ///                 "StorageClass",
        ///                 "CRC64",
        ///             },
        ///         },
        ///         Destination = new Volcengine.Tos.Inputs.BucketInventoryDestinationArgs
        ///         {
        ///             TosBucketDestination = new Volcengine.Tos.Inputs.BucketInventoryDestinationTosBucketDestinationArgs
        ///             {
        ///                 Format = "CSV",
        ///                 AccountId = "21000*****",
        ///                 Bucket = "terraform-demo",
        ///                 Prefix = "tf-test-prefix",
        ///                 Role = "TosArchiveTOSInventory",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooBucketInventories = Volcengine.Tos.GetBucketInventories.Invoke(new()
        ///     {
        ///         BucketName = "terraform-demo",
        ///         InventoryId = fooBucketInventory.InventoryId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBucketInventoriesResult> InvokeAsync(GetBucketInventoriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBucketInventoriesResult>("volcengine:tos/getBucketInventories:getBucketInventories", args ?? new GetBucketInventoriesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tos bucket inventories
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooBucketInventory = new Volcengine.Tos.BucketInventory("fooBucketInventory", new()
        ///     {
        ///         BucketName = "terraform-demo",
        ///         InventoryId = "acc-test-inventory",
        ///         IsEnabled = true,
        ///         IncludedObjectVersions = "All",
        ///         Schedule = new Volcengine.Tos.Inputs.BucketInventoryScheduleArgs
        ///         {
        ///             Frequency = "Weekly",
        ///         },
        ///         Filter = new Volcengine.Tos.Inputs.BucketInventoryFilterArgs
        ///         {
        ///             Prefix = "test-tf",
        ///         },
        ///         OptionalFields = new Volcengine.Tos.Inputs.BucketInventoryOptionalFieldsArgs
        ///         {
        ///             Fields = new[]
        ///             {
        ///                 "Size",
        ///                 "StorageClass",
        ///                 "CRC64",
        ///             },
        ///         },
        ///         Destination = new Volcengine.Tos.Inputs.BucketInventoryDestinationArgs
        ///         {
        ///             TosBucketDestination = new Volcengine.Tos.Inputs.BucketInventoryDestinationTosBucketDestinationArgs
        ///             {
        ///                 Format = "CSV",
        ///                 AccountId = "21000*****",
        ///                 Bucket = "terraform-demo",
        ///                 Prefix = "tf-test-prefix",
        ///                 Role = "TosArchiveTOSInventory",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooBucketInventories = Volcengine.Tos.GetBucketInventories.Invoke(new()
        ///     {
        ///         BucketName = "terraform-demo",
        ///         InventoryId = fooBucketInventory.InventoryId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBucketInventoriesResult> Invoke(GetBucketInventoriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBucketInventoriesResult>("volcengine:tos/getBucketInventories:getBucketInventories", args ?? new GetBucketInventoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBucketInventoriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name the TOS bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public string BucketName { get; set; } = null!;

        /// <summary>
        /// The id the TOS bucket inventory.
        /// </summary>
        [Input("inventoryId")]
        public string? InventoryId { get; set; }

        /// <summary>
        /// A Name Regex of TOS bucket inventory.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetBucketInventoriesArgs()
        {
        }
        public static new GetBucketInventoriesArgs Empty => new GetBucketInventoriesArgs();
    }

    public sealed class GetBucketInventoriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name the TOS bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// The id the TOS bucket inventory.
        /// </summary>
        [Input("inventoryId")]
        public Input<string>? InventoryId { get; set; }

        /// <summary>
        /// A Name Regex of TOS bucket inventory.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetBucketInventoriesInvokeArgs()
        {
        }
        public static new GetBucketInventoriesInvokeArgs Empty => new GetBucketInventoriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetBucketInventoriesResult
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        public readonly string BucketName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBucketInventoriesInventoryConfigurationResult> InventoryConfigurations;
        public readonly string? InventoryId;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetBucketInventoriesResult(
            string bucketName,

            string id,

            ImmutableArray<Outputs.GetBucketInventoriesInventoryConfigurationResult> inventoryConfigurations,

            string? inventoryId,

            string? nameRegex,

            string? outputFile,

            int totalCount)
        {
            BucketName = bucketName;
            Id = id;
            InventoryConfigurations = inventoryConfigurations;
            InventoryId = inventoryId;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
