// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tos
{
    /// <summary>
    /// Provides a resource to manage tos bucket encryption
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooBucket = new Volcengine.Tos.Bucket("fooBucket", new()
    ///     {
    ///         BucketName = "tf-acc-test-bucket",
    ///         PublicAcl = "private",
    ///         AzRedundancy = "multi-az",
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Tos.Inputs.BucketTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooKeyring = new Volcengine.Kms.Keyring("fooKeyring", new()
    ///     {
    ///         KeyringName = "acc-test-keyring",
    ///         Description = "acc-test",
    ///         ProjectName = "default",
    ///     });
    /// 
    ///     var fooBucketEncryption = new Volcengine.Tos.BucketEncryption("fooBucketEncryption", new()
    ///     {
    ///         BucketName = fooBucket.Id,
    ///         Rule = new Volcengine.Tos.Inputs.BucketEncryptionRuleArgs
    ///         {
    ///             ApplyServerSideEncryptionByDefault = new Volcengine.Tos.Inputs.BucketEncryptionRuleApplyServerSideEncryptionByDefaultArgs
    ///             {
    ///                 SseAlgorithm = "kms",
    ///                 KmsDataEncryption = "AES256",
    ///                 KmsMasterKeyId = fooKeyring.Id,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TosBucketEncryption can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:tos/bucketEncryption:BucketEncryption default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:tos/bucketEncryption:BucketEncryption")]
    public partial class BucketEncryption : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// The rule of the bucket encryption.
        /// </summary>
        [Output("rule")]
        public Output<Outputs.BucketEncryptionRule> Rule { get; private set; } = null!;


        /// <summary>
        /// Create a BucketEncryption resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketEncryption(string name, BucketEncryptionArgs args, CustomResourceOptions? options = null)
            : base("volcengine:tos/bucketEncryption:BucketEncryption", name, args ?? new BucketEncryptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketEncryption(string name, Input<string> id, BucketEncryptionState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:tos/bucketEncryption:BucketEncryption", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketEncryption resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketEncryption Get(string name, Input<string> id, BucketEncryptionState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketEncryption(name, id, state, options);
        }
    }

    public sealed class BucketEncryptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// The rule of the bucket encryption.
        /// </summary>
        [Input("rule", required: true)]
        public Input<Inputs.BucketEncryptionRuleArgs> Rule { get; set; } = null!;

        public BucketEncryptionArgs()
        {
        }
        public static new BucketEncryptionArgs Empty => new BucketEncryptionArgs();
    }

    public sealed class BucketEncryptionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// The rule of the bucket encryption.
        /// </summary>
        [Input("rule")]
        public Input<Inputs.BucketEncryptionRuleGetArgs>? Rule { get; set; }

        public BucketEncryptionState()
        {
        }
        public static new BucketEncryptionState Empty => new BucketEncryptionState();
    }
}
