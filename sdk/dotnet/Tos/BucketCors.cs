// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tos
{
    /// <summary>
    /// Provides a resource to manage tos bucket cors
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooBucket = new Volcengine.Tos.Bucket("fooBucket", new()
    ///     {
    ///         BucketName = "tf-acc-test-bucket",
    ///         PublicAcl = "private",
    ///         AzRedundancy = "multi-az",
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Tos.Inputs.BucketTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooBucketCors = new Volcengine.Tos.BucketCors("fooBucketCors", new()
    ///     {
    ///         BucketName = fooBucket.Id,
    ///         CorsRules = new[]
    ///         {
    ///             new Volcengine.Tos.Inputs.BucketCorsCorsRuleArgs
    ///             {
    ///                 AllowedOrigins = new[]
    ///                 {
    ///                     "*",
    ///                 },
    ///                 AllowedMethods = new[]
    ///                 {
    ///                     "GET",
    ///                     "POST",
    ///                 },
    ///                 AllowedHeaders = new[]
    ///                 {
    ///                     "Authorization",
    ///                 },
    ///                 ExposeHeaders = new[]
    ///                 {
    ///                     "x-tos-request-id",
    ///                 },
    ///                 MaxAgeSeconds = 1500,
    ///             },
    ///             new Volcengine.Tos.Inputs.BucketCorsCorsRuleArgs
    ///             {
    ///                 AllowedOrigins = new[]
    ///                 {
    ///                     "*",
    ///                     "https://www.volcengine.com",
    ///                 },
    ///                 AllowedMethods = new[]
    ///                 {
    ///                     "POST",
    ///                     "PUT",
    ///                     "DELETE",
    ///                 },
    ///                 AllowedHeaders = new[]
    ///                 {
    ///                     "Authorization",
    ///                 },
    ///                 ExposeHeaders = new[]
    ///                 {
    ///                     "x-tos-request-id",
    ///                 },
    ///                 MaxAgeSeconds = 2000,
    ///                 ResponseVary = true,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TosBucketCors can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:tos/bucketCors:BucketCors default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:tos/bucketCors:BucketCors")]
    public partial class BucketCors : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// The CORS rules of the bucket.
        /// </summary>
        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.BucketCorsCorsRule>> CorsRules { get; private set; } = null!;


        /// <summary>
        /// Create a BucketCors resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketCors(string name, BucketCorsArgs args, CustomResourceOptions? options = null)
            : base("volcengine:tos/bucketCors:BucketCors", name, args ?? new BucketCorsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketCors(string name, Input<string> id, BucketCorsState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:tos/bucketCors:BucketCors", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketCors resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketCors Get(string name, Input<string> id, BucketCorsState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketCors(name, id, state, options);
        }
    }

    public sealed class BucketCorsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        [Input("corsRules", required: true)]
        private InputList<Inputs.BucketCorsCorsRuleArgs>? _corsRules;

        /// <summary>
        /// The CORS rules of the bucket.
        /// </summary>
        public InputList<Inputs.BucketCorsCorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketCorsCorsRuleArgs>());
            set => _corsRules = value;
        }

        public BucketCorsArgs()
        {
        }
        public static new BucketCorsArgs Empty => new BucketCorsArgs();
    }

    public sealed class BucketCorsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketCorsCorsRuleGetArgs>? _corsRules;

        /// <summary>
        /// The CORS rules of the bucket.
        /// </summary>
        public InputList<Inputs.BucketCorsCorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketCorsCorsRuleGetArgs>());
            set => _corsRules = value;
        }

        public BucketCorsState()
        {
        }
        public static new BucketCorsState Empty => new BucketCorsState();
    }
}
