// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tos
{
    /// <summary>
    /// Provides a resource to manage tos bucket notification
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooBucket = new Volcengine.Tos.Bucket("fooBucket", new()
    ///     {
    ///         BucketName = "tf-acc-test-bucket",
    ///         PublicAcl = "private",
    ///         AzRedundancy = "multi-az",
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Tos.Inputs.BucketTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooBucketNotification = new Volcengine.Tos.BucketNotification("fooBucketNotification", new()
    ///     {
    ///         BucketName = fooBucket.Id,
    ///         Rules = new Volcengine.Tos.Inputs.BucketNotificationRulesArgs
    ///         {
    ///             RuleId = "acc-test-rule",
    ///             Events = new[]
    ///             {
    ///                 "tos:ObjectCreated:Put",
    ///                 "tos:ObjectCreated:Post",
    ///             },
    ///             Destination = new Volcengine.Tos.Inputs.BucketNotificationRulesDestinationArgs
    ///             {
    ///                 VeFaas = new[]
    ///                 {
    ///                     new Volcengine.Tos.Inputs.BucketNotificationRulesDestinationVeFaaArgs
    ///                     {
    ///                         FunctionId = "80w95pns",
    ///                     },
    ///                     new Volcengine.Tos.Inputs.BucketNotificationRulesDestinationVeFaaArgs
    ///                     {
    ///                         FunctionId = "crnrfajj",
    ///                     },
    ///                 },
    ///             },
    ///             Filter = new Volcengine.Tos.Inputs.BucketNotificationRulesFilterArgs
    ///             {
    ///                 TosKey = new Volcengine.Tos.Inputs.BucketNotificationRulesFilterTosKeyArgs
    ///                 {
    ///                     FilterRules = new[]
    ///                     {
    ///                         new Volcengine.Tos.Inputs.BucketNotificationRulesFilterTosKeyFilterRuleArgs
    ///                         {
    ///                             Name = "prefix",
    ///                             Value = "a",
    ///                         },
    ///                         new Volcengine.Tos.Inputs.BucketNotificationRulesFilterTosKeyFilterRuleArgs
    ///                         {
    ///                             Name = "suffix",
    ///                             Value = "b",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var foo1 = new Volcengine.Tos.BucketNotification("foo1", new()
    ///     {
    ///         BucketName = fooBucket.Id,
    ///         Rules = new Volcengine.Tos.Inputs.BucketNotificationRulesArgs
    ///         {
    ///             RuleId = "acc-test-rule-1",
    ///             Events = new[]
    ///             {
    ///                 "tos:ObjectRemoved:Delete",
    ///                 "tos:ObjectRemoved:DeleteMarkerCreated",
    ///             },
    ///             Destination = new Volcengine.Tos.Inputs.BucketNotificationRulesDestinationArgs
    ///             {
    ///                 VeFaas = new[]
    ///                 {
    ///                     new Volcengine.Tos.Inputs.BucketNotificationRulesDestinationVeFaaArgs
    ///                     {
    ///                         FunctionId = "80w95pns",
    ///                     },
    ///                     new Volcengine.Tos.Inputs.BucketNotificationRulesDestinationVeFaaArgs
    ///                     {
    ///                         FunctionId = "crnrfajj",
    ///                     },
    ///                 },
    ///             },
    ///             Filter = new Volcengine.Tos.Inputs.BucketNotificationRulesFilterArgs
    ///             {
    ///                 TosKey = new Volcengine.Tos.Inputs.BucketNotificationRulesFilterTosKeyArgs
    ///                 {
    ///                     FilterRules = new[]
    ///                     {
    ///                         new Volcengine.Tos.Inputs.BucketNotificationRulesFilterTosKeyFilterRuleArgs
    ///                         {
    ///                             Name = "prefix",
    ///                             Value = "aaa",
    ///                         },
    ///                         new Volcengine.Tos.Inputs.BucketNotificationRulesFilterTosKeyFilterRuleArgs
    ///                         {
    ///                             Name = "suffix",
    ///                             Value = "bbb",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TosBucketNotification can be imported using the bucketName, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:tos/bucketNotification:BucketNotification default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:tos/bucketNotification:BucketNotification")]
    public partial class BucketNotification : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// The notification rule of the bucket.
        /// </summary>
        [Output("rules")]
        public Output<Outputs.BucketNotificationRules> Rules { get; private set; } = null!;

        /// <summary>
        /// The version of the notification.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a BucketNotification resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketNotification(string name, BucketNotificationArgs args, CustomResourceOptions? options = null)
            : base("volcengine:tos/bucketNotification:BucketNotification", name, args ?? new BucketNotificationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketNotification(string name, Input<string> id, BucketNotificationState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:tos/bucketNotification:BucketNotification", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketNotification resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketNotification Get(string name, Input<string> id, BucketNotificationState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketNotification(name, id, state, options);
        }
    }

    public sealed class BucketNotificationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// The notification rule of the bucket.
        /// </summary>
        [Input("rules", required: true)]
        public Input<Inputs.BucketNotificationRulesArgs> Rules { get; set; } = null!;

        public BucketNotificationArgs()
        {
        }
        public static new BucketNotificationArgs Empty => new BucketNotificationArgs();
    }

    public sealed class BucketNotificationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// The notification rule of the bucket.
        /// </summary>
        [Input("rules")]
        public Input<Inputs.BucketNotificationRulesGetArgs>? Rules { get; set; }

        /// <summary>
        /// The version of the notification.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public BucketNotificationState()
        {
        }
        public static new BucketNotificationState Empty => new BucketNotificationState();
    }
}
