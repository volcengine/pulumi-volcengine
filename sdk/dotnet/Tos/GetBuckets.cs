// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tos
{
    public static class GetBuckets
    {
        /// <summary>
        /// Use this data source to query detailed information of tos buckets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tos.GetBuckets.Invoke(new()
        ///     {
        ///         NameRegex = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBucketsResult> InvokeAsync(GetBucketsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBucketsResult>("volcengine:tos/getBuckets:getBuckets", args ?? new GetBucketsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tos buckets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tos.GetBuckets.Invoke(new()
        ///     {
        ///         NameRegex = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBucketsResult> Invoke(GetBucketsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBucketsResult>("volcengine:tos/getBuckets:getBuckets", args ?? new GetBucketsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBucketsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name the TOS bucket.
        /// </summary>
        [Input("bucketName")]
        public string? BucketName { get; set; }

        /// <summary>
        /// A Name Regex of TOS bucket.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetBucketsArgs()
        {
        }
        public static new GetBucketsArgs Empty => new GetBucketsArgs();
    }

    public sealed class GetBucketsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name the TOS bucket.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// A Name Regex of TOS bucket.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetBucketsInvokeArgs()
        {
        }
        public static new GetBucketsInvokeArgs Empty => new GetBucketsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBucketsResult
    {
        public readonly string? BucketName;
        /// <summary>
        /// The collection of TOS bucket query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBucketsBucketResult> Buckets;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of TOS bucket query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetBucketsResult(
            string? bucketName,

            ImmutableArray<Outputs.GetBucketsBucketResult> buckets,

            string id,

            string? nameRegex,

            string? outputFile,

            int totalCount)
        {
            BucketName = bucketName;
            Buckets = buckets;
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
