// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Tos
{
    /// <summary>
    /// Provides a resource to manage tos bucket realtime log
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // When deleting this resource, the tls related resources such as project and topic will not be automatically deleted
    ///     var foo = new Volcengine.Tos.BucketRealtimeLog("foo", new()
    ///     {
    ///         AccessLogConfiguration = new Volcengine.Tos.Inputs.BucketRealtimeLogAccessLogConfigurationArgs
    ///         {
    ///             Ttl = 6,
    ///         },
    ///         BucketName = "terraform-demo",
    ///         Role = "TOSLogArchiveTLSRole",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TosBucketRealtimeLog can be imported using the bucket_name, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:tos/bucketRealtimeLog:BucketRealtimeLog default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:tos/bucketRealtimeLog:BucketRealtimeLog")]
    public partial class BucketRealtimeLog : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The export schedule of the bucket inventory.
        /// </summary>
        [Output("accessLogConfiguration")]
        public Output<Outputs.BucketRealtimeLogAccessLogConfiguration> AccessLogConfiguration { get; private set; } = null!;

        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// The role name used to grant TOS access to create resources such as projects and topics, and write logs to the TLS logging service. You can use the default TOS role `TOSLogArchiveTLSRole`.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;


        /// <summary>
        /// Create a BucketRealtimeLog resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketRealtimeLog(string name, BucketRealtimeLogArgs args, CustomResourceOptions? options = null)
            : base("volcengine:tos/bucketRealtimeLog:BucketRealtimeLog", name, args ?? new BucketRealtimeLogArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketRealtimeLog(string name, Input<string> id, BucketRealtimeLogState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:tos/bucketRealtimeLog:BucketRealtimeLog", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketRealtimeLog resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketRealtimeLog Get(string name, Input<string> id, BucketRealtimeLogState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketRealtimeLog(name, id, state, options);
        }
    }

    public sealed class BucketRealtimeLogArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The export schedule of the bucket inventory.
        /// </summary>
        [Input("accessLogConfiguration", required: true)]
        public Input<Inputs.BucketRealtimeLogAccessLogConfigurationArgs> AccessLogConfiguration { get; set; } = null!;

        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// The role name used to grant TOS access to create resources such as projects and topics, and write logs to the TLS logging service. You can use the default TOS role `TOSLogArchiveTLSRole`.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        public BucketRealtimeLogArgs()
        {
        }
        public static new BucketRealtimeLogArgs Empty => new BucketRealtimeLogArgs();
    }

    public sealed class BucketRealtimeLogState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The export schedule of the bucket inventory.
        /// </summary>
        [Input("accessLogConfiguration")]
        public Input<Inputs.BucketRealtimeLogAccessLogConfigurationGetArgs>? AccessLogConfiguration { get; set; }

        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// The role name used to grant TOS access to create resources such as projects and topics, and write logs to the TLS logging service. You can use the default TOS role `TOSLogArchiveTLSRole`.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        public BucketRealtimeLogState()
        {
        }
        public static new BucketRealtimeLogState Empty => new BucketRealtimeLogState();
    }
}
