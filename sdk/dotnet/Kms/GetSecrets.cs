// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Kms
{
    public static class GetSecrets
    {
        /// <summary>
        /// Use this data source to query detailed information of kms secrets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Kms.GetSecrets.Invoke(new()
        ///     {
        ///         Descriptions = new[]
        ///         {
        ///             "tf-1",
        ///             "tf-2",
        ///         },
        ///         SecretNames = new[]
        ///         {
        ///             "5r3",
        ///             "5r",
        ///             "tf",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecretsResult> InvokeAsync(GetSecretsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretsResult>("volcengine:kms/getSecrets:getSecrets", args ?? new GetSecretsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of kms secrets
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Kms.GetSecrets.Invoke(new()
        ///     {
        ///         Descriptions = new[]
        ///         {
        ///             "tf-1",
        ///             "tf-2",
        ///         },
        ///         SecretNames = new[]
        ///         {
        ///             "5r3",
        ///             "5r",
        ///             "tf",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecretsResult> Invoke(GetSecretsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretsResult>("volcengine:kms/getSecrets:getSecrets", args ?? new GetSecretsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretsArgs : global::Pulumi.InvokeArgs
    {
        [Input("creationDateRanges")]
        private List<string>? _creationDateRanges;

        /// <summary>
        /// The creation date of the secret.
        /// </summary>
        public List<string> CreationDateRanges
        {
            get => _creationDateRanges ?? (_creationDateRanges = new List<string>());
            set => _creationDateRanges = value;
        }

        [Input("descriptions")]
        private List<string>? _descriptions;

        /// <summary>
        /// The description of the secret.
        /// </summary>
        public List<string> Descriptions
        {
            get => _descriptions ?? (_descriptions = new List<string>());
            set => _descriptions = value;
        }

        [Input("managedStates")]
        private List<string>? _managedStates;

        /// <summary>
        /// The state of the managed.
        /// </summary>
        public List<string> ManagedStates
        {
            get => _managedStates ?? (_managedStates = new List<string>());
            set => _managedStates = value;
        }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The name of the project to which the secret belongs.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        [Input("rotationStates")]
        private List<string>? _rotationStates;

        /// <summary>
        /// The state of the rotation.
        /// </summary>
        public List<string> RotationStates
        {
            get => _rotationStates ?? (_rotationStates = new List<string>());
            set => _rotationStates = value;
        }

        [Input("secretNames")]
        private List<string>? _secretNames;

        /// <summary>
        /// The name of the secret.
        /// </summary>
        public List<string> SecretNames
        {
            get => _secretNames ?? (_secretNames = new List<string>());
            set => _secretNames = value;
        }

        [Input("secretStates")]
        private List<string>? _secretStates;

        /// <summary>
        /// The state of the secret.
        /// </summary>
        public List<string> SecretStates
        {
            get => _secretStates ?? (_secretStates = new List<string>());
            set => _secretStates = value;
        }

        [Input("secretTypes")]
        private List<string>? _secretTypes;

        /// <summary>
        /// The type of the secret.
        /// </summary>
        public List<string> SecretTypes
        {
            get => _secretTypes ?? (_secretTypes = new List<string>());
            set => _secretTypes = value;
        }

        [Input("trns")]
        private List<string>? _trns;

        /// <summary>
        /// The trn of the secret.
        /// </summary>
        public List<string> Trns
        {
            get => _trns ?? (_trns = new List<string>());
            set => _trns = value;
        }

        [Input("updateDateRanges")]
        private List<string>? _updateDateRanges;

        /// <summary>
        /// The update date of the secret.
        /// </summary>
        public List<string> UpdateDateRanges
        {
            get => _updateDateRanges ?? (_updateDateRanges = new List<string>());
            set => _updateDateRanges = value;
        }

        public GetSecretsArgs()
        {
        }
        public static new GetSecretsArgs Empty => new GetSecretsArgs();
    }

    public sealed class GetSecretsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("creationDateRanges")]
        private InputList<string>? _creationDateRanges;

        /// <summary>
        /// The creation date of the secret.
        /// </summary>
        public InputList<string> CreationDateRanges
        {
            get => _creationDateRanges ?? (_creationDateRanges = new InputList<string>());
            set => _creationDateRanges = value;
        }

        [Input("descriptions")]
        private InputList<string>? _descriptions;

        /// <summary>
        /// The description of the secret.
        /// </summary>
        public InputList<string> Descriptions
        {
            get => _descriptions ?? (_descriptions = new InputList<string>());
            set => _descriptions = value;
        }

        [Input("managedStates")]
        private InputList<string>? _managedStates;

        /// <summary>
        /// The state of the managed.
        /// </summary>
        public InputList<string> ManagedStates
        {
            get => _managedStates ?? (_managedStates = new InputList<string>());
            set => _managedStates = value;
        }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The name of the project to which the secret belongs.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("rotationStates")]
        private InputList<string>? _rotationStates;

        /// <summary>
        /// The state of the rotation.
        /// </summary>
        public InputList<string> RotationStates
        {
            get => _rotationStates ?? (_rotationStates = new InputList<string>());
            set => _rotationStates = value;
        }

        [Input("secretNames")]
        private InputList<string>? _secretNames;

        /// <summary>
        /// The name of the secret.
        /// </summary>
        public InputList<string> SecretNames
        {
            get => _secretNames ?? (_secretNames = new InputList<string>());
            set => _secretNames = value;
        }

        [Input("secretStates")]
        private InputList<string>? _secretStates;

        /// <summary>
        /// The state of the secret.
        /// </summary>
        public InputList<string> SecretStates
        {
            get => _secretStates ?? (_secretStates = new InputList<string>());
            set => _secretStates = value;
        }

        [Input("secretTypes")]
        private InputList<string>? _secretTypes;

        /// <summary>
        /// The type of the secret.
        /// </summary>
        public InputList<string> SecretTypes
        {
            get => _secretTypes ?? (_secretTypes = new InputList<string>());
            set => _secretTypes = value;
        }

        [Input("trns")]
        private InputList<string>? _trns;

        /// <summary>
        /// The trn of the secret.
        /// </summary>
        public InputList<string> Trns
        {
            get => _trns ?? (_trns = new InputList<string>());
            set => _trns = value;
        }

        [Input("updateDateRanges")]
        private InputList<string>? _updateDateRanges;

        /// <summary>
        /// The update date of the secret.
        /// </summary>
        public InputList<string> UpdateDateRanges
        {
            get => _updateDateRanges ?? (_updateDateRanges = new InputList<string>());
            set => _updateDateRanges = value;
        }

        public GetSecretsInvokeArgs()
        {
        }
        public static new GetSecretsInvokeArgs Empty => new GetSecretsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretsResult
    {
        public readonly ImmutableArray<string> CreationDateRanges;
        /// <summary>
        /// The description of the secret.
        /// </summary>
        public readonly ImmutableArray<string> Descriptions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> ManagedStates;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The project name of the secret.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// The rotation state of the secret.
        /// </summary>
        public readonly ImmutableArray<string> RotationStates;
        /// <summary>
        /// The name of the secret.
        /// </summary>
        public readonly ImmutableArray<string> SecretNames;
        /// <summary>
        /// The state of secret.
        /// </summary>
        public readonly ImmutableArray<string> SecretStates;
        /// <summary>
        /// The type of the secret.
        /// </summary>
        public readonly ImmutableArray<string> SecretTypes;
        /// <summary>
        /// The information about the secret.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecretsSecretResult> Secrets;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The information about the tenant resource name (TRN).
        /// </summary>
        public readonly ImmutableArray<string> Trns;
        public readonly ImmutableArray<string> UpdateDateRanges;

        [OutputConstructor]
        private GetSecretsResult(
            ImmutableArray<string> creationDateRanges,

            ImmutableArray<string> descriptions,

            string id,

            ImmutableArray<string> managedStates,

            string? nameRegex,

            string? outputFile,

            string? projectName,

            ImmutableArray<string> rotationStates,

            ImmutableArray<string> secretNames,

            ImmutableArray<string> secretStates,

            ImmutableArray<string> secretTypes,

            ImmutableArray<Outputs.GetSecretsSecretResult> secrets,

            int totalCount,

            ImmutableArray<string> trns,

            ImmutableArray<string> updateDateRanges)
        {
            CreationDateRanges = creationDateRanges;
            Descriptions = descriptions;
            Id = id;
            ManagedStates = managedStates;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProjectName = projectName;
            RotationStates = rotationStates;
            SecretNames = secretNames;
            SecretStates = secretStates;
            SecretTypes = secretTypes;
            Secrets = secrets;
            TotalCount = totalCount;
            Trns = trns;
            UpdateDateRanges = updateDateRanges;
        }
    }
}
