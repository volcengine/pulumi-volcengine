// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Kms.Outputs
{

    [OutputType]
    public sealed class KeysKeyResult
    {
        /// <summary>
        /// The date when the keyring was created.
        /// </summary>
        public readonly int CreationDate;
        /// <summary>
        /// The description of the key.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The unique ID of the key.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The time when the key material will expire.
        /// </summary>
        public readonly string KeyMaterialExpireTime;
        /// <summary>
        /// The name of the key.
        /// </summary>
        public readonly string KeyName;
        /// <summary>
        /// The algorithm used in the key.
        /// </summary>
        public readonly string KeySpec;
        /// <summary>
        /// The state of the key.
        /// </summary>
        public readonly string KeyState;
        /// <summary>
        /// The usage of the key.
        /// </summary>
        public readonly string KeyUsage;
        /// <summary>
        /// The last time the key was rotated.
        /// </summary>
        public readonly string LastRotationTime;
        /// <summary>
        /// Whether it is the master key of the Multi-region type.
        /// </summary>
        public readonly bool MultiRegion;
        /// <summary>
        /// The configuration of Multi-region key.
        /// </summary>
        public readonly Outputs.KeysKeyMultiRegionConfigurationResult MultiRegionConfiguration;
        /// <summary>
        /// The origin of the key.
        /// </summary>
        public readonly string Origin;
        /// <summary>
        /// The protection level of the key.
        /// </summary>
        public readonly string ProtectionLevel;
        /// <summary>
        /// The rotation configuration of the key.
        /// </summary>
        public readonly string RotationState;
        /// <summary>
        /// The time when the key will be deleted.
        /// </summary>
        public readonly string ScheduleDeleteTime;
        /// <summary>
        /// The next time the key will be rotated.
        /// </summary>
        public readonly string ScheduleRotationTime;
        /// <summary>
        /// A list of tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.KeysKeyTagResult> Tags;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string Trn;
        /// <summary>
        /// The date when the keyring was updated.
        /// </summary>
        public readonly int UpdateDate;

        [OutputConstructor]
        private KeysKeyResult(
            int creationDate,

            string description,

            string id,

            string keyMaterialExpireTime,

            string keyName,

            string keySpec,

            string keyState,

            string keyUsage,

            string lastRotationTime,

            bool multiRegion,

            Outputs.KeysKeyMultiRegionConfigurationResult multiRegionConfiguration,

            string origin,

            string protectionLevel,

            string rotationState,

            string scheduleDeleteTime,

            string scheduleRotationTime,

            ImmutableArray<Outputs.KeysKeyTagResult> tags,

            string trn,

            int updateDate)
        {
            CreationDate = creationDate;
            Description = description;
            Id = id;
            KeyMaterialExpireTime = keyMaterialExpireTime;
            KeyName = keyName;
            KeySpec = keySpec;
            KeyState = keyState;
            KeyUsage = keyUsage;
            LastRotationTime = lastRotationTime;
            MultiRegion = multiRegion;
            MultiRegionConfiguration = multiRegionConfiguration;
            Origin = origin;
            ProtectionLevel = protectionLevel;
            RotationState = rotationState;
            ScheduleDeleteTime = scheduleDeleteTime;
            ScheduleRotationTime = scheduleRotationTime;
            Tags = tags;
            Trn = trn;
            UpdateDate = updateDate;
        }
    }
}
