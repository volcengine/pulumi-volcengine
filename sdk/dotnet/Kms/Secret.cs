// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Kms
{
    /// <summary>
    /// Provides a resource to manage kms secret
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Kms.Secret("foo", new()
    ///     {
    ///         Description = "tf-test",
    ///         SecretName = "tf-test1",
    ///         SecretType = "Generic",
    ///         SecretValue = "{\"dasdasd\":\"dasdasd\"}",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// KmsSecret can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:kms/secret:Secret default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:kms/secret:Secret")]
    public partial class Secret : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The rotation state of the secret.
        /// </summary>
        [Output("automaticRotation")]
        public Output<bool?> AutomaticRotation { get; private set; } = null!;

        /// <summary>
        /// The date when the secret was created.
        /// </summary>
        [Output("creationDate")]
        public Output<int> CreationDate { get; private set; } = null!;

        /// <summary>
        /// The description of the secret.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The TRN of the KMS key used to encrypt the secret value.
        /// </summary>
        [Output("encryptionKey")]
        public Output<string> EncryptionKey { get; private set; } = null!;

        /// <summary>
        /// The extended configurations of the secret.
        /// </summary>
        [Output("extendedConfig")]
        public Output<string> ExtendedConfig { get; private set; } = null!;

        /// <summary>
        /// The last time the secret was rotated.
        /// </summary>
        [Output("lastRotationTime")]
        public Output<string> LastRotationTime { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the secret is hosted.
        /// </summary>
        [Output("managed")]
        public Output<bool> Managed { get; private set; } = null!;

        /// <summary>
        /// The project name of the secret.
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The interval at which automatic rotation is performed.
        /// </summary>
        [Output("rotationInterval")]
        public Output<string> RotationInterval { get; private set; } = null!;

        /// <summary>
        /// Rotation interval second.
        /// </summary>
        [Output("rotationIntervalSecond")]
        public Output<int> RotationIntervalSecond { get; private set; } = null!;

        /// <summary>
        /// The rotation state of the secret.
        /// </summary>
        [Output("rotationState")]
        public Output<string> RotationState { get; private set; } = null!;

        /// <summary>
        /// The time when the secret will be deleted.
        /// </summary>
        [Output("scheduleDeleteTime")]
        public Output<string> ScheduleDeleteTime { get; private set; } = null!;

        /// <summary>
        /// The next time the secret will be rotated.
        /// </summary>
        [Output("scheduleRotationTime")]
        public Output<string> ScheduleRotationTime { get; private set; } = null!;

        /// <summary>
        /// The name of the secret.
        /// </summary>
        [Output("secretName")]
        public Output<string> SecretName { get; private set; } = null!;

        /// <summary>
        /// The type of the secret.
        /// </summary>
        [Output("secretType")]
        public Output<string> SecretType { get; private set; } = null!;

        /// <summary>
        /// The value of the secret.
        /// </summary>
        [Output("secretValue")]
        public Output<string> SecretValue { get; private set; } = null!;

        /// <summary>
        /// The state of secret.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The information about the tenant resource name (TRN).
        /// </summary>
        [Output("trn")]
        public Output<string> Trn { get; private set; } = null!;

        /// <summary>
        /// The tenant ID of the secret.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// The date when the secret was updated.
        /// </summary>
        [Output("updateDate")]
        public Output<int> UpdateDate { get; private set; } = null!;

        /// <summary>
        /// The ID of secret.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a Secret resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Secret(string name, SecretArgs args, CustomResourceOptions? options = null)
            : base("volcengine:kms/secret:Secret", name, args ?? new SecretArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Secret(string name, Input<string> id, SecretState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:kms/secret:Secret", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Secret resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Secret Get(string name, Input<string> id, SecretState? state = null, CustomResourceOptions? options = null)
        {
            return new Secret(name, id, state, options);
        }
    }

    public sealed class SecretArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The rotation state of the secret.
        /// </summary>
        [Input("automaticRotation")]
        public Input<bool>? AutomaticRotation { get; set; }

        /// <summary>
        /// The description of the secret.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The TRN of the KMS key used to encrypt the secret value.
        /// </summary>
        [Input("encryptionKey")]
        public Input<string>? EncryptionKey { get; set; }

        /// <summary>
        /// The extended configurations of the secret.
        /// </summary>
        [Input("extendedConfig")]
        public Input<string>? ExtendedConfig { get; set; }

        /// <summary>
        /// The project name of the secret.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The interval at which automatic rotation is performed.
        /// </summary>
        [Input("rotationInterval")]
        public Input<string>? RotationInterval { get; set; }

        /// <summary>
        /// The name of the secret.
        /// </summary>
        [Input("secretName", required: true)]
        public Input<string> SecretName { get; set; } = null!;

        /// <summary>
        /// The type of the secret.
        /// </summary>
        [Input("secretType", required: true)]
        public Input<string> SecretType { get; set; } = null!;

        /// <summary>
        /// The value of the secret.
        /// </summary>
        [Input("secretValue", required: true)]
        public Input<string> SecretValue { get; set; } = null!;

        public SecretArgs()
        {
        }
        public static new SecretArgs Empty => new SecretArgs();
    }

    public sealed class SecretState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The rotation state of the secret.
        /// </summary>
        [Input("automaticRotation")]
        public Input<bool>? AutomaticRotation { get; set; }

        /// <summary>
        /// The date when the secret was created.
        /// </summary>
        [Input("creationDate")]
        public Input<int>? CreationDate { get; set; }

        /// <summary>
        /// The description of the secret.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The TRN of the KMS key used to encrypt the secret value.
        /// </summary>
        [Input("encryptionKey")]
        public Input<string>? EncryptionKey { get; set; }

        /// <summary>
        /// The extended configurations of the secret.
        /// </summary>
        [Input("extendedConfig")]
        public Input<string>? ExtendedConfig { get; set; }

        /// <summary>
        /// The last time the secret was rotated.
        /// </summary>
        [Input("lastRotationTime")]
        public Input<string>? LastRotationTime { get; set; }

        /// <summary>
        /// Indicates whether the secret is hosted.
        /// </summary>
        [Input("managed")]
        public Input<bool>? Managed { get; set; }

        /// <summary>
        /// The project name of the secret.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The interval at which automatic rotation is performed.
        /// </summary>
        [Input("rotationInterval")]
        public Input<string>? RotationInterval { get; set; }

        /// <summary>
        /// Rotation interval second.
        /// </summary>
        [Input("rotationIntervalSecond")]
        public Input<int>? RotationIntervalSecond { get; set; }

        /// <summary>
        /// The rotation state of the secret.
        /// </summary>
        [Input("rotationState")]
        public Input<string>? RotationState { get; set; }

        /// <summary>
        /// The time when the secret will be deleted.
        /// </summary>
        [Input("scheduleDeleteTime")]
        public Input<string>? ScheduleDeleteTime { get; set; }

        /// <summary>
        /// The next time the secret will be rotated.
        /// </summary>
        [Input("scheduleRotationTime")]
        public Input<string>? ScheduleRotationTime { get; set; }

        /// <summary>
        /// The name of the secret.
        /// </summary>
        [Input("secretName")]
        public Input<string>? SecretName { get; set; }

        /// <summary>
        /// The type of the secret.
        /// </summary>
        [Input("secretType")]
        public Input<string>? SecretType { get; set; }

        /// <summary>
        /// The value of the secret.
        /// </summary>
        [Input("secretValue")]
        public Input<string>? SecretValue { get; set; }

        /// <summary>
        /// The state of secret.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The information about the tenant resource name (TRN).
        /// </summary>
        [Input("trn")]
        public Input<string>? Trn { get; set; }

        /// <summary>
        /// The tenant ID of the secret.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// The date when the secret was updated.
        /// </summary>
        [Input("updateDate")]
        public Input<int>? UpdateDate { get; set; }

        /// <summary>
        /// The ID of secret.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public SecretState()
        {
        }
        public static new SecretState Empty => new SecretState();
    }
}
