// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Kms
{
    public static class GetKeys
    {
        /// <summary>
        /// Use this data source to query detailed information of kms keys
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Kms.GetKeys.Invoke(new()
        ///     {
        ///         CreationDateRanges = new[]
        ///         {
        ///             "2025-06-01 19:48:06",
        ///             "2025-06-04 19:48:06",
        ///         },
        ///         Descriptions = new[]
        ///         {
        ///             "tf-test",
        ///         },
        ///         KeyNames = new[]
        ///         {
        ///             "mrk-tf-key-mod",
        ///             "mrk-tf-key",
        ///         },
        ///         KeySpecs = new[]
        ///         {
        ///             "SYMMETRIC_256",
        ///         },
        ///         KeyStates = new[]
        ///         {
        ///             "Enable",
        ///         },
        ///         KeyUsages = new[]
        ///         {
        ///             "ENCRYPT_DECRYPT",
        ///         },
        ///         KeyringId = "7a358829-bd5a-4763-ba77-7500ecxxxxxx",
        ///         Origins = new[]
        ///         {
        ///             "CloudKMS",
        ///         },
        ///         ProtectionLevels = new[]
        ///         {
        ///             "SOFTWARE",
        ///         },
        ///         RotateStates = new[]
        ///         {
        ///             "Enable",
        ///         },
        ///         Tags = new[]
        ///         {
        ///             new Volcengine.Kms.Inputs.GetKeysTagInputArgs
        ///             {
        ///                 Key = "tf-k1",
        ///                 Values = new[]
        ///                 {
        ///                     "tf-v1",
        ///                 },
        ///             },
        ///         },
        ///         UpdateDateRanges = new[]
        ///         {
        ///             "2025-06-01 19:48:06",
        ///             "2025-06-04 19:48:06",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetKeysResult> InvokeAsync(GetKeysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeysResult>("volcengine:kms/getKeys:getKeys", args ?? new GetKeysArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of kms keys
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Kms.GetKeys.Invoke(new()
        ///     {
        ///         CreationDateRanges = new[]
        ///         {
        ///             "2025-06-01 19:48:06",
        ///             "2025-06-04 19:48:06",
        ///         },
        ///         Descriptions = new[]
        ///         {
        ///             "tf-test",
        ///         },
        ///         KeyNames = new[]
        ///         {
        ///             "mrk-tf-key-mod",
        ///             "mrk-tf-key",
        ///         },
        ///         KeySpecs = new[]
        ///         {
        ///             "SYMMETRIC_256",
        ///         },
        ///         KeyStates = new[]
        ///         {
        ///             "Enable",
        ///         },
        ///         KeyUsages = new[]
        ///         {
        ///             "ENCRYPT_DECRYPT",
        ///         },
        ///         KeyringId = "7a358829-bd5a-4763-ba77-7500ecxxxxxx",
        ///         Origins = new[]
        ///         {
        ///             "CloudKMS",
        ///         },
        ///         ProtectionLevels = new[]
        ///         {
        ///             "SOFTWARE",
        ///         },
        ///         RotateStates = new[]
        ///         {
        ///             "Enable",
        ///         },
        ///         Tags = new[]
        ///         {
        ///             new Volcengine.Kms.Inputs.GetKeysTagInputArgs
        ///             {
        ///                 Key = "tf-k1",
        ///                 Values = new[]
        ///                 {
        ///                     "tf-v1",
        ///                 },
        ///             },
        ///         },
        ///         UpdateDateRanges = new[]
        ///         {
        ///             "2025-06-01 19:48:06",
        ///             "2025-06-04 19:48:06",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetKeysResult> Invoke(GetKeysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeysResult>("volcengine:kms/getKeys:getKeys", args ?? new GetKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeysArgs : global::Pulumi.InvokeArgs
    {
        [Input("creationDateRanges")]
        private List<string>? _creationDateRanges;

        /// <summary>
        /// The creation date of the keyring.
        /// </summary>
        public List<string> CreationDateRanges
        {
            get => _creationDateRanges ?? (_creationDateRanges = new List<string>());
            set => _creationDateRanges = value;
        }

        [Input("descriptions")]
        private List<string>? _descriptions;

        /// <summary>
        /// The description of the key.
        /// </summary>
        public List<string> Descriptions
        {
            get => _descriptions ?? (_descriptions = new List<string>());
            set => _descriptions = value;
        }

        [Input("keyNames")]
        private List<string>? _keyNames;

        /// <summary>
        /// The name of the key.
        /// </summary>
        public List<string> KeyNames
        {
            get => _keyNames ?? (_keyNames = new List<string>());
            set => _keyNames = value;
        }

        [Input("keySpecs")]
        private List<string>? _keySpecs;

        /// <summary>
        /// The algorithm used in the key.
        /// </summary>
        public List<string> KeySpecs
        {
            get => _keySpecs ?? (_keySpecs = new List<string>());
            set => _keySpecs = value;
        }

        [Input("keyStates")]
        private List<string>? _keyStates;

        /// <summary>
        /// The state of the key.
        /// </summary>
        public List<string> KeyStates
        {
            get => _keyStates ?? (_keyStates = new List<string>());
            set => _keyStates = value;
        }

        [Input("keyUsages")]
        private List<string>? _keyUsages;

        /// <summary>
        /// The usage of the key.
        /// </summary>
        public List<string> KeyUsages
        {
            get => _keyUsages ?? (_keyUsages = new List<string>());
            set => _keyUsages = value;
        }

        /// <summary>
        /// Query the Key ring that meets the specified conditions, which is composed of key-value pairs.
        /// </summary>
        [Input("keyringId")]
        public string? KeyringId { get; set; }

        /// <summary>
        /// Query the Key ring that meets the specified conditions, which is composed of key-value pairs.
        /// </summary>
        [Input("keyringName")]
        public string? KeyringName { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("origins")]
        private List<string>? _origins;

        /// <summary>
        /// The origin of the key.
        /// </summary>
        public List<string> Origins
        {
            get => _origins ?? (_origins = new List<string>());
            set => _origins = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("protectionLevels")]
        private List<string>? _protectionLevels;

        /// <summary>
        /// The protection level of the key.
        /// </summary>
        public List<string> ProtectionLevels
        {
            get => _protectionLevels ?? (_protectionLevels = new List<string>());
            set => _protectionLevels = value;
        }

        [Input("rotateStates")]
        private List<string>? _rotateStates;

        /// <summary>
        /// The state of the rotate.
        /// </summary>
        public List<string> RotateStates
        {
            get => _rotateStates ?? (_rotateStates = new List<string>());
            set => _rotateStates = value;
        }

        [Input("tags")]
        private List<Inputs.GetKeysTagArgs>? _tags;

        /// <summary>
        /// A list of tags.
        /// </summary>
        public List<Inputs.GetKeysTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetKeysTagArgs>());
            set => _tags = value;
        }

        [Input("updateDateRanges")]
        private List<string>? _updateDateRanges;

        /// <summary>
        /// The update date of the keyring.
        /// </summary>
        public List<string> UpdateDateRanges
        {
            get => _updateDateRanges ?? (_updateDateRanges = new List<string>());
            set => _updateDateRanges = value;
        }

        public GetKeysArgs()
        {
        }
        public static new GetKeysArgs Empty => new GetKeysArgs();
    }

    public sealed class GetKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("creationDateRanges")]
        private InputList<string>? _creationDateRanges;

        /// <summary>
        /// The creation date of the keyring.
        /// </summary>
        public InputList<string> CreationDateRanges
        {
            get => _creationDateRanges ?? (_creationDateRanges = new InputList<string>());
            set => _creationDateRanges = value;
        }

        [Input("descriptions")]
        private InputList<string>? _descriptions;

        /// <summary>
        /// The description of the key.
        /// </summary>
        public InputList<string> Descriptions
        {
            get => _descriptions ?? (_descriptions = new InputList<string>());
            set => _descriptions = value;
        }

        [Input("keyNames")]
        private InputList<string>? _keyNames;

        /// <summary>
        /// The name of the key.
        /// </summary>
        public InputList<string> KeyNames
        {
            get => _keyNames ?? (_keyNames = new InputList<string>());
            set => _keyNames = value;
        }

        [Input("keySpecs")]
        private InputList<string>? _keySpecs;

        /// <summary>
        /// The algorithm used in the key.
        /// </summary>
        public InputList<string> KeySpecs
        {
            get => _keySpecs ?? (_keySpecs = new InputList<string>());
            set => _keySpecs = value;
        }

        [Input("keyStates")]
        private InputList<string>? _keyStates;

        /// <summary>
        /// The state of the key.
        /// </summary>
        public InputList<string> KeyStates
        {
            get => _keyStates ?? (_keyStates = new InputList<string>());
            set => _keyStates = value;
        }

        [Input("keyUsages")]
        private InputList<string>? _keyUsages;

        /// <summary>
        /// The usage of the key.
        /// </summary>
        public InputList<string> KeyUsages
        {
            get => _keyUsages ?? (_keyUsages = new InputList<string>());
            set => _keyUsages = value;
        }

        /// <summary>
        /// Query the Key ring that meets the specified conditions, which is composed of key-value pairs.
        /// </summary>
        [Input("keyringId")]
        public Input<string>? KeyringId { get; set; }

        /// <summary>
        /// Query the Key ring that meets the specified conditions, which is composed of key-value pairs.
        /// </summary>
        [Input("keyringName")]
        public Input<string>? KeyringName { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("origins")]
        private InputList<string>? _origins;

        /// <summary>
        /// The origin of the key.
        /// </summary>
        public InputList<string> Origins
        {
            get => _origins ?? (_origins = new InputList<string>());
            set => _origins = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("protectionLevels")]
        private InputList<string>? _protectionLevels;

        /// <summary>
        /// The protection level of the key.
        /// </summary>
        public InputList<string> ProtectionLevels
        {
            get => _protectionLevels ?? (_protectionLevels = new InputList<string>());
            set => _protectionLevels = value;
        }

        [Input("rotateStates")]
        private InputList<string>? _rotateStates;

        /// <summary>
        /// The state of the rotate.
        /// </summary>
        public InputList<string> RotateStates
        {
            get => _rotateStates ?? (_rotateStates = new InputList<string>());
            set => _rotateStates = value;
        }

        [Input("tags")]
        private InputList<Inputs.GetKeysTagInputArgs>? _tags;

        /// <summary>
        /// A list of tags.
        /// </summary>
        public InputList<Inputs.GetKeysTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetKeysTagInputArgs>());
            set => _tags = value;
        }

        [Input("updateDateRanges")]
        private InputList<string>? _updateDateRanges;

        /// <summary>
        /// The update date of the keyring.
        /// </summary>
        public InputList<string> UpdateDateRanges
        {
            get => _updateDateRanges ?? (_updateDateRanges = new InputList<string>());
            set => _updateDateRanges = value;
        }

        public GetKeysInvokeArgs()
        {
        }
        public static new GetKeysInvokeArgs Empty => new GetKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeysResult
    {
        public readonly ImmutableArray<string> CreationDateRanges;
        /// <summary>
        /// The description of the key.
        /// </summary>
        public readonly ImmutableArray<string> Descriptions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the key.
        /// </summary>
        public readonly ImmutableArray<string> KeyNames;
        /// <summary>
        /// The algorithm used in the key.
        /// </summary>
        public readonly ImmutableArray<string> KeySpecs;
        /// <summary>
        /// The state of the key.
        /// </summary>
        public readonly ImmutableArray<string> KeyStates;
        /// <summary>
        /// The usage of the key.
        /// </summary>
        public readonly ImmutableArray<string> KeyUsages;
        public readonly string? KeyringId;
        public readonly string? KeyringName;
        /// <summary>
        /// Master key list information.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKeysKeyResult> Keys;
        public readonly string? NameRegex;
        /// <summary>
        /// The origin of the key.
        /// </summary>
        public readonly ImmutableArray<string> Origins;
        public readonly string? OutputFile;
        /// <summary>
        /// The protection level of the key.
        /// </summary>
        public readonly ImmutableArray<string> ProtectionLevels;
        public readonly ImmutableArray<string> RotateStates;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKeysTagResult> Tags;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        public readonly ImmutableArray<string> UpdateDateRanges;

        [OutputConstructor]
        private GetKeysResult(
            ImmutableArray<string> creationDateRanges,

            ImmutableArray<string> descriptions,

            string id,

            ImmutableArray<string> keyNames,

            ImmutableArray<string> keySpecs,

            ImmutableArray<string> keyStates,

            ImmutableArray<string> keyUsages,

            string? keyringId,

            string? keyringName,

            ImmutableArray<Outputs.GetKeysKeyResult> keys,

            string? nameRegex,

            ImmutableArray<string> origins,

            string? outputFile,

            ImmutableArray<string> protectionLevels,

            ImmutableArray<string> rotateStates,

            ImmutableArray<Outputs.GetKeysTagResult> tags,

            int totalCount,

            ImmutableArray<string> updateDateRanges)
        {
            CreationDateRanges = creationDateRanges;
            Descriptions = descriptions;
            Id = id;
            KeyNames = keyNames;
            KeySpecs = keySpecs;
            KeyStates = keyStates;
            KeyUsages = keyUsages;
            KeyringId = keyringId;
            KeyringName = keyringName;
            Keys = keys;
            NameRegex = nameRegex;
            Origins = origins;
            OutputFile = outputFile;
            ProtectionLevels = protectionLevels;
            RotateStates = rotateStates;
            Tags = tags;
            TotalCount = totalCount;
            UpdateDateRanges = updateDateRanges;
        }
    }
}
