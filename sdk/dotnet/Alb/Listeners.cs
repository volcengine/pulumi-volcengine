// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Alb
{
    public static class Listeners
    {
        /// <summary>
        /// Use this data source to query detailed information of alb listeners
        /// </summary>
        public static Task<ListenersResult> InvokeAsync(ListenersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListenersResult>("volcengine:alb/listeners:Listeners", args ?? new ListenersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of alb listeners
        /// </summary>
        public static Output<ListenersResult> Invoke(ListenersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListenersResult>("volcengine:alb/listeners:Listeners", args ?? new ListenersInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListenersArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Listener IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the Listener.
        /// </summary>
        [Input("listenerName")]
        public string? ListenerName { get; set; }

        /// <summary>
        /// The id of the Alb.
        /// </summary>
        [Input("loadBalancerId")]
        public string? LoadBalancerId { get; set; }

        /// <summary>
        /// A Name Regex of Listener.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project name of the listener.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        public ListenersArgs()
        {
        }
        public static new ListenersArgs Empty => new ListenersArgs();
    }

    public sealed class ListenersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Listener IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of the Listener.
        /// </summary>
        [Input("listenerName")]
        public Input<string>? ListenerName { get; set; }

        /// <summary>
        /// The id of the Alb.
        /// </summary>
        [Input("loadBalancerId")]
        public Input<string>? LoadBalancerId { get; set; }

        /// <summary>
        /// A Name Regex of Listener.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project name of the listener.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        public ListenersInvokeArgs()
        {
        }
        public static new ListenersInvokeArgs Empty => new ListenersInvokeArgs();
    }


    [OutputType]
    public sealed class ListenersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The name of the Listener.
        /// </summary>
        public readonly string? ListenerName;
        /// <summary>
        /// The collection of Listener query.
        /// </summary>
        public readonly ImmutableArray<Outputs.ListenersListenerResult> Listeners;
        /// <summary>
        /// The load balancer ID that the listener belongs to.
        /// </summary>
        public readonly string? LoadBalancerId;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The project name of the listener.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// The total count of Listener query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private ListenersResult(
            string id,

            ImmutableArray<string> ids,

            string? listenerName,

            ImmutableArray<Outputs.ListenersListenerResult> listeners,

            string? loadBalancerId,

            string? nameRegex,

            string? outputFile,

            string? projectName,

            int totalCount)
        {
            Id = id;
            Ids = ids;
            ListenerName = listenerName;
            Listeners = listeners;
            LoadBalancerId = loadBalancerId;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProjectName = projectName;
            TotalCount = totalCount;
        }
    }
}
