// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Alb
{
    public static class GetRules
    {
        /// <summary>
        /// Use this data source to query detailed information of alb rules
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Alb.GetRules.Invoke(new()
        ///     {
        ///         ListenerId = "lsn-1iidd19u4oni874adhezjkyj3",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRulesResult> InvokeAsync(GetRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRulesResult>("volcengine:alb/getRules:getRules", args ?? new GetRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of alb rules
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Alb.GetRules.Invoke(new()
        ///     {
        ///         ListenerId = "lsn-1iidd19u4oni874adhezjkyj3",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRulesResult> Invoke(GetRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRulesResult>("volcengine:alb/getRules:getRules", args ?? new GetRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id of listener.
        /// </summary>
        [Input("listenerId", required: true)]
        public string ListenerId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetRulesArgs()
        {
        }
        public static new GetRulesArgs Empty => new GetRulesArgs();
    }

    public sealed class GetRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id of listener.
        /// </summary>
        [Input("listenerId", required: true)]
        public Input<string> ListenerId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetRulesInvokeArgs()
        {
        }
        public static new GetRulesInvokeArgs Empty => new GetRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ListenerId;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of Rule query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRulesRuleResult> Rules;
        /// <summary>
        /// The total count of Rule query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetRulesResult(
            string id,

            string listenerId,

            string? outputFile,

            ImmutableArray<Outputs.GetRulesRuleResult> rules,

            int totalCount)
        {
            Id = id;
            ListenerId = listenerId;
            OutputFile = outputFile;
            Rules = rules;
            TotalCount = totalCount;
        }
    }
}
