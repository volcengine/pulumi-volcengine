// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Alb
{
    [Obsolete(@"volcengine.alb.Certificates has been deprecated in favor of volcengine.alb.getCertificates")]
    public static class Certificates
    {
        /// <summary>
        /// Use this data source to query detailed information of alb certificates
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Alb.GetCertificates.Invoke(new()
        ///     {
        ///         CertificateName = "tf-test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<CertificatesResult> InvokeAsync(CertificatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<CertificatesResult>("volcengine:alb/certificates:Certificates", args ?? new CertificatesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of alb certificates
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Alb.GetCertificates.Invoke(new()
        ///     {
        ///         CertificateName = "tf-test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<CertificatesResult> Invoke(CertificatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<CertificatesResult>("volcengine:alb/certificates:Certificates", args ?? new CertificatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class CertificatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Name of Certificate.
        /// </summary>
        [Input("certificateName")]
        public string? CertificateName { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// The list of Certificate IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public CertificatesArgs()
        {
        }
        public static new CertificatesArgs Empty => new CertificatesArgs();
    }

    public sealed class CertificatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Name of Certificate.
        /// </summary>
        [Input("certificateName")]
        public Input<string>? CertificateName { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The list of Certificate IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public CertificatesInvokeArgs()
        {
        }
        public static new CertificatesInvokeArgs Empty => new CertificatesInvokeArgs();
    }


    [OutputType]
    public sealed class CertificatesResult
    {
        /// <summary>
        /// The name of the Certificate.
        /// </summary>
        public readonly string? CertificateName;
        /// <summary>
        /// The collection of Certificate query.
        /// </summary>
        public readonly ImmutableArray<Outputs.CertificatesCertificateResult> Certificates;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of Certificate query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private CertificatesResult(
            string? certificateName,

            ImmutableArray<Outputs.CertificatesCertificateResult> certificates,

            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            int totalCount)
        {
            CertificateName = certificateName;
            Certificates = certificates;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
