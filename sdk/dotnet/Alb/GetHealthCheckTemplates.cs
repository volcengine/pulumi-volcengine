// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Alb
{
    public static class GetHealthCheckTemplates
    {
        /// <summary>
        /// Use this data source to query detailed information of alb health check templates
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Alb.GetHealthCheckTemplates.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "hctpl-1iidd1tobnim874adhf708uwf",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetHealthCheckTemplatesResult> InvokeAsync(GetHealthCheckTemplatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHealthCheckTemplatesResult>("volcengine:alb/getHealthCheckTemplates:getHealthCheckTemplates", args ?? new GetHealthCheckTemplatesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of alb health check templates
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Alb.GetHealthCheckTemplates.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "hctpl-1iidd1tobnim874adhf708uwf",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHealthCheckTemplatesResult> Invoke(GetHealthCheckTemplatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHealthCheckTemplatesResult>("volcengine:alb/getHealthCheckTemplates:getHealthCheckTemplates", args ?? new GetHealthCheckTemplatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHealthCheckTemplatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of health check template to query.
        /// </summary>
        [Input("healthCheckTemplateName")]
        public string? HealthCheckTemplateName { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// The list of health check templates to query.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A Name Regex of health check template.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetHealthCheckTemplatesArgs()
        {
        }
        public static new GetHealthCheckTemplatesArgs Empty => new GetHealthCheckTemplatesArgs();
    }

    public sealed class GetHealthCheckTemplatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of health check template to query.
        /// </summary>
        [Input("healthCheckTemplateName")]
        public Input<string>? HealthCheckTemplateName { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The list of health check templates to query.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A Name Regex of health check template.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public GetHealthCheckTemplatesInvokeArgs()
        {
        }
        public static new GetHealthCheckTemplatesInvokeArgs Empty => new GetHealthCheckTemplatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetHealthCheckTemplatesResult
    {
        /// <summary>
        /// The name of health check template.
        /// </summary>
        public readonly string? HealthCheckTemplateName;
        /// <summary>
        /// The collection of health check template query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHealthCheckTemplatesHealthCheckTemplateResult> HealthCheckTemplates;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of health check template query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetHealthCheckTemplatesResult(
            string? healthCheckTemplateName,

            ImmutableArray<Outputs.GetHealthCheckTemplatesHealthCheckTemplateResult> healthCheckTemplates,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            int totalCount)
        {
            HealthCheckTemplateName = healthCheckTemplateName;
            HealthCheckTemplates = healthCheckTemplates;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
