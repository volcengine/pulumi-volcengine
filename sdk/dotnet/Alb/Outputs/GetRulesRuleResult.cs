// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Alb.Outputs
{

    [OutputType]
    public sealed class GetRulesRuleResult
    {
        /// <summary>
        /// The Description of Rule.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The Domain of Rule.
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// The Id of Rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Redirect related configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRulesRuleRedirectConfigResult> RedirectConfigs;
        /// <summary>
        /// The list of rewrite configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRulesRuleRewriteConfigResult> RewriteConfigs;
        /// <summary>
        /// Rewrite configuration switch for forwarding rules, only allows configuration and takes effect when RuleAction is empty (i.e., forwarding to server group). Only available for whitelist users, please submit an application to experience. Supported values are as follows:
        /// on: enable.
        /// off: disable.
        /// </summary>
        public readonly string RewriteEnabled;
        /// <summary>
        /// The forwarding rule action, if this parameter is empty, forward to server group, if value is `Redirect`, will redirect.
        /// </summary>
        public readonly string RuleAction;
        /// <summary>
        /// The Id of Rule.
        /// </summary>
        public readonly string RuleId;
        /// <summary>
        /// The Id of Server Group.
        /// </summary>
        public readonly string ServerGroupId;
        /// <summary>
        /// Forwarding rule QPS rate limiting switch:
        /// on: enable.
        /// off: disable (default).
        /// </summary>
        public readonly string TrafficLimitEnabled;
        /// <summary>
        /// When Rules.N.TrafficLimitEnabled is turned on, this field is required. Requests per second. Valid values are between 100 and 100000.
        /// </summary>
        public readonly int TrafficLimitQps;
        /// <summary>
        /// The Url of Rule.
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private GetRulesRuleResult(
            string description,

            string domain,

            string id,

            ImmutableArray<Outputs.GetRulesRuleRedirectConfigResult> redirectConfigs,

            ImmutableArray<Outputs.GetRulesRuleRewriteConfigResult> rewriteConfigs,

            string rewriteEnabled,

            string ruleAction,

            string ruleId,

            string serverGroupId,

            string trafficLimitEnabled,

            int trafficLimitQps,

            string url)
        {
            Description = description;
            Domain = domain;
            Id = id;
            RedirectConfigs = redirectConfigs;
            RewriteConfigs = rewriteConfigs;
            RewriteEnabled = rewriteEnabled;
            RuleAction = ruleAction;
            RuleId = ruleId;
            ServerGroupId = serverGroupId;
            TrafficLimitEnabled = trafficLimitEnabled;
            TrafficLimitQps = trafficLimitQps;
            Url = url;
        }
    }
}
