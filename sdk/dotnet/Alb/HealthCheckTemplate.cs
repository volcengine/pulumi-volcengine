// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Alb
{
    /// <summary>
    /// Provides a resource to manage alb health check template
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Alb.HealthCheckTemplate("foo", new()
    ///     {
    ///         Description = "acc-test3",
    ///         HealthCheckDomain = "test.com",
    ///         HealthCheckHttpCode = "http_2xx",
    ///         HealthCheckHttpVersion = "HTTP1.1",
    ///         HealthCheckInterval = 8,
    ///         HealthCheckMethod = "HEAD",
    ///         HealthCheckProtocol = "HTTP",
    ///         HealthCheckTemplateName = "acc-test-template-1",
    ///         HealthCheckTimeout = 11,
    ///         HealthCheckUri = "/",
    ///         HealthyThreshold = 2,
    ///         UnhealthyThreshold = 3,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AlbHealthCheckTemplate can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:alb/healthCheckTemplate:HealthCheckTemplate default hctpl-123*****432
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:alb/healthCheckTemplate:HealthCheckTemplate")]
    public partial class HealthCheckTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of health check template.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The domain name to health check.
        /// </summary>
        [Output("healthCheckDomain")]
        public Output<string> HealthCheckDomain { get; private set; } = null!;

        /// <summary>
        /// The normal HTTP status code for health check, the default is http_2xx, http_3xx, separated by commas.
        /// </summary>
        [Output("healthCheckHttpCode")]
        public Output<string> HealthCheckHttpCode { get; private set; } = null!;

        /// <summary>
        /// The HTTP version of health check.
        /// </summary>
        [Output("healthCheckHttpVersion")]
        public Output<string> HealthCheckHttpVersion { get; private set; } = null!;

        /// <summary>
        /// The interval for performing health checks, the default value is 2, and the value is 1-300.
        /// </summary>
        [Output("healthCheckInterval")]
        public Output<int> HealthCheckInterval { get; private set; } = null!;

        /// <summary>
        /// The health check method,default is `GET`, support `GET` and `HEAD`.
        /// </summary>
        [Output("healthCheckMethod")]
        public Output<string> HealthCheckMethod { get; private set; } = null!;

        /// <summary>
        /// THe protocol of health check,only support HTTP.
        /// </summary>
        [Output("healthCheckProtocol")]
        public Output<string> HealthCheckProtocol { get; private set; } = null!;

        /// <summary>
        /// The health check template name.
        /// </summary>
        [Output("healthCheckTemplateName")]
        public Output<string> HealthCheckTemplateName { get; private set; } = null!;

        /// <summary>
        /// The timeout of health check response,the default value is 2, and the value is 1-60.
        /// </summary>
        [Output("healthCheckTimeout")]
        public Output<int> HealthCheckTimeout { get; private set; } = null!;

        /// <summary>
        /// The uri to health check,default is `/`.
        /// </summary>
        [Output("healthCheckUri")]
        public Output<string> HealthCheckUri { get; private set; } = null!;

        /// <summary>
        /// The healthy threshold of the health check, the default is 3, the value is 2-10.
        /// </summary>
        [Output("healthyThreshold")]
        public Output<int> HealthyThreshold { get; private set; } = null!;

        /// <summary>
        /// The unhealthy threshold of the health check, the default is 3, the value is 2-10.
        /// </summary>
        [Output("unhealthyThreshold")]
        public Output<int> UnhealthyThreshold { get; private set; } = null!;


        /// <summary>
        /// Create a HealthCheckTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HealthCheckTemplate(string name, HealthCheckTemplateArgs args, CustomResourceOptions? options = null)
            : base("volcengine:alb/healthCheckTemplate:HealthCheckTemplate", name, args ?? new HealthCheckTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HealthCheckTemplate(string name, Input<string> id, HealthCheckTemplateState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:alb/healthCheckTemplate:HealthCheckTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HealthCheckTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HealthCheckTemplate Get(string name, Input<string> id, HealthCheckTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new HealthCheckTemplate(name, id, state, options);
        }
    }

    public sealed class HealthCheckTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of health check template.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The domain name to health check.
        /// </summary>
        [Input("healthCheckDomain")]
        public Input<string>? HealthCheckDomain { get; set; }

        /// <summary>
        /// The normal HTTP status code for health check, the default is http_2xx, http_3xx, separated by commas.
        /// </summary>
        [Input("healthCheckHttpCode")]
        public Input<string>? HealthCheckHttpCode { get; set; }

        /// <summary>
        /// The HTTP version of health check.
        /// </summary>
        [Input("healthCheckHttpVersion")]
        public Input<string>? HealthCheckHttpVersion { get; set; }

        /// <summary>
        /// The interval for performing health checks, the default value is 2, and the value is 1-300.
        /// </summary>
        [Input("healthCheckInterval")]
        public Input<int>? HealthCheckInterval { get; set; }

        /// <summary>
        /// The health check method,default is `GET`, support `GET` and `HEAD`.
        /// </summary>
        [Input("healthCheckMethod")]
        public Input<string>? HealthCheckMethod { get; set; }

        /// <summary>
        /// THe protocol of health check,only support HTTP.
        /// </summary>
        [Input("healthCheckProtocol")]
        public Input<string>? HealthCheckProtocol { get; set; }

        /// <summary>
        /// The health check template name.
        /// </summary>
        [Input("healthCheckTemplateName", required: true)]
        public Input<string> HealthCheckTemplateName { get; set; } = null!;

        /// <summary>
        /// The timeout of health check response,the default value is 2, and the value is 1-60.
        /// </summary>
        [Input("healthCheckTimeout")]
        public Input<int>? HealthCheckTimeout { get; set; }

        /// <summary>
        /// The uri to health check,default is `/`.
        /// </summary>
        [Input("healthCheckUri")]
        public Input<string>? HealthCheckUri { get; set; }

        /// <summary>
        /// The healthy threshold of the health check, the default is 3, the value is 2-10.
        /// </summary>
        [Input("healthyThreshold")]
        public Input<int>? HealthyThreshold { get; set; }

        /// <summary>
        /// The unhealthy threshold of the health check, the default is 3, the value is 2-10.
        /// </summary>
        [Input("unhealthyThreshold")]
        public Input<int>? UnhealthyThreshold { get; set; }

        public HealthCheckTemplateArgs()
        {
        }
        public static new HealthCheckTemplateArgs Empty => new HealthCheckTemplateArgs();
    }

    public sealed class HealthCheckTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of health check template.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The domain name to health check.
        /// </summary>
        [Input("healthCheckDomain")]
        public Input<string>? HealthCheckDomain { get; set; }

        /// <summary>
        /// The normal HTTP status code for health check, the default is http_2xx, http_3xx, separated by commas.
        /// </summary>
        [Input("healthCheckHttpCode")]
        public Input<string>? HealthCheckHttpCode { get; set; }

        /// <summary>
        /// The HTTP version of health check.
        /// </summary>
        [Input("healthCheckHttpVersion")]
        public Input<string>? HealthCheckHttpVersion { get; set; }

        /// <summary>
        /// The interval for performing health checks, the default value is 2, and the value is 1-300.
        /// </summary>
        [Input("healthCheckInterval")]
        public Input<int>? HealthCheckInterval { get; set; }

        /// <summary>
        /// The health check method,default is `GET`, support `GET` and `HEAD`.
        /// </summary>
        [Input("healthCheckMethod")]
        public Input<string>? HealthCheckMethod { get; set; }

        /// <summary>
        /// THe protocol of health check,only support HTTP.
        /// </summary>
        [Input("healthCheckProtocol")]
        public Input<string>? HealthCheckProtocol { get; set; }

        /// <summary>
        /// The health check template name.
        /// </summary>
        [Input("healthCheckTemplateName")]
        public Input<string>? HealthCheckTemplateName { get; set; }

        /// <summary>
        /// The timeout of health check response,the default value is 2, and the value is 1-60.
        /// </summary>
        [Input("healthCheckTimeout")]
        public Input<int>? HealthCheckTimeout { get; set; }

        /// <summary>
        /// The uri to health check,default is `/`.
        /// </summary>
        [Input("healthCheckUri")]
        public Input<string>? HealthCheckUri { get; set; }

        /// <summary>
        /// The healthy threshold of the health check, the default is 3, the value is 2-10.
        /// </summary>
        [Input("healthyThreshold")]
        public Input<int>? HealthyThreshold { get; set; }

        /// <summary>
        /// The unhealthy threshold of the health check, the default is 3, the value is 2-10.
        /// </summary>
        [Input("unhealthyThreshold")]
        public Input<int>? UnhealthyThreshold { get; set; }

        public HealthCheckTemplateState()
        {
        }
        public static new HealthCheckTemplateState Empty => new HealthCheckTemplateState();
    }
}
