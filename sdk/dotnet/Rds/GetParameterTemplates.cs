// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rds
{
    public static class GetParameterTemplates
    {
        /// <summary>
        /// (Deprecated! Recommend use volcengine_rds_mysql_*** replace) Use this data source to query detailed information of rds parameter templates
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Rds.GetParameterTemplates.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetParameterTemplatesResult> InvokeAsync(GetParameterTemplatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParameterTemplatesResult>("volcengine:rds/getParameterTemplates:getParameterTemplates", args ?? new GetParameterTemplatesArgs(), options.WithDefaults());

        /// <summary>
        /// (Deprecated! Recommend use volcengine_rds_mysql_*** replace) Use this data source to query detailed information of rds parameter templates
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Rds.GetParameterTemplates.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetParameterTemplatesResult> Invoke(GetParameterTemplatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterTemplatesResult>("volcengine:rds/getParameterTemplates:getParameterTemplates", args ?? new GetParameterTemplatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterTemplatesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of RDS parameter template.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Parameter template type, range of values:
        /// DBEngine - Engine parameters.
        /// </summary>
        [Input("templateCategory")]
        public string? TemplateCategory { get; set; }

        /// <summary>
        /// Template source, value range:
        /// System - System
        /// User - the user.
        /// </summary>
        [Input("templateSource")]
        public string? TemplateSource { get; set; }

        /// <summary>
        /// Parameter template database type, range of values:
        /// MySQL - MySQL database.
        /// </summary>
        [Input("templateType")]
        public string? TemplateType { get; set; }

        /// <summary>
        /// Parameter template database version, value range:
        /// MySQL_Community_5_7 - MySQL 5.7
        /// MySQL_8_0 - MySQL 8.0.
        /// </summary>
        [Input("templateTypeVersion")]
        public string? TemplateTypeVersion { get; set; }

        public GetParameterTemplatesArgs()
        {
        }
        public static new GetParameterTemplatesArgs Empty => new GetParameterTemplatesArgs();
    }

    public sealed class GetParameterTemplatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of RDS parameter template.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Parameter template type, range of values:
        /// DBEngine - Engine parameters.
        /// </summary>
        [Input("templateCategory")]
        public Input<string>? TemplateCategory { get; set; }

        /// <summary>
        /// Template source, value range:
        /// System - System
        /// User - the user.
        /// </summary>
        [Input("templateSource")]
        public Input<string>? TemplateSource { get; set; }

        /// <summary>
        /// Parameter template database type, range of values:
        /// MySQL - MySQL database.
        /// </summary>
        [Input("templateType")]
        public Input<string>? TemplateType { get; set; }

        /// <summary>
        /// Parameter template database version, value range:
        /// MySQL_Community_5_7 - MySQL 5.7
        /// MySQL_8_0 - MySQL 8.0.
        /// </summary>
        [Input("templateTypeVersion")]
        public Input<string>? TemplateTypeVersion { get; set; }

        public GetParameterTemplatesInvokeArgs()
        {
        }
        public static new GetParameterTemplatesInvokeArgs Empty => new GetParameterTemplatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetParameterTemplatesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of RDS parameter templates query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetParameterTemplatesRdsParameterTemplateResult> RdsParameterTemplates;
        public readonly string? TemplateCategory;
        public readonly string? TemplateSource;
        /// <summary>
        /// Parameter template database type, range of values:
        /// MySQL - MySQL database.
        /// </summary>
        public readonly string? TemplateType;
        /// <summary>
        /// Parameter template database version, value range:
        /// MySQL_Community_5_7 - MySQL 5.7
        /// MySQL_8_0 - MySQL 8.0.
        /// </summary>
        public readonly string? TemplateTypeVersion;
        /// <summary>
        /// The total count of RDS parameter templates query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetParameterTemplatesResult(
            string id,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.GetParameterTemplatesRdsParameterTemplateResult> rdsParameterTemplates,

            string? templateCategory,

            string? templateSource,

            string? templateType,

            string? templateTypeVersion,

            int totalCount)
        {
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            RdsParameterTemplates = rdsParameterTemplates;
            TemplateCategory = templateCategory;
            TemplateSource = templateSource;
            TemplateType = templateType;
            TemplateTypeVersion = templateTypeVersion;
            TotalCount = totalCount;
        }
    }
}
