// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Rds
{
    public static class GetInstances
    {
        /// <summary>
        /// (Deprecated! Recommend use volcengine_rds_mysql_*** replace) Use this data source to query detailed information of rds instances
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Rds.GetInstances.Invoke(new()
        ///     {
        ///         InstanceId = "mysql-0fdd3bab2e7c",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInstancesResult> InvokeAsync(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("volcengine:rds/getInstances:getInstances", args ?? new GetInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// (Deprecated! Recommend use volcengine_rds_mysql_*** replace) Use this data source to query detailed information of rds instances
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Rds.GetInstances.Invoke(new()
        ///     {
        ///         InstanceId = "mysql-0fdd3bab2e7c",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInstancesResult> Invoke(GetInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstancesResult>("volcengine:rds/getInstances:getInstances", args ?? new GetInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The end time of creating RDS instance.
        /// </summary>
        [Input("createEndTime")]
        public string? CreateEndTime { get; set; }

        /// <summary>
        /// The start time of creating RDS instance.
        /// </summary>
        [Input("createStartTime")]
        public string? CreateStartTime { get; set; }

        /// <summary>
        /// The id of the RDS instance.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// The status of the RDS instance.
        /// </summary>
        [Input("instanceStatus")]
        public string? InstanceStatus { get; set; }

        /// <summary>
        /// The type of the RDS instance.
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType { get; set; }

        /// <summary>
        /// A Name Regex of RDS instance.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The region of the RDS instance.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// The available zone of the RDS instance.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetInstancesArgs()
        {
        }
        public static new GetInstancesArgs Empty => new GetInstancesArgs();
    }

    public sealed class GetInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The end time of creating RDS instance.
        /// </summary>
        [Input("createEndTime")]
        public Input<string>? CreateEndTime { get; set; }

        /// <summary>
        /// The start time of creating RDS instance.
        /// </summary>
        [Input("createStartTime")]
        public Input<string>? CreateStartTime { get; set; }

        /// <summary>
        /// The id of the RDS instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The status of the RDS instance.
        /// </summary>
        [Input("instanceStatus")]
        public Input<string>? InstanceStatus { get; set; }

        /// <summary>
        /// The type of the RDS instance.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// A Name Regex of RDS instance.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The region of the RDS instance.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The available zone of the RDS instance.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetInstancesInvokeArgs()
        {
        }
        public static new GetInstancesInvokeArgs Empty => new GetInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstancesResult
    {
        public readonly string? CreateEndTime;
        public readonly string? CreateStartTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the RDS instance.
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// The status of the RDS instance.
        /// </summary>
        public readonly string? InstanceStatus;
        /// <summary>
        /// The type of the RDS instance.
        /// </summary>
        public readonly string? InstanceType;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of RDS instance query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesRdsInstanceResult> RdsInstances;
        /// <summary>
        /// The region of the RDS instance.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// The total count of RDS instance query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The available zone of the RDS instance.
        /// </summary>
        public readonly string? Zone;

        [OutputConstructor]
        private GetInstancesResult(
            string? createEndTime,

            string? createStartTime,

            string id,

            string? instanceId,

            string? instanceStatus,

            string? instanceType,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.GetInstancesRdsInstanceResult> rdsInstances,

            string? region,

            int totalCount,

            string? zone)
        {
            CreateEndTime = createEndTime;
            CreateStartTime = createStartTime;
            Id = id;
            InstanceId = instanceId;
            InstanceStatus = instanceStatus;
            InstanceType = instanceType;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            RdsInstances = rdsInstances;
            Region = region;
            TotalCount = totalCount;
            Zone = zone;
        }
    }
}
