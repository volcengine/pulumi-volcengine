// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vke
{
    public static class SupportResourceTypes
    {
        /// <summary>
        /// Use this data source to query detailed information of vke support resource types
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vke.SupportResourceTypes.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<SupportResourceTypesResult> InvokeAsync(SupportResourceTypesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<SupportResourceTypesResult>("volcengine:vke/supportResourceTypes:SupportResourceTypes", args ?? new SupportResourceTypesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vke support resource types
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vke.SupportResourceTypes.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<SupportResourceTypesResult> Invoke(SupportResourceTypesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<SupportResourceTypesResult>("volcengine:vke/supportResourceTypes:SupportResourceTypes", args ?? new SupportResourceTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class SupportResourceTypesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("resourceTypes")]
        private List<string>? _resourceTypes;

        /// <summary>
        /// A list of resource types. Support Ecs or Zone.
        /// </summary>
        public List<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new List<string>());
            set => _resourceTypes = value;
        }

        [Input("zoneIds")]
        private List<string>? _zoneIds;

        /// <summary>
        /// A list of zone ids. If no parameter value, all available regions is returned.
        /// </summary>
        public List<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new List<string>());
            set => _zoneIds = value;
        }

        public SupportResourceTypesArgs()
        {
        }
        public static new SupportResourceTypesArgs Empty => new SupportResourceTypesArgs();
    }

    public sealed class SupportResourceTypesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("resourceTypes")]
        private InputList<string>? _resourceTypes;

        /// <summary>
        /// A list of resource types. Support Ecs or Zone.
        /// </summary>
        public InputList<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<string>());
            set => _resourceTypes = value;
        }

        [Input("zoneIds")]
        private InputList<string>? _zoneIds;

        /// <summary>
        /// A list of zone ids. If no parameter value, all available regions is returned.
        /// </summary>
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public SupportResourceTypesInvokeArgs()
        {
        }
        public static new SupportResourceTypesInvokeArgs Empty => new SupportResourceTypesInvokeArgs();
    }


    [OutputType]
    public sealed class SupportResourceTypesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        public readonly ImmutableArray<string> ResourceTypes;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.SupportResourceTypesResourceResult> Resources;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        public readonly ImmutableArray<string> ZoneIds;

        [OutputConstructor]
        private SupportResourceTypesResult(
            string id,

            string? outputFile,

            ImmutableArray<string> resourceTypes,

            ImmutableArray<Outputs.SupportResourceTypesResourceResult> resources,

            int totalCount,

            ImmutableArray<string> zoneIds)
        {
            Id = id;
            OutputFile = outputFile;
            ResourceTypes = resourceTypes;
            Resources = resources;
            TotalCount = totalCount;
            ZoneIds = zoneIds;
        }
    }
}
