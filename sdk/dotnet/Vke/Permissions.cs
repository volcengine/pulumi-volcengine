// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vke
{
    [Obsolete(@"volcengine.vke.Permissions has been deprecated in favor of volcengine.vke.getPermissions")]
    public static class Permissions
    {
        /// <summary>
        /// Use this data source to query detailed information of vke permissions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vke.GetPermissions.Invoke(new()
        ///     {
        ///         GranteeType = "User",
        ///         Ids = new[]
        ///         {
        ///             "apd10o9jhqqno0ba25****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<PermissionsResult> InvokeAsync(PermissionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<PermissionsResult>("volcengine:vke/permissions:Permissions", args ?? new PermissionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vke permissions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Vke.GetPermissions.Invoke(new()
        ///     {
        ///         GranteeType = "User",
        ///         Ids = new[]
        ///         {
        ///             "apd10o9jhqqno0ba25****",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<PermissionsResult> Invoke(PermissionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<PermissionsResult>("volcengine:vke/permissions:Permissions", args ?? new PermissionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class PermissionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterIds")]
        private List<string>? _clusterIds;

        /// <summary>
        /// A list of Cluster IDs.
        /// </summary>
        public List<string> ClusterIds
        {
            get => _clusterIds ?? (_clusterIds = new List<string>());
            set => _clusterIds = value;
        }

        [Input("granteeIds")]
        private List<int>? _granteeIds;

        /// <summary>
        /// A list of Grantee IDs.
        /// </summary>
        public List<int> GranteeIds
        {
            get => _granteeIds ?? (_granteeIds = new List<int>());
            set => _granteeIds = value;
        }

        /// <summary>
        /// The type of Grantee. Valid values: `User`, `Role`.
        /// </summary>
        [Input("granteeType")]
        public string? GranteeType { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of RBAC Permission IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("namespaces")]
        private List<string>? _namespaces;

        /// <summary>
        /// A list of Namespaces.
        /// </summary>
        public List<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new List<string>());
            set => _namespaces = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("roleNames")]
        private List<string>? _roleNames;

        /// <summary>
        /// A list of RBAC Role Names.
        /// </summary>
        public List<string> RoleNames
        {
            get => _roleNames ?? (_roleNames = new List<string>());
            set => _roleNames = value;
        }

        /// <summary>
        /// The status of RBAC Permission.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public PermissionsArgs()
        {
        }
        public static new PermissionsArgs Empty => new PermissionsArgs();
    }

    public sealed class PermissionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterIds")]
        private InputList<string>? _clusterIds;

        /// <summary>
        /// A list of Cluster IDs.
        /// </summary>
        public InputList<string> ClusterIds
        {
            get => _clusterIds ?? (_clusterIds = new InputList<string>());
            set => _clusterIds = value;
        }

        [Input("granteeIds")]
        private InputList<int>? _granteeIds;

        /// <summary>
        /// A list of Grantee IDs.
        /// </summary>
        public InputList<int> GranteeIds
        {
            get => _granteeIds ?? (_granteeIds = new InputList<int>());
            set => _granteeIds = value;
        }

        /// <summary>
        /// The type of Grantee. Valid values: `User`, `Role`.
        /// </summary>
        [Input("granteeType")]
        public Input<string>? GranteeType { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of RBAC Permission IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("namespaces")]
        private InputList<string>? _namespaces;

        /// <summary>
        /// A list of Namespaces.
        /// </summary>
        public InputList<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new InputList<string>());
            set => _namespaces = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("roleNames")]
        private InputList<string>? _roleNames;

        /// <summary>
        /// A list of RBAC Role Names.
        /// </summary>
        public InputList<string> RoleNames
        {
            get => _roleNames ?? (_roleNames = new InputList<string>());
            set => _roleNames = value;
        }

        /// <summary>
        /// The status of RBAC Permission.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public PermissionsInvokeArgs()
        {
        }
        public static new PermissionsInvokeArgs Empty => new PermissionsInvokeArgs();
    }


    [OutputType]
    public sealed class PermissionsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.PermissionsAccessPolicyResult> AccessPolicies;
        public readonly ImmutableArray<string> ClusterIds;
        public readonly ImmutableArray<int> GranteeIds;
        /// <summary>
        /// The type of the Grantee.
        /// </summary>
        public readonly string? GranteeType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly ImmutableArray<string> Namespaces;
        public readonly string? OutputFile;
        public readonly ImmutableArray<string> RoleNames;
        /// <summary>
        /// The status of the RBAC Permission.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private PermissionsResult(
            ImmutableArray<Outputs.PermissionsAccessPolicyResult> accessPolicies,

            ImmutableArray<string> clusterIds,

            ImmutableArray<int> granteeIds,

            string? granteeType,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<string> namespaces,

            string? outputFile,

            ImmutableArray<string> roleNames,

            string? status,

            int totalCount)
        {
            AccessPolicies = accessPolicies;
            ClusterIds = clusterIds;
            GranteeIds = granteeIds;
            GranteeType = granteeType;
            Id = id;
            Ids = ids;
            Namespaces = namespaces;
            OutputFile = outputFile;
            RoleNames = roleNames;
            Status = status;
            TotalCount = totalCount;
        }
    }
}
