// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vke.Inputs
{

    public sealed class NodePoolNodeStatisticArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CreatingCount of Node.
        /// </summary>
        [Input("creatingCount")]
        public Input<int>? CreatingCount { get; set; }

        /// <summary>
        /// The DeletingCount of Node.
        /// </summary>
        [Input("deletingCount")]
        public Input<int>? DeletingCount { get; set; }

        /// <summary>
        /// The FailedCount of Node.
        /// </summary>
        [Input("failedCount")]
        public Input<int>? FailedCount { get; set; }

        /// <summary>
        /// The RunningCount of Node.
        /// </summary>
        [Input("runningCount")]
        public Input<int>? RunningCount { get; set; }

        /// <summary>
        /// (**Deprecated**) This field has been deprecated and is not recommended for use. The StartingCount of Node.
        /// </summary>
        [Input("startingCount")]
        public Input<int>? StartingCount { get; set; }

        /// <summary>
        /// (**Deprecated**) This field has been deprecated and is not recommended for use. The StoppedCount of Node.
        /// </summary>
        [Input("stoppedCount")]
        public Input<int>? StoppedCount { get; set; }

        /// <summary>
        /// (**Deprecated**) This field has been deprecated and is not recommended for use. The StoppingCount of Node.
        /// </summary>
        [Input("stoppingCount")]
        public Input<int>? StoppingCount { get; set; }

        /// <summary>
        /// The TotalCount of Node.
        /// </summary>
        [Input("totalCount")]
        public Input<int>? TotalCount { get; set; }

        /// <summary>
        /// The UpdatingCount of Node.
        /// </summary>
        [Input("updatingCount")]
        public Input<int>? UpdatingCount { get; set; }

        public NodePoolNodeStatisticArgs()
        {
        }
        public static new NodePoolNodeStatisticArgs Empty => new NodePoolNodeStatisticArgs();
    }
}
