// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Apig
{
    public static class GetGateways
    {
        /// <summary>
        /// Use this data source to query detailed information of apig gateways
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Apig.GetGateways.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "gd13d8c6eq1emkiunq6p0",
        ///             "gd07fq7pte3scmnaj1b1g",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGatewaysResult> InvokeAsync(GetGatewaysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewaysResult>("volcengine:apig/getGateways:getGateways", args ?? new GetGatewaysArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of apig gateways
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Apig.GetGateways.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "gd13d8c6eq1emkiunq6p0",
        ///             "gd07fq7pte3scmnaj1b1g",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGatewaysResult> Invoke(GetGatewaysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewaysResult>("volcengine:apig/getGateways:getGateways", args ?? new GetGatewaysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewaysArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of api gateway IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of api gateway. This field support fuzzy query.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project name of api gateway.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        /// <summary>
        /// The status of api gateway.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        [Input("tags")]
        private List<Inputs.GetGatewaysTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.GetGatewaysTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetGatewaysTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of api gateway.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        [Input("vpcIds")]
        private List<string>? _vpcIds;

        /// <summary>
        /// A list of vpc IDs.
        /// </summary>
        public List<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new List<string>());
            set => _vpcIds = value;
        }

        public GetGatewaysArgs()
        {
        }
        public static new GetGatewaysArgs Empty => new GetGatewaysArgs();
    }

    public sealed class GetGatewaysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of api gateway IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The name of api gateway. This field support fuzzy query.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project name of api gateway.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The status of api gateway.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<Inputs.GetGatewaysTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.GetGatewaysTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetGatewaysTagInputArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of api gateway.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vpcIds")]
        private InputList<string>? _vpcIds;

        /// <summary>
        /// A list of vpc IDs.
        /// </summary>
        public InputList<string> VpcIds
        {
            get => _vpcIds ?? (_vpcIds = new InputList<string>());
            set => _vpcIds = value;
        }

        public GetGatewaysInvokeArgs()
        {
        }
        public static new GetGatewaysInvokeArgs Empty => new GetGatewaysInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewaysResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewaysGatewayResult> Gateways;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The name of the api gateway.
        /// </summary>
        public readonly string? Name;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The project name of the api gateway.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// The status of the api gateway.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewaysTagResult> Tags;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The type of the api gateway.
        /// </summary>
        public readonly string? Type;
        public readonly ImmutableArray<string> VpcIds;

        [OutputConstructor]
        private GetGatewaysResult(
            ImmutableArray<Outputs.GetGatewaysGatewayResult> gateways,

            string id,

            ImmutableArray<string> ids,

            string? name,

            string? nameRegex,

            string? outputFile,

            string? projectName,

            string? status,

            ImmutableArray<Outputs.GetGatewaysTagResult> tags,

            int totalCount,

            string? type,

            ImmutableArray<string> vpcIds)
        {
            Gateways = gateways;
            Id = id;
            Ids = ids;
            Name = name;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProjectName = projectName;
            Status = status;
            Tags = tags;
            TotalCount = totalCount;
            Type = type;
            VpcIds = vpcIds;
        }
    }
}
