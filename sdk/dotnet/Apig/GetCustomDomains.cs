// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Apig
{
    public static class GetCustomDomains
    {
        /// <summary>
        /// Use this data source to query detailed information of apig custom domains
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Apig.GetCustomDomains.Invoke(new()
        ///     {
        ///         GatewayId = "gd13d8c6eq1emkiunq6p0",
        ///         ServiceId = "sd142lm6kiaj519k4l640",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCustomDomainsResult> InvokeAsync(GetCustomDomainsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomDomainsResult>("volcengine:apig/getCustomDomains:getCustomDomains", args ?? new GetCustomDomainsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of apig custom domains
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Apig.GetCustomDomains.Invoke(new()
        ///     {
        ///         GatewayId = "gd13d8c6eq1emkiunq6p0",
        ///         ServiceId = "sd142lm6kiaj519k4l640",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCustomDomainsResult> Invoke(GetCustomDomainsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomDomainsResult>("volcengine:apig/getCustomDomains:getCustomDomains", args ?? new GetCustomDomainsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomDomainsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of api gateway.
        /// </summary>
        [Input("gatewayId")]
        public string? GatewayId { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The resource type of domain. Valid values: `Console`, `Ingress`.
        /// </summary>
        [Input("resourceType")]
        public string? ResourceType { get; set; }

        /// <summary>
        /// The id of api gateway service.
        /// </summary>
        [Input("serviceId")]
        public string? ServiceId { get; set; }

        public GetCustomDomainsArgs()
        {
        }
        public static new GetCustomDomainsArgs Empty => new GetCustomDomainsArgs();
    }

    public sealed class GetCustomDomainsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of api gateway.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The resource type of domain. Valid values: `Console`, `Ingress`.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The id of api gateway service.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        public GetCustomDomainsInvokeArgs()
        {
        }
        public static new GetCustomDomainsInvokeArgs Empty => new GetCustomDomainsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomDomainsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCustomDomainsCustomDomainResult> CustomDomains;
        public readonly string? GatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The resource type of domain.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The id of the api gateway service.
        /// </summary>
        public readonly string? ServiceId;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetCustomDomainsResult(
            ImmutableArray<Outputs.GetCustomDomainsCustomDomainResult> customDomains,

            string? gatewayId,

            string id,

            string? nameRegex,

            string? outputFile,

            string? resourceType,

            string? serviceId,

            int totalCount)
        {
            CustomDomains = customDomains;
            GatewayId = gatewayId;
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ResourceType = resourceType;
            ServiceId = serviceId;
            TotalCount = totalCount;
        }
    }
}
