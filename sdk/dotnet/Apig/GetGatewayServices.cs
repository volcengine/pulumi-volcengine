// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Apig
{
    public static class GetGatewayServices
    {
        /// <summary>
        /// Use this data source to query detailed information of apig gateway services
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Apig.GetGatewayServices.Invoke(new()
        ///     {
        ///         GatewayId = "gd13d8c6eq1emkiunq6p0",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGatewayServicesResult> InvokeAsync(GetGatewayServicesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayServicesResult>("volcengine:apig/getGatewayServices:getGatewayServices", args ?? new GetGatewayServicesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of apig gateway services
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Apig.GetGatewayServices.Invoke(new()
        ///     {
        ///         GatewayId = "gd13d8c6eq1emkiunq6p0",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGatewayServicesResult> Invoke(GetGatewayServicesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayServicesResult>("volcengine:apig/getGatewayServices:getGatewayServices", args ?? new GetGatewayServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayServicesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The gateway id of api gateway service.
        /// </summary>
        [Input("gatewayId")]
        public string? GatewayId { get; set; }

        /// <summary>
        /// The name of api gateway service. This field support fuzzy query.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The status of api gateway service.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public GetGatewayServicesArgs()
        {
        }
        public static new GetGatewayServicesArgs Empty => new GetGatewayServicesArgs();
    }

    public sealed class GetGatewayServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The gateway id of api gateway service.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// The name of api gateway service. This field support fuzzy query.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The status of api gateway service.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetGatewayServicesInvokeArgs()
        {
        }
        public static new GetGatewayServicesInvokeArgs Empty => new GetGatewayServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayServicesResult
    {
        /// <summary>
        /// The gateway id of the api gateway service.
        /// </summary>
        public readonly string? GatewayId;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewayServicesGatewayServiceResult> GatewayServices;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the api gateway service.
        /// </summary>
        public readonly string? Name;
        public readonly string? OutputFile;
        /// <summary>
        /// The status of the api gateway service.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetGatewayServicesResult(
            string? gatewayId,

            ImmutableArray<Outputs.GetGatewayServicesGatewayServiceResult> gatewayServices,

            string id,

            string? name,

            string? outputFile,

            string? status,

            int totalCount)
        {
            GatewayId = gatewayId;
            GatewayServices = gatewayServices;
            Id = id;
            Name = name;
            OutputFile = outputFile;
            Status = status;
            TotalCount = totalCount;
        }
    }
}
