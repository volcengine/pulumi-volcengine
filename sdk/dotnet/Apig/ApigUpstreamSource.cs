// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Apig
{
    /// <summary>
    /// Provides a resource to manage apig upstream source
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.GetZones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var foo1 = new Volcengine.Vpc.Subnet("foo1", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var foo2 = new Volcengine.Vpc.Subnet("foo2", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.1.0/24",
    ///         ZoneId = fooZones.Apply(getZonesResult =&gt; getZonesResult.Zones[1]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooApigGateway = new Volcengine.Apig.ApigGateway("fooApigGateway", new()
    ///     {
    ///         Type = "standard",
    ///         Comments = "acc-test",
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Apig.Inputs.ApigGatewayTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///         NetworkSpec = new Volcengine.Apig.Inputs.ApigGatewayNetworkSpecArgs
    ///         {
    ///             VpcId = fooVpc.Id,
    ///             SubnetIds = new[]
    ///             {
    ///                 foo1.Id,
    ///                 foo2.Id,
    ///             },
    ///         },
    ///         ResourceSpec = new Volcengine.Apig.Inputs.ApigGatewayResourceSpecArgs
    ///         {
    ///             Replicas = 2,
    ///             InstanceSpecCode = "1c2g",
    ///             ClbSpecCode = "small_1",
    ///             PublicNetworkBillingType = "bandwidth",
    ///             PublicNetworkBandwidth = 1,
    ///             NetworkType = new Volcengine.Apig.Inputs.ApigGatewayResourceSpecNetworkTypeArgs
    ///             {
    ///                 EnablePublicNetwork = true,
    ///                 EnablePrivateNetwork = true,
    ///             },
    ///         },
    ///         LogSpec = new Volcengine.Apig.Inputs.ApigGatewayLogSpecArgs
    ///         {
    ///             Enable = true,
    ///             ProjectId = "d3cb87c0-faeb-4074-b1ee-9bd747865a76",
    ///             TopicId = "d339482e-d86d-4bd8-a9bb-f270417f00a1",
    ///         },
    ///         MonitorSpec = new Volcengine.Apig.Inputs.ApigGatewayMonitorSpecArgs
    ///         {
    ///             Enable = true,
    ///             WorkspaceId = "4ed1caf3-279d-4c5f-8301-87ea38e92ffc",
    ///         },
    ///     });
    /// 
    ///     var fooApigGatewayService = new Volcengine.Apig.ApigGatewayService("fooApigGatewayService", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         ServiceName = "acc-test-apig-service",
    ///         Comments = "acc-test",
    ///         Protocols = new[]
    ///         {
    ///             "HTTP",
    ///             "HTTPS",
    ///         },
    ///         AuthSpec = new Volcengine.Apig.Inputs.ApigGatewayServiceAuthSpecArgs
    ///         {
    ///             Enable = false,
    ///         },
    ///     });
    /// 
    ///     var foo_nacos = new Volcengine.Apig.ApigUpstreamSource("foo-nacos", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         Comments = "acc-test-nacos",
    ///         SourceType = "Nacos",
    ///         SourceSpec = new Volcengine.Apig.Inputs.ApigUpstreamSourceSourceSpecArgs
    ///         {
    ///             NacosSource = new Volcengine.Apig.Inputs.ApigUpstreamSourceSourceSpecNacosSourceArgs
    ///             {
    ///                 NacosId = "nd197ls631meck48imm7g",
    ///                 AuthConfig = new Volcengine.Apig.Inputs.ApigUpstreamSourceSourceSpecNacosSourceAuthConfigArgs
    ///                 {
    ///                     Basic = new Volcengine.Apig.Inputs.ApigUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs
    ///                     {
    ///                         Username = "nacos",
    ///                         Password = "******",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var foo_k8s = new Volcengine.Apig.ApigUpstreamSource("foo-k8s", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         Comments = "acc-test-k8s",
    ///         SourceType = "K8S",
    ///         SourceSpec = new Volcengine.Apig.Inputs.ApigUpstreamSourceSourceSpecArgs
    ///         {
    ///             K8sSource = new Volcengine.Apig.Inputs.ApigUpstreamSourceSourceSpecK8sSourceArgs
    ///             {
    ///                 ClusterId = "cd197sac4mpmnruh7um80",
    ///             },
    ///         },
    ///         IngressSettings = new[]
    ///         {
    ///             new Volcengine.Apig.Inputs.ApigUpstreamSourceIngressSettingArgs
    ///             {
    ///                 EnableIngress = true,
    ///                 UpdateStatus = true,
    ///                 IngressClasses = new[]
    ///                 {
    ///                     "test",
    ///                 },
    ///                 WatchNamespaces = new[]
    ///                 {
    ///                     "default",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ApigUpstreamSource can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:apig/apigUpstreamSource:ApigUpstreamSource default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:apig/apigUpstreamSource:ApigUpstreamSource")]
    public partial class ApigUpstreamSource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The comments of the apig upstream source.
        /// </summary>
        [Output("comments")]
        public Output<string?> Comments { get; private set; } = null!;

        /// <summary>
        /// The gateway id of the apig upstream source.
        /// </summary>
        [Output("gatewayId")]
        public Output<string> GatewayId { get; private set; } = null!;

        /// <summary>
        /// The ingress settings of apig upstream source.
        /// </summary>
        [Output("ingressSettings")]
        public Output<ImmutableArray<Outputs.ApigUpstreamSourceIngressSetting>> IngressSettings { get; private set; } = null!;

        /// <summary>
        /// The source spec of apig upstream source.
        /// </summary>
        [Output("sourceSpec")]
        public Output<Outputs.ApigUpstreamSourceSourceSpec> SourceSpec { get; private set; } = null!;

        /// <summary>
        /// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
        /// </summary>
        [Output("sourceType")]
        public Output<string> SourceType { get; private set; } = null!;


        /// <summary>
        /// Create a ApigUpstreamSource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApigUpstreamSource(string name, ApigUpstreamSourceArgs args, CustomResourceOptions? options = null)
            : base("volcengine:apig/apigUpstreamSource:ApigUpstreamSource", name, args ?? new ApigUpstreamSourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApigUpstreamSource(string name, Input<string> id, ApigUpstreamSourceState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:apig/apigUpstreamSource:ApigUpstreamSource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApigUpstreamSource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApigUpstreamSource Get(string name, Input<string> id, ApigUpstreamSourceState? state = null, CustomResourceOptions? options = null)
        {
            return new ApigUpstreamSource(name, id, state, options);
        }
    }

    public sealed class ApigUpstreamSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The comments of the apig upstream source.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// The gateway id of the apig upstream source.
        /// </summary>
        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        [Input("ingressSettings")]
        private InputList<Inputs.ApigUpstreamSourceIngressSettingArgs>? _ingressSettings;

        /// <summary>
        /// The ingress settings of apig upstream source.
        /// </summary>
        public InputList<Inputs.ApigUpstreamSourceIngressSettingArgs> IngressSettings
        {
            get => _ingressSettings ?? (_ingressSettings = new InputList<Inputs.ApigUpstreamSourceIngressSettingArgs>());
            set => _ingressSettings = value;
        }

        /// <summary>
        /// The source spec of apig upstream source.
        /// </summary>
        [Input("sourceSpec", required: true)]
        public Input<Inputs.ApigUpstreamSourceSourceSpecArgs> SourceSpec { get; set; } = null!;

        /// <summary>
        /// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        public ApigUpstreamSourceArgs()
        {
        }
        public static new ApigUpstreamSourceArgs Empty => new ApigUpstreamSourceArgs();
    }

    public sealed class ApigUpstreamSourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The comments of the apig upstream source.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// The gateway id of the apig upstream source.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        [Input("ingressSettings")]
        private InputList<Inputs.ApigUpstreamSourceIngressSettingGetArgs>? _ingressSettings;

        /// <summary>
        /// The ingress settings of apig upstream source.
        /// </summary>
        public InputList<Inputs.ApigUpstreamSourceIngressSettingGetArgs> IngressSettings
        {
            get => _ingressSettings ?? (_ingressSettings = new InputList<Inputs.ApigUpstreamSourceIngressSettingGetArgs>());
            set => _ingressSettings = value;
        }

        /// <summary>
        /// The source spec of apig upstream source.
        /// </summary>
        [Input("sourceSpec")]
        public Input<Inputs.ApigUpstreamSourceSourceSpecGetArgs>? SourceSpec { get; set; }

        /// <summary>
        /// The source type of the apig upstream. Valid values: `K8S`, `Nacos`.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        public ApigUpstreamSourceState()
        {
        }
        public static new ApigUpstreamSourceState Empty => new ApigUpstreamSourceState();
    }
}
