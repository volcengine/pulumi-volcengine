// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Apig
{
    /// <summary>
    /// Provides a resource to manage apig upstream
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.GetZones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var foo1 = new Volcengine.Vpc.Subnet("foo1", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var foo2 = new Volcengine.Vpc.Subnet("foo2", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.1.0/24",
    ///         ZoneId = fooZones.Apply(getZonesResult =&gt; getZonesResult.Zones[1]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooApigGateway = new Volcengine.Apig.ApigGateway("fooApigGateway", new()
    ///     {
    ///         Type = "standard",
    ///         Comments = "acc-test",
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Apig.Inputs.ApigGatewayTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///         NetworkSpec = new Volcengine.Apig.Inputs.ApigGatewayNetworkSpecArgs
    ///         {
    ///             VpcId = fooVpc.Id,
    ///             SubnetIds = new[]
    ///             {
    ///                 foo1.Id,
    ///                 foo2.Id,
    ///             },
    ///         },
    ///         ResourceSpec = new Volcengine.Apig.Inputs.ApigGatewayResourceSpecArgs
    ///         {
    ///             Replicas = 2,
    ///             InstanceSpecCode = "1c2g",
    ///             ClbSpecCode = "small_1",
    ///             PublicNetworkBillingType = "bandwidth",
    ///             PublicNetworkBandwidth = 1,
    ///             NetworkType = new Volcengine.Apig.Inputs.ApigGatewayResourceSpecNetworkTypeArgs
    ///             {
    ///                 EnablePublicNetwork = true,
    ///                 EnablePrivateNetwork = true,
    ///             },
    ///         },
    ///         LogSpec = new Volcengine.Apig.Inputs.ApigGatewayLogSpecArgs
    ///         {
    ///             Enable = true,
    ///             ProjectId = "d3cb87c0-faeb-4074-b1ee-9bd747865a76",
    ///             TopicId = "d339482e-d86d-4bd8-a9bb-f270417f00a1",
    ///         },
    ///         MonitorSpec = new Volcengine.Apig.Inputs.ApigGatewayMonitorSpecArgs
    ///         {
    ///             Enable = true,
    ///             WorkspaceId = "4ed1caf3-279d-4c5f-8301-87ea38e92ffc",
    ///         },
    ///     });
    /// 
    ///     var fooApigGatewayService = new Volcengine.Apig.ApigGatewayService("fooApigGatewayService", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         ServiceName = "acc-test-apig-service",
    ///         Comments = "acc-test",
    ///         Protocols = new[]
    ///         {
    ///             "HTTP",
    ///             "HTTPS",
    ///         },
    ///         AuthSpec = new Volcengine.Apig.Inputs.ApigGatewayServiceAuthSpecArgs
    ///         {
    ///             Enable = false,
    ///         },
    ///     });
    /// 
    ///     var foo_fixed_ip = new Volcengine.Apig.ApigUpstream("foo-fixed-ip", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         Comments = "acc-test",
    ///         ResourceType = "Console",
    ///         Protocol = "HTTP",
    ///         LoadBalancerSettings = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsArgs
    ///         {
    ///             LbPolicy = "ConsistentHashLB",
    ///             ConsistentHashLb = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsConsistentHashLbArgs
    ///             {
    ///                 HashKey = "HTTPCookie",
    ///                 HttpCookie = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsConsistentHashLbHttpCookieArgs
    ///                 {
    ///                     Name = "test",
    ///                     Path = "/",
    ///                     Ttl = 300,
    ///                 },
    ///             },
    ///         },
    ///         TlsSettings = new Volcengine.Apig.Inputs.ApigUpstreamTlsSettingsArgs
    ///         {
    ///             TlsMode = "SIMPLE",
    ///             Sni = "test",
    ///         },
    ///         CircuitBreakingSettings = new Volcengine.Apig.Inputs.ApigUpstreamCircuitBreakingSettingsArgs
    ///         {
    ///             Enable = false,
    ///             ConsecutiveErrors = 5,
    ///             Interval = 10000,
    ///             BaseEjectionTime = 30000,
    ///             MaxEjectionPercent = 20,
    ///             MinHealthPercent = 60,
    ///         },
    ///         SourceType = "FixedIP",
    ///         UpstreamSpec = new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecArgs
    ///         {
    ///             FixedIpLists = new[]
    ///             {
    ///                 new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecFixedIpListArgs
    ///                 {
    ///                     Ip = "172.16.0.10",
    ///                     Port = 8080,
    ///                 },
    ///                 new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecFixedIpListArgs
    ///                 {
    ///                     Ip = "172.16.0.20",
    ///                     Port = 8090,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var foo_vefaas = new Volcengine.Apig.ApigUpstream("foo-vefaas", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         Comments = "acc-test",
    ///         ResourceType = "Console",
    ///         Protocol = "HTTP",
    ///         SourceType = "VeFaas",
    ///         UpstreamSpec = new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecArgs
    ///         {
    ///             VeFaas = new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecVeFaasArgs
    ///             {
    ///                 FunctionId = "crnrfajj",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var foo_k8sApigUpstreamSource = new Volcengine.Apig.ApigUpstreamSource("foo-k8sApigUpstreamSource", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         Comments = "acc-test-k8s",
    ///         SourceType = "K8S",
    ///         SourceSpec = new Volcengine.Apig.Inputs.ApigUpstreamSourceSourceSpecArgs
    ///         {
    ///             K8sSource = new Volcengine.Apig.Inputs.ApigUpstreamSourceSourceSpecK8sSourceArgs
    ///             {
    ///                 ClusterId = "cd197sac4mpmnruh7um80",
    ///             },
    ///         },
    ///         IngressSettings = new[]
    ///         {
    ///             new Volcengine.Apig.Inputs.ApigUpstreamSourceIngressSettingArgs
    ///             {
    ///                 EnableIngress = true,
    ///                 UpdateStatus = true,
    ///                 IngressClasses = new[]
    ///                 {
    ///                     "test",
    ///                 },
    ///                 WatchNamespaces = new[]
    ///                 {
    ///                     "default",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var foo_k8sApigUpstream = new Volcengine.Apig.ApigUpstream("foo-k8sApigUpstream", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         Comments = "acc-test",
    ///         ResourceType = "Console",
    ///         Protocol = "HTTP",
    ///         LoadBalancerSettings = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsArgs
    ///         {
    ///             LbPolicy = "ConsistentHashLB",
    ///             ConsistentHashLb = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsConsistentHashLbArgs
    ///             {
    ///                 HashKey = "HTTPCookie",
    ///                 HttpCookie = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsConsistentHashLbHttpCookieArgs
    ///                 {
    ///                     Name = "test",
    ///                     Path = "/",
    ///                     Ttl = 300,
    ///                 },
    ///             },
    ///         },
    ///         TlsSettings = new Volcengine.Apig.Inputs.ApigUpstreamTlsSettingsArgs
    ///         {
    ///             TlsMode = "SIMPLE",
    ///             Sni = "test",
    ///         },
    ///         CircuitBreakingSettings = new Volcengine.Apig.Inputs.ApigUpstreamCircuitBreakingSettingsArgs
    ///         {
    ///             Enable = false,
    ///             ConsecutiveErrors = 5,
    ///             Interval = 10000,
    ///             BaseEjectionTime = 30000,
    ///             MaxEjectionPercent = 20,
    ///             MinHealthPercent = 60,
    ///         },
    ///         SourceType = "K8S",
    ///         UpstreamSpec = new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecArgs
    ///         {
    ///             K8sService = new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecK8sServiceArgs
    ///             {
    ///                 Namespace = "default",
    ///                 Name = "kubernetes",
    ///                 Port = 443,
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             foo_k8sApigUpstreamSource,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ApigUpstream can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:apig/apigUpstream:ApigUpstream default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:apig/apigUpstream:ApigUpstream")]
    public partial class ApigUpstream : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The circuit breaking settings of apig upstream.
        /// </summary>
        [Output("circuitBreakingSettings")]
        public Output<Outputs.ApigUpstreamCircuitBreakingSettings> CircuitBreakingSettings { get; private set; } = null!;

        /// <summary>
        /// The comments of the apig upstream.
        /// </summary>
        [Output("comments")]
        public Output<string?> Comments { get; private set; } = null!;

        /// <summary>
        /// The create time of apig upstream.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The gateway id of the apig upstream.
        /// </summary>
        [Output("gatewayId")]
        public Output<string> GatewayId { get; private set; } = null!;

        /// <summary>
        /// The load balancer settings of apig upstream.
        /// </summary>
        [Output("loadBalancerSettings")]
        public Output<Outputs.ApigUpstreamLoadBalancerSettings> LoadBalancerSettings { get; private set; } = null!;

        /// <summary>
        /// The name of the apig upstream.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
        /// </summary>
        [Output("resourceType")]
        public Output<string?> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
        /// </summary>
        [Output("sourceType")]
        public Output<string> SourceType { get; private set; } = null!;

        /// <summary>
        /// The tls settings of apig upstream.
        /// </summary>
        [Output("tlsSettings")]
        public Output<Outputs.ApigUpstreamTlsSettings> TlsSettings { get; private set; } = null!;

        /// <summary>
        /// The update time of apig upstream version.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The upstream spec of apig upstream.
        /// </summary>
        [Output("upstreamSpec")]
        public Output<Outputs.ApigUpstreamUpstreamSpec> UpstreamSpec { get; private set; } = null!;

        /// <summary>
        /// The version details of apig upstream.
        /// </summary>
        [Output("versionDetails")]
        public Output<ImmutableArray<Outputs.ApigUpstreamVersionDetail>> VersionDetails { get; private set; } = null!;


        /// <summary>
        /// Create a ApigUpstream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApigUpstream(string name, ApigUpstreamArgs args, CustomResourceOptions? options = null)
            : base("volcengine:apig/apigUpstream:ApigUpstream", name, args ?? new ApigUpstreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApigUpstream(string name, Input<string> id, ApigUpstreamState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:apig/apigUpstream:ApigUpstream", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApigUpstream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApigUpstream Get(string name, Input<string> id, ApigUpstreamState? state = null, CustomResourceOptions? options = null)
        {
            return new ApigUpstream(name, id, state, options);
        }
    }

    public sealed class ApigUpstreamArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The circuit breaking settings of apig upstream.
        /// </summary>
        [Input("circuitBreakingSettings")]
        public Input<Inputs.ApigUpstreamCircuitBreakingSettingsArgs>? CircuitBreakingSettings { get; set; }

        /// <summary>
        /// The comments of the apig upstream.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// The gateway id of the apig upstream.
        /// </summary>
        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        /// <summary>
        /// The load balancer settings of apig upstream.
        /// </summary>
        [Input("loadBalancerSettings")]
        public Input<Inputs.ApigUpstreamLoadBalancerSettingsArgs>? LoadBalancerSettings { get; set; }

        /// <summary>
        /// The name of the apig upstream.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        /// <summary>
        /// The tls settings of apig upstream.
        /// </summary>
        [Input("tlsSettings")]
        public Input<Inputs.ApigUpstreamTlsSettingsArgs>? TlsSettings { get; set; }

        /// <summary>
        /// The upstream spec of apig upstream.
        /// </summary>
        [Input("upstreamSpec", required: true)]
        public Input<Inputs.ApigUpstreamUpstreamSpecArgs> UpstreamSpec { get; set; } = null!;

        public ApigUpstreamArgs()
        {
        }
        public static new ApigUpstreamArgs Empty => new ApigUpstreamArgs();
    }

    public sealed class ApigUpstreamState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The circuit breaking settings of apig upstream.
        /// </summary>
        [Input("circuitBreakingSettings")]
        public Input<Inputs.ApigUpstreamCircuitBreakingSettingsGetArgs>? CircuitBreakingSettings { get; set; }

        /// <summary>
        /// The comments of the apig upstream.
        /// </summary>
        [Input("comments")]
        public Input<string>? Comments { get; set; }

        /// <summary>
        /// The create time of apig upstream.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The gateway id of the apig upstream.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// The load balancer settings of apig upstream.
        /// </summary>
        [Input("loadBalancerSettings")]
        public Input<Inputs.ApigUpstreamLoadBalancerSettingsGetArgs>? LoadBalancerSettings { get; set; }

        /// <summary>
        /// The name of the apig upstream.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The protocol of the apig upstream. Valid values: `HTTP`, `HTTP2`, `GRPC`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// The resource type of the apig upstream. Valid values: `Console`, `Ingress`.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The source type of the apig upstream. Valid values: `VeFaas`, `ECS`, `FixedIP`, `K8S`, `Nacos`, `Domain`, `AIProvider`, `VeMLP`.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// The tls settings of apig upstream.
        /// </summary>
        [Input("tlsSettings")]
        public Input<Inputs.ApigUpstreamTlsSettingsGetArgs>? TlsSettings { get; set; }

        /// <summary>
        /// The update time of apig upstream version.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// The upstream spec of apig upstream.
        /// </summary>
        [Input("upstreamSpec")]
        public Input<Inputs.ApigUpstreamUpstreamSpecGetArgs>? UpstreamSpec { get; set; }

        [Input("versionDetails")]
        private InputList<Inputs.ApigUpstreamVersionDetailGetArgs>? _versionDetails;

        /// <summary>
        /// The version details of apig upstream.
        /// </summary>
        public InputList<Inputs.ApigUpstreamVersionDetailGetArgs> VersionDetails
        {
            get => _versionDetails ?? (_versionDetails = new InputList<Inputs.ApigUpstreamVersionDetailGetArgs>());
            set => _versionDetails = value;
        }

        public ApigUpstreamState()
        {
        }
        public static new ApigUpstreamState Empty => new ApigUpstreamState();
    }
}
