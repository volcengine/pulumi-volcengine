// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Apig
{
    /// <summary>
    /// Provides a resource to manage apig route
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.GetZones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var foo1 = new Volcengine.Vpc.Subnet("foo1", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(getZonesResult =&gt; getZonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var foo2 = new Volcengine.Vpc.Subnet("foo2", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.1.0/24",
    ///         ZoneId = fooZones.Apply(getZonesResult =&gt; getZonesResult.Zones[1]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooApigGateway = new Volcengine.Apig.ApigGateway("fooApigGateway", new()
    ///     {
    ///         Type = "standard",
    ///         Comments = "acc-test",
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Apig.Inputs.ApigGatewayTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///         NetworkSpec = new Volcengine.Apig.Inputs.ApigGatewayNetworkSpecArgs
    ///         {
    ///             VpcId = fooVpc.Id,
    ///             SubnetIds = new[]
    ///             {
    ///                 foo1.Id,
    ///                 foo2.Id,
    ///             },
    ///         },
    ///         ResourceSpec = new Volcengine.Apig.Inputs.ApigGatewayResourceSpecArgs
    ///         {
    ///             Replicas = 2,
    ///             InstanceSpecCode = "1c2g",
    ///             ClbSpecCode = "small_1",
    ///             PublicNetworkBillingType = "bandwidth",
    ///             PublicNetworkBandwidth = 1,
    ///             NetworkType = new Volcengine.Apig.Inputs.ApigGatewayResourceSpecNetworkTypeArgs
    ///             {
    ///                 EnablePublicNetwork = true,
    ///                 EnablePrivateNetwork = true,
    ///             },
    ///         },
    ///         LogSpec = new Volcengine.Apig.Inputs.ApigGatewayLogSpecArgs
    ///         {
    ///             Enable = true,
    ///             ProjectId = "d3cb87c0-faeb-4074-b1ee-9bd747865a76",
    ///             TopicId = "d339482e-d86d-4bd8-a9bb-f270417f00a1",
    ///         },
    ///         MonitorSpec = new Volcengine.Apig.Inputs.ApigGatewayMonitorSpecArgs
    ///         {
    ///             Enable = true,
    ///             WorkspaceId = "4ed1caf3-279d-4c5f-8301-87ea38e92ffc",
    ///         },
    ///     });
    /// 
    ///     var fooApigGatewayService = new Volcengine.Apig.ApigGatewayService("fooApigGatewayService", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         ServiceName = "acc-test-apig-service",
    ///         Comments = "acc-test",
    ///         Protocols = new[]
    ///         {
    ///             "HTTP",
    ///             "HTTPS",
    ///         },
    ///         AuthSpec = new Volcengine.Apig.Inputs.ApigGatewayServiceAuthSpecArgs
    ///         {
    ///             Enable = false,
    ///         },
    ///     });
    /// 
    ///     var foo_fixed_ip = new Volcengine.Apig.ApigUpstream("foo-fixed-ip", new()
    ///     {
    ///         GatewayId = fooApigGateway.Id,
    ///         Comments = "acc-test",
    ///         ResourceType = "Console",
    ///         Protocol = "HTTP",
    ///         LoadBalancerSettings = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsArgs
    ///         {
    ///             LbPolicy = "ConsistentHashLB",
    ///             ConsistentHashLb = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsConsistentHashLbArgs
    ///             {
    ///                 HashKey = "HTTPCookie",
    ///                 HttpCookie = new Volcengine.Apig.Inputs.ApigUpstreamLoadBalancerSettingsConsistentHashLbHttpCookieArgs
    ///                 {
    ///                     Name = "test",
    ///                     Path = "/",
    ///                     Ttl = 300,
    ///                 },
    ///             },
    ///         },
    ///         TlsSettings = new Volcengine.Apig.Inputs.ApigUpstreamTlsSettingsArgs
    ///         {
    ///             TlsMode = "SIMPLE",
    ///             Sni = "test",
    ///         },
    ///         CircuitBreakingSettings = new Volcengine.Apig.Inputs.ApigUpstreamCircuitBreakingSettingsArgs
    ///         {
    ///             Enable = false,
    ///             ConsecutiveErrors = 5,
    ///             Interval = 10000,
    ///             BaseEjectionTime = 30000,
    ///             MaxEjectionPercent = 20,
    ///             MinHealthPercent = 60,
    ///         },
    ///         SourceType = "FixedIP",
    ///         UpstreamSpec = new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecArgs
    ///         {
    ///             FixedIpLists = new[]
    ///             {
    ///                 new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecFixedIpListArgs
    ///                 {
    ///                     Ip = "172.16.0.10",
    ///                     Port = 8080,
    ///                 },
    ///                 new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecFixedIpListArgs
    ///                 {
    ///                     Ip = "172.16.0.20",
    ///                     Port = 8090,
    ///                 },
    ///                 new Volcengine.Apig.Inputs.ApigUpstreamUpstreamSpecFixedIpListArgs
    ///                 {
    ///                     Ip = "172.16.0.30",
    ///                     Port = 8099,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var fooApigRoute = new Volcengine.Apig.ApigRoute("fooApigRoute", new()
    ///     {
    ///         ServiceId = fooApigGatewayService.Id,
    ///         ResourceType = "Console",
    ///         Priority = 2,
    ///         Enable = true,
    ///         UpstreamLists = new[]
    ///         {
    ///             new Volcengine.Apig.Inputs.ApigRouteUpstreamListArgs
    ///             {
    ///                 UpstreamId = foo_fixed_ip.Id,
    ///                 Weight = 100,
    ///             },
    ///         },
    ///         MatchRule = new Volcengine.Apig.Inputs.ApigRouteMatchRuleArgs
    ///         {
    ///             Path = new Volcengine.Apig.Inputs.ApigRouteMatchRulePathArgs
    ///             {
    ///                 MatchType = "Prefix",
    ///                 MatchContent = "/test",
    ///             },
    ///             Methods = new[]
    ///             {
    ///                 "GET",
    ///                 "POST",
    ///             },
    ///             QueryStrings = new[]
    ///             {
    ///                 new Volcengine.Apig.Inputs.ApigRouteMatchRuleQueryStringArgs
    ///                 {
    ///                     Key = "test-key",
    ///                     Value = new Volcengine.Apig.Inputs.ApigRouteMatchRuleQueryStringValueArgs
    ///                     {
    ///                         MatchType = "Exact",
    ///                         MatchContent = "test-value",
    ///                     },
    ///                 },
    ///             },
    ///             Headers = new[]
    ///             {
    ///                 new Volcengine.Apig.Inputs.ApigRouteMatchRuleHeaderArgs
    ///                 {
    ///                     Key = "test-header",
    ///                     Value = new Volcengine.Apig.Inputs.ApigRouteMatchRuleHeaderValueArgs
    ///                     {
    ///                         MatchType = "Regex",
    ///                         MatchContent = "test-value",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         AdvancedSetting = new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingArgs
    ///         {
    ///             TimeoutSetting = new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingTimeoutSettingArgs
    ///             {
    ///                 Enable = false,
    ///                 Timeout = 10,
    ///             },
    ///             CorsPolicySetting = new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingCorsPolicySettingArgs
    ///             {
    ///                 Enable = false,
    ///             },
    ///             UrlRewriteSetting = new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingUrlRewriteSettingArgs
    ///             {
    ///                 Enable = true,
    ///                 UrlRewrite = "/test",
    ///             },
    ///             RetryPolicySetting = new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingRetryPolicySettingArgs
    ///             {
    ///                 Enable = true,
    ///                 Attempts = 5,
    ///                 PerTryTimeout = 1000,
    ///                 RetryOns = new[]
    ///                 {
    ///                     "5xx",
    ///                     "reset",
    ///                 },
    ///                 HttpCodes = new[]
    ///                 {
    ///                     "500",
    ///                     "502",
    ///                     "503",
    ///                     "504",
    ///                 },
    ///             },
    ///             HeaderOperations = new[]
    ///             {
    ///                 new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingHeaderOperationArgs
    ///                 {
    ///                     Operation = "add",
    ///                     Key = "test-header-req",
    ///                     Value = "test-value",
    ///                     DirectionType = "request",
    ///                 },
    ///                 new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingHeaderOperationArgs
    ///                 {
    ///                     Operation = "set",
    ///                     Key = "test-header-resp",
    ///                     Value = "test-value",
    ///                     DirectionType = "response",
    ///                 },
    ///             },
    ///             MirrorPolicies = new[]
    ///             {
    ///                 new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingMirrorPolicyArgs
    ///                 {
    ///                     Upstream = new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingMirrorPolicyUpstreamArgs
    ///                     {
    ///                         UpstreamId = foo_fixed_ip.Id,
    ///                         Type = "fixed_ip",
    ///                     },
    ///                     Percent = new Volcengine.Apig.Inputs.ApigRouteAdvancedSettingMirrorPolicyPercentArgs
    ///                     {
    ///                         Value = 50,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ApigRoute can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:apig/apigRoute:ApigRoute default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:apig/apigRoute:ApigRoute")]
    public partial class ApigRoute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The advanced setting of the api gateway route.
        /// </summary>
        [Output("advancedSetting")]
        public Output<Outputs.ApigRouteAdvancedSetting> AdvancedSetting { get; private set; } = null!;

        /// <summary>
        /// The create time of the api gateway route.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The custom domains of the api gateway route.
        /// </summary>
        [Output("customDomains")]
        public Output<ImmutableArray<Outputs.ApigRouteCustomDomain>> CustomDomains { get; private set; } = null!;

        /// <summary>
        /// The domains of the api gateway route.
        /// </summary>
        [Output("domains")]
        public Output<ImmutableArray<Outputs.ApigRouteDomain>> Domains { get; private set; } = null!;

        /// <summary>
        /// Whether the apig route is enabled. Default is `false`.
        /// </summary>
        [Output("enable")]
        public Output<bool> Enable { get; private set; } = null!;

        /// <summary>
        /// The match rule of the api gateway route.
        /// </summary>
        [Output("matchRule")]
        public Output<Outputs.ApigRouteMatchRule> MatchRule { get; private set; } = null!;

        /// <summary>
        /// The name of the apig route.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The priority of the apig route. Valid values: 0~100.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// The reason of the api gateway route.
        /// </summary>
        [Output("reason")]
        public Output<string> Reason { get; private set; } = null!;

        /// <summary>
        /// The resource type of the apig route. Valid values: `Console`, `Ingress` Default is `Console`.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The service id of the apig route.
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;

        /// <summary>
        /// The status of the api gateway route.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The update time of the api gateway route.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The upstream list of the api gateway route.
        /// </summary>
        [Output("upstreamLists")]
        public Output<ImmutableArray<Outputs.ApigRouteUpstreamList>> UpstreamLists { get; private set; } = null!;


        /// <summary>
        /// Create a ApigRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApigRoute(string name, ApigRouteArgs args, CustomResourceOptions? options = null)
            : base("volcengine:apig/apigRoute:ApigRoute", name, args ?? new ApigRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApigRoute(string name, Input<string> id, ApigRouteState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:apig/apigRoute:ApigRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApigRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApigRoute Get(string name, Input<string> id, ApigRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new ApigRoute(name, id, state, options);
        }
    }

    public sealed class ApigRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The advanced setting of the api gateway route.
        /// </summary>
        [Input("advancedSetting")]
        public Input<Inputs.ApigRouteAdvancedSettingArgs>? AdvancedSetting { get; set; }

        /// <summary>
        /// Whether the apig route is enabled. Default is `false`.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// The match rule of the api gateway route.
        /// </summary>
        [Input("matchRule", required: true)]
        public Input<Inputs.ApigRouteMatchRuleArgs> MatchRule { get; set; } = null!;

        /// <summary>
        /// The name of the apig route.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The priority of the apig route. Valid values: 0~100.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The resource type of the apig route. Valid values: `Console`, `Ingress` Default is `Console`.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The service id of the apig route.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        [Input("upstreamLists", required: true)]
        private InputList<Inputs.ApigRouteUpstreamListArgs>? _upstreamLists;

        /// <summary>
        /// The upstream list of the api gateway route.
        /// </summary>
        public InputList<Inputs.ApigRouteUpstreamListArgs> UpstreamLists
        {
            get => _upstreamLists ?? (_upstreamLists = new InputList<Inputs.ApigRouteUpstreamListArgs>());
            set => _upstreamLists = value;
        }

        public ApigRouteArgs()
        {
        }
        public static new ApigRouteArgs Empty => new ApigRouteArgs();
    }

    public sealed class ApigRouteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The advanced setting of the api gateway route.
        /// </summary>
        [Input("advancedSetting")]
        public Input<Inputs.ApigRouteAdvancedSettingGetArgs>? AdvancedSetting { get; set; }

        /// <summary>
        /// The create time of the api gateway route.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("customDomains")]
        private InputList<Inputs.ApigRouteCustomDomainGetArgs>? _customDomains;

        /// <summary>
        /// The custom domains of the api gateway route.
        /// </summary>
        public InputList<Inputs.ApigRouteCustomDomainGetArgs> CustomDomains
        {
            get => _customDomains ?? (_customDomains = new InputList<Inputs.ApigRouteCustomDomainGetArgs>());
            set => _customDomains = value;
        }

        [Input("domains")]
        private InputList<Inputs.ApigRouteDomainGetArgs>? _domains;

        /// <summary>
        /// The domains of the api gateway route.
        /// </summary>
        public InputList<Inputs.ApigRouteDomainGetArgs> Domains
        {
            get => _domains ?? (_domains = new InputList<Inputs.ApigRouteDomainGetArgs>());
            set => _domains = value;
        }

        /// <summary>
        /// Whether the apig route is enabled. Default is `false`.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// The match rule of the api gateway route.
        /// </summary>
        [Input("matchRule")]
        public Input<Inputs.ApigRouteMatchRuleGetArgs>? MatchRule { get; set; }

        /// <summary>
        /// The name of the apig route.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The priority of the apig route. Valid values: 0~100.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The reason of the api gateway route.
        /// </summary>
        [Input("reason")]
        public Input<string>? Reason { get; set; }

        /// <summary>
        /// The resource type of the apig route. Valid values: `Console`, `Ingress` Default is `Console`.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The service id of the apig route.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        /// <summary>
        /// The status of the api gateway route.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The update time of the api gateway route.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("upstreamLists")]
        private InputList<Inputs.ApigRouteUpstreamListGetArgs>? _upstreamLists;

        /// <summary>
        /// The upstream list of the api gateway route.
        /// </summary>
        public InputList<Inputs.ApigRouteUpstreamListGetArgs> UpstreamLists
        {
            get => _upstreamLists ?? (_upstreamLists = new InputList<Inputs.ApigRouteUpstreamListGetArgs>());
            set => _upstreamLists = value;
        }

        public ApigRouteState()
        {
        }
        public static new ApigRouteState Empty => new ApigRouteState();
    }
}
