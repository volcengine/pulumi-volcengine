// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Mongodb
{
    [Obsolete(@"volcengine.mongodb.MongoAllowLists has been deprecated in favor of volcengine.mongodb.getMongoAllowLists")]
    public static class MongoAllowLists
    {
        /// <summary>
        /// Use this data source to query detailed information of mongodb allow lists
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooMongoAllowList = new Volcengine.Mongodb.MongoAllowList("fooMongoAllowList", new()
        ///     {
        ///         AllowListName = "acc-test",
        ///         AllowListDesc = "acc-test",
        ///         AllowListType = "IPv4",
        ///         AllowList = "10.1.1.3,10.2.3.0/24,10.1.1.1",
        ///     });
        /// 
        ///     var fooMongoAllowLists = Volcengine.Mongodb.GetMongoAllowLists.Invoke(new()
        ///     {
        ///         AllowListIds = new[]
        ///         {
        ///             fooMongoAllowList.Id,
        ///         },
        ///         RegionId = "cn-beijing",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<MongoAllowListsResult> InvokeAsync(MongoAllowListsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<MongoAllowListsResult>("volcengine:mongodb/mongoAllowLists:MongoAllowLists", args ?? new MongoAllowListsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of mongodb allow lists
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooMongoAllowList = new Volcengine.Mongodb.MongoAllowList("fooMongoAllowList", new()
        ///     {
        ///         AllowListName = "acc-test",
        ///         AllowListDesc = "acc-test",
        ///         AllowListType = "IPv4",
        ///         AllowList = "10.1.1.3,10.2.3.0/24,10.1.1.1",
        ///     });
        /// 
        ///     var fooMongoAllowLists = Volcengine.Mongodb.GetMongoAllowLists.Invoke(new()
        ///     {
        ///         AllowListIds = new[]
        ///         {
        ///             fooMongoAllowList.Id,
        ///         },
        ///         RegionId = "cn-beijing",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<MongoAllowListsResult> Invoke(MongoAllowListsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<MongoAllowListsResult>("volcengine:mongodb/mongoAllowLists:MongoAllowLists", args ?? new MongoAllowListsInvokeArgs(), options.WithDefaults());
    }


    public sealed class MongoAllowListsArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowListIds")]
        private List<string>? _allowListIds;

        /// <summary>
        /// The allow list IDs to query.
        /// </summary>
        public List<string> AllowListIds
        {
            get => _allowListIds ?? (_allowListIds = new List<string>());
            set => _allowListIds = value;
        }

        /// <summary>
        /// The instance ID to query.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project name of the allow list.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        /// <summary>
        /// The region ID.
        /// </summary>
        [Input("regionId", required: true)]
        public string RegionId { get; set; } = null!;

        public MongoAllowListsArgs()
        {
        }
        public static new MongoAllowListsArgs Empty => new MongoAllowListsArgs();
    }

    public sealed class MongoAllowListsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("allowListIds")]
        private InputList<string>? _allowListIds;

        /// <summary>
        /// The allow list IDs to query.
        /// </summary>
        public InputList<string> AllowListIds
        {
            get => _allowListIds ?? (_allowListIds = new InputList<string>());
            set => _allowListIds = value;
        }

        /// <summary>
        /// The instance ID to query.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project name of the allow list.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The region ID.
        /// </summary>
        [Input("regionId", required: true)]
        public Input<string> RegionId { get; set; } = null!;

        public MongoAllowListsInvokeArgs()
        {
        }
        public static new MongoAllowListsInvokeArgs Empty => new MongoAllowListsInvokeArgs();
    }


    [OutputType]
    public sealed class MongoAllowListsResult
    {
        public readonly ImmutableArray<string> AllowListIds;
        /// <summary>
        /// The collection of mongodb allow list query.
        /// </summary>
        public readonly ImmutableArray<Outputs.MongoAllowListsAllowListResult> AllowLists;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The instance id that bound to the allow list.
        /// </summary>
        public readonly string? InstanceId;
        public readonly string? OutputFile;
        /// <summary>
        /// The project name of the allow list.
        /// </summary>
        public readonly string? ProjectName;
        public readonly string RegionId;
        /// <summary>
        /// The total count of mongodb allow lists query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private MongoAllowListsResult(
            ImmutableArray<string> allowListIds,

            ImmutableArray<Outputs.MongoAllowListsAllowListResult> allowLists,

            string id,

            string? instanceId,

            string? outputFile,

            string? projectName,

            string regionId,

            int totalCount)
        {
            AllowListIds = allowListIds;
            AllowLists = allowLists;
            Id = id;
            InstanceId = instanceId;
            OutputFile = outputFile;
            ProjectName = projectName;
            RegionId = regionId;
            TotalCount = totalCount;
        }
    }
}
