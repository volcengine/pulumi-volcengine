// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Private_zone
{
    public static class PrivateZones
    {
        /// <summary>
        /// Use this data source to query detailed information of private zones
        /// </summary>
        public static Task<PrivateZonesResult> InvokeAsync(PrivateZonesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<PrivateZonesResult>("volcengine:private_zone/privateZones:PrivateZones", args ?? new PrivateZonesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of private zones
        /// </summary>
        public static Output<PrivateZonesResult> Invoke(PrivateZonesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<PrivateZonesResult>("volcengine:private_zone/privateZones:PrivateZones", args ?? new PrivateZonesInvokeArgs(), options.WithDefaults());
    }


    public sealed class PrivateZonesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The line mode of Private Zone, specified whether the intelligent mode and the load balance function is enabled.
        /// </summary>
        [Input("lineMode")]
        public int? LineMode { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Whether the recursion mode of Private Zone is enabled.
        /// </summary>
        [Input("recursionMode")]
        public bool? RecursionMode { get; set; }

        /// <summary>
        /// The region of Private Zone.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// The search mode of query. Valid values: `LIKE`, `EXACT`. Default is `LIKE`.
        /// </summary>
        [Input("searchMode")]
        public string? SearchMode { get; set; }

        /// <summary>
        /// The vpc id associated to Private Zone.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        /// <summary>
        /// The zid of Private Zone.
        /// </summary>
        [Input("zid")]
        public int? Zid { get; set; }

        /// <summary>
        /// The name of Private Zone.
        /// </summary>
        [Input("zoneName")]
        public string? ZoneName { get; set; }

        public PrivateZonesArgs()
        {
        }
        public static new PrivateZonesArgs Empty => new PrivateZonesArgs();
    }

    public sealed class PrivateZonesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The line mode of Private Zone, specified whether the intelligent mode and the load balance function is enabled.
        /// </summary>
        [Input("lineMode")]
        public Input<int>? LineMode { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Whether the recursion mode of Private Zone is enabled.
        /// </summary>
        [Input("recursionMode")]
        public Input<bool>? RecursionMode { get; set; }

        /// <summary>
        /// The region of Private Zone.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The search mode of query. Valid values: `LIKE`, `EXACT`. Default is `LIKE`.
        /// </summary>
        [Input("searchMode")]
        public Input<string>? SearchMode { get; set; }

        /// <summary>
        /// The vpc id associated to Private Zone.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The zid of Private Zone.
        /// </summary>
        [Input("zid")]
        public Input<int>? Zid { get; set; }

        /// <summary>
        /// The name of Private Zone.
        /// </summary>
        [Input("zoneName")]
        public Input<string>? ZoneName { get; set; }

        public PrivateZonesInvokeArgs()
        {
        }
        public static new PrivateZonesInvokeArgs Empty => new PrivateZonesInvokeArgs();
    }


    [OutputType]
    public sealed class PrivateZonesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The line mode of the private zone, specified whether the intelligent mode and the load balance function is enabled.
        /// </summary>
        public readonly int? LineMode;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.PrivateZonesPrivateZoneResult> PrivateZones;
        /// <summary>
        /// Whether the recursion mode of the private zone is enabled.
        /// </summary>
        public readonly bool? RecursionMode;
        /// <summary>
        /// The region of the private zone.
        /// </summary>
        public readonly string? Region;
        public readonly string? SearchMode;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        public readonly string? VpcId;
        /// <summary>
        /// The id of the private zone.
        /// </summary>
        public readonly int? Zid;
        /// <summary>
        /// The id of the private zone.
        /// </summary>
        public readonly string? ZoneName;

        [OutputConstructor]
        private PrivateZonesResult(
            string id,

            int? lineMode,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.PrivateZonesPrivateZoneResult> privateZones,

            bool? recursionMode,

            string? region,

            string? searchMode,

            int totalCount,

            string? vpcId,

            int? zid,

            string? zoneName)
        {
            Id = id;
            LineMode = lineMode;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            PrivateZones = privateZones;
            RecursionMode = recursionMode;
            Region = region;
            SearchMode = searchMode;
            TotalCount = totalCount;
            VpcId = vpcId;
            Zid = zid;
            ZoneName = zoneName;
        }
    }
}
