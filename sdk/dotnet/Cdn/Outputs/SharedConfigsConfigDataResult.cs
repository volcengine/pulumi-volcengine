// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cdn.Outputs
{

    [OutputType]
    public sealed class SharedConfigsConfigDataResult
    {
        /// <summary>
        /// The configuration for IP whitelist corresponds to ConfigType allow_ip_access_rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.SharedConfigsConfigDataAllowIpAccessRuleResult> AllowIpAccessRules;
        /// <summary>
        /// The configuration for the Referer whitelist corresponds to ConfigType allow_referer_access_rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.SharedConfigsConfigDataAllowRefererAccessRuleResult> AllowRefererAccessRules;
        /// <summary>
        /// The configuration for a common list is represented by ConfigType common_match_list.
        /// </summary>
        public readonly ImmutableArray<Outputs.SharedConfigsConfigDataCommonMatchListResult> CommonMatchLists;
        /// <summary>
        /// The name of the shared config.
        /// </summary>
        public readonly string ConfigName;
        /// <summary>
        /// The type of the shared config.
        /// </summary>
        public readonly string ConfigType;
        /// <summary>
        /// The configuration for IP blacklist is denoted by ConfigType deny_ip_access_rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.SharedConfigsConfigDataDenyIpAccessRuleResult> DenyIpAccessRules;
        /// <summary>
        /// The configuration for the Referer blacklist corresponds to ConfigType deny_referer_access_rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.SharedConfigsConfigDataDenyRefererAccessRuleResult> DenyRefererAccessRules;
        /// <summary>
        /// The number of domains.
        /// </summary>
        public readonly int DomainCount;
        /// <summary>
        /// The name of the project.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// The update time of the shared config.
        /// </summary>
        public readonly int UpdateTime;

        [OutputConstructor]
        private SharedConfigsConfigDataResult(
            ImmutableArray<Outputs.SharedConfigsConfigDataAllowIpAccessRuleResult> allowIpAccessRules,

            ImmutableArray<Outputs.SharedConfigsConfigDataAllowRefererAccessRuleResult> allowRefererAccessRules,

            ImmutableArray<Outputs.SharedConfigsConfigDataCommonMatchListResult> commonMatchLists,

            string configName,

            string configType,

            ImmutableArray<Outputs.SharedConfigsConfigDataDenyIpAccessRuleResult> denyIpAccessRules,

            ImmutableArray<Outputs.SharedConfigsConfigDataDenyRefererAccessRuleResult> denyRefererAccessRules,

            int domainCount,

            string projectName,

            int updateTime)
        {
            AllowIpAccessRules = allowIpAccessRules;
            AllowRefererAccessRules = allowRefererAccessRules;
            CommonMatchLists = commonMatchLists;
            ConfigName = configName;
            ConfigType = configType;
            DenyIpAccessRules = denyIpAccessRules;
            DenyRefererAccessRules = denyRefererAccessRules;
            DomainCount = domainCount;
            ProjectName = projectName;
            UpdateTime = updateTime;
        }
    }
}
