// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    /// <summary>
    /// Provides a resource to manage waf vulnerability
    /// ## Import
    /// 
    /// WafVulnerability can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:waf/vulnerability:Vulnerability default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:waf/vulnerability:Vulnerability")]
    public partial class Vulnerability : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Protection mode.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// The advanced configuration of vulnerability protection currently supports automatic blocking of directory traversal attacks and high-frequency scanning attacks.
        /// </summary>
        [Output("advanceConfig")]
        public Output<Outputs.VulnerabilityAdvanceConfig> AdvanceConfig { get; private set; } = null!;

        /// <summary>
        /// Protect website domain names.
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// Detailed information of the vulnerability rules. By default, only the vulnerability protection rules of the custom mode are displayed.
        /// </summary>
        [Output("ruleDetails")]
        public Output<ImmutableArray<Outputs.VulnerabilityRuleDetail>> RuleDetails { get; private set; } = null!;

        /// <summary>
        /// The enabled vulnerability rule categories, WAF has classified the managed rules according to their strictness.
        /// </summary>
        [Output("ruleMode")]
        public Output<string> RuleMode { get; private set; } = null!;

        /// <summary>
        /// Custom rule switch.
        /// </summary>
        [Output("systemRuleSwitches")]
        public Output<ImmutableArray<Outputs.VulnerabilitySystemRuleSwitch>> SystemRuleSwitches { get; private set; } = null!;


        /// <summary>
        /// Create a Vulnerability resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Vulnerability(string name, VulnerabilityArgs args, CustomResourceOptions? options = null)
            : base("volcengine:waf/vulnerability:Vulnerability", name, args ?? new VulnerabilityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Vulnerability(string name, Input<string> id, VulnerabilityState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:waf/vulnerability:Vulnerability", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Vulnerability resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Vulnerability Get(string name, Input<string> id, VulnerabilityState? state = null, CustomResourceOptions? options = null)
        {
            return new Vulnerability(name, id, state, options);
        }
    }

    public sealed class VulnerabilityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Protection mode.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The advanced configuration of vulnerability protection currently supports automatic blocking of directory traversal attacks and high-frequency scanning attacks.
        /// </summary>
        [Input("advanceConfig")]
        public Input<Inputs.VulnerabilityAdvanceConfigArgs>? AdvanceConfig { get; set; }

        /// <summary>
        /// Protect website domain names.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// The enabled vulnerability rule categories, WAF has classified the managed rules according to their strictness.
        /// </summary>
        [Input("ruleMode")]
        public Input<string>? RuleMode { get; set; }

        [Input("systemRuleSwitches")]
        private InputList<Inputs.VulnerabilitySystemRuleSwitchArgs>? _systemRuleSwitches;

        /// <summary>
        /// Custom rule switch.
        /// </summary>
        public InputList<Inputs.VulnerabilitySystemRuleSwitchArgs> SystemRuleSwitches
        {
            get => _systemRuleSwitches ?? (_systemRuleSwitches = new InputList<Inputs.VulnerabilitySystemRuleSwitchArgs>());
            set => _systemRuleSwitches = value;
        }

        public VulnerabilityArgs()
        {
        }
        public static new VulnerabilityArgs Empty => new VulnerabilityArgs();
    }

    public sealed class VulnerabilityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Protection mode.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The advanced configuration of vulnerability protection currently supports automatic blocking of directory traversal attacks and high-frequency scanning attacks.
        /// </summary>
        [Input("advanceConfig")]
        public Input<Inputs.VulnerabilityAdvanceConfigGetArgs>? AdvanceConfig { get; set; }

        /// <summary>
        /// Protect website domain names.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("ruleDetails")]
        private InputList<Inputs.VulnerabilityRuleDetailGetArgs>? _ruleDetails;

        /// <summary>
        /// Detailed information of the vulnerability rules. By default, only the vulnerability protection rules of the custom mode are displayed.
        /// </summary>
        public InputList<Inputs.VulnerabilityRuleDetailGetArgs> RuleDetails
        {
            get => _ruleDetails ?? (_ruleDetails = new InputList<Inputs.VulnerabilityRuleDetailGetArgs>());
            set => _ruleDetails = value;
        }

        /// <summary>
        /// The enabled vulnerability rule categories, WAF has classified the managed rules according to their strictness.
        /// </summary>
        [Input("ruleMode")]
        public Input<string>? RuleMode { get; set; }

        [Input("systemRuleSwitches")]
        private InputList<Inputs.VulnerabilitySystemRuleSwitchGetArgs>? _systemRuleSwitches;

        /// <summary>
        /// Custom rule switch.
        /// </summary>
        public InputList<Inputs.VulnerabilitySystemRuleSwitchGetArgs> SystemRuleSwitches
        {
            get => _systemRuleSwitches ?? (_systemRuleSwitches = new InputList<Inputs.VulnerabilitySystemRuleSwitchGetArgs>());
            set => _systemRuleSwitches = value;
        }

        public VulnerabilityState()
        {
        }
        public static new VulnerabilityState Empty => new VulnerabilityState();
    }
}
