// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    /// <summary>
    /// Provides a resource to manage waf custom page
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Waf.CustomPage("foo", new()
    ///     {
    ///         Accurate = new Volcengine.Waf.Inputs.CustomPageAccurateArgs
    ///         {
    ///             AccurateRules = new[]
    ///             {
    ///                 new Volcengine.Waf.Inputs.CustomPageAccurateAccurateRuleArgs
    ///                 {
    ///                     HttpObj = "request.uri",
    ///                     ObjType = 1,
    ///                     Opretar = 2,
    ///                     Property = 0,
    ///                     ValueString = "tf",
    ///                 },
    ///                 new Volcengine.Waf.Inputs.CustomPageAccurateAccurateRuleArgs
    ///                 {
    ///                     HttpObj = "request.schema",
    ///                     ObjType = 0,
    ///                     Opretar = 2,
    ///                     Property = 0,
    ///                     ValueString = "tf-2",
    ///                 },
    ///             },
    ///             Logic = 2,
    ///         },
    ///         Advanced = 1,
    ///         Body = "tf-test-body",
    ///         ClientIp = "ALL",
    ///         Code = 403,
    ///         ContentType = "text/html",
    ///         Description = "tf-test",
    ///         Enable = 1,
    ///         Host = "www.123.com",
    ///         PageMode = 1,
    ///         Policy = 1,
    ///         ProjectName = "default",
    ///         RedirectUrl = "/test/tf/path",
    ///         Url = "/tf-test",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WafCustomPage can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:waf/customPage:CustomPage default resource_id:Host
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:waf/customPage:CustomPage")]
    public partial class CustomPage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Output("accurate")]
        public Output<Outputs.CustomPageAccurate> Accurate { get; private set; } = null!;

        /// <summary>
        /// Whether to configure advanced conditions.
        /// </summary>
        [Output("advanced")]
        public Output<int> Advanced { get; private set; } = null!;

        /// <summary>
        /// The layout content of the response page.
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// Fill in ALL, which means this rule will take effect on all IP addresses.
        /// </summary>
        [Output("clientIp")]
        public Output<string> ClientIp { get; private set; } = null!;

        /// <summary>
        /// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
        /// </summary>
        [Output("code")]
        public Output<int> Code { get; private set; } = null!;

        /// <summary>
        /// The layout template of the response page. Required if PageMode=0 or 1.
        /// </summary>
        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        /// <summary>
        /// Rule description.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the rule.
        /// </summary>
        [Output("enable")]
        public Output<int> Enable { get; private set; } = null!;

        /// <summary>
        /// The ID of the advanced conditional rule group.
        /// </summary>
        [Output("groupId")]
        public Output<int> GroupId { get; private set; } = null!;

        /// <summary>
        /// Request header information.
        /// </summary>
        [Output("header")]
        public Output<string> Header { get; private set; } = null!;

        /// <summary>
        /// Domain name to be protected.
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// The ID of Region.
        /// </summary>
        [Output("isolationId")]
        public Output<string> IsolationId { get; private set; } = null!;

        /// <summary>
        /// Rule name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The layout template of the response page.
        /// </summary>
        [Output("pageMode")]
        public Output<int> PageMode { get; private set; } = null!;

        /// <summary>
        /// Action to be taken on requests that match the rule.
        /// </summary>
        [Output("policy")]
        public Output<int> Policy { get; private set; } = null!;

        /// <summary>
        /// The name of the project to which your domain names belong.
        /// </summary>
        [Output("projectName")]
        public Output<string?> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The path where users should be redirected.
        /// </summary>
        [Output("redirectUrl")]
        public Output<string> RedirectUrl { get; private set; } = null!;

        /// <summary>
        /// Unique identification of the rules.
        /// </summary>
        [Output("ruleTag")]
        public Output<string> RuleTag { get; private set; } = null!;

        /// <summary>
        /// Rule update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Match the path.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a CustomPage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomPage(string name, CustomPageArgs args, CustomResourceOptions? options = null)
            : base("volcengine:waf/customPage:CustomPage", name, args ?? new CustomPageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomPage(string name, Input<string> id, CustomPageState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:waf/customPage:CustomPage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomPage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomPage Get(string name, Input<string> id, CustomPageState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomPage(name, id, state, options);
        }
    }

    public sealed class CustomPageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Input("accurate")]
        public Input<Inputs.CustomPageAccurateArgs>? Accurate { get; set; }

        /// <summary>
        /// Whether to configure advanced conditions.
        /// </summary>
        [Input("advanced")]
        public Input<int>? Advanced { get; set; }

        /// <summary>
        /// The layout content of the response page.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// Fill in ALL, which means this rule will take effect on all IP addresses.
        /// </summary>
        [Input("clientIp", required: true)]
        public Input<string> ClientIp { get; set; } = null!;

        /// <summary>
        /// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
        /// </summary>
        [Input("code", required: true)]
        public Input<int> Code { get; set; } = null!;

        /// <summary>
        /// The layout template of the response page. Required if PageMode=0 or 1.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// Rule description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable the rule.
        /// </summary>
        [Input("enable", required: true)]
        public Input<int> Enable { get; set; } = null!;

        /// <summary>
        /// Domain name to be protected.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// Rule name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The layout template of the response page.
        /// </summary>
        [Input("pageMode", required: true)]
        public Input<int> PageMode { get; set; } = null!;

        /// <summary>
        /// Action to be taken on requests that match the rule.
        /// </summary>
        [Input("policy", required: true)]
        public Input<int> Policy { get; set; } = null!;

        /// <summary>
        /// The name of the project to which your domain names belong.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The path where users should be redirected.
        /// </summary>
        [Input("redirectUrl")]
        public Input<string>? RedirectUrl { get; set; }

        /// <summary>
        /// Match the path.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public CustomPageArgs()
        {
        }
        public static new CustomPageArgs Empty => new CustomPageArgs();
    }

    public sealed class CustomPageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Input("accurate")]
        public Input<Inputs.CustomPageAccurateGetArgs>? Accurate { get; set; }

        /// <summary>
        /// Whether to configure advanced conditions.
        /// </summary>
        [Input("advanced")]
        public Input<int>? Advanced { get; set; }

        /// <summary>
        /// The layout content of the response page.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// Fill in ALL, which means this rule will take effect on all IP addresses.
        /// </summary>
        [Input("clientIp")]
        public Input<string>? ClientIp { get; set; }

        /// <summary>
        /// Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
        /// </summary>
        [Input("code")]
        public Input<int>? Code { get; set; }

        /// <summary>
        /// The layout template of the response page. Required if PageMode=0 or 1.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// Rule description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable the rule.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// The ID of the advanced conditional rule group.
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        /// <summary>
        /// Request header information.
        /// </summary>
        [Input("header")]
        public Input<string>? Header { get; set; }

        /// <summary>
        /// Domain name to be protected.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The ID of Region.
        /// </summary>
        [Input("isolationId")]
        public Input<string>? IsolationId { get; set; }

        /// <summary>
        /// Rule name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The layout template of the response page.
        /// </summary>
        [Input("pageMode")]
        public Input<int>? PageMode { get; set; }

        /// <summary>
        /// Action to be taken on requests that match the rule.
        /// </summary>
        [Input("policy")]
        public Input<int>? Policy { get; set; }

        /// <summary>
        /// The name of the project to which your domain names belong.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The path where users should be redirected.
        /// </summary>
        [Input("redirectUrl")]
        public Input<string>? RedirectUrl { get; set; }

        /// <summary>
        /// Unique identification of the rules.
        /// </summary>
        [Input("ruleTag")]
        public Input<string>? RuleTag { get; set; }

        /// <summary>
        /// Rule update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// Match the path.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public CustomPageState()
        {
        }
        public static new CustomPageState Empty => new CustomPageState();
    }
}
