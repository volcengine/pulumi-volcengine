// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf.Outputs
{

    [OutputType]
    public sealed class BotAnalyseProtectRuleRuleGroupRule
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        public readonly Outputs.BotAnalyseProtectRuleRuleGroupRuleAccurateGroup? AccurateGroup;
        /// <summary>
        /// After the rule creation is completed, the priority of the automatically generated rule group.
        /// </summary>
        public readonly int? AccurateGroupPriority;
        /// <summary>
        /// Perform the action after verification/challenge.
        /// </summary>
        public readonly int? ActionAfterVerification;
        /// <summary>
        /// perform the action.
        /// </summary>
        public readonly int? ActionType;
        /// <summary>
        /// Limit the duration.
        /// </summary>
        public readonly int? EffectTime;
        /// <summary>
        /// Whether to enable the rules.
        /// </summary>
        public readonly int? Enable;
        /// <summary>
        /// Exemption time takes effect when the execution action is human-machine challenge /JS/ Proof of work.
        /// </summary>
        public readonly int? ExemptionTime;
        /// <summary>
        /// Statistical objects, with multiple objects separated by commas.
        /// </summary>
        public readonly string? Field;
        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        public readonly string? Host;
        /// <summary>
        /// Rule unique identifier.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// The name of rule.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// JS challenge/human-machine verification pass rate.
        /// </summary>
        public readonly double? PassRatio;
        /// <summary>
        /// The requested path.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// The path access frequency threshold is enabled when StatisticalType=1.
        /// </summary>
        public readonly int? PathThreshold;
        /// <summary>
        /// Priority of rule effectiveness.
        /// </summary>
        public readonly int? RulePriority;
        /// <summary>
        /// Rule label, that is, the complete rule ID.
        /// </summary>
        public readonly string? RuleTag;
        /// <summary>
        /// The IP proportion of the same statistical object needs to be configured when StatisticalType=3.
        /// </summary>
        public readonly double? SingleProportion;
        /// <summary>
        /// The maximum number of ips of the same statistical object is enabled when StatisticalType=2.
        /// </summary>
        public readonly int? SingleThreshold;
        /// <summary>
        /// The duration of statistics.
        /// </summary>
        public readonly int? StatisticalDuration;
        /// <summary>
        /// Statistical content and methods.
        /// </summary>
        public readonly int? StatisticalType;
        /// <summary>
        /// Rule update time.
        /// </summary>
        public readonly string? UpdateTime;

        [OutputConstructor]
        private BotAnalyseProtectRuleRuleGroupRule(
            Outputs.BotAnalyseProtectRuleRuleGroupRuleAccurateGroup? accurateGroup,

            int? accurateGroupPriority,

            int? actionAfterVerification,

            int? actionType,

            int? effectTime,

            int? enable,

            int? exemptionTime,

            string? field,

            string? host,

            int? id,

            string? name,

            double? passRatio,

            string? path,

            int? pathThreshold,

            int? rulePriority,

            string? ruleTag,

            double? singleProportion,

            int? singleThreshold,

            int? statisticalDuration,

            int? statisticalType,

            string? updateTime)
        {
            AccurateGroup = accurateGroup;
            AccurateGroupPriority = accurateGroupPriority;
            ActionAfterVerification = actionAfterVerification;
            ActionType = actionType;
            EffectTime = effectTime;
            Enable = enable;
            ExemptionTime = exemptionTime;
            Field = field;
            Host = host;
            Id = id;
            Name = name;
            PassRatio = passRatio;
            Path = path;
            PathThreshold = pathThreshold;
            RulePriority = rulePriority;
            RuleTag = ruleTag;
            SingleProportion = singleProportion;
            SingleThreshold = singleThreshold;
            StatisticalDuration = statisticalDuration;
            StatisticalType = statisticalType;
            UpdateTime = updateTime;
        }
    }
}
