// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf.Outputs
{

    [OutputType]
    public sealed class CcRuleRuleGroupRule
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        public readonly Outputs.CcRuleRuleGroupRuleAccurateGroup? AccurateGroup;
        /// <summary>
        /// After the rule creation is completed, the priority of the automatically generated rule group.
        /// </summary>
        public readonly int? AccurateGroupPriority;
        /// <summary>
        /// The actions performed on subsequent requests after meeting the statistical conditions.
        /// </summary>
        public readonly int? CcType;
        /// <summary>
        /// The statistical period of the strategy.
        /// </summary>
        public readonly int? CountTime;
        /// <summary>
        /// Details of the periodic loop configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.CcRuleRuleGroupRuleCronConf> CronConfs;
        /// <summary>
        /// Whether to set the cycle to take effect.
        /// </summary>
        public readonly int? CronEnable;
        /// <summary>
        /// Limit the duration, that is, the effective duration of the action.
        /// </summary>
        public readonly int? EffectTime;
        /// <summary>
        /// Whether to enable the rules.
        /// </summary>
        public readonly int? Enable;
        /// <summary>
        /// Strategy exemption time.
        /// </summary>
        public readonly int? ExemptionTime;
        /// <summary>
        /// statistical object.
        /// </summary>
        public readonly string? Field;
        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        public readonly string? Host;
        /// <summary>
        /// The ID of Rule group.
        /// </summary>
        public readonly int? Id;
        /// <summary>
        /// The name of cc rule.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The threshold of the total number of times the request path is accessed.
        /// </summary>
        public readonly int? PathThreshold;
        /// <summary>
        /// Rule execution priority.
        /// </summary>
        public readonly int? RulePriority;
        /// <summary>
        /// Rule label, that is, the complete rule ID.
        /// </summary>
        public readonly string? RuleTag;
        /// <summary>
        /// The threshold of the number of times each statistical object accesses the request path.
        /// </summary>
        public readonly int? SingleThreshold;
        /// <summary>
        /// Rule update time.
        /// </summary>
        public readonly string? UpdateTime;
        /// <summary>
        /// The website request path that needs protection.
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private CcRuleRuleGroupRule(
            Outputs.CcRuleRuleGroupRuleAccurateGroup? accurateGroup,

            int? accurateGroupPriority,

            int? ccType,

            int? countTime,

            ImmutableArray<Outputs.CcRuleRuleGroupRuleCronConf> cronConfs,

            int? cronEnable,

            int? effectTime,

            int? enable,

            int? exemptionTime,

            string? field,

            string? host,

            int? id,

            string? name,

            int? pathThreshold,

            int? rulePriority,

            string? ruleTag,

            int? singleThreshold,

            string? updateTime,

            string? url)
        {
            AccurateGroup = accurateGroup;
            AccurateGroupPriority = accurateGroupPriority;
            CcType = ccType;
            CountTime = countTime;
            CronConfs = cronConfs;
            CronEnable = cronEnable;
            EffectTime = effectTime;
            Enable = enable;
            ExemptionTime = exemptionTime;
            Field = field;
            Host = host;
            Id = id;
            Name = name;
            PathThreshold = pathThreshold;
            RulePriority = rulePriority;
            RuleTag = ruleTag;
            SingleThreshold = singleThreshold;
            UpdateTime = updateTime;
            Url = url;
        }
    }
}
