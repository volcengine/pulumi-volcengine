// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf.Outputs
{

    [OutputType]
    public sealed class GetBotAnalyseProtectRulesDataRuleGroupRuleResult
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        public readonly Outputs.GetBotAnalyseProtectRulesDataRuleGroupRuleAccurateGroupResult AccurateGroup;
        /// <summary>
        /// After the rule creation is completed, the priority of the automatically generated rule group.
        /// </summary>
        public readonly int AccurateGroupPriority;
        /// <summary>
        /// Perform actions after human-machine verification /JS challenges.
        /// </summary>
        public readonly int ActionAfterVerification;
        /// <summary>
        /// perform the action.
        /// </summary>
        public readonly int ActionType;
        /// <summary>
        /// Limit the duration.
        /// </summary>
        public readonly int EffectTime;
        /// <summary>
        /// Whether to enable the rules.
        /// </summary>
        public readonly int Enable;
        /// <summary>
        /// Exemption time.
        /// </summary>
        public readonly int ExemptionTime;
        /// <summary>
        /// statistical object.
        /// </summary>
        public readonly string Field;
        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// Rule unique identifier.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The name of the rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// JS challenge/human-machine verification pass rate.
        /// </summary>
        public readonly double PassRatio;
        /// <summary>
        /// Protective path.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// Threshold of path access times.
        /// </summary>
        public readonly int PathThreshold;
        /// <summary>
        /// Rule execution priority.
        /// </summary>
        public readonly int RulePriority;
        /// <summary>
        /// Unique identification of rules.
        /// </summary>
        public readonly string RuleTag;
        /// <summary>
        /// The IP proportion of the same statistical object.
        /// </summary>
        public readonly double SingleProportion;
        /// <summary>
        /// The maximum number of ips for the same statistical object.
        /// </summary>
        public readonly int SingleThreshold;
        /// <summary>
        /// The duration of the statistics.
        /// </summary>
        public readonly int StatisticalDuration;
        /// <summary>
        /// Statistical content method.
        /// </summary>
        public readonly int StatisticalType;
        /// <summary>
        /// Rule update time.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetBotAnalyseProtectRulesDataRuleGroupRuleResult(
            Outputs.GetBotAnalyseProtectRulesDataRuleGroupRuleAccurateGroupResult accurateGroup,

            int accurateGroupPriority,

            int actionAfterVerification,

            int actionType,

            int effectTime,

            int enable,

            int exemptionTime,

            string field,

            string host,

            int id,

            string name,

            double passRatio,

            string path,

            int pathThreshold,

            int rulePriority,

            string ruleTag,

            double singleProportion,

            int singleThreshold,

            int statisticalDuration,

            int statisticalType,

            string updateTime)
        {
            AccurateGroup = accurateGroup;
            AccurateGroupPriority = accurateGroupPriority;
            ActionAfterVerification = actionAfterVerification;
            ActionType = actionType;
            EffectTime = effectTime;
            Enable = enable;
            ExemptionTime = exemptionTime;
            Field = field;
            Host = host;
            Id = id;
            Name = name;
            PassRatio = passRatio;
            Path = path;
            PathThreshold = pathThreshold;
            RulePriority = rulePriority;
            RuleTag = ruleTag;
            SingleProportion = singleProportion;
            SingleThreshold = singleThreshold;
            StatisticalDuration = statisticalDuration;
            StatisticalType = statisticalType;
            UpdateTime = updateTime;
        }
    }
}
