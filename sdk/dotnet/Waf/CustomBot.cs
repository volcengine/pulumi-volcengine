// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    /// <summary>
    /// Provides a resource to manage waf custom bot
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Waf.CustomBot("foo", new()
    ///     {
    ///         Accurate = new Volcengine.Waf.Inputs.CustomBotAccurateArgs
    ///         {
    ///             AccurateRules = new[]
    ///             {
    ///                 new Volcengine.Waf.Inputs.CustomBotAccurateAccurateRuleArgs
    ///                 {
    ///                     HttpObj = "request.uri",
    ///                     ObjType = 1,
    ///                     Opretar = 2,
    ///                     Property = 0,
    ///                     ValueString = "tf",
    ///                 },
    ///                 new Volcengine.Waf.Inputs.CustomBotAccurateAccurateRuleArgs
    ///                 {
    ///                     HttpObj = "request.schema",
    ///                     ObjType = 0,
    ///                     Opretar = 2,
    ///                     Property = 0,
    ///                     ValueString = "tf-2",
    ///                 },
    ///             },
    ///             Logic = 2,
    ///         },
    ///         Action = "observe",
    ///         BotType = "tf-test",
    ///         Description = "tf-test",
    ///         Enable = 1,
    ///         Host = "www.tf-test.com",
    ///         ProjectName = "default",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WafCustomBot can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:waf/customBot:CustomBot default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:waf/customBot:CustomBot")]
    public partial class CustomBot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Output("accurate")]
        public Output<Outputs.CustomBotAccurate> Accurate { get; private set; } = null!;

        /// <summary>
        /// The execution action of the Bot.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// Whether to set advanced conditions.
        /// </summary>
        [Output("advanced")]
        public Output<int> Advanced { get; private set; } = null!;

        /// <summary>
        /// bot name.
        /// </summary>
        [Output("botType")]
        public Output<string> BotType { get; private set; } = null!;

        /// <summary>
        /// The description of bot.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Whether to enable bot.
        /// </summary>
        [Output("enable")]
        public Output<int> Enable { get; private set; } = null!;

        /// <summary>
        /// Domain name information.
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Output("projectName")]
        public Output<string?> ProjectName { get; private set; } = null!;

        /// <summary>
        /// Rule unique identifier.
        /// </summary>
        [Output("ruleTag")]
        public Output<string> RuleTag { get; private set; } = null!;

        /// <summary>
        /// The update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a CustomBot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomBot(string name, CustomBotArgs args, CustomResourceOptions? options = null)
            : base("volcengine:waf/customBot:CustomBot", name, args ?? new CustomBotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomBot(string name, Input<string> id, CustomBotState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:waf/customBot:CustomBot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomBot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomBot Get(string name, Input<string> id, CustomBotState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomBot(name, id, state, options);
        }
    }

    public sealed class CustomBotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Input("accurate", required: true)]
        public Input<Inputs.CustomBotAccurateArgs> Accurate { get; set; } = null!;

        /// <summary>
        /// The execution action of the Bot.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// bot name.
        /// </summary>
        [Input("botType", required: true)]
        public Input<string> BotType { get; set; } = null!;

        /// <summary>
        /// The description of bot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable bot.
        /// </summary>
        [Input("enable", required: true)]
        public Input<int> Enable { get; set; } = null!;

        /// <summary>
        /// Domain name information.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        public CustomBotArgs()
        {
        }
        public static new CustomBotArgs Empty => new CustomBotArgs();
    }

    public sealed class CustomBotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Input("accurate")]
        public Input<Inputs.CustomBotAccurateGetArgs>? Accurate { get; set; }

        /// <summary>
        /// The execution action of the Bot.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Whether to set advanced conditions.
        /// </summary>
        [Input("advanced")]
        public Input<int>? Advanced { get; set; }

        /// <summary>
        /// bot name.
        /// </summary>
        [Input("botType")]
        public Input<string>? BotType { get; set; }

        /// <summary>
        /// The description of bot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable bot.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// Domain name information.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// Rule unique identifier.
        /// </summary>
        [Input("ruleTag")]
        public Input<string>? RuleTag { get; set; }

        /// <summary>
        /// The update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public CustomBotState()
        {
        }
        public static new CustomBotState Empty => new CustomBotState();
    }
}
