// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf.Inputs
{

    public sealed class BotAnalyseProtectRuleRuleGroupRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Input("accurateGroup")]
        public Input<Inputs.BotAnalyseProtectRuleRuleGroupRuleAccurateGroupArgs>? AccurateGroup { get; set; }

        /// <summary>
        /// After the rule creation is completed, the priority of the automatically generated rule group.
        /// </summary>
        [Input("accurateGroupPriority")]
        public Input<int>? AccurateGroupPriority { get; set; }

        /// <summary>
        /// Perform the action after verification/challenge.
        /// </summary>
        [Input("actionAfterVerification")]
        public Input<int>? ActionAfterVerification { get; set; }

        /// <summary>
        /// perform the action.
        /// </summary>
        [Input("actionType")]
        public Input<int>? ActionType { get; set; }

        /// <summary>
        /// Limit the duration.
        /// </summary>
        [Input("effectTime")]
        public Input<int>? EffectTime { get; set; }

        /// <summary>
        /// Whether to enable the rules.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// Exemption time takes effect when the execution action is human-machine challenge /JS/ Proof of work.
        /// </summary>
        [Input("exemptionTime")]
        public Input<int>? ExemptionTime { get; set; }

        /// <summary>
        /// Statistical objects, with multiple objects separated by commas.
        /// </summary>
        [Input("field")]
        public Input<string>? Field { get; set; }

        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Rule unique identifier.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// The name of rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// JS challenge/human-machine verification pass rate.
        /// </summary>
        [Input("passRatio")]
        public Input<double>? PassRatio { get; set; }

        /// <summary>
        /// The requested path.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The path access frequency threshold is enabled when StatisticalType=1.
        /// </summary>
        [Input("pathThreshold")]
        public Input<int>? PathThreshold { get; set; }

        /// <summary>
        /// Priority of rule effectiveness.
        /// </summary>
        [Input("rulePriority")]
        public Input<int>? RulePriority { get; set; }

        /// <summary>
        /// Rule label, that is, the complete rule ID.
        /// </summary>
        [Input("ruleTag")]
        public Input<string>? RuleTag { get; set; }

        /// <summary>
        /// The IP proportion of the same statistical object needs to be configured when StatisticalType=3.
        /// </summary>
        [Input("singleProportion")]
        public Input<double>? SingleProportion { get; set; }

        /// <summary>
        /// The maximum number of ips of the same statistical object is enabled when StatisticalType=2.
        /// </summary>
        [Input("singleThreshold")]
        public Input<int>? SingleThreshold { get; set; }

        /// <summary>
        /// The duration of statistics.
        /// </summary>
        [Input("statisticalDuration")]
        public Input<int>? StatisticalDuration { get; set; }

        /// <summary>
        /// Statistical content and methods.
        /// </summary>
        [Input("statisticalType")]
        public Input<int>? StatisticalType { get; set; }

        /// <summary>
        /// Rule update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public BotAnalyseProtectRuleRuleGroupRuleArgs()
        {
        }
        public static new BotAnalyseProtectRuleRuleGroupRuleArgs Empty => new BotAnalyseProtectRuleRuleGroupRuleArgs();
    }
}
