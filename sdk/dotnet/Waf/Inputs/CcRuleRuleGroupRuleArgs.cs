// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf.Inputs
{

    public sealed class CcRuleRuleGroupRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Input("accurateGroup")]
        public Input<Inputs.CcRuleRuleGroupRuleAccurateGroupArgs>? AccurateGroup { get; set; }

        /// <summary>
        /// After the rule creation is completed, the priority of the automatically generated rule group.
        /// </summary>
        [Input("accurateGroupPriority")]
        public Input<int>? AccurateGroupPriority { get; set; }

        /// <summary>
        /// The actions performed on subsequent requests after meeting the statistical conditions.
        /// </summary>
        [Input("ccType")]
        public Input<int>? CcType { get; set; }

        /// <summary>
        /// The statistical period of the strategy.
        /// </summary>
        [Input("countTime")]
        public Input<int>? CountTime { get; set; }

        [Input("cronConfs")]
        private InputList<Inputs.CcRuleRuleGroupRuleCronConfArgs>? _cronConfs;

        /// <summary>
        /// Details of the periodic loop configuration.
        /// </summary>
        public InputList<Inputs.CcRuleRuleGroupRuleCronConfArgs> CronConfs
        {
            get => _cronConfs ?? (_cronConfs = new InputList<Inputs.CcRuleRuleGroupRuleCronConfArgs>());
            set => _cronConfs = value;
        }

        /// <summary>
        /// Whether to set the cycle to take effect.
        /// </summary>
        [Input("cronEnable")]
        public Input<int>? CronEnable { get; set; }

        /// <summary>
        /// Limit the duration, that is, the effective duration of the action.
        /// </summary>
        [Input("effectTime")]
        public Input<int>? EffectTime { get; set; }

        /// <summary>
        /// Whether to enable the rules.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// Strategy exemption time.
        /// </summary>
        [Input("exemptionTime")]
        public Input<int>? ExemptionTime { get; set; }

        /// <summary>
        /// statistical object.
        /// </summary>
        [Input("field")]
        public Input<string>? Field { get; set; }

        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The ID of Rule group.
        /// </summary>
        [Input("id")]
        public Input<int>? Id { get; set; }

        /// <summary>
        /// The name of cc rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The threshold of the total number of times the request path is accessed.
        /// </summary>
        [Input("pathThreshold")]
        public Input<int>? PathThreshold { get; set; }

        /// <summary>
        /// Rule execution priority.
        /// </summary>
        [Input("rulePriority")]
        public Input<int>? RulePriority { get; set; }

        /// <summary>
        /// Rule label, that is, the complete rule ID.
        /// </summary>
        [Input("ruleTag")]
        public Input<string>? RuleTag { get; set; }

        /// <summary>
        /// The threshold of the number of times each statistical object accesses the request path.
        /// </summary>
        [Input("singleThreshold")]
        public Input<int>? SingleThreshold { get; set; }

        /// <summary>
        /// Rule update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// The website request path that needs protection.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public CcRuleRuleGroupRuleArgs()
        {
        }
        public static new CcRuleRuleGroupRuleArgs Empty => new CcRuleRuleGroupRuleArgs();
    }
}
