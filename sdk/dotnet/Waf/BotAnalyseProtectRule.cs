// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    /// <summary>
    /// Provides a resource to manage waf bot analyse protect rule
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Waf.BotAnalyseProtectRule("foo", new()
    ///     {
    ///         AccurateGroup = new Volcengine.Waf.Inputs.BotAnalyseProtectRuleAccurateGroupArgs
    ///         {
    ///             AccurateRules = new[]
    ///             {
    ///                 new Volcengine.Waf.Inputs.BotAnalyseProtectRuleAccurateGroupAccurateRuleArgs
    ///                 {
    ///                     HttpObj = "request.uri",
    ///                     ObjType = 1,
    ///                     Opretar = 2,
    ///                     Property = 0,
    ///                     ValueString = "tf",
    ///                 },
    ///                 new Volcengine.Waf.Inputs.BotAnalyseProtectRuleAccurateGroupAccurateRuleArgs
    ///                 {
    ///                     HttpObj = "request.schema",
    ///                     ObjType = 0,
    ///                     Opretar = 2,
    ///                     Property = 0,
    ///                     ValueString = "tf-2",
    ///                 },
    ///             },
    ///             Logic = 2,
    ///         },
    ///         ActionAfterVerification = 1,
    ///         ActionType = 1,
    ///         EffectTime = 1000,
    ///         Enable = 1,
    ///         ExemptionTime = 60,
    ///         Field = "HEADER:User-Agent",
    ///         Host = "www.tf-test.com",
    ///         Path = "/mod",
    ///         PathThreshold = 1000,
    ///         ProjectName = "default",
    ///         RulePriority = 3,
    ///         SingleProportion = 0.25,
    ///         SingleThreshold = 100,
    ///         StatisticalDuration = 50,
    ///         StatisticalType = 2,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WafBotAnalyseProtectRule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:waf/botAnalyseProtectRule:BotAnalyseProtectRule default resource_id:bot_space:host
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:waf/botAnalyseProtectRule:BotAnalyseProtectRule")]
    public partial class BotAnalyseProtectRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Output("accurateGroup")]
        public Output<Outputs.BotAnalyseProtectRuleAccurateGroup?> AccurateGroup { get; private set; } = null!;

        /// <summary>
        /// Perform the action after verification/challenge.
        /// </summary>
        [Output("actionAfterVerification")]
        public Output<int?> ActionAfterVerification { get; private set; } = null!;

        /// <summary>
        /// perform the action.
        /// </summary>
        [Output("actionType")]
        public Output<int> ActionType { get; private set; } = null!;

        /// <summary>
        /// Limit the duration.
        /// </summary>
        [Output("effectTime")]
        public Output<int> EffectTime { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the rules.
        /// </summary>
        [Output("enable")]
        public Output<int> Enable { get; private set; } = null!;

        /// <summary>
        /// The number of statistical protection rules enabled under the current domain name.
        /// </summary>
        [Output("enableCount")]
        public Output<int> EnableCount { get; private set; } = null!;

        /// <summary>
        /// Exemption time takes effect when the execution action is human-machine challenge /JS/ Proof of work.
        /// </summary>
        [Output("exemptionTime")]
        public Output<int?> ExemptionTime { get; private set; } = null!;

        /// <summary>
        /// Statistical objects, with multiple objects separated by commas.
        /// </summary>
        [Output("field")]
        public Output<string> Field { get; private set; } = null!;

        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// The name of rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The requested path.
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        /// <summary>
        /// The path access frequency threshold is enabled when StatisticalType=1.
        /// </summary>
        [Output("pathThreshold")]
        public Output<int?> PathThreshold { get; private set; } = null!;

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Output("projectName")]
        public Output<string?> ProjectName { get; private set; } = null!;

        /// <summary>
        /// Details of the rule group.
        /// </summary>
        [Output("ruleGroups")]
        public Output<ImmutableArray<Outputs.BotAnalyseProtectRuleRuleGroup>> RuleGroups { get; private set; } = null!;

        /// <summary>
        /// Priority of rule effectiveness.
        /// </summary>
        [Output("rulePriority")]
        public Output<int> RulePriority { get; private set; } = null!;

        /// <summary>
        /// The IP proportion of the same statistical object needs to be configured when StatisticalType=3.
        /// </summary>
        [Output("singleProportion")]
        public Output<double?> SingleProportion { get; private set; } = null!;

        /// <summary>
        /// The maximum number of ips of the same statistical object is enabled when StatisticalType=2.
        /// </summary>
        [Output("singleThreshold")]
        public Output<int> SingleThreshold { get; private set; } = null!;

        /// <summary>
        /// The duration of statistics.
        /// </summary>
        [Output("statisticalDuration")]
        public Output<int> StatisticalDuration { get; private set; } = null!;

        /// <summary>
        /// Statistical content and methods.
        /// </summary>
        [Output("statisticalType")]
        public Output<int> StatisticalType { get; private set; } = null!;

        /// <summary>
        /// The total number of statistical protection rules under the current domain name.
        /// </summary>
        [Output("totalCount")]
        public Output<int> TotalCount { get; private set; } = null!;


        /// <summary>
        /// Create a BotAnalyseProtectRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BotAnalyseProtectRule(string name, BotAnalyseProtectRuleArgs args, CustomResourceOptions? options = null)
            : base("volcengine:waf/botAnalyseProtectRule:BotAnalyseProtectRule", name, args ?? new BotAnalyseProtectRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BotAnalyseProtectRule(string name, Input<string> id, BotAnalyseProtectRuleState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:waf/botAnalyseProtectRule:BotAnalyseProtectRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BotAnalyseProtectRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BotAnalyseProtectRule Get(string name, Input<string> id, BotAnalyseProtectRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new BotAnalyseProtectRule(name, id, state, options);
        }
    }

    public sealed class BotAnalyseProtectRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Input("accurateGroup")]
        public Input<Inputs.BotAnalyseProtectRuleAccurateGroupArgs>? AccurateGroup { get; set; }

        /// <summary>
        /// Perform the action after verification/challenge.
        /// </summary>
        [Input("actionAfterVerification")]
        public Input<int>? ActionAfterVerification { get; set; }

        /// <summary>
        /// perform the action.
        /// </summary>
        [Input("actionType", required: true)]
        public Input<int> ActionType { get; set; } = null!;

        /// <summary>
        /// Limit the duration.
        /// </summary>
        [Input("effectTime", required: true)]
        public Input<int> EffectTime { get; set; } = null!;

        /// <summary>
        /// Whether to enable the rules.
        /// </summary>
        [Input("enable", required: true)]
        public Input<int> Enable { get; set; } = null!;

        /// <summary>
        /// Exemption time takes effect when the execution action is human-machine challenge /JS/ Proof of work.
        /// </summary>
        [Input("exemptionTime")]
        public Input<int>? ExemptionTime { get; set; }

        /// <summary>
        /// Statistical objects, with multiple objects separated by commas.
        /// </summary>
        [Input("field", required: true)]
        public Input<string> Field { get; set; } = null!;

        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// The name of rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The requested path.
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// The path access frequency threshold is enabled when StatisticalType=1.
        /// </summary>
        [Input("pathThreshold")]
        public Input<int>? PathThreshold { get; set; }

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// Priority of rule effectiveness.
        /// </summary>
        [Input("rulePriority", required: true)]
        public Input<int> RulePriority { get; set; } = null!;

        /// <summary>
        /// The IP proportion of the same statistical object needs to be configured when StatisticalType=3.
        /// </summary>
        [Input("singleProportion")]
        public Input<double>? SingleProportion { get; set; }

        /// <summary>
        /// The maximum number of ips of the same statistical object is enabled when StatisticalType=2.
        /// </summary>
        [Input("singleThreshold", required: true)]
        public Input<int> SingleThreshold { get; set; } = null!;

        /// <summary>
        /// The duration of statistics.
        /// </summary>
        [Input("statisticalDuration", required: true)]
        public Input<int> StatisticalDuration { get; set; } = null!;

        /// <summary>
        /// Statistical content and methods.
        /// </summary>
        [Input("statisticalType", required: true)]
        public Input<int> StatisticalType { get; set; } = null!;

        public BotAnalyseProtectRuleArgs()
        {
        }
        public static new BotAnalyseProtectRuleArgs Empty => new BotAnalyseProtectRuleArgs();
    }

    public sealed class BotAnalyseProtectRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Advanced conditions.
        /// </summary>
        [Input("accurateGroup")]
        public Input<Inputs.BotAnalyseProtectRuleAccurateGroupGetArgs>? AccurateGroup { get; set; }

        /// <summary>
        /// Perform the action after verification/challenge.
        /// </summary>
        [Input("actionAfterVerification")]
        public Input<int>? ActionAfterVerification { get; set; }

        /// <summary>
        /// perform the action.
        /// </summary>
        [Input("actionType")]
        public Input<int>? ActionType { get; set; }

        /// <summary>
        /// Limit the duration.
        /// </summary>
        [Input("effectTime")]
        public Input<int>? EffectTime { get; set; }

        /// <summary>
        /// Whether to enable the rules.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// The number of statistical protection rules enabled under the current domain name.
        /// </summary>
        [Input("enableCount")]
        public Input<int>? EnableCount { get; set; }

        /// <summary>
        /// Exemption time takes effect when the execution action is human-machine challenge /JS/ Proof of work.
        /// </summary>
        [Input("exemptionTime")]
        public Input<int>? ExemptionTime { get; set; }

        /// <summary>
        /// Statistical objects, with multiple objects separated by commas.
        /// </summary>
        [Input("field")]
        public Input<string>? Field { get; set; }

        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The name of rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The requested path.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The path access frequency threshold is enabled when StatisticalType=1.
        /// </summary>
        [Input("pathThreshold")]
        public Input<int>? PathThreshold { get; set; }

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("ruleGroups")]
        private InputList<Inputs.BotAnalyseProtectRuleRuleGroupGetArgs>? _ruleGroups;

        /// <summary>
        /// Details of the rule group.
        /// </summary>
        public InputList<Inputs.BotAnalyseProtectRuleRuleGroupGetArgs> RuleGroups
        {
            get => _ruleGroups ?? (_ruleGroups = new InputList<Inputs.BotAnalyseProtectRuleRuleGroupGetArgs>());
            set => _ruleGroups = value;
        }

        /// <summary>
        /// Priority of rule effectiveness.
        /// </summary>
        [Input("rulePriority")]
        public Input<int>? RulePriority { get; set; }

        /// <summary>
        /// The IP proportion of the same statistical object needs to be configured when StatisticalType=3.
        /// </summary>
        [Input("singleProportion")]
        public Input<double>? SingleProportion { get; set; }

        /// <summary>
        /// The maximum number of ips of the same statistical object is enabled when StatisticalType=2.
        /// </summary>
        [Input("singleThreshold")]
        public Input<int>? SingleThreshold { get; set; }

        /// <summary>
        /// The duration of statistics.
        /// </summary>
        [Input("statisticalDuration")]
        public Input<int>? StatisticalDuration { get; set; }

        /// <summary>
        /// Statistical content and methods.
        /// </summary>
        [Input("statisticalType")]
        public Input<int>? StatisticalType { get; set; }

        /// <summary>
        /// The total number of statistical protection rules under the current domain name.
        /// </summary>
        [Input("totalCount")]
        public Input<int>? TotalCount { get; set; }

        public BotAnalyseProtectRuleState()
        {
        }
        public static new BotAnalyseProtectRuleState Empty => new BotAnalyseProtectRuleState();
    }
}
