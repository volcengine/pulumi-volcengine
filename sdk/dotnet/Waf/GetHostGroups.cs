// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    public static class GetHostGroups
    {
        /// <summary>
        /// Use this data source to query detailed information of waf host groups
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Waf.GetHostGroups.Invoke(new()
        ///     {
        ///         HostFix = "www.tf-test.com",
        ///         TimeOrderBy = "DESC",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetHostGroupsResult> InvokeAsync(GetHostGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostGroupsResult>("volcengine:waf/getHostGroups:getHostGroups", args ?? new GetHostGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of waf host groups
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Waf.GetHostGroups.Invoke(new()
        ///     {
        ///         HostFix = "www.tf-test.com",
        ///         TimeOrderBy = "DESC",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetHostGroupsResult> Invoke(GetHostGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostGroupsResult>("volcengine:waf/getHostGroups:getHostGroups", args ?? new GetHostGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain name information queried.
        /// </summary>
        [Input("hostFix")]
        public string? HostFix { get; set; }

        /// <summary>
        /// The ID of the domain name group.
        /// </summary>
        [Input("hostGroupId")]
        public int? HostGroupId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// Whether to return all domain name groups and their name information, it returns by default.
        /// </summary>
        [Input("listAll")]
        public bool? ListAll { get; set; }

        /// <summary>
        /// The name of the domain name group being queried.
        /// </summary>
        [Input("nameFix")]
        public string? NameFix { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The rule ID associated with domain name groups.
        /// </summary>
        [Input("ruleTag")]
        public string? RuleTag { get; set; }

        /// <summary>
        /// The list of rule ids associated with the domain name group shows the timing sequence.
        /// </summary>
        [Input("timeOrderBy", required: true)]
        public string TimeOrderBy { get; set; } = null!;

        public GetHostGroupsArgs()
        {
        }
        public static new GetHostGroupsArgs Empty => new GetHostGroupsArgs();
    }

    public sealed class GetHostGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain name information queried.
        /// </summary>
        [Input("hostFix")]
        public Input<string>? HostFix { get; set; }

        /// <summary>
        /// The ID of the domain name group.
        /// </summary>
        [Input("hostGroupId")]
        public Input<int>? HostGroupId { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// Whether to return all domain name groups and their name information, it returns by default.
        /// </summary>
        [Input("listAll")]
        public Input<bool>? ListAll { get; set; }

        /// <summary>
        /// The name of the domain name group being queried.
        /// </summary>
        [Input("nameFix")]
        public Input<string>? NameFix { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The rule ID associated with domain name groups.
        /// </summary>
        [Input("ruleTag")]
        public Input<string>? RuleTag { get; set; }

        /// <summary>
        /// The list of rule ids associated with the domain name group shows the timing sequence.
        /// </summary>
        [Input("timeOrderBy", required: true)]
        public Input<string> TimeOrderBy { get; set; } = null!;

        public GetHostGroupsInvokeArgs()
        {
        }
        public static new GetHostGroupsInvokeArgs Empty => new GetHostGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostGroupsResult
    {
        public readonly string? HostFix;
        /// <summary>
        /// The ID of the domain name group.
        /// </summary>
        public readonly int? HostGroupId;
        /// <summary>
        /// Details of the domain name group list.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHostGroupsHostGroupListResult> HostGroupLists;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly bool? ListAll;
        public readonly string? NameFix;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The ID of the rule.
        /// </summary>
        public readonly string? RuleTag;
        public readonly string TimeOrderBy;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetHostGroupsResult(
            string? hostFix,

            int? hostGroupId,

            ImmutableArray<Outputs.GetHostGroupsHostGroupListResult> hostGroupLists,

            string id,

            ImmutableArray<string> ids,

            bool? listAll,

            string? nameFix,

            string? nameRegex,

            string? outputFile,

            string? ruleTag,

            string timeOrderBy,

            int totalCount)
        {
            HostFix = hostFix;
            HostGroupId = hostGroupId;
            HostGroupLists = hostGroupLists;
            Id = id;
            Ids = ids;
            ListAll = listAll;
            NameFix = nameFix;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            RuleTag = ruleTag;
            TimeOrderBy = timeOrderBy;
            TotalCount = totalCount;
        }
    }
}
