// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    /// <summary>
    /// Provides a resource to manage waf system bot
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Waf.SystemBot("foo", new()
    ///     {
    ///         Action = "observe",
    ///         BotType = "feed_fetcher",
    ///         Enable = 0,
    ///         Host = "www.tf-test.com",
    ///         ProjectName = "default",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WafSystemBot can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:waf/systemBot:SystemBot default BotType:Host
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:waf/systemBot:SystemBot")]
    public partial class SystemBot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The execution action of the Bot.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// The name of bot.
        /// </summary>
        [Output("botType")]
        public Output<string> BotType { get; private set; } = null!;

        /// <summary>
        /// The description of the Bot.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Whether to enable bot.
        /// </summary>
        [Output("enable")]
        public Output<int> Enable { get; private set; } = null!;

        /// <summary>
        /// Domain name information.
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Output("projectName")]
        public Output<string?> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The ID of the Bot rule.
        /// </summary>
        [Output("ruleTag")]
        public Output<string> RuleTag { get; private set; } = null!;


        /// <summary>
        /// Create a SystemBot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SystemBot(string name, SystemBotArgs args, CustomResourceOptions? options = null)
            : base("volcengine:waf/systemBot:SystemBot", name, args ?? new SystemBotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SystemBot(string name, Input<string> id, SystemBotState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:waf/systemBot:SystemBot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SystemBot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SystemBot Get(string name, Input<string> id, SystemBotState? state = null, CustomResourceOptions? options = null)
        {
            return new SystemBot(name, id, state, options);
        }
    }

    public sealed class SystemBotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The execution action of the Bot.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The name of bot.
        /// </summary>
        [Input("botType", required: true)]
        public Input<string> BotType { get; set; } = null!;

        /// <summary>
        /// Whether to enable bot.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// Domain name information.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        public SystemBotArgs()
        {
        }
        public static new SystemBotArgs Empty => new SystemBotArgs();
    }

    public sealed class SystemBotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The execution action of the Bot.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The name of bot.
        /// </summary>
        [Input("botType")]
        public Input<string>? BotType { get; set; }

        /// <summary>
        /// The description of the Bot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to enable bot.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// Domain name information.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The Name of the affiliated project resource.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The ID of the Bot rule.
        /// </summary>
        [Input("ruleTag")]
        public Input<string>? RuleTag { get; set; }

        public SystemBotState()
        {
        }
        public static new SystemBotState Empty => new SystemBotState();
    }
}
