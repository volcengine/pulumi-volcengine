// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    /// <summary>
    /// Provides a resource to manage waf domain
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Waf.WafDomain("foo", new()
    ///     {
    ///         AccessMode = 10,
    ///         BackendGroups = new[]
    ///         {
    ///             new Volcengine.Waf.Inputs.WafDomainBackendGroupArgs
    ///             {
    ///                 AccessPorts = new[]
    ///                 {
    ///                     80,
    ///                 },
    ///                 Backends = new[]
    ///                 {
    ///                     new Volcengine.Waf.Inputs.WafDomainBackendGroupBackendArgs
    ///                     {
    ///                         Ip = "192.168.0.0",
    ///                         Port = 80,
    ///                         Protocol = "HTTP",
    ///                         Weight = 40,
    ///                     },
    ///                     new Volcengine.Waf.Inputs.WafDomainBackendGroupBackendArgs
    ///                     {
    ///                         Ip = "192.168.1.0",
    ///                         Port = 80,
    ///                         Protocol = "HTTP",
    ///                         Weight = 60,
    ///                     },
    ///                 },
    ///                 Name = "default",
    ///             },
    ///         },
    ///         ClientIpLocation = 0,
    ///         ClientMaxBodySize = 1024,
    ///         CustomHeaders = new[]
    ///         {
    ///             "x-top-1",
    ///             "x-top-2",
    ///         },
    ///         Domain = "www.tf-test.com",
    ///         EnableIpv6 = 0,
    ///         KeepAliveRequest = 200,
    ///         KeepAliveTimeOut = 100,
    ///         LbAlgorithm = "wlc",
    ///         ProtocolPorts = new Volcengine.Waf.Inputs.WafDomainProtocolPortsArgs
    ///         {
    ///             Https = new[]
    ///             {
    ///                 80,
    ///             },
    ///         },
    ///         Protocols = new[]
    ///         {
    ///             "HTTP",
    ///         },
    ///         ProxyConfig = 1,
    ///         ProxyConnectTimeOut = 10,
    ///         ProxyKeepAlive = 101,
    ///         ProxyKeepAliveTimeOut = 20,
    ///         ProxyReadTimeOut = 200,
    ///         ProxyRetry = 10,
    ///         ProxyWriteTimeOut = 120,
    ///         PublicRealServer = 0,
    ///         VpcId = "vpc-2d6485y7p95og58ozfcvxxxxx",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WafDomain can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:waf/wafDomain:WafDomain default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:waf/wafDomain:WafDomain")]
    public partial class WafDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Access mode.
        /// </summary>
        [Output("accessMode")]
        public Output<int> AccessMode { get; private set; } = null!;

        /// <summary>
        /// High-defense instance IP.
        /// </summary>
        [Output("advancedDefenseIp")]
        public Output<string> AdvancedDefenseIp { get; private set; } = null!;

        /// <summary>
        /// High-defense instance IPv6.
        /// </summary>
        [Output("advancedDefenseIpv6")]
        public Output<string> AdvancedDefenseIpv6 { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the API protection policy. Works only on modified scenes.
        /// </summary>
        [Output("apiEnable")]
        public Output<int> ApiEnable { get; private set; } = null!;

        /// <summary>
        /// The status of the attack.
        /// </summary>
        [Output("attackStatus")]
        public Output<int> AttackStatus { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
        /// </summary>
        [Output("autoCcEnable")]
        public Output<int> AutoCcEnable { get; private set; } = null!;

        /// <summary>
        /// The configuration of source station.
        /// </summary>
        [Output("backendGroups")]
        public Output<ImmutableArray<Outputs.WafDomainBackendGroup>> BackendGroups { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the access ban list policy. Works only on modified scenes.
        /// </summary>
        [Output("blackIpEnable")]
        public Output<int> BlackIpEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the geographical location access control policy. Works only on modified scenes.
        /// </summary>
        [Output("blackLctEnable")]
        public Output<int> BlackLctEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the bot dynamic token. Works only on modified scenes.
        /// </summary>
        [Output("botDytokenEnable")]
        public Output<int?> BotDytokenEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the bot frequency limit policy. Works only on modified scenes.
        /// </summary>
        [Output("botFrequencyEnable")]
        public Output<int?> BotFrequencyEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the bot frequency limit policy. Works only on modified scenes.
        /// </summary>
        [Output("botRepeatEnable")]
        public Output<int?> BotRepeatEnable { get; private set; } = null!;

        /// <summary>
        /// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
        /// </summary>
        [Output("botSequenceDefaultAction")]
        public Output<int?> BotSequenceDefaultAction { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the bot behavior map. Works only on modified scenes.
        /// </summary>
        [Output("botSequenceEnable")]
        public Output<int?> BotSequenceEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the CC protection policy. Works only on modified scenes.
        /// </summary>
        [Output("ccEnable")]
        public Output<int> CcEnable { get; private set; } = null!;

        /// <summary>
        /// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
        /// </summary>
        [Output("certificateId")]
        public Output<int> CertificateId { get; private set; } = null!;

        /// <summary>
        /// The name of the certificate.
        /// </summary>
        [Output("certificateName")]
        public Output<string> CertificateName { get; private set; } = null!;

        /// <summary>
        /// Certificate custody platform.
        /// </summary>
        [Output("certificatePlatform")]
        public Output<string> CertificatePlatform { get; private set; } = null!;

        /// <summary>
        /// The method of obtaining the client IP.
        /// </summary>
        [Output("clientIpLocation")]
        public Output<int> ClientIpLocation { get; private set; } = null!;

        /// <summary>
        /// The client requests the maximum value of body.
        /// </summary>
        [Output("clientMaxBodySize")]
        public Output<int> ClientMaxBodySize { get; private set; } = null!;

        /// <summary>
        /// Access port information.If AccessMode is Alb/CLB, this field is required.
        /// </summary>
        [Output("cloudAccessConfigs")]
        public Output<ImmutableArray<Outputs.WafDomainCloudAccessConfig>> CloudAccessConfigs { get; private set; } = null!;

        /// <summary>
        /// The CNAME value generated by the WAF instance.
        /// </summary>
        [Output("cname")]
        public Output<string> Cname { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
        /// </summary>
        [Output("customBotEnable")]
        public Output<int> CustomBotEnable { get; private set; } = null!;

        /// <summary>
        /// Custom Header.
        /// </summary>
        [Output("customHeaders")]
        public Output<ImmutableArray<string>> CustomHeaders { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the custom response interception policy. Works only on modified scenes.
        /// </summary>
        [Output("customRspEnable")]
        public Output<int> CustomRspEnable { get; private set; } = null!;

        /// <summary>
        /// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
        /// </summary>
        [Output("customSni")]
        public Output<string?> CustomSni { get; private set; } = null!;

        /// <summary>
        /// The protection mode of the instance. Works only on modified scenes.
        /// </summary>
        [Output("defenceMode")]
        public Output<int?> DefenceMode { get; private set; } = null!;

        /// <summary>
        /// The protection mode of the instance.
        /// </summary>
        [Output("defenceModeComputed")]
        public Output<int> DefenceModeComputed { get; private set; } = null!;

        /// <summary>
        /// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
        /// </summary>
        [Output("dlpEnable")]
        public Output<int> DlpEnable { get; private set; } = null!;

        /// <summary>
        /// List of domain names that need to be protected by WAF.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// Whether to enable user-defined redirection. Works only on modified scenes.
        /// </summary>
        [Output("enableCustomRedirect")]
        public Output<int?> EnableCustomRedirect { get; private set; } = null!;

        /// <summary>
        /// Whether to enable HTTP 2.0.
        /// </summary>
        [Output("enableHttp2")]
        public Output<int> EnableHttp2 { get; private set; } = null!;

        /// <summary>
        /// Whether it supports protecting IPv6 requests.
        /// </summary>
        [Output("enableIpv6")]
        public Output<int> EnableIpv6 { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the SNI configuration. Works only on modified scenes.
        /// </summary>
        [Output("enableSni")]
        public Output<int?> EnableSni { get; private set; } = null!;

        /// <summary>
        /// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
        /// </summary>
        [Output("extraDefenceModeLbInstances")]
        public Output<ImmutableArray<Outputs.WafDomainExtraDefenceModeLbInstance>> ExtraDefenceModeLbInstances { get; private set; } = null!;

        /// <summary>
        /// The number of long connection multiplexes.
        /// </summary>
        [Output("keepAliveRequest")]
        public Output<int> KeepAliveRequest { get; private set; } = null!;

        /// <summary>
        /// Long connection retention time.
        /// </summary>
        [Output("keepAliveTimeOut")]
        public Output<int> KeepAliveTimeOut { get; private set; } = null!;

        /// <summary>
        /// The types of load balancing algorithms.
        /// </summary>
        [Output("lbAlgorithm")]
        public Output<string> LbAlgorithm { get; private set; } = null!;

        /// <summary>
        /// Is LLM available. Works only on modified scenes.
        /// </summary>
        [Output("llmAvailable")]
        public Output<bool?> LlmAvailable { get; private set; } = null!;

        /// <summary>
        /// The name of project. Works only on modified scenes.
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// Whether to enable protocol following.
        /// </summary>
        [Output("protocolFollow")]
        public Output<int> ProtocolFollow { get; private set; } = null!;

        /// <summary>
        /// Access port information.
        /// </summary>
        [Output("protocolPorts")]
        public Output<Outputs.WafDomainProtocolPorts> ProtocolPorts { get; private set; } = null!;

        /// <summary>
        /// Access protocol types.
        /// </summary>
        [Output("protocols")]
        public Output<ImmutableArray<string>> Protocols { get; private set; } = null!;

        /// <summary>
        /// Whether to enable proxy configuration.
        /// </summary>
        [Output("proxyConfig")]
        public Output<int> ProxyConfig { get; private set; } = null!;

        /// <summary>
        /// The timeout period for establishing a connection between the WAF and the backend server.
        /// </summary>
        [Output("proxyConnectTimeOut")]
        public Output<int> ProxyConnectTimeOut { get; private set; } = null!;

        /// <summary>
        /// The number of reusable WAF origin long connections.
        /// </summary>
        [Output("proxyKeepAlive")]
        public Output<int> ProxyKeepAlive { get; private set; } = null!;

        /// <summary>
        /// Idle long connection timeout period.
        /// </summary>
        [Output("proxyKeepAliveTimeOut")]
        public Output<int> ProxyKeepAliveTimeOut { get; private set; } = null!;

        /// <summary>
        /// The timeout period during which WAF reads the response from the backend server.
        /// </summary>
        [Output("proxyReadTimeOut")]
        public Output<int> ProxyReadTimeOut { get; private set; } = null!;

        /// <summary>
        /// The number of retries for WAF back to source.
        /// </summary>
        [Output("proxyRetry")]
        public Output<int> ProxyRetry { get; private set; } = null!;

        /// <summary>
        /// The timeout period during which the WAF transmits the request to the backend server.
        /// </summary>
        [Output("proxyWriteTimeOut")]
        public Output<int> ProxyWriteTimeOut { get; private set; } = null!;

        /// <summary>
        /// Connect to the source return mode.
        /// </summary>
        [Output("publicRealServer")]
        public Output<int> PublicRealServer { get; private set; } = null!;

        /// <summary>
        /// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
        /// </summary>
        [Output("redirectHttps")]
        public Output<bool?> RedirectHttps { get; private set; } = null!;

        /// <summary>
        /// The IP of the WAF protection instance.
        /// </summary>
        [Output("serverIps")]
        public Output<string> ServerIps { get; private set; } = null!;

        /// <summary>
        /// WAF source IP.
        /// </summary>
        [Output("srcIps")]
        public Output<string> SrcIps { get; private set; } = null!;

        /// <summary>
        /// Encryption kit.
        /// </summary>
        [Output("sslCiphers")]
        public Output<ImmutableArray<string>> SslCiphers { get; private set; } = null!;

        /// <summary>
        /// TLS protocol version.
        /// </summary>
        [Output("sslProtocols")]
        public Output<ImmutableArray<string>> SslProtocols { get; private set; } = null!;

        /// <summary>
        /// The status of access.
        /// </summary>
        [Output("status")]
        public Output<int> Status { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
        /// </summary>
        [Output("systemBotEnable")]
        public Output<int> SystemBotEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the page tamper-proof policy. Works only on modified scenes.
        /// </summary>
        [Output("tamperProofEnable")]
        public Output<int> TamperProofEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the log service.
        /// </summary>
        [Output("tlsEnable")]
        public Output<int> TlsEnable { get; private set; } = null!;

        /// <summary>
        /// Details of log field configuration. Works only on modified scenes.
        /// </summary>
        [Output("tlsFieldsConfig")]
        public Output<Outputs.WafDomainTlsFieldsConfig?> TlsFieldsConfig { get; private set; } = null!;

        /// <summary>
        /// The update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
        /// </summary>
        [Output("volcCertificateId")]
        public Output<string> VolcCertificateId { get; private set; } = null!;

        /// <summary>
        /// The ID of vpc.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
        /// </summary>
        [Output("wafEnable")]
        public Output<int> WafEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
        /// </summary>
        [Output("wafWhiteReqEnable")]
        public Output<int> WafWhiteReqEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the access list policy. Works only on modified scenes.
        /// </summary>
        [Output("whiteEnable")]
        public Output<int> WhiteEnable { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
        /// </summary>
        [Output("whiteFieldEnable")]
        public Output<int> WhiteFieldEnable { get; private set; } = null!;


        /// <summary>
        /// Create a WafDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WafDomain(string name, WafDomainArgs args, CustomResourceOptions? options = null)
            : base("volcengine:waf/wafDomain:WafDomain", name, args ?? new WafDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WafDomain(string name, Input<string> id, WafDomainState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:waf/wafDomain:WafDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WafDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WafDomain Get(string name, Input<string> id, WafDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new WafDomain(name, id, state, options);
        }
    }

    public sealed class WafDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access mode.
        /// </summary>
        [Input("accessMode", required: true)]
        public Input<int> AccessMode { get; set; } = null!;

        /// <summary>
        /// Whether to enable the API protection policy. Works only on modified scenes.
        /// </summary>
        [Input("apiEnable")]
        public Input<int>? ApiEnable { get; set; }

        /// <summary>
        /// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
        /// </summary>
        [Input("autoCcEnable")]
        public Input<int>? AutoCcEnable { get; set; }

        [Input("backendGroups")]
        private InputList<Inputs.WafDomainBackendGroupArgs>? _backendGroups;

        /// <summary>
        /// The configuration of source station.
        /// </summary>
        public InputList<Inputs.WafDomainBackendGroupArgs> BackendGroups
        {
            get => _backendGroups ?? (_backendGroups = new InputList<Inputs.WafDomainBackendGroupArgs>());
            set => _backendGroups = value;
        }

        /// <summary>
        /// Whether to enable the access ban list policy. Works only on modified scenes.
        /// </summary>
        [Input("blackIpEnable")]
        public Input<int>? BlackIpEnable { get; set; }

        /// <summary>
        /// Whether to enable the geographical location access control policy. Works only on modified scenes.
        /// </summary>
        [Input("blackLctEnable")]
        public Input<int>? BlackLctEnable { get; set; }

        /// <summary>
        /// Whether to enable the bot dynamic token. Works only on modified scenes.
        /// </summary>
        [Input("botDytokenEnable")]
        public Input<int>? BotDytokenEnable { get; set; }

        /// <summary>
        /// Whether to enable the bot frequency limit policy. Works only on modified scenes.
        /// </summary>
        [Input("botFrequencyEnable")]
        public Input<int>? BotFrequencyEnable { get; set; }

        /// <summary>
        /// Whether to enable the bot frequency limit policy. Works only on modified scenes.
        /// </summary>
        [Input("botRepeatEnable")]
        public Input<int>? BotRepeatEnable { get; set; }

        /// <summary>
        /// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
        /// </summary>
        [Input("botSequenceDefaultAction")]
        public Input<int>? BotSequenceDefaultAction { get; set; }

        /// <summary>
        /// Whether to enable the bot behavior map. Works only on modified scenes.
        /// </summary>
        [Input("botSequenceEnable")]
        public Input<int>? BotSequenceEnable { get; set; }

        /// <summary>
        /// Whether to enable the CC protection policy. Works only on modified scenes.
        /// </summary>
        [Input("ccEnable")]
        public Input<int>? CcEnable { get; set; }

        /// <summary>
        /// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
        /// </summary>
        [Input("certificateId")]
        public Input<int>? CertificateId { get; set; }

        /// <summary>
        /// Certificate custody platform.
        /// </summary>
        [Input("certificatePlatform")]
        public Input<string>? CertificatePlatform { get; set; }

        /// <summary>
        /// The method of obtaining the client IP.
        /// </summary>
        [Input("clientIpLocation")]
        public Input<int>? ClientIpLocation { get; set; }

        /// <summary>
        /// The client requests the maximum value of body.
        /// </summary>
        [Input("clientMaxBodySize")]
        public Input<int>? ClientMaxBodySize { get; set; }

        [Input("cloudAccessConfigs")]
        private InputList<Inputs.WafDomainCloudAccessConfigArgs>? _cloudAccessConfigs;

        /// <summary>
        /// Access port information.If AccessMode is Alb/CLB, this field is required.
        /// </summary>
        public InputList<Inputs.WafDomainCloudAccessConfigArgs> CloudAccessConfigs
        {
            get => _cloudAccessConfigs ?? (_cloudAccessConfigs = new InputList<Inputs.WafDomainCloudAccessConfigArgs>());
            set => _cloudAccessConfigs = value;
        }

        /// <summary>
        /// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
        /// </summary>
        [Input("customBotEnable")]
        public Input<int>? CustomBotEnable { get; set; }

        [Input("customHeaders")]
        private InputList<string>? _customHeaders;

        /// <summary>
        /// Custom Header.
        /// </summary>
        public InputList<string> CustomHeaders
        {
            get => _customHeaders ?? (_customHeaders = new InputList<string>());
            set => _customHeaders = value;
        }

        /// <summary>
        /// Whether to enable the custom response interception policy. Works only on modified scenes.
        /// </summary>
        [Input("customRspEnable")]
        public Input<int>? CustomRspEnable { get; set; }

        /// <summary>
        /// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
        /// </summary>
        [Input("customSni")]
        public Input<string>? CustomSni { get; set; }

        /// <summary>
        /// The protection mode of the instance. Works only on modified scenes.
        /// </summary>
        [Input("defenceMode")]
        public Input<int>? DefenceMode { get; set; }

        /// <summary>
        /// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
        /// </summary>
        [Input("dlpEnable")]
        public Input<int>? DlpEnable { get; set; }

        /// <summary>
        /// List of domain names that need to be protected by WAF.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// Whether to enable user-defined redirection. Works only on modified scenes.
        /// </summary>
        [Input("enableCustomRedirect")]
        public Input<int>? EnableCustomRedirect { get; set; }

        /// <summary>
        /// Whether to enable HTTP 2.0.
        /// </summary>
        [Input("enableHttp2")]
        public Input<int>? EnableHttp2 { get; set; }

        /// <summary>
        /// Whether it supports protecting IPv6 requests.
        /// </summary>
        [Input("enableIpv6")]
        public Input<int>? EnableIpv6 { get; set; }

        /// <summary>
        /// Whether to enable the SNI configuration. Works only on modified scenes.
        /// </summary>
        [Input("enableSni")]
        public Input<int>? EnableSni { get; set; }

        [Input("extraDefenceModeLbInstances")]
        private InputList<Inputs.WafDomainExtraDefenceModeLbInstanceArgs>? _extraDefenceModeLbInstances;

        /// <summary>
        /// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
        /// </summary>
        public InputList<Inputs.WafDomainExtraDefenceModeLbInstanceArgs> ExtraDefenceModeLbInstances
        {
            get => _extraDefenceModeLbInstances ?? (_extraDefenceModeLbInstances = new InputList<Inputs.WafDomainExtraDefenceModeLbInstanceArgs>());
            set => _extraDefenceModeLbInstances = value;
        }

        /// <summary>
        /// The number of long connection multiplexes.
        /// </summary>
        [Input("keepAliveRequest")]
        public Input<int>? KeepAliveRequest { get; set; }

        /// <summary>
        /// Long connection retention time.
        /// </summary>
        [Input("keepAliveTimeOut")]
        public Input<int>? KeepAliveTimeOut { get; set; }

        /// <summary>
        /// The types of load balancing algorithms.
        /// </summary>
        [Input("lbAlgorithm")]
        public Input<string>? LbAlgorithm { get; set; }

        /// <summary>
        /// Is LLM available. Works only on modified scenes.
        /// </summary>
        [Input("llmAvailable")]
        public Input<bool>? LlmAvailable { get; set; }

        /// <summary>
        /// The name of project. Works only on modified scenes.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// Whether to enable protocol following.
        /// </summary>
        [Input("protocolFollow")]
        public Input<int>? ProtocolFollow { get; set; }

        /// <summary>
        /// Access port information.
        /// </summary>
        [Input("protocolPorts")]
        public Input<Inputs.WafDomainProtocolPortsArgs>? ProtocolPorts { get; set; }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// Access protocol types.
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// Whether to enable proxy configuration.
        /// </summary>
        [Input("proxyConfig")]
        public Input<int>? ProxyConfig { get; set; }

        /// <summary>
        /// The timeout period for establishing a connection between the WAF and the backend server.
        /// </summary>
        [Input("proxyConnectTimeOut")]
        public Input<int>? ProxyConnectTimeOut { get; set; }

        /// <summary>
        /// The number of reusable WAF origin long connections.
        /// </summary>
        [Input("proxyKeepAlive")]
        public Input<int>? ProxyKeepAlive { get; set; }

        /// <summary>
        /// Idle long connection timeout period.
        /// </summary>
        [Input("proxyKeepAliveTimeOut")]
        public Input<int>? ProxyKeepAliveTimeOut { get; set; }

        /// <summary>
        /// The timeout period during which WAF reads the response from the backend server.
        /// </summary>
        [Input("proxyReadTimeOut")]
        public Input<int>? ProxyReadTimeOut { get; set; }

        /// <summary>
        /// The number of retries for WAF back to source.
        /// </summary>
        [Input("proxyRetry")]
        public Input<int>? ProxyRetry { get; set; }

        /// <summary>
        /// The timeout period during which the WAF transmits the request to the backend server.
        /// </summary>
        [Input("proxyWriteTimeOut")]
        public Input<int>? ProxyWriteTimeOut { get; set; }

        /// <summary>
        /// Connect to the source return mode.
        /// </summary>
        [Input("publicRealServer")]
        public Input<int>? PublicRealServer { get; set; }

        /// <summary>
        /// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
        /// </summary>
        [Input("redirectHttps")]
        public Input<bool>? RedirectHttps { get; set; }

        [Input("sslCiphers")]
        private InputList<string>? _sslCiphers;

        /// <summary>
        /// Encryption kit.
        /// </summary>
        public InputList<string> SslCiphers
        {
            get => _sslCiphers ?? (_sslCiphers = new InputList<string>());
            set => _sslCiphers = value;
        }

        [Input("sslProtocols")]
        private InputList<string>? _sslProtocols;

        /// <summary>
        /// TLS protocol version.
        /// </summary>
        public InputList<string> SslProtocols
        {
            get => _sslProtocols ?? (_sslProtocols = new InputList<string>());
            set => _sslProtocols = value;
        }

        /// <summary>
        /// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
        /// </summary>
        [Input("systemBotEnable")]
        public Input<int>? SystemBotEnable { get; set; }

        /// <summary>
        /// Whether to enable the page tamper-proof policy. Works only on modified scenes.
        /// </summary>
        [Input("tamperProofEnable")]
        public Input<int>? TamperProofEnable { get; set; }

        /// <summary>
        /// Whether to enable the log service.
        /// </summary>
        [Input("tlsEnable")]
        public Input<int>? TlsEnable { get; set; }

        /// <summary>
        /// Details of log field configuration. Works only on modified scenes.
        /// </summary>
        [Input("tlsFieldsConfig")]
        public Input<Inputs.WafDomainTlsFieldsConfigArgs>? TlsFieldsConfig { get; set; }

        /// <summary>
        /// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
        /// </summary>
        [Input("volcCertificateId")]
        public Input<string>? VolcCertificateId { get; set; }

        /// <summary>
        /// The ID of vpc.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
        /// </summary>
        [Input("wafEnable")]
        public Input<int>? WafEnable { get; set; }

        /// <summary>
        /// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
        /// </summary>
        [Input("wafWhiteReqEnable")]
        public Input<int>? WafWhiteReqEnable { get; set; }

        /// <summary>
        /// Whether to enable the access list policy. Works only on modified scenes.
        /// </summary>
        [Input("whiteEnable")]
        public Input<int>? WhiteEnable { get; set; }

        /// <summary>
        /// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
        /// </summary>
        [Input("whiteFieldEnable")]
        public Input<int>? WhiteFieldEnable { get; set; }

        public WafDomainArgs()
        {
        }
        public static new WafDomainArgs Empty => new WafDomainArgs();
    }

    public sealed class WafDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access mode.
        /// </summary>
        [Input("accessMode")]
        public Input<int>? AccessMode { get; set; }

        /// <summary>
        /// High-defense instance IP.
        /// </summary>
        [Input("advancedDefenseIp")]
        public Input<string>? AdvancedDefenseIp { get; set; }

        /// <summary>
        /// High-defense instance IPv6.
        /// </summary>
        [Input("advancedDefenseIpv6")]
        public Input<string>? AdvancedDefenseIpv6 { get; set; }

        /// <summary>
        /// Whether to enable the API protection policy. Works only on modified scenes.
        /// </summary>
        [Input("apiEnable")]
        public Input<int>? ApiEnable { get; set; }

        /// <summary>
        /// The status of the attack.
        /// </summary>
        [Input("attackStatus")]
        public Input<int>? AttackStatus { get; set; }

        /// <summary>
        /// Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
        /// </summary>
        [Input("autoCcEnable")]
        public Input<int>? AutoCcEnable { get; set; }

        [Input("backendGroups")]
        private InputList<Inputs.WafDomainBackendGroupGetArgs>? _backendGroups;

        /// <summary>
        /// The configuration of source station.
        /// </summary>
        public InputList<Inputs.WafDomainBackendGroupGetArgs> BackendGroups
        {
            get => _backendGroups ?? (_backendGroups = new InputList<Inputs.WafDomainBackendGroupGetArgs>());
            set => _backendGroups = value;
        }

        /// <summary>
        /// Whether to enable the access ban list policy. Works only on modified scenes.
        /// </summary>
        [Input("blackIpEnable")]
        public Input<int>? BlackIpEnable { get; set; }

        /// <summary>
        /// Whether to enable the geographical location access control policy. Works only on modified scenes.
        /// </summary>
        [Input("blackLctEnable")]
        public Input<int>? BlackLctEnable { get; set; }

        /// <summary>
        /// Whether to enable the bot dynamic token. Works only on modified scenes.
        /// </summary>
        [Input("botDytokenEnable")]
        public Input<int>? BotDytokenEnable { get; set; }

        /// <summary>
        /// Whether to enable the bot frequency limit policy. Works only on modified scenes.
        /// </summary>
        [Input("botFrequencyEnable")]
        public Input<int>? BotFrequencyEnable { get; set; }

        /// <summary>
        /// Whether to enable the bot frequency limit policy. Works only on modified scenes.
        /// </summary>
        [Input("botRepeatEnable")]
        public Input<int>? BotRepeatEnable { get; set; }

        /// <summary>
        /// Set the default actions of the bot behavior map strategy. Works only on modified scenes.
        /// </summary>
        [Input("botSequenceDefaultAction")]
        public Input<int>? BotSequenceDefaultAction { get; set; }

        /// <summary>
        /// Whether to enable the bot behavior map. Works only on modified scenes.
        /// </summary>
        [Input("botSequenceEnable")]
        public Input<int>? BotSequenceEnable { get; set; }

        /// <summary>
        /// Whether to enable the CC protection policy. Works only on modified scenes.
        /// </summary>
        [Input("ccEnable")]
        public Input<int>? CcEnable { get; set; }

        /// <summary>
        /// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
        /// </summary>
        [Input("certificateId")]
        public Input<int>? CertificateId { get; set; }

        /// <summary>
        /// The name of the certificate.
        /// </summary>
        [Input("certificateName")]
        public Input<string>? CertificateName { get; set; }

        /// <summary>
        /// Certificate custody platform.
        /// </summary>
        [Input("certificatePlatform")]
        public Input<string>? CertificatePlatform { get; set; }

        /// <summary>
        /// The method of obtaining the client IP.
        /// </summary>
        [Input("clientIpLocation")]
        public Input<int>? ClientIpLocation { get; set; }

        /// <summary>
        /// The client requests the maximum value of body.
        /// </summary>
        [Input("clientMaxBodySize")]
        public Input<int>? ClientMaxBodySize { get; set; }

        [Input("cloudAccessConfigs")]
        private InputList<Inputs.WafDomainCloudAccessConfigGetArgs>? _cloudAccessConfigs;

        /// <summary>
        /// Access port information.If AccessMode is Alb/CLB, this field is required.
        /// </summary>
        public InputList<Inputs.WafDomainCloudAccessConfigGetArgs> CloudAccessConfigs
        {
            get => _cloudAccessConfigs ?? (_cloudAccessConfigs = new InputList<Inputs.WafDomainCloudAccessConfigGetArgs>());
            set => _cloudAccessConfigs = value;
        }

        /// <summary>
        /// The CNAME value generated by the WAF instance.
        /// </summary>
        [Input("cname")]
        public Input<string>? Cname { get; set; }

        /// <summary>
        /// Whether to enable the custom Bot classification strategy. Works only on modified scenes.
        /// </summary>
        [Input("customBotEnable")]
        public Input<int>? CustomBotEnable { get; set; }

        [Input("customHeaders")]
        private InputList<string>? _customHeaders;

        /// <summary>
        /// Custom Header.
        /// </summary>
        public InputList<string> CustomHeaders
        {
            get => _customHeaders ?? (_customHeaders = new InputList<string>());
            set => _customHeaders = value;
        }

        /// <summary>
        /// Whether to enable the custom response interception policy. Works only on modified scenes.
        /// </summary>
        [Input("customRspEnable")]
        public Input<int>? CustomRspEnable { get; set; }

        /// <summary>
        /// Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
        /// </summary>
        [Input("customSni")]
        public Input<string>? CustomSni { get; set; }

        /// <summary>
        /// The protection mode of the instance. Works only on modified scenes.
        /// </summary>
        [Input("defenceMode")]
        public Input<int>? DefenceMode { get; set; }

        /// <summary>
        /// The protection mode of the instance.
        /// </summary>
        [Input("defenceModeComputed")]
        public Input<int>? DefenceModeComputed { get; set; }

        /// <summary>
        /// Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
        /// </summary>
        [Input("dlpEnable")]
        public Input<int>? DlpEnable { get; set; }

        /// <summary>
        /// List of domain names that need to be protected by WAF.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Whether to enable user-defined redirection. Works only on modified scenes.
        /// </summary>
        [Input("enableCustomRedirect")]
        public Input<int>? EnableCustomRedirect { get; set; }

        /// <summary>
        /// Whether to enable HTTP 2.0.
        /// </summary>
        [Input("enableHttp2")]
        public Input<int>? EnableHttp2 { get; set; }

        /// <summary>
        /// Whether it supports protecting IPv6 requests.
        /// </summary>
        [Input("enableIpv6")]
        public Input<int>? EnableIpv6 { get; set; }

        /// <summary>
        /// Whether to enable the SNI configuration. Works only on modified scenes.
        /// </summary>
        [Input("enableSni")]
        public Input<int>? EnableSni { get; set; }

        [Input("extraDefenceModeLbInstances")]
        private InputList<Inputs.WafDomainExtraDefenceModeLbInstanceGetArgs>? _extraDefenceModeLbInstances;

        /// <summary>
        /// The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
        /// </summary>
        public InputList<Inputs.WafDomainExtraDefenceModeLbInstanceGetArgs> ExtraDefenceModeLbInstances
        {
            get => _extraDefenceModeLbInstances ?? (_extraDefenceModeLbInstances = new InputList<Inputs.WafDomainExtraDefenceModeLbInstanceGetArgs>());
            set => _extraDefenceModeLbInstances = value;
        }

        /// <summary>
        /// The number of long connection multiplexes.
        /// </summary>
        [Input("keepAliveRequest")]
        public Input<int>? KeepAliveRequest { get; set; }

        /// <summary>
        /// Long connection retention time.
        /// </summary>
        [Input("keepAliveTimeOut")]
        public Input<int>? KeepAliveTimeOut { get; set; }

        /// <summary>
        /// The types of load balancing algorithms.
        /// </summary>
        [Input("lbAlgorithm")]
        public Input<string>? LbAlgorithm { get; set; }

        /// <summary>
        /// Is LLM available. Works only on modified scenes.
        /// </summary>
        [Input("llmAvailable")]
        public Input<bool>? LlmAvailable { get; set; }

        /// <summary>
        /// The name of project. Works only on modified scenes.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// Whether to enable protocol following.
        /// </summary>
        [Input("protocolFollow")]
        public Input<int>? ProtocolFollow { get; set; }

        /// <summary>
        /// Access port information.
        /// </summary>
        [Input("protocolPorts")]
        public Input<Inputs.WafDomainProtocolPortsGetArgs>? ProtocolPorts { get; set; }

        [Input("protocols")]
        private InputList<string>? _protocols;

        /// <summary>
        /// Access protocol types.
        /// </summary>
        public InputList<string> Protocols
        {
            get => _protocols ?? (_protocols = new InputList<string>());
            set => _protocols = value;
        }

        /// <summary>
        /// Whether to enable proxy configuration.
        /// </summary>
        [Input("proxyConfig")]
        public Input<int>? ProxyConfig { get; set; }

        /// <summary>
        /// The timeout period for establishing a connection between the WAF and the backend server.
        /// </summary>
        [Input("proxyConnectTimeOut")]
        public Input<int>? ProxyConnectTimeOut { get; set; }

        /// <summary>
        /// The number of reusable WAF origin long connections.
        /// </summary>
        [Input("proxyKeepAlive")]
        public Input<int>? ProxyKeepAlive { get; set; }

        /// <summary>
        /// Idle long connection timeout period.
        /// </summary>
        [Input("proxyKeepAliveTimeOut")]
        public Input<int>? ProxyKeepAliveTimeOut { get; set; }

        /// <summary>
        /// The timeout period during which WAF reads the response from the backend server.
        /// </summary>
        [Input("proxyReadTimeOut")]
        public Input<int>? ProxyReadTimeOut { get; set; }

        /// <summary>
        /// The number of retries for WAF back to source.
        /// </summary>
        [Input("proxyRetry")]
        public Input<int>? ProxyRetry { get; set; }

        /// <summary>
        /// The timeout period during which the WAF transmits the request to the backend server.
        /// </summary>
        [Input("proxyWriteTimeOut")]
        public Input<int>? ProxyWriteTimeOut { get; set; }

        /// <summary>
        /// Connect to the source return mode.
        /// </summary>
        [Input("publicRealServer")]
        public Input<int>? PublicRealServer { get; set; }

        /// <summary>
        /// When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
        /// </summary>
        [Input("redirectHttps")]
        public Input<bool>? RedirectHttps { get; set; }

        /// <summary>
        /// The IP of the WAF protection instance.
        /// </summary>
        [Input("serverIps")]
        public Input<string>? ServerIps { get; set; }

        /// <summary>
        /// WAF source IP.
        /// </summary>
        [Input("srcIps")]
        public Input<string>? SrcIps { get; set; }

        [Input("sslCiphers")]
        private InputList<string>? _sslCiphers;

        /// <summary>
        /// Encryption kit.
        /// </summary>
        public InputList<string> SslCiphers
        {
            get => _sslCiphers ?? (_sslCiphers = new InputList<string>());
            set => _sslCiphers = value;
        }

        [Input("sslProtocols")]
        private InputList<string>? _sslProtocols;

        /// <summary>
        /// TLS protocol version.
        /// </summary>
        public InputList<string> SslProtocols
        {
            get => _sslProtocols ?? (_sslProtocols = new InputList<string>());
            set => _sslProtocols = value;
        }

        /// <summary>
        /// The status of access.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        /// <summary>
        /// Whether to enable the managed Bot classification strategy. Works only on modified scenes.
        /// </summary>
        [Input("systemBotEnable")]
        public Input<int>? SystemBotEnable { get; set; }

        /// <summary>
        /// Whether to enable the page tamper-proof policy. Works only on modified scenes.
        /// </summary>
        [Input("tamperProofEnable")]
        public Input<int>? TamperProofEnable { get; set; }

        /// <summary>
        /// Whether to enable the log service.
        /// </summary>
        [Input("tlsEnable")]
        public Input<int>? TlsEnable { get; set; }

        /// <summary>
        /// Details of log field configuration. Works only on modified scenes.
        /// </summary>
        [Input("tlsFieldsConfig")]
        public Input<Inputs.WafDomainTlsFieldsConfigGetArgs>? TlsFieldsConfig { get; set; }

        /// <summary>
        /// The update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// When the protocol type is HTTPS, the bound certificate ID needs to be entered.
        /// </summary>
        [Input("volcCertificateId")]
        public Input<string>? VolcCertificateId { get; set; }

        /// <summary>
        /// The ID of vpc.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// Whether to enable the vulnerability protection strategy. Works only on modified scenes.
        /// </summary>
        [Input("wafEnable")]
        public Input<int>? WafEnable { get; set; }

        /// <summary>
        /// Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
        /// </summary>
        [Input("wafWhiteReqEnable")]
        public Input<int>? WafWhiteReqEnable { get; set; }

        /// <summary>
        /// Whether to enable the access list policy. Works only on modified scenes.
        /// </summary>
        [Input("whiteEnable")]
        public Input<int>? WhiteEnable { get; set; }

        /// <summary>
        /// Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
        /// </summary>
        [Input("whiteFieldEnable")]
        public Input<int>? WhiteFieldEnable { get; set; }

        public WafDomainState()
        {
        }
        public static new WafDomainState Empty => new WafDomainState();
    }
}
