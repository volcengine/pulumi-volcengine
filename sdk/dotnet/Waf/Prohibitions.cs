// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    [Obsolete(@"volcengine.waf.Prohibitions has been deprecated in favor of volcengine.waf.getProhibitions")]
    public static class Prohibitions
    {
        /// <summary>
        /// Use this data source to query detailed information of waf prohibitions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Waf.GetProhibitions.Invoke(new()
        ///     {
        ///         EndTime = 1749808824,
        ///         Host = "www.tf-test.com",
        ///         StartTime = 1749805224,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<ProhibitionsResult> InvokeAsync(ProhibitionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ProhibitionsResult>("volcengine:waf/prohibitions:Prohibitions", args ?? new ProhibitionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of waf prohibitions
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Waf.GetProhibitions.Invoke(new()
        ///     {
        ///         EndTime = 1749808824,
        ///         Host = "www.tf-test.com",
        ///         StartTime = 1749805224,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<ProhibitionsResult> Invoke(ProhibitionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ProhibitionsResult>("volcengine:waf/prohibitions:Prohibitions", args ?? new ProhibitionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ProhibitionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// end time.
        /// </summary>
        [Input("endTime", required: true)]
        public int EndTime { get; set; }

        /// <summary>
        /// The domain name of the website that needs to be queried.
        /// </summary>
        [Input("host", required: true)]
        public string Host { get; set; } = null!;

        /// <summary>
        /// The list shows the order.
        /// </summary>
        [Input("letterOrderBy")]
        public string? LetterOrderBy { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("reasons")]
        private List<string>? _reasons;

        /// <summary>
        /// Attack type filtering.
        /// </summary>
        public List<string> Reasons
        {
            get => _reasons ?? (_reasons = new List<string>());
            set => _reasons = value;
        }

        /// <summary>
        /// starting time.
        /// </summary>
        [Input("startTime", required: true)]
        public int StartTime { get; set; }

        public ProhibitionsArgs()
        {
        }
        public static new ProhibitionsArgs Empty => new ProhibitionsArgs();
    }

    public sealed class ProhibitionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// end time.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<int> EndTime { get; set; } = null!;

        /// <summary>
        /// The domain name of the website that needs to be queried.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// The list shows the order.
        /// </summary>
        [Input("letterOrderBy")]
        public Input<string>? LetterOrderBy { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("reasons")]
        private InputList<string>? _reasons;

        /// <summary>
        /// Attack type filtering.
        /// </summary>
        public InputList<string> Reasons
        {
            get => _reasons ?? (_reasons = new InputList<string>());
            set => _reasons = value;
        }

        /// <summary>
        /// starting time.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<int> StartTime { get; set; } = null!;

        public ProhibitionsInvokeArgs()
        {
        }
        public static new ProhibitionsInvokeArgs Empty => new ProhibitionsInvokeArgs();
    }


    [OutputType]
    public sealed class ProhibitionsResult
    {
        public readonly int EndTime;
        public readonly string Host;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Details of the attack IP.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProhibitionsIpAggGroupResult> IpAggGroups;
        public readonly string? LetterOrderBy;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// Reason for the ban.
        /// </summary>
        public readonly ImmutableArray<string> Reasons;
        public readonly int StartTime;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private ProhibitionsResult(
            int endTime,

            string host,

            string id,

            ImmutableArray<Outputs.ProhibitionsIpAggGroupResult> ipAggGroups,

            string? letterOrderBy,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<string> reasons,

            int startTime,

            int totalCount)
        {
            EndTime = endTime;
            Host = host;
            Id = id;
            IpAggGroups = ipAggGroups;
            LetterOrderBy = letterOrderBy;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Reasons = reasons;
            StartTime = startTime;
            TotalCount = totalCount;
        }
    }
}
