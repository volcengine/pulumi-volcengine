// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    /// <summary>
    /// Provides a resource to manage waf host group
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Waf.HostGroup("foo", new()
    ///     {
    ///         Description = "tf-test",
    ///         HostLists = new[]
    ///         {
    ///             "www.tf-test.com",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WafHostGroup can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:waf/hostGroup:HostGroup default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:waf/hostGroup:HostGroup")]
    public partial class HostGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Domain name list modification action. Works only on modified scenes.
        /// </summary>
        [Output("action")]
        public Output<string?> Action { get; private set; } = null!;

        /// <summary>
        /// Domain name group description.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The number of domain names contained in the domain name group.
        /// </summary>
        [Output("hostCount")]
        public Output<int> HostCount { get; private set; } = null!;

        /// <summary>
        /// The ID of the domain name group.
        /// </summary>
        [Output("hostGroupId")]
        public Output<int> HostGroupId { get; private set; } = null!;

        /// <summary>
        /// Domain names that need to be added to this domain name group.
        /// </summary>
        [Output("hostLists")]
        public Output<ImmutableArray<string>> HostLists { get; private set; } = null!;

        /// <summary>
        /// The name of the domain name group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The project of Domain name group.
        /// </summary>
        [Output("projectName")]
        public Output<string?> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The list of associated rules.
        /// </summary>
        [Output("relatedRules")]
        public Output<ImmutableArray<Outputs.HostGroupRelatedRule>> RelatedRules { get; private set; } = null!;

        /// <summary>
        /// Domain name group update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a HostGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HostGroup(string name, HostGroupArgs args, CustomResourceOptions? options = null)
            : base("volcengine:waf/hostGroup:HostGroup", name, args ?? new HostGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HostGroup(string name, Input<string> id, HostGroupState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:waf/hostGroup:HostGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HostGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HostGroup Get(string name, Input<string> id, HostGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new HostGroup(name, id, state, options);
        }
    }

    public sealed class HostGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain name list modification action. Works only on modified scenes.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Domain name group description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hostLists", required: true)]
        private InputList<string>? _hostLists;

        /// <summary>
        /// Domain names that need to be added to this domain name group.
        /// </summary>
        public InputList<string> HostLists
        {
            get => _hostLists ?? (_hostLists = new InputList<string>());
            set => _hostLists = value;
        }

        /// <summary>
        /// The name of the domain name group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project of Domain name group.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        public HostGroupArgs()
        {
        }
        public static new HostGroupArgs Empty => new HostGroupArgs();
    }

    public sealed class HostGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain name list modification action. Works only on modified scenes.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Domain name group description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The number of domain names contained in the domain name group.
        /// </summary>
        [Input("hostCount")]
        public Input<int>? HostCount { get; set; }

        /// <summary>
        /// The ID of the domain name group.
        /// </summary>
        [Input("hostGroupId")]
        public Input<int>? HostGroupId { get; set; }

        [Input("hostLists")]
        private InputList<string>? _hostLists;

        /// <summary>
        /// Domain names that need to be added to this domain name group.
        /// </summary>
        public InputList<string> HostLists
        {
            get => _hostLists ?? (_hostLists = new InputList<string>());
            set => _hostLists = value;
        }

        /// <summary>
        /// The name of the domain name group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project of Domain name group.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("relatedRules")]
        private InputList<Inputs.HostGroupRelatedRuleGetArgs>? _relatedRules;

        /// <summary>
        /// The list of associated rules.
        /// </summary>
        public InputList<Inputs.HostGroupRelatedRuleGetArgs> RelatedRules
        {
            get => _relatedRules ?? (_relatedRules = new InputList<Inputs.HostGroupRelatedRuleGetArgs>());
            set => _relatedRules = value;
        }

        /// <summary>
        /// Domain name group update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public HostGroupState()
        {
        }
        public static new HostGroupState Empty => new HostGroupState();
    }
}
