// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Waf
{
    [Obsolete(@"volcengine.waf.BotAnalyseProtectRules has been deprecated in favor of volcengine.waf.getBotAnalyseProtectRules")]
    public static class BotAnalyseProtectRules
    {
        /// <summary>
        /// Use this data source to query detailed information of waf bot analyse protect rules
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Waf.GetBotAnalyseProtectRules.Invoke(new()
        ///     {
        ///         BotSpace = "BotRepeat",
        ///         Host = "www.tf-test.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<BotAnalyseProtectRulesResult> InvokeAsync(BotAnalyseProtectRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<BotAnalyseProtectRulesResult>("volcengine:waf/botAnalyseProtectRules:BotAnalyseProtectRules", args ?? new BotAnalyseProtectRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of waf bot analyse protect rules
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Waf.GetBotAnalyseProtectRules.Invoke(new()
        ///     {
        ///         BotSpace = "BotRepeat",
        ///         Host = "www.tf-test.com",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<BotAnalyseProtectRulesResult> Invoke(BotAnalyseProtectRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<BotAnalyseProtectRulesResult>("volcengine:waf/botAnalyseProtectRules:BotAnalyseProtectRules", args ?? new BotAnalyseProtectRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class BotAnalyseProtectRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Bot protection rule type.
        /// </summary>
        [Input("botSpace", required: true)]
        public string BotSpace { get; set; } = null!;

        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        [Input("host", required: true)]
        public string Host { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Protective path.
        /// </summary>
        [Input("path")]
        public string? Path { get; set; }

        /// <summary>
        /// The name of the project to which your domain names belong.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        /// <summary>
        /// Unique identification of rules.
        /// </summary>
        [Input("ruleTag")]
        public string? RuleTag { get; set; }

        public BotAnalyseProtectRulesArgs()
        {
        }
        public static new BotAnalyseProtectRulesArgs Empty => new BotAnalyseProtectRulesArgs();
    }

    public sealed class BotAnalyseProtectRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Bot protection rule type.
        /// </summary>
        [Input("botSpace", required: true)]
        public Input<string> BotSpace { get; set; } = null!;

        /// <summary>
        /// Website domain names that require the setting of protection rules.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A Name Regex of Resource.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Protective path.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The name of the project to which your domain names belong.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// Unique identification of rules.
        /// </summary>
        [Input("ruleTag")]
        public Input<string>? RuleTag { get; set; }

        public BotAnalyseProtectRulesInvokeArgs()
        {
        }
        public static new BotAnalyseProtectRulesInvokeArgs Empty => new BotAnalyseProtectRulesInvokeArgs();
    }


    [OutputType]
    public sealed class BotAnalyseProtectRulesResult
    {
        public readonly string BotSpace;
        /// <summary>
        /// The details of the Bot rules.
        /// </summary>
        public readonly ImmutableArray<Outputs.BotAnalyseProtectRulesDataResult> Datas;
        /// <summary>
        /// The domain name where the protection rule is located.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of rule.
        /// </summary>
        public readonly string? Name;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// Request path.
        /// </summary>
        public readonly string? Path;
        public readonly string? ProjectName;
        /// <summary>
        /// Rule label, that is, the complete rule ID.
        /// </summary>
        public readonly string? RuleTag;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private BotAnalyseProtectRulesResult(
            string botSpace,

            ImmutableArray<Outputs.BotAnalyseProtectRulesDataResult> datas,

            string host,

            string id,

            string? name,

            string? nameRegex,

            string? outputFile,

            string? path,

            string? projectName,

            string? ruleTag,

            int totalCount)
        {
            BotSpace = botSpace;
            Datas = datas;
            Host = host;
            Id = id;
            Name = name;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Path = path;
            ProjectName = projectName;
            RuleTag = ruleTag;
            TotalCount = totalCount;
        }
    }
}
