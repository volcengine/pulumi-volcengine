// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Nas
{
    /// <summary>
    /// Provides a resource to manage nas permission group
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Nas.PermissionGroup("foo", new()
    ///     {
    ///         Description = "acctest1",
    ///         PermissionGroupName = "acc-test1",
    ///         PermissionRules = new[]
    ///         {
    ///             new Volcengine.Nas.Inputs.PermissionGroupPermissionRuleArgs
    ///             {
    ///                 CidrIp = "*",
    ///                 RwMode = "RW",
    ///                 UseMode = "All_squash",
    ///             },
    ///             new Volcengine.Nas.Inputs.PermissionGroupPermissionRuleArgs
    ///             {
    ///                 CidrIp = "192.168.0.0",
    ///                 RwMode = "RO",
    ///                 UseMode = "No_all_squash",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Nas Permission Group can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:nas/permissionGroup:PermissionGroup default pgroup-1f85db2c****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:nas/permissionGroup:PermissionGroup")]
    public partial class PermissionGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the permission group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The id of the permission group.
        /// </summary>
        [Output("permissionGroupId")]
        public Output<string> PermissionGroupId { get; private set; } = null!;

        /// <summary>
        /// The name of the permission group.
        /// </summary>
        [Output("permissionGroupName")]
        public Output<string> PermissionGroupName { get; private set; } = null!;

        /// <summary>
        /// The list of permissions rules.
        /// </summary>
        [Output("permissionRules")]
        public Output<ImmutableArray<Outputs.PermissionGroupPermissionRule>> PermissionRules { get; private set; } = null!;


        /// <summary>
        /// Create a PermissionGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PermissionGroup(string name, PermissionGroupArgs args, CustomResourceOptions? options = null)
            : base("volcengine:nas/permissionGroup:PermissionGroup", name, args ?? new PermissionGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PermissionGroup(string name, Input<string> id, PermissionGroupState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:nas/permissionGroup:PermissionGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PermissionGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PermissionGroup Get(string name, Input<string> id, PermissionGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new PermissionGroup(name, id, state, options);
        }
    }

    public sealed class PermissionGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the permission group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the permission group.
        /// </summary>
        [Input("permissionGroupName", required: true)]
        public Input<string> PermissionGroupName { get; set; } = null!;

        [Input("permissionRules")]
        private InputList<Inputs.PermissionGroupPermissionRuleArgs>? _permissionRules;

        /// <summary>
        /// The list of permissions rules.
        /// </summary>
        public InputList<Inputs.PermissionGroupPermissionRuleArgs> PermissionRules
        {
            get => _permissionRules ?? (_permissionRules = new InputList<Inputs.PermissionGroupPermissionRuleArgs>());
            set => _permissionRules = value;
        }

        public PermissionGroupArgs()
        {
        }
        public static new PermissionGroupArgs Empty => new PermissionGroupArgs();
    }

    public sealed class PermissionGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the permission group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The id of the permission group.
        /// </summary>
        [Input("permissionGroupId")]
        public Input<string>? PermissionGroupId { get; set; }

        /// <summary>
        /// The name of the permission group.
        /// </summary>
        [Input("permissionGroupName")]
        public Input<string>? PermissionGroupName { get; set; }

        [Input("permissionRules")]
        private InputList<Inputs.PermissionGroupPermissionRuleGetArgs>? _permissionRules;

        /// <summary>
        /// The list of permissions rules.
        /// </summary>
        public InputList<Inputs.PermissionGroupPermissionRuleGetArgs> PermissionRules
        {
            get => _permissionRules ?? (_permissionRules = new InputList<Inputs.PermissionGroupPermissionRuleGetArgs>());
            set => _permissionRules = value;
        }

        public PermissionGroupState()
        {
        }
        public static new PermissionGroupState Empty => new PermissionGroupState();
    }
}
