// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Nas
{
    /// <summary>
    /// Provides a resource to manage nas mount point
    /// ## Import
    /// 
    /// Nas Mount Point can be imported using the file system id and mount point id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:nas/mountPoint:MountPoint default enas-cnbj18bcb923****:mount-a6ee****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:nas/mountPoint:MountPoint")]
    public partial class MountPoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The file system id.
        /// </summary>
        [Output("fileSystemId")]
        public Output<string> FileSystemId { get; private set; } = null!;

        /// <summary>
        /// The mount point id.
        /// </summary>
        [Output("mountPointId")]
        public Output<string> MountPointId { get; private set; } = null!;

        /// <summary>
        /// The mount point name.
        /// </summary>
        [Output("mountPointName")]
        public Output<string> MountPointName { get; private set; } = null!;

        /// <summary>
        /// The permission group id.
        /// </summary>
        [Output("permissionGroupId")]
        public Output<string> PermissionGroupId { get; private set; } = null!;

        /// <summary>
        /// The subnet id.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;


        /// <summary>
        /// Create a MountPoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MountPoint(string name, MountPointArgs args, CustomResourceOptions? options = null)
            : base("volcengine:nas/mountPoint:MountPoint", name, args ?? new MountPointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MountPoint(string name, Input<string> id, MountPointState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:nas/mountPoint:MountPoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MountPoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MountPoint Get(string name, Input<string> id, MountPointState? state = null, CustomResourceOptions? options = null)
        {
            return new MountPoint(name, id, state, options);
        }
    }

    public sealed class MountPointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The file system id.
        /// </summary>
        [Input("fileSystemId", required: true)]
        public Input<string> FileSystemId { get; set; } = null!;

        /// <summary>
        /// The mount point name.
        /// </summary>
        [Input("mountPointName", required: true)]
        public Input<string> MountPointName { get; set; } = null!;

        /// <summary>
        /// The permission group id.
        /// </summary>
        [Input("permissionGroupId", required: true)]
        public Input<string> PermissionGroupId { get; set; } = null!;

        /// <summary>
        /// The subnet id.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public MountPointArgs()
        {
        }
        public static new MountPointArgs Empty => new MountPointArgs();
    }

    public sealed class MountPointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The file system id.
        /// </summary>
        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        /// <summary>
        /// The mount point id.
        /// </summary>
        [Input("mountPointId")]
        public Input<string>? MountPointId { get; set; }

        /// <summary>
        /// The mount point name.
        /// </summary>
        [Input("mountPointName")]
        public Input<string>? MountPointName { get; set; }

        /// <summary>
        /// The permission group id.
        /// </summary>
        [Input("permissionGroupId")]
        public Input<string>? PermissionGroupId { get; set; }

        /// <summary>
        /// The subnet id.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public MountPointState()
        {
        }
        public static new MountPointState Empty => new MountPointState();
    }
}
