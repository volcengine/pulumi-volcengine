// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_firewall
{
    /// <summary>
    /// Provides a resource to manage cfw nat firewall control policy
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooCfwAddressBook = new Volcengine.Cloud_firewall.CfwAddressBook("fooCfwAddressBook", new()
    ///     {
    ///         GroupName = "acc-test-address-book",
    ///         Description = "acc-test",
    ///         GroupType = "ip",
    ///         AddressLists = new[]
    ///         {
    ///             "192.168.1.1",
    ///             "192.168.2.2",
    ///         },
    ///     });
    /// 
    ///     var fooCfwNatFirewallControlPolicy = new Volcengine.Cloud_firewall.CfwNatFirewallControlPolicy("fooCfwNatFirewallControlPolicy", new()
    ///     {
    ///         Direction = "in",
    ///         NatFirewallId = "nfw-ydmkayvjsw2vsavx****",
    ///         Action = "accept",
    ///         DestinationType = "group",
    ///         Destination = fooCfwAddressBook.Id,
    ///         Proto = "TCP",
    ///         SourceType = "net",
    ///         Source = "0.0.0.0/0",
    ///         Description = "acc-test-control-policy",
    ///         DestPortType = "port",
    ///         DestPort = "300",
    ///         RepeatType = "Weekly",
    ///         RepeatStartTime = "01:00",
    ///         RepeatEndTime = "11:00",
    ///         RepeatDays = new[]
    ///         {
    ///             2,
    ///             5,
    ///             4,
    ///         },
    ///         StartTime = 1736092800,
    ///         EndTime = 1738339140,
    ///         Priority = 1,
    ///         Status = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// NatFirewallControlPolicy can be imported using the direction_nat_firewall_id:rule_id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:cloud_firewall/cfwNatFirewallControlPolicy:CfwNatFirewallControlPolicy default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:cloud_firewall/cfwNatFirewallControlPolicy:CfwNatFirewallControlPolicy")]
    public partial class CfwNatFirewallControlPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account id of the nat firewall control policy.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// The description of the nat firewall control policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The dest port of the nat firewall control policy.
        /// </summary>
        [Output("destPort")]
        public Output<string> DestPort { get; private set; } = null!;

        /// <summary>
        /// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
        /// </summary>
        [Output("destPortType")]
        public Output<string> DestPortType { get; private set; } = null!;

        /// <summary>
        /// The destination of the nat firewall control policy.
        /// </summary>
        [Output("destination")]
        public Output<string> Destination { get; private set; } = null!;

        /// <summary>
        /// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
        /// </summary>
        [Output("destinationType")]
        public Output<string> DestinationType { get; private set; } = null!;

        /// <summary>
        /// The direction of the nat firewall control policy. Valid values: `in`, `out`.
        /// </summary>
        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        /// <summary>
        /// The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        /// </summary>
        [Output("effectStatus")]
        public Output<int> EffectStatus { get; private set; } = null!;

        /// <summary>
        /// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
        /// When the value of repeat_type is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Output("endTime")]
        public Output<int?> EndTime { get; private set; } = null!;

        /// <summary>
        /// The hit count of the nat firewall control policy.
        /// </summary>
        [Output("hitCnt")]
        public Output<int> HitCnt { get; private set; } = null!;

        /// <summary>
        /// Whether the nat firewall control policy is effected.
        /// </summary>
        [Output("isEffected")]
        public Output<bool> IsEffected { get; private set; } = null!;

        /// <summary>
        /// The id of the nat firewall.
        /// </summary>
        [Output("natFirewallId")]
        public Output<string> NatFirewallId { get; private set; } = null!;

        /// <summary>
        /// The name of the nat firewall.
        /// </summary>
        [Output("natFirewallName")]
        public Output<string> NatFirewallName { get; private set; } = null!;

        /// <summary>
        /// The priority of the nat firewall control policy.
        /// </summary>
        [Output("prio")]
        public Output<int> Prio { get; private set; } = null!;

        /// <summary>
        /// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        /// </summary>
        [Output("proto")]
        public Output<string> Proto { get; private set; } = null!;

        /// <summary>
        /// The repeat days of the nat firewall control policy. When the value of repeat_type is one of `Weekly`, `Monthly`, this field is required.
        /// When the repeat_type is `Weekly`, the valid value range is 0~6.
        /// When the repeat_type is `Monthly`, the valid value range is 1~31.
        /// </summary>
        [Output("repeatDays")]
        public Output<ImmutableArray<int>> RepeatDays { get; private set; } = null!;

        /// <summary>
        /// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
        /// When the value of repeat_type is one of `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Output("repeatEndTime")]
        public Output<string?> RepeatEndTime { get; private set; } = null!;

        /// <summary>
        /// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
        /// When the value of repeat_type is one of `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Output("repeatStartTime")]
        public Output<string?> RepeatStartTime { get; private set; } = null!;

        /// <summary>
        /// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        /// </summary>
        [Output("repeatType")]
        public Output<string> RepeatType { get; private set; } = null!;

        /// <summary>
        /// The rule id of the nat firewall control policy.
        /// </summary>
        [Output("ruleId")]
        public Output<string> RuleId { get; private set; } = null!;

        /// <summary>
        /// The source of the nat firewall control policy.
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// The source type of the nat firewall control policy. Valid values: `net`, `group`.
        /// </summary>
        [Output("sourceType")]
        public Output<string> SourceType { get; private set; } = null!;

        /// <summary>
        /// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
        /// When the value of repeat_type is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Output("startTime")]
        public Output<int?> StartTime { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the nat firewall control policy. Default is false.
        /// </summary>
        [Output("status")]
        public Output<bool> Status { get; private set; } = null!;

        /// <summary>
        /// The update time of the nat firewall control policy.
        /// </summary>
        [Output("updateTime")]
        public Output<int> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The use count of the nat firewall control policy.
        /// </summary>
        [Output("useCount")]
        public Output<int> UseCount { get; private set; } = null!;


        /// <summary>
        /// Create a CfwNatFirewallControlPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CfwNatFirewallControlPolicy(string name, CfwNatFirewallControlPolicyArgs args, CustomResourceOptions? options = null)
            : base("volcengine:cloud_firewall/cfwNatFirewallControlPolicy:CfwNatFirewallControlPolicy", name, args ?? new CfwNatFirewallControlPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CfwNatFirewallControlPolicy(string name, Input<string> id, CfwNatFirewallControlPolicyState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:cloud_firewall/cfwNatFirewallControlPolicy:CfwNatFirewallControlPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CfwNatFirewallControlPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CfwNatFirewallControlPolicy Get(string name, Input<string> id, CfwNatFirewallControlPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new CfwNatFirewallControlPolicy(name, id, state, options);
        }
    }

    public sealed class CfwNatFirewallControlPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// The description of the nat firewall control policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The dest port of the nat firewall control policy.
        /// </summary>
        [Input("destPort")]
        public Input<string>? DestPort { get; set; }

        /// <summary>
        /// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
        /// </summary>
        [Input("destPortType")]
        public Input<string>? DestPortType { get; set; }

        /// <summary>
        /// The destination of the nat firewall control policy.
        /// </summary>
        [Input("destination", required: true)]
        public Input<string> Destination { get; set; } = null!;

        /// <summary>
        /// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
        /// </summary>
        [Input("destinationType", required: true)]
        public Input<string> DestinationType { get; set; } = null!;

        /// <summary>
        /// The direction of the nat firewall control policy. Valid values: `in`, `out`.
        /// </summary>
        [Input("direction", required: true)]
        public Input<string> Direction { get; set; } = null!;

        /// <summary>
        /// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
        /// When the value of repeat_type is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Input("endTime")]
        public Input<int>? EndTime { get; set; }

        /// <summary>
        /// The id of the nat firewall.
        /// </summary>
        [Input("natFirewallId", required: true)]
        public Input<string> NatFirewallId { get; set; } = null!;

        /// <summary>
        /// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        /// </summary>
        [Input("proto", required: true)]
        public Input<string> Proto { get; set; } = null!;

        [Input("repeatDays")]
        private InputList<int>? _repeatDays;

        /// <summary>
        /// The repeat days of the nat firewall control policy. When the value of repeat_type is one of `Weekly`, `Monthly`, this field is required.
        /// When the repeat_type is `Weekly`, the valid value range is 0~6.
        /// When the repeat_type is `Monthly`, the valid value range is 1~31.
        /// </summary>
        public InputList<int> RepeatDays
        {
            get => _repeatDays ?? (_repeatDays = new InputList<int>());
            set => _repeatDays = value;
        }

        /// <summary>
        /// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
        /// When the value of repeat_type is one of `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Input("repeatEndTime")]
        public Input<string>? RepeatEndTime { get; set; }

        /// <summary>
        /// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
        /// When the value of repeat_type is one of `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Input("repeatStartTime")]
        public Input<string>? RepeatStartTime { get; set; }

        /// <summary>
        /// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        /// </summary>
        [Input("repeatType")]
        public Input<string>? RepeatType { get; set; }

        /// <summary>
        /// The source of the nat firewall control policy.
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        /// <summary>
        /// The source type of the nat firewall control policy. Valid values: `net`, `group`.
        /// </summary>
        [Input("sourceType", required: true)]
        public Input<string> SourceType { get; set; } = null!;

        /// <summary>
        /// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
        /// When the value of repeat_type is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        /// <summary>
        /// Whether to enable the nat firewall control policy. Default is false.
        /// </summary>
        [Input("status")]
        public Input<bool>? Status { get; set; }

        public CfwNatFirewallControlPolicyArgs()
        {
        }
        public static new CfwNatFirewallControlPolicyArgs Empty => new CfwNatFirewallControlPolicyArgs();
    }

    public sealed class CfwNatFirewallControlPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account id of the nat firewall control policy.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The action of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The description of the nat firewall control policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The dest port of the nat firewall control policy.
        /// </summary>
        [Input("destPort")]
        public Input<string>? DestPort { get; set; }

        /// <summary>
        /// The dest port type of the nat firewall control policy. Valid values: `port`, `group`.
        /// </summary>
        [Input("destPortType")]
        public Input<string>? DestPortType { get; set; }

        /// <summary>
        /// The destination of the nat firewall control policy.
        /// </summary>
        [Input("destination")]
        public Input<string>? Destination { get; set; }

        /// <summary>
        /// The destination type of the nat firewall control policy. Valid values: `net`, `group`, `location`, `domain`.
        /// </summary>
        [Input("destinationType")]
        public Input<string>? DestinationType { get; set; }

        /// <summary>
        /// The direction of the nat firewall control policy. Valid values: `in`, `out`.
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        /// </summary>
        [Input("effectStatus")]
        public Input<int>? EffectStatus { get; set; }

        /// <summary>
        /// The end time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
        /// When the value of repeat_type is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Input("endTime")]
        public Input<int>? EndTime { get; set; }

        /// <summary>
        /// The hit count of the nat firewall control policy.
        /// </summary>
        [Input("hitCnt")]
        public Input<int>? HitCnt { get; set; }

        /// <summary>
        /// Whether the nat firewall control policy is effected.
        /// </summary>
        [Input("isEffected")]
        public Input<bool>? IsEffected { get; set; }

        /// <summary>
        /// The id of the nat firewall.
        /// </summary>
        [Input("natFirewallId")]
        public Input<string>? NatFirewallId { get; set; }

        /// <summary>
        /// The name of the nat firewall.
        /// </summary>
        [Input("natFirewallName")]
        public Input<string>? NatFirewallName { get; set; }

        /// <summary>
        /// The priority of the nat firewall control policy.
        /// </summary>
        [Input("prio")]
        public Input<int>? Prio { get; set; }

        /// <summary>
        /// The priority of the nat firewall control policy. Default is 0. This field is only effective when creating a control policy.0 means lowest priority, 1 means highest priority. The priority increases in order from 1, with lower priority indicating higher priority.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The proto of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        /// </summary>
        [Input("proto")]
        public Input<string>? Proto { get; set; }

        [Input("repeatDays")]
        private InputList<int>? _repeatDays;

        /// <summary>
        /// The repeat days of the nat firewall control policy. When the value of repeat_type is one of `Weekly`, `Monthly`, this field is required.
        /// When the repeat_type is `Weekly`, the valid value range is 0~6.
        /// When the repeat_type is `Monthly`, the valid value range is 1~31.
        /// </summary>
        public InputList<int> RepeatDays
        {
            get => _repeatDays ?? (_repeatDays = new InputList<int>());
            set => _repeatDays = value;
        }

        /// <summary>
        /// The repeat end time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
        /// When the value of repeat_type is one of `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Input("repeatEndTime")]
        public Input<string>? RepeatEndTime { get; set; }

        /// <summary>
        /// The repeat start time of the nat firewall control policy. Accurate to the minute, in the format of hh: mm. For example: 12:00.
        /// When the value of repeat_type is one of `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Input("repeatStartTime")]
        public Input<string>? RepeatStartTime { get; set; }

        /// <summary>
        /// The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        /// </summary>
        [Input("repeatType")]
        public Input<string>? RepeatType { get; set; }

        /// <summary>
        /// The rule id of the nat firewall control policy.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// The source of the nat firewall control policy.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// The source type of the nat firewall control policy. Valid values: `net`, `group`.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// The start time of the nat firewall control policy. Unix timestamp, fields need to be precise to 23:59:00 of the set date.
        /// When the value of repeat_type is one of `Once`, `Daily`, `Weekly`, `Monthly`, this field is required.
        /// </summary>
        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        /// <summary>
        /// Whether to enable the nat firewall control policy. Default is false.
        /// </summary>
        [Input("status")]
        public Input<bool>? Status { get; set; }

        /// <summary>
        /// The update time of the nat firewall control policy.
        /// </summary>
        [Input("updateTime")]
        public Input<int>? UpdateTime { get; set; }

        /// <summary>
        /// The use count of the nat firewall control policy.
        /// </summary>
        [Input("useCount")]
        public Input<int>? UseCount { get; set; }

        public CfwNatFirewallControlPolicyState()
        {
        }
        public static new CfwNatFirewallControlPolicyState Empty => new CfwNatFirewallControlPolicyState();
    }
}
