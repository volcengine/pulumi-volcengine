// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Cloud_firewall
{
    public static class CfwDnsControlPolicies
    {
        /// <summary>
        /// Use this data source to query detailed information of cfw dns control policies
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
        ///     {
        ///         VpcName = "acc-test-vpc",
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var fooCfwDnsControlPolicy = new Volcengine.Cloud_firewall.CfwDnsControlPolicy("fooCfwDnsControlPolicy", new()
        ///     {
        ///         Description = "acc-test-dns-control-policy",
        ///         DestinationType = "domain",
        ///         Destination = "www.test.com",
        ///         Sources = new[]
        ///         {
        ///             new Volcengine.Cloud_firewall.Inputs.CfwDnsControlPolicySourceArgs
        ///             {
        ///                 VpcId = fooVpc.Id,
        ///                 Region = "cn-beijing",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooCfwDnsControlPolicies = Volcengine.Cloud_firewall.CfwDnsControlPolicies.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooCfwDnsControlPolicy.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<CfwDnsControlPoliciesResult> InvokeAsync(CfwDnsControlPoliciesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<CfwDnsControlPoliciesResult>("volcengine:cloud_firewall/cfwDnsControlPolicies:CfwDnsControlPolicies", args ?? new CfwDnsControlPoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of cfw dns control policies
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
        ///     {
        ///         VpcName = "acc-test-vpc",
        ///         CidrBlock = "172.16.0.0/16",
        ///     });
        /// 
        ///     var fooCfwDnsControlPolicy = new Volcengine.Cloud_firewall.CfwDnsControlPolicy("fooCfwDnsControlPolicy", new()
        ///     {
        ///         Description = "acc-test-dns-control-policy",
        ///         DestinationType = "domain",
        ///         Destination = "www.test.com",
        ///         Sources = new[]
        ///         {
        ///             new Volcengine.Cloud_firewall.Inputs.CfwDnsControlPolicySourceArgs
        ///             {
        ///                 VpcId = fooVpc.Id,
        ///                 Region = "cn-beijing",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var fooCfwDnsControlPolicies = Volcengine.Cloud_firewall.CfwDnsControlPolicies.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             fooCfwDnsControlPolicy.Id,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<CfwDnsControlPoliciesResult> Invoke(CfwDnsControlPoliciesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<CfwDnsControlPoliciesResult>("volcengine:cloud_firewall/cfwDnsControlPolicies:CfwDnsControlPolicies", args ?? new CfwDnsControlPoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class CfwDnsControlPoliciesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The description of the dns control policy. This field support fuzzy query.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        [Input("destinations")]
        private List<string>? _destinations;

        /// <summary>
        /// The destination list of the dns control policy. This field support fuzzy query.
        /// </summary>
        public List<string> Destinations
        {
            get => _destinations ?? (_destinations = new List<string>());
            set => _destinations = value;
        }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// The rule id list of the dns control policy. This field support fuzzy query.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The internet firewall id of the dns control policy.
        /// </summary>
        [Input("internetFirewallId")]
        public string? InternetFirewallId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("sources")]
        private List<string>? _sources;

        /// <summary>
        /// The source list of the dns control policy. This field support fuzzy query.
        /// </summary>
        public List<string> Sources
        {
            get => _sources ?? (_sources = new List<string>());
            set => _sources = value;
        }

        [Input("statuses")]
        private List<bool>? _statuses;

        /// <summary>
        /// The enable status list of the dns control policy. This field support fuzzy query.
        /// </summary>
        public List<bool> Statuses
        {
            get => _statuses ?? (_statuses = new List<bool>());
            set => _statuses = value;
        }

        public CfwDnsControlPoliciesArgs()
        {
        }
        public static new CfwDnsControlPoliciesArgs Empty => new CfwDnsControlPoliciesArgs();
    }

    public sealed class CfwDnsControlPoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The description of the dns control policy. This field support fuzzy query.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinations")]
        private InputList<string>? _destinations;

        /// <summary>
        /// The destination list of the dns control policy. This field support fuzzy query.
        /// </summary>
        public InputList<string> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<string>());
            set => _destinations = value;
        }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The rule id list of the dns control policy. This field support fuzzy query.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The internet firewall id of the dns control policy.
        /// </summary>
        [Input("internetFirewallId")]
        public Input<string>? InternetFirewallId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("sources")]
        private InputList<string>? _sources;

        /// <summary>
        /// The source list of the dns control policy. This field support fuzzy query.
        /// </summary>
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        [Input("statuses")]
        private InputList<bool>? _statuses;

        /// <summary>
        /// The enable status list of the dns control policy. This field support fuzzy query.
        /// </summary>
        public InputList<bool> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<bool>());
            set => _statuses = value;
        }

        public CfwDnsControlPoliciesInvokeArgs()
        {
        }
        public static new CfwDnsControlPoliciesInvokeArgs Empty => new CfwDnsControlPoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class CfwDnsControlPoliciesResult
    {
        /// <summary>
        /// The description of the dns control policy.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The destination of the dns control policy.
        /// </summary>
        public readonly ImmutableArray<string> Destinations;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.CfwDnsControlPoliciesDnsControlPolicyResult> DnsControlPolicies;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? InternetFirewallId;
        public readonly string? OutputFile;
        /// <summary>
        /// The source vpc list of the dns control policy.
        /// </summary>
        public readonly ImmutableArray<string> Sources;
        /// <summary>
        /// Whether to enable the dns control policy.
        /// </summary>
        public readonly ImmutableArray<bool> Statuses;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private CfwDnsControlPoliciesResult(
            string? description,

            ImmutableArray<string> destinations,

            ImmutableArray<Outputs.CfwDnsControlPoliciesDnsControlPolicyResult> dnsControlPolicies,

            string id,

            ImmutableArray<string> ids,

            string? internetFirewallId,

            string? outputFile,

            ImmutableArray<string> sources,

            ImmutableArray<bool> statuses,

            int totalCount)
        {
            Description = description;
            Destinations = destinations;
            DnsControlPolicies = dnsControlPolicies;
            Id = id;
            Ids = ids;
            InternetFirewallId = internetFirewallId;
            OutputFile = outputFile;
            Sources = sources;
            Statuses = statuses;
            TotalCount = totalCount;
        }
    }
}
