// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Direct_connect
{
    /// <summary>
    /// Provides a resource to manage direct connect connection
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Direct_connect.Connection("foo", new()
    ///     {
    ///         Bandwidth = 1000,
    ///         CustomerContactEmail = "email@aaa.com",
    ///         CustomerContactPhone = "12345678911",
    ///         CustomerName = "tf-a",
    ///         Description = "tf-test",
    ///         DirectConnectAccessPointId = "ap-cn-beijing-a",
    ///         DirectConnectConnectionName = "tf-test-connection",
    ///         LineOperator = "ChinaOther",
    ///         PeerLocation = "XX路XX号XX楼XX机房",
    ///         PortSpec = "10G",
    ///         PortType = "10GBase",
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Direct_connect.Inputs.ConnectionTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DirectConnectConnection can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:direct_connect/connection:Connection default dcc-7qthudw0ll6jmc****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:direct_connect/connection:Connection")]
    public partial class Connection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The line band width,unit:Mbps.
        /// </summary>
        [Output("bandwidth")]
        public Output<int> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// The dedicated line contact email.
        /// </summary>
        [Output("customerContactEmail")]
        public Output<string> CustomerContactEmail { get; private set; } = null!;

        /// <summary>
        /// The dedicated line contact phone.
        /// </summary>
        [Output("customerContactPhone")]
        public Output<string> CustomerContactPhone { get; private set; } = null!;

        /// <summary>
        /// The dedicated line contact name.
        /// </summary>
        [Output("customerName")]
        public Output<string> CustomerName { get; private set; } = null!;

        /// <summary>
        /// The description of direct connect.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The direct connect access point id.
        /// </summary>
        [Output("directConnectAccessPointId")]
        public Output<string> DirectConnectAccessPointId { get; private set; } = null!;

        /// <summary>
        /// The name of direct connect.
        /// </summary>
        [Output("directConnectConnectionName")]
        public Output<string> DirectConnectConnectionName { get; private set; } = null!;

        /// <summary>
        /// The physical leased line operator.valid value contains `ChinaTelecom`,`ChinaMobile`,`ChinaUnicom`,`ChinaOther`.
        /// </summary>
        [Output("lineOperator")]
        public Output<string> LineOperator { get; private set; } = null!;

        /// <summary>
        /// The local IDC address.
        /// </summary>
        [Output("peerLocation")]
        public Output<string> PeerLocation { get; private set; } = null!;

        /// <summary>
        /// The physical leased line port spec.valid value contains `1G`,`10G`.
        /// </summary>
        [Output("portSpec")]
        public Output<string> PortSpec { get; private set; } = null!;

        /// <summary>
        /// The physical leased line port type and spec.valid value contains `1000Base-T`,`10GBase-T`,`1000Base`,`10GBase`,`40GBase`,`100GBase`.
        /// </summary>
        [Output("portType")]
        public Output<string> PortType { get; private set; } = null!;

        /// <summary>
        /// The physical leased line tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.ConnectionTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Connection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Connection(string name, ConnectionArgs args, CustomResourceOptions? options = null)
            : base("volcengine:direct_connect/connection:Connection", name, args ?? new ConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Connection(string name, Input<string> id, ConnectionState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:direct_connect/connection:Connection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Connection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Connection Get(string name, Input<string> id, ConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new Connection(name, id, state, options);
        }
    }

    public sealed class ConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The line band width,unit:Mbps.
        /// </summary>
        [Input("bandwidth", required: true)]
        public Input<int> Bandwidth { get; set; } = null!;

        /// <summary>
        /// The dedicated line contact email.
        /// </summary>
        [Input("customerContactEmail", required: true)]
        public Input<string> CustomerContactEmail { get; set; } = null!;

        /// <summary>
        /// The dedicated line contact phone.
        /// </summary>
        [Input("customerContactPhone", required: true)]
        public Input<string> CustomerContactPhone { get; set; } = null!;

        /// <summary>
        /// The dedicated line contact name.
        /// </summary>
        [Input("customerName", required: true)]
        public Input<string> CustomerName { get; set; } = null!;

        /// <summary>
        /// The description of direct connect.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The direct connect access point id.
        /// </summary>
        [Input("directConnectAccessPointId", required: true)]
        public Input<string> DirectConnectAccessPointId { get; set; } = null!;

        /// <summary>
        /// The name of direct connect.
        /// </summary>
        [Input("directConnectConnectionName")]
        public Input<string>? DirectConnectConnectionName { get; set; }

        /// <summary>
        /// The physical leased line operator.valid value contains `ChinaTelecom`,`ChinaMobile`,`ChinaUnicom`,`ChinaOther`.
        /// </summary>
        [Input("lineOperator", required: true)]
        public Input<string> LineOperator { get; set; } = null!;

        /// <summary>
        /// The local IDC address.
        /// </summary>
        [Input("peerLocation", required: true)]
        public Input<string> PeerLocation { get; set; } = null!;

        /// <summary>
        /// The physical leased line port spec.valid value contains `1G`,`10G`.
        /// </summary>
        [Input("portSpec", required: true)]
        public Input<string> PortSpec { get; set; } = null!;

        /// <summary>
        /// The physical leased line port type and spec.valid value contains `1000Base-T`,`10GBase-T`,`1000Base`,`10GBase`,`40GBase`,`100GBase`.
        /// </summary>
        [Input("portType", required: true)]
        public Input<string> PortType { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.ConnectionTagArgs>? _tags;

        /// <summary>
        /// The physical leased line tags.
        /// </summary>
        public InputList<Inputs.ConnectionTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ConnectionTagArgs>());
            set => _tags = value;
        }

        public ConnectionArgs()
        {
        }
        public static new ConnectionArgs Empty => new ConnectionArgs();
    }

    public sealed class ConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The line band width,unit:Mbps.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The dedicated line contact email.
        /// </summary>
        [Input("customerContactEmail")]
        public Input<string>? CustomerContactEmail { get; set; }

        /// <summary>
        /// The dedicated line contact phone.
        /// </summary>
        [Input("customerContactPhone")]
        public Input<string>? CustomerContactPhone { get; set; }

        /// <summary>
        /// The dedicated line contact name.
        /// </summary>
        [Input("customerName")]
        public Input<string>? CustomerName { get; set; }

        /// <summary>
        /// The description of direct connect.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The direct connect access point id.
        /// </summary>
        [Input("directConnectAccessPointId")]
        public Input<string>? DirectConnectAccessPointId { get; set; }

        /// <summary>
        /// The name of direct connect.
        /// </summary>
        [Input("directConnectConnectionName")]
        public Input<string>? DirectConnectConnectionName { get; set; }

        /// <summary>
        /// The physical leased line operator.valid value contains `ChinaTelecom`,`ChinaMobile`,`ChinaUnicom`,`ChinaOther`.
        /// </summary>
        [Input("lineOperator")]
        public Input<string>? LineOperator { get; set; }

        /// <summary>
        /// The local IDC address.
        /// </summary>
        [Input("peerLocation")]
        public Input<string>? PeerLocation { get; set; }

        /// <summary>
        /// The physical leased line port spec.valid value contains `1G`,`10G`.
        /// </summary>
        [Input("portSpec")]
        public Input<string>? PortSpec { get; set; }

        /// <summary>
        /// The physical leased line port type and spec.valid value contains `1000Base-T`,`10GBase-T`,`1000Base`,`10GBase`,`40GBase`,`100GBase`.
        /// </summary>
        [Input("portType")]
        public Input<string>? PortType { get; set; }

        [Input("tags")]
        private InputList<Inputs.ConnectionTagGetArgs>? _tags;

        /// <summary>
        /// The physical leased line tags.
        /// </summary>
        public InputList<Inputs.ConnectionTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ConnectionTagGetArgs>());
            set => _tags = value;
        }

        public ConnectionState()
        {
        }
        public static new ConnectionState Empty => new ConnectionState();
    }
}
