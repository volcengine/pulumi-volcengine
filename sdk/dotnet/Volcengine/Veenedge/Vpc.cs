// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Veenedge
{
    /// <summary>
    /// Provides a resource to manage veenedge vpc
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Veenedge.Vpc("foo", new()
    ///     {
    ///         ClusterName = "b****t02",
    ///         VpcName = "tf-test-2",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VPC can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:veenedge/vpc:Vpc default vpc-mizl7m1k
    /// ```
    /// 
    ///  If you need to create a VPC, you need to apply for permission from the administrator in advance. You can only delete the vpc from web consul
    /// </summary>
    [VolcengineResourceType("volcengine:veenedge/vpc:Vpc")]
    public partial class Vpc : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The cidr info.
        /// </summary>
        [Output("cidr")]
        public Output<string?> Cidr { get; private set; } = null!;

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// The description of the VPC.
        /// </summary>
        [Output("desc")]
        public Output<string> Desc { get; private set; } = null!;

        /// <summary>
        /// The name of the VPC.
        /// </summary>
        [Output("vpcName")]
        public Output<string> VpcName { get; private set; } = null!;


        /// <summary>
        /// Create a Vpc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Vpc(string name, VpcArgs args, CustomResourceOptions? options = null)
            : base("volcengine:veenedge/vpc:Vpc", name, args ?? new VpcArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Vpc(string name, Input<string> id, VpcState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:veenedge/vpc:Vpc", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Vpc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Vpc Get(string name, Input<string> id, VpcState? state = null, CustomResourceOptions? options = null)
        {
            return new Vpc(name, id, state, options);
        }
    }

    public sealed class VpcArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cidr info.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The description of the VPC.
        /// </summary>
        [Input("desc", required: true)]
        public Input<string> Desc { get; set; } = null!;

        /// <summary>
        /// The name of the VPC.
        /// </summary>
        [Input("vpcName", required: true)]
        public Input<string> VpcName { get; set; } = null!;

        public VpcArgs()
        {
        }
        public static new VpcArgs Empty => new VpcArgs();
    }

    public sealed class VpcState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cidr info.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// The name of the cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The description of the VPC.
        /// </summary>
        [Input("desc")]
        public Input<string>? Desc { get; set; }

        /// <summary>
        /// The name of the VPC.
        /// </summary>
        [Input("vpcName")]
        public Input<string>? VpcName { get; set; }

        public VpcState()
        {
        }
        public static new VpcState Empty => new VpcState();
    }
}
