// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Veenedge
{
    /// <summary>
    /// Provides a resource to manage veenedge instance
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Veenedge.Instance("foo", new()
    ///     {
    ///         AreaName = "*****",
    ///         CloudserverId = "cloudserver-x92*****jcc8f",
    ///         Isp = "CMCC",
    ///     });
    /// 
    ///     var foo1 = new Volcengine.Veenedge.Instance("foo1", new()
    ///     {
    ///         InstanceId = "veen0*****0111112",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Instance can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:veenedge/instance:Instance default veenn769ewmjjqyqh5dv
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:veenedge/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The area name.
        /// </summary>
        [Output("areaName")]
        public Output<string> AreaName { get; private set; } = null!;

        /// <summary>
        /// The id of cloud server.
        /// </summary>
        [Output("cloudserverId")]
        public Output<string> CloudserverId { get; private set; } = null!;

        /// <summary>
        /// The name of cluster.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// The default isp for multi line node.
        /// </summary>
        [Output("defaultIsp")]
        public Output<string?> DefaultIsp { get; private set; } = null!;

        /// <summary>
        /// Import an exist instance, usually for import a default instance generated with cloud server creating.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The isp info.
        /// </summary>
        [Output("isp")]
        public Output<string> Isp { get; private set; } = null!;

        /// <summary>
        /// The name of instance, only effected in update scene.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The data of secret, only effected in update scene.
        /// </summary>
        [Output("secretData")]
        public Output<string?> SecretData { get; private set; } = null!;

        /// <summary>
        /// The type of secret, only effected in update scene. The value can be `KeyPair` or `Password`.
        /// </summary>
        [Output("secretType")]
        public Output<string?> SecretType { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs? args = null, CustomResourceOptions? options = null)
            : base("volcengine:veenedge/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:veenedge/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The area name.
        /// </summary>
        [Input("areaName")]
        public Input<string>? AreaName { get; set; }

        /// <summary>
        /// The id of cloud server.
        /// </summary>
        [Input("cloudserverId")]
        public Input<string>? CloudserverId { get; set; }

        /// <summary>
        /// The name of cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The default isp for multi line node.
        /// </summary>
        [Input("defaultIsp")]
        public Input<string>? DefaultIsp { get; set; }

        /// <summary>
        /// Import an exist instance, usually for import a default instance generated with cloud server creating.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The isp info.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        /// <summary>
        /// The name of instance, only effected in update scene.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The data of secret, only effected in update scene.
        /// </summary>
        [Input("secretData")]
        public Input<string>? SecretData { get; set; }

        /// <summary>
        /// The type of secret, only effected in update scene. The value can be `KeyPair` or `Password`.
        /// </summary>
        [Input("secretType")]
        public Input<string>? SecretType { get; set; }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The area name.
        /// </summary>
        [Input("areaName")]
        public Input<string>? AreaName { get; set; }

        /// <summary>
        /// The id of cloud server.
        /// </summary>
        [Input("cloudserverId")]
        public Input<string>? CloudserverId { get; set; }

        /// <summary>
        /// The name of cluster.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The default isp for multi line node.
        /// </summary>
        [Input("defaultIsp")]
        public Input<string>? DefaultIsp { get; set; }

        /// <summary>
        /// Import an exist instance, usually for import a default instance generated with cloud server creating.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The isp info.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        /// <summary>
        /// The name of instance, only effected in update scene.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The data of secret, only effected in update scene.
        /// </summary>
        [Input("secretData")]
        public Input<string>? SecretData { get; set; }

        /// <summary>
        /// The type of secret, only effected in update scene. The value can be `KeyPair` or `Password`.
        /// </summary>
        [Input("secretType")]
        public Input<string>? SecretType { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
