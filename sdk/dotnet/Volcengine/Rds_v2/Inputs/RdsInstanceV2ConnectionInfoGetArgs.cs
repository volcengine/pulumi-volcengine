// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Rds_v2.Inputs
{

    public sealed class RdsInstanceV2ConnectionInfoGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("addresses")]
        private InputList<Inputs.RdsInstanceV2ConnectionInfoAddressGetArgs>? _addresses;

        /// <summary>
        /// Address list.
        /// </summary>
        public InputList<Inputs.RdsInstanceV2ConnectionInfoAddressGetArgs> Addresses
        {
            get => _addresses ?? (_addresses = new InputList<Inputs.RdsInstanceV2ConnectionInfoAddressGetArgs>());
            set => _addresses = value;
        }

        /// <summary>
        /// When the terminal type is read-write terminal or read-only terminal, it supports setting whether new nodes are automatically added.
        /// </summary>
        [Input("autoAddNewNodes")]
        public Input<string>? AutoAddNewNodes { get; set; }

        /// <summary>
        /// Address description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether global read-only is enabled, value: Enable: Enable. Disable: Disabled.
        /// </summary>
        [Input("enableReadOnly")]
        public Input<string>? EnableReadOnly { get; set; }

        /// <summary>
        /// Whether read-write separation is enabled, value: Enable: Enable. Disable: Disabled.
        /// </summary>
        [Input("enableReadWriteSplitting")]
        public Input<string>? EnableReadWriteSplitting { get; set; }

        /// <summary>
        /// Instance connection terminal ID.
        /// </summary>
        [Input("endpointId")]
        public Input<string>? EndpointId { get; set; }

        /// <summary>
        /// The instance connection terminal name.
        /// </summary>
        [Input("endpointName")]
        public Input<string>? EndpointName { get; set; }

        /// <summary>
        /// Terminal type:
        /// Cluster: The default terminal. (created by default)
        /// Primary: Primary node terminal.
        /// Custom: Custom terminal.
        /// Direct: Direct connection to the terminal. (Only the operation and maintenance side)
        /// AllNode: All node terminals. (Only the operation and maintenance side).
        /// </summary>
        [Input("endpointType")]
        public Input<string>? EndpointType { get; set; }

        [Input("readOnlyNodeWeights")]
        private InputList<Inputs.RdsInstanceV2ConnectionInfoReadOnlyNodeWeightGetArgs>? _readOnlyNodeWeights;

        /// <summary>
        /// The list of nodes configured by the connection terminal and the corresponding read-only weights.
        /// </summary>
        public InputList<Inputs.RdsInstanceV2ConnectionInfoReadOnlyNodeWeightGetArgs> ReadOnlyNodeWeights
        {
            get => _readOnlyNodeWeights ?? (_readOnlyNodeWeights = new InputList<Inputs.RdsInstanceV2ConnectionInfoReadOnlyNodeWeightGetArgs>());
            set => _readOnlyNodeWeights = value;
        }

        /// <summary>
        /// Read and write mode:
        /// ReadWrite: read and write
        /// ReadOnly: read only (default).
        /// </summary>
        [Input("readWriteMode")]
        public Input<string>? ReadWriteMode { get; set; }

        public RdsInstanceV2ConnectionInfoGetArgs()
        {
        }
        public static new RdsInstanceV2ConnectionInfoGetArgs Empty => new RdsInstanceV2ConnectionInfoGetArgs();
    }
}
