// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Rds_mysql
{
    public static class Instances
    {
        /// <summary>
        /// Use this data source to query detailed information of rds mysql instances
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Rds_mysql.Instances.Invoke(new()
        ///     {
        ///         InstanceId = "mysql-72da4258c2c7",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<InstancesResult> InvokeAsync(InstancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<InstancesResult>("volcengine:rds_mysql/instances:Instances", args ?? new InstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of rds mysql instances
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Rds_mysql.Instances.Invoke(new()
        ///     {
        ///         InstanceId = "mysql-72da4258c2c7",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<InstancesResult> Invoke(InstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<InstancesResult>("volcengine:rds_mysql/instances:Instances", args ?? new InstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class InstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The charge type of the RDS instance.
        /// </summary>
        [Input("chargeType")]
        public string? ChargeType { get; set; }

        /// <summary>
        /// The end time of creating RDS instance.
        /// </summary>
        [Input("createTimeEnd")]
        public string? CreateTimeEnd { get; set; }

        /// <summary>
        /// The start time of creating RDS instance.
        /// </summary>
        [Input("createTimeStart")]
        public string? CreateTimeStart { get; set; }

        /// <summary>
        /// The version of the RDS instance.
        /// </summary>
        [Input("dbEngineVersion")]
        public string? DbEngineVersion { get; set; }

        /// <summary>
        /// The id of the RDS instance.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// The name of the RDS instance.
        /// </summary>
        [Input("instanceName")]
        public string? InstanceName { get; set; }

        /// <summary>
        /// The status of the RDS instance.
        /// </summary>
        [Input("instanceStatus")]
        public string? InstanceStatus { get; set; }

        /// <summary>
        /// A Name Regex of RDS instance.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The available zone of the RDS instance.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public InstancesArgs()
        {
        }
        public static new InstancesArgs Empty => new InstancesArgs();
    }

    public sealed class InstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The charge type of the RDS instance.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// The end time of creating RDS instance.
        /// </summary>
        [Input("createTimeEnd")]
        public Input<string>? CreateTimeEnd { get; set; }

        /// <summary>
        /// The start time of creating RDS instance.
        /// </summary>
        [Input("createTimeStart")]
        public Input<string>? CreateTimeStart { get; set; }

        /// <summary>
        /// The version of the RDS instance.
        /// </summary>
        [Input("dbEngineVersion")]
        public Input<string>? DbEngineVersion { get; set; }

        /// <summary>
        /// The id of the RDS instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The name of the RDS instance.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// The status of the RDS instance.
        /// </summary>
        [Input("instanceStatus")]
        public Input<string>? InstanceStatus { get; set; }

        /// <summary>
        /// A Name Regex of RDS instance.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The available zone of the RDS instance.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public InstancesInvokeArgs()
        {
        }
        public static new InstancesInvokeArgs Empty => new InstancesInvokeArgs();
    }


    [OutputType]
    public sealed class InstancesResult
    {
        /// <summary>
        /// Payment type. Value:
        /// PostPaid - Pay-As-You-Go
        /// PrePaid - Yearly and monthly (default).
        /// </summary>
        public readonly string? ChargeType;
        public readonly string? CreateTimeEnd;
        public readonly string? CreateTimeStart;
        /// <summary>
        /// The engine version of the RDS instance.
        /// </summary>
        public readonly string? DbEngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Instance ID.
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// The name of the RDS instance.
        /// </summary>
        public readonly string? InstanceName;
        /// <summary>
        /// The status of the RDS instance.
        /// </summary>
        public readonly string? InstanceStatus;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of RDS instance query.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesRdsMysqlInstanceResult> RdsMysqlInstances;
        /// <summary>
        /// The total count of RDS instance query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The available zone of the RDS instance.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private InstancesResult(
            string? chargeType,

            string? createTimeEnd,

            string? createTimeStart,

            string? dbEngineVersion,

            string id,

            string? instanceId,

            string? instanceName,

            string? instanceStatus,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.InstancesRdsMysqlInstanceResult> rdsMysqlInstances,

            int totalCount,

            string? zoneId)
        {
            ChargeType = chargeType;
            CreateTimeEnd = createTimeEnd;
            CreateTimeStart = createTimeStart;
            DbEngineVersion = dbEngineVersion;
            Id = id;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceStatus = instanceStatus;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            RdsMysqlInstances = rdsMysqlInstances;
            TotalCount = totalCount;
            ZoneId = zoneId;
        }
    }
}
