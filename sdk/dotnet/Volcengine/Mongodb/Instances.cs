// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Mongodb
{
    public static class Instances
    {
        /// <summary>
        /// Use this data source to query detailed information of mongodb instances
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Mongodb.Instances.Invoke(new()
        ///     {
        ///         InstanceId = "mongo-replica-xxx",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<InstancesResult> InvokeAsync(InstancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<InstancesResult>("volcengine:mongodb/instances:Instances", args ?? new InstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of mongodb instances
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Mongodb.Instances.Invoke(new()
        ///     {
        ///         InstanceId = "mongo-replica-xxx",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<InstancesResult> Invoke(InstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<InstancesResult>("volcengine:mongodb/instances:Instances", args ?? new InstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class InstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The end time of creation to query.
        /// </summary>
        [Input("createEndTime")]
        public string? CreateEndTime { get; set; }

        /// <summary>
        /// The start time of creation to query.
        /// </summary>
        [Input("createStartTime")]
        public string? CreateStartTime { get; set; }

        /// <summary>
        /// The db engine to query, valid value contains `MongoDB`.
        /// </summary>
        [Input("dbEngine")]
        public string? DbEngine { get; set; }

        /// <summary>
        /// The version of db engine to query, valid value contains `MongoDB_4_0`.
        /// </summary>
        [Input("dbEngineVersion")]
        public string? DbEngineVersion { get; set; }

        /// <summary>
        /// The instance ID to query.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// The instance name to query.
        /// </summary>
        [Input("instanceName")]
        public string? InstanceName { get; set; }

        /// <summary>
        /// The instance status to query.
        /// </summary>
        [Input("instanceStatus")]
        public string? InstanceStatus { get; set; }

        /// <summary>
        /// The type of instance to query, the valid value contains `ReplicaSet` or `ShardedCluster`.
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType { get; set; }

        /// <summary>
        /// A Name Regex of DB instance.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("tags")]
        private List<Inputs.InstancesTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.InstancesTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.InstancesTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The end time of update to query.
        /// </summary>
        [Input("updateEndTime")]
        public string? UpdateEndTime { get; set; }

        /// <summary>
        /// The start time of update to query.
        /// </summary>
        [Input("updateStartTime")]
        public string? UpdateStartTime { get; set; }

        /// <summary>
        /// The vpc id of instance to query.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        /// <summary>
        /// The zone ID to query.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public InstancesArgs()
        {
        }
        public static new InstancesArgs Empty => new InstancesArgs();
    }

    public sealed class InstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The end time of creation to query.
        /// </summary>
        [Input("createEndTime")]
        public Input<string>? CreateEndTime { get; set; }

        /// <summary>
        /// The start time of creation to query.
        /// </summary>
        [Input("createStartTime")]
        public Input<string>? CreateStartTime { get; set; }

        /// <summary>
        /// The db engine to query, valid value contains `MongoDB`.
        /// </summary>
        [Input("dbEngine")]
        public Input<string>? DbEngine { get; set; }

        /// <summary>
        /// The version of db engine to query, valid value contains `MongoDB_4_0`.
        /// </summary>
        [Input("dbEngineVersion")]
        public Input<string>? DbEngineVersion { get; set; }

        /// <summary>
        /// The instance ID to query.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The instance name to query.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// The instance status to query.
        /// </summary>
        [Input("instanceStatus")]
        public Input<string>? InstanceStatus { get; set; }

        /// <summary>
        /// The type of instance to query, the valid value contains `ReplicaSet` or `ShardedCluster`.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// A Name Regex of DB instance.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("tags")]
        private InputList<Inputs.InstancesTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.InstancesTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.InstancesTagInputArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The end time of update to query.
        /// </summary>
        [Input("updateEndTime")]
        public Input<string>? UpdateEndTime { get; set; }

        /// <summary>
        /// The start time of update to query.
        /// </summary>
        [Input("updateStartTime")]
        public Input<string>? UpdateStartTime { get; set; }

        /// <summary>
        /// The vpc id of instance to query.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The zone ID to query.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public InstancesInvokeArgs()
        {
        }
        public static new InstancesInvokeArgs Empty => new InstancesInvokeArgs();
    }


    [OutputType]
    public sealed class InstancesResult
    {
        public readonly string? CreateEndTime;
        public readonly string? CreateStartTime;
        /// <summary>
        /// The db engine.
        /// </summary>
        public readonly string? DbEngine;
        /// <summary>
        /// The version of database engine.
        /// </summary>
        public readonly string? DbEngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The instance ID.
        /// </summary>
        public readonly string? InstanceId;
        /// <summary>
        /// The instance name.
        /// </summary>
        public readonly string? InstanceName;
        /// <summary>
        /// The instance status.
        /// </summary>
        public readonly string? InstanceStatus;
        /// <summary>
        /// The instance type.
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// The collection of mongodb instances query.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesInstanceResult> Instances;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstancesTagResult> Tags;
        /// <summary>
        /// The total count of mongodb instances query.
        /// </summary>
        public readonly int TotalCount;
        public readonly string? UpdateEndTime;
        public readonly string? UpdateStartTime;
        /// <summary>
        /// The vpc ID.
        /// </summary>
        public readonly string? VpcId;
        /// <summary>
        /// The zone ID of instance.
        /// </summary>
        public readonly string? ZoneId;

        [OutputConstructor]
        private InstancesResult(
            string? createEndTime,

            string? createStartTime,

            string? dbEngine,

            string? dbEngineVersion,

            string id,

            string? instanceId,

            string? instanceName,

            string? instanceStatus,

            string? instanceType,

            ImmutableArray<Outputs.InstancesInstanceResult> instances,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.InstancesTagResult> tags,

            int totalCount,

            string? updateEndTime,

            string? updateStartTime,

            string? vpcId,

            string? zoneId)
        {
            CreateEndTime = createEndTime;
            CreateStartTime = createStartTime;
            DbEngine = dbEngine;
            DbEngineVersion = dbEngineVersion;
            Id = id;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceStatus = instanceStatus;
            InstanceType = instanceType;
            Instances = instances;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Tags = tags;
            TotalCount = totalCount;
            UpdateEndTime = updateEndTime;
            UpdateStartTime = updateStartTime;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
}
