// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Mongodb
{
    public static class InstanceParameterLogs
    {
        /// <summary>
        /// Use this data source to query detailed information of mongodb instance parameter logs
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Mongodb.InstanceParameterLogs.Invoke(new()
        ///     {
        ///         EndTime = "2023-11-14 18:15Z",
        ///         InstanceId = "mongo-replica-f16e9298b121",
        ///         StartTime = "2022-11-14 00:00Z",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<InstanceParameterLogsResult> InvokeAsync(InstanceParameterLogsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<InstanceParameterLogsResult>("volcengine:mongodb/instanceParameterLogs:InstanceParameterLogs", args ?? new InstanceParameterLogsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of mongodb instance parameter logs
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Mongodb.InstanceParameterLogs.Invoke(new()
        ///     {
        ///         EndTime = "2023-11-14 18:15Z",
        ///         InstanceId = "mongo-replica-f16e9298b121",
        ///         StartTime = "2022-11-14 00:00Z",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<InstanceParameterLogsResult> Invoke(InstanceParameterLogsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<InstanceParameterLogsResult>("volcengine:mongodb/instanceParameterLogs:InstanceParameterLogs", args ?? new InstanceParameterLogsInvokeArgs(), options.WithDefaults());
    }


    public sealed class InstanceParameterLogsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The end time to query.
        /// </summary>
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        /// <summary>
        /// The instance ID to query.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The start time to query.
        /// </summary>
        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public InstanceParameterLogsArgs()
        {
        }
        public static new InstanceParameterLogsArgs Empty => new InstanceParameterLogsArgs();
    }

    public sealed class InstanceParameterLogsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The end time to query.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// The instance ID to query.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The start time to query.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public InstanceParameterLogsInvokeArgs()
        {
        }
        public static new InstanceParameterLogsInvokeArgs Empty => new InstanceParameterLogsInvokeArgs();
    }


    [OutputType]
    public sealed class InstanceParameterLogsResult
    {
        public readonly string EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? OutputFile;
        /// <summary>
        /// The collection of parameter change log query.
        /// </summary>
        public readonly Outputs.InstanceParameterLogsParameterChangeLogsResult ParameterChangeLogs;
        public readonly string StartTime;
        /// <summary>
        /// The total count of mongodb instance parameter log query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private InstanceParameterLogsResult(
            string endTime,

            string id,

            string instanceId,

            string? outputFile,

            Outputs.InstanceParameterLogsParameterChangeLogsResult parameterChangeLogs,

            string startTime,

            int totalCount)
        {
            EndTime = endTime;
            Id = id;
            InstanceId = instanceId;
            OutputFile = outputFile;
            ParameterChangeLogs = parameterChangeLogs;
            StartTime = startTime;
            TotalCount = totalCount;
        }
    }
}
