// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Transit_router
{
    /// <summary>
    /// Provides a resource to manage transit router
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Transit_router.TransitRouter("foo", new()
    ///     {
    ///         Description = "acc-test",
    ///         TransitRouterName = "acc-test-tr",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TransitRouter can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:transit_router/transitRouter:TransitRouter default tr-2d6fr7mzya2gw58ozfes5g2oh
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:transit_router/transitRouter:TransitRouter")]
    public partial class TransitRouter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of account.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The business status of the transit router.
        /// </summary>
        [Output("businessStatus")]
        public Output<string> BusinessStatus { get; private set; } = null!;

        /// <summary>
        /// The create time.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The description of the transit router.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The overdue time.
        /// </summary>
        [Output("overdueTime")]
        public Output<string> OverdueTime { get; private set; } = null!;

        /// <summary>
        /// The status of the transit router.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The attachments of transit router.
        /// </summary>
        [Output("transitRouterAttachments")]
        public Output<ImmutableArray<Outputs.TransitRouterTransitRouterAttachment>> TransitRouterAttachments { get; private set; } = null!;

        /// <summary>
        /// The ID of the transit router.
        /// </summary>
        [Output("transitRouterId")]
        public Output<string> TransitRouterId { get; private set; } = null!;

        /// <summary>
        /// The name of the transit router.
        /// </summary>
        [Output("transitRouterName")]
        public Output<string> TransitRouterName { get; private set; } = null!;

        /// <summary>
        /// The update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a TransitRouter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransitRouter(string name, TransitRouterArgs? args = null, CustomResourceOptions? options = null)
            : base("volcengine:transit_router/transitRouter:TransitRouter", name, args ?? new TransitRouterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransitRouter(string name, Input<string> id, TransitRouterState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:transit_router/transitRouter:TransitRouter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransitRouter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransitRouter Get(string name, Input<string> id, TransitRouterState? state = null, CustomResourceOptions? options = null)
        {
            return new TransitRouter(name, id, state, options);
        }
    }

    public sealed class TransitRouterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the transit router.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the transit router.
        /// </summary>
        [Input("transitRouterName")]
        public Input<string>? TransitRouterName { get; set; }

        public TransitRouterArgs()
        {
        }
        public static new TransitRouterArgs Empty => new TransitRouterArgs();
    }

    public sealed class TransitRouterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of account.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The business status of the transit router.
        /// </summary>
        [Input("businessStatus")]
        public Input<string>? BusinessStatus { get; set; }

        /// <summary>
        /// The create time.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The description of the transit router.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The overdue time.
        /// </summary>
        [Input("overdueTime")]
        public Input<string>? OverdueTime { get; set; }

        /// <summary>
        /// The status of the transit router.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("transitRouterAttachments")]
        private InputList<Inputs.TransitRouterTransitRouterAttachmentGetArgs>? _transitRouterAttachments;

        /// <summary>
        /// The attachments of transit router.
        /// </summary>
        public InputList<Inputs.TransitRouterTransitRouterAttachmentGetArgs> TransitRouterAttachments
        {
            get => _transitRouterAttachments ?? (_transitRouterAttachments = new InputList<Inputs.TransitRouterTransitRouterAttachmentGetArgs>());
            set => _transitRouterAttachments = value;
        }

        /// <summary>
        /// The ID of the transit router.
        /// </summary>
        [Input("transitRouterId")]
        public Input<string>? TransitRouterId { get; set; }

        /// <summary>
        /// The name of the transit router.
        /// </summary>
        [Input("transitRouterName")]
        public Input<string>? TransitRouterName { get; set; }

        /// <summary>
        /// The update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public TransitRouterState()
        {
        }
        public static new TransitRouterState Empty => new TransitRouterState();
    }
}
