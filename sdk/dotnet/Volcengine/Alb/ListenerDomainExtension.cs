// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Alb
{
    /// <summary>
    /// Provides a resource to manage alb listener domain extension
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooListener = new Volcengine.Alb.Listener("fooListener", new()
    ///     {
    ///         LoadBalancerId = "alb-1iidd17v3klj474adhfrunyz9",
    ///         ListenerName = "acc-test-listener-1",
    ///         Protocol = "HTTPS",
    ///         Port = 6666,
    ///         Enabled = "on",
    ///         CertificateId = "cert-1iidd2pahdyio74adhfr9ajwg",
    ///         CaCertificateId = "cert-1iidd2r9ii0hs74adhfeodxo1",
    ///         ServerGroupId = "rsp-1g72w74y4umf42zbhq4k4hnln",
    ///         EnableHttp2 = "on",
    ///         EnableQuic = "off",
    ///         AclStatus = "on",
    ///         AclType = "white",
    ///         AclIds = new[]
    ///         {
    ///             "acl-1g72w6z11ighs2zbhq4v3rvh4",
    ///         },
    ///         Description = "acc test listener",
    ///     });
    /// 
    ///     var fooListenerDomainExtension = new Volcengine.Alb.ListenerDomainExtension("fooListenerDomainExtension", new()
    ///     {
    ///         ListenerId = fooListener.Id,
    ///         Domain = "test-modify.com",
    ///         CertificateId = "cert-1iidd2pahdyio74adhfr9ajwg",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AlbListenerDomainExtension can be imported using the listener id and domain extension id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:alb/listenerDomainExtension:ListenerDomainExtension default listenerId:extensionId
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:alb/listenerDomainExtension:ListenerDomainExtension")]
    public partial class ListenerDomainExtension : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Server certificate used for the domain name.
        /// </summary>
        [Output("certificateId")]
        public Output<string> CertificateId { get; private set; } = null!;

        /// <summary>
        /// The domain name. The maximum number of associated domain names for an HTTPS listener is 20, with a value range of 1 to 20.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// The id of the domain extension.
        /// </summary>
        [Output("domainExtensionId")]
        public Output<string> DomainExtensionId { get; private set; } = null!;

        /// <summary>
        /// The listener id. Only HTTPS listener is effective.
        /// </summary>
        [Output("listenerId")]
        public Output<string> ListenerId { get; private set; } = null!;


        /// <summary>
        /// Create a ListenerDomainExtension resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ListenerDomainExtension(string name, ListenerDomainExtensionArgs args, CustomResourceOptions? options = null)
            : base("volcengine:alb/listenerDomainExtension:ListenerDomainExtension", name, args ?? new ListenerDomainExtensionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ListenerDomainExtension(string name, Input<string> id, ListenerDomainExtensionState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:alb/listenerDomainExtension:ListenerDomainExtension", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ListenerDomainExtension resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ListenerDomainExtension Get(string name, Input<string> id, ListenerDomainExtensionState? state = null, CustomResourceOptions? options = null)
        {
            return new ListenerDomainExtension(name, id, state, options);
        }
    }

    public sealed class ListenerDomainExtensionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Server certificate used for the domain name.
        /// </summary>
        [Input("certificateId", required: true)]
        public Input<string> CertificateId { get; set; } = null!;

        /// <summary>
        /// The domain name. The maximum number of associated domain names for an HTTPS listener is 20, with a value range of 1 to 20.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// The listener id. Only HTTPS listener is effective.
        /// </summary>
        [Input("listenerId", required: true)]
        public Input<string> ListenerId { get; set; } = null!;

        public ListenerDomainExtensionArgs()
        {
        }
        public static new ListenerDomainExtensionArgs Empty => new ListenerDomainExtensionArgs();
    }

    public sealed class ListenerDomainExtensionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Server certificate used for the domain name.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// The domain name. The maximum number of associated domain names for an HTTPS listener is 20, with a value range of 1 to 20.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// The id of the domain extension.
        /// </summary>
        [Input("domainExtensionId")]
        public Input<string>? DomainExtensionId { get; set; }

        /// <summary>
        /// The listener id. Only HTTPS listener is effective.
        /// </summary>
        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        public ListenerDomainExtensionState()
        {
        }
        public static new ListenerDomainExtensionState Empty => new ListenerDomainExtensionState();
    }
}
