// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Autoscaling
{
    public static class ScalingInstances
    {
        /// <summary>
        /// Use this data source to query detailed information of scaling instances
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Autoscaling.ScalingInstances.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "i-ybzl4u5uogl8j07hgcbg",
        ///             "i-ybyncrcpzpgh9zmlct0w",
        ///             "i-ybyncrcpzogh9z4ax9tv",
        ///         },
        ///         ScalingConfigurationId = "scc-ybtawzucw95pkgon0wst",
        ///         ScalingGroupId = "scg-ybtawtznszgh9yv8agcp",
        ///         Status = "InService",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<ScalingInstancesResult> InvokeAsync(ScalingInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ScalingInstancesResult>("volcengine:autoscaling/scalingInstances:ScalingInstances", args ?? new ScalingInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of scaling instances
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Autoscaling.ScalingInstances.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "i-ybzl4u5uogl8j07hgcbg",
        ///             "i-ybyncrcpzpgh9zmlct0w",
        ///             "i-ybyncrcpzogh9z4ax9tv",
        ///         },
        ///         ScalingConfigurationId = "scc-ybtawzucw95pkgon0wst",
        ///         ScalingGroupId = "scg-ybtawtznszgh9yv8agcp",
        ///         Status = "InService",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<ScalingInstancesResult> Invoke(ScalingInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ScalingInstancesResult>("volcengine:autoscaling/scalingInstances:ScalingInstances", args ?? new ScalingInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ScalingInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The creation type of the instances. Valid values: AutoCreated, Attached.
        /// </summary>
        [Input("creationType")]
        public string? CreationType { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of instance ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The id of the scaling configuration id.
        /// </summary>
        [Input("scalingConfigurationId")]
        public string? ScalingConfigurationId { get; set; }

        /// <summary>
        /// The id of the scaling group.
        /// </summary>
        [Input("scalingGroupId", required: true)]
        public string ScalingGroupId { get; set; } = null!;

        /// <summary>
        /// The status of instances. Valid values: Init, Pending, Pending:Wait, InService, Error, Removing, Removing:Wait, Stopped, Protected.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        public ScalingInstancesArgs()
        {
        }
        public static new ScalingInstancesArgs Empty => new ScalingInstancesArgs();
    }

    public sealed class ScalingInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The creation type of the instances. Valid values: AutoCreated, Attached.
        /// </summary>
        [Input("creationType")]
        public Input<string>? CreationType { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of instance ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The id of the scaling configuration id.
        /// </summary>
        [Input("scalingConfigurationId")]
        public Input<string>? ScalingConfigurationId { get; set; }

        /// <summary>
        /// The id of the scaling group.
        /// </summary>
        [Input("scalingGroupId", required: true)]
        public Input<string> ScalingGroupId { get; set; } = null!;

        /// <summary>
        /// The status of instances. Valid values: Init, Pending, Pending:Wait, InService, Error, Removing, Removing:Wait, Stopped, Protected.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ScalingInstancesInvokeArgs()
        {
        }
        public static new ScalingInstancesInvokeArgs Empty => new ScalingInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class ScalingInstancesResult
    {
        /// <summary>
        /// The creation type of the instance. Valid values: AutoCreated, Attached.
        /// </summary>
        public readonly string? CreationType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// The id of the scaling configuration.
        /// </summary>
        public readonly string? ScalingConfigurationId;
        /// <summary>
        /// The id of the scaling group.
        /// </summary>
        public readonly string ScalingGroupId;
        /// <summary>
        /// The collection of scaling instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScalingInstancesScalingInstanceResult> ScalingInstances;
        /// <summary>
        /// The status of instances.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The total count of scaling instances query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private ScalingInstancesResult(
            string? creationType,

            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            string? scalingConfigurationId,

            string scalingGroupId,

            ImmutableArray<Outputs.ScalingInstancesScalingInstanceResult> scalingInstances,

            string? status,

            int totalCount)
        {
            CreationType = creationType;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            ScalingConfigurationId = scalingConfigurationId;
            ScalingGroupId = scalingGroupId;
            ScalingInstances = scalingInstances;
            Status = status;
            TotalCount = totalCount;
        }
    }
}
