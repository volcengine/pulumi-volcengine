// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Autoscaling
{
    public static class ScalingActivities
    {
        /// <summary>
        /// Use this data source to query detailed information of scaling activities
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Autoscaling.ScalingActivities.Invoke(new()
        ///     {
        ///         ScalingGroupId = "scg-ybqm0b6kcigh9zu9ce6t",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<ScalingActivitiesResult> InvokeAsync(ScalingActivitiesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ScalingActivitiesResult>("volcengine:autoscaling/scalingActivities:ScalingActivities", args ?? new ScalingActivitiesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of scaling activities
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Autoscaling.ScalingActivities.Invoke(new()
        ///     {
        ///         ScalingGroupId = "scg-ybqm0b6kcigh9zu9ce6t",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<ScalingActivitiesResult> Invoke(ScalingActivitiesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ScalingActivitiesResult>("volcengine:autoscaling/scalingActivities:ScalingActivities", args ?? new ScalingActivitiesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ScalingActivitiesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An end time to start a Scaling Activity.
        /// </summary>
        [Input("endTime")]
        public string? EndTime { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Scaling Activity IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// A Id of Scaling Group.
        /// </summary>
        [Input("scalingGroupId", required: true)]
        public string ScalingGroupId { get; set; } = null!;

        /// <summary>
        /// A start time to start a Scaling Activity.
        /// </summary>
        [Input("startTime")]
        public string? StartTime { get; set; }

        /// <summary>
        /// A status code of Scaling Activity. Valid values: Init, Running, Success, PartialSuccess, Error, Rejected, Exception.
        /// </summary>
        [Input("statusCode")]
        public string? StatusCode { get; set; }

        public ScalingActivitiesArgs()
        {
        }
        public static new ScalingActivitiesArgs Empty => new ScalingActivitiesArgs();
    }

    public sealed class ScalingActivitiesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An end time to start a Scaling Activity.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Scaling Activity IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// A Id of Scaling Group.
        /// </summary>
        [Input("scalingGroupId", required: true)]
        public Input<string> ScalingGroupId { get; set; } = null!;

        /// <summary>
        /// A start time to start a Scaling Activity.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// A status code of Scaling Activity. Valid values: Init, Running, Success, PartialSuccess, Error, Rejected, Exception.
        /// </summary>
        [Input("statusCode")]
        public Input<string>? StatusCode { get; set; }

        public ScalingActivitiesInvokeArgs()
        {
        }
        public static new ScalingActivitiesInvokeArgs Empty => new ScalingActivitiesInvokeArgs();
    }


    [OutputType]
    public sealed class ScalingActivitiesResult
    {
        /// <summary>
        /// The collection of Scaling Activity query.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScalingActivitiesActivityResult> Activities;
        public readonly string? EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// The scaling group Id.
        /// </summary>
        public readonly string ScalingGroupId;
        public readonly string? StartTime;
        /// <summary>
        /// The Status Code of Scaling Activity.
        /// </summary>
        public readonly string? StatusCode;
        /// <summary>
        /// The total count of Scaling Activity query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private ScalingActivitiesResult(
            ImmutableArray<Outputs.ScalingActivitiesActivityResult> activities,

            string? endTime,

            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            string scalingGroupId,

            string? startTime,

            string? statusCode,

            int totalCount)
        {
            Activities = activities;
            EndTime = endTime;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            ScalingGroupId = scalingGroupId;
            StartTime = startTime;
            StatusCode = statusCode;
            TotalCount = totalCount;
        }
    }
}
