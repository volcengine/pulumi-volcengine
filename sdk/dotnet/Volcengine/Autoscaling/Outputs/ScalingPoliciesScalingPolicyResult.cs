// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Autoscaling.Outputs
{

    [OutputType]
    public sealed class ScalingPoliciesScalingPolicyResult
    {
        /// <summary>
        /// The adjustment type of the scaling policy.
        /// </summary>
        public readonly string AdjustmentType;
        /// <summary>
        /// The adjustment value of the scaling policy.
        /// </summary>
        public readonly int AdjustmentValue;
        /// <summary>
        /// The comparison operator of the alarm policy condition of the scaling policy.
        /// </summary>
        public readonly string AlarmPolicyConditionComparisonOperator;
        /// <summary>
        /// The metric name of the alarm policy condition of the scaling policy.
        /// </summary>
        public readonly string AlarmPolicyConditionMetricName;
        /// <summary>
        /// The comparison operator of the alarm policy condition of the scaling policy.
        /// </summary>
        public readonly string AlarmPolicyConditionMetricUnit;
        /// <summary>
        /// The threshold of the alarm policy condition of the scaling policy.
        /// </summary>
        public readonly string AlarmPolicyConditionThreshold;
        /// <summary>
        /// The evaluation count of the alarm policy of the scaling policy.
        /// </summary>
        public readonly int AlarmPolicyEvaluationCount;
        /// <summary>
        /// The rule type of the alarm policy of the scaling policy.
        /// </summary>
        public readonly string AlarmPolicyRuleType;
        /// <summary>
        /// The cooldown of the scaling policy.
        /// </summary>
        public readonly int Cooldown;
        /// <summary>
        /// The id of the scaling policy.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An id of the scaling group to which the scaling policy belongs.
        /// </summary>
        public readonly string ScalingGroupId;
        /// <summary>
        /// The id of the scaling policy.
        /// </summary>
        public readonly string ScalingPolicyId;
        /// <summary>
        /// The name of the scaling policy.
        /// </summary>
        public readonly string ScalingPolicyName;
        /// <summary>
        /// A type of scaling policy. Valid values: Scheduled, Recurrence, Manual, Alarm.
        /// </summary>
        public readonly string ScalingPolicyType;
        /// <summary>
        /// The launch time of the scheduled policy of the scaling policy.
        /// </summary>
        public readonly string ScheduledPolicyLaunchTime;
        /// <summary>
        /// The recurrence end time of the scheduled policy of the scaling policy.
        /// </summary>
        public readonly string ScheduledPolicyRecurrenceEndTime;
        /// <summary>
        /// The recurrence start time of the scheduled policy of the scaling policy.
        /// </summary>
        public readonly string ScheduledPolicyRecurrenceStartTime;
        /// <summary>
        /// The recurrence type of the scheduled policy of the scaling policy.
        /// </summary>
        public readonly string ScheduledPolicyRecurrenceType;
        /// <summary>
        /// The recurrence value of the scheduled policy of the scaling policy.
        /// </summary>
        public readonly string ScheduledPolicyRecurrenceValue;
        /// <summary>
        /// The status of the scaling policy.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private ScalingPoliciesScalingPolicyResult(
            string adjustmentType,

            int adjustmentValue,

            string alarmPolicyConditionComparisonOperator,

            string alarmPolicyConditionMetricName,

            string alarmPolicyConditionMetricUnit,

            string alarmPolicyConditionThreshold,

            int alarmPolicyEvaluationCount,

            string alarmPolicyRuleType,

            int cooldown,

            string id,

            string scalingGroupId,

            string scalingPolicyId,

            string scalingPolicyName,

            string scalingPolicyType,

            string scheduledPolicyLaunchTime,

            string scheduledPolicyRecurrenceEndTime,

            string scheduledPolicyRecurrenceStartTime,

            string scheduledPolicyRecurrenceType,

            string scheduledPolicyRecurrenceValue,

            string status)
        {
            AdjustmentType = adjustmentType;
            AdjustmentValue = adjustmentValue;
            AlarmPolicyConditionComparisonOperator = alarmPolicyConditionComparisonOperator;
            AlarmPolicyConditionMetricName = alarmPolicyConditionMetricName;
            AlarmPolicyConditionMetricUnit = alarmPolicyConditionMetricUnit;
            AlarmPolicyConditionThreshold = alarmPolicyConditionThreshold;
            AlarmPolicyEvaluationCount = alarmPolicyEvaluationCount;
            AlarmPolicyRuleType = alarmPolicyRuleType;
            Cooldown = cooldown;
            Id = id;
            ScalingGroupId = scalingGroupId;
            ScalingPolicyId = scalingPolicyId;
            ScalingPolicyName = scalingPolicyName;
            ScalingPolicyType = scalingPolicyType;
            ScheduledPolicyLaunchTime = scheduledPolicyLaunchTime;
            ScheduledPolicyRecurrenceEndTime = scheduledPolicyRecurrenceEndTime;
            ScheduledPolicyRecurrenceStartTime = scheduledPolicyRecurrenceStartTime;
            ScheduledPolicyRecurrenceType = scheduledPolicyRecurrenceType;
            ScheduledPolicyRecurrenceValue = scheduledPolicyRecurrenceValue;
            Status = status;
        }
    }
}
