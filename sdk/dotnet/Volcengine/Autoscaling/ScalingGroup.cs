// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Autoscaling
{
    /// <summary>
    /// Provides a resource to manage scaling group
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Autoscaling.ScalingGroup("foo", new()
    ///     {
    ///         DefaultCooldown = 10,
    ///         DesireInstanceNumber = 0,
    ///         InstanceTerminatePolicy = "OldestInstance",
    ///         MaxInstanceNumber = 1,
    ///         MinInstanceNumber = 0,
    ///         MultiAzPolicy = "BALANCE",
    ///         ProjectName = "default",
    ///         ScalingGroupName = "test-tf",
    ///         SubnetIds = new[]
    ///         {
    ///             "subnet-2fe79j7c8o5c059gp68ksxr93",
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Autoscaling.Inputs.ScalingGroupTagArgs
    ///             {
    ///                 Key = "tf-key1",
    ///                 Value = "tf-value1",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ScalingGroup can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:autoscaling/scalingGroup:ScalingGroup default scg-mizl7m1kqccg5smt1bdpijuj
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:autoscaling/scalingGroup:ScalingGroup")]
    public partial class ScalingGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The scaling configuration id which used by the scaling group.
        /// </summary>
        [Output("activeScalingConfigurationId")]
        public Output<string> ActiveScalingConfigurationId { get; private set; } = null!;

        /// <summary>
        /// The create time of the scaling group.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The list of db instance ids.
        /// </summary>
        [Output("dbInstanceIds")]
        public Output<ImmutableArray<string>> DbInstanceIds { get; private set; } = null!;

        /// <summary>
        /// The default cooldown interval of the scaling group. Value range: 5 ~ 86400, unit: second. Default value: 300.
        /// </summary>
        [Output("defaultCooldown")]
        public Output<int> DefaultCooldown { get; private set; } = null!;

        /// <summary>
        /// The desire instance number of the scaling group.
        /// </summary>
        [Output("desireInstanceNumber")]
        public Output<int> DesireInstanceNumber { get; private set; } = null!;

        /// <summary>
        /// The instance terminate policy of the scaling group. Valid values: OldestInstance, NewestInstance, OldestScalingConfigurationWithOldestInstance, OldestScalingConfigurationWithNewestInstance. Default value: OldestScalingConfigurationWithOldestInstance.
        /// </summary>
        [Output("instanceTerminatePolicy")]
        public Output<string> InstanceTerminatePolicy { get; private set; } = null!;

        /// <summary>
        /// The ID of the launch template bound to the scaling group. The launch template and scaling configuration cannot take effect at the same time.
        /// </summary>
        [Output("launchTemplateId")]
        public Output<string?> LaunchTemplateId { get; private set; } = null!;

        /// <summary>
        /// The version of the launch template bound to the scaling group. Valid values are the version number, Latest, or Default.
        /// </summary>
        [Output("launchTemplateVersion")]
        public Output<string?> LaunchTemplateVersion { get; private set; } = null!;

        /// <summary>
        /// The lifecycle state of the scaling group.
        /// </summary>
        [Output("lifecycleState")]
        public Output<string> LifecycleState { get; private set; } = null!;

        /// <summary>
        /// The max instance number of the scaling group. Value range: 0 ~ 100.
        /// </summary>
        [Output("maxInstanceNumber")]
        public Output<int> MaxInstanceNumber { get; private set; } = null!;

        /// <summary>
        /// The min instance number of the scaling group. Value range: 0 ~ 100.
        /// </summary>
        [Output("minInstanceNumber")]
        public Output<int> MinInstanceNumber { get; private set; } = null!;

        /// <summary>
        /// The multi az policy of the scaling group. Valid values: PRIORITY, BALANCE. Default value: PRIORITY.
        /// </summary>
        [Output("multiAzPolicy")]
        public Output<string> MultiAzPolicy { get; private set; } = null!;

        /// <summary>
        /// The ProjectName of the scaling group.
        /// </summary>
        [Output("projectName")]
        public Output<string?> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The id of the scaling group.
        /// </summary>
        [Output("scalingGroupId")]
        public Output<string> ScalingGroupId { get; private set; } = null!;

        /// <summary>
        /// The name of the scaling group.
        /// </summary>
        [Output("scalingGroupName")]
        public Output<string> ScalingGroupName { get; private set; } = null!;

        /// <summary>
        /// The load balancer server group attributes of the scaling group.
        /// </summary>
        [Output("serverGroupAttributes")]
        public Output<ImmutableArray<Outputs.ScalingGroupServerGroupAttribute>> ServerGroupAttributes { get; private set; } = null!;

        /// <summary>
        /// The list of the subnet id to which the ENI is connected.
        /// </summary>
        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.ScalingGroupTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The total instance count of the scaling group.
        /// </summary>
        [Output("totalInstanceCount")]
        public Output<int> TotalInstanceCount { get; private set; } = null!;

        /// <summary>
        /// The create time of the scaling group.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The VPC id of the scaling group.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a ScalingGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScalingGroup(string name, ScalingGroupArgs args, CustomResourceOptions? options = null)
            : base("volcengine:autoscaling/scalingGroup:ScalingGroup", name, args ?? new ScalingGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScalingGroup(string name, Input<string> id, ScalingGroupState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:autoscaling/scalingGroup:ScalingGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScalingGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScalingGroup Get(string name, Input<string> id, ScalingGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ScalingGroup(name, id, state, options);
        }
    }

    public sealed class ScalingGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default cooldown interval of the scaling group. Value range: 5 ~ 86400, unit: second. Default value: 300.
        /// </summary>
        [Input("defaultCooldown")]
        public Input<int>? DefaultCooldown { get; set; }

        /// <summary>
        /// The desire instance number of the scaling group.
        /// </summary>
        [Input("desireInstanceNumber")]
        public Input<int>? DesireInstanceNumber { get; set; }

        /// <summary>
        /// The instance terminate policy of the scaling group. Valid values: OldestInstance, NewestInstance, OldestScalingConfigurationWithOldestInstance, OldestScalingConfigurationWithNewestInstance. Default value: OldestScalingConfigurationWithOldestInstance.
        /// </summary>
        [Input("instanceTerminatePolicy")]
        public Input<string>? InstanceTerminatePolicy { get; set; }

        /// <summary>
        /// The ID of the launch template bound to the scaling group. The launch template and scaling configuration cannot take effect at the same time.
        /// </summary>
        [Input("launchTemplateId")]
        public Input<string>? LaunchTemplateId { get; set; }

        /// <summary>
        /// The version of the launch template bound to the scaling group. Valid values are the version number, Latest, or Default.
        /// </summary>
        [Input("launchTemplateVersion")]
        public Input<string>? LaunchTemplateVersion { get; set; }

        /// <summary>
        /// The max instance number of the scaling group. Value range: 0 ~ 100.
        /// </summary>
        [Input("maxInstanceNumber", required: true)]
        public Input<int> MaxInstanceNumber { get; set; } = null!;

        /// <summary>
        /// The min instance number of the scaling group. Value range: 0 ~ 100.
        /// </summary>
        [Input("minInstanceNumber", required: true)]
        public Input<int> MinInstanceNumber { get; set; } = null!;

        /// <summary>
        /// The multi az policy of the scaling group. Valid values: PRIORITY, BALANCE. Default value: PRIORITY.
        /// </summary>
        [Input("multiAzPolicy")]
        public Input<string>? MultiAzPolicy { get; set; }

        /// <summary>
        /// The ProjectName of the scaling group.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The name of the scaling group.
        /// </summary>
        [Input("scalingGroupName", required: true)]
        public Input<string> ScalingGroupName { get; set; } = null!;

        [Input("serverGroupAttributes")]
        private InputList<Inputs.ScalingGroupServerGroupAttributeArgs>? _serverGroupAttributes;

        /// <summary>
        /// The load balancer server group attributes of the scaling group.
        /// </summary>
        public InputList<Inputs.ScalingGroupServerGroupAttributeArgs> ServerGroupAttributes
        {
            get => _serverGroupAttributes ?? (_serverGroupAttributes = new InputList<Inputs.ScalingGroupServerGroupAttributeArgs>());
            set => _serverGroupAttributes = value;
        }

        [Input("subnetIds", required: true)]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// The list of the subnet id to which the ENI is connected.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.ScalingGroupTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.ScalingGroupTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ScalingGroupTagArgs>());
            set => _tags = value;
        }

        public ScalingGroupArgs()
        {
        }
        public static new ScalingGroupArgs Empty => new ScalingGroupArgs();
    }

    public sealed class ScalingGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scaling configuration id which used by the scaling group.
        /// </summary>
        [Input("activeScalingConfigurationId")]
        public Input<string>? ActiveScalingConfigurationId { get; set; }

        /// <summary>
        /// The create time of the scaling group.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("dbInstanceIds")]
        private InputList<string>? _dbInstanceIds;

        /// <summary>
        /// The list of db instance ids.
        /// </summary>
        public InputList<string> DbInstanceIds
        {
            get => _dbInstanceIds ?? (_dbInstanceIds = new InputList<string>());
            set => _dbInstanceIds = value;
        }

        /// <summary>
        /// The default cooldown interval of the scaling group. Value range: 5 ~ 86400, unit: second. Default value: 300.
        /// </summary>
        [Input("defaultCooldown")]
        public Input<int>? DefaultCooldown { get; set; }

        /// <summary>
        /// The desire instance number of the scaling group.
        /// </summary>
        [Input("desireInstanceNumber")]
        public Input<int>? DesireInstanceNumber { get; set; }

        /// <summary>
        /// The instance terminate policy of the scaling group. Valid values: OldestInstance, NewestInstance, OldestScalingConfigurationWithOldestInstance, OldestScalingConfigurationWithNewestInstance. Default value: OldestScalingConfigurationWithOldestInstance.
        /// </summary>
        [Input("instanceTerminatePolicy")]
        public Input<string>? InstanceTerminatePolicy { get; set; }

        /// <summary>
        /// The ID of the launch template bound to the scaling group. The launch template and scaling configuration cannot take effect at the same time.
        /// </summary>
        [Input("launchTemplateId")]
        public Input<string>? LaunchTemplateId { get; set; }

        /// <summary>
        /// The version of the launch template bound to the scaling group. Valid values are the version number, Latest, or Default.
        /// </summary>
        [Input("launchTemplateVersion")]
        public Input<string>? LaunchTemplateVersion { get; set; }

        /// <summary>
        /// The lifecycle state of the scaling group.
        /// </summary>
        [Input("lifecycleState")]
        public Input<string>? LifecycleState { get; set; }

        /// <summary>
        /// The max instance number of the scaling group. Value range: 0 ~ 100.
        /// </summary>
        [Input("maxInstanceNumber")]
        public Input<int>? MaxInstanceNumber { get; set; }

        /// <summary>
        /// The min instance number of the scaling group. Value range: 0 ~ 100.
        /// </summary>
        [Input("minInstanceNumber")]
        public Input<int>? MinInstanceNumber { get; set; }

        /// <summary>
        /// The multi az policy of the scaling group. Valid values: PRIORITY, BALANCE. Default value: PRIORITY.
        /// </summary>
        [Input("multiAzPolicy")]
        public Input<string>? MultiAzPolicy { get; set; }

        /// <summary>
        /// The ProjectName of the scaling group.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The id of the scaling group.
        /// </summary>
        [Input("scalingGroupId")]
        public Input<string>? ScalingGroupId { get; set; }

        /// <summary>
        /// The name of the scaling group.
        /// </summary>
        [Input("scalingGroupName")]
        public Input<string>? ScalingGroupName { get; set; }

        [Input("serverGroupAttributes")]
        private InputList<Inputs.ScalingGroupServerGroupAttributeGetArgs>? _serverGroupAttributes;

        /// <summary>
        /// The load balancer server group attributes of the scaling group.
        /// </summary>
        public InputList<Inputs.ScalingGroupServerGroupAttributeGetArgs> ServerGroupAttributes
        {
            get => _serverGroupAttributes ?? (_serverGroupAttributes = new InputList<Inputs.ScalingGroupServerGroupAttributeGetArgs>());
            set => _serverGroupAttributes = value;
        }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// The list of the subnet id to which the ENI is connected.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.ScalingGroupTagGetArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.ScalingGroupTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ScalingGroupTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The total instance count of the scaling group.
        /// </summary>
        [Input("totalInstanceCount")]
        public Input<int>? TotalInstanceCount { get; set; }

        /// <summary>
        /// The create time of the scaling group.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The VPC id of the scaling group.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public ScalingGroupState()
        {
        }
        public static new ScalingGroupState Empty => new ScalingGroupState();
    }
}
