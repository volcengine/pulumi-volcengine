// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Vpc
{
    public static class Ipv6AddressBandwidths
    {
        /// <summary>
        /// Use this data source to query detailed information of vpc ipv6 address bandwidths
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vpc.Ipv6AddressBandwidths.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "eip-in2y2duvtlhc8gbssyfnhfre",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<Ipv6AddressBandwidthsResult> InvokeAsync(Ipv6AddressBandwidthsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Ipv6AddressBandwidthsResult>("volcengine:vpc/ipv6AddressBandwidths:Ipv6AddressBandwidths", args ?? new Ipv6AddressBandwidthsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of vpc ipv6 address bandwidths
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vpc.Ipv6AddressBandwidths.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "eip-in2y2duvtlhc8gbssyfnhfre",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<Ipv6AddressBandwidthsResult> Invoke(Ipv6AddressBandwidthsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Ipv6AddressBandwidthsResult>("volcengine:vpc/ipv6AddressBandwidths:Ipv6AddressBandwidths", args ?? new Ipv6AddressBandwidthsInvokeArgs(), options.WithDefaults());
    }


    public sealed class Ipv6AddressBandwidthsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the associated instance.
        /// </summary>
        [Input("associatedInstanceId")]
        public string? AssociatedInstanceId { get; set; }

        /// <summary>
        /// The type of the associated instance.
        /// </summary>
        [Input("associatedInstanceType")]
        public string? AssociatedInstanceType { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// Allocation IDs of the Ipv6 address width.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("ipv6Addresses")]
        private List<string>? _ipv6Addresses;

        /// <summary>
        /// The ipv6 addresses.
        /// </summary>
        public List<string> Ipv6Addresses
        {
            get => _ipv6Addresses ?? (_ipv6Addresses = new List<string>());
            set => _ipv6Addresses = value;
        }

        /// <summary>
        /// ISP of the ipv6 address.
        /// </summary>
        [Input("isp")]
        public string? Isp { get; set; }

        /// <summary>
        /// The network type of the ipv6 address.
        /// </summary>
        [Input("networkType")]
        public string? NetworkType { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ID of Vpc the ipv6 address in.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public Ipv6AddressBandwidthsArgs()
        {
        }
        public static new Ipv6AddressBandwidthsArgs Empty => new Ipv6AddressBandwidthsArgs();
    }

    public sealed class Ipv6AddressBandwidthsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the associated instance.
        /// </summary>
        [Input("associatedInstanceId")]
        public Input<string>? AssociatedInstanceId { get; set; }

        /// <summary>
        /// The type of the associated instance.
        /// </summary>
        [Input("associatedInstanceType")]
        public Input<string>? AssociatedInstanceType { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// Allocation IDs of the Ipv6 address width.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("ipv6Addresses")]
        private InputList<string>? _ipv6Addresses;

        /// <summary>
        /// The ipv6 addresses.
        /// </summary>
        public InputList<string> Ipv6Addresses
        {
            get => _ipv6Addresses ?? (_ipv6Addresses = new InputList<string>());
            set => _ipv6Addresses = value;
        }

        /// <summary>
        /// ISP of the ipv6 address.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        /// <summary>
        /// The network type of the ipv6 address.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ID of Vpc the ipv6 address in.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public Ipv6AddressBandwidthsInvokeArgs()
        {
        }
        public static new Ipv6AddressBandwidthsInvokeArgs Empty => new Ipv6AddressBandwidthsInvokeArgs();
    }


    [OutputType]
    public sealed class Ipv6AddressBandwidthsResult
    {
        public readonly string? AssociatedInstanceId;
        public readonly string? AssociatedInstanceType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The collection of Ipv6AddressBandwidth query.
        /// </summary>
        public readonly ImmutableArray<Outputs.Ipv6AddressBandwidthsIpv6AddressBandwidthResult> Ipv6AddressBandwidths;
        public readonly ImmutableArray<string> Ipv6Addresses;
        /// <summary>
        /// The ISP of the Ipv6AddressBandwidth.
        /// </summary>
        public readonly string? Isp;
        /// <summary>
        /// The network type of the Ipv6AddressBandwidth.
        /// </summary>
        public readonly string? NetworkType;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of Ipv6AddressBandwidth query.
        /// </summary>
        public readonly int TotalCount;
        public readonly string? VpcId;

        [OutputConstructor]
        private Ipv6AddressBandwidthsResult(
            string? associatedInstanceId,

            string? associatedInstanceType,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.Ipv6AddressBandwidthsIpv6AddressBandwidthResult> ipv6AddressBandwidths,

            ImmutableArray<string> ipv6Addresses,

            string? isp,

            string? networkType,

            string? outputFile,

            int totalCount,

            string? vpcId)
        {
            AssociatedInstanceId = associatedInstanceId;
            AssociatedInstanceType = associatedInstanceType;
            Id = id;
            Ids = ids;
            Ipv6AddressBandwidths = ipv6AddressBandwidths;
            Ipv6Addresses = ipv6Addresses;
            Isp = isp;
            NetworkType = networkType;
            OutputFile = outputFile;
            TotalCount = totalCount;
            VpcId = vpcId;
        }
    }
}
