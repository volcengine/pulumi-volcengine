// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Vpc
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dataEcs = Volcengine.Ecs.Instances.Invoke(new()
    ///     {
    ///         Ids = new[]
    ///         {
    ///             "i-ycal1mtpucl8j0hjiihy",
    ///         },
    ///     });
    /// 
    ///     var dataIpv6 = Volcengine.Vpc.Ipv6Addresses.Invoke(new()
    ///     {
    ///         AssociatedInstanceId = dataEcs.Apply(instancesResult =&gt; instancesResult.Instances[0]?.InstanceId),
    ///     });
    /// 
    ///     var foo = new Volcengine.Vpc.Ipv6AddressBandwidth("foo", new()
    ///     {
    ///         Ipv6Address = dataIpv6.Apply(ipv6AddressesResult =&gt; ipv6AddressesResult.Ipv6Addresses[0]?.Ipv6Address),
    ///         BillingType = "PostPaidByBandwidth",
    ///         Bandwidth = 5,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Ipv6AddressBandwidth can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:vpc/ipv6AddressBandwidth:Ipv6AddressBandwidth default eip-2fede9fsgnr4059gp674m6ney
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vpc/ipv6AddressBandwidth:Ipv6AddressBandwidth")]
    public partial class Ipv6AddressBandwidth : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("allocationId")]
        public Output<string> AllocationId { get; private set; } = null!;

        /// <summary>
        /// Peek bandwidth of the Ipv6 address. Valid values: 1 to 200. Unit: Mbit/s.
        /// </summary>
        [Output("bandwidth")]
        public Output<int> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// BillingType of the Ipv6 bandwidth. Valid values: `PostPaidByBandwidth`; `PostPaidByTraffic`.
        /// </summary>
        [Output("billingType")]
        public Output<string> BillingType { get; private set; } = null!;

        /// <summary>
        /// The BusinessStatus of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("businessStatus")]
        public Output<string> BusinessStatus { get; private set; } = null!;

        /// <summary>
        /// Creation time of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Delete time of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the associated instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The type of the associated instance.
        /// </summary>
        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        /// <summary>
        /// Ipv6 address.
        /// </summary>
        [Output("ipv6Address")]
        public Output<string> Ipv6Address { get; private set; } = null!;

        /// <summary>
        /// The ISP of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("isp")]
        public Output<string> Isp { get; private set; } = null!;

        /// <summary>
        /// The BusinessStatus of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("lockReason")]
        public Output<string> LockReason { get; private set; } = null!;

        /// <summary>
        /// The network type of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// Overdue time of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("overdueTime")]
        public Output<string> OverdueTime { get; private set; } = null!;

        /// <summary>
        /// The status of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Update time of the Ipv6AddressBandwidth.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Ipv6AddressBandwidth resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ipv6AddressBandwidth(string name, Ipv6AddressBandwidthArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vpc/ipv6AddressBandwidth:Ipv6AddressBandwidth", name, args ?? new Ipv6AddressBandwidthArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ipv6AddressBandwidth(string name, Input<string> id, Ipv6AddressBandwidthState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vpc/ipv6AddressBandwidth:Ipv6AddressBandwidth", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ipv6AddressBandwidth resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ipv6AddressBandwidth Get(string name, Input<string> id, Ipv6AddressBandwidthState? state = null, CustomResourceOptions? options = null)
        {
            return new Ipv6AddressBandwidth(name, id, state, options);
        }
    }

    public sealed class Ipv6AddressBandwidthArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Peek bandwidth of the Ipv6 address. Valid values: 1 to 200. Unit: Mbit/s.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// BillingType of the Ipv6 bandwidth. Valid values: `PostPaidByBandwidth`; `PostPaidByTraffic`.
        /// </summary>
        [Input("billingType", required: true)]
        public Input<string> BillingType { get; set; } = null!;

        /// <summary>
        /// Ipv6 address.
        /// </summary>
        [Input("ipv6Address", required: true)]
        public Input<string> Ipv6Address { get; set; } = null!;

        public Ipv6AddressBandwidthArgs()
        {
        }
        public static new Ipv6AddressBandwidthArgs Empty => new Ipv6AddressBandwidthArgs();
    }

    public sealed class Ipv6AddressBandwidthState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("allocationId")]
        public Input<string>? AllocationId { get; set; }

        /// <summary>
        /// Peek bandwidth of the Ipv6 address. Valid values: 1 to 200. Unit: Mbit/s.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// BillingType of the Ipv6 bandwidth. Valid values: `PostPaidByBandwidth`; `PostPaidByTraffic`.
        /// </summary>
        [Input("billingType")]
        public Input<string>? BillingType { get; set; }

        /// <summary>
        /// The BusinessStatus of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("businessStatus")]
        public Input<string>? BusinessStatus { get; set; }

        /// <summary>
        /// Creation time of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// Delete time of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("deleteTime")]
        public Input<string>? DeleteTime { get; set; }

        /// <summary>
        /// The ID of the associated instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The type of the associated instance.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Ipv6 address.
        /// </summary>
        [Input("ipv6Address")]
        public Input<string>? Ipv6Address { get; set; }

        /// <summary>
        /// The ISP of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("isp")]
        public Input<string>? Isp { get; set; }

        /// <summary>
        /// The BusinessStatus of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("lockReason")]
        public Input<string>? LockReason { get; set; }

        /// <summary>
        /// The network type of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// Overdue time of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("overdueTime")]
        public Input<string>? OverdueTime { get; set; }

        /// <summary>
        /// The status of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Update time of the Ipv6AddressBandwidth.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public Ipv6AddressBandwidthState()
        {
        }
        public static new Ipv6AddressBandwidthState Empty => new Ipv6AddressBandwidthState();
    }
}
