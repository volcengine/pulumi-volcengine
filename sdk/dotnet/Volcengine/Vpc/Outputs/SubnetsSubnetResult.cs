// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Vpc.Outputs
{

    [OutputType]
    public sealed class SubnetsSubnetResult
    {
        /// <summary>
        /// The account ID which the subnet belongs to.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The count of available ip address.
        /// </summary>
        public readonly int AvailableIpAddressCount;
        /// <summary>
        /// The cidr block of Subnet.
        /// </summary>
        public readonly string CidrBlock;
        /// <summary>
        /// Creation time of Subnet.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The description of Subnet.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of Subnet.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IPv6 CIDR block of the VPC.
        /// </summary>
        public readonly string Ipv6CidrBlock;
        /// <summary>
        /// The ID of network acl which this subnet associate with.
        /// </summary>
        public readonly string NetworkAclId;
        /// <summary>
        /// The route table information.
        /// </summary>
        public readonly Outputs.SubnetsSubnetRouteTableResult RouteTable;
        /// <summary>
        /// The ID of route table which subnet associated with.
        /// </summary>
        public readonly string RouteTableId;
        /// <summary>
        /// The route table type.
        /// </summary>
        public readonly string RouteTableType;
        /// <summary>
        /// The Status of Subnet.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The subnet name to query.
        /// </summary>
        public readonly string SubnetName;
        /// <summary>
        /// The Count of ipv4.
        /// </summary>
        public readonly int TotalIpv4Count;
        /// <summary>
        /// Update time of Subnet.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// The ID of VPC which subnet belongs to.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The ID of zone which subnet belongs to.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private SubnetsSubnetResult(
            string accountId,

            int availableIpAddressCount,

            string cidrBlock,

            string creationTime,

            string description,

            string id,

            string ipv6CidrBlock,

            string networkAclId,

            Outputs.SubnetsSubnetRouteTableResult routeTable,

            string routeTableId,

            string routeTableType,

            string status,

            string subnetName,

            int totalIpv4Count,

            string updateTime,

            string vpcId,

            string zoneId)
        {
            AccountId = accountId;
            AvailableIpAddressCount = availableIpAddressCount;
            CidrBlock = cidrBlock;
            CreationTime = creationTime;
            Description = description;
            Id = id;
            Ipv6CidrBlock = ipv6CidrBlock;
            NetworkAclId = networkAclId;
            RouteTable = routeTable;
            RouteTableId = routeTableId;
            RouteTableType = routeTableType;
            Status = status;
            SubnetName = subnetName;
            TotalIpv4Count = totalIpv4Count;
            UpdateTime = updateTime;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
}
