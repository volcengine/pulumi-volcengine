// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Vpc
{
    public static class SecurityGroupRules
    {
        /// <summary>
        /// Use this data source to query detailed information of security group rules
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vpc.SecurityGroupRules.Invoke(new()
        ///     {
        ///         SecurityGroupId = "sg-13f2nau7x93wg3n6nu3z5sxib",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<SecurityGroupRulesResult> InvokeAsync(SecurityGroupRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<SecurityGroupRulesResult>("volcengine:vpc/securityGroupRules:SecurityGroupRules", args ?? new SecurityGroupRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of security group rules
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Vpc.SecurityGroupRules.Invoke(new()
        ///     {
        ///         SecurityGroupId = "sg-13f2nau7x93wg3n6nu3z5sxib",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<SecurityGroupRulesResult> Invoke(SecurityGroupRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<SecurityGroupRulesResult>("volcengine:vpc/securityGroupRules:SecurityGroupRules", args ?? new SecurityGroupRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class SecurityGroupRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cidr ip of egress/ingress Rule.
        /// </summary>
        [Input("cidrIp")]
        public string? CidrIp { get; set; }

        /// <summary>
        /// Direction of rule, ingress (inbound) or egress (outbound).
        /// </summary>
        [Input("direction")]
        public string? Direction { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
        /// </summary>
        [Input("protocol")]
        public string? Protocol { get; set; }

        /// <summary>
        /// SecurityGroup ID.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public string SecurityGroupId { get; set; } = null!;

        /// <summary>
        /// ID of the source security group whose access permission you want to set.
        /// </summary>
        [Input("sourceGroupId")]
        public string? SourceGroupId { get; set; }

        public SecurityGroupRulesArgs()
        {
        }
        public static new SecurityGroupRulesArgs Empty => new SecurityGroupRulesArgs();
    }

    public sealed class SecurityGroupRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cidr ip of egress/ingress Rule.
        /// </summary>
        [Input("cidrIp")]
        public Input<string>? CidrIp { get; set; }

        /// <summary>
        /// Direction of rule, ingress (inbound) or egress (outbound).
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// SecurityGroup ID.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        /// <summary>
        /// ID of the source security group whose access permission you want to set.
        /// </summary>
        [Input("sourceGroupId")]
        public Input<string>? SourceGroupId { get; set; }

        public SecurityGroupRulesInvokeArgs()
        {
        }
        public static new SecurityGroupRulesInvokeArgs Empty => new SecurityGroupRulesInvokeArgs();
    }


    [OutputType]
    public sealed class SecurityGroupRulesResult
    {
        /// <summary>
        /// Cidr ip of egress/ingress Rule.
        /// </summary>
        public readonly string? CidrIp;
        /// <summary>
        /// Direction of rule, ingress (inbound) or egress (outbound).
        /// </summary>
        public readonly string? Direction;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        /// <summary>
        /// Protocol of the SecurityGroup, the value can be `tcp` or `udp` or `icmp` or `all`.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Id of SecurityGroup.
        /// </summary>
        public readonly string SecurityGroupId;
        /// <summary>
        /// The collection of SecurityGroup query.
        /// </summary>
        public readonly ImmutableArray<Outputs.SecurityGroupRulesSecurityGroupRuleResult> SecurityGroupRules;
        /// <summary>
        /// ID of the source security group whose access permission you want to set.
        /// </summary>
        public readonly string? SourceGroupId;

        [OutputConstructor]
        private SecurityGroupRulesResult(
            string? cidrIp,

            string? direction,

            string id,

            string? outputFile,

            string? protocol,

            string securityGroupId,

            ImmutableArray<Outputs.SecurityGroupRulesSecurityGroupRuleResult> securityGroupRules,

            string? sourceGroupId)
        {
            CidrIp = cidrIp;
            Direction = direction;
            Id = id;
            OutputFile = outputFile;
            Protocol = protocol;
            SecurityGroupId = securityGroupId;
            SecurityGroupRules = securityGroupRules;
            SourceGroupId = sourceGroupId;
        }
    }
}
