// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Vpc
{
    /// <summary>
    /// Provides a resource to manage network acl
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Vpc.NetworkAcl("foo", new()
    ///     {
    ///         EgressAclEntries = new[]
    ///         {
    ///             new Volcengine.Vpc.Inputs.NetworkAclEgressAclEntryArgs
    ///             {
    ///                 DestinationCidrIp = "192.168.0.0/16",
    ///                 NetworkAclEntryName = "egress2",
    ///                 Policy = "accept",
    ///                 Protocol = "all",
    ///             },
    ///         },
    ///         IngressAclEntries = new[]
    ///         {
    ///             new Volcengine.Vpc.Inputs.NetworkAclIngressAclEntryArgs
    ///             {
    ///                 NetworkAclEntryName = "ingress1",
    ///                 Policy = "accept",
    ///                 Protocol = "all",
    ///                 SourceCidrIp = "192.168.0.0/24",
    ///             },
    ///             new Volcengine.Vpc.Inputs.NetworkAclIngressAclEntryArgs
    ///             {
    ///                 NetworkAclEntryName = "ingress3",
    ///                 Policy = "accept",
    ///                 Port = "80/80",
    ///                 Protocol = "tcp",
    ///                 SourceCidrIp = "192.168.0.0/24",
    ///             },
    ///         },
    ///         NetworkAclName = "tf-test-acl",
    ///         ProjectName = "default",
    ///         VpcId = "vpc-2d6jskar243k058ozfdae13ne",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Network Acl can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:vpc/networkAcl:NetworkAcl default nacl-172leak37mi9s4d1w33pswqkh
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:vpc/networkAcl:NetworkAcl")]
    public partial class NetworkAcl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Network Acl.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The egress entries of Network Acl.
        /// </summary>
        [Output("egressAclEntries")]
        public Output<ImmutableArray<Outputs.NetworkAclEgressAclEntry>> EgressAclEntries { get; private set; } = null!;

        /// <summary>
        /// The ingress entries of Network Acl.
        /// </summary>
        [Output("ingressAclEntries")]
        public Output<ImmutableArray<Outputs.NetworkAclIngressAclEntry>> IngressAclEntries { get; private set; } = null!;

        /// <summary>
        /// The name of Network Acl.
        /// </summary>
        [Output("networkAclName")]
        public Output<string> NetworkAclName { get; private set; } = null!;

        /// <summary>
        /// The project name of the network acl.
        /// </summary>
        [Output("projectName")]
        public Output<string?> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The vpc id of Network Acl.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkAcl(string name, NetworkAclArgs args, CustomResourceOptions? options = null)
            : base("volcengine:vpc/networkAcl:NetworkAcl", name, args ?? new NetworkAclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkAcl(string name, Input<string> id, NetworkAclState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:vpc/networkAcl:NetworkAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkAcl Get(string name, Input<string> id, NetworkAclState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkAcl(name, id, state, options);
        }
    }

    public sealed class NetworkAclArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Network Acl.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("egressAclEntries")]
        private InputList<Inputs.NetworkAclEgressAclEntryArgs>? _egressAclEntries;

        /// <summary>
        /// The egress entries of Network Acl.
        /// </summary>
        public InputList<Inputs.NetworkAclEgressAclEntryArgs> EgressAclEntries
        {
            get => _egressAclEntries ?? (_egressAclEntries = new InputList<Inputs.NetworkAclEgressAclEntryArgs>());
            set => _egressAclEntries = value;
        }

        [Input("ingressAclEntries")]
        private InputList<Inputs.NetworkAclIngressAclEntryArgs>? _ingressAclEntries;

        /// <summary>
        /// The ingress entries of Network Acl.
        /// </summary>
        public InputList<Inputs.NetworkAclIngressAclEntryArgs> IngressAclEntries
        {
            get => _ingressAclEntries ?? (_ingressAclEntries = new InputList<Inputs.NetworkAclIngressAclEntryArgs>());
            set => _ingressAclEntries = value;
        }

        /// <summary>
        /// The name of Network Acl.
        /// </summary>
        [Input("networkAclName")]
        public Input<string>? NetworkAclName { get; set; }

        /// <summary>
        /// The project name of the network acl.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The vpc id of Network Acl.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public NetworkAclArgs()
        {
        }
        public static new NetworkAclArgs Empty => new NetworkAclArgs();
    }

    public sealed class NetworkAclState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Network Acl.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("egressAclEntries")]
        private InputList<Inputs.NetworkAclEgressAclEntryGetArgs>? _egressAclEntries;

        /// <summary>
        /// The egress entries of Network Acl.
        /// </summary>
        public InputList<Inputs.NetworkAclEgressAclEntryGetArgs> EgressAclEntries
        {
            get => _egressAclEntries ?? (_egressAclEntries = new InputList<Inputs.NetworkAclEgressAclEntryGetArgs>());
            set => _egressAclEntries = value;
        }

        [Input("ingressAclEntries")]
        private InputList<Inputs.NetworkAclIngressAclEntryGetArgs>? _ingressAclEntries;

        /// <summary>
        /// The ingress entries of Network Acl.
        /// </summary>
        public InputList<Inputs.NetworkAclIngressAclEntryGetArgs> IngressAclEntries
        {
            get => _ingressAclEntries ?? (_ingressAclEntries = new InputList<Inputs.NetworkAclIngressAclEntryGetArgs>());
            set => _ingressAclEntries = value;
        }

        /// <summary>
        /// The name of Network Acl.
        /// </summary>
        [Input("networkAclName")]
        public Input<string>? NetworkAclName { get; set; }

        /// <summary>
        /// The project name of the network acl.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The vpc id of Network Acl.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public NetworkAclState()
        {
        }
        public static new NetworkAclState Empty => new NetworkAclState();
    }
}
