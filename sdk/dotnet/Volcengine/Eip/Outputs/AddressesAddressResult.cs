// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Eip.Outputs
{

    [OutputType]
    public sealed class AddressesAddressResult
    {
        /// <summary>
        /// The id of the EIP address.
        /// </summary>
        public readonly string AllocationId;
        /// <summary>
        /// The allocation time of the EIP.
        /// </summary>
        public readonly string AllocationTime;
        /// <summary>
        /// The peek bandwidth of the EIP.
        /// </summary>
        public readonly int Bandwidth;
        /// <summary>
        /// The billing type of the EIP.
        /// </summary>
        public readonly string BillingType;
        /// <summary>
        /// The business status of the EIP.
        /// </summary>
        public readonly string BusinessStatus;
        /// <summary>
        /// The deleted time of the EIP.
        /// </summary>
        public readonly string DeletedTime;
        /// <summary>
        /// The description of the EIP.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The EIP ip address of the EIP.
        /// </summary>
        public readonly string EipAddress;
        /// <summary>
        /// The expired time of the EIP.
        /// </summary>
        public readonly string ExpiredTime;
        /// <summary>
        /// The id of the EIP address.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The instance id which be associated to the EIP.
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// The type of the associated instance.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// An ISP of EIP Address, the value can be `BGP` or `ChinaMobile` or `ChinaUnicom` or `ChinaTelecom`.
        /// </summary>
        public readonly string Isp;
        /// <summary>
        /// The lock reason of the EIP.
        /// </summary>
        public readonly string LockReason;
        /// <summary>
        /// A name of EIP.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The overdue time of the EIP.
        /// </summary>
        public readonly string OverdueTime;
        /// <summary>
        /// The ProjectName of EIP.
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// A status of EIP, the value can be `Attaching` or `Detaching` or `Attached` or `Available`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.AddressesAddressTagResult> Tags;
        /// <summary>
        /// The last update time of the EIP.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private AddressesAddressResult(
            string allocationId,

            string allocationTime,

            int bandwidth,

            string billingType,

            string businessStatus,

            string deletedTime,

            string description,

            string eipAddress,

            string expiredTime,

            string id,

            string instanceId,

            string instanceType,

            string isp,

            string lockReason,

            string name,

            string overdueTime,

            string projectName,

            string status,

            ImmutableArray<Outputs.AddressesAddressTagResult> tags,

            string updatedAt)
        {
            AllocationId = allocationId;
            AllocationTime = allocationTime;
            Bandwidth = bandwidth;
            BillingType = billingType;
            BusinessStatus = businessStatus;
            DeletedTime = deletedTime;
            Description = description;
            EipAddress = eipAddress;
            ExpiredTime = expiredTime;
            Id = id;
            InstanceId = instanceId;
            InstanceType = instanceType;
            Isp = isp;
            LockReason = lockReason;
            Name = name;
            OverdueTime = overdueTime;
            ProjectName = projectName;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
