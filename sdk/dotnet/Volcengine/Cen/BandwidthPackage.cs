// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Cen
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Cen.BandwidthPackage("foo", new()
    ///     {
    ///         Bandwidth = 32,
    ///         BillingType = "PrePaid",
    ///         CenBandwidthPackageName = "tf-test",
    ///         Description = "tf-test1",
    ///         LocalGeographicRegionSetId = "China",
    ///         PeerGeographicRegionSetId = "China",
    ///         Period = 1,
    ///         PeriodUnit = "Year",
    ///         ProjectName = "default",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CenBandwidthPackage can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:cen/bandwidthPackage:BandwidthPackage default cbp-4c2zaavbvh5f42****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:cen/bandwidthPackage:BandwidthPackage")]
    public partial class BandwidthPackage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account ID of the cen bandwidth package.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The bandwidth of the cen bandwidth package. Value: 2~10000.
        /// </summary>
        [Output("bandwidth")]
        public Output<int> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// The billing type of the cen bandwidth package. Only support `PrePaid` and default value is `PrePaid`. Terraform will
        /// only remove the PrePaid cen bandwidth package from the state file, not actually remove.
        /// </summary>
        [Output("billingType")]
        public Output<string?> BillingType { get; private set; } = null!;

        /// <summary>
        /// The business status of the cen bandwidth package.
        /// </summary>
        [Output("businessStatus")]
        public Output<string> BusinessStatus { get; private set; } = null!;

        /// <summary>
        /// The ID of the cen bandwidth package.
        /// </summary>
        [Output("cenBandwidthPackageId")]
        public Output<string> CenBandwidthPackageId { get; private set; } = null!;

        /// <summary>
        /// The name of the cen bandwidth package.
        /// </summary>
        [Output("cenBandwidthPackageName")]
        public Output<string> CenBandwidthPackageName { get; private set; } = null!;

        /// <summary>
        /// The cen IDs of the bandwidth package.
        /// </summary>
        [Output("cenIds")]
        public Output<ImmutableArray<string>> CenIds { get; private set; } = null!;

        /// <summary>
        /// The create time of the cen bandwidth package.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The deleted time of the cen bandwidth package.
        /// </summary>
        [Output("deletedTime")]
        public Output<string> DeletedTime { get; private set; } = null!;

        /// <summary>
        /// The description of the cen bandwidth package.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The expired time of the cen bandwidth package.
        /// </summary>
        [Output("expiredTime")]
        public Output<string> ExpiredTime { get; private set; } = null!;

        /// <summary>
        /// The local geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
        /// </summary>
        [Output("localGeographicRegionSetId")]
        public Output<string?> LocalGeographicRegionSetId { get; private set; } = null!;

        /// <summary>
        /// The peer geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
        /// </summary>
        [Output("peerGeographicRegionSetId")]
        public Output<string?> PeerGeographicRegionSetId { get; private set; } = null!;

        /// <summary>
        /// The period of the cen bandwidth package. Default value is 1.
        /// </summary>
        [Output("period")]
        public Output<int?> Period { get; private set; } = null!;

        /// <summary>
        /// The period unit of the cen bandwidth package. Value: `Month`, `Year`. Default value is `Month`.
        /// </summary>
        [Output("periodUnit")]
        public Output<string?> PeriodUnit { get; private set; } = null!;

        /// <summary>
        /// The ProjectName of the cen bandwidth package.
        /// </summary>
        [Output("projectName")]
        public Output<string?> ProjectName { get; private set; } = null!;

        /// <summary>
        /// The remain bandwidth of the cen bandwidth package.
        /// </summary>
        [Output("remainingBandwidth")]
        public Output<int> RemainingBandwidth { get; private set; } = null!;

        /// <summary>
        /// The status of the cen bandwidth package.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.BandwidthPackageTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The update time of the cen bandwidth package.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a BandwidthPackage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BandwidthPackage(string name, BandwidthPackageArgs? args = null, CustomResourceOptions? options = null)
            : base("volcengine:cen/bandwidthPackage:BandwidthPackage", name, args ?? new BandwidthPackageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BandwidthPackage(string name, Input<string> id, BandwidthPackageState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:cen/bandwidthPackage:BandwidthPackage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BandwidthPackage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BandwidthPackage Get(string name, Input<string> id, BandwidthPackageState? state = null, CustomResourceOptions? options = null)
        {
            return new BandwidthPackage(name, id, state, options);
        }
    }

    public sealed class BandwidthPackageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth of the cen bandwidth package. Value: 2~10000.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The billing type of the cen bandwidth package. Only support `PrePaid` and default value is `PrePaid`. Terraform will
        /// only remove the PrePaid cen bandwidth package from the state file, not actually remove.
        /// </summary>
        [Input("billingType")]
        public Input<string>? BillingType { get; set; }

        /// <summary>
        /// The name of the cen bandwidth package.
        /// </summary>
        [Input("cenBandwidthPackageName")]
        public Input<string>? CenBandwidthPackageName { get; set; }

        /// <summary>
        /// The description of the cen bandwidth package.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The local geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
        /// </summary>
        [Input("localGeographicRegionSetId")]
        public Input<string>? LocalGeographicRegionSetId { get; set; }

        /// <summary>
        /// The peer geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
        /// </summary>
        [Input("peerGeographicRegionSetId")]
        public Input<string>? PeerGeographicRegionSetId { get; set; }

        /// <summary>
        /// The period of the cen bandwidth package. Default value is 1.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The period unit of the cen bandwidth package. Value: `Month`, `Year`. Default value is `Month`.
        /// </summary>
        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        /// <summary>
        /// The ProjectName of the cen bandwidth package.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.BandwidthPackageTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.BandwidthPackageTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.BandwidthPackageTagArgs>());
            set => _tags = value;
        }

        public BandwidthPackageArgs()
        {
        }
        public static new BandwidthPackageArgs Empty => new BandwidthPackageArgs();
    }

    public sealed class BandwidthPackageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account ID of the cen bandwidth package.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The bandwidth of the cen bandwidth package. Value: 2~10000.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The billing type of the cen bandwidth package. Only support `PrePaid` and default value is `PrePaid`. Terraform will
        /// only remove the PrePaid cen bandwidth package from the state file, not actually remove.
        /// </summary>
        [Input("billingType")]
        public Input<string>? BillingType { get; set; }

        /// <summary>
        /// The business status of the cen bandwidth package.
        /// </summary>
        [Input("businessStatus")]
        public Input<string>? BusinessStatus { get; set; }

        /// <summary>
        /// The ID of the cen bandwidth package.
        /// </summary>
        [Input("cenBandwidthPackageId")]
        public Input<string>? CenBandwidthPackageId { get; set; }

        /// <summary>
        /// The name of the cen bandwidth package.
        /// </summary>
        [Input("cenBandwidthPackageName")]
        public Input<string>? CenBandwidthPackageName { get; set; }

        [Input("cenIds")]
        private InputList<string>? _cenIds;

        /// <summary>
        /// The cen IDs of the bandwidth package.
        /// </summary>
        public InputList<string> CenIds
        {
            get => _cenIds ?? (_cenIds = new InputList<string>());
            set => _cenIds = value;
        }

        /// <summary>
        /// The create time of the cen bandwidth package.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The deleted time of the cen bandwidth package.
        /// </summary>
        [Input("deletedTime")]
        public Input<string>? DeletedTime { get; set; }

        /// <summary>
        /// The description of the cen bandwidth package.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The expired time of the cen bandwidth package.
        /// </summary>
        [Input("expiredTime")]
        public Input<string>? ExpiredTime { get; set; }

        /// <summary>
        /// The local geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
        /// </summary>
        [Input("localGeographicRegionSetId")]
        public Input<string>? LocalGeographicRegionSetId { get; set; }

        /// <summary>
        /// The peer geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
        /// </summary>
        [Input("peerGeographicRegionSetId")]
        public Input<string>? PeerGeographicRegionSetId { get; set; }

        /// <summary>
        /// The period of the cen bandwidth package. Default value is 1.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// The period unit of the cen bandwidth package. Value: `Month`, `Year`. Default value is `Month`.
        /// </summary>
        [Input("periodUnit")]
        public Input<string>? PeriodUnit { get; set; }

        /// <summary>
        /// The ProjectName of the cen bandwidth package.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// The remain bandwidth of the cen bandwidth package.
        /// </summary>
        [Input("remainingBandwidth")]
        public Input<int>? RemainingBandwidth { get; set; }

        /// <summary>
        /// The status of the cen bandwidth package.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<Inputs.BandwidthPackageTagGetArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.BandwidthPackageTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.BandwidthPackageTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The update time of the cen bandwidth package.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public BandwidthPackageState()
        {
        }
        public static new BandwidthPackageState Empty => new BandwidthPackageState();
    }
}
