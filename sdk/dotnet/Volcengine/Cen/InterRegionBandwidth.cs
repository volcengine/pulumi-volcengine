// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Cen
{
    /// <summary>
    /// Provides a resource to manage cen inter region bandwidth
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Cen.InterRegionBandwidth("foo", new()
    ///     {
    ///         Bandwidth = 1,
    ///         CenId = "cen-274vsbhwvvb407fap8sp611w7",
    ///         LocalRegionId = "cn-north-3",
    ///         PeerRegionId = "cn-zhangjiakou",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CenInterRegionBandwidth can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:cen/interRegionBandwidth:InterRegionBandwidth default cirb-3tex2x1cwd4c6c0v****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:cen/interRegionBandwidth:InterRegionBandwidth")]
    public partial class InterRegionBandwidth : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The bandwidth of the cen inter region bandwidth.
        /// </summary>
        [Output("bandwidth")]
        public Output<int> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// The cen ID of the cen inter region bandwidth.
        /// </summary>
        [Output("cenId")]
        public Output<string> CenId { get; private set; } = null!;

        /// <summary>
        /// The create time of the cen inter region bandwidth.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the cen inter region bandwidth.
        /// </summary>
        [Output("interRegionBandwidthId")]
        public Output<string> InterRegionBandwidthId { get; private set; } = null!;

        /// <summary>
        /// The local region id of the cen inter region bandwidth.
        /// </summary>
        [Output("localRegionId")]
        public Output<string> LocalRegionId { get; private set; } = null!;

        /// <summary>
        /// The peer region id of the cen inter region bandwidth.
        /// </summary>
        [Output("peerRegionId")]
        public Output<string> PeerRegionId { get; private set; } = null!;

        /// <summary>
        /// The status of the cen inter region bandwidth.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The update time of the cen inter region bandwidth.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a InterRegionBandwidth resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InterRegionBandwidth(string name, InterRegionBandwidthArgs args, CustomResourceOptions? options = null)
            : base("volcengine:cen/interRegionBandwidth:InterRegionBandwidth", name, args ?? new InterRegionBandwidthArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InterRegionBandwidth(string name, Input<string> id, InterRegionBandwidthState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:cen/interRegionBandwidth:InterRegionBandwidth", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InterRegionBandwidth resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InterRegionBandwidth Get(string name, Input<string> id, InterRegionBandwidthState? state = null, CustomResourceOptions? options = null)
        {
            return new InterRegionBandwidth(name, id, state, options);
        }
    }

    public sealed class InterRegionBandwidthArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth of the cen inter region bandwidth.
        /// </summary>
        [Input("bandwidth", required: true)]
        public Input<int> Bandwidth { get; set; } = null!;

        /// <summary>
        /// The cen ID of the cen inter region bandwidth.
        /// </summary>
        [Input("cenId", required: true)]
        public Input<string> CenId { get; set; } = null!;

        /// <summary>
        /// The local region id of the cen inter region bandwidth.
        /// </summary>
        [Input("localRegionId", required: true)]
        public Input<string> LocalRegionId { get; set; } = null!;

        /// <summary>
        /// The peer region id of the cen inter region bandwidth.
        /// </summary>
        [Input("peerRegionId", required: true)]
        public Input<string> PeerRegionId { get; set; } = null!;

        public InterRegionBandwidthArgs()
        {
        }
        public static new InterRegionBandwidthArgs Empty => new InterRegionBandwidthArgs();
    }

    public sealed class InterRegionBandwidthState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth of the cen inter region bandwidth.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The cen ID of the cen inter region bandwidth.
        /// </summary>
        [Input("cenId")]
        public Input<string>? CenId { get; set; }

        /// <summary>
        /// The create time of the cen inter region bandwidth.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The ID of the cen inter region bandwidth.
        /// </summary>
        [Input("interRegionBandwidthId")]
        public Input<string>? InterRegionBandwidthId { get; set; }

        /// <summary>
        /// The local region id of the cen inter region bandwidth.
        /// </summary>
        [Input("localRegionId")]
        public Input<string>? LocalRegionId { get; set; }

        /// <summary>
        /// The peer region id of the cen inter region bandwidth.
        /// </summary>
        [Input("peerRegionId")]
        public Input<string>? PeerRegionId { get; set; }

        /// <summary>
        /// The status of the cen inter region bandwidth.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The update time of the cen inter region bandwidth.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public InterRegionBandwidthState()
        {
        }
        public static new InterRegionBandwidthState Empty => new InterRegionBandwidthState();
    }
}
