// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Nat
{
    /// <summary>
    /// Provides a resource to manage dnat entry
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Nat.DnatEntry("foo", new()
    ///     {
    ///         DnatEntryName = "terraform-test2",
    ///         ExternalIp = "10.249.186.68",
    ///         ExternalPort = "23",
    ///         InternalIp = "193.168.1.1",
    ///         InternalPort = "24",
    ///         NatGatewayId = "ngw-imw3aej7e96o8gbssxkfbybv",
    ///         Protocol = "tcp",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Dnat entry can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:nat/dnatEntry:DnatEntry default dnat-3fvhk47kf56****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:nat/dnatEntry:DnatEntry")]
    public partial class DnatEntry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The id of the DNAT rule.
        /// </summary>
        [Output("dnatEntryId")]
        public Output<string> DnatEntryId { get; private set; } = null!;

        /// <summary>
        /// The name of the DNAT rule.
        /// </summary>
        [Output("dnatEntryName")]
        public Output<string?> DnatEntryName { get; private set; } = null!;

        /// <summary>
        /// Provides the public IP address for public network access.
        /// </summary>
        [Output("externalIp")]
        public Output<string> ExternalIp { get; private set; } = null!;

        /// <summary>
        /// The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
        /// </summary>
        [Output("externalPort")]
        public Output<string> ExternalPort { get; private set; } = null!;

        /// <summary>
        /// Provides the internal IP address.
        /// </summary>
        [Output("internalIp")]
        public Output<string> InternalIp { get; private set; } = null!;

        /// <summary>
        /// The port or port segment on which the cloud server instance provides services to the public network.
        /// </summary>
        [Output("internalPort")]
        public Output<string> InternalPort { get; private set; } = null!;

        /// <summary>
        /// The id of the nat gateway to which the entry belongs.
        /// </summary>
        [Output("natGatewayId")]
        public Output<string> NatGatewayId { get; private set; } = null!;

        /// <summary>
        /// The network protocol.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;


        /// <summary>
        /// Create a DnatEntry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DnatEntry(string name, DnatEntryArgs args, CustomResourceOptions? options = null)
            : base("volcengine:nat/dnatEntry:DnatEntry", name, args ?? new DnatEntryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DnatEntry(string name, Input<string> id, DnatEntryState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:nat/dnatEntry:DnatEntry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DnatEntry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DnatEntry Get(string name, Input<string> id, DnatEntryState? state = null, CustomResourceOptions? options = null)
        {
            return new DnatEntry(name, id, state, options);
        }
    }

    public sealed class DnatEntryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the DNAT rule.
        /// </summary>
        [Input("dnatEntryName")]
        public Input<string>? DnatEntryName { get; set; }

        /// <summary>
        /// Provides the public IP address for public network access.
        /// </summary>
        [Input("externalIp", required: true)]
        public Input<string> ExternalIp { get; set; } = null!;

        /// <summary>
        /// The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
        /// </summary>
        [Input("externalPort", required: true)]
        public Input<string> ExternalPort { get; set; } = null!;

        /// <summary>
        /// Provides the internal IP address.
        /// </summary>
        [Input("internalIp", required: true)]
        public Input<string> InternalIp { get; set; } = null!;

        /// <summary>
        /// The port or port segment on which the cloud server instance provides services to the public network.
        /// </summary>
        [Input("internalPort", required: true)]
        public Input<string> InternalPort { get; set; } = null!;

        /// <summary>
        /// The id of the nat gateway to which the entry belongs.
        /// </summary>
        [Input("natGatewayId", required: true)]
        public Input<string> NatGatewayId { get; set; } = null!;

        /// <summary>
        /// The network protocol.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        public DnatEntryArgs()
        {
        }
        public static new DnatEntryArgs Empty => new DnatEntryArgs();
    }

    public sealed class DnatEntryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the DNAT rule.
        /// </summary>
        [Input("dnatEntryId")]
        public Input<string>? DnatEntryId { get; set; }

        /// <summary>
        /// The name of the DNAT rule.
        /// </summary>
        [Input("dnatEntryName")]
        public Input<string>? DnatEntryName { get; set; }

        /// <summary>
        /// Provides the public IP address for public network access.
        /// </summary>
        [Input("externalIp")]
        public Input<string>? ExternalIp { get; set; }

        /// <summary>
        /// The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
        /// </summary>
        [Input("externalPort")]
        public Input<string>? ExternalPort { get; set; }

        /// <summary>
        /// Provides the internal IP address.
        /// </summary>
        [Input("internalIp")]
        public Input<string>? InternalIp { get; set; }

        /// <summary>
        /// The port or port segment on which the cloud server instance provides services to the public network.
        /// </summary>
        [Input("internalPort")]
        public Input<string>? InternalPort { get; set; }

        /// <summary>
        /// The id of the nat gateway to which the entry belongs.
        /// </summary>
        [Input("natGatewayId")]
        public Input<string>? NatGatewayId { get; set; }

        /// <summary>
        /// The network protocol.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        public DnatEntryState()
        {
        }
        public static new DnatEntryState Empty => new DnatEntryState();
    }
}
