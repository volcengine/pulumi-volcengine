// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Nat.Outputs
{

    [OutputType]
    public sealed class GatewaysNatGatewayResult
    {
        /// <summary>
        /// The billing type of the NatGateway.
        /// </summary>
        public readonly string BillingType;
        /// <summary>
        /// Whether the NatGateway is locked.
        /// </summary>
        public readonly string BusinessStatus;
        /// <summary>
        /// The creation time of the NatGateway.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The deleted time of the NatGateway.
        /// </summary>
        public readonly string DeletedTime;
        /// <summary>
        /// The description of the NatGateway.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The eip addresses of the NatGateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.GatewaysNatGatewayEipAddressResult> EipAddresses;
        /// <summary>
        /// The ID of the NatGateway.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The reason why locking NatGateway.
        /// </summary>
        public readonly string LockReason;
        /// <summary>
        /// The ID of the NatGateway.
        /// </summary>
        public readonly string NatGatewayId;
        /// <summary>
        /// The name of the NatGateway.
        /// </summary>
        public readonly string NatGatewayName;
        /// <summary>
        /// The ID of the network interface.
        /// </summary>
        public readonly string NetworkInterfaceId;
        /// <summary>
        /// The overdue time of the NatGateway.
        /// </summary>
        public readonly string OverdueTime;
        /// <summary>
        /// The specification of the NatGateway.
        /// </summary>
        public readonly string Spec;
        /// <summary>
        /// The status of the NatGateway.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The id of the Subnet.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.GatewaysNatGatewayTagResult> Tags;
        /// <summary>
        /// The update time of the NatGateway.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// The id of the VPC.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GatewaysNatGatewayResult(
            string billingType,

            string businessStatus,

            string creationTime,

            string deletedTime,

            string description,

            ImmutableArray<Outputs.GatewaysNatGatewayEipAddressResult> eipAddresses,

            string id,

            string lockReason,

            string natGatewayId,

            string natGatewayName,

            string networkInterfaceId,

            string overdueTime,

            string spec,

            string status,

            string subnetId,

            ImmutableArray<Outputs.GatewaysNatGatewayTagResult> tags,

            string updatedAt,

            string vpcId)
        {
            BillingType = billingType;
            BusinessStatus = businessStatus;
            CreationTime = creationTime;
            DeletedTime = deletedTime;
            Description = description;
            EipAddresses = eipAddresses;
            Id = id;
            LockReason = lockReason;
            NatGatewayId = natGatewayId;
            NatGatewayName = natGatewayName;
            NetworkInterfaceId = networkInterfaceId;
            OverdueTime = overdueTime;
            Spec = spec;
            Status = status;
            SubnetId = subnetId;
            Tags = tags;
            UpdatedAt = updatedAt;
            VpcId = vpcId;
        }
    }
}
