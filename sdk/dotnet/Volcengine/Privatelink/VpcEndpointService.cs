// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Privatelink
{
    /// <summary>
    /// Provides a resource to manage privatelink vpc endpoint service
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Privatelink.VpcEndpointService("foo", new()
    ///     {
    ///         AutoAcceptEnabled = true,
    ///         Description = "tftest",
    ///         Resources = new[]
    ///         {
    ///             new Volcengine.Privatelink.Inputs.VpcEndpointServiceResourceArgs
    ///             {
    ///                 ResourceId = "clb-2bzxccdjo9uyo2dx0eg0orzla",
    ///                 ResourceType = "CLB",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// VpcEndpointService can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:privatelink/vpcEndpointService:VpcEndpointService default epsvc-2fe630gurkl37k5gfuy33****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:privatelink/vpcEndpointService:VpcEndpointService")]
    public partial class VpcEndpointService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether auto accept node connect.
        /// </summary>
        [Output("autoAcceptEnabled")]
        public Output<bool?> AutoAcceptEnabled { get; private set; } = null!;

        /// <summary>
        /// The create time of service.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The description of service.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The resources info. When create vpc endpoint service, the resource must exist.
        /// </summary>
        [Output("resources")]
        public Output<ImmutableArray<Outputs.VpcEndpointServiceResource>> Resources { get; private set; } = null!;

        /// <summary>
        /// The domain of service.
        /// </summary>
        [Output("serviceDomain")]
        public Output<string> ServiceDomain { get; private set; } = null!;

        /// <summary>
        /// The Id of service.
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;

        /// <summary>
        /// The name of service.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The resource type of service.
        /// </summary>
        [Output("serviceResourceType")]
        public Output<string> ServiceResourceType { get; private set; } = null!;

        /// <summary>
        /// The type of service.
        /// </summary>
        [Output("serviceType")]
        public Output<string> ServiceType { get; private set; } = null!;

        /// <summary>
        /// The status of service.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The update time of service.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The IDs of zones.
        /// </summary>
        [Output("zoneIds")]
        public Output<ImmutableArray<string>> ZoneIds { get; private set; } = null!;


        /// <summary>
        /// Create a VpcEndpointService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcEndpointService(string name, VpcEndpointServiceArgs args, CustomResourceOptions? options = null)
            : base("volcengine:privatelink/vpcEndpointService:VpcEndpointService", name, args ?? new VpcEndpointServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcEndpointService(string name, Input<string> id, VpcEndpointServiceState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:privatelink/vpcEndpointService:VpcEndpointService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcEndpointService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcEndpointService Get(string name, Input<string> id, VpcEndpointServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcEndpointService(name, id, state, options);
        }
    }

    public sealed class VpcEndpointServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether auto accept node connect.
        /// </summary>
        [Input("autoAcceptEnabled")]
        public Input<bool>? AutoAcceptEnabled { get; set; }

        /// <summary>
        /// The description of service.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("resources", required: true)]
        private InputList<Inputs.VpcEndpointServiceResourceArgs>? _resources;

        /// <summary>
        /// The resources info. When create vpc endpoint service, the resource must exist.
        /// </summary>
        public InputList<Inputs.VpcEndpointServiceResourceArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.VpcEndpointServiceResourceArgs>());
            set => _resources = value;
        }

        public VpcEndpointServiceArgs()
        {
        }
        public static new VpcEndpointServiceArgs Empty => new VpcEndpointServiceArgs();
    }

    public sealed class VpcEndpointServiceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether auto accept node connect.
        /// </summary>
        [Input("autoAcceptEnabled")]
        public Input<bool>? AutoAcceptEnabled { get; set; }

        /// <summary>
        /// The create time of service.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The description of service.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("resources")]
        private InputList<Inputs.VpcEndpointServiceResourceGetArgs>? _resources;

        /// <summary>
        /// The resources info. When create vpc endpoint service, the resource must exist.
        /// </summary>
        public InputList<Inputs.VpcEndpointServiceResourceGetArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.VpcEndpointServiceResourceGetArgs>());
            set => _resources = value;
        }

        /// <summary>
        /// The domain of service.
        /// </summary>
        [Input("serviceDomain")]
        public Input<string>? ServiceDomain { get; set; }

        /// <summary>
        /// The Id of service.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        /// <summary>
        /// The name of service.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The resource type of service.
        /// </summary>
        [Input("serviceResourceType")]
        public Input<string>? ServiceResourceType { get; set; }

        /// <summary>
        /// The type of service.
        /// </summary>
        [Input("serviceType")]
        public Input<string>? ServiceType { get; set; }

        /// <summary>
        /// The status of service.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The update time of service.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("zoneIds")]
        private InputList<string>? _zoneIds;

        /// <summary>
        /// The IDs of zones.
        /// </summary>
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public VpcEndpointServiceState()
        {
        }
        public static new VpcEndpointServiceState Empty => new VpcEndpointServiceState();
    }
}
