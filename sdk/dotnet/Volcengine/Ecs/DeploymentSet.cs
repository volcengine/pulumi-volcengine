// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Ecs
{
    /// <summary>
    /// Provides a resource to manage ecs deployment set
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Ecs.DeploymentSet("foo", new()
    ///     {
    ///         DeploymentSetName = "acc-test-ecs-ds",
    ///         Description = "acc-test",
    ///         Granularity = "switch",
    ///         Strategy = "Availability",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ECS deployment set can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:ecs/deploymentSet:DeploymentSet default i-mizl7m1kqccg5smt1bdpijuj
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:ecs/deploymentSet:DeploymentSet")]
    public partial class DeploymentSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of ECS DeploymentSet.
        /// </summary>
        [Output("deploymentSetId")]
        public Output<string> DeploymentSetId { get; private set; } = null!;

        /// <summary>
        /// The name of ECS DeploymentSet.
        /// </summary>
        [Output("deploymentSetName")]
        public Output<string> DeploymentSetName { get; private set; } = null!;

        /// <summary>
        /// The description of ECS DeploymentSet.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The granularity of ECS DeploymentSet.Valid values: switch, host, rack,Default is host.
        /// </summary>
        [Output("granularity")]
        public Output<string?> Granularity { get; private set; } = null!;

        /// <summary>
        /// The strategy of ECS DeploymentSet.Valid values: Availability.Default is Availability.
        /// </summary>
        [Output("strategy")]
        public Output<string?> Strategy { get; private set; } = null!;


        /// <summary>
        /// Create a DeploymentSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DeploymentSet(string name, DeploymentSetArgs args, CustomResourceOptions? options = null)
            : base("volcengine:ecs/deploymentSet:DeploymentSet", name, args ?? new DeploymentSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DeploymentSet(string name, Input<string> id, DeploymentSetState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:ecs/deploymentSet:DeploymentSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DeploymentSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DeploymentSet Get(string name, Input<string> id, DeploymentSetState? state = null, CustomResourceOptions? options = null)
        {
            return new DeploymentSet(name, id, state, options);
        }
    }

    public sealed class DeploymentSetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of ECS DeploymentSet.
        /// </summary>
        [Input("deploymentSetName", required: true)]
        public Input<string> DeploymentSetName { get; set; } = null!;

        /// <summary>
        /// The description of ECS DeploymentSet.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The granularity of ECS DeploymentSet.Valid values: switch, host, rack,Default is host.
        /// </summary>
        [Input("granularity")]
        public Input<string>? Granularity { get; set; }

        /// <summary>
        /// The strategy of ECS DeploymentSet.Valid values: Availability.Default is Availability.
        /// </summary>
        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        public DeploymentSetArgs()
        {
        }
        public static new DeploymentSetArgs Empty => new DeploymentSetArgs();
    }

    public sealed class DeploymentSetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of ECS DeploymentSet.
        /// </summary>
        [Input("deploymentSetId")]
        public Input<string>? DeploymentSetId { get; set; }

        /// <summary>
        /// The name of ECS DeploymentSet.
        /// </summary>
        [Input("deploymentSetName")]
        public Input<string>? DeploymentSetName { get; set; }

        /// <summary>
        /// The description of ECS DeploymentSet.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The granularity of ECS DeploymentSet.Valid values: switch, host, rack,Default is host.
        /// </summary>
        [Input("granularity")]
        public Input<string>? Granularity { get; set; }

        /// <summary>
        /// The strategy of ECS DeploymentSet.Valid values: Availability.Default is Availability.
        /// </summary>
        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        public DeploymentSetState()
        {
        }
        public static new DeploymentSetState Empty => new DeploymentSetState();
    }
}
