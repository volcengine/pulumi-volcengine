// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Iam
{
    public static class Users
    {
        /// <summary>
        /// Use this data source to query detailed information of iam users
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Iam.Users.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<UsersResult> InvokeAsync(UsersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<UsersResult>("volcengine:iam/users:Users", args ?? new UsersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of iam users
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Iam.Users.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<UsersResult> Invoke(UsersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<UsersResult>("volcengine:iam/users:Users", args ?? new UsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class UsersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of IAM.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("userNames")]
        private List<string>? _userNames;

        /// <summary>
        /// A list of user names.
        /// </summary>
        public List<string> UserNames
        {
            get => _userNames ?? (_userNames = new List<string>());
            set => _userNames = value;
        }

        public UsersArgs()
        {
        }
        public static new UsersArgs Empty => new UsersArgs();
    }

    public sealed class UsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A Name Regex of IAM.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("userNames")]
        private InputList<string>? _userNames;

        /// <summary>
        /// A list of user names.
        /// </summary>
        public InputList<string> UserNames
        {
            get => _userNames ?? (_userNames = new InputList<string>());
            set => _userNames = value;
        }

        public UsersInvokeArgs()
        {
        }
        public static new UsersInvokeArgs Empty => new UsersInvokeArgs();
    }


    [OutputType]
    public sealed class UsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of user query.
        /// </summary>
        public readonly int TotalCount;
        public readonly ImmutableArray<string> UserNames;
        /// <summary>
        /// The collection of user.
        /// </summary>
        public readonly ImmutableArray<Outputs.UsersUserResult> Users;

        [OutputConstructor]
        private UsersResult(
            string id,

            string? nameRegex,

            string? outputFile,

            int totalCount,

            ImmutableArray<string> userNames,

            ImmutableArray<Outputs.UsersUserResult> users)
        {
            Id = id;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            TotalCount = totalCount;
            UserNames = userNames;
            Users = users;
        }
    }
}
