// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.PulumiPackage.Volcengine.Clb
{
    public static class Certificates
    {
        /// <summary>
        /// Use this data source to query detailed information of certificates
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// using Volcengine = Volcengine.PulumiPackage.Volcengine;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var fooCertificate = new List&lt;Volcengine.Clb.Certificate&gt;();
        ///         for (var rangeIndex = 0; rangeIndex &lt; 3; rangeIndex++)
        ///         {
        ///             var range = new { Value = rangeIndex };
        ///             fooCertificate.Add(new Volcengine.Clb.Certificate($"fooCertificate-{range.Value}", new Volcengine.Clb.CertificateArgs
        ///             {
        ///                 CertificateName = $"acc-test-certificate-{range.Value}",
        ///                 Description = "acc-test-demo",
        ///                 PublicKey = @"-----BEGIN CERTIFICATE-----
        /// MIICWDCCAcGgAwIBAgIJAP7vOtjPtQIjMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
        /// BAYTAkNOMRMwEQYDVQQIDApjbi1iZWlqaW5nMSEwHwYDVQQKDBhJbnRlcm5ldCBX
        /// aWRnaXRzIFB0eSBMdGQwHhcNMjAxMDIwMDYxOTUxWhcNMjAxMTE5MDYxOTUxWjBF
        /// MQswCQYDVQQGEwJDTjETMBEGA1UECAwKY24tYmVpamluZzEhMB8GA1UECgwYSW50
        /// ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKB
        /// gQDEdoyaJ0kdtjtbLRx5X9qwI7FblhJPRcScvhQSE8P5y/b/T8J9BVuFIBoU8nrP
        /// Y9ABz4JFklZ6SznxLbFBqtXoJTmzV6ixyjjH+AGEw6hCiA8Pqy2CNIzxr9DjCzN5
        /// tWruiHqO60O3Bve6cHipH0VyLAhrB85mflvOZSH4xGsJkwIDAQABo1AwTjAdBgNV
        /// HQ4EFgQUYDwuuqC2a2UPrfm1v31vE7+GRM4wHwYDVR0jBBgwFoAUYDwuuqC2a2UP
        /// rfm1v31vE7+GRM4wDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOBgQAovSB0
        /// 5JRKrg7lYR/KlTuKHmozfyL9UER0/dpTSoqsCyt8yc1BbtAKUJWh09BujBE1H22f
        /// lKvCAjhPmnNdfd/l9GrmAWNDWEDPLdUTkGSkKAScMpdS+mLmOBuYWgdnOtq3eQGf
        /// t07tlBL+dtzrrohHpfLeuNyYb40g8VQdp3RRRQ==
        /// -----END CERTIFICATE-----",
        ///                 PrivateKey = @"-----BEGIN RSA PRIVATE KEY-----
        /// MIICXAIBAAKBgQDEdoyaJ0kdtjtbLRx5X9qwI7FblhJPRcScvhQSE8P5y/b/T8J9
        /// BVuFIBoU8nrPY9ABz4JFklZ6SznxLbFBqtXoJTmzV6ixyjjH+AGEw6hCiA8Pqy2C
        /// NIzxr9DjCzN5tWruiHqO60O3Bve6cHipH0VyLAhrB85mflvOZSH4xGsJkwIDAQAB
        /// AoGARe2oaCo5lTDK+c4Zx3392hoqQ94r0DmWHPBvNmwAooYd+YxLPrLMe5sMjY4t
        /// dmohnLNevCK1Uzw5eIX6BNSo5CORBcIDRmiAgwiYiS3WOv2+qi9g5uIdMiDr+EED
        /// K8wZJjB5E2WyfxL507vtW4T5L36yfr8SkmqH3GvzpI2jCqECQQDsy0AmBzyfK0tG
        /// Nw1+iF9SReJWgb1f5iHvz+6Dt5ueVQngrl/5++Gp5bNoaQMkLEDsy0iHIj9j43ji
        /// 0DON05uDAkEA1GXgGn8MXXKyuzYuoyYXCBH7aF579d7KEGET/jjnXx9DHcfRJZBY
        /// B9ghMnnonSOGboF04Zsdd3xwYF/3OHYssQJAekd/SeQEzyE5TvoQ8t2Tc9X4yrlW
        /// xNX/gmp6/fPr3biGUEtb7qi+4NBodCt+XsingmB7hKUP3RJTk7T2WnAC5wJAMqHi
        /// jY5x3SkFkHl3Hq9q2CKpQxUbCd7FXqg1wum/xj5GmqfSpNjHE3+jUkwbdrJMTrWP
        /// rmRy3tQMWf0mixAo0QJBAN4IcZChanq8cZyNqqoNbxGm4hkxUmE0W4hxHmLC2CYZ
        /// V4JpNm8dpi4CiMWLasF6TYlVMgX+aPxYRUWc/qqf1/Q=
        /// -----END RSA PRIVATE KEY-----",
        ///                 ProjectName = "default",
        ///                 Tags = 
        ///                 {
        ///                     new Volcengine.Clb.Inputs.CertificateTagArgs
        ///                     {
        ///                         Key = "k1",
        ///                         Value = "v1",
        ///                     },
        ///                 },
        ///             }));
        ///         }
        ///         var fooCertificates = Volcengine.Clb.Certificates.Invoke(new Volcengine.Clb.CertificatesInvokeArgs
        ///         {
        ///             Ids = fooCertificate.Select(__item =&gt; __item.Id).ToList(),
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<CertificatesResult> InvokeAsync(CertificatesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<CertificatesResult>("volcengine:clb/certificates:Certificates", args ?? new CertificatesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of certificates
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// using Volcengine = Volcengine.PulumiPackage.Volcengine;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var fooCertificate = new List&lt;Volcengine.Clb.Certificate&gt;();
        ///         for (var rangeIndex = 0; rangeIndex &lt; 3; rangeIndex++)
        ///         {
        ///             var range = new { Value = rangeIndex };
        ///             fooCertificate.Add(new Volcengine.Clb.Certificate($"fooCertificate-{range.Value}", new Volcengine.Clb.CertificateArgs
        ///             {
        ///                 CertificateName = $"acc-test-certificate-{range.Value}",
        ///                 Description = "acc-test-demo",
        ///                 PublicKey = @"-----BEGIN CERTIFICATE-----
        /// MIICWDCCAcGgAwIBAgIJAP7vOtjPtQIjMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV
        /// BAYTAkNOMRMwEQYDVQQIDApjbi1iZWlqaW5nMSEwHwYDVQQKDBhJbnRlcm5ldCBX
        /// aWRnaXRzIFB0eSBMdGQwHhcNMjAxMDIwMDYxOTUxWhcNMjAxMTE5MDYxOTUxWjBF
        /// MQswCQYDVQQGEwJDTjETMBEGA1UECAwKY24tYmVpamluZzEhMB8GA1UECgwYSW50
        /// ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKB
        /// gQDEdoyaJ0kdtjtbLRx5X9qwI7FblhJPRcScvhQSE8P5y/b/T8J9BVuFIBoU8nrP
        /// Y9ABz4JFklZ6SznxLbFBqtXoJTmzV6ixyjjH+AGEw6hCiA8Pqy2CNIzxr9DjCzN5
        /// tWruiHqO60O3Bve6cHipH0VyLAhrB85mflvOZSH4xGsJkwIDAQABo1AwTjAdBgNV
        /// HQ4EFgQUYDwuuqC2a2UPrfm1v31vE7+GRM4wHwYDVR0jBBgwFoAUYDwuuqC2a2UP
        /// rfm1v31vE7+GRM4wDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOBgQAovSB0
        /// 5JRKrg7lYR/KlTuKHmozfyL9UER0/dpTSoqsCyt8yc1BbtAKUJWh09BujBE1H22f
        /// lKvCAjhPmnNdfd/l9GrmAWNDWEDPLdUTkGSkKAScMpdS+mLmOBuYWgdnOtq3eQGf
        /// t07tlBL+dtzrrohHpfLeuNyYb40g8VQdp3RRRQ==
        /// -----END CERTIFICATE-----",
        ///                 PrivateKey = @"-----BEGIN RSA PRIVATE KEY-----
        /// MIICXAIBAAKBgQDEdoyaJ0kdtjtbLRx5X9qwI7FblhJPRcScvhQSE8P5y/b/T8J9
        /// BVuFIBoU8nrPY9ABz4JFklZ6SznxLbFBqtXoJTmzV6ixyjjH+AGEw6hCiA8Pqy2C
        /// NIzxr9DjCzN5tWruiHqO60O3Bve6cHipH0VyLAhrB85mflvOZSH4xGsJkwIDAQAB
        /// AoGARe2oaCo5lTDK+c4Zx3392hoqQ94r0DmWHPBvNmwAooYd+YxLPrLMe5sMjY4t
        /// dmohnLNevCK1Uzw5eIX6BNSo5CORBcIDRmiAgwiYiS3WOv2+qi9g5uIdMiDr+EED
        /// K8wZJjB5E2WyfxL507vtW4T5L36yfr8SkmqH3GvzpI2jCqECQQDsy0AmBzyfK0tG
        /// Nw1+iF9SReJWgb1f5iHvz+6Dt5ueVQngrl/5++Gp5bNoaQMkLEDsy0iHIj9j43ji
        /// 0DON05uDAkEA1GXgGn8MXXKyuzYuoyYXCBH7aF579d7KEGET/jjnXx9DHcfRJZBY
        /// B9ghMnnonSOGboF04Zsdd3xwYF/3OHYssQJAekd/SeQEzyE5TvoQ8t2Tc9X4yrlW
        /// xNX/gmp6/fPr3biGUEtb7qi+4NBodCt+XsingmB7hKUP3RJTk7T2WnAC5wJAMqHi
        /// jY5x3SkFkHl3Hq9q2CKpQxUbCd7FXqg1wum/xj5GmqfSpNjHE3+jUkwbdrJMTrWP
        /// rmRy3tQMWf0mixAo0QJBAN4IcZChanq8cZyNqqoNbxGm4hkxUmE0W4hxHmLC2CYZ
        /// V4JpNm8dpi4CiMWLasF6TYlVMgX+aPxYRUWc/qqf1/Q=
        /// -----END RSA PRIVATE KEY-----",
        ///                 ProjectName = "default",
        ///                 Tags = 
        ///                 {
        ///                     new Volcengine.Clb.Inputs.CertificateTagArgs
        ///                     {
        ///                         Key = "k1",
        ///                         Value = "v1",
        ///                     },
        ///                 },
        ///             }));
        ///         }
        ///         var fooCertificates = Volcengine.Clb.Certificates.Invoke(new Volcengine.Clb.CertificatesInvokeArgs
        ///         {
        ///             Ids = fooCertificate.Select(__item =&gt; __item.Id).ToList(),
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<CertificatesResult> Invoke(CertificatesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<CertificatesResult>("volcengine:clb/certificates:Certificates", args ?? new CertificatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class CertificatesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Certificate.
        /// </summary>
        [Input("certificateName")]
        public string? CertificateName { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// The list of Certificate IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The Name Regex of Certificate.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ProjectName of Certificate.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        [Input("tags")]
        private List<Inputs.CertificatesTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.CertificatesTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.CertificatesTagArgs>());
            set => _tags = value;
        }

        public CertificatesArgs()
        {
        }
    }

    public sealed class CertificatesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Certificate.
        /// </summary>
        [Input("certificateName")]
        public Input<string>? CertificateName { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The list of Certificate IDs.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The Name Regex of Certificate.
        /// </summary>
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ProjectName of Certificate.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.CertificatesTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.CertificatesTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CertificatesTagInputArgs>());
            set => _tags = value;
        }

        public CertificatesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class CertificatesResult
    {
        /// <summary>
        /// The name of the Certificate.
        /// </summary>
        public readonly string? CertificateName;
        /// <summary>
        /// The collection of Certificate query.
        /// </summary>
        public readonly ImmutableArray<Outputs.CertificatesCertificateResult> Certificates;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// The ProjectName of the Certificate.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.CertificatesTagResult> Tags;
        /// <summary>
        /// The total count of Certificate query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private CertificatesResult(
            string? certificateName,

            ImmutableArray<Outputs.CertificatesCertificateResult> certificates,

            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            string? projectName,

            ImmutableArray<Outputs.CertificatesTagResult> tags,

            int totalCount)
        {
            CertificateName = certificateName;
            Certificates = certificates;
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProjectName = projectName;
            Tags = tags;
            TotalCount = totalCount;
        }
    }
}
