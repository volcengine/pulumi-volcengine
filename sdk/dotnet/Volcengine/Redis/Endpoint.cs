// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Redis
{
    /// <summary>
    /// Provides a resource to manage redis endpoint
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooZones = Volcengine.Ecs.Zones.Invoke();
    /// 
    ///     var fooVpc = new Volcengine.Vpc.Vpc("fooVpc", new()
    ///     {
    ///         VpcName = "acc-test-vpc",
    ///         CidrBlock = "172.16.0.0/16",
    ///     });
    /// 
    ///     var fooSubnet = new Volcengine.Vpc.Subnet("fooSubnet", new()
    ///     {
    ///         SubnetName = "acc-test-subnet",
    ///         CidrBlock = "172.16.0.0/24",
    ///         ZoneId = fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         VpcId = fooVpc.Id,
    ///     });
    /// 
    ///     var fooInstance = new Volcengine.Redis.Instance("fooInstance", new()
    ///     {
    ///         ZoneIds = new[]
    ///         {
    ///             fooZones.Apply(zonesResult =&gt; zonesResult.Zones[0]?.Id),
    ///         },
    ///         InstanceName = "acc-test-tf-redis",
    ///         ShardedCluster = 1,
    ///         Password = "1qaz!QAZ12",
    ///         NodeNumber = 2,
    ///         ShardCapacity = 1024,
    ///         ShardNumber = 2,
    ///         EngineVersion = "5.0",
    ///         SubnetId = fooSubnet.Id,
    ///         DeletionProtection = "disabled",
    ///         VpcAuthMode = "close",
    ///         ChargeType = "PostPaid",
    ///         Port = 6381,
    ///         ProjectName = "default",
    ///     });
    /// 
    ///     var fooAddress = new Volcengine.Eip.Address("fooAddress", new()
    ///     {
    ///         Bandwidth = 1,
    ///         BillingType = "PostPaidByBandwidth",
    ///         Description = "acc-test",
    ///         Isp = "BGP",
    ///     });
    /// 
    ///     var fooEndpoint = new Volcengine.Redis.Endpoint("fooEndpoint", new()
    ///     {
    ///         EipId = fooAddress.Id,
    ///         InstanceId = fooInstance.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Redis Endpoint can be imported using the instanceId:eipId, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:redis/endpoint:Endpoint default redis-asdljioeixxxx:eip-2fef2qcfbfw8w5oxruw3w****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:redis/endpoint:Endpoint")]
    public partial class Endpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Id of eip.
        /// </summary>
        [Output("eipId")]
        public Output<string> EipId { get; private set; } = null!;

        /// <summary>
        /// Id of instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;


        /// <summary>
        /// Create a Endpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Endpoint(string name, EndpointArgs args, CustomResourceOptions? options = null)
            : base("volcengine:redis/endpoint:Endpoint", name, args ?? new EndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Endpoint(string name, Input<string> id, EndpointState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:redis/endpoint:Endpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Endpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Endpoint Get(string name, Input<string> id, EndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new Endpoint(name, id, state, options);
        }
    }

    public sealed class EndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Id of eip.
        /// </summary>
        [Input("eipId", required: true)]
        public Input<string> EipId { get; set; } = null!;

        /// <summary>
        /// Id of instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public EndpointArgs()
        {
        }
        public static new EndpointArgs Empty => new EndpointArgs();
    }

    public sealed class EndpointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Id of eip.
        /// </summary>
        [Input("eipId")]
        public Input<string>? EipId { get; set; }

        /// <summary>
        /// Id of instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        public EndpointState()
        {
        }
        public static new EndpointState Empty => new EndpointState();
    }
}
