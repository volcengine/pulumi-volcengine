// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Redis
{
    public static class Accounts
    {
        /// <summary>
        /// Use this data source to query detailed information of redis accounts
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Redis.Accounts.Invoke(new()
        ///     {
        ///         InstanceId = "redis-cn0398aizj8cwmopx",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<AccountsResult> InvokeAsync(AccountsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<AccountsResult>("volcengine:redis/accounts:Accounts", args ?? new AccountsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of redis accounts
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Redis.Accounts.Invoke(new()
        ///     {
        ///         InstanceId = "redis-cn0398aizj8cwmopx",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<AccountsResult> Invoke(AccountsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<AccountsResult>("volcengine:redis/accounts:Accounts", args ?? new AccountsInvokeArgs(), options.WithDefaults());
    }


    public sealed class AccountsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the redis account.
        /// </summary>
        [Input("accountName")]
        public string? AccountName { get; set; }

        /// <summary>
        /// The id of the Redis instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public AccountsArgs()
        {
        }
        public static new AccountsArgs Empty => new AccountsArgs();
    }

    public sealed class AccountsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the redis account.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        /// <summary>
        /// The id of the Redis instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public AccountsInvokeArgs()
        {
        }
        public static new AccountsInvokeArgs Empty => new AccountsInvokeArgs();
    }


    [OutputType]
    public sealed class AccountsResult
    {
        /// <summary>
        /// The name of the redis account.
        /// </summary>
        public readonly string? AccountName;
        /// <summary>
        /// The collection of redis instance account query.
        /// </summary>
        public readonly ImmutableArray<Outputs.AccountsAccountResult> Accounts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The id of instance.
        /// </summary>
        public readonly string InstanceId;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of redis accounts query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private AccountsResult(
            string? accountName,

            ImmutableArray<Outputs.AccountsAccountResult> accounts,

            string id,

            string instanceId,

            string? outputFile,

            int totalCount)
        {
            AccountName = accountName;
            Accounts = accounts;
            Id = id;
            InstanceId = instanceId;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
