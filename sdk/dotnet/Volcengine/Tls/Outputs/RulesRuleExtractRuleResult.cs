// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Tls.Outputs
{

    [OutputType]
    public sealed class RulesRuleExtractRuleResult
    {
        /// <summary>
        /// The first log line needs to match the regular expression.
        /// </summary>
        public readonly string BeginRegex;
        /// <summary>
        /// The delimiter of the log.
        /// </summary>
        public readonly string Delimiter;
        /// <summary>
        /// The filter key list.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesRuleExtractRuleFilterKeyRegexResult> FilterKeyRegexes;
        /// <summary>
        /// A list of field names. Log Service will parse the path sample (PathSample) into multiple fields according to the regular expression (Regex), and Keys is used to specify the field name of each field.
        /// </summary>
        public readonly ImmutableArray<string> Keys;
        /// <summary>
        /// The entire log needs to match the regular expression.
        /// </summary>
        public readonly string LogRegex;
        /// <summary>
        /// Automatically extract log fields according to the specified log template.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesRuleExtractRuleLogTemplateResult> LogTemplates;
        /// <summary>
        /// Parsing format of the time field.
        /// </summary>
        public readonly string TimeFormat;
        /// <summary>
        /// The field name of the log time field.
        /// </summary>
        public readonly string TimeKey;
        /// <summary>
        /// When uploading the failed log, the key name of the failed log.
        /// </summary>
        public readonly string UnMatchLogKey;
        /// <summary>
        /// Whether to upload the log of parsing failure.
        /// </summary>
        public readonly bool UnMatchUpLoadSwitch;

        [OutputConstructor]
        private RulesRuleExtractRuleResult(
            string beginRegex,

            string delimiter,

            ImmutableArray<Outputs.RulesRuleExtractRuleFilterKeyRegexResult> filterKeyRegexes,

            ImmutableArray<string> keys,

            string logRegex,

            ImmutableArray<Outputs.RulesRuleExtractRuleLogTemplateResult> logTemplates,

            string timeFormat,

            string timeKey,

            string unMatchLogKey,

            bool unMatchUpLoadSwitch)
        {
            BeginRegex = beginRegex;
            Delimiter = delimiter;
            FilterKeyRegexes = filterKeyRegexes;
            Keys = keys;
            LogRegex = logRegex;
            LogTemplates = logTemplates;
            TimeFormat = timeFormat;
            TimeKey = timeKey;
            UnMatchLogKey = unMatchLogKey;
            UnMatchUpLoadSwitch = unMatchUpLoadSwitch;
        }
    }
}
