// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Tls
{
    public static class HostGroups
    {
        /// <summary>
        /// Use this data source to query detailed information of tls host groups
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.HostGroups.Invoke(new()
        ///     {
        ///         HostGroupId = "fbea6619-7b0c-40f3-ac7e-45c63e3f676e",
        ///         HostGroupName = "cn",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<HostGroupsResult> InvokeAsync(HostGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<HostGroupsResult>("volcengine:tls/hostGroups:HostGroups", args ?? new HostGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tls host groups
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.HostGroups.Invoke(new()
        ///     {
        ///         HostGroupId = "fbea6619-7b0c-40f3-ac7e-45c63e3f676e",
        ///         HostGroupName = "cn",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<HostGroupsResult> Invoke(HostGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<HostGroupsResult>("volcengine:tls/hostGroups:HostGroups", args ?? new HostGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class HostGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Whether enable auto update.
        /// </summary>
        [Input("autoUpdate")]
        public bool? AutoUpdate { get; set; }

        /// <summary>
        /// The id of host group.
        /// </summary>
        [Input("hostGroupId")]
        public string? HostGroupId { get; set; }

        /// <summary>
        /// The name of host group.
        /// </summary>
        [Input("hostGroupName")]
        public string? HostGroupName { get; set; }

        /// <summary>
        /// The identifier of host.
        /// </summary>
        [Input("hostIdentifier")]
        public string? HostIdentifier { get; set; }

        /// <summary>
        /// The project name of iam.
        /// </summary>
        [Input("iamProjectName")]
        public string? IamProjectName { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Whether enable service logging.
        /// </summary>
        [Input("serviceLogging")]
        public bool? ServiceLogging { get; set; }

        public HostGroupsArgs()
        {
        }
        public static new HostGroupsArgs Empty => new HostGroupsArgs();
    }

    public sealed class HostGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Whether enable auto update.
        /// </summary>
        [Input("autoUpdate")]
        public Input<bool>? AutoUpdate { get; set; }

        /// <summary>
        /// The id of host group.
        /// </summary>
        [Input("hostGroupId")]
        public Input<string>? HostGroupId { get; set; }

        /// <summary>
        /// The name of host group.
        /// </summary>
        [Input("hostGroupName")]
        public Input<string>? HostGroupName { get; set; }

        /// <summary>
        /// The identifier of host.
        /// </summary>
        [Input("hostIdentifier")]
        public Input<string>? HostIdentifier { get; set; }

        /// <summary>
        /// The project name of iam.
        /// </summary>
        [Input("iamProjectName")]
        public Input<string>? IamProjectName { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// Whether enable service logging.
        /// </summary>
        [Input("serviceLogging")]
        public Input<bool>? ServiceLogging { get; set; }

        public HostGroupsInvokeArgs()
        {
        }
        public static new HostGroupsInvokeArgs Empty => new HostGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class HostGroupsResult
    {
        /// <summary>
        /// Whether enable auto update.
        /// </summary>
        public readonly bool? AutoUpdate;
        /// <summary>
        /// The id of host group.
        /// </summary>
        public readonly string? HostGroupId;
        /// <summary>
        /// The name of host group.
        /// </summary>
        public readonly string? HostGroupName;
        /// <summary>
        /// The identifier of host.
        /// </summary>
        public readonly string? HostIdentifier;
        /// <summary>
        /// The project name of iam.
        /// </summary>
        public readonly string? IamProjectName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.HostGroupsInfoResult> Infos;
        public readonly string? OutputFile;
        /// <summary>
        /// Whether enable service logging.
        /// </summary>
        public readonly bool? ServiceLogging;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private HostGroupsResult(
            bool? autoUpdate,

            string? hostGroupId,

            string? hostGroupName,

            string? hostIdentifier,

            string? iamProjectName,

            string id,

            ImmutableArray<Outputs.HostGroupsInfoResult> infos,

            string? outputFile,

            bool? serviceLogging,

            int totalCount)
        {
            AutoUpdate = autoUpdate;
            HostGroupId = hostGroupId;
            HostGroupName = hostGroupName;
            HostIdentifier = hostIdentifier;
            IamProjectName = iamProjectName;
            Id = id;
            Infos = infos;
            OutputFile = outputFile;
            ServiceLogging = serviceLogging;
            TotalCount = totalCount;
        }
    }
}
