// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Tls
{
    public static class AlarmNotifyGroups
    {
        /// <summary>
        /// Use this data source to query detailed information of tls alarm notify groups
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.AlarmNotifyGroups.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<AlarmNotifyGroupsResult> InvokeAsync(AlarmNotifyGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<AlarmNotifyGroupsResult>("volcengine:tls/alarmNotifyGroups:AlarmNotifyGroups", args ?? new AlarmNotifyGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tls alarm notify groups
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.AlarmNotifyGroups.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<AlarmNotifyGroupsResult> Invoke(AlarmNotifyGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<AlarmNotifyGroupsResult>("volcengine:tls/alarmNotifyGroups:AlarmNotifyGroups", args ?? new AlarmNotifyGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class AlarmNotifyGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the alarm notify group.
        /// </summary>
        [Input("alarmNotifyGroupId")]
        public string? AlarmNotifyGroupId { get; set; }

        /// <summary>
        /// The name of the alarm notify group.
        /// </summary>
        [Input("alarmNotifyGroupName")]
        public string? AlarmNotifyGroupName { get; set; }

        /// <summary>
        /// The name of the iam project.
        /// </summary>
        [Input("iamProjectName")]
        public string? IamProjectName { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The name of the receiver.
        /// </summary>
        [Input("receiverName")]
        public string? ReceiverName { get; set; }

        public AlarmNotifyGroupsArgs()
        {
        }
        public static new AlarmNotifyGroupsArgs Empty => new AlarmNotifyGroupsArgs();
    }

    public sealed class AlarmNotifyGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the alarm notify group.
        /// </summary>
        [Input("alarmNotifyGroupId")]
        public Input<string>? AlarmNotifyGroupId { get; set; }

        /// <summary>
        /// The name of the alarm notify group.
        /// </summary>
        [Input("alarmNotifyGroupName")]
        public Input<string>? AlarmNotifyGroupName { get; set; }

        /// <summary>
        /// The name of the iam project.
        /// </summary>
        [Input("iamProjectName")]
        public Input<string>? IamProjectName { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The name of the receiver.
        /// </summary>
        [Input("receiverName")]
        public Input<string>? ReceiverName { get; set; }

        public AlarmNotifyGroupsInvokeArgs()
        {
        }
        public static new AlarmNotifyGroupsInvokeArgs Empty => new AlarmNotifyGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class AlarmNotifyGroupsResult
    {
        /// <summary>
        /// The id of the notify group.
        /// </summary>
        public readonly string? AlarmNotifyGroupId;
        /// <summary>
        /// Name of the notification group.
        /// </summary>
        public readonly string? AlarmNotifyGroupName;
        /// <summary>
        /// The list of the notify groups.
        /// </summary>
        public readonly ImmutableArray<Outputs.AlarmNotifyGroupsGroupResult> Groups;
        /// <summary>
        /// The iam project name.
        /// </summary>
        public readonly string? IamProjectName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        public readonly string? ReceiverName;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private AlarmNotifyGroupsResult(
            string? alarmNotifyGroupId,

            string? alarmNotifyGroupName,

            ImmutableArray<Outputs.AlarmNotifyGroupsGroupResult> groups,

            string? iamProjectName,

            string id,

            string? outputFile,

            string? receiverName,

            int totalCount)
        {
            AlarmNotifyGroupId = alarmNotifyGroupId;
            AlarmNotifyGroupName = alarmNotifyGroupName;
            Groups = groups;
            IamProjectName = iamProjectName;
            Id = id;
            OutputFile = outputFile;
            ReceiverName = receiverName;
            TotalCount = totalCount;
        }
    }
}
