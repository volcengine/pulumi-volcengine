// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Tls
{
    /// <summary>
    /// Provides a resource to manage tls alarm notify group
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Volcengine.Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Tls.AlarmNotifyGroup("foo", new()
    ///     {
    ///         AlarmNotifyGroupName = "tf-test",
    ///         IamProjectName = "yyy",
    ///         NotifyTypes = new[]
    ///         {
    ///             "Trigger",
    ///         },
    ///         Receivers = new[]
    ///         {
    ///             new Volcengine.Tls.Inputs.AlarmNotifyGroupReceiverArgs
    ///             {
    ///                 EndTime = "23:59:59",
    ///                 ReceiverChannels = new[]
    ///                 {
    ///                     "Email",
    ///                     "Sms",
    ///                 },
    ///                 ReceiverNames = new[]
    ///                 {
    ///                     "vke-qs",
    ///                 },
    ///                 ReceiverType = "User",
    ///                 StartTime = "23:00:00",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// tls alarm notify group can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:tls/alarmNotifyGroup:AlarmNotifyGroup default fa************
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:tls/alarmNotifyGroup:AlarmNotifyGroup")]
    public partial class AlarmNotifyGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The alarm notification group id.
        /// </summary>
        [Output("alarmNotifyGroupId")]
        public Output<string> AlarmNotifyGroupId { get; private set; } = null!;

        /// <summary>
        /// The name of the notify group.
        /// </summary>
        [Output("alarmNotifyGroupName")]
        public Output<string> AlarmNotifyGroupName { get; private set; } = null!;

        /// <summary>
        /// The name of the iam project.
        /// </summary>
        [Output("iamProjectName")]
        public Output<string?> IamProjectName { get; private set; } = null!;

        /// <summary>
        /// The notify type.
        /// </summary>
        [Output("notifyTypes")]
        public Output<ImmutableArray<string>> NotifyTypes { get; private set; } = null!;

        /// <summary>
        /// List of IAM users to receive alerts.
        /// </summary>
        [Output("receivers")]
        public Output<ImmutableArray<Outputs.AlarmNotifyGroupReceiver>> Receivers { get; private set; } = null!;


        /// <summary>
        /// Create a AlarmNotifyGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlarmNotifyGroup(string name, AlarmNotifyGroupArgs args, CustomResourceOptions? options = null)
            : base("volcengine:tls/alarmNotifyGroup:AlarmNotifyGroup", name, args ?? new AlarmNotifyGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlarmNotifyGroup(string name, Input<string> id, AlarmNotifyGroupState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:tls/alarmNotifyGroup:AlarmNotifyGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlarmNotifyGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlarmNotifyGroup Get(string name, Input<string> id, AlarmNotifyGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new AlarmNotifyGroup(name, id, state, options);
        }
    }

    public sealed class AlarmNotifyGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the notify group.
        /// </summary>
        [Input("alarmNotifyGroupName", required: true)]
        public Input<string> AlarmNotifyGroupName { get; set; } = null!;

        /// <summary>
        /// The name of the iam project.
        /// </summary>
        [Input("iamProjectName")]
        public Input<string>? IamProjectName { get; set; }

        [Input("notifyTypes", required: true)]
        private InputList<string>? _notifyTypes;

        /// <summary>
        /// The notify type.
        /// </summary>
        public InputList<string> NotifyTypes
        {
            get => _notifyTypes ?? (_notifyTypes = new InputList<string>());
            set => _notifyTypes = value;
        }

        [Input("receivers", required: true)]
        private InputList<Inputs.AlarmNotifyGroupReceiverArgs>? _receivers;

        /// <summary>
        /// List of IAM users to receive alerts.
        /// </summary>
        public InputList<Inputs.AlarmNotifyGroupReceiverArgs> Receivers
        {
            get => _receivers ?? (_receivers = new InputList<Inputs.AlarmNotifyGroupReceiverArgs>());
            set => _receivers = value;
        }

        public AlarmNotifyGroupArgs()
        {
        }
        public static new AlarmNotifyGroupArgs Empty => new AlarmNotifyGroupArgs();
    }

    public sealed class AlarmNotifyGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The alarm notification group id.
        /// </summary>
        [Input("alarmNotifyGroupId")]
        public Input<string>? AlarmNotifyGroupId { get; set; }

        /// <summary>
        /// The name of the notify group.
        /// </summary>
        [Input("alarmNotifyGroupName")]
        public Input<string>? AlarmNotifyGroupName { get; set; }

        /// <summary>
        /// The name of the iam project.
        /// </summary>
        [Input("iamProjectName")]
        public Input<string>? IamProjectName { get; set; }

        [Input("notifyTypes")]
        private InputList<string>? _notifyTypes;

        /// <summary>
        /// The notify type.
        /// </summary>
        public InputList<string> NotifyTypes
        {
            get => _notifyTypes ?? (_notifyTypes = new InputList<string>());
            set => _notifyTypes = value;
        }

        [Input("receivers")]
        private InputList<Inputs.AlarmNotifyGroupReceiverGetArgs>? _receivers;

        /// <summary>
        /// List of IAM users to receive alerts.
        /// </summary>
        public InputList<Inputs.AlarmNotifyGroupReceiverGetArgs> Receivers
        {
            get => _receivers ?? (_receivers = new InputList<Inputs.AlarmNotifyGroupReceiverGetArgs>());
            set => _receivers = value;
        }

        public AlarmNotifyGroupState()
        {
        }
        public static new AlarmNotifyGroupState Empty => new AlarmNotifyGroupState();
    }
}
