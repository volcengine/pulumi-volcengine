// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcengine.Tls
{
    public static class Rules
    {
        /// <summary>
        /// Use this data source to query detailed information of tls rules
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.Rules.Invoke(new()
        ///     {
        ///         ProjectId = "cc44f8b6-0328-4622-b043-023fca735cd4",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<RulesResult> InvokeAsync(RulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<RulesResult>("volcengine:tls/rules:Rules", args ?? new RulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of tls rules
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Tls.Rules.Invoke(new()
        ///     {
        ///         ProjectId = "cc44f8b6-0328-4622-b043-023fca735cd4",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<RulesResult> Invoke(RulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<RulesResult>("volcengine:tls/rules:Rules", args ?? new RulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class RulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The project id.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// The rule id.
        /// </summary>
        [Input("ruleId")]
        public string? RuleId { get; set; }

        /// <summary>
        /// The rule name.
        /// </summary>
        [Input("ruleName")]
        public string? RuleName { get; set; }

        /// <summary>
        /// The topic id.
        /// </summary>
        [Input("topicId")]
        public string? TopicId { get; set; }

        /// <summary>
        /// The topic name.
        /// </summary>
        [Input("topicName")]
        public string? TopicName { get; set; }

        public RulesArgs()
        {
        }
        public static new RulesArgs Empty => new RulesArgs();
    }

    public sealed class RulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The project id.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The rule id.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// The rule name.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// The topic id.
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        /// <summary>
        /// The topic name.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public RulesInvokeArgs()
        {
        }
        public static new RulesInvokeArgs Empty => new RulesInvokeArgs();
    }


    [OutputType]
    public sealed class RulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        public readonly string ProjectId;
        /// <summary>
        /// The rule id.
        /// </summary>
        public readonly string? RuleId;
        /// <summary>
        /// The rule name.
        /// </summary>
        public readonly string? RuleName;
        /// <summary>
        /// The rules list.
        /// </summary>
        public readonly ImmutableArray<Outputs.RulesRuleResult> Rules;
        /// <summary>
        /// The topic id.
        /// </summary>
        public readonly string? TopicId;
        /// <summary>
        /// The topic name.
        /// </summary>
        public readonly string? TopicName;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private RulesResult(
            string id,

            string? outputFile,

            string projectId,

            string? ruleId,

            string? ruleName,

            ImmutableArray<Outputs.RulesRuleResult> rules,

            string? topicId,

            string? topicName,

            int totalCount)
        {
            Id = id;
            OutputFile = outputFile;
            ProjectId = projectId;
            RuleId = ruleId;
            RuleName = ruleName;
            Rules = rules;
            TopicId = topicId;
            TopicName = topicName;
            TotalCount = totalCount;
        }
    }
}
