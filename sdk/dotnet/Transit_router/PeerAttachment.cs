// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Transit_router
{
    /// <summary>
    /// Provides a resource to manage transit router peer attachment
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var fooBandwidthPackage = new Volcengine.Transit_router.BandwidthPackage("fooBandwidthPackage", new()
    ///     {
    ///         TransitRouterBandwidthPackageName = "acc-tf-test",
    ///         Description = "acc-test",
    ///         Bandwidth = 2,
    ///         Period = 1,
    ///         RenewType = "Manual",
    ///         RenewPeriod = 1,
    ///         RemainRenewTimes = -1,
    ///     });
    /// 
    ///     var fooTransitRouter = new Volcengine.Transit_router.TransitRouter("fooTransitRouter", new()
    ///     {
    ///         TransitRouterName = "acc-test-tf",
    ///         Description = "acc-test-tf",
    ///     });
    /// 
    ///     var fooPeerAttachment = new Volcengine.Transit_router.PeerAttachment("fooPeerAttachment", new()
    ///     {
    ///         TransitRouterId = fooTransitRouter.Id,
    ///         TransitRouterAttachmentName = "acc-test-tf",
    ///         Description = "tf-test",
    ///         PeerTransitRouterId = "tr-xxx",
    ///         PeerTransitRouterRegionId = "cn-xx",
    ///         TransitRouterBandwidthPackageId = fooBandwidthPackage.Id,
    ///         Bandwidth = 2,
    ///         Tags = new[]
    ///         {
    ///             new Volcengine.Transit_router.Inputs.PeerAttachmentTagArgs
    ///             {
    ///                 Key = "k1",
    ///                 Value = "v1",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TransitRouterPeerAttachment can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:transit_router/peerAttachment:PeerAttachment default tr-attach-12be67d0yh2io17q7y1au****
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:transit_router/peerAttachment:PeerAttachment")]
    public partial class PeerAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The bandwidth of the transit router peer attachment. Unit: Mbps.
        /// </summary>
        [Output("bandwidth")]
        public Output<int?> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// The creation time of the transit router peer attachment.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The description of the transit router peer attachment.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The id of the peer transit router.
        /// </summary>
        [Output("peerTransitRouterId")]
        public Output<string> PeerTransitRouterId { get; private set; } = null!;

        /// <summary>
        /// The region id of the peer transit router.
        /// </summary>
        [Output("peerTransitRouterRegionId")]
        public Output<string> PeerTransitRouterRegionId { get; private set; } = null!;

        /// <summary>
        /// The status of the transit router peer attachment.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.PeerAttachmentTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The name of the transit router peer attachment.
        /// </summary>
        [Output("transitRouterAttachmentName")]
        public Output<string> TransitRouterAttachmentName { get; private set; } = null!;

        /// <summary>
        /// The bandwidth package id of the transit router peer attachment. When specifying this field, the field `bandwidth` must also be specified.
        /// </summary>
        [Output("transitRouterBandwidthPackageId")]
        public Output<string?> TransitRouterBandwidthPackageId { get; private set; } = null!;

        /// <summary>
        /// The id of the local transit router.
        /// </summary>
        [Output("transitRouterId")]
        public Output<string> TransitRouterId { get; private set; } = null!;

        /// <summary>
        /// The route table id of the transit router peer attachment.
        /// </summary>
        [Output("transitRouterRouteTableId")]
        public Output<string> TransitRouterRouteTableId { get; private set; } = null!;

        /// <summary>
        /// The update time of the transit router peer attachment.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a PeerAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PeerAttachment(string name, PeerAttachmentArgs args, CustomResourceOptions? options = null)
            : base("volcengine:transit_router/peerAttachment:PeerAttachment", name, args ?? new PeerAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PeerAttachment(string name, Input<string> id, PeerAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:transit_router/peerAttachment:PeerAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PeerAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PeerAttachment Get(string name, Input<string> id, PeerAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new PeerAttachment(name, id, state, options);
        }
    }

    public sealed class PeerAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth of the transit router peer attachment. Unit: Mbps.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The description of the transit router peer attachment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The id of the peer transit router.
        /// </summary>
        [Input("peerTransitRouterId", required: true)]
        public Input<string> PeerTransitRouterId { get; set; } = null!;

        /// <summary>
        /// The region id of the peer transit router.
        /// </summary>
        [Input("peerTransitRouterRegionId", required: true)]
        public Input<string> PeerTransitRouterRegionId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.PeerAttachmentTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.PeerAttachmentTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PeerAttachmentTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the transit router peer attachment.
        /// </summary>
        [Input("transitRouterAttachmentName")]
        public Input<string>? TransitRouterAttachmentName { get; set; }

        /// <summary>
        /// The bandwidth package id of the transit router peer attachment. When specifying this field, the field `bandwidth` must also be specified.
        /// </summary>
        [Input("transitRouterBandwidthPackageId")]
        public Input<string>? TransitRouterBandwidthPackageId { get; set; }

        /// <summary>
        /// The id of the local transit router.
        /// </summary>
        [Input("transitRouterId", required: true)]
        public Input<string> TransitRouterId { get; set; } = null!;

        public PeerAttachmentArgs()
        {
        }
        public static new PeerAttachmentArgs Empty => new PeerAttachmentArgs();
    }

    public sealed class PeerAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth of the transit router peer attachment. Unit: Mbps.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// The creation time of the transit router peer attachment.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The description of the transit router peer attachment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The id of the peer transit router.
        /// </summary>
        [Input("peerTransitRouterId")]
        public Input<string>? PeerTransitRouterId { get; set; }

        /// <summary>
        /// The region id of the peer transit router.
        /// </summary>
        [Input("peerTransitRouterRegionId")]
        public Input<string>? PeerTransitRouterRegionId { get; set; }

        /// <summary>
        /// The status of the transit router peer attachment.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<Inputs.PeerAttachmentTagGetArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.PeerAttachmentTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PeerAttachmentTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the transit router peer attachment.
        /// </summary>
        [Input("transitRouterAttachmentName")]
        public Input<string>? TransitRouterAttachmentName { get; set; }

        /// <summary>
        /// The bandwidth package id of the transit router peer attachment. When specifying this field, the field `bandwidth` must also be specified.
        /// </summary>
        [Input("transitRouterBandwidthPackageId")]
        public Input<string>? TransitRouterBandwidthPackageId { get; set; }

        /// <summary>
        /// The id of the local transit router.
        /// </summary>
        [Input("transitRouterId")]
        public Input<string>? TransitRouterId { get; set; }

        /// <summary>
        /// The route table id of the transit router peer attachment.
        /// </summary>
        [Input("transitRouterRouteTableId")]
        public Input<string>? TransitRouterRouteTableId { get; set; }

        /// <summary>
        /// The update time of the transit router peer attachment.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public PeerAttachmentState()
        {
        }
        public static new PeerAttachmentState Empty => new PeerAttachmentState();
    }
}
