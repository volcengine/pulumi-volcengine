// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Transit_router
{
    public static class DirectConnectGatewayAttachments
    {
        /// <summary>
        /// Use this data source to query detailed information of transit router direct connect gateway attachments
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Transit_router.DirectConnectGatewayAttachments.Invoke(new()
        ///     {
        ///         TransitRouterId = "tr-2bzy39x27qtxc2dx0eg5qaj05",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<DirectConnectGatewayAttachmentsResult> InvokeAsync(DirectConnectGatewayAttachmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<DirectConnectGatewayAttachmentsResult>("volcengine:transit_router/directConnectGatewayAttachments:DirectConnectGatewayAttachments", args ?? new DirectConnectGatewayAttachmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of transit router direct connect gateway attachments
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Volcengine.Transit_router.DirectConnectGatewayAttachments.Invoke(new()
        ///     {
        ///         TransitRouterId = "tr-2bzy39x27qtxc2dx0eg5qaj05",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<DirectConnectGatewayAttachmentsResult> Invoke(DirectConnectGatewayAttachmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<DirectConnectGatewayAttachmentsResult>("volcengine:transit_router/directConnectGatewayAttachments:DirectConnectGatewayAttachments", args ?? new DirectConnectGatewayAttachmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class DirectConnectGatewayAttachmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the direct connection gateway.
        /// </summary>
        [Input("directConnectGatewayId")]
        public string? DirectConnectGatewayId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("tags")]
        private List<Inputs.DirectConnectGatewayAttachmentsTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.DirectConnectGatewayAttachmentsTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.DirectConnectGatewayAttachmentsTagArgs>());
            set => _tags = value;
        }

        [Input("transitRouterAttachmentIds")]
        private List<string>? _transitRouterAttachmentIds;

        /// <summary>
        /// ID of the network instance connection.
        /// </summary>
        public List<string> TransitRouterAttachmentIds
        {
            get => _transitRouterAttachmentIds ?? (_transitRouterAttachmentIds = new List<string>());
            set => _transitRouterAttachmentIds = value;
        }

        /// <summary>
        /// The id of the transit router.
        /// </summary>
        [Input("transitRouterId", required: true)]
        public string TransitRouterId { get; set; } = null!;

        public DirectConnectGatewayAttachmentsArgs()
        {
        }
        public static new DirectConnectGatewayAttachmentsArgs Empty => new DirectConnectGatewayAttachmentsArgs();
    }

    public sealed class DirectConnectGatewayAttachmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the direct connection gateway.
        /// </summary>
        [Input("directConnectGatewayId")]
        public Input<string>? DirectConnectGatewayId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("tags")]
        private InputList<Inputs.DirectConnectGatewayAttachmentsTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.DirectConnectGatewayAttachmentsTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.DirectConnectGatewayAttachmentsTagInputArgs>());
            set => _tags = value;
        }

        [Input("transitRouterAttachmentIds")]
        private InputList<string>? _transitRouterAttachmentIds;

        /// <summary>
        /// ID of the network instance connection.
        /// </summary>
        public InputList<string> TransitRouterAttachmentIds
        {
            get => _transitRouterAttachmentIds ?? (_transitRouterAttachmentIds = new InputList<string>());
            set => _transitRouterAttachmentIds = value;
        }

        /// <summary>
        /// The id of the transit router.
        /// </summary>
        [Input("transitRouterId", required: true)]
        public Input<string> TransitRouterId { get; set; } = null!;

        public DirectConnectGatewayAttachmentsInvokeArgs()
        {
        }
        public static new DirectConnectGatewayAttachmentsInvokeArgs Empty => new DirectConnectGatewayAttachmentsInvokeArgs();
    }


    [OutputType]
    public sealed class DirectConnectGatewayAttachmentsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.DirectConnectGatewayAttachmentsAttachmentResult> Attachments;
        /// <summary>
        /// The direct connect gateway id.
        /// </summary>
        public readonly string? DirectConnectGatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.DirectConnectGatewayAttachmentsTagResult> Tags;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        public readonly ImmutableArray<string> TransitRouterAttachmentIds;
        /// <summary>
        /// The id of the transit router.
        /// </summary>
        public readonly string TransitRouterId;

        [OutputConstructor]
        private DirectConnectGatewayAttachmentsResult(
            ImmutableArray<Outputs.DirectConnectGatewayAttachmentsAttachmentResult> attachments,

            string? directConnectGatewayId,

            string id,

            string? outputFile,

            ImmutableArray<Outputs.DirectConnectGatewayAttachmentsTagResult> tags,

            int totalCount,

            ImmutableArray<string> transitRouterAttachmentIds,

            string transitRouterId)
        {
            Attachments = attachments;
            DirectConnectGatewayId = directConnectGatewayId;
            Id = id;
            OutputFile = outputFile;
            Tags = tags;
            TotalCount = totalCount;
            TransitRouterAttachmentIds = transitRouterAttachmentIds;
            TransitRouterId = transitRouterId;
        }
    }
}
