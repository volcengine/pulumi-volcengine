// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Transit_router
{
    [Obsolete(@"volcengine.transit_router.TransitRouters has been deprecated in favor of volcengine.transit_router.getTransitRouters")]
    public static class TransitRouters
    {
        /// <summary>
        /// Use this data source to query detailed information of transit routers
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = new Volcengine.Transit_router.TransitRouter("foo", new()
        ///     {
        ///         TransitRouterName = "test-tf-acc",
        ///         Description = "test-tf-acc",
        ///     });
        /// 
        ///     var @default = Volcengine.Transit_router.GetTransitRouters.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             foo.Id,
        ///         },
        ///         TransitRouterName = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<TransitRoutersResult> InvokeAsync(TransitRoutersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<TransitRoutersResult>("volcengine:transit_router/transitRouters:TransitRouters", args ?? new TransitRoutersArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of transit routers
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = new Volcengine.Transit_router.TransitRouter("foo", new()
        ///     {
        ///         TransitRouterName = "test-tf-acc",
        ///         Description = "test-tf-acc",
        ///     });
        /// 
        ///     var @default = Volcengine.Transit_router.GetTransitRouters.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             foo.Id,
        ///         },
        ///         TransitRouterName = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<TransitRoutersResult> Invoke(TransitRoutersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<TransitRoutersResult>("volcengine:transit_router/transitRouters:TransitRouters", args ?? new TransitRoutersInvokeArgs(), options.WithDefaults());
    }


    public sealed class TransitRoutersArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Transit Router ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ProjectName of the transit router.
        /// </summary>
        [Input("projectName")]
        public string? ProjectName { get; set; }

        [Input("tags")]
        private List<Inputs.TransitRoutersTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.TransitRoutersTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.TransitRoutersTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The name info.
        /// </summary>
        [Input("transitRouterName")]
        public string? TransitRouterName { get; set; }

        public TransitRoutersArgs()
        {
        }
        public static new TransitRoutersArgs Empty => new TransitRoutersArgs();
    }

    public sealed class TransitRoutersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of Transit Router ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        /// <summary>
        /// The ProjectName of the transit router.
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.TransitRoutersTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.TransitRoutersTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.TransitRoutersTagInputArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The name info.
        /// </summary>
        [Input("transitRouterName")]
        public Input<string>? TransitRouterName { get; set; }

        public TransitRoutersInvokeArgs()
        {
        }
        public static new TransitRoutersInvokeArgs Empty => new TransitRoutersInvokeArgs();
    }


    [OutputType]
    public sealed class TransitRoutersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// The ProjectName of the transit router.
        /// </summary>
        public readonly string? ProjectName;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.TransitRoutersTagResult> Tags;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The name of the transit router.
        /// </summary>
        public readonly string? TransitRouterName;
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.TransitRoutersTransitRouterResult> TransitRouters;

        [OutputConstructor]
        private TransitRoutersResult(
            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            string? projectName,

            ImmutableArray<Outputs.TransitRoutersTagResult> tags,

            int totalCount,

            string? transitRouterName,

            ImmutableArray<Outputs.TransitRoutersTransitRouterResult> transitRouters)
        {
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            ProjectName = projectName;
            Tags = tags;
            TotalCount = totalCount;
            TransitRouterName = transitRouterName;
            TransitRouters = transitRouters;
        }
    }
}
