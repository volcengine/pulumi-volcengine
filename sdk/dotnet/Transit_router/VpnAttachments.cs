// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Transit_router
{
    public static class VpnAttachments
    {
        /// <summary>
        /// Use this data source to query detailed information of transit router vpn attachments
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Transit_router.VpnAttachments.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "tr-attach-3rf2xi7ae6y9s5zsk2hm6pibt",
        ///         },
        ///         TransitRouterId = "tr-2d6fr7f39unsw58ozfe1ow21x",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<VpnAttachmentsResult> InvokeAsync(VpnAttachmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<VpnAttachmentsResult>("volcengine:transit_router/vpnAttachments:VpnAttachments", args ?? new VpnAttachmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of transit router vpn attachments
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Volcengine.Transit_router.VpnAttachments.Invoke(new()
        ///     {
        ///         Ids = new[]
        ///         {
        ///             "tr-attach-3rf2xi7ae6y9s5zsk2hm6pibt",
        ///         },
        ///         TransitRouterId = "tr-2d6fr7f39unsw58ozfe1ow21x",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<VpnAttachmentsResult> Invoke(VpnAttachmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<VpnAttachmentsResult>("volcengine:transit_router/vpnAttachments:VpnAttachments", args ?? new VpnAttachmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class VpnAttachmentsArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// The ID list of the VPN attachment.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("tags")]
        private List<Inputs.VpnAttachmentsTagArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public List<Inputs.VpnAttachmentsTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.VpnAttachmentsTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The id of the transit router.
        /// </summary>
        [Input("transitRouterId", required: true)]
        public string TransitRouterId { get; set; } = null!;

        /// <summary>
        /// The ID of the IPSec connection.
        /// </summary>
        [Input("vpnConnectionId")]
        public string? VpnConnectionId { get; set; }

        public VpnAttachmentsArgs()
        {
        }
        public static new VpnAttachmentsArgs Empty => new VpnAttachmentsArgs();
    }

    public sealed class VpnAttachmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The ID list of the VPN attachment.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("tags")]
        private InputList<Inputs.VpnAttachmentsTagInputArgs>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputList<Inputs.VpnAttachmentsTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.VpnAttachmentsTagInputArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The id of the transit router.
        /// </summary>
        [Input("transitRouterId", required: true)]
        public Input<string> TransitRouterId { get; set; } = null!;

        /// <summary>
        /// The ID of the IPSec connection.
        /// </summary>
        [Input("vpnConnectionId")]
        public Input<string>? VpnConnectionId { get; set; }

        public VpnAttachmentsInvokeArgs()
        {
        }
        public static new VpnAttachmentsInvokeArgs Empty => new VpnAttachmentsInvokeArgs();
    }


    [OutputType]
    public sealed class VpnAttachmentsResult
    {
        /// <summary>
        /// The collection of query.
        /// </summary>
        public readonly ImmutableArray<Outputs.VpnAttachmentsAttachmentResult> Attachments;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        /// <summary>
        /// Tags.
        /// </summary>
        public readonly ImmutableArray<Outputs.VpnAttachmentsTagResult> Tags;
        /// <summary>
        /// The total count of query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The id of the transit router.
        /// </summary>
        public readonly string TransitRouterId;
        /// <summary>
        /// The ID of the IPSec connection.
        /// </summary>
        public readonly string? VpnConnectionId;

        [OutputConstructor]
        private VpnAttachmentsResult(
            ImmutableArray<Outputs.VpnAttachmentsAttachmentResult> attachments,

            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            ImmutableArray<Outputs.VpnAttachmentsTagResult> tags,

            int totalCount,

            string transitRouterId,

            string? vpnConnectionId)
        {
            Attachments = attachments;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            Tags = tags;
            TotalCount = totalCount;
            TransitRouterId = transitRouterId;
            VpnConnectionId = vpnConnectionId;
        }
    }
}
