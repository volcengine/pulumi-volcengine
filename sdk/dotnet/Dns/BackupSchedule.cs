// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Dns
{
    /// <summary>
    /// Provides a resource to manage dns backup schedule
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Volcengine.Dns.BackupSchedule("foo", new()
    ///     {
    ///         Schedule = 1,
    ///         Zid = 58846,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DnsBackupSchedule can be imported using the id, e.g.
    /// 
    /// ```sh
    /// $ pulumi import volcengine:dns/backupSchedule:BackupSchedule default resource_id
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:dns/backupSchedule:BackupSchedule")]
    public partial class BackupSchedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Maximum number of backups per domain.
        /// </summary>
        [Output("countLimit")]
        public Output<int> CountLimit { get; private set; } = null!;

        /// <summary>
        /// The backup schedule. 0: Turn off automatic backup. 1: Automatic backup once per hour. 2: Automatic backup once per day. 3: Automatic backup once per month.
        /// </summary>
        [Output("schedule")]
        public Output<int> Schedule { get; private set; } = null!;

        /// <summary>
        /// The ID of the domain for which you want to update the backup schedule.
        /// </summary>
        [Output("zid")]
        public Output<int> Zid { get; private set; } = null!;


        /// <summary>
        /// Create a BackupSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupSchedule(string name, BackupScheduleArgs args, CustomResourceOptions? options = null)
            : base("volcengine:dns/backupSchedule:BackupSchedule", name, args ?? new BackupScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupSchedule(string name, Input<string> id, BackupScheduleState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:dns/backupSchedule:BackupSchedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupSchedule Get(string name, Input<string> id, BackupScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupSchedule(name, id, state, options);
        }
    }

    public sealed class BackupScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The backup schedule. 0: Turn off automatic backup. 1: Automatic backup once per hour. 2: Automatic backup once per day. 3: Automatic backup once per month.
        /// </summary>
        [Input("schedule", required: true)]
        public Input<int> Schedule { get; set; } = null!;

        /// <summary>
        /// The ID of the domain for which you want to update the backup schedule.
        /// </summary>
        [Input("zid", required: true)]
        public Input<int> Zid { get; set; } = null!;

        public BackupScheduleArgs()
        {
        }
        public static new BackupScheduleArgs Empty => new BackupScheduleArgs();
    }

    public sealed class BackupScheduleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Maximum number of backups per domain.
        /// </summary>
        [Input("countLimit")]
        public Input<int>? CountLimit { get; set; }

        /// <summary>
        /// The backup schedule. 0: Turn off automatic backup. 1: Automatic backup once per hour. 2: Automatic backup once per day. 3: Automatic backup once per month.
        /// </summary>
        [Input("schedule")]
        public Input<int>? Schedule { get; set; }

        /// <summary>
        /// The ID of the domain for which you want to update the backup schedule.
        /// </summary>
        [Input("zid")]
        public Input<int>? Zid { get; set; }

        public BackupScheduleState()
        {
        }
        public static new BackupScheduleState Empty => new BackupScheduleState();
    }
}
