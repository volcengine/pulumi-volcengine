# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'FinancialRelationsFinancialRelationResult',
    'FinancialRelationsFinancialRelationAuthInfoResult',
]

@pulumi.output_type
class FinancialRelationsFinancialRelationResult(dict):
    def __init__(__self__, *,
                 account_alias: str,
                 auth_infos: Sequence['outputs.FinancialRelationsFinancialRelationAuthInfoResult'],
                 filiation: int,
                 filiation_desc: str,
                 major_account_id: int,
                 major_account_name: str,
                 relation: int,
                 relation_desc: str,
                 relation_id: str,
                 status: int,
                 status_desc: str,
                 sub_account_id: int,
                 sub_account_name: str,
                 update_time: str):
        """
        :param str account_alias: The display name of the sub account.
        :param Sequence['FinancialRelationsFinancialRelationAuthInfoArgs'] auth_infos: The authorization info of the financial relation.
        :param int filiation: The filiation of the financial relation.
        :param str filiation_desc: The filiation description of the financial relation.
        :param int major_account_id: The id of the major account.
        :param str major_account_name: The name of the major account.
        :param int relation: A list of relation. Valid values: `1`, `4`.
        :param str relation_desc: The relation description of the financial.
        :param str relation_id: The id of the financial relation.
        :param int status: A list of status. Valid values: `100`, `200`, `250`, `300`, `400`, `500`.
        :param str status_desc: The status description of the financial relation.
        :param int sub_account_id: The id of the sub account.
        :param str sub_account_name: The name of the sub account.
        :param str update_time: The update time of the financial relation.
        """
        pulumi.set(__self__, "account_alias", account_alias)
        pulumi.set(__self__, "auth_infos", auth_infos)
        pulumi.set(__self__, "filiation", filiation)
        pulumi.set(__self__, "filiation_desc", filiation_desc)
        pulumi.set(__self__, "major_account_id", major_account_id)
        pulumi.set(__self__, "major_account_name", major_account_name)
        pulumi.set(__self__, "relation", relation)
        pulumi.set(__self__, "relation_desc", relation_desc)
        pulumi.set(__self__, "relation_id", relation_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "status_desc", status_desc)
        pulumi.set(__self__, "sub_account_id", sub_account_id)
        pulumi.set(__self__, "sub_account_name", sub_account_name)
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter(name="accountAlias")
    def account_alias(self) -> str:
        """
        The display name of the sub account.
        """
        return pulumi.get(self, "account_alias")

    @property
    @pulumi.getter(name="authInfos")
    def auth_infos(self) -> Sequence['outputs.FinancialRelationsFinancialRelationAuthInfoResult']:
        """
        The authorization info of the financial relation.
        """
        return pulumi.get(self, "auth_infos")

    @property
    @pulumi.getter
    def filiation(self) -> int:
        """
        The filiation of the financial relation.
        """
        return pulumi.get(self, "filiation")

    @property
    @pulumi.getter(name="filiationDesc")
    def filiation_desc(self) -> str:
        """
        The filiation description of the financial relation.
        """
        return pulumi.get(self, "filiation_desc")

    @property
    @pulumi.getter(name="majorAccountId")
    def major_account_id(self) -> int:
        """
        The id of the major account.
        """
        return pulumi.get(self, "major_account_id")

    @property
    @pulumi.getter(name="majorAccountName")
    def major_account_name(self) -> str:
        """
        The name of the major account.
        """
        return pulumi.get(self, "major_account_name")

    @property
    @pulumi.getter
    def relation(self) -> int:
        """
        A list of relation. Valid values: `1`, `4`.
        """
        return pulumi.get(self, "relation")

    @property
    @pulumi.getter(name="relationDesc")
    def relation_desc(self) -> str:
        """
        The relation description of the financial.
        """
        return pulumi.get(self, "relation_desc")

    @property
    @pulumi.getter(name="relationId")
    def relation_id(self) -> str:
        """
        The id of the financial relation.
        """
        return pulumi.get(self, "relation_id")

    @property
    @pulumi.getter
    def status(self) -> int:
        """
        A list of status. Valid values: `100`, `200`, `250`, `300`, `400`, `500`.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusDesc")
    def status_desc(self) -> str:
        """
        The status description of the financial relation.
        """
        return pulumi.get(self, "status_desc")

    @property
    @pulumi.getter(name="subAccountId")
    def sub_account_id(self) -> int:
        """
        The id of the sub account.
        """
        return pulumi.get(self, "sub_account_id")

    @property
    @pulumi.getter(name="subAccountName")
    def sub_account_name(self) -> str:
        """
        The name of the sub account.
        """
        return pulumi.get(self, "sub_account_name")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        """
        The update time of the financial relation.
        """
        return pulumi.get(self, "update_time")


@pulumi.output_type
class FinancialRelationsFinancialRelationAuthInfoResult(dict):
    def __init__(__self__, *,
                 auth_id: str,
                 auth_lists: Sequence[int],
                 auth_status: int):
        """
        :param str auth_id: The auth id of the financial relation.
        :param Sequence[int] auth_lists: The auth list of the financial relation.
        :param int auth_status: The auth status of the financial relation.
        """
        pulumi.set(__self__, "auth_id", auth_id)
        pulumi.set(__self__, "auth_lists", auth_lists)
        pulumi.set(__self__, "auth_status", auth_status)

    @property
    @pulumi.getter(name="authId")
    def auth_id(self) -> str:
        """
        The auth id of the financial relation.
        """
        return pulumi.get(self, "auth_id")

    @property
    @pulumi.getter(name="authLists")
    def auth_lists(self) -> Sequence[int]:
        """
        The auth list of the financial relation.
        """
        return pulumi.get(self, "auth_lists")

    @property
    @pulumi.getter(name="authStatus")
    def auth_status(self) -> int:
        """
        The auth status of the financial relation.
        """
        return pulumi.get(self, "auth_status")


