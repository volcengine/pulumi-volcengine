# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PermissionSetArgs', 'PermissionSet']

@pulumi.input_type
class PermissionSetArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 permission_policies: Optional[pulumi.Input[Sequence[pulumi.Input['PermissionSetPermissionPolicyArgs']]]] = None,
                 relay_state: Optional[pulumi.Input[str]] = None,
                 session_duration: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a PermissionSet resource.
        :param pulumi.Input[str] description: The description of the cloud identity permission set.
        :param pulumi.Input[str] name: The name of the cloud identity permission set.
        :param pulumi.Input[Sequence[pulumi.Input['PermissionSetPermissionPolicyArgs']]] permission_policies: The policies of the cloud identity permission set.
        :param pulumi.Input[str] relay_state: The relay state of the cloud identity permission set.
        :param pulumi.Input[int] session_duration: The session duration of the cloud identity permission set. Unit: second. Valid value range in 3600~43200.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if permission_policies is not None:
            pulumi.set(__self__, "permission_policies", permission_policies)
        if relay_state is not None:
            pulumi.set(__self__, "relay_state", relay_state)
        if session_duration is not None:
            pulumi.set(__self__, "session_duration", session_duration)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the cloud identity permission set.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the cloud identity permission set.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="permissionPolicies")
    def permission_policies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PermissionSetPermissionPolicyArgs']]]]:
        """
        The policies of the cloud identity permission set.
        """
        return pulumi.get(self, "permission_policies")

    @permission_policies.setter
    def permission_policies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PermissionSetPermissionPolicyArgs']]]]):
        pulumi.set(self, "permission_policies", value)

    @property
    @pulumi.getter(name="relayState")
    def relay_state(self) -> Optional[pulumi.Input[str]]:
        """
        The relay state of the cloud identity permission set.
        """
        return pulumi.get(self, "relay_state")

    @relay_state.setter
    def relay_state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "relay_state", value)

    @property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> Optional[pulumi.Input[int]]:
        """
        The session duration of the cloud identity permission set. Unit: second. Valid value range in 3600~43200.
        """
        return pulumi.get(self, "session_duration")

    @session_duration.setter
    def session_duration(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "session_duration", value)


@pulumi.input_type
class _PermissionSetState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 permission_policies: Optional[pulumi.Input[Sequence[pulumi.Input['PermissionSetPermissionPolicyArgs']]]] = None,
                 relay_state: Optional[pulumi.Input[str]] = None,
                 session_duration: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering PermissionSet resources.
        :param pulumi.Input[str] description: The description of the cloud identity permission set.
        :param pulumi.Input[str] name: The name of the cloud identity permission set.
        :param pulumi.Input[Sequence[pulumi.Input['PermissionSetPermissionPolicyArgs']]] permission_policies: The policies of the cloud identity permission set.
        :param pulumi.Input[str] relay_state: The relay state of the cloud identity permission set.
        :param pulumi.Input[int] session_duration: The session duration of the cloud identity permission set. Unit: second. Valid value range in 3600~43200.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if permission_policies is not None:
            pulumi.set(__self__, "permission_policies", permission_policies)
        if relay_state is not None:
            pulumi.set(__self__, "relay_state", relay_state)
        if session_duration is not None:
            pulumi.set(__self__, "session_duration", session_duration)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the cloud identity permission set.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the cloud identity permission set.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="permissionPolicies")
    def permission_policies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PermissionSetPermissionPolicyArgs']]]]:
        """
        The policies of the cloud identity permission set.
        """
        return pulumi.get(self, "permission_policies")

    @permission_policies.setter
    def permission_policies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PermissionSetPermissionPolicyArgs']]]]):
        pulumi.set(self, "permission_policies", value)

    @property
    @pulumi.getter(name="relayState")
    def relay_state(self) -> Optional[pulumi.Input[str]]:
        """
        The relay state of the cloud identity permission set.
        """
        return pulumi.get(self, "relay_state")

    @relay_state.setter
    def relay_state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "relay_state", value)

    @property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> Optional[pulumi.Input[int]]:
        """
        The session duration of the cloud identity permission set. Unit: second. Valid value range in 3600~43200.
        """
        return pulumi.get(self, "session_duration")

    @session_duration.setter
    def session_duration(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "session_duration", value)


class PermissionSet(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 permission_policies: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PermissionSetPermissionPolicyArgs']]]]] = None,
                 relay_state: Optional[pulumi.Input[str]] = None,
                 session_duration: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Provides a resource to manage cloud identity permission set
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo = volcengine.cloud_identity.PermissionSet("foo",
            description="tf",
            permission_policies=[
                volcengine.cloud_identity.PermissionSetPermissionPolicyArgs(
                    inline_policy_document="",
                    permission_policy_name="AdministratorAccess",
                    permission_policy_type="System",
                ),
                volcengine.cloud_identity.PermissionSetPermissionPolicyArgs(
                    inline_policy_document="",
                    permission_policy_name="ReadOnlyAccess",
                    permission_policy_type="System",
                ),
                volcengine.cloud_identity.PermissionSetPermissionPolicyArgs(
                    inline_policy_document="{\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":[\\"auto_scaling:DescribeScalingGroups\\"],\\"Resource\\":[\\"*\\"]}]}",
                    permission_policy_type="Inline",
                ),
            ],
            session_duration=5000)
        ```

        ## Import

        CloudIdentityPermissionSet can be imported using the id, e.g.

        ```sh
         $ pulumi import volcengine:cloud_identity/permissionSet:PermissionSet default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the cloud identity permission set.
        :param pulumi.Input[str] name: The name of the cloud identity permission set.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PermissionSetPermissionPolicyArgs']]]] permission_policies: The policies of the cloud identity permission set.
        :param pulumi.Input[str] relay_state: The relay state of the cloud identity permission set.
        :param pulumi.Input[int] session_duration: The session duration of the cloud identity permission set. Unit: second. Valid value range in 3600~43200.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[PermissionSetArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to manage cloud identity permission set
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo = volcengine.cloud_identity.PermissionSet("foo",
            description="tf",
            permission_policies=[
                volcengine.cloud_identity.PermissionSetPermissionPolicyArgs(
                    inline_policy_document="",
                    permission_policy_name="AdministratorAccess",
                    permission_policy_type="System",
                ),
                volcengine.cloud_identity.PermissionSetPermissionPolicyArgs(
                    inline_policy_document="",
                    permission_policy_name="ReadOnlyAccess",
                    permission_policy_type="System",
                ),
                volcengine.cloud_identity.PermissionSetPermissionPolicyArgs(
                    inline_policy_document="{\\"Statement\\":[{\\"Effect\\":\\"Allow\\",\\"Action\\":[\\"auto_scaling:DescribeScalingGroups\\"],\\"Resource\\":[\\"*\\"]}]}",
                    permission_policy_type="Inline",
                ),
            ],
            session_duration=5000)
        ```

        ## Import

        CloudIdentityPermissionSet can be imported using the id, e.g.

        ```sh
         $ pulumi import volcengine:cloud_identity/permissionSet:PermissionSet default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param PermissionSetArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PermissionSetArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 permission_policies: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PermissionSetPermissionPolicyArgs']]]]] = None,
                 relay_state: Optional[pulumi.Input[str]] = None,
                 session_duration: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PermissionSetArgs.__new__(PermissionSetArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["name"] = name
            __props__.__dict__["permission_policies"] = permission_policies
            __props__.__dict__["relay_state"] = relay_state
            __props__.__dict__["session_duration"] = session_duration
        super(PermissionSet, __self__).__init__(
            'volcengine:cloud_identity/permissionSet:PermissionSet',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            permission_policies: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PermissionSetPermissionPolicyArgs']]]]] = None,
            relay_state: Optional[pulumi.Input[str]] = None,
            session_duration: Optional[pulumi.Input[int]] = None) -> 'PermissionSet':
        """
        Get an existing PermissionSet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the cloud identity permission set.
        :param pulumi.Input[str] name: The name of the cloud identity permission set.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PermissionSetPermissionPolicyArgs']]]] permission_policies: The policies of the cloud identity permission set.
        :param pulumi.Input[str] relay_state: The relay state of the cloud identity permission set.
        :param pulumi.Input[int] session_duration: The session duration of the cloud identity permission set. Unit: second. Valid value range in 3600~43200.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PermissionSetState.__new__(_PermissionSetState)

        __props__.__dict__["description"] = description
        __props__.__dict__["name"] = name
        __props__.__dict__["permission_policies"] = permission_policies
        __props__.__dict__["relay_state"] = relay_state
        __props__.__dict__["session_duration"] = session_duration
        return PermissionSet(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of the cloud identity permission set.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the cloud identity permission set.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="permissionPolicies")
    def permission_policies(self) -> pulumi.Output[Optional[Sequence['outputs.PermissionSetPermissionPolicy']]]:
        """
        The policies of the cloud identity permission set.
        """
        return pulumi.get(self, "permission_policies")

    @property
    @pulumi.getter(name="relayState")
    def relay_state(self) -> pulumi.Output[str]:
        """
        The relay state of the cloud identity permission set.
        """
        return pulumi.get(self, "relay_state")

    @property
    @pulumi.getter(name="sessionDuration")
    def session_duration(self) -> pulumi.Output[int]:
        """
        The session duration of the cloud identity permission set. Unit: second. Valid value range in 3600~43200.
        """
        return pulumi.get(self, "session_duration")

