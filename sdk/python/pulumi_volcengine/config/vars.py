# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

import types

__config__ = pulumi.Config('volcengine')


class _ExportableConfig(types.ModuleType):
    @property
    def access_key(self) -> Optional[str]:
        """
        The Access Key for Volcengine Provider
        """
        return __config__.get('accessKey') or _utilities.get_env('VOLCENGINE_ACCESS_KEY')

    @property
    def customer_endpoints(self) -> Optional[str]:
        """
        CUSTOMER ENDPOINTS for Volcengine Provider
        """
        return __config__.get('customerEndpoints')

    @property
    def customer_headers(self) -> Optional[str]:
        """
        CUSTOMER HEADERS for Volcengine Provider
        """
        return __config__.get('customerHeaders')

    @property
    def disable_ssl(self) -> Optional[bool]:
        """
        Disable SSL for Volcengine Provider
        """
        return __config__.get_bool('disableSsl')

    @property
    def endpoint(self) -> Optional[str]:
        """
        The Customer Endpoint for Volcengine Provider
        """
        return __config__.get('endpoint') or _utilities.get_env('VOLCENGINE_ENDPOINT')

    @property
    def proxy_url(self) -> Optional[str]:
        """
        PROXY URL for Volcengine Provider
        """
        return __config__.get('proxyUrl')

    @property
    def region(self) -> Optional[str]:
        """
        The Region for Volcengine Provider
        """
        return __config__.get('region') or _utilities.get_env('VOLCENGINE_REGION')

    @property
    def secret_key(self) -> Optional[str]:
        """
        The Secret Key for Volcengine Provider
        """
        return __config__.get('secretKey') or _utilities.get_env('VOLCENGINE_SECRET_KEY')

    @property
    def session_token(self) -> Optional[str]:
        """
        The Session Token for Volcengine Provider
        """
        return __config__.get('sessionToken')

