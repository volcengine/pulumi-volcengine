# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'BandwidthPackageAllocationArgs',
    'TransitRouterTransitRouterAttachmentArgs',
    'VpcAttachmentAttachPointArgs',
]

@pulumi.input_type
class BandwidthPackageAllocationArgs:
    def __init__(__self__, *,
                 allocate_time: Optional[pulumi.Input[str]] = None,
                 delete_time: Optional[pulumi.Input[str]] = None,
                 local_region_id: Optional[pulumi.Input[str]] = None,
                 transit_router_peer_attachment_id: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] allocate_time: The delete time of the transit router bandwidth package.
        :param pulumi.Input[str] delete_time: The delete time of the transit router bandwidth package.
        :param pulumi.Input[str] local_region_id: The local region id of the transit router.
        :param pulumi.Input[str] transit_router_peer_attachment_id: The ID of the peer attachment.
        """
        if allocate_time is not None:
            pulumi.set(__self__, "allocate_time", allocate_time)
        if delete_time is not None:
            pulumi.set(__self__, "delete_time", delete_time)
        if local_region_id is not None:
            pulumi.set(__self__, "local_region_id", local_region_id)
        if transit_router_peer_attachment_id is not None:
            pulumi.set(__self__, "transit_router_peer_attachment_id", transit_router_peer_attachment_id)

    @property
    @pulumi.getter(name="allocateTime")
    def allocate_time(self) -> Optional[pulumi.Input[str]]:
        """
        The delete time of the transit router bandwidth package.
        """
        return pulumi.get(self, "allocate_time")

    @allocate_time.setter
    def allocate_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "allocate_time", value)

    @property
    @pulumi.getter(name="deleteTime")
    def delete_time(self) -> Optional[pulumi.Input[str]]:
        """
        The delete time of the transit router bandwidth package.
        """
        return pulumi.get(self, "delete_time")

    @delete_time.setter
    def delete_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "delete_time", value)

    @property
    @pulumi.getter(name="localRegionId")
    def local_region_id(self) -> Optional[pulumi.Input[str]]:
        """
        The local region id of the transit router.
        """
        return pulumi.get(self, "local_region_id")

    @local_region_id.setter
    def local_region_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "local_region_id", value)

    @property
    @pulumi.getter(name="transitRouterPeerAttachmentId")
    def transit_router_peer_attachment_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the peer attachment.
        """
        return pulumi.get(self, "transit_router_peer_attachment_id")

    @transit_router_peer_attachment_id.setter
    def transit_router_peer_attachment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "transit_router_peer_attachment_id", value)


@pulumi.input_type
class TransitRouterTransitRouterAttachmentArgs:
    def __init__(__self__, *,
                 creation_time: Optional[pulumi.Input[str]] = None,
                 resource_id: Optional[pulumi.Input[str]] = None,
                 resource_type: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 transit_router_attachment_id: Optional[pulumi.Input[str]] = None,
                 transit_router_attachment_name: Optional[pulumi.Input[str]] = None,
                 transit_router_route_table_id: Optional[pulumi.Input[str]] = None,
                 update_time: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] creation_time: The create time.
        :param pulumi.Input[str] resource_id: The id of resource.
        :param pulumi.Input[str] resource_type: The type of resource.
        :param pulumi.Input[str] status: The status of the transit router.
        :param pulumi.Input[str] transit_router_attachment_id: The id of transit router attachment.
        :param pulumi.Input[str] transit_router_attachment_name: The name of transit router attachment.
        :param pulumi.Input[str] transit_router_route_table_id: The id of transit router route table.
        :param pulumi.Input[str] update_time: The update time.
        """
        if creation_time is not None:
            pulumi.set(__self__, "creation_time", creation_time)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if transit_router_attachment_id is not None:
            pulumi.set(__self__, "transit_router_attachment_id", transit_router_attachment_id)
        if transit_router_attachment_name is not None:
            pulumi.set(__self__, "transit_router_attachment_name", transit_router_attachment_name)
        if transit_router_route_table_id is not None:
            pulumi.set(__self__, "transit_router_route_table_id", transit_router_route_table_id)
        if update_time is not None:
            pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> Optional[pulumi.Input[str]]:
        """
        The create time.
        """
        return pulumi.get(self, "creation_time")

    @creation_time.setter
    def creation_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "creation_time", value)

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of resource.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_id", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of resource.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_type", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the transit router.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="transitRouterAttachmentId")
    def transit_router_attachment_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of transit router attachment.
        """
        return pulumi.get(self, "transit_router_attachment_id")

    @transit_router_attachment_id.setter
    def transit_router_attachment_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "transit_router_attachment_id", value)

    @property
    @pulumi.getter(name="transitRouterAttachmentName")
    def transit_router_attachment_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of transit router attachment.
        """
        return pulumi.get(self, "transit_router_attachment_name")

    @transit_router_attachment_name.setter
    def transit_router_attachment_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "transit_router_attachment_name", value)

    @property
    @pulumi.getter(name="transitRouterRouteTableId")
    def transit_router_route_table_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of transit router route table.
        """
        return pulumi.get(self, "transit_router_route_table_id")

    @transit_router_route_table_id.setter
    def transit_router_route_table_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "transit_router_route_table_id", value)

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> Optional[pulumi.Input[str]]:
        """
        The update time.
        """
        return pulumi.get(self, "update_time")

    @update_time.setter
    def update_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "update_time", value)


@pulumi.input_type
class VpcAttachmentAttachPointArgs:
    def __init__(__self__, *,
                 subnet_id: pulumi.Input[str],
                 zone_id: pulumi.Input[str]):
        """
        :param pulumi.Input[str] subnet_id: The id of subnet.
        :param pulumi.Input[str] zone_id: The id of zone.
        """
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Input[str]:
        """
        The id of subnet.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Input[str]:
        """
        The id of zone.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "zone_id", value)


