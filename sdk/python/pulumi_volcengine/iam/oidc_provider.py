# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['OidcProviderArgs', 'OidcProvider']

@pulumi.input_type
class OidcProviderArgs:
    def __init__(__self__, *,
                 client_ids: pulumi.Input[Sequence[pulumi.Input[str]]],
                 issuer_url: pulumi.Input[str],
                 oidc_provider_name: pulumi.Input[str],
                 thumbprints: pulumi.Input[Sequence[pulumi.Input[str]]],
                 description: Optional[pulumi.Input[str]] = None,
                 issuance_limit_time: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a OidcProvider resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] client_ids: The client IDs of the OIDC provider.
        :param pulumi.Input[str] issuer_url: The URL of the OIDC provider.
        :param pulumi.Input[str] oidc_provider_name: The name of the OIDC provider.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] thumbprints: The thumbprints of the OIDC provider.
        :param pulumi.Input[str] description: The description of the OIDC provider.
        :param pulumi.Input[int] issuance_limit_time: The issuance limit time of the OIDC provider.
        """
        pulumi.set(__self__, "client_ids", client_ids)
        pulumi.set(__self__, "issuer_url", issuer_url)
        pulumi.set(__self__, "oidc_provider_name", oidc_provider_name)
        pulumi.set(__self__, "thumbprints", thumbprints)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if issuance_limit_time is not None:
            pulumi.set(__self__, "issuance_limit_time", issuance_limit_time)

    @property
    @pulumi.getter(name="clientIds")
    def client_ids(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        The client IDs of the OIDC provider.
        """
        return pulumi.get(self, "client_ids")

    @client_ids.setter
    def client_ids(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "client_ids", value)

    @property
    @pulumi.getter(name="issuerUrl")
    def issuer_url(self) -> pulumi.Input[str]:
        """
        The URL of the OIDC provider.
        """
        return pulumi.get(self, "issuer_url")

    @issuer_url.setter
    def issuer_url(self, value: pulumi.Input[str]):
        pulumi.set(self, "issuer_url", value)

    @property
    @pulumi.getter(name="oidcProviderName")
    def oidc_provider_name(self) -> pulumi.Input[str]:
        """
        The name of the OIDC provider.
        """
        return pulumi.get(self, "oidc_provider_name")

    @oidc_provider_name.setter
    def oidc_provider_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "oidc_provider_name", value)

    @property
    @pulumi.getter
    def thumbprints(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        The thumbprints of the OIDC provider.
        """
        return pulumi.get(self, "thumbprints")

    @thumbprints.setter
    def thumbprints(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "thumbprints", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the OIDC provider.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="issuanceLimitTime")
    def issuance_limit_time(self) -> Optional[pulumi.Input[int]]:
        """
        The issuance limit time of the OIDC provider.
        """
        return pulumi.get(self, "issuance_limit_time")

    @issuance_limit_time.setter
    def issuance_limit_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "issuance_limit_time", value)


@pulumi.input_type
class _OidcProviderState:
    def __init__(__self__, *,
                 client_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 create_date: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 issuance_limit_time: Optional[pulumi.Input[int]] = None,
                 issuer_url: Optional[pulumi.Input[str]] = None,
                 oidc_provider_name: Optional[pulumi.Input[str]] = None,
                 thumbprints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 trn: Optional[pulumi.Input[str]] = None,
                 update_date: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OidcProvider resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] client_ids: The client IDs of the OIDC provider.
        :param pulumi.Input[str] create_date: The create date of the OIDC provider.
        :param pulumi.Input[str] description: The description of the OIDC provider.
        :param pulumi.Input[int] issuance_limit_time: The issuance limit time of the OIDC provider.
        :param pulumi.Input[str] issuer_url: The URL of the OIDC provider.
        :param pulumi.Input[str] oidc_provider_name: The name of the OIDC provider.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] thumbprints: The thumbprints of the OIDC provider.
        :param pulumi.Input[str] trn: The trn of OIDC provider.
        :param pulumi.Input[str] update_date: The update date of the OIDC provider.
        """
        if client_ids is not None:
            pulumi.set(__self__, "client_ids", client_ids)
        if create_date is not None:
            pulumi.set(__self__, "create_date", create_date)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if issuance_limit_time is not None:
            pulumi.set(__self__, "issuance_limit_time", issuance_limit_time)
        if issuer_url is not None:
            pulumi.set(__self__, "issuer_url", issuer_url)
        if oidc_provider_name is not None:
            pulumi.set(__self__, "oidc_provider_name", oidc_provider_name)
        if thumbprints is not None:
            pulumi.set(__self__, "thumbprints", thumbprints)
        if trn is not None:
            pulumi.set(__self__, "trn", trn)
        if update_date is not None:
            pulumi.set(__self__, "update_date", update_date)

    @property
    @pulumi.getter(name="clientIds")
    def client_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The client IDs of the OIDC provider.
        """
        return pulumi.get(self, "client_ids")

    @client_ids.setter
    def client_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "client_ids", value)

    @property
    @pulumi.getter(name="createDate")
    def create_date(self) -> Optional[pulumi.Input[str]]:
        """
        The create date of the OIDC provider.
        """
        return pulumi.get(self, "create_date")

    @create_date.setter
    def create_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_date", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the OIDC provider.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="issuanceLimitTime")
    def issuance_limit_time(self) -> Optional[pulumi.Input[int]]:
        """
        The issuance limit time of the OIDC provider.
        """
        return pulumi.get(self, "issuance_limit_time")

    @issuance_limit_time.setter
    def issuance_limit_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "issuance_limit_time", value)

    @property
    @pulumi.getter(name="issuerUrl")
    def issuer_url(self) -> Optional[pulumi.Input[str]]:
        """
        The URL of the OIDC provider.
        """
        return pulumi.get(self, "issuer_url")

    @issuer_url.setter
    def issuer_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "issuer_url", value)

    @property
    @pulumi.getter(name="oidcProviderName")
    def oidc_provider_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the OIDC provider.
        """
        return pulumi.get(self, "oidc_provider_name")

    @oidc_provider_name.setter
    def oidc_provider_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "oidc_provider_name", value)

    @property
    @pulumi.getter
    def thumbprints(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The thumbprints of the OIDC provider.
        """
        return pulumi.get(self, "thumbprints")

    @thumbprints.setter
    def thumbprints(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "thumbprints", value)

    @property
    @pulumi.getter
    def trn(self) -> Optional[pulumi.Input[str]]:
        """
        The trn of OIDC provider.
        """
        return pulumi.get(self, "trn")

    @trn.setter
    def trn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "trn", value)

    @property
    @pulumi.getter(name="updateDate")
    def update_date(self) -> Optional[pulumi.Input[str]]:
        """
        The update date of the OIDC provider.
        """
        return pulumi.get(self, "update_date")

    @update_date.setter
    def update_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "update_date", value)


class OidcProvider(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 client_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 issuance_limit_time: Optional[pulumi.Input[int]] = None,
                 issuer_url: Optional[pulumi.Input[str]] = None,
                 oidc_provider_name: Optional[pulumi.Input[str]] = None,
                 thumbprints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Provides a resource to manage iam oidc provider
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo = volcengine.iam.OidcProvider("foo",
            client_ids=[
                "test-client-id-1",
                "test-client-id-2",
            ],
            description="acc-test-oidc",
            issuance_limit_time=6,
            issuer_url="test-issuer-url",
            oidc_provider_name="oidc_provider",
            thumbprints=[
                "test-thumbprint-1",
                "test-thumbprint-2",
            ])
        ```

        ## Import

        IamOidcProvider can be imported using the id, e.g.

        ```sh
        $ pulumi import volcengine:iam/oidcProvider:OidcProvider default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] client_ids: The client IDs of the OIDC provider.
        :param pulumi.Input[str] description: The description of the OIDC provider.
        :param pulumi.Input[int] issuance_limit_time: The issuance limit time of the OIDC provider.
        :param pulumi.Input[str] issuer_url: The URL of the OIDC provider.
        :param pulumi.Input[str] oidc_provider_name: The name of the OIDC provider.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] thumbprints: The thumbprints of the OIDC provider.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OidcProviderArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to manage iam oidc provider
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo = volcengine.iam.OidcProvider("foo",
            client_ids=[
                "test-client-id-1",
                "test-client-id-2",
            ],
            description="acc-test-oidc",
            issuance_limit_time=6,
            issuer_url="test-issuer-url",
            oidc_provider_name="oidc_provider",
            thumbprints=[
                "test-thumbprint-1",
                "test-thumbprint-2",
            ])
        ```

        ## Import

        IamOidcProvider can be imported using the id, e.g.

        ```sh
        $ pulumi import volcengine:iam/oidcProvider:OidcProvider default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param OidcProviderArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OidcProviderArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 client_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 issuance_limit_time: Optional[pulumi.Input[int]] = None,
                 issuer_url: Optional[pulumi.Input[str]] = None,
                 oidc_provider_name: Optional[pulumi.Input[str]] = None,
                 thumbprints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OidcProviderArgs.__new__(OidcProviderArgs)

            if client_ids is None and not opts.urn:
                raise TypeError("Missing required property 'client_ids'")
            __props__.__dict__["client_ids"] = client_ids
            __props__.__dict__["description"] = description
            __props__.__dict__["issuance_limit_time"] = issuance_limit_time
            if issuer_url is None and not opts.urn:
                raise TypeError("Missing required property 'issuer_url'")
            __props__.__dict__["issuer_url"] = issuer_url
            if oidc_provider_name is None and not opts.urn:
                raise TypeError("Missing required property 'oidc_provider_name'")
            __props__.__dict__["oidc_provider_name"] = oidc_provider_name
            if thumbprints is None and not opts.urn:
                raise TypeError("Missing required property 'thumbprints'")
            __props__.__dict__["thumbprints"] = thumbprints
            __props__.__dict__["create_date"] = None
            __props__.__dict__["trn"] = None
            __props__.__dict__["update_date"] = None
        super(OidcProvider, __self__).__init__(
            'volcengine:iam/oidcProvider:OidcProvider',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            client_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            create_date: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            issuance_limit_time: Optional[pulumi.Input[int]] = None,
            issuer_url: Optional[pulumi.Input[str]] = None,
            oidc_provider_name: Optional[pulumi.Input[str]] = None,
            thumbprints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            trn: Optional[pulumi.Input[str]] = None,
            update_date: Optional[pulumi.Input[str]] = None) -> 'OidcProvider':
        """
        Get an existing OidcProvider resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] client_ids: The client IDs of the OIDC provider.
        :param pulumi.Input[str] create_date: The create date of the OIDC provider.
        :param pulumi.Input[str] description: The description of the OIDC provider.
        :param pulumi.Input[int] issuance_limit_time: The issuance limit time of the OIDC provider.
        :param pulumi.Input[str] issuer_url: The URL of the OIDC provider.
        :param pulumi.Input[str] oidc_provider_name: The name of the OIDC provider.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] thumbprints: The thumbprints of the OIDC provider.
        :param pulumi.Input[str] trn: The trn of OIDC provider.
        :param pulumi.Input[str] update_date: The update date of the OIDC provider.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OidcProviderState.__new__(_OidcProviderState)

        __props__.__dict__["client_ids"] = client_ids
        __props__.__dict__["create_date"] = create_date
        __props__.__dict__["description"] = description
        __props__.__dict__["issuance_limit_time"] = issuance_limit_time
        __props__.__dict__["issuer_url"] = issuer_url
        __props__.__dict__["oidc_provider_name"] = oidc_provider_name
        __props__.__dict__["thumbprints"] = thumbprints
        __props__.__dict__["trn"] = trn
        __props__.__dict__["update_date"] = update_date
        return OidcProvider(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="clientIds")
    def client_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        The client IDs of the OIDC provider.
        """
        return pulumi.get(self, "client_ids")

    @property
    @pulumi.getter(name="createDate")
    def create_date(self) -> pulumi.Output[str]:
        """
        The create date of the OIDC provider.
        """
        return pulumi.get(self, "create_date")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of the OIDC provider.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="issuanceLimitTime")
    def issuance_limit_time(self) -> pulumi.Output[Optional[int]]:
        """
        The issuance limit time of the OIDC provider.
        """
        return pulumi.get(self, "issuance_limit_time")

    @property
    @pulumi.getter(name="issuerUrl")
    def issuer_url(self) -> pulumi.Output[str]:
        """
        The URL of the OIDC provider.
        """
        return pulumi.get(self, "issuer_url")

    @property
    @pulumi.getter(name="oidcProviderName")
    def oidc_provider_name(self) -> pulumi.Output[str]:
        """
        The name of the OIDC provider.
        """
        return pulumi.get(self, "oidc_provider_name")

    @property
    @pulumi.getter
    def thumbprints(self) -> pulumi.Output[Sequence[str]]:
        """
        The thumbprints of the OIDC provider.
        """
        return pulumi.get(self, "thumbprints")

    @property
    @pulumi.getter
    def trn(self) -> pulumi.Output[str]:
        """
        The trn of OIDC provider.
        """
        return pulumi.get(self, "trn")

    @property
    @pulumi.getter(name="updateDate")
    def update_date(self) -> pulumi.Output[str]:
        """
        The update date of the OIDC provider.
        """
        return pulumi.get(self, "update_date")

