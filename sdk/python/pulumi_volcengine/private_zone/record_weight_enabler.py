# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RecordWeightEnablerArgs', 'RecordWeightEnabler']

@pulumi.input_type
class RecordWeightEnablerArgs:
    def __init__(__self__, *,
                 record_set_id: pulumi.Input[str],
                 weight_enabled: pulumi.Input[bool],
                 zid: pulumi.Input[int]):
        """
        The set of arguments for constructing a RecordWeightEnabler resource.
        :param pulumi.Input[str] record_set_id: The id of the private zone record set.
        :param pulumi.Input[bool] weight_enabled: Whether to enable the load balance of the private zone record set.
        :param pulumi.Input[int] zid: The zid of the private zone record set.
        """
        pulumi.set(__self__, "record_set_id", record_set_id)
        pulumi.set(__self__, "weight_enabled", weight_enabled)
        pulumi.set(__self__, "zid", zid)

    @property
    @pulumi.getter(name="recordSetId")
    def record_set_id(self) -> pulumi.Input[str]:
        """
        The id of the private zone record set.
        """
        return pulumi.get(self, "record_set_id")

    @record_set_id.setter
    def record_set_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "record_set_id", value)

    @property
    @pulumi.getter(name="weightEnabled")
    def weight_enabled(self) -> pulumi.Input[bool]:
        """
        Whether to enable the load balance of the private zone record set.
        """
        return pulumi.get(self, "weight_enabled")

    @weight_enabled.setter
    def weight_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "weight_enabled", value)

    @property
    @pulumi.getter
    def zid(self) -> pulumi.Input[int]:
        """
        The zid of the private zone record set.
        """
        return pulumi.get(self, "zid")

    @zid.setter
    def zid(self, value: pulumi.Input[int]):
        pulumi.set(self, "zid", value)


@pulumi.input_type
class _RecordWeightEnablerState:
    def __init__(__self__, *,
                 record_set_id: Optional[pulumi.Input[str]] = None,
                 weight_enabled: Optional[pulumi.Input[bool]] = None,
                 zid: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering RecordWeightEnabler resources.
        :param pulumi.Input[str] record_set_id: The id of the private zone record set.
        :param pulumi.Input[bool] weight_enabled: Whether to enable the load balance of the private zone record set.
        :param pulumi.Input[int] zid: The zid of the private zone record set.
        """
        if record_set_id is not None:
            pulumi.set(__self__, "record_set_id", record_set_id)
        if weight_enabled is not None:
            pulumi.set(__self__, "weight_enabled", weight_enabled)
        if zid is not None:
            pulumi.set(__self__, "zid", zid)

    @property
    @pulumi.getter(name="recordSetId")
    def record_set_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the private zone record set.
        """
        return pulumi.get(self, "record_set_id")

    @record_set_id.setter
    def record_set_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "record_set_id", value)

    @property
    @pulumi.getter(name="weightEnabled")
    def weight_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to enable the load balance of the private zone record set.
        """
        return pulumi.get(self, "weight_enabled")

    @weight_enabled.setter
    def weight_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "weight_enabled", value)

    @property
    @pulumi.getter
    def zid(self) -> Optional[pulumi.Input[int]]:
        """
        The zid of the private zone record set.
        """
        return pulumi.get(self, "zid")

    @zid.setter
    def zid(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "zid", value)


class RecordWeightEnabler(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 record_set_id: Optional[pulumi.Input[str]] = None,
                 weight_enabled: Optional[pulumi.Input[bool]] = None,
                 zid: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Provides a resource to manage private zone record weight enabler

        ## Import

        PrivateZoneRecordWeightEnabler can be imported using the zid:record_set_id, e.g.

        ```sh
         $ pulumi import volcengine:private_zone/recordWeightEnabler:RecordWeightEnabler default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] record_set_id: The id of the private zone record set.
        :param pulumi.Input[bool] weight_enabled: Whether to enable the load balance of the private zone record set.
        :param pulumi.Input[int] zid: The zid of the private zone record set.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RecordWeightEnablerArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to manage private zone record weight enabler

        ## Import

        PrivateZoneRecordWeightEnabler can be imported using the zid:record_set_id, e.g.

        ```sh
         $ pulumi import volcengine:private_zone/recordWeightEnabler:RecordWeightEnabler default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param RecordWeightEnablerArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RecordWeightEnablerArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 record_set_id: Optional[pulumi.Input[str]] = None,
                 weight_enabled: Optional[pulumi.Input[bool]] = None,
                 zid: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RecordWeightEnablerArgs.__new__(RecordWeightEnablerArgs)

            if record_set_id is None and not opts.urn:
                raise TypeError("Missing required property 'record_set_id'")
            __props__.__dict__["record_set_id"] = record_set_id
            if weight_enabled is None and not opts.urn:
                raise TypeError("Missing required property 'weight_enabled'")
            __props__.__dict__["weight_enabled"] = weight_enabled
            if zid is None and not opts.urn:
                raise TypeError("Missing required property 'zid'")
            __props__.__dict__["zid"] = zid
        super(RecordWeightEnabler, __self__).__init__(
            'volcengine:private_zone/recordWeightEnabler:RecordWeightEnabler',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            record_set_id: Optional[pulumi.Input[str]] = None,
            weight_enabled: Optional[pulumi.Input[bool]] = None,
            zid: Optional[pulumi.Input[int]] = None) -> 'RecordWeightEnabler':
        """
        Get an existing RecordWeightEnabler resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] record_set_id: The id of the private zone record set.
        :param pulumi.Input[bool] weight_enabled: Whether to enable the load balance of the private zone record set.
        :param pulumi.Input[int] zid: The zid of the private zone record set.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RecordWeightEnablerState.__new__(_RecordWeightEnablerState)

        __props__.__dict__["record_set_id"] = record_set_id
        __props__.__dict__["weight_enabled"] = weight_enabled
        __props__.__dict__["zid"] = zid
        return RecordWeightEnabler(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="recordSetId")
    def record_set_id(self) -> pulumi.Output[str]:
        """
        The id of the private zone record set.
        """
        return pulumi.get(self, "record_set_id")

    @property
    @pulumi.getter(name="weightEnabled")
    def weight_enabled(self) -> pulumi.Output[bool]:
        """
        Whether to enable the load balance of the private zone record set.
        """
        return pulumi.get(self, "weight_enabled")

    @property
    @pulumi.getter
    def zid(self) -> pulumi.Output[int]:
        """
        The zid of the private zone record set.
        """
        return pulumi.get(self, "zid")

