# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'SystemBotsResult',
    'AwaitableSystemBotsResult',
    'system_bots',
    'system_bots_output',
]

warnings.warn("""volcengine.waf.SystemBots has been deprecated in favor of volcengine.waf.getSystemBots""", DeprecationWarning)

@pulumi.output_type
class SystemBotsResult:
    """
    A collection of values returned by SystemBots.
    """
    def __init__(__self__, datas=None, host=None, id=None, name_regex=None, output_file=None, total_count=None):
        if datas and not isinstance(datas, list):
            raise TypeError("Expected argument 'datas' to be a list")
        pulumi.set(__self__, "datas", datas)
        if host and not isinstance(host, str):
            raise TypeError("Expected argument 'host' to be a str")
        pulumi.set(__self__, "host", host)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name_regex and not isinstance(name_regex, str):
            raise TypeError("Expected argument 'name_regex' to be a str")
        pulumi.set(__self__, "name_regex", name_regex)
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        pulumi.set(__self__, "output_file", output_file)
        if total_count and not isinstance(total_count, int):
            raise TypeError("Expected argument 'total_count' to be a int")
        pulumi.set(__self__, "total_count", total_count)

    @property
    @pulumi.getter
    def datas(self) -> Sequence['outputs.SystemBotsDataResult']:
        """
        Host the Bot configuration information.
        """
        return pulumi.get(self, "datas")

    @property
    @pulumi.getter
    def host(self) -> str:
        return pulumi.get(self, "host")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="nameRegex")
    def name_regex(self) -> Optional[str]:
        return pulumi.get(self, "name_regex")

    @property
    @pulumi.getter(name="outputFile")
    def output_file(self) -> Optional[str]:
        return pulumi.get(self, "output_file")

    @property
    @pulumi.getter(name="totalCount")
    def total_count(self) -> int:
        """
        The total count of query.
        """
        return pulumi.get(self, "total_count")


class AwaitableSystemBotsResult(SystemBotsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return SystemBotsResult(
            datas=self.datas,
            host=self.host,
            id=self.id,
            name_regex=self.name_regex,
            output_file=self.output_file,
            total_count=self.total_count)


def system_bots(host: Optional[str] = None,
                name_regex: Optional[str] = None,
                output_file: Optional[str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableSystemBotsResult:
    """
    Use this data source to query detailed information of waf system bots
    ## Example Usage

    ```python
    import pulumi
    import pulumi_volcengine as volcengine

    foo = volcengine.waf.get_system_bots(host="www.tf-test.com")
    ```


    :param str host: Domain name information.
    :param str name_regex: A Name Regex of Resource.
    :param str output_file: File name where to save data source results.
    """
    pulumi.log.warn("""system_bots is deprecated: volcengine.waf.SystemBots has been deprecated in favor of volcengine.waf.getSystemBots""")
    __args__ = dict()
    __args__['host'] = host
    __args__['nameRegex'] = name_regex
    __args__['outputFile'] = output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('volcengine:waf/systemBots:SystemBots', __args__, opts=opts, typ=SystemBotsResult).value

    return AwaitableSystemBotsResult(
        datas=pulumi.get(__ret__, 'datas'),
        host=pulumi.get(__ret__, 'host'),
        id=pulumi.get(__ret__, 'id'),
        name_regex=pulumi.get(__ret__, 'name_regex'),
        output_file=pulumi.get(__ret__, 'output_file'),
        total_count=pulumi.get(__ret__, 'total_count'))


@_utilities.lift_output_func(system_bots)
def system_bots_output(host: Optional[pulumi.Input[str]] = None,
                       name_regex: Optional[pulumi.Input[Optional[str]]] = None,
                       output_file: Optional[pulumi.Input[Optional[str]]] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[SystemBotsResult]:
    """
    Use this data source to query detailed information of waf system bots
    ## Example Usage

    ```python
    import pulumi
    import pulumi_volcengine as volcengine

    foo = volcengine.waf.get_system_bots(host="www.tf-test.com")
    ```


    :param str host: Domain name information.
    :param str name_regex: A Name Regex of Resource.
    :param str output_file: File name where to save data source results.
    """
    pulumi.log.warn("""system_bots is deprecated: volcengine.waf.SystemBots has been deprecated in favor of volcengine.waf.getSystemBots""")
    ...
