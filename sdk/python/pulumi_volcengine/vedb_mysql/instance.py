# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['InstanceArgs', 'Instance']

@pulumi.input_type
class InstanceArgs:
    def __init__(__self__, *,
                 charge_type: pulumi.Input[str],
                 db_engine_version: pulumi.Input[str],
                 node_number: pulumi.Input[int],
                 node_spec: pulumi.Input[str],
                 subnet_id: pulumi.Input[str],
                 auto_renew: Optional[pulumi.Input[bool]] = None,
                 db_minor_version: Optional[pulumi.Input[str]] = None,
                 db_time_zone: Optional[pulumi.Input[str]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 lower_case_table_names: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 period_unit: Optional[pulumi.Input[str]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 pre_paid_storage_in_gb: Optional[pulumi.Input[int]] = None,
                 project_name: Optional[pulumi.Input[str]] = None,
                 storage_charge_type: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['InstanceTagArgs']]]] = None):
        """
        The set of arguments for constructing a Instance resource.
        :param pulumi.Input[str] charge_type: Calculate the billing type. When calculating the billing type during instance creation, the possible values are as follows:
               PostPaid: Pay-as-you-go (postpaid).
               PrePaid: Monthly or yearly subscription (prepaid).
        :param pulumi.Input[str] db_engine_version: Database engine version, with a fixed value of MySQL_8_0.
        :param pulumi.Input[int] node_number: Number of instance nodes. The value range is from 2 to 16.
        :param pulumi.Input[str] node_spec: Node specification code of an instance.
        :param pulumi.Input[str] subnet_id: Subnet ID of the veDB Mysql instance.
        :param pulumi.Input[bool] auto_renew: Whether to automatically renew under the prepaid scenario. Values:
               true: Automatically renew.
               false: Do not automatically renew.
               Description:
               When the value of ChargeType (billing type) is PrePaid (monthly/yearly package), this parameter is required.
        :param pulumi.Input[str] db_minor_version: veDB MySQL minor version. For detailed instructions on version numbers, please refer to Version Number Management.
               3.0 (default): veDB MySQL stable version, 100% compatible with MySQL 8.0.
               3.1: Natively supports HTAP application scenarios and accelerates complex queries.
               3.2: Natively supports HTAP application scenarios and accelerates complex queries. In addition, it has built-in cold data archiving capabilities. It can archive data with low-frequency access to object storage TOS to reduce storage costs.
        :param pulumi.Input[str] db_time_zone: Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        :param pulumi.Input[str] instance_name: Instance name. Naming rules:
               It cannot start with a number or a hyphen (-).
               It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
               The length must be within 1 to 128 characters.
               Description
               If the instance name is not filled in, the instance ID will be used as the instance name.
               When creating instances in batches, if an instance name is passed in, a serial number will be automatically added after the instance name.
        :param pulumi.Input[str] lower_case_table_names: Whether table names are case-sensitive. The default value is 1. Value range:
               0: Table names are case-sensitive. The backend stores them according to the actual table name.
               1: (default) Table names are not case-sensitive. The backend stores them by converting table names to lowercase letters.
               Description:
               This rule cannot be modified after creating an instance. Please set it reasonably according to business requirements.
        :param pulumi.Input[int] period: Purchase duration in prepaid scenarios.
               Description:
               When the value of ChargeType (computing billing type) is PrePaid (monthly/yearly package), this parameter is required.
        :param pulumi.Input[str] period_unit: Purchase cycle in prepaid scenarios.
               Month: Monthly package.
               Year: Annual package.
               Description:
               When the value of ChargeType (computing billing type) is PrePaid (monthly or annual package), this parameter is required.
        :param pulumi.Input[int] port: Specify the private network port number for the connection terminal created by default for the instance. The default value is 3306, and the value range is 1000 to 65534.
               Note:
               This configuration item is only effective for the primary node terminal, default terminal, and HTAP cluster terminal. That is, after the instance is created successfully, for the newly created custom terminal, the port number is still 3306 by default.
               After the instance is created successfully, you can also modify the port number at any time. Currently, only modification through the console is supported.
        :param pulumi.Input[int] pre_paid_storage_in_gb: Storage size in prepaid scenarios.
               Description: When the value of StorageChargeType (storage billing type) is PrePaid (monthly/yearly prepaid), this parameter is required.
        :param pulumi.Input[str] project_name: Project name of the instance. When this parameter is left blank, the newly created instance is added to the default project by default.
        :param pulumi.Input[str] storage_charge_type: Storage billing type. When this parameter is not passed, the storage billing type defaults to be the same as the computing billing type. The values are as follows:
               PostPaid: Pay-as-you-go (postpaid).
               PrePaid: Monthly or yearly subscription (prepaid).
               Note
               When the computing billing type is PostPaid, the storage billing type can only be PostPaid.
               When the computing billing type is PrePaid, the storage billing type can be PrePaid or PostPaid.
        :param pulumi.Input[Sequence[pulumi.Input['InstanceTagArgs']]] tags: Tags.
        """
        pulumi.set(__self__, "charge_type", charge_type)
        pulumi.set(__self__, "db_engine_version", db_engine_version)
        pulumi.set(__self__, "node_number", node_number)
        pulumi.set(__self__, "node_spec", node_spec)
        pulumi.set(__self__, "subnet_id", subnet_id)
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if db_minor_version is not None:
            pulumi.set(__self__, "db_minor_version", db_minor_version)
        if db_time_zone is not None:
            pulumi.set(__self__, "db_time_zone", db_time_zone)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if lower_case_table_names is not None:
            pulumi.set(__self__, "lower_case_table_names", lower_case_table_names)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if pre_paid_storage_in_gb is not None:
            pulumi.set(__self__, "pre_paid_storage_in_gb", pre_paid_storage_in_gb)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if storage_charge_type is not None:
            pulumi.set(__self__, "storage_charge_type", storage_charge_type)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="chargeType")
    def charge_type(self) -> pulumi.Input[str]:
        """
        Calculate the billing type. When calculating the billing type during instance creation, the possible values are as follows:
        PostPaid: Pay-as-you-go (postpaid).
        PrePaid: Monthly or yearly subscription (prepaid).
        """
        return pulumi.get(self, "charge_type")

    @charge_type.setter
    def charge_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "charge_type", value)

    @property
    @pulumi.getter(name="dbEngineVersion")
    def db_engine_version(self) -> pulumi.Input[str]:
        """
        Database engine version, with a fixed value of MySQL_8_0.
        """
        return pulumi.get(self, "db_engine_version")

    @db_engine_version.setter
    def db_engine_version(self, value: pulumi.Input[str]):
        pulumi.set(self, "db_engine_version", value)

    @property
    @pulumi.getter(name="nodeNumber")
    def node_number(self) -> pulumi.Input[int]:
        """
        Number of instance nodes. The value range is from 2 to 16.
        """
        return pulumi.get(self, "node_number")

    @node_number.setter
    def node_number(self, value: pulumi.Input[int]):
        pulumi.set(self, "node_number", value)

    @property
    @pulumi.getter(name="nodeSpec")
    def node_spec(self) -> pulumi.Input[str]:
        """
        Node specification code of an instance.
        """
        return pulumi.get(self, "node_spec")

    @node_spec.setter
    def node_spec(self, value: pulumi.Input[str]):
        pulumi.set(self, "node_spec", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Input[str]:
        """
        Subnet ID of the veDB Mysql instance.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to automatically renew under the prepaid scenario. Values:
        true: Automatically renew.
        false: Do not automatically renew.
        Description:
        When the value of ChargeType (billing type) is PrePaid (monthly/yearly package), this parameter is required.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "auto_renew", value)

    @property
    @pulumi.getter(name="dbMinorVersion")
    def db_minor_version(self) -> Optional[pulumi.Input[str]]:
        """
        veDB MySQL minor version. For detailed instructions on version numbers, please refer to Version Number Management.
        3.0 (default): veDB MySQL stable version, 100% compatible with MySQL 8.0.
        3.1: Natively supports HTAP application scenarios and accelerates complex queries.
        3.2: Natively supports HTAP application scenarios and accelerates complex queries. In addition, it has built-in cold data archiving capabilities. It can archive data with low-frequency access to object storage TOS to reduce storage costs.
        """
        return pulumi.get(self, "db_minor_version")

    @db_minor_version.setter
    def db_minor_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_minor_version", value)

    @property
    @pulumi.getter(name="dbTimeZone")
    def db_time_zone(self) -> Optional[pulumi.Input[str]]:
        """
        Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        """
        return pulumi.get(self, "db_time_zone")

    @db_time_zone.setter
    def db_time_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_time_zone", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        Instance name. Naming rules:
        It cannot start with a number or a hyphen (-).
        It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
        The length must be within 1 to 128 characters.
        Description
        If the instance name is not filled in, the instance ID will be used as the instance name.
        When creating instances in batches, if an instance name is passed in, a serial number will be automatically added after the instance name.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="lowerCaseTableNames")
    def lower_case_table_names(self) -> Optional[pulumi.Input[str]]:
        """
        Whether table names are case-sensitive. The default value is 1. Value range:
        0: Table names are case-sensitive. The backend stores them according to the actual table name.
        1: (default) Table names are not case-sensitive. The backend stores them by converting table names to lowercase letters.
        Description:
        This rule cannot be modified after creating an instance. Please set it reasonably according to business requirements.
        """
        return pulumi.get(self, "lower_case_table_names")

    @lower_case_table_names.setter
    def lower_case_table_names(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "lower_case_table_names", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        Purchase duration in prepaid scenarios.
        Description:
        When the value of ChargeType (computing billing type) is PrePaid (monthly/yearly package), this parameter is required.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[str]]:
        """
        Purchase cycle in prepaid scenarios.
        Month: Monthly package.
        Year: Annual package.
        Description:
        When the value of ChargeType (computing billing type) is PrePaid (monthly or annual package), this parameter is required.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "period_unit", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[int]]:
        """
        Specify the private network port number for the connection terminal created by default for the instance. The default value is 3306, and the value range is 1000 to 65534.
        Note:
        This configuration item is only effective for the primary node terminal, default terminal, and HTAP cluster terminal. That is, after the instance is created successfully, for the newly created custom terminal, the port number is still 3306 by default.
        After the instance is created successfully, you can also modify the port number at any time. Currently, only modification through the console is supported.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter(name="prePaidStorageInGb")
    def pre_paid_storage_in_gb(self) -> Optional[pulumi.Input[int]]:
        """
        Storage size in prepaid scenarios.
        Description: When the value of StorageChargeType (storage billing type) is PrePaid (monthly/yearly prepaid), this parameter is required.
        """
        return pulumi.get(self, "pre_paid_storage_in_gb")

    @pre_paid_storage_in_gb.setter
    def pre_paid_storage_in_gb(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "pre_paid_storage_in_gb", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[str]]:
        """
        Project name of the instance. When this parameter is left blank, the newly created instance is added to the default project by default.
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="storageChargeType")
    def storage_charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        Storage billing type. When this parameter is not passed, the storage billing type defaults to be the same as the computing billing type. The values are as follows:
        PostPaid: Pay-as-you-go (postpaid).
        PrePaid: Monthly or yearly subscription (prepaid).
        Note
        When the computing billing type is PostPaid, the storage billing type can only be PostPaid.
        When the computing billing type is PrePaid, the storage billing type can be PrePaid or PostPaid.
        """
        return pulumi.get(self, "storage_charge_type")

    @storage_charge_type.setter
    def storage_charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "storage_charge_type", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['InstanceTagArgs']]]]:
        """
        Tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['InstanceTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _InstanceState:
    def __init__(__self__, *,
                 auto_renew: Optional[pulumi.Input[bool]] = None,
                 charge_type: Optional[pulumi.Input[str]] = None,
                 db_engine_version: Optional[pulumi.Input[str]] = None,
                 db_minor_version: Optional[pulumi.Input[str]] = None,
                 db_time_zone: Optional[pulumi.Input[str]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 lower_case_table_names: Optional[pulumi.Input[str]] = None,
                 node_number: Optional[pulumi.Input[int]] = None,
                 node_spec: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 period_unit: Optional[pulumi.Input[str]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 pre_paid_storage_in_gb: Optional[pulumi.Input[int]] = None,
                 project_name: Optional[pulumi.Input[str]] = None,
                 storage_charge_type: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['InstanceTagArgs']]]] = None):
        """
        Input properties used for looking up and filtering Instance resources.
        :param pulumi.Input[bool] auto_renew: Whether to automatically renew under the prepaid scenario. Values:
               true: Automatically renew.
               false: Do not automatically renew.
               Description:
               When the value of ChargeType (billing type) is PrePaid (monthly/yearly package), this parameter is required.
        :param pulumi.Input[str] charge_type: Calculate the billing type. When calculating the billing type during instance creation, the possible values are as follows:
               PostPaid: Pay-as-you-go (postpaid).
               PrePaid: Monthly or yearly subscription (prepaid).
        :param pulumi.Input[str] db_engine_version: Database engine version, with a fixed value of MySQL_8_0.
        :param pulumi.Input[str] db_minor_version: veDB MySQL minor version. For detailed instructions on version numbers, please refer to Version Number Management.
               3.0 (default): veDB MySQL stable version, 100% compatible with MySQL 8.0.
               3.1: Natively supports HTAP application scenarios and accelerates complex queries.
               3.2: Natively supports HTAP application scenarios and accelerates complex queries. In addition, it has built-in cold data archiving capabilities. It can archive data with low-frequency access to object storage TOS to reduce storage costs.
        :param pulumi.Input[str] db_time_zone: Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        :param pulumi.Input[str] instance_name: Instance name. Naming rules:
               It cannot start with a number or a hyphen (-).
               It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
               The length must be within 1 to 128 characters.
               Description
               If the instance name is not filled in, the instance ID will be used as the instance name.
               When creating instances in batches, if an instance name is passed in, a serial number will be automatically added after the instance name.
        :param pulumi.Input[str] lower_case_table_names: Whether table names are case-sensitive. The default value is 1. Value range:
               0: Table names are case-sensitive. The backend stores them according to the actual table name.
               1: (default) Table names are not case-sensitive. The backend stores them by converting table names to lowercase letters.
               Description:
               This rule cannot be modified after creating an instance. Please set it reasonably according to business requirements.
        :param pulumi.Input[int] node_number: Number of instance nodes. The value range is from 2 to 16.
        :param pulumi.Input[str] node_spec: Node specification code of an instance.
        :param pulumi.Input[int] period: Purchase duration in prepaid scenarios.
               Description:
               When the value of ChargeType (computing billing type) is PrePaid (monthly/yearly package), this parameter is required.
        :param pulumi.Input[str] period_unit: Purchase cycle in prepaid scenarios.
               Month: Monthly package.
               Year: Annual package.
               Description:
               When the value of ChargeType (computing billing type) is PrePaid (monthly or annual package), this parameter is required.
        :param pulumi.Input[int] port: Specify the private network port number for the connection terminal created by default for the instance. The default value is 3306, and the value range is 1000 to 65534.
               Note:
               This configuration item is only effective for the primary node terminal, default terminal, and HTAP cluster terminal. That is, after the instance is created successfully, for the newly created custom terminal, the port number is still 3306 by default.
               After the instance is created successfully, you can also modify the port number at any time. Currently, only modification through the console is supported.
        :param pulumi.Input[int] pre_paid_storage_in_gb: Storage size in prepaid scenarios.
               Description: When the value of StorageChargeType (storage billing type) is PrePaid (monthly/yearly prepaid), this parameter is required.
        :param pulumi.Input[str] project_name: Project name of the instance. When this parameter is left blank, the newly created instance is added to the default project by default.
        :param pulumi.Input[str] storage_charge_type: Storage billing type. When this parameter is not passed, the storage billing type defaults to be the same as the computing billing type. The values are as follows:
               PostPaid: Pay-as-you-go (postpaid).
               PrePaid: Monthly or yearly subscription (prepaid).
               Note
               When the computing billing type is PostPaid, the storage billing type can only be PostPaid.
               When the computing billing type is PrePaid, the storage billing type can be PrePaid or PostPaid.
        :param pulumi.Input[str] subnet_id: Subnet ID of the veDB Mysql instance.
        :param pulumi.Input[Sequence[pulumi.Input['InstanceTagArgs']]] tags: Tags.
        """
        if auto_renew is not None:
            pulumi.set(__self__, "auto_renew", auto_renew)
        if charge_type is not None:
            pulumi.set(__self__, "charge_type", charge_type)
        if db_engine_version is not None:
            pulumi.set(__self__, "db_engine_version", db_engine_version)
        if db_minor_version is not None:
            pulumi.set(__self__, "db_minor_version", db_minor_version)
        if db_time_zone is not None:
            pulumi.set(__self__, "db_time_zone", db_time_zone)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if lower_case_table_names is not None:
            pulumi.set(__self__, "lower_case_table_names", lower_case_table_names)
        if node_number is not None:
            pulumi.set(__self__, "node_number", node_number)
        if node_spec is not None:
            pulumi.set(__self__, "node_spec", node_spec)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if pre_paid_storage_in_gb is not None:
            pulumi.set(__self__, "pre_paid_storage_in_gb", pre_paid_storage_in_gb)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if storage_charge_type is not None:
            pulumi.set(__self__, "storage_charge_type", storage_charge_type)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to automatically renew under the prepaid scenario. Values:
        true: Automatically renew.
        false: Do not automatically renew.
        Description:
        When the value of ChargeType (billing type) is PrePaid (monthly/yearly package), this parameter is required.
        """
        return pulumi.get(self, "auto_renew")

    @auto_renew.setter
    def auto_renew(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "auto_renew", value)

    @property
    @pulumi.getter(name="chargeType")
    def charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        Calculate the billing type. When calculating the billing type during instance creation, the possible values are as follows:
        PostPaid: Pay-as-you-go (postpaid).
        PrePaid: Monthly or yearly subscription (prepaid).
        """
        return pulumi.get(self, "charge_type")

    @charge_type.setter
    def charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "charge_type", value)

    @property
    @pulumi.getter(name="dbEngineVersion")
    def db_engine_version(self) -> Optional[pulumi.Input[str]]:
        """
        Database engine version, with a fixed value of MySQL_8_0.
        """
        return pulumi.get(self, "db_engine_version")

    @db_engine_version.setter
    def db_engine_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_engine_version", value)

    @property
    @pulumi.getter(name="dbMinorVersion")
    def db_minor_version(self) -> Optional[pulumi.Input[str]]:
        """
        veDB MySQL minor version. For detailed instructions on version numbers, please refer to Version Number Management.
        3.0 (default): veDB MySQL stable version, 100% compatible with MySQL 8.0.
        3.1: Natively supports HTAP application scenarios and accelerates complex queries.
        3.2: Natively supports HTAP application scenarios and accelerates complex queries. In addition, it has built-in cold data archiving capabilities. It can archive data with low-frequency access to object storage TOS to reduce storage costs.
        """
        return pulumi.get(self, "db_minor_version")

    @db_minor_version.setter
    def db_minor_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_minor_version", value)

    @property
    @pulumi.getter(name="dbTimeZone")
    def db_time_zone(self) -> Optional[pulumi.Input[str]]:
        """
        Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        """
        return pulumi.get(self, "db_time_zone")

    @db_time_zone.setter
    def db_time_zone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_time_zone", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        Instance name. Naming rules:
        It cannot start with a number or a hyphen (-).
        It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
        The length must be within 1 to 128 characters.
        Description
        If the instance name is not filled in, the instance ID will be used as the instance name.
        When creating instances in batches, if an instance name is passed in, a serial number will be automatically added after the instance name.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="lowerCaseTableNames")
    def lower_case_table_names(self) -> Optional[pulumi.Input[str]]:
        """
        Whether table names are case-sensitive. The default value is 1. Value range:
        0: Table names are case-sensitive. The backend stores them according to the actual table name.
        1: (default) Table names are not case-sensitive. The backend stores them by converting table names to lowercase letters.
        Description:
        This rule cannot be modified after creating an instance. Please set it reasonably according to business requirements.
        """
        return pulumi.get(self, "lower_case_table_names")

    @lower_case_table_names.setter
    def lower_case_table_names(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "lower_case_table_names", value)

    @property
    @pulumi.getter(name="nodeNumber")
    def node_number(self) -> Optional[pulumi.Input[int]]:
        """
        Number of instance nodes. The value range is from 2 to 16.
        """
        return pulumi.get(self, "node_number")

    @node_number.setter
    def node_number(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "node_number", value)

    @property
    @pulumi.getter(name="nodeSpec")
    def node_spec(self) -> Optional[pulumi.Input[str]]:
        """
        Node specification code of an instance.
        """
        return pulumi.get(self, "node_spec")

    @node_spec.setter
    def node_spec(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "node_spec", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        Purchase duration in prepaid scenarios.
        Description:
        When the value of ChargeType (computing billing type) is PrePaid (monthly/yearly package), this parameter is required.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[str]]:
        """
        Purchase cycle in prepaid scenarios.
        Month: Monthly package.
        Year: Annual package.
        Description:
        When the value of ChargeType (computing billing type) is PrePaid (monthly or annual package), this parameter is required.
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "period_unit", value)

    @property
    @pulumi.getter
    def port(self) -> Optional[pulumi.Input[int]]:
        """
        Specify the private network port number for the connection terminal created by default for the instance. The default value is 3306, and the value range is 1000 to 65534.
        Note:
        This configuration item is only effective for the primary node terminal, default terminal, and HTAP cluster terminal. That is, after the instance is created successfully, for the newly created custom terminal, the port number is still 3306 by default.
        After the instance is created successfully, you can also modify the port number at any time. Currently, only modification through the console is supported.
        """
        return pulumi.get(self, "port")

    @port.setter
    def port(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "port", value)

    @property
    @pulumi.getter(name="prePaidStorageInGb")
    def pre_paid_storage_in_gb(self) -> Optional[pulumi.Input[int]]:
        """
        Storage size in prepaid scenarios.
        Description: When the value of StorageChargeType (storage billing type) is PrePaid (monthly/yearly prepaid), this parameter is required.
        """
        return pulumi.get(self, "pre_paid_storage_in_gb")

    @pre_paid_storage_in_gb.setter
    def pre_paid_storage_in_gb(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "pre_paid_storage_in_gb", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[str]]:
        """
        Project name of the instance. When this parameter is left blank, the newly created instance is added to the default project by default.
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="storageChargeType")
    def storage_charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        Storage billing type. When this parameter is not passed, the storage billing type defaults to be the same as the computing billing type. The values are as follows:
        PostPaid: Pay-as-you-go (postpaid).
        PrePaid: Monthly or yearly subscription (prepaid).
        Note
        When the computing billing type is PostPaid, the storage billing type can only be PostPaid.
        When the computing billing type is PrePaid, the storage billing type can be PrePaid or PostPaid.
        """
        return pulumi.get(self, "storage_charge_type")

    @storage_charge_type.setter
    def storage_charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "storage_charge_type", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        Subnet ID of the veDB Mysql instance.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['InstanceTagArgs']]]]:
        """
        Tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['InstanceTagArgs']]]]):
        pulumi.set(self, "tags", value)


class Instance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[bool]] = None,
                 charge_type: Optional[pulumi.Input[str]] = None,
                 db_engine_version: Optional[pulumi.Input[str]] = None,
                 db_minor_version: Optional[pulumi.Input[str]] = None,
                 db_time_zone: Optional[pulumi.Input[str]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 lower_case_table_names: Optional[pulumi.Input[str]] = None,
                 node_number: Optional[pulumi.Input[int]] = None,
                 node_spec: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 period_unit: Optional[pulumi.Input[str]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 pre_paid_storage_in_gb: Optional[pulumi.Input[int]] = None,
                 project_name: Optional[pulumi.Input[str]] = None,
                 storage_charge_type: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceTagArgs']]]]] = None,
                 __props__=None):
        """
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo_zones = volcengine.ecs.zones()
        foo_vpc = volcengine.vpc.Vpc("fooVpc",
            vpc_name="acc-test-vpc",
            cidr_block="172.16.0.0/16")
        foo_subnet = volcengine.vpc.Subnet("fooSubnet",
            subnet_name="acc-test-subnet",
            cidr_block="172.16.0.0/24",
            zone_id=foo_zones.zones[2].id,
            vpc_id=foo_vpc.id)
        foo_instance = volcengine.vedb_mysql.Instance("fooInstance",
            charge_type="PostPaid",
            storage_charge_type="PostPaid",
            db_engine_version="MySQL_8_0",
            db_minor_version="3.0",
            node_number=2,
            node_spec="vedb.mysql.x4.large",
            subnet_id=foo_subnet.id,
            instance_name="tf-test",
            project_name="default",
            tags=[volcengine.vedb_mysql.InstanceTagArgs(
                key="tftest",
                value="tftest",
            )])
        ```

        ## Import

        VedbMysqlInstance can be imported using the id, e.g.

        ```sh
        $ pulumi import volcengine:vedb_mysql/instance:Instance default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_renew: Whether to automatically renew under the prepaid scenario. Values:
               true: Automatically renew.
               false: Do not automatically renew.
               Description:
               When the value of ChargeType (billing type) is PrePaid (monthly/yearly package), this parameter is required.
        :param pulumi.Input[str] charge_type: Calculate the billing type. When calculating the billing type during instance creation, the possible values are as follows:
               PostPaid: Pay-as-you-go (postpaid).
               PrePaid: Monthly or yearly subscription (prepaid).
        :param pulumi.Input[str] db_engine_version: Database engine version, with a fixed value of MySQL_8_0.
        :param pulumi.Input[str] db_minor_version: veDB MySQL minor version. For detailed instructions on version numbers, please refer to Version Number Management.
               3.0 (default): veDB MySQL stable version, 100% compatible with MySQL 8.0.
               3.1: Natively supports HTAP application scenarios and accelerates complex queries.
               3.2: Natively supports HTAP application scenarios and accelerates complex queries. In addition, it has built-in cold data archiving capabilities. It can archive data with low-frequency access to object storage TOS to reduce storage costs.
        :param pulumi.Input[str] db_time_zone: Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        :param pulumi.Input[str] instance_name: Instance name. Naming rules:
               It cannot start with a number or a hyphen (-).
               It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
               The length must be within 1 to 128 characters.
               Description
               If the instance name is not filled in, the instance ID will be used as the instance name.
               When creating instances in batches, if an instance name is passed in, a serial number will be automatically added after the instance name.
        :param pulumi.Input[str] lower_case_table_names: Whether table names are case-sensitive. The default value is 1. Value range:
               0: Table names are case-sensitive. The backend stores them according to the actual table name.
               1: (default) Table names are not case-sensitive. The backend stores them by converting table names to lowercase letters.
               Description:
               This rule cannot be modified after creating an instance. Please set it reasonably according to business requirements.
        :param pulumi.Input[int] node_number: Number of instance nodes. The value range is from 2 to 16.
        :param pulumi.Input[str] node_spec: Node specification code of an instance.
        :param pulumi.Input[int] period: Purchase duration in prepaid scenarios.
               Description:
               When the value of ChargeType (computing billing type) is PrePaid (monthly/yearly package), this parameter is required.
        :param pulumi.Input[str] period_unit: Purchase cycle in prepaid scenarios.
               Month: Monthly package.
               Year: Annual package.
               Description:
               When the value of ChargeType (computing billing type) is PrePaid (monthly or annual package), this parameter is required.
        :param pulumi.Input[int] port: Specify the private network port number for the connection terminal created by default for the instance. The default value is 3306, and the value range is 1000 to 65534.
               Note:
               This configuration item is only effective for the primary node terminal, default terminal, and HTAP cluster terminal. That is, after the instance is created successfully, for the newly created custom terminal, the port number is still 3306 by default.
               After the instance is created successfully, you can also modify the port number at any time. Currently, only modification through the console is supported.
        :param pulumi.Input[int] pre_paid_storage_in_gb: Storage size in prepaid scenarios.
               Description: When the value of StorageChargeType (storage billing type) is PrePaid (monthly/yearly prepaid), this parameter is required.
        :param pulumi.Input[str] project_name: Project name of the instance. When this parameter is left blank, the newly created instance is added to the default project by default.
        :param pulumi.Input[str] storage_charge_type: Storage billing type. When this parameter is not passed, the storage billing type defaults to be the same as the computing billing type. The values are as follows:
               PostPaid: Pay-as-you-go (postpaid).
               PrePaid: Monthly or yearly subscription (prepaid).
               Note
               When the computing billing type is PostPaid, the storage billing type can only be PostPaid.
               When the computing billing type is PrePaid, the storage billing type can be PrePaid or PostPaid.
        :param pulumi.Input[str] subnet_id: Subnet ID of the veDB Mysql instance.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceTagArgs']]]] tags: Tags.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo_zones = volcengine.ecs.zones()
        foo_vpc = volcengine.vpc.Vpc("fooVpc",
            vpc_name="acc-test-vpc",
            cidr_block="172.16.0.0/16")
        foo_subnet = volcengine.vpc.Subnet("fooSubnet",
            subnet_name="acc-test-subnet",
            cidr_block="172.16.0.0/24",
            zone_id=foo_zones.zones[2].id,
            vpc_id=foo_vpc.id)
        foo_instance = volcengine.vedb_mysql.Instance("fooInstance",
            charge_type="PostPaid",
            storage_charge_type="PostPaid",
            db_engine_version="MySQL_8_0",
            db_minor_version="3.0",
            node_number=2,
            node_spec="vedb.mysql.x4.large",
            subnet_id=foo_subnet.id,
            instance_name="tf-test",
            project_name="default",
            tags=[volcengine.vedb_mysql.InstanceTagArgs(
                key="tftest",
                value="tftest",
            )])
        ```

        ## Import

        VedbMysqlInstance can be imported using the id, e.g.

        ```sh
        $ pulumi import volcengine:vedb_mysql/instance:Instance default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param InstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_renew: Optional[pulumi.Input[bool]] = None,
                 charge_type: Optional[pulumi.Input[str]] = None,
                 db_engine_version: Optional[pulumi.Input[str]] = None,
                 db_minor_version: Optional[pulumi.Input[str]] = None,
                 db_time_zone: Optional[pulumi.Input[str]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 lower_case_table_names: Optional[pulumi.Input[str]] = None,
                 node_number: Optional[pulumi.Input[int]] = None,
                 node_spec: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 period_unit: Optional[pulumi.Input[str]] = None,
                 port: Optional[pulumi.Input[int]] = None,
                 pre_paid_storage_in_gb: Optional[pulumi.Input[int]] = None,
                 project_name: Optional[pulumi.Input[str]] = None,
                 storage_charge_type: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceTagArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceArgs.__new__(InstanceArgs)

            __props__.__dict__["auto_renew"] = auto_renew
            if charge_type is None and not opts.urn:
                raise TypeError("Missing required property 'charge_type'")
            __props__.__dict__["charge_type"] = charge_type
            if db_engine_version is None and not opts.urn:
                raise TypeError("Missing required property 'db_engine_version'")
            __props__.__dict__["db_engine_version"] = db_engine_version
            __props__.__dict__["db_minor_version"] = db_minor_version
            __props__.__dict__["db_time_zone"] = db_time_zone
            __props__.__dict__["instance_name"] = instance_name
            __props__.__dict__["lower_case_table_names"] = lower_case_table_names
            if node_number is None and not opts.urn:
                raise TypeError("Missing required property 'node_number'")
            __props__.__dict__["node_number"] = node_number
            if node_spec is None and not opts.urn:
                raise TypeError("Missing required property 'node_spec'")
            __props__.__dict__["node_spec"] = node_spec
            __props__.__dict__["period"] = period
            __props__.__dict__["period_unit"] = period_unit
            __props__.__dict__["port"] = port
            __props__.__dict__["pre_paid_storage_in_gb"] = pre_paid_storage_in_gb
            __props__.__dict__["project_name"] = project_name
            __props__.__dict__["storage_charge_type"] = storage_charge_type
            if subnet_id is None and not opts.urn:
                raise TypeError("Missing required property 'subnet_id'")
            __props__.__dict__["subnet_id"] = subnet_id
            __props__.__dict__["tags"] = tags
        super(Instance, __self__).__init__(
            'volcengine:vedb_mysql/instance:Instance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            auto_renew: Optional[pulumi.Input[bool]] = None,
            charge_type: Optional[pulumi.Input[str]] = None,
            db_engine_version: Optional[pulumi.Input[str]] = None,
            db_minor_version: Optional[pulumi.Input[str]] = None,
            db_time_zone: Optional[pulumi.Input[str]] = None,
            instance_name: Optional[pulumi.Input[str]] = None,
            lower_case_table_names: Optional[pulumi.Input[str]] = None,
            node_number: Optional[pulumi.Input[int]] = None,
            node_spec: Optional[pulumi.Input[str]] = None,
            period: Optional[pulumi.Input[int]] = None,
            period_unit: Optional[pulumi.Input[str]] = None,
            port: Optional[pulumi.Input[int]] = None,
            pre_paid_storage_in_gb: Optional[pulumi.Input[int]] = None,
            project_name: Optional[pulumi.Input[str]] = None,
            storage_charge_type: Optional[pulumi.Input[str]] = None,
            subnet_id: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceTagArgs']]]]] = None) -> 'Instance':
        """
        Get an existing Instance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_renew: Whether to automatically renew under the prepaid scenario. Values:
               true: Automatically renew.
               false: Do not automatically renew.
               Description:
               When the value of ChargeType (billing type) is PrePaid (monthly/yearly package), this parameter is required.
        :param pulumi.Input[str] charge_type: Calculate the billing type. When calculating the billing type during instance creation, the possible values are as follows:
               PostPaid: Pay-as-you-go (postpaid).
               PrePaid: Monthly or yearly subscription (prepaid).
        :param pulumi.Input[str] db_engine_version: Database engine version, with a fixed value of MySQL_8_0.
        :param pulumi.Input[str] db_minor_version: veDB MySQL minor version. For detailed instructions on version numbers, please refer to Version Number Management.
               3.0 (default): veDB MySQL stable version, 100% compatible with MySQL 8.0.
               3.1: Natively supports HTAP application scenarios and accelerates complex queries.
               3.2: Natively supports HTAP application scenarios and accelerates complex queries. In addition, it has built-in cold data archiving capabilities. It can archive data with low-frequency access to object storage TOS to reduce storage costs.
        :param pulumi.Input[str] db_time_zone: Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        :param pulumi.Input[str] instance_name: Instance name. Naming rules:
               It cannot start with a number or a hyphen (-).
               It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
               The length must be within 1 to 128 characters.
               Description
               If the instance name is not filled in, the instance ID will be used as the instance name.
               When creating instances in batches, if an instance name is passed in, a serial number will be automatically added after the instance name.
        :param pulumi.Input[str] lower_case_table_names: Whether table names are case-sensitive. The default value is 1. Value range:
               0: Table names are case-sensitive. The backend stores them according to the actual table name.
               1: (default) Table names are not case-sensitive. The backend stores them by converting table names to lowercase letters.
               Description:
               This rule cannot be modified after creating an instance. Please set it reasonably according to business requirements.
        :param pulumi.Input[int] node_number: Number of instance nodes. The value range is from 2 to 16.
        :param pulumi.Input[str] node_spec: Node specification code of an instance.
        :param pulumi.Input[int] period: Purchase duration in prepaid scenarios.
               Description:
               When the value of ChargeType (computing billing type) is PrePaid (monthly/yearly package), this parameter is required.
        :param pulumi.Input[str] period_unit: Purchase cycle in prepaid scenarios.
               Month: Monthly package.
               Year: Annual package.
               Description:
               When the value of ChargeType (computing billing type) is PrePaid (monthly or annual package), this parameter is required.
        :param pulumi.Input[int] port: Specify the private network port number for the connection terminal created by default for the instance. The default value is 3306, and the value range is 1000 to 65534.
               Note:
               This configuration item is only effective for the primary node terminal, default terminal, and HTAP cluster terminal. That is, after the instance is created successfully, for the newly created custom terminal, the port number is still 3306 by default.
               After the instance is created successfully, you can also modify the port number at any time. Currently, only modification through the console is supported.
        :param pulumi.Input[int] pre_paid_storage_in_gb: Storage size in prepaid scenarios.
               Description: When the value of StorageChargeType (storage billing type) is PrePaid (monthly/yearly prepaid), this parameter is required.
        :param pulumi.Input[str] project_name: Project name of the instance. When this parameter is left blank, the newly created instance is added to the default project by default.
        :param pulumi.Input[str] storage_charge_type: Storage billing type. When this parameter is not passed, the storage billing type defaults to be the same as the computing billing type. The values are as follows:
               PostPaid: Pay-as-you-go (postpaid).
               PrePaid: Monthly or yearly subscription (prepaid).
               Note
               When the computing billing type is PostPaid, the storage billing type can only be PostPaid.
               When the computing billing type is PrePaid, the storage billing type can be PrePaid or PostPaid.
        :param pulumi.Input[str] subnet_id: Subnet ID of the veDB Mysql instance.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstanceTagArgs']]]] tags: Tags.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceState.__new__(_InstanceState)

        __props__.__dict__["auto_renew"] = auto_renew
        __props__.__dict__["charge_type"] = charge_type
        __props__.__dict__["db_engine_version"] = db_engine_version
        __props__.__dict__["db_minor_version"] = db_minor_version
        __props__.__dict__["db_time_zone"] = db_time_zone
        __props__.__dict__["instance_name"] = instance_name
        __props__.__dict__["lower_case_table_names"] = lower_case_table_names
        __props__.__dict__["node_number"] = node_number
        __props__.__dict__["node_spec"] = node_spec
        __props__.__dict__["period"] = period
        __props__.__dict__["period_unit"] = period_unit
        __props__.__dict__["port"] = port
        __props__.__dict__["pre_paid_storage_in_gb"] = pre_paid_storage_in_gb
        __props__.__dict__["project_name"] = project_name
        __props__.__dict__["storage_charge_type"] = storage_charge_type
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["tags"] = tags
        return Instance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="autoRenew")
    def auto_renew(self) -> pulumi.Output[bool]:
        """
        Whether to automatically renew under the prepaid scenario. Values:
        true: Automatically renew.
        false: Do not automatically renew.
        Description:
        When the value of ChargeType (billing type) is PrePaid (monthly/yearly package), this parameter is required.
        """
        return pulumi.get(self, "auto_renew")

    @property
    @pulumi.getter(name="chargeType")
    def charge_type(self) -> pulumi.Output[str]:
        """
        Calculate the billing type. When calculating the billing type during instance creation, the possible values are as follows:
        PostPaid: Pay-as-you-go (postpaid).
        PrePaid: Monthly or yearly subscription (prepaid).
        """
        return pulumi.get(self, "charge_type")

    @property
    @pulumi.getter(name="dbEngineVersion")
    def db_engine_version(self) -> pulumi.Output[str]:
        """
        Database engine version, with a fixed value of MySQL_8_0.
        """
        return pulumi.get(self, "db_engine_version")

    @property
    @pulumi.getter(name="dbMinorVersion")
    def db_minor_version(self) -> pulumi.Output[Optional[str]]:
        """
        veDB MySQL minor version. For detailed instructions on version numbers, please refer to Version Number Management.
        3.0 (default): veDB MySQL stable version, 100% compatible with MySQL 8.0.
        3.1: Natively supports HTAP application scenarios and accelerates complex queries.
        3.2: Natively supports HTAP application scenarios and accelerates complex queries. In addition, it has built-in cold data archiving capabilities. It can archive data with low-frequency access to object storage TOS to reduce storage costs.
        """
        return pulumi.get(self, "db_minor_version")

    @property
    @pulumi.getter(name="dbTimeZone")
    def db_time_zone(self) -> pulumi.Output[str]:
        """
        Time zone. Support UTC -12:00 ~ +13:00. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignore_changes ignore changes in fields.
        """
        return pulumi.get(self, "db_time_zone")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> pulumi.Output[str]:
        """
        Instance name. Naming rules:
        It cannot start with a number or a hyphen (-).
        It can only contain Chinese characters, letters, numbers, underscores (_), and hyphens (-).
        The length must be within 1 to 128 characters.
        Description
        If the instance name is not filled in, the instance ID will be used as the instance name.
        When creating instances in batches, if an instance name is passed in, a serial number will be automatically added after the instance name.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="lowerCaseTableNames")
    def lower_case_table_names(self) -> pulumi.Output[str]:
        """
        Whether table names are case-sensitive. The default value is 1. Value range:
        0: Table names are case-sensitive. The backend stores them according to the actual table name.
        1: (default) Table names are not case-sensitive. The backend stores them by converting table names to lowercase letters.
        Description:
        This rule cannot be modified after creating an instance. Please set it reasonably according to business requirements.
        """
        return pulumi.get(self, "lower_case_table_names")

    @property
    @pulumi.getter(name="nodeNumber")
    def node_number(self) -> pulumi.Output[int]:
        """
        Number of instance nodes. The value range is from 2 to 16.
        """
        return pulumi.get(self, "node_number")

    @property
    @pulumi.getter(name="nodeSpec")
    def node_spec(self) -> pulumi.Output[str]:
        """
        Node specification code of an instance.
        """
        return pulumi.get(self, "node_spec")

    @property
    @pulumi.getter
    def period(self) -> pulumi.Output[int]:
        """
        Purchase duration in prepaid scenarios.
        Description:
        When the value of ChargeType (computing billing type) is PrePaid (monthly/yearly package), this parameter is required.
        """
        return pulumi.get(self, "period")

    @property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Output[str]:
        """
        Purchase cycle in prepaid scenarios.
        Month: Monthly package.
        Year: Annual package.
        Description:
        When the value of ChargeType (computing billing type) is PrePaid (monthly or annual package), this parameter is required.
        """
        return pulumi.get(self, "period_unit")

    @property
    @pulumi.getter
    def port(self) -> pulumi.Output[int]:
        """
        Specify the private network port number for the connection terminal created by default for the instance. The default value is 3306, and the value range is 1000 to 65534.
        Note:
        This configuration item is only effective for the primary node terminal, default terminal, and HTAP cluster terminal. That is, after the instance is created successfully, for the newly created custom terminal, the port number is still 3306 by default.
        After the instance is created successfully, you can also modify the port number at any time. Currently, only modification through the console is supported.
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter(name="prePaidStorageInGb")
    def pre_paid_storage_in_gb(self) -> pulumi.Output[int]:
        """
        Storage size in prepaid scenarios.
        Description: When the value of StorageChargeType (storage billing type) is PrePaid (monthly/yearly prepaid), this parameter is required.
        """
        return pulumi.get(self, "pre_paid_storage_in_gb")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> pulumi.Output[str]:
        """
        Project name of the instance. When this parameter is left blank, the newly created instance is added to the default project by default.
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter(name="storageChargeType")
    def storage_charge_type(self) -> pulumi.Output[str]:
        """
        Storage billing type. When this parameter is not passed, the storage billing type defaults to be the same as the computing billing type. The values are as follows:
        PostPaid: Pay-as-you-go (postpaid).
        PrePaid: Monthly or yearly subscription (prepaid).
        Note
        When the computing billing type is PostPaid, the storage billing type can only be PostPaid.
        When the computing billing type is PrePaid, the storage billing type can be PrePaid or PostPaid.
        """
        return pulumi.get(self, "storage_charge_type")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[str]:
        """
        Subnet ID of the veDB Mysql instance.
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['outputs.InstanceTag']]]:
        """
        Tags.
        """
        return pulumi.get(self, "tags")

