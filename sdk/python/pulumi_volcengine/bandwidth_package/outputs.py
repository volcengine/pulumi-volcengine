# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'BandwidthPackageTag',
    'BandwidthPackagesPackageResult',
    'BandwidthPackagesPackageEipAddressResult',
    'BandwidthPackagesPackageTagResult',
    'BandwidthPackagesTagFilterResult',
]

@pulumi.output_type
class BandwidthPackageTag(dict):
    def __init__(__self__, *,
                 key: str,
                 value: str):
        """
        :param str key: The Key of Tags.
        :param str value: The Value of Tags.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        The Key of Tags.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        The Value of Tags.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class BandwidthPackagesPackageResult(dict):
    def __init__(__self__, *,
                 bandwidth: int,
                 bandwidth_package_id: str,
                 bandwidth_package_name: str,
                 billing_type: str,
                 business_status: str,
                 creation_time: str,
                 deleted_time: str,
                 eip_addresses: Sequence['outputs.BandwidthPackagesPackageEipAddressResult'],
                 expired_time: str,
                 id: str,
                 isp: str,
                 overdue_time: str,
                 project_name: str,
                 protocol: str,
                 security_protection_types: Sequence[str],
                 status: str,
                 tags: Sequence['outputs.BandwidthPackagesPackageTagResult'],
                 update_time: str):
        """
        :param int bandwidth: The bandwidth of the bandwidth package.
        :param str bandwidth_package_id: The id of the bandwidth package.
        :param str bandwidth_package_name: Shared bandwidth package name to be queried.
        :param str billing_type: The billing type of the bandwidth package.
        :param str business_status: The business status of the bandwidth package.
        :param str creation_time: The creation time of the bandwidth package.
        :param str deleted_time: The deleted time of the bandwidth package.
        :param Sequence['BandwidthPackagesPackageEipAddressArgs'] eip_addresses: List of public IP information included in the shared bandwidth package.
        :param str expired_time: The expiration time of the bandwidth package.
        :param str id: The id of the bandwidth package.
        :param str isp: Line types for shared bandwidth packages.
        :param str overdue_time: The overdue time of the bandwidth package.
        :param str project_name: The project name of the bandwidth package to be queried.
        :param str protocol: The IP protocol values for shared bandwidth packages are as follows: `IPv4`: IPv4 protocol. `IPv6`: IPv6 protocol.
        :param Sequence[str] security_protection_types: Security protection types for shared bandwidth packages. Parameter - N: Indicates the number of security protection types, currently only supports taking 1. Value: `AntiDDoS_Enhanced`.
        :param str status: The status of the bandwidth package.
        :param Sequence['BandwidthPackagesPackageTagArgs'] tags: Tags.
        :param str update_time: The update time of the bandwidth package.
        """
        pulumi.set(__self__, "bandwidth", bandwidth)
        pulumi.set(__self__, "bandwidth_package_id", bandwidth_package_id)
        pulumi.set(__self__, "bandwidth_package_name", bandwidth_package_name)
        pulumi.set(__self__, "billing_type", billing_type)
        pulumi.set(__self__, "business_status", business_status)
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "deleted_time", deleted_time)
        pulumi.set(__self__, "eip_addresses", eip_addresses)
        pulumi.set(__self__, "expired_time", expired_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "isp", isp)
        pulumi.set(__self__, "overdue_time", overdue_time)
        pulumi.set(__self__, "project_name", project_name)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "security_protection_types", security_protection_types)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter
    def bandwidth(self) -> int:
        """
        The bandwidth of the bandwidth package.
        """
        return pulumi.get(self, "bandwidth")

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> str:
        """
        The id of the bandwidth package.
        """
        return pulumi.get(self, "bandwidth_package_id")

    @property
    @pulumi.getter(name="bandwidthPackageName")
    def bandwidth_package_name(self) -> str:
        """
        Shared bandwidth package name to be queried.
        """
        return pulumi.get(self, "bandwidth_package_name")

    @property
    @pulumi.getter(name="billingType")
    def billing_type(self) -> str:
        """
        The billing type of the bandwidth package.
        """
        return pulumi.get(self, "billing_type")

    @property
    @pulumi.getter(name="businessStatus")
    def business_status(self) -> str:
        """
        The business status of the bandwidth package.
        """
        return pulumi.get(self, "business_status")

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> str:
        """
        The creation time of the bandwidth package.
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter(name="deletedTime")
    def deleted_time(self) -> str:
        """
        The deleted time of the bandwidth package.
        """
        return pulumi.get(self, "deleted_time")

    @property
    @pulumi.getter(name="eipAddresses")
    def eip_addresses(self) -> Sequence['outputs.BandwidthPackagesPackageEipAddressResult']:
        """
        List of public IP information included in the shared bandwidth package.
        """
        return pulumi.get(self, "eip_addresses")

    @property
    @pulumi.getter(name="expiredTime")
    def expired_time(self) -> str:
        """
        The expiration time of the bandwidth package.
        """
        return pulumi.get(self, "expired_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the bandwidth package.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def isp(self) -> str:
        """
        Line types for shared bandwidth packages.
        """
        return pulumi.get(self, "isp")

    @property
    @pulumi.getter(name="overdueTime")
    def overdue_time(self) -> str:
        """
        The overdue time of the bandwidth package.
        """
        return pulumi.get(self, "overdue_time")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> str:
        """
        The project name of the bandwidth package to be queried.
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        """
        The IP protocol values for shared bandwidth packages are as follows: `IPv4`: IPv4 protocol. `IPv6`: IPv6 protocol.
        """
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="securityProtectionTypes")
    def security_protection_types(self) -> Sequence[str]:
        """
        Security protection types for shared bandwidth packages. Parameter - N: Indicates the number of security protection types, currently only supports taking 1. Value: `AntiDDoS_Enhanced`.
        """
        return pulumi.get(self, "security_protection_types")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        The status of the bandwidth package.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Sequence['outputs.BandwidthPackagesPackageTagResult']:
        """
        Tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        """
        The update time of the bandwidth package.
        """
        return pulumi.get(self, "update_time")


@pulumi.output_type
class BandwidthPackagesPackageEipAddressResult(dict):
    def __init__(__self__, *,
                 allocation_id: str,
                 eip_address: str):
        """
        :param str allocation_id: The id of the eip.
        :param str eip_address: The eip address.
        """
        pulumi.set(__self__, "allocation_id", allocation_id)
        pulumi.set(__self__, "eip_address", eip_address)

    @property
    @pulumi.getter(name="allocationId")
    def allocation_id(self) -> str:
        """
        The id of the eip.
        """
        return pulumi.get(self, "allocation_id")

    @property
    @pulumi.getter(name="eipAddress")
    def eip_address(self) -> str:
        """
        The eip address.
        """
        return pulumi.get(self, "eip_address")


@pulumi.output_type
class BandwidthPackagesPackageTagResult(dict):
    def __init__(__self__, *,
                 key: str,
                 value: str):
        """
        :param str key: The key of the tag.
        :param str value: The Value of Tags.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        The key of the tag.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        The Value of Tags.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class BandwidthPackagesTagFilterResult(dict):
    def __init__(__self__, *,
                 key: str,
                 values: Sequence[str]):
        """
        :param str key: The key of the tag.
        :param Sequence[str] values: The values of the tag.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        The key of the tag.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        """
        The values of the tag.
        """
        return pulumi.get(self, "values")


