# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ApigGatewayArgs', 'ApigGateway']

@pulumi.input_type
class ApigGatewayArgs:
    def __init__(__self__, *,
                 network_spec: pulumi.Input['ApigGatewayNetworkSpecArgs'],
                 backend_spec: Optional[pulumi.Input['ApigGatewayBackendSpecArgs']] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 log_spec: Optional[pulumi.Input['ApigGatewayLogSpecArgs']] = None,
                 monitor_spec: Optional[pulumi.Input['ApigGatewayMonitorSpecArgs']] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 project_name: Optional[pulumi.Input[str]] = None,
                 resource_spec: Optional[pulumi.Input['ApigGatewayResourceSpecArgs']] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['ApigGatewayTagArgs']]]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ApigGateway resource.
        :param pulumi.Input['ApigGatewayNetworkSpecArgs'] network_spec: The network spec of the api gateway.
        :param pulumi.Input['ApigGatewayBackendSpecArgs'] backend_spec: The backend spec of the api gateway.
        :param pulumi.Input[str] comments: The comments of the api gateway.
        :param pulumi.Input['ApigGatewayLogSpecArgs'] log_spec: The log spec of the api gateway.
        :param pulumi.Input['ApigGatewayMonitorSpecArgs'] monitor_spec: The monitor spec of the api gateway.
        :param pulumi.Input[str] name: The name of the api gateway.
        :param pulumi.Input[str] project_name: The project name of the api gateway.
        :param pulumi.Input['ApigGatewayResourceSpecArgs'] resource_spec: The resource spec of the api gateway.
        :param pulumi.Input[Sequence[pulumi.Input['ApigGatewayTagArgs']]] tags: Tags.
        :param pulumi.Input[str] type: The type of the api gateway. Valid values: `standard`, `serverless`.
        """
        pulumi.set(__self__, "network_spec", network_spec)
        if backend_spec is not None:
            pulumi.set(__self__, "backend_spec", backend_spec)
        if comments is not None:
            pulumi.set(__self__, "comments", comments)
        if log_spec is not None:
            pulumi.set(__self__, "log_spec", log_spec)
        if monitor_spec is not None:
            pulumi.set(__self__, "monitor_spec", monitor_spec)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if resource_spec is not None:
            pulumi.set(__self__, "resource_spec", resource_spec)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="networkSpec")
    def network_spec(self) -> pulumi.Input['ApigGatewayNetworkSpecArgs']:
        """
        The network spec of the api gateway.
        """
        return pulumi.get(self, "network_spec")

    @network_spec.setter
    def network_spec(self, value: pulumi.Input['ApigGatewayNetworkSpecArgs']):
        pulumi.set(self, "network_spec", value)

    @property
    @pulumi.getter(name="backendSpec")
    def backend_spec(self) -> Optional[pulumi.Input['ApigGatewayBackendSpecArgs']]:
        """
        The backend spec of the api gateway.
        """
        return pulumi.get(self, "backend_spec")

    @backend_spec.setter
    def backend_spec(self, value: Optional[pulumi.Input['ApigGatewayBackendSpecArgs']]):
        pulumi.set(self, "backend_spec", value)

    @property
    @pulumi.getter
    def comments(self) -> Optional[pulumi.Input[str]]:
        """
        The comments of the api gateway.
        """
        return pulumi.get(self, "comments")

    @comments.setter
    def comments(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comments", value)

    @property
    @pulumi.getter(name="logSpec")
    def log_spec(self) -> Optional[pulumi.Input['ApigGatewayLogSpecArgs']]:
        """
        The log spec of the api gateway.
        """
        return pulumi.get(self, "log_spec")

    @log_spec.setter
    def log_spec(self, value: Optional[pulumi.Input['ApigGatewayLogSpecArgs']]):
        pulumi.set(self, "log_spec", value)

    @property
    @pulumi.getter(name="monitorSpec")
    def monitor_spec(self) -> Optional[pulumi.Input['ApigGatewayMonitorSpecArgs']]:
        """
        The monitor spec of the api gateway.
        """
        return pulumi.get(self, "monitor_spec")

    @monitor_spec.setter
    def monitor_spec(self, value: Optional[pulumi.Input['ApigGatewayMonitorSpecArgs']]):
        pulumi.set(self, "monitor_spec", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the api gateway.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[str]]:
        """
        The project name of the api gateway.
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="resourceSpec")
    def resource_spec(self) -> Optional[pulumi.Input['ApigGatewayResourceSpecArgs']]:
        """
        The resource spec of the api gateway.
        """
        return pulumi.get(self, "resource_spec")

    @resource_spec.setter
    def resource_spec(self, value: Optional[pulumi.Input['ApigGatewayResourceSpecArgs']]):
        pulumi.set(self, "resource_spec", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ApigGatewayTagArgs']]]]:
        """
        Tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ApigGatewayTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of the api gateway. Valid values: `standard`, `serverless`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class _ApigGatewayState:
    def __init__(__self__, *,
                 backend_spec: Optional[pulumi.Input['ApigGatewayBackendSpecArgs']] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 create_time: Optional[pulumi.Input[str]] = None,
                 log_spec: Optional[pulumi.Input['ApigGatewayLogSpecArgs']] = None,
                 message: Optional[pulumi.Input[str]] = None,
                 monitor_spec: Optional[pulumi.Input['ApigGatewayMonitorSpecArgs']] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_spec: Optional[pulumi.Input['ApigGatewayNetworkSpecArgs']] = None,
                 project_name: Optional[pulumi.Input[str]] = None,
                 resource_spec: Optional[pulumi.Input['ApigGatewayResourceSpecArgs']] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['ApigGatewayTagArgs']]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ApigGateway resources.
        :param pulumi.Input['ApigGatewayBackendSpecArgs'] backend_spec: The backend spec of the api gateway.
        :param pulumi.Input[str] comments: The comments of the api gateway.
        :param pulumi.Input[str] create_time: The create time of the api gateway.
        :param pulumi.Input['ApigGatewayLogSpecArgs'] log_spec: The log spec of the api gateway.
        :param pulumi.Input[str] message: The error message of the api gateway.
        :param pulumi.Input['ApigGatewayMonitorSpecArgs'] monitor_spec: The monitor spec of the api gateway.
        :param pulumi.Input[str] name: The name of the api gateway.
        :param pulumi.Input['ApigGatewayNetworkSpecArgs'] network_spec: The network spec of the api gateway.
        :param pulumi.Input[str] project_name: The project name of the api gateway.
        :param pulumi.Input['ApigGatewayResourceSpecArgs'] resource_spec: The resource spec of the api gateway.
        :param pulumi.Input[str] status: The status of the api gateway.
        :param pulumi.Input[Sequence[pulumi.Input['ApigGatewayTagArgs']]] tags: Tags.
        :param pulumi.Input[str] type: The type of the api gateway. Valid values: `standard`, `serverless`.
        :param pulumi.Input[str] version: The version of the api gateway.
        """
        if backend_spec is not None:
            pulumi.set(__self__, "backend_spec", backend_spec)
        if comments is not None:
            pulumi.set(__self__, "comments", comments)
        if create_time is not None:
            pulumi.set(__self__, "create_time", create_time)
        if log_spec is not None:
            pulumi.set(__self__, "log_spec", log_spec)
        if message is not None:
            pulumi.set(__self__, "message", message)
        if monitor_spec is not None:
            pulumi.set(__self__, "monitor_spec", monitor_spec)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_spec is not None:
            pulumi.set(__self__, "network_spec", network_spec)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if resource_spec is not None:
            pulumi.set(__self__, "resource_spec", resource_spec)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="backendSpec")
    def backend_spec(self) -> Optional[pulumi.Input['ApigGatewayBackendSpecArgs']]:
        """
        The backend spec of the api gateway.
        """
        return pulumi.get(self, "backend_spec")

    @backend_spec.setter
    def backend_spec(self, value: Optional[pulumi.Input['ApigGatewayBackendSpecArgs']]):
        pulumi.set(self, "backend_spec", value)

    @property
    @pulumi.getter
    def comments(self) -> Optional[pulumi.Input[str]]:
        """
        The comments of the api gateway.
        """
        return pulumi.get(self, "comments")

    @comments.setter
    def comments(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comments", value)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> Optional[pulumi.Input[str]]:
        """
        The create time of the api gateway.
        """
        return pulumi.get(self, "create_time")

    @create_time.setter
    def create_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_time", value)

    @property
    @pulumi.getter(name="logSpec")
    def log_spec(self) -> Optional[pulumi.Input['ApigGatewayLogSpecArgs']]:
        """
        The log spec of the api gateway.
        """
        return pulumi.get(self, "log_spec")

    @log_spec.setter
    def log_spec(self, value: Optional[pulumi.Input['ApigGatewayLogSpecArgs']]):
        pulumi.set(self, "log_spec", value)

    @property
    @pulumi.getter
    def message(self) -> Optional[pulumi.Input[str]]:
        """
        The error message of the api gateway.
        """
        return pulumi.get(self, "message")

    @message.setter
    def message(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "message", value)

    @property
    @pulumi.getter(name="monitorSpec")
    def monitor_spec(self) -> Optional[pulumi.Input['ApigGatewayMonitorSpecArgs']]:
        """
        The monitor spec of the api gateway.
        """
        return pulumi.get(self, "monitor_spec")

    @monitor_spec.setter
    def monitor_spec(self, value: Optional[pulumi.Input['ApigGatewayMonitorSpecArgs']]):
        pulumi.set(self, "monitor_spec", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the api gateway.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="networkSpec")
    def network_spec(self) -> Optional[pulumi.Input['ApigGatewayNetworkSpecArgs']]:
        """
        The network spec of the api gateway.
        """
        return pulumi.get(self, "network_spec")

    @network_spec.setter
    def network_spec(self, value: Optional[pulumi.Input['ApigGatewayNetworkSpecArgs']]):
        pulumi.set(self, "network_spec", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[str]]:
        """
        The project name of the api gateway.
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="resourceSpec")
    def resource_spec(self) -> Optional[pulumi.Input['ApigGatewayResourceSpecArgs']]:
        """
        The resource spec of the api gateway.
        """
        return pulumi.get(self, "resource_spec")

    @resource_spec.setter
    def resource_spec(self, value: Optional[pulumi.Input['ApigGatewayResourceSpecArgs']]):
        pulumi.set(self, "resource_spec", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the api gateway.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ApigGatewayTagArgs']]]]:
        """
        Tags.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ApigGatewayTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of the api gateway. Valid values: `standard`, `serverless`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the api gateway.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


class ApigGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backend_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayBackendSpecArgs']]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 log_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayLogSpecArgs']]] = None,
                 monitor_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayMonitorSpecArgs']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayNetworkSpecArgs']]] = None,
                 project_name: Optional[pulumi.Input[str]] = None,
                 resource_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayResourceSpecArgs']]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ApigGatewayTagArgs']]]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to manage apig gateway
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo_zones = volcengine.ecs.get_zones()
        foo_vpc = volcengine.vpc.Vpc("fooVpc",
            vpc_name="acc-test-vpc",
            cidr_block="172.16.0.0/16")
        foo1 = volcengine.vpc.Subnet("foo1",
            subnet_name="acc-test-subnet",
            cidr_block="172.16.0.0/24",
            zone_id=foo_zones.zones[0].id,
            vpc_id=foo_vpc.id)
        foo2 = volcengine.vpc.Subnet("foo2",
            subnet_name="acc-test-subnet",
            cidr_block="172.16.1.0/24",
            zone_id=foo_zones.zones[1].id,
            vpc_id=foo_vpc.id)
        foo_apig_gateway = volcengine.apig.ApigGateway("fooApigGateway",
            type="standard",
            comments="acc-test",
            project_name="default",
            tags=[volcengine.apig.ApigGatewayTagArgs(
                key="k1",
                value="v1",
            )],
            network_spec=volcengine.apig.ApigGatewayNetworkSpecArgs(
                vpc_id=foo_vpc.id,
                subnet_ids=[
                    foo1.id,
                    foo2.id,
                ],
            ),
            resource_spec=volcengine.apig.ApigGatewayResourceSpecArgs(
                replicas=2,
                instance_spec_code="1c2g",
                clb_spec_code="small_1",
                public_network_billing_type="bandwidth",
                public_network_bandwidth=1,
                network_type=volcengine.apig.ApigGatewayResourceSpecNetworkTypeArgs(
                    enable_public_network=True,
                    enable_private_network=True,
                ),
            ),
            log_spec=volcengine.apig.ApigGatewayLogSpecArgs(
                enable=True,
                project_id="d3cb87c0-faeb-4074-b1ee-9bd747865a76",
                topic_id="d339482e-d86d-4bd8-a9bb-f270417f00a1",
            ),
            monitor_spec=volcengine.apig.ApigGatewayMonitorSpecArgs(
                enable=True,
                workspace_id="4ed1caf3-279d-4c5f-8301-87ea38e92ffc",
            ))
        ```

        ## Import

        ApigGateway can be imported using the id, e.g.

        ```sh
        $ pulumi import volcengine:apig/apigGateway:ApigGateway default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['ApigGatewayBackendSpecArgs']] backend_spec: The backend spec of the api gateway.
        :param pulumi.Input[str] comments: The comments of the api gateway.
        :param pulumi.Input[pulumi.InputType['ApigGatewayLogSpecArgs']] log_spec: The log spec of the api gateway.
        :param pulumi.Input[pulumi.InputType['ApigGatewayMonitorSpecArgs']] monitor_spec: The monitor spec of the api gateway.
        :param pulumi.Input[str] name: The name of the api gateway.
        :param pulumi.Input[pulumi.InputType['ApigGatewayNetworkSpecArgs']] network_spec: The network spec of the api gateway.
        :param pulumi.Input[str] project_name: The project name of the api gateway.
        :param pulumi.Input[pulumi.InputType['ApigGatewayResourceSpecArgs']] resource_spec: The resource spec of the api gateway.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ApigGatewayTagArgs']]]] tags: Tags.
        :param pulumi.Input[str] type: The type of the api gateway. Valid values: `standard`, `serverless`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ApigGatewayArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to manage apig gateway
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo_zones = volcengine.ecs.get_zones()
        foo_vpc = volcengine.vpc.Vpc("fooVpc",
            vpc_name="acc-test-vpc",
            cidr_block="172.16.0.0/16")
        foo1 = volcengine.vpc.Subnet("foo1",
            subnet_name="acc-test-subnet",
            cidr_block="172.16.0.0/24",
            zone_id=foo_zones.zones[0].id,
            vpc_id=foo_vpc.id)
        foo2 = volcengine.vpc.Subnet("foo2",
            subnet_name="acc-test-subnet",
            cidr_block="172.16.1.0/24",
            zone_id=foo_zones.zones[1].id,
            vpc_id=foo_vpc.id)
        foo_apig_gateway = volcengine.apig.ApigGateway("fooApigGateway",
            type="standard",
            comments="acc-test",
            project_name="default",
            tags=[volcengine.apig.ApigGatewayTagArgs(
                key="k1",
                value="v1",
            )],
            network_spec=volcengine.apig.ApigGatewayNetworkSpecArgs(
                vpc_id=foo_vpc.id,
                subnet_ids=[
                    foo1.id,
                    foo2.id,
                ],
            ),
            resource_spec=volcengine.apig.ApigGatewayResourceSpecArgs(
                replicas=2,
                instance_spec_code="1c2g",
                clb_spec_code="small_1",
                public_network_billing_type="bandwidth",
                public_network_bandwidth=1,
                network_type=volcengine.apig.ApigGatewayResourceSpecNetworkTypeArgs(
                    enable_public_network=True,
                    enable_private_network=True,
                ),
            ),
            log_spec=volcengine.apig.ApigGatewayLogSpecArgs(
                enable=True,
                project_id="d3cb87c0-faeb-4074-b1ee-9bd747865a76",
                topic_id="d339482e-d86d-4bd8-a9bb-f270417f00a1",
            ),
            monitor_spec=volcengine.apig.ApigGatewayMonitorSpecArgs(
                enable=True,
                workspace_id="4ed1caf3-279d-4c5f-8301-87ea38e92ffc",
            ))
        ```

        ## Import

        ApigGateway can be imported using the id, e.g.

        ```sh
        $ pulumi import volcengine:apig/apigGateway:ApigGateway default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param ApigGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ApigGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backend_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayBackendSpecArgs']]] = None,
                 comments: Optional[pulumi.Input[str]] = None,
                 log_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayLogSpecArgs']]] = None,
                 monitor_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayMonitorSpecArgs']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayNetworkSpecArgs']]] = None,
                 project_name: Optional[pulumi.Input[str]] = None,
                 resource_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayResourceSpecArgs']]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ApigGatewayTagArgs']]]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ApigGatewayArgs.__new__(ApigGatewayArgs)

            __props__.__dict__["backend_spec"] = backend_spec
            __props__.__dict__["comments"] = comments
            __props__.__dict__["log_spec"] = log_spec
            __props__.__dict__["monitor_spec"] = monitor_spec
            __props__.__dict__["name"] = name
            if network_spec is None and not opts.urn:
                raise TypeError("Missing required property 'network_spec'")
            __props__.__dict__["network_spec"] = network_spec
            __props__.__dict__["project_name"] = project_name
            __props__.__dict__["resource_spec"] = resource_spec
            __props__.__dict__["tags"] = tags
            __props__.__dict__["type"] = type
            __props__.__dict__["create_time"] = None
            __props__.__dict__["message"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["version"] = None
        super(ApigGateway, __self__).__init__(
            'volcengine:apig/apigGateway:ApigGateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            backend_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayBackendSpecArgs']]] = None,
            comments: Optional[pulumi.Input[str]] = None,
            create_time: Optional[pulumi.Input[str]] = None,
            log_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayLogSpecArgs']]] = None,
            message: Optional[pulumi.Input[str]] = None,
            monitor_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayMonitorSpecArgs']]] = None,
            name: Optional[pulumi.Input[str]] = None,
            network_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayNetworkSpecArgs']]] = None,
            project_name: Optional[pulumi.Input[str]] = None,
            resource_spec: Optional[pulumi.Input[pulumi.InputType['ApigGatewayResourceSpecArgs']]] = None,
            status: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ApigGatewayTagArgs']]]]] = None,
            type: Optional[pulumi.Input[str]] = None,
            version: Optional[pulumi.Input[str]] = None) -> 'ApigGateway':
        """
        Get an existing ApigGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['ApigGatewayBackendSpecArgs']] backend_spec: The backend spec of the api gateway.
        :param pulumi.Input[str] comments: The comments of the api gateway.
        :param pulumi.Input[str] create_time: The create time of the api gateway.
        :param pulumi.Input[pulumi.InputType['ApigGatewayLogSpecArgs']] log_spec: The log spec of the api gateway.
        :param pulumi.Input[str] message: The error message of the api gateway.
        :param pulumi.Input[pulumi.InputType['ApigGatewayMonitorSpecArgs']] monitor_spec: The monitor spec of the api gateway.
        :param pulumi.Input[str] name: The name of the api gateway.
        :param pulumi.Input[pulumi.InputType['ApigGatewayNetworkSpecArgs']] network_spec: The network spec of the api gateway.
        :param pulumi.Input[str] project_name: The project name of the api gateway.
        :param pulumi.Input[pulumi.InputType['ApigGatewayResourceSpecArgs']] resource_spec: The resource spec of the api gateway.
        :param pulumi.Input[str] status: The status of the api gateway.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ApigGatewayTagArgs']]]] tags: Tags.
        :param pulumi.Input[str] type: The type of the api gateway. Valid values: `standard`, `serverless`.
        :param pulumi.Input[str] version: The version of the api gateway.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ApigGatewayState.__new__(_ApigGatewayState)

        __props__.__dict__["backend_spec"] = backend_spec
        __props__.__dict__["comments"] = comments
        __props__.__dict__["create_time"] = create_time
        __props__.__dict__["log_spec"] = log_spec
        __props__.__dict__["message"] = message
        __props__.__dict__["monitor_spec"] = monitor_spec
        __props__.__dict__["name"] = name
        __props__.__dict__["network_spec"] = network_spec
        __props__.__dict__["project_name"] = project_name
        __props__.__dict__["resource_spec"] = resource_spec
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        __props__.__dict__["version"] = version
        return ApigGateway(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="backendSpec")
    def backend_spec(self) -> pulumi.Output['outputs.ApigGatewayBackendSpec']:
        """
        The backend spec of the api gateway.
        """
        return pulumi.get(self, "backend_spec")

    @property
    @pulumi.getter
    def comments(self) -> pulumi.Output[Optional[str]]:
        """
        The comments of the api gateway.
        """
        return pulumi.get(self, "comments")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        The create time of the api gateway.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="logSpec")
    def log_spec(self) -> pulumi.Output['outputs.ApigGatewayLogSpec']:
        """
        The log spec of the api gateway.
        """
        return pulumi.get(self, "log_spec")

    @property
    @pulumi.getter
    def message(self) -> pulumi.Output[str]:
        """
        The error message of the api gateway.
        """
        return pulumi.get(self, "message")

    @property
    @pulumi.getter(name="monitorSpec")
    def monitor_spec(self) -> pulumi.Output['outputs.ApigGatewayMonitorSpec']:
        """
        The monitor spec of the api gateway.
        """
        return pulumi.get(self, "monitor_spec")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the api gateway.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="networkSpec")
    def network_spec(self) -> pulumi.Output['outputs.ApigGatewayNetworkSpec']:
        """
        The network spec of the api gateway.
        """
        return pulumi.get(self, "network_spec")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> pulumi.Output[str]:
        """
        The project name of the api gateway.
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter(name="resourceSpec")
    def resource_spec(self) -> pulumi.Output['outputs.ApigGatewayResourceSpec']:
        """
        The resource spec of the api gateway.
        """
        return pulumi.get(self, "resource_spec")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        The status of the api gateway.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['outputs.ApigGatewayTag']]]:
        """
        Tags.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the api gateway. Valid values: `standard`, `serverless`.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def version(self) -> pulumi.Output[str]:
        """
        The version of the api gateway.
        """
        return pulumi.get(self, "version")

