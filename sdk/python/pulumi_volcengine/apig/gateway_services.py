# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GatewayServicesResult',
    'AwaitableGatewayServicesResult',
    'gateway_services',
    'gateway_services_output',
]

warnings.warn("""volcengine.apig.GatewayServices has been deprecated in favor of volcengine.apig.getGatewayServices""", DeprecationWarning)

@pulumi.output_type
class GatewayServicesResult:
    """
    A collection of values returned by GatewayServices.
    """
    def __init__(__self__, gateway_id=None, gateway_services=None, id=None, name=None, output_file=None, status=None, total_count=None):
        if gateway_id and not isinstance(gateway_id, str):
            raise TypeError("Expected argument 'gateway_id' to be a str")
        pulumi.set(__self__, "gateway_id", gateway_id)
        if gateway_services and not isinstance(gateway_services, list):
            raise TypeError("Expected argument 'gateway_services' to be a list")
        pulumi.set(__self__, "gateway_services", gateway_services)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        pulumi.set(__self__, "output_file", output_file)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)
        if total_count and not isinstance(total_count, int):
            raise TypeError("Expected argument 'total_count' to be a int")
        pulumi.set(__self__, "total_count", total_count)

    @property
    @pulumi.getter(name="gatewayId")
    def gateway_id(self) -> Optional[str]:
        """
        The gateway id of the api gateway service.
        """
        return pulumi.get(self, "gateway_id")

    @property
    @pulumi.getter(name="gatewayServices")
    def gateway_services(self) -> Sequence['outputs.GatewayServicesGatewayServiceResult']:
        """
        The collection of query.
        """
        return pulumi.get(self, "gateway_services")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        The name of the api gateway service.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="outputFile")
    def output_file(self) -> Optional[str]:
        return pulumi.get(self, "output_file")

    @property
    @pulumi.getter
    def status(self) -> Optional[str]:
        """
        The status of the api gateway service.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="totalCount")
    def total_count(self) -> int:
        """
        The total count of query.
        """
        return pulumi.get(self, "total_count")


class AwaitableGatewayServicesResult(GatewayServicesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GatewayServicesResult(
            gateway_id=self.gateway_id,
            gateway_services=self.gateway_services,
            id=self.id,
            name=self.name,
            output_file=self.output_file,
            status=self.status,
            total_count=self.total_count)


def gateway_services(gateway_id: Optional[str] = None,
                     name: Optional[str] = None,
                     output_file: Optional[str] = None,
                     status: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGatewayServicesResult:
    """
    Use this data source to query detailed information of apig gateway services
    ## Example Usage

    ```python
    import pulumi
    import pulumi_volcengine as volcengine

    foo = volcengine.apig.get_gateway_services(gateway_id="gd13d8c6eq1emkiunq6p0")
    ```


    :param str gateway_id: The gateway id of api gateway service.
    :param str name: The name of api gateway service. This field support fuzzy query.
    :param str output_file: File name where to save data source results.
    :param str status: The status of api gateway service.
    """
    pulumi.log.warn("""gateway_services is deprecated: volcengine.apig.GatewayServices has been deprecated in favor of volcengine.apig.getGatewayServices""")
    __args__ = dict()
    __args__['gatewayId'] = gateway_id
    __args__['name'] = name
    __args__['outputFile'] = output_file
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('volcengine:apig/gatewayServices:GatewayServices', __args__, opts=opts, typ=GatewayServicesResult).value

    return AwaitableGatewayServicesResult(
        gateway_id=pulumi.get(__ret__, 'gateway_id'),
        gateway_services=pulumi.get(__ret__, 'gateway_services'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        output_file=pulumi.get(__ret__, 'output_file'),
        status=pulumi.get(__ret__, 'status'),
        total_count=pulumi.get(__ret__, 'total_count'))


@_utilities.lift_output_func(gateway_services)
def gateway_services_output(gateway_id: Optional[pulumi.Input[Optional[str]]] = None,
                            name: Optional[pulumi.Input[Optional[str]]] = None,
                            output_file: Optional[pulumi.Input[Optional[str]]] = None,
                            status: Optional[pulumi.Input[Optional[str]]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GatewayServicesResult]:
    """
    Use this data source to query detailed information of apig gateway services
    ## Example Usage

    ```python
    import pulumi
    import pulumi_volcengine as volcengine

    foo = volcengine.apig.get_gateway_services(gateway_id="gd13d8c6eq1emkiunq6p0")
    ```


    :param str gateway_id: The gateway id of api gateway service.
    :param str name: The name of api gateway service. This field support fuzzy query.
    :param str output_file: File name where to save data source results.
    :param str status: The status of api gateway service.
    """
    pulumi.log.warn("""gateway_services is deprecated: volcengine.apig.GatewayServices has been deprecated in favor of volcengine.apig.getGatewayServices""")
    ...
