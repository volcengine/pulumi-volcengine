# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAccessKeysResult',
    'AwaitableGetAccessKeysResult',
    'get_access_keys',
    'get_access_keys_output',
]

@pulumi.output_type
class GetAccessKeysResult:
    """
    A collection of values returned by getAccessKeys.
    """
    def __init__(__self__, access_key=None, access_keys=None, id=None, instance_id=None, output_file=None, total_count=None):
        if access_key and not isinstance(access_key, str):
            raise TypeError("Expected argument 'access_key' to be a str")
        pulumi.set(__self__, "access_key", access_key)
        if access_keys and not isinstance(access_keys, list):
            raise TypeError("Expected argument 'access_keys' to be a list")
        pulumi.set(__self__, "access_keys", access_keys)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        pulumi.set(__self__, "output_file", output_file)
        if total_count and not isinstance(total_count, int):
            raise TypeError("Expected argument 'total_count' to be a int")
        pulumi.set(__self__, "total_count", total_count)

    @property
    @pulumi.getter(name="accessKey")
    def access_key(self) -> Optional[str]:
        """
        The access key id of the rocketmq key.
        """
        return pulumi.get(self, "access_key")

    @property
    @pulumi.getter(name="accessKeys")
    def access_keys(self) -> Sequence['outputs.GetAccessKeysAccessKeyResult']:
        """
        The collection of query.
        """
        return pulumi.get(self, "access_keys")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        """
        The id of rocketmq instance.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="outputFile")
    def output_file(self) -> Optional[str]:
        return pulumi.get(self, "output_file")

    @property
    @pulumi.getter(name="totalCount")
    def total_count(self) -> int:
        """
        The total count of query.
        """
        return pulumi.get(self, "total_count")


class AwaitableGetAccessKeysResult(GetAccessKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccessKeysResult(
            access_key=self.access_key,
            access_keys=self.access_keys,
            id=self.id,
            instance_id=self.instance_id,
            output_file=self.output_file,
            total_count=self.total_count)


def get_access_keys(access_key: Optional[str] = None,
                    instance_id: Optional[str] = None,
                    output_file: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAccessKeysResult:
    """
    Use this data source to query detailed information of rocketmq access keys
    ## Example Usage

    ```python
    import pulumi
    import pulumi_volcengine as volcengine

    foo = volcengine.rocketmq.get_access_keys(instance_id="rocketmq-cnoeea6b32118fc2")
    ```


    :param str access_key: The access key id of the rocketmq key.
    :param str instance_id: The id of rocketmq instance.
    :param str output_file: File name where to save data source results.
    """
    __args__ = dict()
    __args__['accessKey'] = access_key
    __args__['instanceId'] = instance_id
    __args__['outputFile'] = output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('volcengine:rocketmq/getAccessKeys:getAccessKeys', __args__, opts=opts, typ=GetAccessKeysResult).value

    return AwaitableGetAccessKeysResult(
        access_key=pulumi.get(__ret__, 'access_key'),
        access_keys=pulumi.get(__ret__, 'access_keys'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        output_file=pulumi.get(__ret__, 'output_file'),
        total_count=pulumi.get(__ret__, 'total_count'))


@_utilities.lift_output_func(get_access_keys)
def get_access_keys_output(access_key: Optional[pulumi.Input[Optional[str]]] = None,
                           instance_id: Optional[pulumi.Input[str]] = None,
                           output_file: Optional[pulumi.Input[Optional[str]]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAccessKeysResult]:
    """
    Use this data source to query detailed information of rocketmq access keys
    ## Example Usage

    ```python
    import pulumi
    import pulumi_volcengine as volcengine

    foo = volcengine.rocketmq.get_access_keys(instance_id="rocketmq-cnoeea6b32118fc2")
    ```


    :param str access_key: The access key id of the rocketmq key.
    :param str instance_id: The id of rocketmq instance.
    :param str output_file: File name where to save data source results.
    """
    ...
