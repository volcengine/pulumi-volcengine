# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RocketMQAllowListAssociateArgs', 'RocketMQAllowListAssociate']

@pulumi.input_type
class RocketMQAllowListAssociateArgs:
    def __init__(__self__, *,
                 allow_list_id: pulumi.Input[str],
                 instance_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a RocketMQAllowListAssociate resource.
        :param pulumi.Input[str] allow_list_id: The id of the rocketmq allow list.
        :param pulumi.Input[str] instance_id: The id of the rocketmq instance.
        """
        pulumi.set(__self__, "allow_list_id", allow_list_id)
        pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="allowListId")
    def allow_list_id(self) -> pulumi.Input[str]:
        """
        The id of the rocketmq allow list.
        """
        return pulumi.get(self, "allow_list_id")

    @allow_list_id.setter
    def allow_list_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "allow_list_id", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        The id of the rocketmq instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)


@pulumi.input_type
class _RocketMQAllowListAssociateState:
    def __init__(__self__, *,
                 allow_list_id: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RocketMQAllowListAssociate resources.
        :param pulumi.Input[str] allow_list_id: The id of the rocketmq allow list.
        :param pulumi.Input[str] instance_id: The id of the rocketmq instance.
        """
        if allow_list_id is not None:
            pulumi.set(__self__, "allow_list_id", allow_list_id)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="allowListId")
    def allow_list_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the rocketmq allow list.
        """
        return pulumi.get(self, "allow_list_id")

    @allow_list_id.setter
    def allow_list_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "allow_list_id", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the rocketmq instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)


class RocketMQAllowListAssociate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allow_list_id: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to manage rocketmq allow list associate
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo_zones = volcengine.ecs.get_zones()
        foo_vpc = volcengine.vpc.Vpc("fooVpc",
            vpc_name="acc-test-vpc",
            cidr_block="172.16.0.0/16")
        foo_subnet = volcengine.vpc.Subnet("fooSubnet",
            subnet_name="acc-test-subnet",
            cidr_block="172.16.0.0/24",
            zone_id=foo_zones.zones[0].id,
            vpc_id=foo_vpc.id)
        foo_rocket_mq_instance = volcengine.rocketmq.RocketMQInstance("fooRocketMQInstance",
            zone_ids=[foo_zones.zones[0].id],
            subnet_id=foo_subnet.id,
            version="4.8",
            compute_spec="rocketmq.n1.x2.micro",
            storage_space=300,
            auto_scale_queue=True,
            file_reserved_time=10,
            instance_name="acc-test-rocketmq",
            instance_description="acc-test",
            project_name="default",
            charge_info=volcengine.rocketmq.RocketMQInstanceChargeInfoArgs(
                charge_type="PostPaid",
            ),
            tags=[volcengine.rocketmq.RocketMQInstanceTagArgs(
                key="k1",
                value="v1",
            )])
        foo_rocket_mq_allow_list = volcengine.rocketmq.RocketMQAllowList("fooRocketMQAllowList",
            allow_list_name="acc-test-allow-list",
            allow_list_desc="acc-test",
            allow_lists=[
                "192.168.0.0/24",
                "192.168.2.0/24",
            ])
        foo_rocket_mq_allow_list_associate = volcengine.rocketmq.RocketMQAllowListAssociate("fooRocketMQAllowListAssociate",
            instance_id=foo_rocket_mq_instance.id,
            allow_list_id=foo_rocket_mq_allow_list.id)
        ```

        ## Import

        RocketmqAllowListAssociate can be imported using the instance_id:allow_list_id, e.g.

        ```sh
        $ pulumi import volcengine:rocketmq/rocketMQAllowListAssociate:RocketMQAllowListAssociate default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] allow_list_id: The id of the rocketmq allow list.
        :param pulumi.Input[str] instance_id: The id of the rocketmq instance.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RocketMQAllowListAssociateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to manage rocketmq allow list associate
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo_zones = volcengine.ecs.get_zones()
        foo_vpc = volcengine.vpc.Vpc("fooVpc",
            vpc_name="acc-test-vpc",
            cidr_block="172.16.0.0/16")
        foo_subnet = volcengine.vpc.Subnet("fooSubnet",
            subnet_name="acc-test-subnet",
            cidr_block="172.16.0.0/24",
            zone_id=foo_zones.zones[0].id,
            vpc_id=foo_vpc.id)
        foo_rocket_mq_instance = volcengine.rocketmq.RocketMQInstance("fooRocketMQInstance",
            zone_ids=[foo_zones.zones[0].id],
            subnet_id=foo_subnet.id,
            version="4.8",
            compute_spec="rocketmq.n1.x2.micro",
            storage_space=300,
            auto_scale_queue=True,
            file_reserved_time=10,
            instance_name="acc-test-rocketmq",
            instance_description="acc-test",
            project_name="default",
            charge_info=volcengine.rocketmq.RocketMQInstanceChargeInfoArgs(
                charge_type="PostPaid",
            ),
            tags=[volcengine.rocketmq.RocketMQInstanceTagArgs(
                key="k1",
                value="v1",
            )])
        foo_rocket_mq_allow_list = volcengine.rocketmq.RocketMQAllowList("fooRocketMQAllowList",
            allow_list_name="acc-test-allow-list",
            allow_list_desc="acc-test",
            allow_lists=[
                "192.168.0.0/24",
                "192.168.2.0/24",
            ])
        foo_rocket_mq_allow_list_associate = volcengine.rocketmq.RocketMQAllowListAssociate("fooRocketMQAllowListAssociate",
            instance_id=foo_rocket_mq_instance.id,
            allow_list_id=foo_rocket_mq_allow_list.id)
        ```

        ## Import

        RocketmqAllowListAssociate can be imported using the instance_id:allow_list_id, e.g.

        ```sh
        $ pulumi import volcengine:rocketmq/rocketMQAllowListAssociate:RocketMQAllowListAssociate default resource_id
        ```

        :param str resource_name: The name of the resource.
        :param RocketMQAllowListAssociateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RocketMQAllowListAssociateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allow_list_id: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RocketMQAllowListAssociateArgs.__new__(RocketMQAllowListAssociateArgs)

            if allow_list_id is None and not opts.urn:
                raise TypeError("Missing required property 'allow_list_id'")
            __props__.__dict__["allow_list_id"] = allow_list_id
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
        super(RocketMQAllowListAssociate, __self__).__init__(
            'volcengine:rocketmq/rocketMQAllowListAssociate:RocketMQAllowListAssociate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allow_list_id: Optional[pulumi.Input[str]] = None,
            instance_id: Optional[pulumi.Input[str]] = None) -> 'RocketMQAllowListAssociate':
        """
        Get an existing RocketMQAllowListAssociate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] allow_list_id: The id of the rocketmq allow list.
        :param pulumi.Input[str] instance_id: The id of the rocketmq instance.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RocketMQAllowListAssociateState.__new__(_RocketMQAllowListAssociateState)

        __props__.__dict__["allow_list_id"] = allow_list_id
        __props__.__dict__["instance_id"] = instance_id
        return RocketMQAllowListAssociate(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="allowListId")
    def allow_list_id(self) -> pulumi.Output[str]:
        """
        The id of the rocketmq allow list.
        """
        return pulumi.get(self, "allow_list_id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        The id of the rocketmq instance.
        """
        return pulumi.get(self, "instance_id")

