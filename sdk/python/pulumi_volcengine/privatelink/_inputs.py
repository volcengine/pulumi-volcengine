# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'VpcEndpointConnectionZoneArgs',
    'VpcEndpointServiceResourceArgs',
]

@pulumi.input_type
class VpcEndpointConnectionZoneArgs:
    def __init__(__self__, *,
                 network_interface_id: Optional[pulumi.Input[str]] = None,
                 network_interface_ip: Optional[pulumi.Input[str]] = None,
                 resource_id: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 zone_domain: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 zone_status: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] network_interface_id: The id of the network interface.
        :param pulumi.Input[str] network_interface_ip: The ip address of the network interface.
        :param pulumi.Input[str] resource_id: The id of the resource.
        :param pulumi.Input[str] subnet_id: The id of the subnet.
        :param pulumi.Input[str] zone_domain: The domain of the zone.
        :param pulumi.Input[str] zone_id: The id of the zone.
        :param pulumi.Input[str] zone_status: The status of the zone.
        """
        if network_interface_id is not None:
            pulumi.set(__self__, "network_interface_id", network_interface_id)
        if network_interface_ip is not None:
            pulumi.set(__self__, "network_interface_ip", network_interface_ip)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if zone_domain is not None:
            pulumi.set(__self__, "zone_domain", zone_domain)
        if zone_id is not None:
            pulumi.set(__self__, "zone_id", zone_id)
        if zone_status is not None:
            pulumi.set(__self__, "zone_status", zone_status)

    @property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the network interface.
        """
        return pulumi.get(self, "network_interface_id")

    @network_interface_id.setter
    def network_interface_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_interface_id", value)

    @property
    @pulumi.getter(name="networkInterfaceIp")
    def network_interface_ip(self) -> Optional[pulumi.Input[str]]:
        """
        The ip address of the network interface.
        """
        return pulumi.get(self, "network_interface_ip")

    @network_interface_ip.setter
    def network_interface_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_interface_ip", value)

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the resource.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_id", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the subnet.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter(name="zoneDomain")
    def zone_domain(self) -> Optional[pulumi.Input[str]]:
        """
        The domain of the zone.
        """
        return pulumi.get(self, "zone_domain")

    @zone_domain.setter
    def zone_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_domain", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the zone.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_id", value)

    @property
    @pulumi.getter(name="zoneStatus")
    def zone_status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the zone.
        """
        return pulumi.get(self, "zone_status")

    @zone_status.setter
    def zone_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_status", value)


@pulumi.input_type
class VpcEndpointServiceResourceArgs:
    def __init__(__self__, *,
                 resource_id: pulumi.Input[str],
                 resource_type: pulumi.Input[str]):
        """
        :param pulumi.Input[str] resource_id: The id of resource.
        :param pulumi.Input[str] resource_type: The type of resource.
        """
        pulumi.set(__self__, "resource_id", resource_id)
        pulumi.set(__self__, "resource_type", resource_type)

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Input[str]:
        """
        The id of resource.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_id", value)

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> pulumi.Input[str]:
        """
        The type of resource.
        """
        return pulumi.get(self, "resource_type")

    @resource_type.setter
    def resource_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_type", value)


