# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'CfwAddressBooksAddressBookResult',
    'CfwControlPoliciesControlPolicyResult',
    'CfwDnsControlPoliciesDnsControlPolicyResult',
    'CfwDnsControlPoliciesDnsControlPolicySourceResult',
    'CfwDnsControlPolicySource',
    'CfwNatFirewallControlPoliciesNatFirewallControlPolicyResult',
    'CfwVpcFirewallAclRulesVpcFirewallAclRuleResult',
    'GetCfwAddressBooksAddressBookResult',
    'GetCfwControlPoliciesControlPolicyResult',
    'GetCfwDnsControlPoliciesDnsControlPolicyResult',
    'GetCfwDnsControlPoliciesDnsControlPolicySourceResult',
    'GetCfwNatFirewallControlPoliciesNatFirewallControlPolicyResult',
    'GetCfwVpcFirewallAclRulesVpcFirewallAclRuleResult',
]

@pulumi.output_type
class CfwAddressBooksAddressBookResult(dict):
    def __init__(__self__, *,
                 address_lists: Sequence[str],
                 description: str,
                 group_name: str,
                 group_type: str,
                 group_uuid: str,
                 id: str,
                 ref_cnt: int):
        """
        :param Sequence[str] address_lists: The address list of the address book.
        :param str description: The group type of address book. This field support fuzzy query.
        :param str group_name: The group name of address book. This field support fuzzy query.
        :param str group_type: The group type of address book. Valid values: `ip`, `port`, `domain`.
        :param str group_uuid: The uuid of the address book.
        :param str id: The uuid of the address book.
        :param int ref_cnt: The reference count of the address book.
        """
        pulumi.set(__self__, "address_lists", address_lists)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "group_name", group_name)
        pulumi.set(__self__, "group_type", group_type)
        pulumi.set(__self__, "group_uuid", group_uuid)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ref_cnt", ref_cnt)

    @property
    @pulumi.getter(name="addressLists")
    def address_lists(self) -> Sequence[str]:
        """
        The address list of the address book.
        """
        return pulumi.get(self, "address_lists")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The group type of address book. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="groupName")
    def group_name(self) -> str:
        """
        The group name of address book. This field support fuzzy query.
        """
        return pulumi.get(self, "group_name")

    @property
    @pulumi.getter(name="groupType")
    def group_type(self) -> str:
        """
        The group type of address book. Valid values: `ip`, `port`, `domain`.
        """
        return pulumi.get(self, "group_type")

    @property
    @pulumi.getter(name="groupUuid")
    def group_uuid(self) -> str:
        """
        The uuid of the address book.
        """
        return pulumi.get(self, "group_uuid")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The uuid of the address book.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="refCnt")
    def ref_cnt(self) -> int:
        """
        The reference count of the address book.
        """
        return pulumi.get(self, "ref_cnt")


@pulumi.output_type
class CfwControlPoliciesControlPolicyResult(dict):
    def __init__(__self__, *,
                 account_id: str,
                 action: str,
                 description: str,
                 dest_port: str,
                 dest_port_group_type: str,
                 dest_port_lists: Sequence[str],
                 dest_port_type: str,
                 destination: str,
                 destination_cidr_lists: Sequence[str],
                 destination_group_type: str,
                 destination_type: str,
                 direction: str,
                 effect_status: int,
                 end_time: int,
                 hit_cnt: int,
                 id: str,
                 is_effected: bool,
                 prio: int,
                 proto: str,
                 repeat_days: Sequence[int],
                 repeat_end_time: str,
                 repeat_start_time: str,
                 repeat_type: str,
                 rule_id: str,
                 source: str,
                 source_cidr_lists: Sequence[str],
                 source_group_type: str,
                 source_type: str,
                 start_time: int,
                 status: bool,
                 update_time: int,
                 use_count: int):
        """
        :param str account_id: The account id of the control policy.
        :param str action: The action list of the control policy. Valid values: `accept`, `deny`, `monitor`.
        :param str description: The description of the control policy. This field support fuzzy query.
        :param str dest_port: The dest port of the control policy.
        :param str dest_port_group_type: The dest port group type of the control policy.
        :param Sequence[str] dest_port_lists: The dest port list of the control policy.
        :param str dest_port_type: The dest port type of the control policy.
        :param str destination: The destination of the control policy. This field support fuzzy query.
        :param Sequence[str] destination_cidr_lists: The destination cidr list of the control policy.
        :param str destination_group_type: The destination group type of the control policy.
        :param str destination_type: The destination type of the control policy.
        :param str direction: The direction of control policy. Valid values: `in`, `out`.
        :param int effect_status: The effect status of the control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        :param int end_time: The end time of the control policy. Unix timestamp.
        :param int hit_cnt: The hit count of the control policy.
        :param str id: The id of the control policy.
        :param bool is_effected: Whether the control policy is effected.
        :param int prio: The priority of the control policy.
        :param str proto: The proto list of the control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        :param Sequence[int] repeat_days: The repeat days of the control policy.
        :param str repeat_end_time: The repeat end time of the control policy.
        :param str repeat_start_time: The repeat start time of the control policy.
        :param str repeat_type: The repeat type of the control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        :param str rule_id: The rule id of the control policy. This field support fuzzy query.
        :param str source: The source of the control policy. This field support fuzzy query.
        :param Sequence[str] source_cidr_lists: The source cidr list of the control policy.
        :param str source_group_type: The source group type of the control policy.
        :param str source_type: The source type of the control policy.
        :param int start_time: The start time of the control policy. Unix timestamp.
        :param bool status: The enable status list of the control policy.
        :param int update_time: The update time of the control policy.
        :param int use_count: The use count of the control policy.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dest_port", dest_port)
        pulumi.set(__self__, "dest_port_group_type", dest_port_group_type)
        pulumi.set(__self__, "dest_port_lists", dest_port_lists)
        pulumi.set(__self__, "dest_port_type", dest_port_type)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "destination_cidr_lists", destination_cidr_lists)
        pulumi.set(__self__, "destination_group_type", destination_group_type)
        pulumi.set(__self__, "destination_type", destination_type)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "effect_status", effect_status)
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "hit_cnt", hit_cnt)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_effected", is_effected)
        pulumi.set(__self__, "prio", prio)
        pulumi.set(__self__, "proto", proto)
        pulumi.set(__self__, "repeat_days", repeat_days)
        pulumi.set(__self__, "repeat_end_time", repeat_end_time)
        pulumi.set(__self__, "repeat_start_time", repeat_start_time)
        pulumi.set(__self__, "repeat_type", repeat_type)
        pulumi.set(__self__, "rule_id", rule_id)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "source_cidr_lists", source_cidr_lists)
        pulumi.set(__self__, "source_group_type", source_group_type)
        pulumi.set(__self__, "source_type", source_type)
        pulumi.set(__self__, "start_time", start_time)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "use_count", use_count)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        """
        The account id of the control policy.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def action(self) -> str:
        """
        The action list of the control policy. Valid values: `accept`, `deny`, `monitor`.
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="destPort")
    def dest_port(self) -> str:
        """
        The dest port of the control policy.
        """
        return pulumi.get(self, "dest_port")

    @property
    @pulumi.getter(name="destPortGroupType")
    def dest_port_group_type(self) -> str:
        """
        The dest port group type of the control policy.
        """
        return pulumi.get(self, "dest_port_group_type")

    @property
    @pulumi.getter(name="destPortLists")
    def dest_port_lists(self) -> Sequence[str]:
        """
        The dest port list of the control policy.
        """
        return pulumi.get(self, "dest_port_lists")

    @property
    @pulumi.getter(name="destPortType")
    def dest_port_type(self) -> str:
        """
        The dest port type of the control policy.
        """
        return pulumi.get(self, "dest_port_type")

    @property
    @pulumi.getter
    def destination(self) -> str:
        """
        The destination of the control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "destination")

    @property
    @pulumi.getter(name="destinationCidrLists")
    def destination_cidr_lists(self) -> Sequence[str]:
        """
        The destination cidr list of the control policy.
        """
        return pulumi.get(self, "destination_cidr_lists")

    @property
    @pulumi.getter(name="destinationGroupType")
    def destination_group_type(self) -> str:
        """
        The destination group type of the control policy.
        """
        return pulumi.get(self, "destination_group_type")

    @property
    @pulumi.getter(name="destinationType")
    def destination_type(self) -> str:
        """
        The destination type of the control policy.
        """
        return pulumi.get(self, "destination_type")

    @property
    @pulumi.getter
    def direction(self) -> str:
        """
        The direction of control policy. Valid values: `in`, `out`.
        """
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter(name="effectStatus")
    def effect_status(self) -> int:
        """
        The effect status of the control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        """
        return pulumi.get(self, "effect_status")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> int:
        """
        The end time of the control policy. Unix timestamp.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter(name="hitCnt")
    def hit_cnt(self) -> int:
        """
        The hit count of the control policy.
        """
        return pulumi.get(self, "hit_cnt")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the control policy.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEffected")
    def is_effected(self) -> bool:
        """
        Whether the control policy is effected.
        """
        return pulumi.get(self, "is_effected")

    @property
    @pulumi.getter
    def prio(self) -> int:
        """
        The priority of the control policy.
        """
        return pulumi.get(self, "prio")

    @property
    @pulumi.getter
    def proto(self) -> str:
        """
        The proto list of the control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        """
        return pulumi.get(self, "proto")

    @property
    @pulumi.getter(name="repeatDays")
    def repeat_days(self) -> Sequence[int]:
        """
        The repeat days of the control policy.
        """
        return pulumi.get(self, "repeat_days")

    @property
    @pulumi.getter(name="repeatEndTime")
    def repeat_end_time(self) -> str:
        """
        The repeat end time of the control policy.
        """
        return pulumi.get(self, "repeat_end_time")

    @property
    @pulumi.getter(name="repeatStartTime")
    def repeat_start_time(self) -> str:
        """
        The repeat start time of the control policy.
        """
        return pulumi.get(self, "repeat_start_time")

    @property
    @pulumi.getter(name="repeatType")
    def repeat_type(self) -> str:
        """
        The repeat type of the control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        """
        return pulumi.get(self, "repeat_type")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The rule id of the control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "rule_id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        The source of the control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter(name="sourceCidrLists")
    def source_cidr_lists(self) -> Sequence[str]:
        """
        The source cidr list of the control policy.
        """
        return pulumi.get(self, "source_cidr_lists")

    @property
    @pulumi.getter(name="sourceGroupType")
    def source_group_type(self) -> str:
        """
        The source group type of the control policy.
        """
        return pulumi.get(self, "source_group_type")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> str:
        """
        The source type of the control policy.
        """
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> int:
        """
        The start time of the control policy. Unix timestamp.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def status(self) -> bool:
        """
        The enable status list of the control policy.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> int:
        """
        The update time of the control policy.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="useCount")
    def use_count(self) -> int:
        """
        The use count of the control policy.
        """
        return pulumi.get(self, "use_count")


@pulumi.output_type
class CfwDnsControlPoliciesDnsControlPolicyResult(dict):
    def __init__(__self__, *,
                 account_id: str,
                 description: str,
                 destination: str,
                 destination_group_lists: Sequence[str],
                 destination_type: str,
                 domain_lists: Sequence[str],
                 hit_cnt: int,
                 id: str,
                 last_hit_time: int,
                 rule_id: str,
                 sources: Sequence['outputs.CfwDnsControlPoliciesDnsControlPolicySourceResult'],
                 status: bool,
                 use_count: int):
        """
        :param str account_id: The account id of the dns control policy.
        :param str description: The description of the dns control policy. This field support fuzzy query.
        :param str destination: The destination list of the dns control policy. This field support fuzzy query.
        :param Sequence[str] destination_group_lists: The destination group list of the dns control policy.
        :param str destination_type: The destination type of the dns control policy.
        :param Sequence[str] domain_lists: The destination domain list of the dns control policy.
        :param int hit_cnt: The hit count of the dns control policy.
        :param str id: The id of the dns control policy.
        :param int last_hit_time: The last hit time of the dns control policy. Unix timestamp.
        :param str rule_id: The id of the dns control policy.
        :param Sequence['CfwDnsControlPoliciesDnsControlPolicySourceArgs'] sources: The source list of the dns control policy. This field support fuzzy query.
        :param bool status: The enable status list of the dns control policy. This field support fuzzy query.
        :param int use_count: The use count of the dns control policy.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "destination_group_lists", destination_group_lists)
        pulumi.set(__self__, "destination_type", destination_type)
        pulumi.set(__self__, "domain_lists", domain_lists)
        pulumi.set(__self__, "hit_cnt", hit_cnt)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_hit_time", last_hit_time)
        pulumi.set(__self__, "rule_id", rule_id)
        pulumi.set(__self__, "sources", sources)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "use_count", use_count)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        """
        The account id of the dns control policy.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the dns control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def destination(self) -> str:
        """
        The destination list of the dns control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "destination")

    @property
    @pulumi.getter(name="destinationGroupLists")
    def destination_group_lists(self) -> Sequence[str]:
        """
        The destination group list of the dns control policy.
        """
        return pulumi.get(self, "destination_group_lists")

    @property
    @pulumi.getter(name="destinationType")
    def destination_type(self) -> str:
        """
        The destination type of the dns control policy.
        """
        return pulumi.get(self, "destination_type")

    @property
    @pulumi.getter(name="domainLists")
    def domain_lists(self) -> Sequence[str]:
        """
        The destination domain list of the dns control policy.
        """
        return pulumi.get(self, "domain_lists")

    @property
    @pulumi.getter(name="hitCnt")
    def hit_cnt(self) -> int:
        """
        The hit count of the dns control policy.
        """
        return pulumi.get(self, "hit_cnt")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the dns control policy.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lastHitTime")
    def last_hit_time(self) -> int:
        """
        The last hit time of the dns control policy. Unix timestamp.
        """
        return pulumi.get(self, "last_hit_time")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The id of the dns control policy.
        """
        return pulumi.get(self, "rule_id")

    @property
    @pulumi.getter
    def sources(self) -> Sequence['outputs.CfwDnsControlPoliciesDnsControlPolicySourceResult']:
        """
        The source list of the dns control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "sources")

    @property
    @pulumi.getter
    def status(self) -> bool:
        """
        The enable status list of the dns control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="useCount")
    def use_count(self) -> int:
        """
        The use count of the dns control policy.
        """
        return pulumi.get(self, "use_count")


@pulumi.output_type
class CfwDnsControlPoliciesDnsControlPolicySourceResult(dict):
    def __init__(__self__, *,
                 region: str,
                 vpc_id: str):
        """
        :param str region: The region of the source vpc.
        :param str vpc_id: The id of the source vpc.
        """
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter
    def region(self) -> str:
        """
        The region of the source vpc.
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        The id of the source vpc.
        """
        return pulumi.get(self, "vpc_id")


@pulumi.output_type
class CfwDnsControlPolicySource(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "vpcId":
            suggest = "vpc_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in CfwDnsControlPolicySource. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        CfwDnsControlPolicySource.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        CfwDnsControlPolicySource.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 region: str,
                 vpc_id: str):
        """
        :param str region: The region of the source vpc.
        :param str vpc_id: The id of the source vpc.
        """
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter
    def region(self) -> str:
        """
        The region of the source vpc.
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        The id of the source vpc.
        """
        return pulumi.get(self, "vpc_id")


@pulumi.output_type
class CfwNatFirewallControlPoliciesNatFirewallControlPolicyResult(dict):
    def __init__(__self__, *,
                 account_id: str,
                 action: str,
                 description: str,
                 dest_port: str,
                 dest_port_group_lists: Sequence[str],
                 dest_port_group_type: str,
                 dest_port_lists: Sequence[str],
                 dest_port_type: str,
                 destination: str,
                 destination_cidr_lists: Sequence[str],
                 destination_group_lists: Sequence[str],
                 destination_group_type: str,
                 destination_type: str,
                 direction: str,
                 effect_status: int,
                 end_time: int,
                 hit_cnt: int,
                 id: str,
                 is_effected: bool,
                 nat_firewall_id: str,
                 nat_firewall_name: str,
                 prio: int,
                 proto: str,
                 repeat_days: Sequence[int],
                 repeat_end_time: str,
                 repeat_start_time: str,
                 repeat_type: str,
                 rule_id: str,
                 source: str,
                 source_cidr_lists: Sequence[str],
                 source_group_lists: Sequence[str],
                 source_group_type: str,
                 source_type: str,
                 start_time: int,
                 status: bool,
                 update_time: int,
                 use_count: int):
        """
        :param str account_id: The account id of the nat firewall control policy.
        :param str action: The action list of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
        :param str description: The description of the nat firewall control policy. This field support fuzzy query.
        :param str dest_port: The dest port of the nat firewall control policy.
        :param Sequence[str] dest_port_group_lists: The dest port group list of the nat firewall control policy.
        :param str dest_port_group_type: The dest port group type of the nat firewall control policy.
        :param Sequence[str] dest_port_lists: The dest port list of the nat firewall control policy.
        :param str dest_port_type: The dest port type of the nat firewall control policy.
        :param str destination: The destination of the nat firewall control policy. This field support fuzzy query.
        :param Sequence[str] destination_cidr_lists: The destination cidr list of the nat firewall control policy.
        :param Sequence[str] destination_group_lists: The destination group list of the nat firewall control policy.
        :param str destination_group_type: The destination group type of the nat firewall control policy.
        :param str destination_type: The destination type of the nat firewall control policy.
        :param str direction: The direction of nat firewall control policy. Valid values: `in`, `out`.
        :param int effect_status: The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        :param int end_time: The end time of the nat firewall control policy. Unix timestamp.
        :param int hit_cnt: The hit count of the nat firewall control policy.
        :param str id: The id of the nat firewall control policy.
        :param bool is_effected: Whether the nat firewall control policy is effected.
        :param str nat_firewall_id: The nat firewall id of the nat firewall control policy.
        :param str nat_firewall_name: The name of the nat firewall.
        :param int prio: The priority of the nat firewall control policy.
        :param str proto: The proto list of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        :param Sequence[int] repeat_days: The repeat days of the nat firewall control policy.
        :param str repeat_end_time: The repeat end time of the nat firewall control policy.
        :param str repeat_start_time: The repeat start time of the nat firewall control policy.
        :param str repeat_type: The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        :param str rule_id: The rule id of the nat firewall control policy. This field support fuzzy query.
        :param str source: The source of the nat firewall control policy. This field support fuzzy query.
        :param Sequence[str] source_cidr_lists: The source cidr list of the nat firewall control policy.
        :param Sequence[str] source_group_lists: The source group list of the nat firewall control policy.
        :param str source_group_type: The source group type of the nat firewall control policy.
        :param str source_type: The source type of the nat firewall control policy.
        :param int start_time: The start time of the nat firewall control policy. Unix timestamp.
        :param bool status: The enable status list of the nat firewall control policy.
        :param int update_time: The update time of the nat firewall control policy.
        :param int use_count: The use count of the nat firewall control policy.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dest_port", dest_port)
        pulumi.set(__self__, "dest_port_group_lists", dest_port_group_lists)
        pulumi.set(__self__, "dest_port_group_type", dest_port_group_type)
        pulumi.set(__self__, "dest_port_lists", dest_port_lists)
        pulumi.set(__self__, "dest_port_type", dest_port_type)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "destination_cidr_lists", destination_cidr_lists)
        pulumi.set(__self__, "destination_group_lists", destination_group_lists)
        pulumi.set(__self__, "destination_group_type", destination_group_type)
        pulumi.set(__self__, "destination_type", destination_type)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "effect_status", effect_status)
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "hit_cnt", hit_cnt)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_effected", is_effected)
        pulumi.set(__self__, "nat_firewall_id", nat_firewall_id)
        pulumi.set(__self__, "nat_firewall_name", nat_firewall_name)
        pulumi.set(__self__, "prio", prio)
        pulumi.set(__self__, "proto", proto)
        pulumi.set(__self__, "repeat_days", repeat_days)
        pulumi.set(__self__, "repeat_end_time", repeat_end_time)
        pulumi.set(__self__, "repeat_start_time", repeat_start_time)
        pulumi.set(__self__, "repeat_type", repeat_type)
        pulumi.set(__self__, "rule_id", rule_id)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "source_cidr_lists", source_cidr_lists)
        pulumi.set(__self__, "source_group_lists", source_group_lists)
        pulumi.set(__self__, "source_group_type", source_group_type)
        pulumi.set(__self__, "source_type", source_type)
        pulumi.set(__self__, "start_time", start_time)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "use_count", use_count)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        """
        The account id of the nat firewall control policy.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def action(self) -> str:
        """
        The action list of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the nat firewall control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="destPort")
    def dest_port(self) -> str:
        """
        The dest port of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port")

    @property
    @pulumi.getter(name="destPortGroupLists")
    def dest_port_group_lists(self) -> Sequence[str]:
        """
        The dest port group list of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port_group_lists")

    @property
    @pulumi.getter(name="destPortGroupType")
    def dest_port_group_type(self) -> str:
        """
        The dest port group type of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port_group_type")

    @property
    @pulumi.getter(name="destPortLists")
    def dest_port_lists(self) -> Sequence[str]:
        """
        The dest port list of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port_lists")

    @property
    @pulumi.getter(name="destPortType")
    def dest_port_type(self) -> str:
        """
        The dest port type of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port_type")

    @property
    @pulumi.getter
    def destination(self) -> str:
        """
        The destination of the nat firewall control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "destination")

    @property
    @pulumi.getter(name="destinationCidrLists")
    def destination_cidr_lists(self) -> Sequence[str]:
        """
        The destination cidr list of the nat firewall control policy.
        """
        return pulumi.get(self, "destination_cidr_lists")

    @property
    @pulumi.getter(name="destinationGroupLists")
    def destination_group_lists(self) -> Sequence[str]:
        """
        The destination group list of the nat firewall control policy.
        """
        return pulumi.get(self, "destination_group_lists")

    @property
    @pulumi.getter(name="destinationGroupType")
    def destination_group_type(self) -> str:
        """
        The destination group type of the nat firewall control policy.
        """
        return pulumi.get(self, "destination_group_type")

    @property
    @pulumi.getter(name="destinationType")
    def destination_type(self) -> str:
        """
        The destination type of the nat firewall control policy.
        """
        return pulumi.get(self, "destination_type")

    @property
    @pulumi.getter
    def direction(self) -> str:
        """
        The direction of nat firewall control policy. Valid values: `in`, `out`.
        """
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter(name="effectStatus")
    def effect_status(self) -> int:
        """
        The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        """
        return pulumi.get(self, "effect_status")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> int:
        """
        The end time of the nat firewall control policy. Unix timestamp.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter(name="hitCnt")
    def hit_cnt(self) -> int:
        """
        The hit count of the nat firewall control policy.
        """
        return pulumi.get(self, "hit_cnt")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the nat firewall control policy.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEffected")
    def is_effected(self) -> bool:
        """
        Whether the nat firewall control policy is effected.
        """
        return pulumi.get(self, "is_effected")

    @property
    @pulumi.getter(name="natFirewallId")
    def nat_firewall_id(self) -> str:
        """
        The nat firewall id of the nat firewall control policy.
        """
        return pulumi.get(self, "nat_firewall_id")

    @property
    @pulumi.getter(name="natFirewallName")
    def nat_firewall_name(self) -> str:
        """
        The name of the nat firewall.
        """
        return pulumi.get(self, "nat_firewall_name")

    @property
    @pulumi.getter
    def prio(self) -> int:
        """
        The priority of the nat firewall control policy.
        """
        return pulumi.get(self, "prio")

    @property
    @pulumi.getter
    def proto(self) -> str:
        """
        The proto list of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        """
        return pulumi.get(self, "proto")

    @property
    @pulumi.getter(name="repeatDays")
    def repeat_days(self) -> Sequence[int]:
        """
        The repeat days of the nat firewall control policy.
        """
        return pulumi.get(self, "repeat_days")

    @property
    @pulumi.getter(name="repeatEndTime")
    def repeat_end_time(self) -> str:
        """
        The repeat end time of the nat firewall control policy.
        """
        return pulumi.get(self, "repeat_end_time")

    @property
    @pulumi.getter(name="repeatStartTime")
    def repeat_start_time(self) -> str:
        """
        The repeat start time of the nat firewall control policy.
        """
        return pulumi.get(self, "repeat_start_time")

    @property
    @pulumi.getter(name="repeatType")
    def repeat_type(self) -> str:
        """
        The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        """
        return pulumi.get(self, "repeat_type")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The rule id of the nat firewall control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "rule_id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        The source of the nat firewall control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter(name="sourceCidrLists")
    def source_cidr_lists(self) -> Sequence[str]:
        """
        The source cidr list of the nat firewall control policy.
        """
        return pulumi.get(self, "source_cidr_lists")

    @property
    @pulumi.getter(name="sourceGroupLists")
    def source_group_lists(self) -> Sequence[str]:
        """
        The source group list of the nat firewall control policy.
        """
        return pulumi.get(self, "source_group_lists")

    @property
    @pulumi.getter(name="sourceGroupType")
    def source_group_type(self) -> str:
        """
        The source group type of the nat firewall control policy.
        """
        return pulumi.get(self, "source_group_type")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> str:
        """
        The source type of the nat firewall control policy.
        """
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> int:
        """
        The start time of the nat firewall control policy. Unix timestamp.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def status(self) -> bool:
        """
        The enable status list of the nat firewall control policy.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> int:
        """
        The update time of the nat firewall control policy.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="useCount")
    def use_count(self) -> int:
        """
        The use count of the nat firewall control policy.
        """
        return pulumi.get(self, "use_count")


@pulumi.output_type
class CfwVpcFirewallAclRulesVpcFirewallAclRuleResult(dict):
    def __init__(__self__, *,
                 account_id: str,
                 action: str,
                 description: str,
                 dest_port: str,
                 dest_port_group_type: str,
                 dest_port_lists: Sequence[str],
                 dest_port_type: str,
                 destination: str,
                 destination_cidr_lists: Sequence[str],
                 destination_group_type: str,
                 destination_type: str,
                 effect_status: int,
                 end_time: int,
                 hit_cnt: int,
                 id: str,
                 is_effected: bool,
                 prio: int,
                 proto: str,
                 repeat_days: Sequence[int],
                 repeat_end_time: str,
                 repeat_start_time: str,
                 repeat_type: str,
                 rule_id: str,
                 source: str,
                 source_cidr_lists: Sequence[str],
                 source_group_type: str,
                 source_type: str,
                 start_time: int,
                 status: bool,
                 update_time: int,
                 use_count: int,
                 vpc_firewall_id: str,
                 vpc_firewall_name: str):
        """
        :param str account_id: The account id of the vpc firewall acl rule.
        :param str action: The action list of the vpc firewall acl rule. Valid values: `accept`, `deny`, `monitor`.
        :param str description: The description of the vpc firewall acl rule. This field support fuzzy query.
        :param str dest_port: The dest port of the vpc firewall acl rule.
        :param str dest_port_group_type: The dest port group type of the vpc firewall acl rule.
        :param Sequence[str] dest_port_lists: The dest port list of the vpc firewall acl rule.
        :param str dest_port_type: The dest port type of the vpc firewall acl rule.
        :param str destination: The destination of the vpc firewall acl rule. This field support fuzzy query.
        :param Sequence[str] destination_cidr_lists: The destination cidr list of the vpc firewall acl rule.
        :param str destination_group_type: The destination group type of the vpc firewall acl rule.
        :param str destination_type: The destination type of the vpc firewall acl rule.
        :param int effect_status: The effect status of the vpc firewall acl rule. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        :param int end_time: The end time of the vpc firewall acl rule. Unix timestamp.
        :param int hit_cnt: The hit count of the vpc firewall acl rule.
        :param str id: The id of the vpc firewall acl rule.
        :param bool is_effected: Whether the vpc firewall acl rule is effected.
        :param int prio: The priority of the vpc firewall acl rule.
        :param str proto: The proto list of the vpc firewall acl rule. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        :param Sequence[int] repeat_days: The repeat days of the vpc firewall acl rule.
        :param str repeat_end_time: The repeat end time of the vpc firewall acl rule.
        :param str repeat_start_time: The repeat start time of the vpc firewall acl rule.
        :param str repeat_type: The repeat type of the vpc firewall acl rule. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        :param str rule_id: The rule id of the vpc firewall acl rule. This field support fuzzy query.
        :param str source: The source of the vpc firewall acl rule. This field support fuzzy query.
        :param Sequence[str] source_cidr_lists: The source cidr list of the vpc firewall acl rule.
        :param str source_group_type: The source group type of the vpc firewall acl rule.
        :param str source_type: The source type of the vpc firewall acl rule.
        :param int start_time: The start time of the vpc firewall acl rule. Unix timestamp.
        :param bool status: The enable status list of the vpc firewall acl rule.
        :param int update_time: The update time of the vpc firewall acl rule.
        :param int use_count: The use count of the vpc firewall acl rule.
        :param str vpc_firewall_id: The vpc firewall id of the vpc firewall acl rule.
        :param str vpc_firewall_name: The name of the vpc firewall.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dest_port", dest_port)
        pulumi.set(__self__, "dest_port_group_type", dest_port_group_type)
        pulumi.set(__self__, "dest_port_lists", dest_port_lists)
        pulumi.set(__self__, "dest_port_type", dest_port_type)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "destination_cidr_lists", destination_cidr_lists)
        pulumi.set(__self__, "destination_group_type", destination_group_type)
        pulumi.set(__self__, "destination_type", destination_type)
        pulumi.set(__self__, "effect_status", effect_status)
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "hit_cnt", hit_cnt)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_effected", is_effected)
        pulumi.set(__self__, "prio", prio)
        pulumi.set(__self__, "proto", proto)
        pulumi.set(__self__, "repeat_days", repeat_days)
        pulumi.set(__self__, "repeat_end_time", repeat_end_time)
        pulumi.set(__self__, "repeat_start_time", repeat_start_time)
        pulumi.set(__self__, "repeat_type", repeat_type)
        pulumi.set(__self__, "rule_id", rule_id)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "source_cidr_lists", source_cidr_lists)
        pulumi.set(__self__, "source_group_type", source_group_type)
        pulumi.set(__self__, "source_type", source_type)
        pulumi.set(__self__, "start_time", start_time)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "use_count", use_count)
        pulumi.set(__self__, "vpc_firewall_id", vpc_firewall_id)
        pulumi.set(__self__, "vpc_firewall_name", vpc_firewall_name)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        """
        The account id of the vpc firewall acl rule.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def action(self) -> str:
        """
        The action list of the vpc firewall acl rule. Valid values: `accept`, `deny`, `monitor`.
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the vpc firewall acl rule. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="destPort")
    def dest_port(self) -> str:
        """
        The dest port of the vpc firewall acl rule.
        """
        return pulumi.get(self, "dest_port")

    @property
    @pulumi.getter(name="destPortGroupType")
    def dest_port_group_type(self) -> str:
        """
        The dest port group type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "dest_port_group_type")

    @property
    @pulumi.getter(name="destPortLists")
    def dest_port_lists(self) -> Sequence[str]:
        """
        The dest port list of the vpc firewall acl rule.
        """
        return pulumi.get(self, "dest_port_lists")

    @property
    @pulumi.getter(name="destPortType")
    def dest_port_type(self) -> str:
        """
        The dest port type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "dest_port_type")

    @property
    @pulumi.getter
    def destination(self) -> str:
        """
        The destination of the vpc firewall acl rule. This field support fuzzy query.
        """
        return pulumi.get(self, "destination")

    @property
    @pulumi.getter(name="destinationCidrLists")
    def destination_cidr_lists(self) -> Sequence[str]:
        """
        The destination cidr list of the vpc firewall acl rule.
        """
        return pulumi.get(self, "destination_cidr_lists")

    @property
    @pulumi.getter(name="destinationGroupType")
    def destination_group_type(self) -> str:
        """
        The destination group type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "destination_group_type")

    @property
    @pulumi.getter(name="destinationType")
    def destination_type(self) -> str:
        """
        The destination type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "destination_type")

    @property
    @pulumi.getter(name="effectStatus")
    def effect_status(self) -> int:
        """
        The effect status of the vpc firewall acl rule. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        """
        return pulumi.get(self, "effect_status")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> int:
        """
        The end time of the vpc firewall acl rule. Unix timestamp.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter(name="hitCnt")
    def hit_cnt(self) -> int:
        """
        The hit count of the vpc firewall acl rule.
        """
        return pulumi.get(self, "hit_cnt")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the vpc firewall acl rule.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEffected")
    def is_effected(self) -> bool:
        """
        Whether the vpc firewall acl rule is effected.
        """
        return pulumi.get(self, "is_effected")

    @property
    @pulumi.getter
    def prio(self) -> int:
        """
        The priority of the vpc firewall acl rule.
        """
        return pulumi.get(self, "prio")

    @property
    @pulumi.getter
    def proto(self) -> str:
        """
        The proto list of the vpc firewall acl rule. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        """
        return pulumi.get(self, "proto")

    @property
    @pulumi.getter(name="repeatDays")
    def repeat_days(self) -> Sequence[int]:
        """
        The repeat days of the vpc firewall acl rule.
        """
        return pulumi.get(self, "repeat_days")

    @property
    @pulumi.getter(name="repeatEndTime")
    def repeat_end_time(self) -> str:
        """
        The repeat end time of the vpc firewall acl rule.
        """
        return pulumi.get(self, "repeat_end_time")

    @property
    @pulumi.getter(name="repeatStartTime")
    def repeat_start_time(self) -> str:
        """
        The repeat start time of the vpc firewall acl rule.
        """
        return pulumi.get(self, "repeat_start_time")

    @property
    @pulumi.getter(name="repeatType")
    def repeat_type(self) -> str:
        """
        The repeat type of the vpc firewall acl rule. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        """
        return pulumi.get(self, "repeat_type")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The rule id of the vpc firewall acl rule. This field support fuzzy query.
        """
        return pulumi.get(self, "rule_id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        The source of the vpc firewall acl rule. This field support fuzzy query.
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter(name="sourceCidrLists")
    def source_cidr_lists(self) -> Sequence[str]:
        """
        The source cidr list of the vpc firewall acl rule.
        """
        return pulumi.get(self, "source_cidr_lists")

    @property
    @pulumi.getter(name="sourceGroupType")
    def source_group_type(self) -> str:
        """
        The source group type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "source_group_type")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> str:
        """
        The source type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> int:
        """
        The start time of the vpc firewall acl rule. Unix timestamp.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def status(self) -> bool:
        """
        The enable status list of the vpc firewall acl rule.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> int:
        """
        The update time of the vpc firewall acl rule.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="useCount")
    def use_count(self) -> int:
        """
        The use count of the vpc firewall acl rule.
        """
        return pulumi.get(self, "use_count")

    @property
    @pulumi.getter(name="vpcFirewallId")
    def vpc_firewall_id(self) -> str:
        """
        The vpc firewall id of the vpc firewall acl rule.
        """
        return pulumi.get(self, "vpc_firewall_id")

    @property
    @pulumi.getter(name="vpcFirewallName")
    def vpc_firewall_name(self) -> str:
        """
        The name of the vpc firewall.
        """
        return pulumi.get(self, "vpc_firewall_name")


@pulumi.output_type
class GetCfwAddressBooksAddressBookResult(dict):
    def __init__(__self__, *,
                 address_lists: Sequence[str],
                 description: str,
                 group_name: str,
                 group_type: str,
                 group_uuid: str,
                 id: str,
                 ref_cnt: int):
        """
        :param Sequence[str] address_lists: The address list of the address book.
        :param str description: The group type of address book. This field support fuzzy query.
        :param str group_name: The group name of address book. This field support fuzzy query.
        :param str group_type: The group type of address book. Valid values: `ip`, `port`, `domain`.
        :param str group_uuid: The uuid of the address book.
        :param str id: The uuid of the address book.
        :param int ref_cnt: The reference count of the address book.
        """
        pulumi.set(__self__, "address_lists", address_lists)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "group_name", group_name)
        pulumi.set(__self__, "group_type", group_type)
        pulumi.set(__self__, "group_uuid", group_uuid)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ref_cnt", ref_cnt)

    @property
    @pulumi.getter(name="addressLists")
    def address_lists(self) -> Sequence[str]:
        """
        The address list of the address book.
        """
        return pulumi.get(self, "address_lists")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The group type of address book. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="groupName")
    def group_name(self) -> str:
        """
        The group name of address book. This field support fuzzy query.
        """
        return pulumi.get(self, "group_name")

    @property
    @pulumi.getter(name="groupType")
    def group_type(self) -> str:
        """
        The group type of address book. Valid values: `ip`, `port`, `domain`.
        """
        return pulumi.get(self, "group_type")

    @property
    @pulumi.getter(name="groupUuid")
    def group_uuid(self) -> str:
        """
        The uuid of the address book.
        """
        return pulumi.get(self, "group_uuid")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The uuid of the address book.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="refCnt")
    def ref_cnt(self) -> int:
        """
        The reference count of the address book.
        """
        return pulumi.get(self, "ref_cnt")


@pulumi.output_type
class GetCfwControlPoliciesControlPolicyResult(dict):
    def __init__(__self__, *,
                 account_id: str,
                 action: str,
                 description: str,
                 dest_port: str,
                 dest_port_group_type: str,
                 dest_port_lists: Sequence[str],
                 dest_port_type: str,
                 destination: str,
                 destination_cidr_lists: Sequence[str],
                 destination_group_type: str,
                 destination_type: str,
                 direction: str,
                 effect_status: int,
                 end_time: int,
                 hit_cnt: int,
                 id: str,
                 is_effected: bool,
                 prio: int,
                 proto: str,
                 repeat_days: Sequence[int],
                 repeat_end_time: str,
                 repeat_start_time: str,
                 repeat_type: str,
                 rule_id: str,
                 source: str,
                 source_cidr_lists: Sequence[str],
                 source_group_type: str,
                 source_type: str,
                 start_time: int,
                 status: bool,
                 update_time: int,
                 use_count: int):
        """
        :param str account_id: The account id of the control policy.
        :param str action: The action list of the control policy. Valid values: `accept`, `deny`, `monitor`.
        :param str description: The description of the control policy. This field support fuzzy query.
        :param str dest_port: The dest port of the control policy.
        :param str dest_port_group_type: The dest port group type of the control policy.
        :param Sequence[str] dest_port_lists: The dest port list of the control policy.
        :param str dest_port_type: The dest port type of the control policy.
        :param str destination: The destination of the control policy. This field support fuzzy query.
        :param Sequence[str] destination_cidr_lists: The destination cidr list of the control policy.
        :param str destination_group_type: The destination group type of the control policy.
        :param str destination_type: The destination type of the control policy.
        :param str direction: The direction of control policy. Valid values: `in`, `out`.
        :param int effect_status: The effect status of the control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        :param int end_time: The end time of the control policy. Unix timestamp.
        :param int hit_cnt: The hit count of the control policy.
        :param str id: The id of the control policy.
        :param bool is_effected: Whether the control policy is effected.
        :param int prio: The priority of the control policy.
        :param str proto: The proto list of the control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        :param Sequence[int] repeat_days: The repeat days of the control policy.
        :param str repeat_end_time: The repeat end time of the control policy.
        :param str repeat_start_time: The repeat start time of the control policy.
        :param str repeat_type: The repeat type of the control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        :param str rule_id: The rule id of the control policy. This field support fuzzy query.
        :param str source: The source of the control policy. This field support fuzzy query.
        :param Sequence[str] source_cidr_lists: The source cidr list of the control policy.
        :param str source_group_type: The source group type of the control policy.
        :param str source_type: The source type of the control policy.
        :param int start_time: The start time of the control policy. Unix timestamp.
        :param bool status: The enable status list of the control policy.
        :param int update_time: The update time of the control policy.
        :param int use_count: The use count of the control policy.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dest_port", dest_port)
        pulumi.set(__self__, "dest_port_group_type", dest_port_group_type)
        pulumi.set(__self__, "dest_port_lists", dest_port_lists)
        pulumi.set(__self__, "dest_port_type", dest_port_type)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "destination_cidr_lists", destination_cidr_lists)
        pulumi.set(__self__, "destination_group_type", destination_group_type)
        pulumi.set(__self__, "destination_type", destination_type)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "effect_status", effect_status)
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "hit_cnt", hit_cnt)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_effected", is_effected)
        pulumi.set(__self__, "prio", prio)
        pulumi.set(__self__, "proto", proto)
        pulumi.set(__self__, "repeat_days", repeat_days)
        pulumi.set(__self__, "repeat_end_time", repeat_end_time)
        pulumi.set(__self__, "repeat_start_time", repeat_start_time)
        pulumi.set(__self__, "repeat_type", repeat_type)
        pulumi.set(__self__, "rule_id", rule_id)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "source_cidr_lists", source_cidr_lists)
        pulumi.set(__self__, "source_group_type", source_group_type)
        pulumi.set(__self__, "source_type", source_type)
        pulumi.set(__self__, "start_time", start_time)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "use_count", use_count)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        """
        The account id of the control policy.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def action(self) -> str:
        """
        The action list of the control policy. Valid values: `accept`, `deny`, `monitor`.
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="destPort")
    def dest_port(self) -> str:
        """
        The dest port of the control policy.
        """
        return pulumi.get(self, "dest_port")

    @property
    @pulumi.getter(name="destPortGroupType")
    def dest_port_group_type(self) -> str:
        """
        The dest port group type of the control policy.
        """
        return pulumi.get(self, "dest_port_group_type")

    @property
    @pulumi.getter(name="destPortLists")
    def dest_port_lists(self) -> Sequence[str]:
        """
        The dest port list of the control policy.
        """
        return pulumi.get(self, "dest_port_lists")

    @property
    @pulumi.getter(name="destPortType")
    def dest_port_type(self) -> str:
        """
        The dest port type of the control policy.
        """
        return pulumi.get(self, "dest_port_type")

    @property
    @pulumi.getter
    def destination(self) -> str:
        """
        The destination of the control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "destination")

    @property
    @pulumi.getter(name="destinationCidrLists")
    def destination_cidr_lists(self) -> Sequence[str]:
        """
        The destination cidr list of the control policy.
        """
        return pulumi.get(self, "destination_cidr_lists")

    @property
    @pulumi.getter(name="destinationGroupType")
    def destination_group_type(self) -> str:
        """
        The destination group type of the control policy.
        """
        return pulumi.get(self, "destination_group_type")

    @property
    @pulumi.getter(name="destinationType")
    def destination_type(self) -> str:
        """
        The destination type of the control policy.
        """
        return pulumi.get(self, "destination_type")

    @property
    @pulumi.getter
    def direction(self) -> str:
        """
        The direction of control policy. Valid values: `in`, `out`.
        """
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter(name="effectStatus")
    def effect_status(self) -> int:
        """
        The effect status of the control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        """
        return pulumi.get(self, "effect_status")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> int:
        """
        The end time of the control policy. Unix timestamp.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter(name="hitCnt")
    def hit_cnt(self) -> int:
        """
        The hit count of the control policy.
        """
        return pulumi.get(self, "hit_cnt")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the control policy.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEffected")
    def is_effected(self) -> bool:
        """
        Whether the control policy is effected.
        """
        return pulumi.get(self, "is_effected")

    @property
    @pulumi.getter
    def prio(self) -> int:
        """
        The priority of the control policy.
        """
        return pulumi.get(self, "prio")

    @property
    @pulumi.getter
    def proto(self) -> str:
        """
        The proto list of the control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        """
        return pulumi.get(self, "proto")

    @property
    @pulumi.getter(name="repeatDays")
    def repeat_days(self) -> Sequence[int]:
        """
        The repeat days of the control policy.
        """
        return pulumi.get(self, "repeat_days")

    @property
    @pulumi.getter(name="repeatEndTime")
    def repeat_end_time(self) -> str:
        """
        The repeat end time of the control policy.
        """
        return pulumi.get(self, "repeat_end_time")

    @property
    @pulumi.getter(name="repeatStartTime")
    def repeat_start_time(self) -> str:
        """
        The repeat start time of the control policy.
        """
        return pulumi.get(self, "repeat_start_time")

    @property
    @pulumi.getter(name="repeatType")
    def repeat_type(self) -> str:
        """
        The repeat type of the control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        """
        return pulumi.get(self, "repeat_type")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The rule id of the control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "rule_id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        The source of the control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter(name="sourceCidrLists")
    def source_cidr_lists(self) -> Sequence[str]:
        """
        The source cidr list of the control policy.
        """
        return pulumi.get(self, "source_cidr_lists")

    @property
    @pulumi.getter(name="sourceGroupType")
    def source_group_type(self) -> str:
        """
        The source group type of the control policy.
        """
        return pulumi.get(self, "source_group_type")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> str:
        """
        The source type of the control policy.
        """
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> int:
        """
        The start time of the control policy. Unix timestamp.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def status(self) -> bool:
        """
        The enable status list of the control policy.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> int:
        """
        The update time of the control policy.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="useCount")
    def use_count(self) -> int:
        """
        The use count of the control policy.
        """
        return pulumi.get(self, "use_count")


@pulumi.output_type
class GetCfwDnsControlPoliciesDnsControlPolicyResult(dict):
    def __init__(__self__, *,
                 account_id: str,
                 description: str,
                 destination: str,
                 destination_group_lists: Sequence[str],
                 destination_type: str,
                 domain_lists: Sequence[str],
                 hit_cnt: int,
                 id: str,
                 last_hit_time: int,
                 rule_id: str,
                 sources: Sequence['outputs.GetCfwDnsControlPoliciesDnsControlPolicySourceResult'],
                 status: bool,
                 use_count: int):
        """
        :param str account_id: The account id of the dns control policy.
        :param str description: The description of the dns control policy. This field support fuzzy query.
        :param str destination: The destination list of the dns control policy. This field support fuzzy query.
        :param Sequence[str] destination_group_lists: The destination group list of the dns control policy.
        :param str destination_type: The destination type of the dns control policy.
        :param Sequence[str] domain_lists: The destination domain list of the dns control policy.
        :param int hit_cnt: The hit count of the dns control policy.
        :param str id: The id of the dns control policy.
        :param int last_hit_time: The last hit time of the dns control policy. Unix timestamp.
        :param str rule_id: The id of the dns control policy.
        :param Sequence['GetCfwDnsControlPoliciesDnsControlPolicySourceArgs'] sources: The source list of the dns control policy. This field support fuzzy query.
        :param bool status: The enable status list of the dns control policy. This field support fuzzy query.
        :param int use_count: The use count of the dns control policy.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "destination_group_lists", destination_group_lists)
        pulumi.set(__self__, "destination_type", destination_type)
        pulumi.set(__self__, "domain_lists", domain_lists)
        pulumi.set(__self__, "hit_cnt", hit_cnt)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_hit_time", last_hit_time)
        pulumi.set(__self__, "rule_id", rule_id)
        pulumi.set(__self__, "sources", sources)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "use_count", use_count)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        """
        The account id of the dns control policy.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the dns control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def destination(self) -> str:
        """
        The destination list of the dns control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "destination")

    @property
    @pulumi.getter(name="destinationGroupLists")
    def destination_group_lists(self) -> Sequence[str]:
        """
        The destination group list of the dns control policy.
        """
        return pulumi.get(self, "destination_group_lists")

    @property
    @pulumi.getter(name="destinationType")
    def destination_type(self) -> str:
        """
        The destination type of the dns control policy.
        """
        return pulumi.get(self, "destination_type")

    @property
    @pulumi.getter(name="domainLists")
    def domain_lists(self) -> Sequence[str]:
        """
        The destination domain list of the dns control policy.
        """
        return pulumi.get(self, "domain_lists")

    @property
    @pulumi.getter(name="hitCnt")
    def hit_cnt(self) -> int:
        """
        The hit count of the dns control policy.
        """
        return pulumi.get(self, "hit_cnt")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the dns control policy.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lastHitTime")
    def last_hit_time(self) -> int:
        """
        The last hit time of the dns control policy. Unix timestamp.
        """
        return pulumi.get(self, "last_hit_time")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The id of the dns control policy.
        """
        return pulumi.get(self, "rule_id")

    @property
    @pulumi.getter
    def sources(self) -> Sequence['outputs.GetCfwDnsControlPoliciesDnsControlPolicySourceResult']:
        """
        The source list of the dns control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "sources")

    @property
    @pulumi.getter
    def status(self) -> bool:
        """
        The enable status list of the dns control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="useCount")
    def use_count(self) -> int:
        """
        The use count of the dns control policy.
        """
        return pulumi.get(self, "use_count")


@pulumi.output_type
class GetCfwDnsControlPoliciesDnsControlPolicySourceResult(dict):
    def __init__(__self__, *,
                 region: str,
                 vpc_id: str):
        """
        :param str region: The region of the source vpc.
        :param str vpc_id: The id of the source vpc.
        """
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter
    def region(self) -> str:
        """
        The region of the source vpc.
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        The id of the source vpc.
        """
        return pulumi.get(self, "vpc_id")


@pulumi.output_type
class GetCfwNatFirewallControlPoliciesNatFirewallControlPolicyResult(dict):
    def __init__(__self__, *,
                 account_id: str,
                 action: str,
                 description: str,
                 dest_port: str,
                 dest_port_group_lists: Sequence[str],
                 dest_port_group_type: str,
                 dest_port_lists: Sequence[str],
                 dest_port_type: str,
                 destination: str,
                 destination_cidr_lists: Sequence[str],
                 destination_group_lists: Sequence[str],
                 destination_group_type: str,
                 destination_type: str,
                 direction: str,
                 effect_status: int,
                 end_time: int,
                 hit_cnt: int,
                 id: str,
                 is_effected: bool,
                 nat_firewall_id: str,
                 nat_firewall_name: str,
                 prio: int,
                 proto: str,
                 repeat_days: Sequence[int],
                 repeat_end_time: str,
                 repeat_start_time: str,
                 repeat_type: str,
                 rule_id: str,
                 source: str,
                 source_cidr_lists: Sequence[str],
                 source_group_lists: Sequence[str],
                 source_group_type: str,
                 source_type: str,
                 start_time: int,
                 status: bool,
                 update_time: int,
                 use_count: int):
        """
        :param str account_id: The account id of the nat firewall control policy.
        :param str action: The action list of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
        :param str description: The description of the nat firewall control policy. This field support fuzzy query.
        :param str dest_port: The dest port of the nat firewall control policy.
        :param Sequence[str] dest_port_group_lists: The dest port group list of the nat firewall control policy.
        :param str dest_port_group_type: The dest port group type of the nat firewall control policy.
        :param Sequence[str] dest_port_lists: The dest port list of the nat firewall control policy.
        :param str dest_port_type: The dest port type of the nat firewall control policy.
        :param str destination: The destination of the nat firewall control policy. This field support fuzzy query.
        :param Sequence[str] destination_cidr_lists: The destination cidr list of the nat firewall control policy.
        :param Sequence[str] destination_group_lists: The destination group list of the nat firewall control policy.
        :param str destination_group_type: The destination group type of the nat firewall control policy.
        :param str destination_type: The destination type of the nat firewall control policy.
        :param str direction: The direction of nat firewall control policy. Valid values: `in`, `out`.
        :param int effect_status: The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        :param int end_time: The end time of the nat firewall control policy. Unix timestamp.
        :param int hit_cnt: The hit count of the nat firewall control policy.
        :param str id: The id of the nat firewall control policy.
        :param bool is_effected: Whether the nat firewall control policy is effected.
        :param str nat_firewall_id: The nat firewall id of the nat firewall control policy.
        :param str nat_firewall_name: The name of the nat firewall.
        :param int prio: The priority of the nat firewall control policy.
        :param str proto: The proto list of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        :param Sequence[int] repeat_days: The repeat days of the nat firewall control policy.
        :param str repeat_end_time: The repeat end time of the nat firewall control policy.
        :param str repeat_start_time: The repeat start time of the nat firewall control policy.
        :param str repeat_type: The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        :param str rule_id: The rule id of the nat firewall control policy. This field support fuzzy query.
        :param str source: The source of the nat firewall control policy. This field support fuzzy query.
        :param Sequence[str] source_cidr_lists: The source cidr list of the nat firewall control policy.
        :param Sequence[str] source_group_lists: The source group list of the nat firewall control policy.
        :param str source_group_type: The source group type of the nat firewall control policy.
        :param str source_type: The source type of the nat firewall control policy.
        :param int start_time: The start time of the nat firewall control policy. Unix timestamp.
        :param bool status: The enable status list of the nat firewall control policy.
        :param int update_time: The update time of the nat firewall control policy.
        :param int use_count: The use count of the nat firewall control policy.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dest_port", dest_port)
        pulumi.set(__self__, "dest_port_group_lists", dest_port_group_lists)
        pulumi.set(__self__, "dest_port_group_type", dest_port_group_type)
        pulumi.set(__self__, "dest_port_lists", dest_port_lists)
        pulumi.set(__self__, "dest_port_type", dest_port_type)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "destination_cidr_lists", destination_cidr_lists)
        pulumi.set(__self__, "destination_group_lists", destination_group_lists)
        pulumi.set(__self__, "destination_group_type", destination_group_type)
        pulumi.set(__self__, "destination_type", destination_type)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "effect_status", effect_status)
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "hit_cnt", hit_cnt)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_effected", is_effected)
        pulumi.set(__self__, "nat_firewall_id", nat_firewall_id)
        pulumi.set(__self__, "nat_firewall_name", nat_firewall_name)
        pulumi.set(__self__, "prio", prio)
        pulumi.set(__self__, "proto", proto)
        pulumi.set(__self__, "repeat_days", repeat_days)
        pulumi.set(__self__, "repeat_end_time", repeat_end_time)
        pulumi.set(__self__, "repeat_start_time", repeat_start_time)
        pulumi.set(__self__, "repeat_type", repeat_type)
        pulumi.set(__self__, "rule_id", rule_id)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "source_cidr_lists", source_cidr_lists)
        pulumi.set(__self__, "source_group_lists", source_group_lists)
        pulumi.set(__self__, "source_group_type", source_group_type)
        pulumi.set(__self__, "source_type", source_type)
        pulumi.set(__self__, "start_time", start_time)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "use_count", use_count)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        """
        The account id of the nat firewall control policy.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def action(self) -> str:
        """
        The action list of the nat firewall control policy. Valid values: `accept`, `deny`, `monitor`.
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the nat firewall control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="destPort")
    def dest_port(self) -> str:
        """
        The dest port of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port")

    @property
    @pulumi.getter(name="destPortGroupLists")
    def dest_port_group_lists(self) -> Sequence[str]:
        """
        The dest port group list of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port_group_lists")

    @property
    @pulumi.getter(name="destPortGroupType")
    def dest_port_group_type(self) -> str:
        """
        The dest port group type of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port_group_type")

    @property
    @pulumi.getter(name="destPortLists")
    def dest_port_lists(self) -> Sequence[str]:
        """
        The dest port list of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port_lists")

    @property
    @pulumi.getter(name="destPortType")
    def dest_port_type(self) -> str:
        """
        The dest port type of the nat firewall control policy.
        """
        return pulumi.get(self, "dest_port_type")

    @property
    @pulumi.getter
    def destination(self) -> str:
        """
        The destination of the nat firewall control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "destination")

    @property
    @pulumi.getter(name="destinationCidrLists")
    def destination_cidr_lists(self) -> Sequence[str]:
        """
        The destination cidr list of the nat firewall control policy.
        """
        return pulumi.get(self, "destination_cidr_lists")

    @property
    @pulumi.getter(name="destinationGroupLists")
    def destination_group_lists(self) -> Sequence[str]:
        """
        The destination group list of the nat firewall control policy.
        """
        return pulumi.get(self, "destination_group_lists")

    @property
    @pulumi.getter(name="destinationGroupType")
    def destination_group_type(self) -> str:
        """
        The destination group type of the nat firewall control policy.
        """
        return pulumi.get(self, "destination_group_type")

    @property
    @pulumi.getter(name="destinationType")
    def destination_type(self) -> str:
        """
        The destination type of the nat firewall control policy.
        """
        return pulumi.get(self, "destination_type")

    @property
    @pulumi.getter
    def direction(self) -> str:
        """
        The direction of nat firewall control policy. Valid values: `in`, `out`.
        """
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter(name="effectStatus")
    def effect_status(self) -> int:
        """
        The effect status of the nat firewall control policy. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        """
        return pulumi.get(self, "effect_status")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> int:
        """
        The end time of the nat firewall control policy. Unix timestamp.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter(name="hitCnt")
    def hit_cnt(self) -> int:
        """
        The hit count of the nat firewall control policy.
        """
        return pulumi.get(self, "hit_cnt")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the nat firewall control policy.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEffected")
    def is_effected(self) -> bool:
        """
        Whether the nat firewall control policy is effected.
        """
        return pulumi.get(self, "is_effected")

    @property
    @pulumi.getter(name="natFirewallId")
    def nat_firewall_id(self) -> str:
        """
        The nat firewall id of the nat firewall control policy.
        """
        return pulumi.get(self, "nat_firewall_id")

    @property
    @pulumi.getter(name="natFirewallName")
    def nat_firewall_name(self) -> str:
        """
        The name of the nat firewall.
        """
        return pulumi.get(self, "nat_firewall_name")

    @property
    @pulumi.getter
    def prio(self) -> int:
        """
        The priority of the nat firewall control policy.
        """
        return pulumi.get(self, "prio")

    @property
    @pulumi.getter
    def proto(self) -> str:
        """
        The proto list of the nat firewall control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        """
        return pulumi.get(self, "proto")

    @property
    @pulumi.getter(name="repeatDays")
    def repeat_days(self) -> Sequence[int]:
        """
        The repeat days of the nat firewall control policy.
        """
        return pulumi.get(self, "repeat_days")

    @property
    @pulumi.getter(name="repeatEndTime")
    def repeat_end_time(self) -> str:
        """
        The repeat end time of the nat firewall control policy.
        """
        return pulumi.get(self, "repeat_end_time")

    @property
    @pulumi.getter(name="repeatStartTime")
    def repeat_start_time(self) -> str:
        """
        The repeat start time of the nat firewall control policy.
        """
        return pulumi.get(self, "repeat_start_time")

    @property
    @pulumi.getter(name="repeatType")
    def repeat_type(self) -> str:
        """
        The repeat type of the nat firewall control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        """
        return pulumi.get(self, "repeat_type")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The rule id of the nat firewall control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "rule_id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        The source of the nat firewall control policy. This field support fuzzy query.
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter(name="sourceCidrLists")
    def source_cidr_lists(self) -> Sequence[str]:
        """
        The source cidr list of the nat firewall control policy.
        """
        return pulumi.get(self, "source_cidr_lists")

    @property
    @pulumi.getter(name="sourceGroupLists")
    def source_group_lists(self) -> Sequence[str]:
        """
        The source group list of the nat firewall control policy.
        """
        return pulumi.get(self, "source_group_lists")

    @property
    @pulumi.getter(name="sourceGroupType")
    def source_group_type(self) -> str:
        """
        The source group type of the nat firewall control policy.
        """
        return pulumi.get(self, "source_group_type")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> str:
        """
        The source type of the nat firewall control policy.
        """
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> int:
        """
        The start time of the nat firewall control policy. Unix timestamp.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def status(self) -> bool:
        """
        The enable status list of the nat firewall control policy.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> int:
        """
        The update time of the nat firewall control policy.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="useCount")
    def use_count(self) -> int:
        """
        The use count of the nat firewall control policy.
        """
        return pulumi.get(self, "use_count")


@pulumi.output_type
class GetCfwVpcFirewallAclRulesVpcFirewallAclRuleResult(dict):
    def __init__(__self__, *,
                 account_id: str,
                 action: str,
                 description: str,
                 dest_port: str,
                 dest_port_group_type: str,
                 dest_port_lists: Sequence[str],
                 dest_port_type: str,
                 destination: str,
                 destination_cidr_lists: Sequence[str],
                 destination_group_type: str,
                 destination_type: str,
                 effect_status: int,
                 end_time: int,
                 hit_cnt: int,
                 id: str,
                 is_effected: bool,
                 prio: int,
                 proto: str,
                 repeat_days: Sequence[int],
                 repeat_end_time: str,
                 repeat_start_time: str,
                 repeat_type: str,
                 rule_id: str,
                 source: str,
                 source_cidr_lists: Sequence[str],
                 source_group_type: str,
                 source_type: str,
                 start_time: int,
                 status: bool,
                 update_time: int,
                 use_count: int,
                 vpc_firewall_id: str,
                 vpc_firewall_name: str):
        """
        :param str account_id: The account id of the vpc firewall acl rule.
        :param str action: The action list of the vpc firewall acl rule. Valid values: `accept`, `deny`, `monitor`.
        :param str description: The description of the vpc firewall acl rule. This field support fuzzy query.
        :param str dest_port: The dest port of the vpc firewall acl rule.
        :param str dest_port_group_type: The dest port group type of the vpc firewall acl rule.
        :param Sequence[str] dest_port_lists: The dest port list of the vpc firewall acl rule.
        :param str dest_port_type: The dest port type of the vpc firewall acl rule.
        :param str destination: The destination of the vpc firewall acl rule. This field support fuzzy query.
        :param Sequence[str] destination_cidr_lists: The destination cidr list of the vpc firewall acl rule.
        :param str destination_group_type: The destination group type of the vpc firewall acl rule.
        :param str destination_type: The destination type of the vpc firewall acl rule.
        :param int effect_status: The effect status of the vpc firewall acl rule. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        :param int end_time: The end time of the vpc firewall acl rule. Unix timestamp.
        :param int hit_cnt: The hit count of the vpc firewall acl rule.
        :param str id: The id of the vpc firewall acl rule.
        :param bool is_effected: Whether the vpc firewall acl rule is effected.
        :param int prio: The priority of the vpc firewall acl rule.
        :param str proto: The proto list of the vpc firewall acl rule. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        :param Sequence[int] repeat_days: The repeat days of the vpc firewall acl rule.
        :param str repeat_end_time: The repeat end time of the vpc firewall acl rule.
        :param str repeat_start_time: The repeat start time of the vpc firewall acl rule.
        :param str repeat_type: The repeat type of the vpc firewall acl rule. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        :param str rule_id: The rule id of the vpc firewall acl rule. This field support fuzzy query.
        :param str source: The source of the vpc firewall acl rule. This field support fuzzy query.
        :param Sequence[str] source_cidr_lists: The source cidr list of the vpc firewall acl rule.
        :param str source_group_type: The source group type of the vpc firewall acl rule.
        :param str source_type: The source type of the vpc firewall acl rule.
        :param int start_time: The start time of the vpc firewall acl rule. Unix timestamp.
        :param bool status: The enable status list of the vpc firewall acl rule.
        :param int update_time: The update time of the vpc firewall acl rule.
        :param int use_count: The use count of the vpc firewall acl rule.
        :param str vpc_firewall_id: The vpc firewall id of the vpc firewall acl rule.
        :param str vpc_firewall_name: The name of the vpc firewall.
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dest_port", dest_port)
        pulumi.set(__self__, "dest_port_group_type", dest_port_group_type)
        pulumi.set(__self__, "dest_port_lists", dest_port_lists)
        pulumi.set(__self__, "dest_port_type", dest_port_type)
        pulumi.set(__self__, "destination", destination)
        pulumi.set(__self__, "destination_cidr_lists", destination_cidr_lists)
        pulumi.set(__self__, "destination_group_type", destination_group_type)
        pulumi.set(__self__, "destination_type", destination_type)
        pulumi.set(__self__, "effect_status", effect_status)
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "hit_cnt", hit_cnt)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_effected", is_effected)
        pulumi.set(__self__, "prio", prio)
        pulumi.set(__self__, "proto", proto)
        pulumi.set(__self__, "repeat_days", repeat_days)
        pulumi.set(__self__, "repeat_end_time", repeat_end_time)
        pulumi.set(__self__, "repeat_start_time", repeat_start_time)
        pulumi.set(__self__, "repeat_type", repeat_type)
        pulumi.set(__self__, "rule_id", rule_id)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "source_cidr_lists", source_cidr_lists)
        pulumi.set(__self__, "source_group_type", source_group_type)
        pulumi.set(__self__, "source_type", source_type)
        pulumi.set(__self__, "start_time", start_time)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "use_count", use_count)
        pulumi.set(__self__, "vpc_firewall_id", vpc_firewall_id)
        pulumi.set(__self__, "vpc_firewall_name", vpc_firewall_name)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> str:
        """
        The account id of the vpc firewall acl rule.
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter
    def action(self) -> str:
        """
        The action list of the vpc firewall acl rule. Valid values: `accept`, `deny`, `monitor`.
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        The description of the vpc firewall acl rule. This field support fuzzy query.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="destPort")
    def dest_port(self) -> str:
        """
        The dest port of the vpc firewall acl rule.
        """
        return pulumi.get(self, "dest_port")

    @property
    @pulumi.getter(name="destPortGroupType")
    def dest_port_group_type(self) -> str:
        """
        The dest port group type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "dest_port_group_type")

    @property
    @pulumi.getter(name="destPortLists")
    def dest_port_lists(self) -> Sequence[str]:
        """
        The dest port list of the vpc firewall acl rule.
        """
        return pulumi.get(self, "dest_port_lists")

    @property
    @pulumi.getter(name="destPortType")
    def dest_port_type(self) -> str:
        """
        The dest port type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "dest_port_type")

    @property
    @pulumi.getter
    def destination(self) -> str:
        """
        The destination of the vpc firewall acl rule. This field support fuzzy query.
        """
        return pulumi.get(self, "destination")

    @property
    @pulumi.getter(name="destinationCidrLists")
    def destination_cidr_lists(self) -> Sequence[str]:
        """
        The destination cidr list of the vpc firewall acl rule.
        """
        return pulumi.get(self, "destination_cidr_lists")

    @property
    @pulumi.getter(name="destinationGroupType")
    def destination_group_type(self) -> str:
        """
        The destination group type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "destination_group_type")

    @property
    @pulumi.getter(name="destinationType")
    def destination_type(self) -> str:
        """
        The destination type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "destination_type")

    @property
    @pulumi.getter(name="effectStatus")
    def effect_status(self) -> int:
        """
        The effect status of the vpc firewall acl rule. 1: Not yet effective, 2: Issued in progress, 3: Effective.
        """
        return pulumi.get(self, "effect_status")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> int:
        """
        The end time of the vpc firewall acl rule. Unix timestamp.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter(name="hitCnt")
    def hit_cnt(self) -> int:
        """
        The hit count of the vpc firewall acl rule.
        """
        return pulumi.get(self, "hit_cnt")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The id of the vpc firewall acl rule.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="isEffected")
    def is_effected(self) -> bool:
        """
        Whether the vpc firewall acl rule is effected.
        """
        return pulumi.get(self, "is_effected")

    @property
    @pulumi.getter
    def prio(self) -> int:
        """
        The priority of the vpc firewall acl rule.
        """
        return pulumi.get(self, "prio")

    @property
    @pulumi.getter
    def proto(self) -> str:
        """
        The proto list of the vpc firewall acl rule. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destination_type is `domain`, The proto must be `TCP`.
        """
        return pulumi.get(self, "proto")

    @property
    @pulumi.getter(name="repeatDays")
    def repeat_days(self) -> Sequence[int]:
        """
        The repeat days of the vpc firewall acl rule.
        """
        return pulumi.get(self, "repeat_days")

    @property
    @pulumi.getter(name="repeatEndTime")
    def repeat_end_time(self) -> str:
        """
        The repeat end time of the vpc firewall acl rule.
        """
        return pulumi.get(self, "repeat_end_time")

    @property
    @pulumi.getter(name="repeatStartTime")
    def repeat_start_time(self) -> str:
        """
        The repeat start time of the vpc firewall acl rule.
        """
        return pulumi.get(self, "repeat_start_time")

    @property
    @pulumi.getter(name="repeatType")
    def repeat_type(self) -> str:
        """
        The repeat type of the vpc firewall acl rule. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
        """
        return pulumi.get(self, "repeat_type")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The rule id of the vpc firewall acl rule. This field support fuzzy query.
        """
        return pulumi.get(self, "rule_id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        The source of the vpc firewall acl rule. This field support fuzzy query.
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter(name="sourceCidrLists")
    def source_cidr_lists(self) -> Sequence[str]:
        """
        The source cidr list of the vpc firewall acl rule.
        """
        return pulumi.get(self, "source_cidr_lists")

    @property
    @pulumi.getter(name="sourceGroupType")
    def source_group_type(self) -> str:
        """
        The source group type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "source_group_type")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> str:
        """
        The source type of the vpc firewall acl rule.
        """
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> int:
        """
        The start time of the vpc firewall acl rule. Unix timestamp.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter
    def status(self) -> bool:
        """
        The enable status list of the vpc firewall acl rule.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> int:
        """
        The update time of the vpc firewall acl rule.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="useCount")
    def use_count(self) -> int:
        """
        The use count of the vpc firewall acl rule.
        """
        return pulumi.get(self, "use_count")

    @property
    @pulumi.getter(name="vpcFirewallId")
    def vpc_firewall_id(self) -> str:
        """
        The vpc firewall id of the vpc firewall acl rule.
        """
        return pulumi.get(self, "vpc_firewall_id")

    @property
    @pulumi.getter(name="vpcFirewallName")
    def vpc_firewall_name(self) -> str:
        """
        The name of the vpc firewall.
        """
        return pulumi.get(self, "vpc_firewall_name")


