// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage bandwidth package attachment
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooAddress = new volcengine.eip.Address("fooAddress", {
 *     billingType: "PostPaidByBandwidth",
 *     bandwidth: 1,
 *     isp: "BGP",
 *     description: "acc-test",
 *     projectName: "default",
 *     securityProtectionTypes: ["AntiDDoS_Enhanced"],
 * });
 * const fooBandwidthPackage = new volcengine.bandwidth_package.BandwidthPackage("fooBandwidthPackage", {
 *     bandwidthPackageName: "acc-test",
 *     billingType: "PostPaidByBandwidth",
 *     isp: "BGP",
 *     description: "tftest-description",
 *     bandwidth: 10,
 *     protocol: "IPv4",
 *     tags: [{
 *         key: "tftest",
 *         value: "tftest",
 *     }],
 *     securityProtectionTypes: ["AntiDDoS_Enhanced"],
 * });
 * const fooAttachment = new volcengine.bandwidth_package.Attachment("fooAttachment", {
 *     allocationId: fooAddress.id,
 *     bandwidthPackageId: fooBandwidthPackage.id,
 * });
 * ```
 *
 * ## Import
 *
 * BandwidthPackageAttachment can be imported using the bandwidth package id and eip id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:bandwidth_package/attachment:Attachment default BandwidthPackageId:EipId
 * ```
 */
export class Attachment extends pulumi.CustomResource {
    /**
     * Get an existing Attachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AttachmentState, opts?: pulumi.CustomResourceOptions): Attachment {
        return new Attachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:bandwidth_package/attachment:Attachment';

    /**
     * Returns true if the given object is an instance of Attachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Attachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Attachment.__pulumiType;
    }

    /**
     * The ID of the public IP or IPv6 public bandwidth to be added to the shared bandwidth package instance.
     */
    public readonly allocationId!: pulumi.Output<string>;
    /**
     * The bandwidth package id.
     */
    public readonly bandwidthPackageId!: pulumi.Output<string>;

    /**
     * Create a Attachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AttachmentArgs | AttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AttachmentState | undefined;
            resourceInputs["allocationId"] = state ? state.allocationId : undefined;
            resourceInputs["bandwidthPackageId"] = state ? state.bandwidthPackageId : undefined;
        } else {
            const args = argsOrState as AttachmentArgs | undefined;
            if ((!args || args.allocationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allocationId'");
            }
            if ((!args || args.bandwidthPackageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bandwidthPackageId'");
            }
            resourceInputs["allocationId"] = args ? args.allocationId : undefined;
            resourceInputs["bandwidthPackageId"] = args ? args.bandwidthPackageId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Attachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Attachment resources.
 */
export interface AttachmentState {
    /**
     * The ID of the public IP or IPv6 public bandwidth to be added to the shared bandwidth package instance.
     */
    allocationId?: pulumi.Input<string>;
    /**
     * The bandwidth package id.
     */
    bandwidthPackageId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Attachment resource.
 */
export interface AttachmentArgs {
    /**
     * The ID of the public IP or IPv6 public bandwidth to be added to the shared bandwidth package instance.
     */
    allocationId: pulumi.Input<string>;
    /**
     * The bandwidth package id.
     */
    bandwidthPackageId: pulumi.Input<string>;
}
