// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cloud identity permission set assignments
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPermissionSet = new volcengine.cloud_identity.PermissionSet("fooPermissionSet", {
 *     description: "tf",
 *     sessionDuration: 5000,
 *     permissionPolicies: [
 *         {
 *             permissionPolicyType: "System",
 *             permissionPolicyName: "AdministratorAccess",
 *             inlinePolicyDocument: "",
 *         },
 *         {
 *             permissionPolicyType: "System",
 *             permissionPolicyName: "ReadOnlyAccess",
 *             inlinePolicyDocument: "",
 *         },
 *         {
 *             permissionPolicyType: "Inline",
 *             inlinePolicyDocument: "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
 *         },
 *     ],
 * });
 * const fooUser = new volcengine.cloud_identity.User("fooUser", {
 *     userName: "acc-test-user",
 *     displayName: "tf-test-user",
 *     description: "tf",
 *     email: "88@qq.com",
 *     phone: "181",
 * });
 * const fooPermissionSetAssignment = new volcengine.cloud_identity.PermissionSetAssignment("fooPermissionSetAssignment", {
 *     permissionSetId: fooPermissionSet.id,
 *     targetId: "210026****",
 *     principalType: "User",
 *     principalId: fooUser.id,
 * });
 * const fooPermissionSetAssignments = volcengine.cloud_identity.getPermissionSetAssignmentsOutput({
 *     permissionSetId: fooPermissionSetAssignment.permissionSetId,
 * });
 * ```
 */
/** @deprecated volcengine.cloud_identity.PermissionSetAssignments has been deprecated in favor of volcengine.cloud_identity.getPermissionSetAssignments */
export function permissionSetAssignments(args?: PermissionSetAssignmentsArgs, opts?: pulumi.InvokeOptions): Promise<PermissionSetAssignmentsResult> {
    pulumi.log.warn("permissionSetAssignments is deprecated: volcengine.cloud_identity.PermissionSetAssignments has been deprecated in favor of volcengine.cloud_identity.getPermissionSetAssignments")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cloud_identity/permissionSetAssignments:PermissionSetAssignments", {
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "permissionSetId": args.permissionSetId,
        "principalId": args.principalId,
        "principalType": args.principalType,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking PermissionSetAssignments.
 */
export interface PermissionSetAssignmentsArgs {
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The id of cloud identity permission set.
     */
    permissionSetId?: string;
    /**
     * The principal id of cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
     */
    principalId?: string;
    /**
     * The principal type of cloud identity permission set. Valid values: `User`, `Group`.
     */
    principalType?: string;
    /**
     * The target account id of cloud identity permission set assignment.
     */
    targetId?: string;
}

/**
 * A collection of values returned by PermissionSetAssignments.
 */
export interface PermissionSetAssignmentsResult {
    /**
     * The collection of query.
     */
    readonly assignments: outputs.cloud_identity.PermissionSetAssignmentsAssignment[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The id of the cloud identity permission set.
     */
    readonly permissionSetId?: string;
    /**
     * The principal id of the cloud identity permission set assignment.
     */
    readonly principalId?: string;
    /**
     * The principal type of the cloud identity permission set assignment.
     */
    readonly principalType?: string;
    /**
     * The target account id of the cloud identity permission set assignment.
     */
    readonly targetId?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cloud identity permission set assignments
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPermissionSet = new volcengine.cloud_identity.PermissionSet("fooPermissionSet", {
 *     description: "tf",
 *     sessionDuration: 5000,
 *     permissionPolicies: [
 *         {
 *             permissionPolicyType: "System",
 *             permissionPolicyName: "AdministratorAccess",
 *             inlinePolicyDocument: "",
 *         },
 *         {
 *             permissionPolicyType: "System",
 *             permissionPolicyName: "ReadOnlyAccess",
 *             inlinePolicyDocument: "",
 *         },
 *         {
 *             permissionPolicyType: "Inline",
 *             inlinePolicyDocument: "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
 *         },
 *     ],
 * });
 * const fooUser = new volcengine.cloud_identity.User("fooUser", {
 *     userName: "acc-test-user",
 *     displayName: "tf-test-user",
 *     description: "tf",
 *     email: "88@qq.com",
 *     phone: "181",
 * });
 * const fooPermissionSetAssignment = new volcengine.cloud_identity.PermissionSetAssignment("fooPermissionSetAssignment", {
 *     permissionSetId: fooPermissionSet.id,
 *     targetId: "210026****",
 *     principalType: "User",
 *     principalId: fooUser.id,
 * });
 * const fooPermissionSetAssignments = volcengine.cloud_identity.getPermissionSetAssignmentsOutput({
 *     permissionSetId: fooPermissionSetAssignment.permissionSetId,
 * });
 * ```
 */
/** @deprecated volcengine.cloud_identity.PermissionSetAssignments has been deprecated in favor of volcengine.cloud_identity.getPermissionSetAssignments */
export function permissionSetAssignmentsOutput(args?: PermissionSetAssignmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<PermissionSetAssignmentsResult> {
    return pulumi.output(args).apply((a: any) => permissionSetAssignments(a, opts))
}

/**
 * A collection of arguments for invoking PermissionSetAssignments.
 */
export interface PermissionSetAssignmentsOutputArgs {
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The id of cloud identity permission set.
     */
    permissionSetId?: pulumi.Input<string>;
    /**
     * The principal id of cloud identity permission set. When the `principalType` is `User`, this field is specified to `UserId`. When the `principalType` is `Group`, this field is specified to `GroupId`.
     */
    principalId?: pulumi.Input<string>;
    /**
     * The principal type of cloud identity permission set. Valid values: `User`, `Group`.
     */
    principalType?: pulumi.Input<string>;
    /**
     * The target account id of cloud identity permission set assignment.
     */
    targetId?: pulumi.Input<string>;
}
