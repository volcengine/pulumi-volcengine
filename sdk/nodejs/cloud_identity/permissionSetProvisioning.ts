// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage cloud identity permission set provisioning
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPermissionSet = new volcengine.cloud_identity.PermissionSet("fooPermissionSet", {
 *     description: "tf",
 *     sessionDuration: 5000,
 *     permissionPolicies: [
 *         {
 *             permissionPolicyType: "System",
 *             permissionPolicyName: "AdministratorAccess",
 *             inlinePolicyDocument: "",
 *         },
 *         {
 *             permissionPolicyType: "System",
 *             permissionPolicyName: "ReadOnlyAccess",
 *             inlinePolicyDocument: "",
 *         },
 *         {
 *             permissionPolicyType: "Inline",
 *             inlinePolicyDocument: "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
 *         },
 *     ],
 * });
 * const fooUser = new volcengine.cloud_identity.User("fooUser", {
 *     userName: "acc-test-user",
 *     displayName: "tf-test-user",
 *     description: "tf",
 *     email: "88@qq.com",
 *     phone: "181",
 * });
 * const fooPermissionSetAssignment = new volcengine.cloud_identity.PermissionSetAssignment("fooPermissionSetAssignment", {
 *     permissionSetId: fooPermissionSet.id,
 *     targetId: "210026****",
 *     principalType: "User",
 *     principalId: fooUser.id,
 * });
 * // When the `volcengine_cloud_identity_permission_set` is updated, you can use this resource to provision the permission set.
 * // When deleting this resource, resource `volcengine_cloud_identity_permission_set_assignment` must be deleted first.
 * const fooPermissionSetProvisioning = new volcengine.cloud_identity.PermissionSetProvisioning("fooPermissionSetProvisioning", {
 *     permissionSetId: fooPermissionSet.id,
 *     targetId: "210026****",
 *     provisioningStatus: "Provisioned",
 * });
 * ```
 *
 * ## Import
 *
 * CloudIdentityPermissionSetProvisioning can be imported using the permission_set_id:target_id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:cloud_identity/permissionSetProvisioning:PermissionSetProvisioning default resource_id
 * ```
 */
export class PermissionSetProvisioning extends pulumi.CustomResource {
    /**
     * Get an existing PermissionSetProvisioning resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PermissionSetProvisioningState, opts?: pulumi.CustomResourceOptions): PermissionSetProvisioning {
        return new PermissionSetProvisioning(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:cloud_identity/permissionSetProvisioning:PermissionSetProvisioning';

    /**
     * Returns true if the given object is an instance of PermissionSetProvisioning.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PermissionSetProvisioning {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PermissionSetProvisioning.__pulumiType;
    }

    /**
     * The id of the cloud identity permission set.
     */
    public readonly permissionSetId!: pulumi.Output<string>;
    /**
     * The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set. 
     * When deleting this resource, resource `volcengine.cloud_identity.PermissionSetAssignment` must be deleted first.
     */
    public readonly provisioningStatus!: pulumi.Output<string>;
    /**
     * The target account id of the cloud identity permission set provisioning.
     */
    public readonly targetId!: pulumi.Output<string>;

    /**
     * Create a PermissionSetProvisioning resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PermissionSetProvisioningArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PermissionSetProvisioningArgs | PermissionSetProvisioningState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PermissionSetProvisioningState | undefined;
            resourceInputs["permissionSetId"] = state ? state.permissionSetId : undefined;
            resourceInputs["provisioningStatus"] = state ? state.provisioningStatus : undefined;
            resourceInputs["targetId"] = state ? state.targetId : undefined;
        } else {
            const args = argsOrState as PermissionSetProvisioningArgs | undefined;
            if ((!args || args.permissionSetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permissionSetId'");
            }
            if ((!args || args.provisioningStatus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'provisioningStatus'");
            }
            if ((!args || args.targetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetId'");
            }
            resourceInputs["permissionSetId"] = args ? args.permissionSetId : undefined;
            resourceInputs["provisioningStatus"] = args ? args.provisioningStatus : undefined;
            resourceInputs["targetId"] = args ? args.targetId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PermissionSetProvisioning.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PermissionSetProvisioning resources.
 */
export interface PermissionSetProvisioningState {
    /**
     * The id of the cloud identity permission set.
     */
    permissionSetId?: pulumi.Input<string>;
    /**
     * The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set. 
     * When deleting this resource, resource `volcengine.cloud_identity.PermissionSetAssignment` must be deleted first.
     */
    provisioningStatus?: pulumi.Input<string>;
    /**
     * The target account id of the cloud identity permission set provisioning.
     */
    targetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PermissionSetProvisioning resource.
 */
export interface PermissionSetProvisioningArgs {
    /**
     * The id of the cloud identity permission set.
     */
    permissionSetId: pulumi.Input<string>;
    /**
     * The target provisioning status of the cloud identity permission set. This field must be specified as `Provisioned` in order to provision the updated permission set. 
     * When deleting this resource, resource `volcengine.cloud_identity.PermissionSetAssignment` must be deleted first.
     */
    provisioningStatus: pulumi.Input<string>;
    /**
     * The target account id of the cloud identity permission set provisioning.
     */
    targetId: pulumi.Input<string>;
}
