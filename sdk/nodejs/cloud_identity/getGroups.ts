// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cloud identity groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooGroup: volcengine.cloud_identity.Group[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     fooGroup.push(new volcengine.cloud_identity.Group(`fooGroup-${range.value}`, {
 *         description: "tf",
 *         displayName: `tf-test-group-${range.value}`,
 *         groupName: `acc-test-group-${range.value}`,
 *         joinType: "Manual",
 *     }));
 * }
 * const fooGroups = volcengine.cloud_identity.getGroups({
 *     groupName: "acc-test-group",
 *     joinType: "Manual",
 * });
 * ```
 */
export function getGroups(args?: GetGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cloud_identity/getGroups:getGroups", {
        "displayName": args.displayName,
        "groupName": args.groupName,
        "joinType": args.joinType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroups.
 */
export interface GetGroupsArgs {
    /**
     * The display name of cloud identity group.
     */
    displayName?: string;
    /**
     * The name of cloud identity group.
     */
    groupName?: string;
    /**
     * The join type of cloud identity group. Valid values: `Auto`, `Manual`.
     */
    joinType?: string;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getGroups.
 */
export interface GetGroupsResult {
    /**
     * The display name of the cloud identity group.
     */
    readonly displayName?: string;
    /**
     * The name of the cloud identity group.
     */
    readonly groupName?: string;
    /**
     * The collection of query.
     */
    readonly groups: outputs.cloud_identity.GetGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The email of the cloud identity group.
     */
    readonly joinType?: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cloud identity groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooGroup: volcengine.cloud_identity.Group[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     fooGroup.push(new volcengine.cloud_identity.Group(`fooGroup-${range.value}`, {
 *         description: "tf",
 *         displayName: `tf-test-group-${range.value}`,
 *         groupName: `acc-test-group-${range.value}`,
 *         joinType: "Manual",
 *     }));
 * }
 * const fooGroups = volcengine.cloud_identity.getGroups({
 *     groupName: "acc-test-group",
 *     joinType: "Manual",
 * });
 * ```
 */
export function getGroupsOutput(args?: GetGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupsResult> {
    return pulumi.output(args).apply((a: any) => getGroups(a, opts))
}

/**
 * A collection of arguments for invoking getGroups.
 */
export interface GetGroupsOutputArgs {
    /**
     * The display name of cloud identity group.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of cloud identity group.
     */
    groupName?: pulumi.Input<string>;
    /**
     * The join type of cloud identity group. Valid values: `Auto`, `Manual`.
     */
    joinType?: pulumi.Input<string>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
