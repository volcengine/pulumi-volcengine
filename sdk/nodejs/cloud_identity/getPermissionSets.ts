// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cloud identity permission sets
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPermissionSet: volcengine.cloud_identity.PermissionSet[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     fooPermissionSet.push(new volcengine.cloud_identity.PermissionSet(`fooPermissionSet-${range.value}`, {
 *         description: "tf",
 *         sessionDuration: 5000,
 *         permissionPolicies: [
 *             {
 *                 permissionPolicyType: "System",
 *                 permissionPolicyName: "AdministratorAccess",
 *                 inlinePolicyDocument: "",
 *             },
 *             {
 *                 permissionPolicyType: "System",
 *                 permissionPolicyName: "ReadOnlyAccess",
 *                 inlinePolicyDocument: "",
 *             },
 *             {
 *                 permissionPolicyType: "Inline",
 *                 inlinePolicyDocument: "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
 *             },
 *         ],
 *     }));
 * }
 * const fooPermissionSets = volcengine.cloud_identity.getPermissionSetsOutput({
 *     ids: fooPermissionSet.map(__item => __item.id),
 * });
 * ```
 */
export function getPermissionSets(args?: GetPermissionSetsArgs, opts?: pulumi.InvokeOptions): Promise<GetPermissionSetsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cloud_identity/getPermissionSets:getPermissionSets", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getPermissionSets.
 */
export interface GetPermissionSetsArgs {
    /**
     * A list of cloud identity permission set IDs.
     */
    ids?: string[];
    /**
     * A Name Regex of cloud identity permission set.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getPermissionSets.
 */
export interface GetPermissionSetsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The collection of query.
     */
    readonly permissionSets: outputs.cloud_identity.GetPermissionSetsPermissionSet[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cloud identity permission sets
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPermissionSet: volcengine.cloud_identity.PermissionSet[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     fooPermissionSet.push(new volcengine.cloud_identity.PermissionSet(`fooPermissionSet-${range.value}`, {
 *         description: "tf",
 *         sessionDuration: 5000,
 *         permissionPolicies: [
 *             {
 *                 permissionPolicyType: "System",
 *                 permissionPolicyName: "AdministratorAccess",
 *                 inlinePolicyDocument: "",
 *             },
 *             {
 *                 permissionPolicyType: "System",
 *                 permissionPolicyName: "ReadOnlyAccess",
 *                 inlinePolicyDocument: "",
 *             },
 *             {
 *                 permissionPolicyType: "Inline",
 *                 inlinePolicyDocument: "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
 *             },
 *         ],
 *     }));
 * }
 * const fooPermissionSets = volcengine.cloud_identity.getPermissionSetsOutput({
 *     ids: fooPermissionSet.map(__item => __item.id),
 * });
 * ```
 */
export function getPermissionSetsOutput(args?: GetPermissionSetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPermissionSetsResult> {
    return pulumi.output(args).apply((a: any) => getPermissionSets(a, opts))
}

/**
 * A collection of arguments for invoking getPermissionSets.
 */
export interface GetPermissionSetsOutputArgs {
    /**
     * A list of cloud identity permission set IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of cloud identity permission set.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
