// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cloud monitor contact groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cloud_monitor.getContactGroups({
 *     name: "tftest",
 * });
 * ```
 */
export function getContactGroups(args?: GetContactGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetContactGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cloud_monitor/getContactGroups:getContactGroups", {
        "name": args.name,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getContactGroups.
 */
export interface GetContactGroupsArgs {
    /**
     * Search for keywords in contact group names, supports fuzzy search.
     */
    name?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getContactGroups.
 */
export interface GetContactGroupsResult {
    /**
     * The collection of query.
     */
    readonly groups: outputs.cloud_monitor.GetContactGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the contact group.
     */
    readonly name?: string;
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cloud monitor contact groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cloud_monitor.getContactGroups({
 *     name: "tftest",
 * });
 * ```
 */
export function getContactGroupsOutput(args?: GetContactGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContactGroupsResult> {
    return pulumi.output(args).apply((a: any) => getContactGroups(a, opts))
}

/**
 * A collection of arguments for invoking getContactGroups.
 */
export interface GetContactGroupsOutputArgs {
    /**
     * Search for keywords in contact group names, supports fuzzy search.
     */
    name?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
