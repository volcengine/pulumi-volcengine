// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cloud monitor rules
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cloud_monitor.getRules({
 *     ids: ["174402785374661****"],
 * });
 * ```
 */
export function getRules(args?: GetRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetRulesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cloud_monitor/getRules:getRules", {
        "alertStates": args.alertStates,
        "enableStates": args.enableStates,
        "ids": args.ids,
        "levels": args.levels,
        "nameRegex": args.nameRegex,
        "namespaces": args.namespaces,
        "outputFile": args.outputFile,
        "ruleName": args.ruleName,
    }, opts);
}

/**
 * A collection of arguments for invoking getRules.
 */
export interface GetRulesArgs {
    /**
     * The alert state of the cloud monitor rule. Valid values: `altering`, `normal`.
     */
    alertStates?: string[];
    /**
     * The enable state of the cloud monitor rule. Valid values: `enable`, `disable`.
     */
    enableStates?: string[];
    /**
     * A list of cloud monitor ids.
     */
    ids?: string[];
    /**
     * The level of the cloud monitor rule. Valid values: `critical`, `warning`, `notice`.
     */
    levels?: string[];
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * The namespace of the cloud monitor rule.
     */
    namespaces?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The name of the cloud monitor rule. This field support fuzzy query.
     */
    ruleName?: string;
}

/**
 * A collection of values returned by getRules.
 */
export interface GetRulesResult {
    /**
     * The alert state of the cloud monitor rule.
     */
    readonly alertStates?: string[];
    /**
     * The enable state of the cloud monitor rule.
     */
    readonly enableStates?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * The level of the cloud monitor rule.
     */
    readonly levels?: string[];
    readonly nameRegex?: string;
    /**
     * The namespace of the cloud monitor rule.
     */
    readonly namespaces?: string[];
    readonly outputFile?: string;
    /**
     * The name of the cloud monitor rule.
     */
    readonly ruleName?: string;
    /**
     * The collection of query.
     */
    readonly rules: outputs.cloud_monitor.GetRulesRule[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cloud monitor rules
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cloud_monitor.getRules({
 *     ids: ["174402785374661****"],
 * });
 * ```
 */
export function getRulesOutput(args?: GetRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRulesResult> {
    return pulumi.output(args).apply((a: any) => getRules(a, opts))
}

/**
 * A collection of arguments for invoking getRules.
 */
export interface GetRulesOutputArgs {
    /**
     * The alert state of the cloud monitor rule. Valid values: `altering`, `normal`.
     */
    alertStates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The enable state of the cloud monitor rule. Valid values: `enable`, `disable`.
     */
    enableStates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of cloud monitor ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The level of the cloud monitor rule. Valid values: `critical`, `warning`, `notice`.
     */
    levels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The namespace of the cloud monitor rule.
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of the cloud monitor rule. This field support fuzzy query.
     */
    ruleName?: pulumi.Input<string>;
}
