// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ClusterBindArgs, ClusterBindState } from "./clusterBind";
export type ClusterBind = import("./clusterBind").ClusterBind;
export const ClusterBind: typeof import("./clusterBind").ClusterBind = null as any;
utilities.lazyLoad(exports, ["ClusterBind"], () => require("./clusterBind"));

export { ClustersArgs, ClustersResult, ClustersOutputArgs } from "./clusters";
export const clusters: typeof import("./clusters").clusters = null as any;
export const clustersOutput: typeof import("./clusters").clustersOutput = null as any;
utilities.lazyLoad(exports, ["clusters","clustersOutput"], () => require("./clusters"));

export { WorkspaceArgs, WorkspaceState } from "./workspace";
export type Workspace = import("./workspace").Workspace;
export const Workspace: typeof import("./workspace").Workspace = null as any;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));

export { WorkspacesArgs, WorkspacesResult, WorkspacesOutputArgs } from "./workspaces";
export const workspaces: typeof import("./workspaces").workspaces = null as any;
export const workspacesOutput: typeof import("./workspaces").workspacesOutput = null as any;
utilities.lazyLoad(exports, ["workspaces","workspacesOutput"], () => require("./workspaces"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:bioos/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "volcengine:bioos/clusterBind:ClusterBind":
                return new ClusterBind(name, <any>undefined, { urn })
            case "volcengine:bioos/workspace:Workspace":
                return new Workspace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "bioos/cluster", _module)
pulumi.runtime.registerResourceModule("volcengine", "bioos/clusterBind", _module)
pulumi.runtime.registerResourceModule("volcengine", "bioos/workspace", _module)
