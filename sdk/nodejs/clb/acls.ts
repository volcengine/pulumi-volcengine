// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of acls
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.clb.Acls({
 *     ids: ["acl-3ti8n0rurx4bwbh9jzdy"],
 * });
 * ```
 */
export function acls(args?: AclsArgs, opts?: pulumi.InvokeOptions): Promise<AclsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:clb/acls:Acls", {
        "aclName": args.aclName,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking Acls.
 */
export interface AclsArgs {
    /**
     * The name of acl.
     */
    aclName?: string;
    /**
     * A list of Acl IDs.
     */
    ids?: string[];
    /**
     * A Name Regex of Acl.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The ProjectName of Acl.
     */
    projectName?: string;
}

/**
 * A collection of values returned by Acls.
 */
export interface AclsResult {
    /**
     * The Name of Acl.
     */
    readonly aclName?: string;
    /**
     * The collection of Acl query.
     */
    readonly acls: outputs.clb.AclsAcl[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The ProjectName of Acl.
     */
    readonly projectName?: string;
    /**
     * The total count of Acl query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of acls
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.clb.Acls({
 *     ids: ["acl-3ti8n0rurx4bwbh9jzdy"],
 * });
 * ```
 */
export function aclsOutput(args?: AclsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<AclsResult> {
    return pulumi.output(args).apply((a: any) => acls(a, opts))
}

/**
 * A collection of arguments for invoking Acls.
 */
export interface AclsOutputArgs {
    /**
     * The name of acl.
     */
    aclName?: pulumi.Input<string>;
    /**
     * A list of Acl IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of Acl.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ProjectName of Acl.
     */
    projectName?: pulumi.Input<string>;
}
