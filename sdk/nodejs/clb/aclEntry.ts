// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage acl entry
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooAcl = new volcengine.clb.Acl("fooAcl", {
 *     aclName: "tf-test-3",
 *     description: "tf-test",
 * });
 * const fooAclEntry = new volcengine.clb.AclEntry("fooAclEntry", {
 *     aclId: fooAcl.id,
 *     description: "tf acl entry desc demo",
 *     entry: "192.2.2.1/32",
 * });
 * ```
 *
 * ## Import
 *
 * AclEntry can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:clb/aclEntry:AclEntry default ID is a string concatenated with colons(AclId:Entry)
 * ```
 */
export class AclEntry extends pulumi.CustomResource {
    /**
     * Get an existing AclEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AclEntryState, opts?: pulumi.CustomResourceOptions): AclEntry {
        return new AclEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:clb/aclEntry:AclEntry';

    /**
     * Returns true if the given object is an instance of AclEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AclEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AclEntry.__pulumiType;
    }

    /**
     * The ID of Acl.
     */
    public readonly aclId!: pulumi.Output<string>;
    /**
     * The description of the AclEntry.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The content of the AclEntry.
     */
    public readonly entry!: pulumi.Output<string>;

    /**
     * Create a AclEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AclEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AclEntryArgs | AclEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AclEntryState | undefined;
            resourceInputs["aclId"] = state ? state.aclId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["entry"] = state ? state.entry : undefined;
        } else {
            const args = argsOrState as AclEntryArgs | undefined;
            if ((!args || args.aclId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aclId'");
            }
            if ((!args || args.entry === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entry'");
            }
            resourceInputs["aclId"] = args ? args.aclId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["entry"] = args ? args.entry : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AclEntry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AclEntry resources.
 */
export interface AclEntryState {
    /**
     * The ID of Acl.
     */
    aclId?: pulumi.Input<string>;
    /**
     * The description of the AclEntry.
     */
    description?: pulumi.Input<string>;
    /**
     * The content of the AclEntry.
     */
    entry?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AclEntry resource.
 */
export interface AclEntryArgs {
    /**
     * The ID of Acl.
     */
    aclId: pulumi.Input<string>;
    /**
     * The description of the AclEntry.
     */
    description?: pulumi.Input<string>;
    /**
     * The content of the AclEntry.
     */
    entry: pulumi.Input<string>;
}
