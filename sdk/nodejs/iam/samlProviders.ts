// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of iam saml providers
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.iam.SamlProviders({});
 * ```
 */
export function samlProviders(args?: SamlProvidersArgs, opts?: pulumi.InvokeOptions): Promise<SamlProvidersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:iam/samlProviders:SamlProviders", {
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking SamlProviders.
 */
export interface SamlProvidersArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by SamlProviders.
 */
export interface SamlProvidersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    /**
     * The collection of query.
     */
    readonly providers: outputs.iam.SamlProvidersProvider[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of iam saml providers
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.iam.SamlProviders({});
 * ```
 */
export function samlProvidersOutput(args?: SamlProvidersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<SamlProvidersResult> {
    return pulumi.output(args).apply((a: any) => samlProviders(a, opts))
}

/**
 * A collection of arguments for invoking SamlProviders.
 */
export interface SamlProvidersOutputArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
