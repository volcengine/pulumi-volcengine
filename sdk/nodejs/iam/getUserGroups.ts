// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of iam user groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooUserGroup = new volcengine.iam.UserGroup("fooUserGroup", {
 *     description: "acc-test",
 *     displayName: "acc-test",
 *     userGroupName: "acc-test-group",
 * });
 * const fooUserGroups = volcengine.iam.getUserGroups({
 *     query: "acc-test",
 * });
 * ```
 */
export function getUserGroups(args?: GetUserGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetUserGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:iam/getUserGroups:getUserGroups", {
        "outputFile": args.outputFile,
        "query": args.query,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserGroups.
 */
export interface GetUserGroupsArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * Fuzzy search, supports searching for user group names, display names, and remarks.
     */
    query?: string;
}

/**
 * A collection of values returned by getUserGroups.
 */
export interface GetUserGroupsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    readonly query?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The collection of query.
     */
    readonly userGroups: outputs.iam.GetUserGroupsUserGroup[];
}
/**
 * Use this data source to query detailed information of iam user groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooUserGroup = new volcengine.iam.UserGroup("fooUserGroup", {
 *     description: "acc-test",
 *     displayName: "acc-test",
 *     userGroupName: "acc-test-group",
 * });
 * const fooUserGroups = volcengine.iam.getUserGroups({
 *     query: "acc-test",
 * });
 * ```
 */
export function getUserGroupsOutput(args?: GetUserGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserGroupsResult> {
    return pulumi.output(args).apply((a: any) => getUserGroups(a, opts))
}

/**
 * A collection of arguments for invoking getUserGroups.
 */
export interface GetUserGroupsOutputArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Fuzzy search, supports searching for user group names, display names, and remarks.
     */
    query?: pulumi.Input<string>;
}
