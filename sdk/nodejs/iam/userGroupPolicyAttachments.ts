// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of iam user group policy attachments
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPolicy = new volcengine.iam.Policy("fooPolicy", {
 *     policyName: "acc-test-policy",
 *     description: "acc-test",
 *     policyDocument: "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
 * });
 * const fooUserGroup = new volcengine.iam.UserGroup("fooUserGroup", {
 *     userGroupName: "acc-test-group",
 *     description: "acc-test",
 *     displayName: "acc-test",
 * });
 * const fooUserGroupPolicyAttachment = new volcengine.iam.UserGroupPolicyAttachment("fooUserGroupPolicyAttachment", {
 *     policyName: fooPolicy.policyName,
 *     policyType: "Custom",
 *     userGroupName: fooUserGroup.userGroupName,
 * });
 * const fooUserGroupPolicyAttachments = volcengine.iam.getUserGroupPolicyAttachmentsOutput({
 *     userGroupName: fooUserGroupPolicyAttachment.userGroupName,
 * });
 * ```
 */
/** @deprecated volcengine.iam.UserGroupPolicyAttachments has been deprecated in favor of volcengine.iam.getUserGroupPolicyAttachments */
export function userGroupPolicyAttachments(args: UserGroupPolicyAttachmentsArgs, opts?: pulumi.InvokeOptions): Promise<UserGroupPolicyAttachmentsResult> {
    pulumi.log.warn("userGroupPolicyAttachments is deprecated: volcengine.iam.UserGroupPolicyAttachments has been deprecated in favor of volcengine.iam.getUserGroupPolicyAttachments")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:iam/userGroupPolicyAttachments:UserGroupPolicyAttachments", {
        "outputFile": args.outputFile,
        "userGroupName": args.userGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking UserGroupPolicyAttachments.
 */
export interface UserGroupPolicyAttachmentsArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * A name of user group.
     */
    userGroupName: string;
}

/**
 * A collection of values returned by UserGroupPolicyAttachments.
 */
export interface UserGroupPolicyAttachmentsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    /**
     * The collection of query.
     */
    readonly policies: outputs.iam.UserGroupPolicyAttachmentsPolicy[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    readonly userGroupName: string;
}
/**
 * Use this data source to query detailed information of iam user group policy attachments
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPolicy = new volcengine.iam.Policy("fooPolicy", {
 *     policyName: "acc-test-policy",
 *     description: "acc-test",
 *     policyDocument: "{\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"auto_scaling:DescribeScalingGroups\"],\"Resource\":[\"*\"]}]}",
 * });
 * const fooUserGroup = new volcengine.iam.UserGroup("fooUserGroup", {
 *     userGroupName: "acc-test-group",
 *     description: "acc-test",
 *     displayName: "acc-test",
 * });
 * const fooUserGroupPolicyAttachment = new volcengine.iam.UserGroupPolicyAttachment("fooUserGroupPolicyAttachment", {
 *     policyName: fooPolicy.policyName,
 *     policyType: "Custom",
 *     userGroupName: fooUserGroup.userGroupName,
 * });
 * const fooUserGroupPolicyAttachments = volcengine.iam.getUserGroupPolicyAttachmentsOutput({
 *     userGroupName: fooUserGroupPolicyAttachment.userGroupName,
 * });
 * ```
 */
/** @deprecated volcengine.iam.UserGroupPolicyAttachments has been deprecated in favor of volcengine.iam.getUserGroupPolicyAttachments */
export function userGroupPolicyAttachmentsOutput(args: UserGroupPolicyAttachmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<UserGroupPolicyAttachmentsResult> {
    return pulumi.output(args).apply((a: any) => userGroupPolicyAttachments(a, opts))
}

/**
 * A collection of arguments for invoking UserGroupPolicyAttachments.
 */
export interface UserGroupPolicyAttachmentsOutputArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A name of user group.
     */
    userGroupName: pulumi.Input<string>;
}
