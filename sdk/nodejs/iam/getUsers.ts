// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of iam users
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooUser = new volcengine.iam.User("fooUser", {
 *     userName: "acc-test-user",
 *     description: "acc test",
 *     displayName: "name",
 * });
 * const fooUsers = volcengine.iam.getUsersOutput({
 *     userNames: [fooUser.userName],
 * });
 * ```
 */
export function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:iam/getUsers:getUsers", {
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "userNames": args.userNames,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    /**
     * A Name Regex of IAM.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * A list of user names.
     */
    userNames?: string[];
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The total count of user query.
     */
    readonly totalCount: number;
    readonly userNames?: string[];
    /**
     * The collection of user.
     */
    readonly users: outputs.iam.GetUsersUser[];
}
/**
 * Use this data source to query detailed information of iam users
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooUser = new volcengine.iam.User("fooUser", {
 *     userName: "acc-test-user",
 *     description: "acc test",
 *     displayName: "name",
 * });
 * const fooUsers = volcengine.iam.getUsersOutput({
 *     userNames: [fooUser.userName],
 * });
 * ```
 */
export function getUsersOutput(args?: GetUsersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersResult> {
    return pulumi.output(args).apply((a: any) => getUsers(a, opts))
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersOutputArgs {
    /**
     * A Name Regex of IAM.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A list of user names.
     */
    userNames?: pulumi.Input<pulumi.Input<string>[]>;
}
