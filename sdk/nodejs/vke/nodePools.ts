// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vke node pools
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const vkeTest = volcengine.vke.NodePools({
 *     clusterIds: ["ccabe57fqtofgrbln3dog"],
 *     name: "demo",
 * });
 * ```
 */
export function nodePools(args?: NodePoolsArgs, opts?: pulumi.InvokeOptions): Promise<NodePoolsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vke/nodePools:NodePools", {
        "autoScalingEnabled": args.autoScalingEnabled,
        "clusterId": args.clusterId,
        "clusterIds": args.clusterIds,
        "createClientToken": args.createClientToken,
        "ids": args.ids,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "statuses": args.statuses,
        "tags": args.tags,
        "updateClientToken": args.updateClientToken,
    }, opts);
}

/**
 * A collection of arguments for invoking NodePools.
 */
export interface NodePoolsArgs {
    /**
     * Is enabled of AutoScaling.
     */
    autoScalingEnabled?: boolean;
    /**
     * The ClusterId of NodePool.
     */
    clusterId?: string;
    /**
     * The ClusterIds of NodePool IDs.
     */
    clusterIds?: string[];
    /**
     * The ClientToken when successfully created.
     */
    createClientToken?: string;
    /**
     * The IDs of NodePool.
     */
    ids?: string[];
    /**
     * The Name of NodePool.
     */
    name?: string;
    /**
     * A Name Regex of NodePool.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The Status of NodePool.
     */
    statuses?: inputs.vke.NodePoolsStatus[];
    /**
     * Tags.
     */
    tags?: inputs.vke.NodePoolsTag[];
    /**
     * The ClientToken when last update was successful.
     */
    updateClientToken?: string;
}

/**
 * A collection of values returned by NodePools.
 */
export interface NodePoolsResult {
    readonly autoScalingEnabled?: boolean;
    /**
     * The ClusterId of NodePool.
     */
    readonly clusterId?: string;
    readonly clusterIds?: string[];
    /**
     * The ClientToken when successfully created.
     */
    readonly createClientToken?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * The Name of NodePool.
     */
    readonly name?: string;
    readonly nameRegex?: string;
    /**
     * The collection of NodePools query.
     */
    readonly nodePools: outputs.vke.NodePoolsNodePool[];
    readonly outputFile?: string;
    readonly statuses?: outputs.vke.NodePoolsStatus[];
    /**
     * Tags of the NodePool.
     */
    readonly tags?: outputs.vke.NodePoolsTag[];
    /**
     * Returns the total amount of the data list.
     */
    readonly totalCount: number;
    /**
     * The ClientToken when last update was successful.
     */
    readonly updateClientToken?: string;
}
/**
 * Use this data source to query detailed information of vke node pools
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const vkeTest = volcengine.vke.NodePools({
 *     clusterIds: ["ccabe57fqtofgrbln3dog"],
 *     name: "demo",
 * });
 * ```
 */
export function nodePoolsOutput(args?: NodePoolsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<NodePoolsResult> {
    return pulumi.output(args).apply((a: any) => nodePools(a, opts))
}

/**
 * A collection of arguments for invoking NodePools.
 */
export interface NodePoolsOutputArgs {
    /**
     * Is enabled of AutoScaling.
     */
    autoScalingEnabled?: pulumi.Input<boolean>;
    /**
     * The ClusterId of NodePool.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The ClusterIds of NodePool IDs.
     */
    clusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ClientToken when successfully created.
     */
    createClientToken?: pulumi.Input<string>;
    /**
     * The IDs of NodePool.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name of NodePool.
     */
    name?: pulumi.Input<string>;
    /**
     * A Name Regex of NodePool.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The Status of NodePool.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.vke.NodePoolsStatusArgs>[]>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vke.NodePoolsTagArgs>[]>;
    /**
     * The ClientToken when last update was successful.
     */
    updateClientToken?: pulumi.Input<string>;
}
