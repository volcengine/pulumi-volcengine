// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vke support resource types
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vke.getSupportResourceTypes({});
 * ```
 */
export function getSupportResourceTypes(args?: GetSupportResourceTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetSupportResourceTypesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vke/getSupportResourceTypes:getSupportResourceTypes", {
        "outputFile": args.outputFile,
        "resourceTypes": args.resourceTypes,
        "zoneIds": args.zoneIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getSupportResourceTypes.
 */
export interface GetSupportResourceTypesArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * A list of resource types. Support Ecs or Zone.
     */
    resourceTypes?: string[];
    /**
     * A list of zone ids. If no parameter value, all available regions is returned.
     */
    zoneIds?: string[];
}

/**
 * A collection of values returned by getSupportResourceTypes.
 */
export interface GetSupportResourceTypesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    readonly resourceTypes?: string[];
    /**
     * The collection of query.
     */
    readonly resources: outputs.vke.GetSupportResourceTypesResource[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    readonly zoneIds?: string[];
}
/**
 * Use this data source to query detailed information of vke support resource types
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vke.getSupportResourceTypes({});
 * ```
 */
export function getSupportResourceTypesOutput(args?: GetSupportResourceTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSupportResourceTypesResult> {
    return pulumi.output(args).apply((a: any) => getSupportResourceTypes(a, opts))
}

/**
 * A collection of arguments for invoking getSupportResourceTypes.
 */
export interface GetSupportResourceTypesOutputArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A list of resource types. Support Ecs or Zone.
     */
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of zone ids. If no parameter value, all available regions is returned.
     */
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}
