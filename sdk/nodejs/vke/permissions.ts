// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vke permissions
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.vke.getPermissions({
 *     granteeType: "User",
 *     ids: ["apd10o9jhqqno0ba25****"],
 * });
 * ```
 */
/** @deprecated volcengine.vke.Permissions has been deprecated in favor of volcengine.vke.getPermissions */
export function permissions(args?: PermissionsArgs, opts?: pulumi.InvokeOptions): Promise<PermissionsResult> {
    pulumi.log.warn("permissions is deprecated: volcengine.vke.Permissions has been deprecated in favor of volcengine.vke.getPermissions")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vke/permissions:Permissions", {
        "clusterIds": args.clusterIds,
        "granteeIds": args.granteeIds,
        "granteeType": args.granteeType,
        "ids": args.ids,
        "namespaces": args.namespaces,
        "outputFile": args.outputFile,
        "roleNames": args.roleNames,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking Permissions.
 */
export interface PermissionsArgs {
    /**
     * A list of Cluster IDs.
     */
    clusterIds?: string[];
    /**
     * A list of Grantee IDs.
     */
    granteeIds?: number[];
    /**
     * The type of Grantee. Valid values: `User`, `Role`.
     */
    granteeType?: string;
    /**
     * A list of RBAC Permission IDs.
     */
    ids?: string[];
    /**
     * A list of Namespaces.
     */
    namespaces?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * A list of RBAC Role Names.
     */
    roleNames?: string[];
    /**
     * The status of RBAC Permission.
     */
    status?: string;
}

/**
 * A collection of values returned by Permissions.
 */
export interface PermissionsResult {
    /**
     * The collection of query.
     */
    readonly accessPolicies: outputs.vke.PermissionsAccessPolicy[];
    readonly clusterIds?: string[];
    readonly granteeIds?: number[];
    /**
     * The type of the Grantee.
     */
    readonly granteeType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly namespaces?: string[];
    readonly outputFile?: string;
    readonly roleNames?: string[];
    /**
     * The status of the RBAC Permission.
     */
    readonly status?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of vke permissions
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.vke.getPermissions({
 *     granteeType: "User",
 *     ids: ["apd10o9jhqqno0ba25****"],
 * });
 * ```
 */
/** @deprecated volcengine.vke.Permissions has been deprecated in favor of volcengine.vke.getPermissions */
export function permissionsOutput(args?: PermissionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<PermissionsResult> {
    return pulumi.output(args).apply((a: any) => permissions(a, opts))
}

/**
 * A collection of arguments for invoking Permissions.
 */
export interface PermissionsOutputArgs {
    /**
     * A list of Cluster IDs.
     */
    clusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Grantee IDs.
     */
    granteeIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The type of Grantee. Valid values: `User`, `Role`.
     */
    granteeType?: pulumi.Input<string>;
    /**
     * A list of RBAC Permission IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Namespaces.
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A list of RBAC Role Names.
     */
    roleNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of RBAC Permission.
     */
    status?: pulumi.Input<string>;
}
