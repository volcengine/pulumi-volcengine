// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vke cluster
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.vke.Cluster("foo", {
 *     clusterConfig: {
 *         apiServerPublicAccessConfig: {
 *             publicAccessNetworkConfig: {
 *                 bandwidth: 1,
 *                 billingType: "PostPaidByBandwidth",
 *             },
 *         },
 *         apiServerPublicAccessEnabled: true,
 *         resourcePublicAccessDefaultEnabled: true,
 *         subnetIds: ["subnet-rrqvkt2nq1hcv0x57ccqf3x"],
 *     },
 *     deleteProtectionEnabled: false,
 *     description: "created by terraform",
 *     loggingConfig: {
 *         logSetups: [{
 *             enabled: false,
 *             logTtl: 30,
 *             logType: "Audit",
 *         }],
 *     },
 *     podsConfig: {
 *         podNetworkMode: "VpcCniShared",
 *         vpcCniConfig: {
 *             subnetIds: [
 *                 "subnet-rrqvkt2nq1hcv0x57ccqf3x",
 *                 "subnet-miklcqh75vcw5smt1amo4ik5",
 *                 "subnet-13g0x0ytpm0hs3n6nu5j591lv",
 *             ],
 *         },
 *     },
 *     servicesConfig: {
 *         serviceCidrsv4s: ["172.30.0.0/18"],
 *     },
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * VkeCluster can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:vke/cluster:Cluster default cc9l74mvqtofjnoj5****
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vke/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
     */
    public readonly clientToken!: pulumi.Output<string | undefined>;
    /**
     * The config of the cluster.
     */
    public readonly clusterConfig!: pulumi.Output<outputs.vke.ClusterClusterConfig>;
    /**
     * The delete protection of the cluster, the value is `true` or `false`.
     */
    public readonly deleteProtectionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The description of the cluster.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Eip allocation Id.
     */
    public /*out*/ readonly eipAllocationId!: pulumi.Output<string>;
    /**
     * Kubeconfig data with private network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
     */
    public /*out*/ readonly kubeconfigPrivate!: pulumi.Output<string>;
    /**
     * Kubeconfig data with public network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
     */
    public /*out*/ readonly kubeconfigPublic!: pulumi.Output<string>;
    /**
     * The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
     */
    public readonly kubernetesVersion!: pulumi.Output<string>;
    /**
     * Cluster log configuration information.
     */
    public readonly loggingConfig!: pulumi.Output<outputs.vke.ClusterLoggingConfig | undefined>;
    /**
     * The name of the cluster.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The config of the pods.
     */
    public readonly podsConfig!: pulumi.Output<outputs.vke.ClusterPodsConfig>;
    /**
     * The config of the services.
     */
    public readonly servicesConfig!: pulumi.Output<outputs.vke.ClusterServicesConfig>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.vke.ClusterTag[] | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["clientToken"] = state ? state.clientToken : undefined;
            resourceInputs["clusterConfig"] = state ? state.clusterConfig : undefined;
            resourceInputs["deleteProtectionEnabled"] = state ? state.deleteProtectionEnabled : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["eipAllocationId"] = state ? state.eipAllocationId : undefined;
            resourceInputs["kubeconfigPrivate"] = state ? state.kubeconfigPrivate : undefined;
            resourceInputs["kubeconfigPublic"] = state ? state.kubeconfigPublic : undefined;
            resourceInputs["kubernetesVersion"] = state ? state.kubernetesVersion : undefined;
            resourceInputs["loggingConfig"] = state ? state.loggingConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["podsConfig"] = state ? state.podsConfig : undefined;
            resourceInputs["servicesConfig"] = state ? state.servicesConfig : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.clusterConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterConfig'");
            }
            if ((!args || args.podsConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'podsConfig'");
            }
            if ((!args || args.servicesConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servicesConfig'");
            }
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["clusterConfig"] = args ? args.clusterConfig : undefined;
            resourceInputs["deleteProtectionEnabled"] = args ? args.deleteProtectionEnabled : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["kubernetesVersion"] = args ? args.kubernetesVersion : undefined;
            resourceInputs["loggingConfig"] = args ? args.loggingConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["podsConfig"] = args ? args.podsConfig : undefined;
            resourceInputs["servicesConfig"] = args ? args.servicesConfig : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["eipAllocationId"] = undefined /*out*/;
            resourceInputs["kubeconfigPrivate"] = undefined /*out*/;
            resourceInputs["kubeconfigPublic"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The config of the cluster.
     */
    clusterConfig?: pulumi.Input<inputs.vke.ClusterClusterConfig>;
    /**
     * The delete protection of the cluster, the value is `true` or `false`.
     */
    deleteProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * The description of the cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * Eip allocation Id.
     */
    eipAllocationId?: pulumi.Input<string>;
    /**
     * Kubeconfig data with private network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
     */
    kubeconfigPrivate?: pulumi.Input<string>;
    /**
     * Kubeconfig data with public network access, returned in BASE64 encoding, it is suggested to use vkeKubeconfig instead.
     */
    kubeconfigPublic?: pulumi.Input<string>;
    /**
     * The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * Cluster log configuration information.
     */
    loggingConfig?: pulumi.Input<inputs.vke.ClusterLoggingConfig>;
    /**
     * The name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * The config of the pods.
     */
    podsConfig?: pulumi.Input<inputs.vke.ClusterPodsConfig>;
    /**
     * The config of the services.
     */
    servicesConfig?: pulumi.Input<inputs.vke.ClusterServicesConfig>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vke.ClusterTag>[]>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * ClientToken is a case-sensitive string of no more than 64 ASCII characters passed in by the caller.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The config of the cluster.
     */
    clusterConfig: pulumi.Input<inputs.vke.ClusterClusterConfig>;
    /**
     * The delete protection of the cluster, the value is `true` or `false`.
     */
    deleteProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * The description of the cluster.
     */
    description?: pulumi.Input<string>;
    /**
     * The version of Kubernetes specified when creating a VKE cluster (specified to patch version), if not specified, the latest Kubernetes version supported by VKE is used by default, which is a 3-segment version format starting with a lowercase v, that is, KubernetesVersion with IsLatestVersion=True in the return value of ListSupportedVersions.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * Cluster log configuration information.
     */
    loggingConfig?: pulumi.Input<inputs.vke.ClusterLoggingConfig>;
    /**
     * The name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * The config of the pods.
     */
    podsConfig: pulumi.Input<inputs.vke.ClusterPodsConfig>;
    /**
     * The config of the services.
     */
    servicesConfig: pulumi.Input<inputs.vke.ClusterServicesConfig>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vke.ClusterTag>[]>;
}
