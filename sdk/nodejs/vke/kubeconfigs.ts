// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vke kubeconfigs
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vke.Kubeconfigs({
 *     clusterIds: ["cce7hb97qtofmj1oi4udg"],
 *     types: [
 *         "Private",
 *         "Public",
 *     ],
 * });
 * ```
 */
export function kubeconfigs(args?: KubeconfigsArgs, opts?: pulumi.InvokeOptions): Promise<KubeconfigsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vke/kubeconfigs:Kubeconfigs", {
        "clusterIds": args.clusterIds,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "pageNumber": args.pageNumber,
        "pageSize": args.pageSize,
        "types": args.types,
    }, opts);
}

/**
 * A collection of arguments for invoking Kubeconfigs.
 */
export interface KubeconfigsArgs {
    /**
     * A list of Cluster IDs.
     */
    clusterIds?: string[];
    /**
     * A list of Kubeconfig IDs.
     */
    ids?: string[];
    /**
     * A Name Regex of Kubeconfig.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The page number of Kubeconfigs query.
     */
    pageNumber?: number;
    /**
     * The page size of Kubeconfigs query.
     */
    pageSize?: number;
    /**
     * The type of Kubeconfigs query.
     */
    types?: string[];
}

/**
 * A collection of values returned by Kubeconfigs.
 */
export interface KubeconfigsResult {
    readonly clusterIds?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * The collection of VkeKubeconfig query.
     */
    readonly kubeconfigs: outputs.vke.KubeconfigsKubeconfig[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    readonly pageNumber: number;
    readonly pageSize: number;
    /**
     * The total count of Kubeconfig query.
     */
    readonly totalCount: number;
    readonly types?: string[];
}
/**
 * Use this data source to query detailed information of vke kubeconfigs
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vke.Kubeconfigs({
 *     clusterIds: ["cce7hb97qtofmj1oi4udg"],
 *     types: [
 *         "Private",
 *         "Public",
 *     ],
 * });
 * ```
 */
export function kubeconfigsOutput(args?: KubeconfigsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<KubeconfigsResult> {
    return pulumi.output(args).apply((a: any) => kubeconfigs(a, opts))
}

/**
 * A collection of arguments for invoking Kubeconfigs.
 */
export interface KubeconfigsOutputArgs {
    /**
     * A list of Cluster IDs.
     */
    clusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Kubeconfig IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of Kubeconfig.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The page number of Kubeconfigs query.
     */
    pageNumber?: pulumi.Input<number>;
    /**
     * The page size of Kubeconfigs query.
     */
    pageSize?: pulumi.Input<number>;
    /**
     * The type of Kubeconfigs query.
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
}
