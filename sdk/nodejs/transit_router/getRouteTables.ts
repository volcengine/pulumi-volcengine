// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of transit router route tables
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooTransitRouter = new volcengine.transit_router.TransitRouter("fooTransitRouter", {
 *     transitRouterName: "test-tf-acc",
 *     description: "test-tf-acc",
 * });
 * const fooRouteTable = new volcengine.transit_router.RouteTable("fooRouteTable", {
 *     description: "tf-test-acc-description",
 *     transitRouterRouteTableName: "tf-table-test-acc",
 *     transitRouterId: fooTransitRouter.id,
 * });
 * const default = volcengine.transit_router.getRouteTablesOutput({
 *     transitRouterId: fooTransitRouter.id,
 *     ids: [fooRouteTable.transitRouterRouteTableId],
 * });
 * ```
 */
export function getRouteTables(args: GetRouteTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteTablesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:transit_router/getRouteTables:getRouteTables", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "tags": args.tags,
        "transitRouterId": args.transitRouterId,
        "transitRouterRouteTableType": args.transitRouterRouteTableType,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteTables.
 */
export interface GetRouteTablesArgs {
    /**
     * The ids of the transit router route table.
     */
    ids?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * Tags.
     */
    tags?: inputs.transit_router.GetRouteTablesTag[];
    /**
     * The id of the transit router.
     */
    transitRouterId: string;
    /**
     * The type of the route table. The value can be System or Custom.
     */
    transitRouterRouteTableType?: string;
}

/**
 * A collection of values returned by getRouteTables.
 */
export interface GetRouteTablesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly outputFile?: string;
    /**
     * The list of route tables query.
     */
    readonly routeTables: outputs.transit_router.GetRouteTablesRouteTable[];
    /**
     * Tags.
     */
    readonly tags?: outputs.transit_router.GetRouteTablesTag[];
    /**
     * The total count of data query.
     */
    readonly totalCount: number;
    readonly transitRouterId: string;
    /**
     * The type of route table.
     */
    readonly transitRouterRouteTableType?: string;
}
/**
 * Use this data source to query detailed information of transit router route tables
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooTransitRouter = new volcengine.transit_router.TransitRouter("fooTransitRouter", {
 *     transitRouterName: "test-tf-acc",
 *     description: "test-tf-acc",
 * });
 * const fooRouteTable = new volcengine.transit_router.RouteTable("fooRouteTable", {
 *     description: "tf-test-acc-description",
 *     transitRouterRouteTableName: "tf-table-test-acc",
 *     transitRouterId: fooTransitRouter.id,
 * });
 * const default = volcengine.transit_router.getRouteTablesOutput({
 *     transitRouterId: fooTransitRouter.id,
 *     ids: [fooRouteTable.transitRouterRouteTableId],
 * });
 * ```
 */
export function getRouteTablesOutput(args: GetRouteTablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouteTablesResult> {
    return pulumi.output(args).apply((a: any) => getRouteTables(a, opts))
}

/**
 * A collection of arguments for invoking getRouteTables.
 */
export interface GetRouteTablesOutputArgs {
    /**
     * The ids of the transit router route table.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.GetRouteTablesTagArgs>[]>;
    /**
     * The id of the transit router.
     */
    transitRouterId: pulumi.Input<string>;
    /**
     * The type of the route table. The value can be System or Custom.
     */
    transitRouterRouteTableType?: pulumi.Input<string>;
}
