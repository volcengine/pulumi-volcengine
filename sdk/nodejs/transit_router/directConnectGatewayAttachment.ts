// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage transit router direct connect gateway attachment
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooTransitRouter = new volcengine.transit_router.TransitRouter("fooTransitRouter", {
 *     transitRouterName: "acc-test-tf-acc",
 *     description: "acc-test-tf-acc",
 * });
 * const fooGateway = new volcengine.direct_connect.Gateway("fooGateway", {
 *     directConnectGatewayName: "acc-test-gateway-acc",
 *     description: "acc-test-acc",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * const fooDirectConnectGatewayAttachment = new volcengine.transit_router.DirectConnectGatewayAttachment("fooDirectConnectGatewayAttachment", {
 *     description: "acc-test-tf",
 *     transitRouterAttachmentName: "acc-test-tf",
 *     transitRouterId: fooTransitRouter.id,
 *     directConnectGatewayId: fooGateway.id,
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * TransitRouterDirectConnectGatewayAttachment can be imported using the transitRouterId:attachmentId, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:transit_router/directConnectGatewayAttachment:DirectConnectGatewayAttachment default tr-2d6fr7mzya2gw58ozfes5g2oh:tr-attach-7qthudw0ll6jmc****
 * ```
 */
export class DirectConnectGatewayAttachment extends pulumi.CustomResource {
    /**
     * Get an existing DirectConnectGatewayAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DirectConnectGatewayAttachmentState, opts?: pulumi.CustomResourceOptions): DirectConnectGatewayAttachment {
        return new DirectConnectGatewayAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:transit_router/directConnectGatewayAttachment:DirectConnectGatewayAttachment';

    /**
     * Returns true if the given object is an instance of DirectConnectGatewayAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DirectConnectGatewayAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DirectConnectGatewayAttachment.__pulumiType;
    }

    /**
     * The description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The id of the direct connect gateway.
     */
    public readonly directConnectGatewayId!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.transit_router.DirectConnectGatewayAttachmentTag[] | undefined>;
    /**
     * The id of the transit router direct connect gateway attachment.
     */
    public /*out*/ readonly transitRouterAttachmentId!: pulumi.Output<string>;
    /**
     * The name of the transit router direct connect gateway attachment.
     */
    public readonly transitRouterAttachmentName!: pulumi.Output<string>;
    /**
     * The id of the transit router.
     */
    public readonly transitRouterId!: pulumi.Output<string>;

    /**
     * Create a DirectConnectGatewayAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DirectConnectGatewayAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DirectConnectGatewayAttachmentArgs | DirectConnectGatewayAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DirectConnectGatewayAttachmentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["directConnectGatewayId"] = state ? state.directConnectGatewayId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["transitRouterAttachmentId"] = state ? state.transitRouterAttachmentId : undefined;
            resourceInputs["transitRouterAttachmentName"] = state ? state.transitRouterAttachmentName : undefined;
            resourceInputs["transitRouterId"] = state ? state.transitRouterId : undefined;
        } else {
            const args = argsOrState as DirectConnectGatewayAttachmentArgs | undefined;
            if ((!args || args.directConnectGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'directConnectGatewayId'");
            }
            if ((!args || args.transitRouterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["directConnectGatewayId"] = args ? args.directConnectGatewayId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitRouterAttachmentName"] = args ? args.transitRouterAttachmentName : undefined;
            resourceInputs["transitRouterId"] = args ? args.transitRouterId : undefined;
            resourceInputs["transitRouterAttachmentId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DirectConnectGatewayAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DirectConnectGatewayAttachment resources.
 */
export interface DirectConnectGatewayAttachmentState {
    /**
     * The description.
     */
    description?: pulumi.Input<string>;
    /**
     * The id of the direct connect gateway.
     */
    directConnectGatewayId?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.DirectConnectGatewayAttachmentTag>[]>;
    /**
     * The id of the transit router direct connect gateway attachment.
     */
    transitRouterAttachmentId?: pulumi.Input<string>;
    /**
     * The name of the transit router direct connect gateway attachment.
     */
    transitRouterAttachmentName?: pulumi.Input<string>;
    /**
     * The id of the transit router.
     */
    transitRouterId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DirectConnectGatewayAttachment resource.
 */
export interface DirectConnectGatewayAttachmentArgs {
    /**
     * The description.
     */
    description?: pulumi.Input<string>;
    /**
     * The id of the direct connect gateway.
     */
    directConnectGatewayId: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.DirectConnectGatewayAttachmentTag>[]>;
    /**
     * The name of the transit router direct connect gateway attachment.
     */
    transitRouterAttachmentName?: pulumi.Input<string>;
    /**
     * The id of the transit router.
     */
    transitRouterId: pulumi.Input<string>;
}
