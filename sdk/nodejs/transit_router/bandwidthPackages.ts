// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of transit router bandwidth packages
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooBandwidthPackage = new volcengine.transit_router.BandwidthPackage("fooBandwidthPackage", {
 *     transitRouterBandwidthPackageName: "acc-tf-test",
 *     description: "acc-test",
 *     bandwidth: 2,
 *     period: 1,
 *     renewType: "Manual",
 * });
 * const fooBandwidthPackages = volcengine.transit_router.getBandwidthPackagesOutput({
 *     ids: [fooBandwidthPackage.id],
 * });
 * ```
 */
/** @deprecated volcengine.transit_router.BandwidthPackages has been deprecated in favor of volcengine.transit_router.getBandwidthPackages */
export function bandwidthPackages(args?: BandwidthPackagesArgs, opts?: pulumi.InvokeOptions): Promise<BandwidthPackagesResult> {
    pulumi.log.warn("bandwidthPackages is deprecated: volcengine.transit_router.BandwidthPackages has been deprecated in favor of volcengine.transit_router.getBandwidthPackages")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:transit_router/bandwidthPackages:BandwidthPackages", {
        "ids": args.ids,
        "localGeographicRegionSetId": args.localGeographicRegionSetId,
        "outputFile": args.outputFile,
        "peerGeographicRegionSetId": args.peerGeographicRegionSetId,
        "projectName": args.projectName,
        "tags": args.tags,
        "transitRouterBandwidthPackageName": args.transitRouterBandwidthPackageName,
        "transitRouterPeerAttachmentId": args.transitRouterPeerAttachmentId,
    }, opts);
}

/**
 * A collection of arguments for invoking BandwidthPackages.
 */
export interface BandwidthPackagesArgs {
    /**
     * The ID list of the TransitRouter bandwidth package.
     */
    ids?: string[];
    /**
     * The local geographic region set ID.
     */
    localGeographicRegionSetId?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The peer geographic region set ID.
     */
    peerGeographicRegionSetId?: string;
    /**
     * The ProjectName of the TransitRouter bandwidth package.
     */
    projectName?: string;
    /**
     * Tags.
     */
    tags?: inputs.transit_router.BandwidthPackagesTag[];
    /**
     * The name of the TransitRouter bandwidth package.
     */
    transitRouterBandwidthPackageName?: string;
    /**
     * The ID of the peer attachment.
     */
    transitRouterPeerAttachmentId?: string;
}

/**
 * A collection of values returned by BandwidthPackages.
 */
export interface BandwidthPackagesResult {
    /**
     * The collection of query.
     */
    readonly bandwidthPackages: outputs.transit_router.BandwidthPackagesBandwidthPackage[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * The local geographic region set ID.
     */
    readonly localGeographicRegionSetId?: string;
    readonly outputFile?: string;
    /**
     * The peer geographic region set ID.
     */
    readonly peerGeographicRegionSetId?: string;
    /**
     * The ProjectName of the transit router bandwidth package.
     */
    readonly projectName?: string;
    /**
     * Tags.
     */
    readonly tags?: outputs.transit_router.BandwidthPackagesTag[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The name of the transit router bandwidth package.
     */
    readonly transitRouterBandwidthPackageName?: string;
    /**
     * The ID of the peer attachment.
     */
    readonly transitRouterPeerAttachmentId?: string;
}
/**
 * Use this data source to query detailed information of transit router bandwidth packages
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooBandwidthPackage = new volcengine.transit_router.BandwidthPackage("fooBandwidthPackage", {
 *     transitRouterBandwidthPackageName: "acc-tf-test",
 *     description: "acc-test",
 *     bandwidth: 2,
 *     period: 1,
 *     renewType: "Manual",
 * });
 * const fooBandwidthPackages = volcengine.transit_router.getBandwidthPackagesOutput({
 *     ids: [fooBandwidthPackage.id],
 * });
 * ```
 */
/** @deprecated volcengine.transit_router.BandwidthPackages has been deprecated in favor of volcengine.transit_router.getBandwidthPackages */
export function bandwidthPackagesOutput(args?: BandwidthPackagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<BandwidthPackagesResult> {
    return pulumi.output(args).apply((a: any) => bandwidthPackages(a, opts))
}

/**
 * A collection of arguments for invoking BandwidthPackages.
 */
export interface BandwidthPackagesOutputArgs {
    /**
     * The ID list of the TransitRouter bandwidth package.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The local geographic region set ID.
     */
    localGeographicRegionSetId?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The peer geographic region set ID.
     */
    peerGeographicRegionSetId?: pulumi.Input<string>;
    /**
     * The ProjectName of the TransitRouter bandwidth package.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.BandwidthPackagesTagArgs>[]>;
    /**
     * The name of the TransitRouter bandwidth package.
     */
    transitRouterBandwidthPackageName?: pulumi.Input<string>;
    /**
     * The ID of the peer attachment.
     */
    transitRouterPeerAttachmentId?: pulumi.Input<string>;
}
