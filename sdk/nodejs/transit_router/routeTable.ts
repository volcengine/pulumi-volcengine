// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage transit router route table
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooTransitRouter = new volcengine.transit_router.TransitRouter("fooTransitRouter", {
 *     transitRouterName: "test-tf-acc",
 *     description: "test-tf-acc",
 * });
 * const fooRouteTable = new volcengine.transit_router.RouteTable("fooRouteTable", {
 *     description: "tf-test-acc-description",
 *     transitRouterRouteTableName: "tf-table-test-acc",
 *     transitRouterId: fooTransitRouter.id,
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * transit router route table can be imported using the router id and route table id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:transit_router/routeTable:RouteTable default tr-2ff4v69tkxji859gp684cm14e:tr-rtb-hy13n2l4c6c0v****
 * ```
 */
export class RouteTable extends pulumi.CustomResource {
    /**
     * Get an existing RouteTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteTableState, opts?: pulumi.CustomResourceOptions): RouteTable {
        return new RouteTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:transit_router/routeTable:RouteTable';

    /**
     * Returns true if the given object is an instance of RouteTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouteTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouteTable.__pulumiType;
    }

    /**
     * The creation time of the route table.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * Description of the transit router route table.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The status of the route table.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.transit_router.RouteTableTag[] | undefined>;
    /**
     * Id of the transit router.
     */
    public readonly transitRouterId!: pulumi.Output<string>;
    /**
     * The id of the route table.
     */
    public /*out*/ readonly transitRouterRouteTableId!: pulumi.Output<string>;
    /**
     * The name of the route table.
     */
    public readonly transitRouterRouteTableName!: pulumi.Output<string>;
    /**
     * The type of route table.
     */
    public /*out*/ readonly transitRouterRouteTableType!: pulumi.Output<string>;
    /**
     * The update time of the route table.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a RouteTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouteTableArgs | RouteTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouteTableState | undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["transitRouterId"] = state ? state.transitRouterId : undefined;
            resourceInputs["transitRouterRouteTableId"] = state ? state.transitRouterRouteTableId : undefined;
            resourceInputs["transitRouterRouteTableName"] = state ? state.transitRouterRouteTableName : undefined;
            resourceInputs["transitRouterRouteTableType"] = state ? state.transitRouterRouteTableType : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as RouteTableArgs | undefined;
            if ((!args || args.transitRouterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitRouterId"] = args ? args.transitRouterId : undefined;
            resourceInputs["transitRouterRouteTableName"] = args ? args.transitRouterRouteTableName : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["transitRouterRouteTableId"] = undefined /*out*/;
            resourceInputs["transitRouterRouteTableType"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouteTable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouteTable resources.
 */
export interface RouteTableState {
    /**
     * The creation time of the route table.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * Description of the transit router route table.
     */
    description?: pulumi.Input<string>;
    /**
     * The status of the route table.
     */
    status?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.RouteTableTag>[]>;
    /**
     * Id of the transit router.
     */
    transitRouterId?: pulumi.Input<string>;
    /**
     * The id of the route table.
     */
    transitRouterRouteTableId?: pulumi.Input<string>;
    /**
     * The name of the route table.
     */
    transitRouterRouteTableName?: pulumi.Input<string>;
    /**
     * The type of route table.
     */
    transitRouterRouteTableType?: pulumi.Input<string>;
    /**
     * The update time of the route table.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouteTable resource.
 */
export interface RouteTableArgs {
    /**
     * Description of the transit router route table.
     */
    description?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.RouteTableTag>[]>;
    /**
     * Id of the transit router.
     */
    transitRouterId: pulumi.Input<string>;
    /**
     * The name of the route table.
     */
    transitRouterRouteTableName?: pulumi.Input<string>;
}
