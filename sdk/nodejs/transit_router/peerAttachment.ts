// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage transit router peer attachment
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooBandwidthPackage = new volcengine.transit_router.BandwidthPackage("fooBandwidthPackage", {
 *     transitRouterBandwidthPackageName: "acc-tf-test",
 *     description: "acc-test",
 *     bandwidth: 2,
 *     period: 1,
 *     renewType: "Manual",
 *     renewPeriod: 1,
 *     remainRenewTimes: -1,
 * });
 * const fooTransitRouter = new volcengine.transit_router.TransitRouter("fooTransitRouter", {
 *     transitRouterName: "acc-test-tf",
 *     description: "acc-test-tf",
 * });
 * const fooPeerAttachment = new volcengine.transit_router.PeerAttachment("fooPeerAttachment", {
 *     transitRouterId: fooTransitRouter.id,
 *     transitRouterAttachmentName: "acc-test-tf",
 *     description: "tf-test",
 *     peerTransitRouterId: "tr-xxx",
 *     peerTransitRouterRegionId: "cn-xx",
 *     transitRouterBandwidthPackageId: fooBandwidthPackage.id,
 *     bandwidth: 2,
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * TransitRouterPeerAttachment can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:transit_router/peerAttachment:PeerAttachment default tr-attach-12be67d0yh2io17q7y1au****
 * ```
 */
export class PeerAttachment extends pulumi.CustomResource {
    /**
     * Get an existing PeerAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PeerAttachmentState, opts?: pulumi.CustomResourceOptions): PeerAttachment {
        return new PeerAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:transit_router/peerAttachment:PeerAttachment';

    /**
     * Returns true if the given object is an instance of PeerAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PeerAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PeerAttachment.__pulumiType;
    }

    /**
     * The bandwidth of the transit router peer attachment. Unit: Mbps.
     */
    public readonly bandwidth!: pulumi.Output<number | undefined>;
    /**
     * The creation time of the transit router peer attachment.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The description of the transit router peer attachment.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The id of the peer transit router.
     */
    public readonly peerTransitRouterId!: pulumi.Output<string>;
    /**
     * The region id of the peer transit router.
     */
    public readonly peerTransitRouterRegionId!: pulumi.Output<string>;
    /**
     * The status of the transit router peer attachment.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.transit_router.PeerAttachmentTag[] | undefined>;
    /**
     * The name of the transit router peer attachment.
     */
    public readonly transitRouterAttachmentName!: pulumi.Output<string>;
    /**
     * The bandwidth package id of the transit router peer attachment. When specifying this field, the field `bandwidth` must also be specified.
     */
    public readonly transitRouterBandwidthPackageId!: pulumi.Output<string | undefined>;
    /**
     * The id of the local transit router.
     */
    public readonly transitRouterId!: pulumi.Output<string>;
    /**
     * The route table id of the transit router peer attachment.
     */
    public /*out*/ readonly transitRouterRouteTableId!: pulumi.Output<string>;
    /**
     * The update time of the transit router peer attachment.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a PeerAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PeerAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PeerAttachmentArgs | PeerAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PeerAttachmentState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["peerTransitRouterId"] = state ? state.peerTransitRouterId : undefined;
            resourceInputs["peerTransitRouterRegionId"] = state ? state.peerTransitRouterRegionId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["transitRouterAttachmentName"] = state ? state.transitRouterAttachmentName : undefined;
            resourceInputs["transitRouterBandwidthPackageId"] = state ? state.transitRouterBandwidthPackageId : undefined;
            resourceInputs["transitRouterId"] = state ? state.transitRouterId : undefined;
            resourceInputs["transitRouterRouteTableId"] = state ? state.transitRouterRouteTableId : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as PeerAttachmentArgs | undefined;
            if ((!args || args.peerTransitRouterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerTransitRouterId'");
            }
            if ((!args || args.peerTransitRouterRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerTransitRouterRegionId'");
            }
            if ((!args || args.transitRouterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterId'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["peerTransitRouterId"] = args ? args.peerTransitRouterId : undefined;
            resourceInputs["peerTransitRouterRegionId"] = args ? args.peerTransitRouterRegionId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitRouterAttachmentName"] = args ? args.transitRouterAttachmentName : undefined;
            resourceInputs["transitRouterBandwidthPackageId"] = args ? args.transitRouterBandwidthPackageId : undefined;
            resourceInputs["transitRouterId"] = args ? args.transitRouterId : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["transitRouterRouteTableId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PeerAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PeerAttachment resources.
 */
export interface PeerAttachmentState {
    /**
     * The bandwidth of the transit router peer attachment. Unit: Mbps.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The creation time of the transit router peer attachment.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The description of the transit router peer attachment.
     */
    description?: pulumi.Input<string>;
    /**
     * The id of the peer transit router.
     */
    peerTransitRouterId?: pulumi.Input<string>;
    /**
     * The region id of the peer transit router.
     */
    peerTransitRouterRegionId?: pulumi.Input<string>;
    /**
     * The status of the transit router peer attachment.
     */
    status?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.PeerAttachmentTag>[]>;
    /**
     * The name of the transit router peer attachment.
     */
    transitRouterAttachmentName?: pulumi.Input<string>;
    /**
     * The bandwidth package id of the transit router peer attachment. When specifying this field, the field `bandwidth` must also be specified.
     */
    transitRouterBandwidthPackageId?: pulumi.Input<string>;
    /**
     * The id of the local transit router.
     */
    transitRouterId?: pulumi.Input<string>;
    /**
     * The route table id of the transit router peer attachment.
     */
    transitRouterRouteTableId?: pulumi.Input<string>;
    /**
     * The update time of the transit router peer attachment.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PeerAttachment resource.
 */
export interface PeerAttachmentArgs {
    /**
     * The bandwidth of the transit router peer attachment. Unit: Mbps.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The description of the transit router peer attachment.
     */
    description?: pulumi.Input<string>;
    /**
     * The id of the peer transit router.
     */
    peerTransitRouterId: pulumi.Input<string>;
    /**
     * The region id of the peer transit router.
     */
    peerTransitRouterRegionId: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.PeerAttachmentTag>[]>;
    /**
     * The name of the transit router peer attachment.
     */
    transitRouterAttachmentName?: pulumi.Input<string>;
    /**
     * The bandwidth package id of the transit router peer attachment. When specifying this field, the field `bandwidth` must also be specified.
     */
    transitRouterBandwidthPackageId?: pulumi.Input<string>;
    /**
     * The id of the local transit router.
     */
    transitRouterId: pulumi.Input<string>;
}
