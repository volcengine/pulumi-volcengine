// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of transit router peer attachments
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.transit_router.getPeerAttachments({
 *     ids: ["tr-attach-12be67d0yh2io17q7y1au****"],
 * });
 * ```
 */
/** @deprecated volcengine.transit_router.PeerAttachments has been deprecated in favor of volcengine.transit_router.getPeerAttachments */
export function peerAttachments(args?: PeerAttachmentsArgs, opts?: pulumi.InvokeOptions): Promise<PeerAttachmentsResult> {
    pulumi.log.warn("peerAttachments is deprecated: volcengine.transit_router.PeerAttachments has been deprecated in favor of volcengine.transit_router.getPeerAttachments")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:transit_router/peerAttachments:PeerAttachments", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "peerTransitRouterId": args.peerTransitRouterId,
        "peerTransitRouterRegionId": args.peerTransitRouterRegionId,
        "tags": args.tags,
        "transitRouterAttachmentName": args.transitRouterAttachmentName,
        "transitRouterId": args.transitRouterId,
    }, opts);
}

/**
 * A collection of arguments for invoking PeerAttachments.
 */
export interface PeerAttachmentsArgs {
    /**
     * A list of IDs.
     */
    ids?: string[];
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The id of peer transit router.
     */
    peerTransitRouterId?: string;
    /**
     * The region id of peer transit router.
     */
    peerTransitRouterRegionId?: string;
    /**
     * Tags.
     */
    tags?: inputs.transit_router.PeerAttachmentsTag[];
    /**
     * The name of transit router peer attachment.
     */
    transitRouterAttachmentName?: string;
    /**
     * The id of local transit router.
     */
    transitRouterId?: string;
}

/**
 * A collection of values returned by PeerAttachments.
 */
export interface PeerAttachmentsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The id of the peer transit router.
     */
    readonly peerTransitRouterId?: string;
    /**
     * The region id of the peer transit router.
     */
    readonly peerTransitRouterRegionId?: string;
    /**
     * Tags.
     */
    readonly tags?: outputs.transit_router.PeerAttachmentsTag[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The name of the transit router peer attachment.
     */
    readonly transitRouterAttachmentName?: string;
    /**
     * The collection of query.
     */
    readonly transitRouterAttachments: outputs.transit_router.PeerAttachmentsTransitRouterAttachment[];
    /**
     * The id of the local transit router.
     */
    readonly transitRouterId?: string;
}
/**
 * Use this data source to query detailed information of transit router peer attachments
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.transit_router.getPeerAttachments({
 *     ids: ["tr-attach-12be67d0yh2io17q7y1au****"],
 * });
 * ```
 */
/** @deprecated volcengine.transit_router.PeerAttachments has been deprecated in favor of volcengine.transit_router.getPeerAttachments */
export function peerAttachmentsOutput(args?: PeerAttachmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<PeerAttachmentsResult> {
    return pulumi.output(args).apply((a: any) => peerAttachments(a, opts))
}

/**
 * A collection of arguments for invoking PeerAttachments.
 */
export interface PeerAttachmentsOutputArgs {
    /**
     * A list of IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The id of peer transit router.
     */
    peerTransitRouterId?: pulumi.Input<string>;
    /**
     * The region id of peer transit router.
     */
    peerTransitRouterRegionId?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.PeerAttachmentsTagArgs>[]>;
    /**
     * The name of transit router peer attachment.
     */
    transitRouterAttachmentName?: pulumi.Input<string>;
    /**
     * The id of local transit router.
     */
    transitRouterId?: pulumi.Input<string>;
}
