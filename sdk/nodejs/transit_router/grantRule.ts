// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage transit router grant rule
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooTransitRouter = new volcengine.transit_router.TransitRouter("fooTransitRouter", {
 *     transitRouterName: "acc-test-tf",
 *     description: "acc-test-tf",
 * });
 * const fooGrantRule = new volcengine.transit_router.GrantRule("fooGrantRule", {
 *     grantAccountId: "2000xxxxx",
 *     description: "acc-test-tf",
 *     transitRouterId: fooTransitRouter.id,
 * });
 * ```
 *
 * ## Import
 *
 * TransitRouterGrantRule can be imported using the transit router id and accountId, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:transit_router/grantRule:GrantRule default trId:accountId
 * ```
 */
export class GrantRule extends pulumi.CustomResource {
    /**
     * Get an existing GrantRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GrantRuleState, opts?: pulumi.CustomResourceOptions): GrantRule {
        return new GrantRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:transit_router/grantRule:GrantRule';

    /**
     * Returns true if the given object is an instance of GrantRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GrantRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GrantRule.__pulumiType;
    }

    /**
     * The description of the rule.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Account ID awaiting authorization for intermediate router instance.
     */
    public readonly grantAccountId!: pulumi.Output<string>;
    /**
     * The id of the transit router.
     */
    public readonly transitRouterId!: pulumi.Output<string>;

    /**
     * Create a GrantRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GrantRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GrantRuleArgs | GrantRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GrantRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["grantAccountId"] = state ? state.grantAccountId : undefined;
            resourceInputs["transitRouterId"] = state ? state.transitRouterId : undefined;
        } else {
            const args = argsOrState as GrantRuleArgs | undefined;
            if ((!args || args.grantAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'grantAccountId'");
            }
            if ((!args || args.transitRouterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitRouterId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["grantAccountId"] = args ? args.grantAccountId : undefined;
            resourceInputs["transitRouterId"] = args ? args.transitRouterId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GrantRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GrantRule resources.
 */
export interface GrantRuleState {
    /**
     * The description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Account ID awaiting authorization for intermediate router instance.
     */
    grantAccountId?: pulumi.Input<string>;
    /**
     * The id of the transit router.
     */
    transitRouterId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GrantRule resource.
 */
export interface GrantRuleArgs {
    /**
     * The description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Account ID awaiting authorization for intermediate router instance.
     */
    grantAccountId: pulumi.Input<string>;
    /**
     * The id of the transit router.
     */
    transitRouterId: pulumi.Input<string>;
}
