// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of transit router vpn attachments
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.transit_router.getVpnAttachments({
 *     ids: ["tr-attach-3rf2xi7ae6y9s5zsk2hm6pibt"],
 *     transitRouterId: "tr-2d6fr7f39unsw58ozfe1ow21x",
 * });
 * ```
 */
export function getVpnAttachments(args: GetVpnAttachmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnAttachmentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:transit_router/getVpnAttachments:getVpnAttachments", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "tags": args.tags,
        "transitRouterId": args.transitRouterId,
        "vpnConnectionId": args.vpnConnectionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpnAttachments.
 */
export interface GetVpnAttachmentsArgs {
    /**
     * The ID list of the VPN attachment.
     */
    ids?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * Tags.
     */
    tags?: inputs.transit_router.GetVpnAttachmentsTag[];
    /**
     * The id of the transit router.
     */
    transitRouterId: string;
    /**
     * The ID of the IPSec connection.
     */
    vpnConnectionId?: string;
}

/**
 * A collection of values returned by getVpnAttachments.
 */
export interface GetVpnAttachmentsResult {
    /**
     * The collection of query.
     */
    readonly attachments: outputs.transit_router.GetVpnAttachmentsAttachment[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly outputFile?: string;
    /**
     * Tags.
     */
    readonly tags?: outputs.transit_router.GetVpnAttachmentsTag[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The id of the transit router.
     */
    readonly transitRouterId: string;
    /**
     * The ID of the IPSec connection.
     */
    readonly vpnConnectionId?: string;
}
/**
 * Use this data source to query detailed information of transit router vpn attachments
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.transit_router.getVpnAttachments({
 *     ids: ["tr-attach-3rf2xi7ae6y9s5zsk2hm6pibt"],
 *     transitRouterId: "tr-2d6fr7f39unsw58ozfe1ow21x",
 * });
 * ```
 */
export function getVpnAttachmentsOutput(args: GetVpnAttachmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpnAttachmentsResult> {
    return pulumi.output(args).apply((a: any) => getVpnAttachments(a, opts))
}

/**
 * A collection of arguments for invoking getVpnAttachments.
 */
export interface GetVpnAttachmentsOutputArgs {
    /**
     * The ID list of the VPN attachment.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.transit_router.GetVpnAttachmentsTagArgs>[]>;
    /**
     * The id of the transit router.
     */
    transitRouterId: pulumi.Input<string>;
    /**
     * The ID of the IPSec connection.
     */
    vpnConnectionId?: pulumi.Input<string>;
}
