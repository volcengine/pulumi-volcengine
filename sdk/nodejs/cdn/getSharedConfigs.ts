// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cdn shared configs
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cdn.getSharedConfigs({
 *     configName: "tf-test",
 *     configType: "allow_ip_access_rule",
 *     projectName: "default",
 * });
 * ```
 */
export function getSharedConfigs(args?: GetSharedConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetSharedConfigsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cdn/getSharedConfigs:getSharedConfigs", {
        "configName": args.configName,
        "configType": args.configType,
        "configTypeLists": args.configTypeLists,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSharedConfigs.
 */
export interface GetSharedConfigsArgs {
    /**
     * The name of the shared config.
     */
    configName?: string;
    /**
     * The type of the shared config.
     */
    configType?: string;
    /**
     * The config type list. The parameter value can be a combination of available values for ConfigType. ConfigType and ConfigTypeList cannot be specified at the same time.
     */
    configTypeLists?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The name of the project.
     */
    projectName?: string;
}

/**
 * A collection of values returned by getSharedConfigs.
 */
export interface GetSharedConfigsResult {
    /**
     * The collection of query.
     */
    readonly configDatas: outputs.cdn.GetSharedConfigsConfigData[];
    /**
     * The name of the config.
     */
    readonly configName?: string;
    /**
     * The type of the config.
     */
    readonly configType?: string;
    readonly configTypeLists?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    /**
     * The name of the project.
     */
    readonly projectName?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cdn shared configs
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cdn.getSharedConfigs({
 *     configName: "tf-test",
 *     configType: "allow_ip_access_rule",
 *     projectName: "default",
 * });
 * ```
 */
export function getSharedConfigsOutput(args?: GetSharedConfigsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSharedConfigsResult> {
    return pulumi.output(args).apply((a: any) => getSharedConfigs(a, opts))
}

/**
 * A collection of arguments for invoking getSharedConfigs.
 */
export interface GetSharedConfigsOutputArgs {
    /**
     * The name of the shared config.
     */
    configName?: pulumi.Input<string>;
    /**
     * The type of the shared config.
     */
    configType?: pulumi.Input<string>;
    /**
     * The config type list. The parameter value can be a combination of available values for ConfigType. ConfigType and ConfigTypeList cannot be specified at the same time.
     */
    configTypeLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of the project.
     */
    projectName?: pulumi.Input<string>;
}
