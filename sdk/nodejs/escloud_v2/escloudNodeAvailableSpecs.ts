// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of escloud node available specs
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.escloud_v2.getEscloudNodeAvailableSpecs({});
 * ```
 */
/** @deprecated volcengine.escloud_v2.EscloudNodeAvailableSpecs has been deprecated in favor of volcengine.escloud_v2.getEscloudNodeAvailableSpecs */
export function escloudNodeAvailableSpecs(args?: EscloudNodeAvailableSpecsArgs, opts?: pulumi.InvokeOptions): Promise<EscloudNodeAvailableSpecsResult> {
    pulumi.log.warn("escloudNodeAvailableSpecs is deprecated: volcengine.escloud_v2.EscloudNodeAvailableSpecs has been deprecated in favor of volcengine.escloud_v2.getEscloudNodeAvailableSpecs")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:escloud_v2/escloudNodeAvailableSpecs:EscloudNodeAvailableSpecs", {
        "instanceId": args.instanceId,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking EscloudNodeAvailableSpecs.
 */
export interface EscloudNodeAvailableSpecsArgs {
    /**
     * The id of the instance.
     */
    instanceId?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by EscloudNodeAvailableSpecs.
 */
export interface EscloudNodeAvailableSpecsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId?: string;
    /**
     * The collection of query.
     */
    readonly nodeSpecs: outputs.escloud_v2.EscloudNodeAvailableSpecsNodeSpec[];
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of escloud node available specs
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.escloud_v2.getEscloudNodeAvailableSpecs({});
 * ```
 */
/** @deprecated volcengine.escloud_v2.EscloudNodeAvailableSpecs has been deprecated in favor of volcengine.escloud_v2.getEscloudNodeAvailableSpecs */
export function escloudNodeAvailableSpecsOutput(args?: EscloudNodeAvailableSpecsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<EscloudNodeAvailableSpecsResult> {
    return pulumi.output(args).apply((a: any) => escloudNodeAvailableSpecs(a, opts))
}

/**
 * A collection of arguments for invoking EscloudNodeAvailableSpecs.
 */
export interface EscloudNodeAvailableSpecsOutputArgs {
    /**
     * The id of the instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
