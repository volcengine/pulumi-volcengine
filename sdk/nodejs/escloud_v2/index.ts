// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { EscloudInstanceV2Args, EscloudInstanceV2State } from "./escloudInstanceV2";
export type EscloudInstanceV2 = import("./escloudInstanceV2").EscloudInstanceV2;
export const EscloudInstanceV2: typeof import("./escloudInstanceV2").EscloudInstanceV2 = null as any;
utilities.lazyLoad(exports, ["EscloudInstanceV2"], () => require("./escloudInstanceV2"));

export { EscloudInstancesV2Args, EscloudInstancesV2Result, EscloudInstancesV2OutputArgs } from "./escloudInstancesV2";
export const escloudInstancesV2: typeof import("./escloudInstancesV2").escloudInstancesV2 = null as any;
export const escloudInstancesV2Output: typeof import("./escloudInstancesV2").escloudInstancesV2Output = null as any;
utilities.lazyLoad(exports, ["escloudInstancesV2","escloudInstancesV2Output"], () => require("./escloudInstancesV2"));

export { EscloudIpWhiteListArgs, EscloudIpWhiteListState } from "./escloudIpWhiteList";
export type EscloudIpWhiteList = import("./escloudIpWhiteList").EscloudIpWhiteList;
export const EscloudIpWhiteList: typeof import("./escloudIpWhiteList").EscloudIpWhiteList = null as any;
utilities.lazyLoad(exports, ["EscloudIpWhiteList"], () => require("./escloudIpWhiteList"));

export { EscloudNodeAvailableSpecsArgs, EscloudNodeAvailableSpecsResult, EscloudNodeAvailableSpecsOutputArgs } from "./escloudNodeAvailableSpecs";
export const escloudNodeAvailableSpecs: typeof import("./escloudNodeAvailableSpecs").escloudNodeAvailableSpecs = null as any;
export const escloudNodeAvailableSpecsOutput: typeof import("./escloudNodeAvailableSpecs").escloudNodeAvailableSpecsOutput = null as any;
utilities.lazyLoad(exports, ["escloudNodeAvailableSpecs","escloudNodeAvailableSpecsOutput"], () => require("./escloudNodeAvailableSpecs"));

export { EscloudZonesV2Args, EscloudZonesV2Result, EscloudZonesV2OutputArgs } from "./escloudZonesV2";
export const escloudZonesV2: typeof import("./escloudZonesV2").escloudZonesV2 = null as any;
export const escloudZonesV2Output: typeof import("./escloudZonesV2").escloudZonesV2Output = null as any;
utilities.lazyLoad(exports, ["escloudZonesV2","escloudZonesV2Output"], () => require("./escloudZonesV2"));

export { GetEscloudInstancesV2Args, GetEscloudInstancesV2Result, GetEscloudInstancesV2OutputArgs } from "./getEscloudInstancesV2";
export const getEscloudInstancesV2: typeof import("./getEscloudInstancesV2").getEscloudInstancesV2 = null as any;
export const getEscloudInstancesV2Output: typeof import("./getEscloudInstancesV2").getEscloudInstancesV2Output = null as any;
utilities.lazyLoad(exports, ["getEscloudInstancesV2","getEscloudInstancesV2Output"], () => require("./getEscloudInstancesV2"));

export { GetEscloudNodeAvailableSpecsArgs, GetEscloudNodeAvailableSpecsResult, GetEscloudNodeAvailableSpecsOutputArgs } from "./getEscloudNodeAvailableSpecs";
export const getEscloudNodeAvailableSpecs: typeof import("./getEscloudNodeAvailableSpecs").getEscloudNodeAvailableSpecs = null as any;
export const getEscloudNodeAvailableSpecsOutput: typeof import("./getEscloudNodeAvailableSpecs").getEscloudNodeAvailableSpecsOutput = null as any;
utilities.lazyLoad(exports, ["getEscloudNodeAvailableSpecs","getEscloudNodeAvailableSpecsOutput"], () => require("./getEscloudNodeAvailableSpecs"));

export { GetEscloudZonesV2Args, GetEscloudZonesV2Result, GetEscloudZonesV2OutputArgs } from "./getEscloudZonesV2";
export const getEscloudZonesV2: typeof import("./getEscloudZonesV2").getEscloudZonesV2 = null as any;
export const getEscloudZonesV2Output: typeof import("./getEscloudZonesV2").getEscloudZonesV2Output = null as any;
utilities.lazyLoad(exports, ["getEscloudZonesV2","getEscloudZonesV2Output"], () => require("./getEscloudZonesV2"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:escloud_v2/escloudInstanceV2:EscloudInstanceV2":
                return new EscloudInstanceV2(name, <any>undefined, { urn })
            case "volcengine:escloud_v2/escloudIpWhiteList:EscloudIpWhiteList":
                return new EscloudIpWhiteList(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "escloud_v2/escloudInstanceV2", _module)
pulumi.runtime.registerResourceModule("volcengine", "escloud_v2/escloudIpWhiteList", _module)
