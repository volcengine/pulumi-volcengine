// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function escloudInstancesV2(args?: EscloudInstancesV2Args, opts?: pulumi.InvokeOptions): Promise<EscloudInstancesV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:escloud_v2/escloudInstancesV2:EscloudInstancesV2", {
        "chargeTypes": args.chargeTypes,
        "ids": args.ids,
        "instanceNames": args.instanceNames,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
        "statuses": args.statuses,
        "tags": args.tags,
        "versions": args.versions,
        "zoneIds": args.zoneIds,
    }, opts);
}

/**
 * A collection of arguments for invoking EscloudInstancesV2.
 */
export interface EscloudInstancesV2Args {
    chargeTypes?: string[];
    ids?: string[];
    instanceNames?: string[];
    outputFile?: string;
    projectName?: string;
    statuses?: string[];
    tags?: inputs.escloud_v2.EscloudInstancesV2Tag[];
    versions?: string[];
    zoneIds?: string[];
}

/**
 * A collection of values returned by EscloudInstancesV2.
 */
export interface EscloudInstancesV2Result {
    readonly chargeTypes?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly instanceNames?: string[];
    readonly instances: outputs.escloud_v2.EscloudInstancesV2Instance[];
    readonly outputFile?: string;
    readonly projectName?: string;
    readonly statuses?: string[];
    readonly tags?: outputs.escloud_v2.EscloudInstancesV2Tag[];
    readonly totalCount: number;
    readonly versions?: string[];
    readonly zoneIds?: string[];
}
export function escloudInstancesV2Output(args?: EscloudInstancesV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<EscloudInstancesV2Result> {
    return pulumi.output(args).apply((a: any) => escloudInstancesV2(a, opts))
}

/**
 * A collection of arguments for invoking EscloudInstancesV2.
 */
export interface EscloudInstancesV2OutputArgs {
    chargeTypes?: pulumi.Input<pulumi.Input<string>[]>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    instanceNames?: pulumi.Input<pulumi.Input<string>[]>;
    outputFile?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.escloud_v2.EscloudInstancesV2TagArgs>[]>;
    versions?: pulumi.Input<pulumi.Input<string>[]>;
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}
