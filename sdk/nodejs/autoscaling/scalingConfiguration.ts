// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.autoscaling.ScalingConfiguration("foo", {
 *     eipBandwidth: 10,
 *     eipBillingType: "PostPaidByBandwidth",
 *     eipIsp: "ChinaMobile",
 *     hostName: "",
 *     hpcClusterId: "",
 *     imageId: "image-ycgud4t4hxgso0e27bdl",
 *     instanceDescription: "",
 *     instanceName: "tf-test",
 *     instanceTypes: ["ecs.g2i.large"],
 *     keyPairName: "tf-keypair",
 *     password: "",
 *     projectName: "default",
 *     scalingConfigurationName: "tf-test",
 *     scalingGroupId: "scg-ycinx27x25gh9y31p0fy",
 *     securityEnhancementStrategy: "InActive",
 *     securityGroupIds: ["sg-2fepz3c793g1s59gp67y21r34"],
 *     spotStrategy: "NoSpot",
 *     tags: [
 *         {
 *             key: "tf-key1",
 *             value: "tf-value1",
 *         },
 *         {
 *             key: "tf-key2",
 *             value: "tf-value2",
 *         },
 *     ],
 *     userData: "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI=",
 *     volumes: [
 *         {
 *             deleteWithInstance: false,
 *             size: 20,
 *             volumeType: "ESSD_PL0",
 *         },
 *         {
 *             deleteWithInstance: true,
 *             size: 20,
 *             volumeType: "ESSD_PL0",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * ScalingConfiguration can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:autoscaling/scalingConfiguration:ScalingConfiguration default scc-ybkuck3mx8cm9tm5yglz
 * ```
 */
export class ScalingConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing ScalingConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScalingConfigurationState, opts?: pulumi.CustomResourceOptions): ScalingConfiguration {
        return new ScalingConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:autoscaling/scalingConfiguration:ScalingConfiguration';

    /**
     * Returns true if the given object is an instance of ScalingConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalingConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingConfiguration.__pulumiType;
    }

    /**
     * The create time of the scaling configuration.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The EIP bandwidth which the scaling configuration set. When the value of Eip.BillingType is PostPaidByBandwidth, the value is 1 to 500. When the value of Eip.BillingType is PostPaidByTraffic, the value is 1 to 200.
     */
    public readonly eipBandwidth!: pulumi.Output<number>;
    /**
     * The EIP billing type which the scaling configuration set. Valid values: PostPaidByBandwidth, PostPaidByTraffic.
     */
    public readonly eipBillingType!: pulumi.Output<string>;
    /**
     * The EIP ISP which the scaling configuration set. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom.
     */
    public readonly eipIsp!: pulumi.Output<string>;
    /**
     * The ECS hostname which the scaling configuration set.
     */
    public readonly hostName!: pulumi.Output<string | undefined>;
    /**
     * The ID of the HPC cluster to which the instance belongs. Valid only when InstanceTypes.N specifies High Performance Computing GPU Type.
     */
    public readonly hpcClusterId!: pulumi.Output<string | undefined>;
    /**
     * The ECS image id which the scaling configuration set.
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * The ECS instance description which the scaling configuration set.
     */
    public readonly instanceDescription!: pulumi.Output<string | undefined>;
    /**
     * The ECS instance name which the scaling configuration set.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * The list of the ECS instance type which the scaling configuration set. The maximum number of instance types is 10.
     */
    public readonly instanceTypes!: pulumi.Output<string[]>;
    /**
     * The ECS key pair name which the scaling configuration set.
     */
    public readonly keyPairName!: pulumi.Output<string | undefined>;
    /**
     * The lifecycle state of the scaling configuration.
     */
    public /*out*/ readonly lifecycleState!: pulumi.Output<string>;
    /**
     * The ECS password which the scaling configuration set.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The project to which the instance created by the scaling configuration belongs.
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * The id of the scaling configuration.
     */
    public /*out*/ readonly scalingConfigurationId!: pulumi.Output<string>;
    /**
     * The name of the scaling configuration.
     */
    public readonly scalingConfigurationName!: pulumi.Output<string>;
    /**
     * The id of the scaling group to which the scaling configuration belongs.
     */
    public readonly scalingGroupId!: pulumi.Output<string>;
    /**
     * The Ecs security enhancement strategy which the scaling configuration set. Valid values: Active, InActive.
     */
    public readonly securityEnhancementStrategy!: pulumi.Output<string | undefined>;
    /**
     * The list of the security group id of the networkInterface which the scaling configuration set. A maximum of 5 security groups can be bound at the same time, and the value ranges from 1 to 5.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * The preemption policy of the instance. Valid Value: NoSpot (default), SpotAsPriceGo.
     */
    public readonly spotStrategy!: pulumi.Output<string | undefined>;
    /**
     * The label of the instance created by the scaling configuration. Up to 20 tags are supported.
     */
    public readonly tags!: pulumi.Output<outputs.autoscaling.ScalingConfigurationTag[] | undefined>;
    /**
     * The create time of the scaling configuration.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The ECS user data which the scaling configuration set.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * The list of volume of the scaling configuration. The number of supported volumes ranges from 1 to 15.
     */
    public readonly volumes!: pulumi.Output<outputs.autoscaling.ScalingConfigurationVolume[]>;

    /**
     * Create a ScalingConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScalingConfigurationArgs | ScalingConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScalingConfigurationState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["eipBandwidth"] = state ? state.eipBandwidth : undefined;
            resourceInputs["eipBillingType"] = state ? state.eipBillingType : undefined;
            resourceInputs["eipIsp"] = state ? state.eipIsp : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["hpcClusterId"] = state ? state.hpcClusterId : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["instanceDescription"] = state ? state.instanceDescription : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceTypes"] = state ? state.instanceTypes : undefined;
            resourceInputs["keyPairName"] = state ? state.keyPairName : undefined;
            resourceInputs["lifecycleState"] = state ? state.lifecycleState : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["scalingConfigurationId"] = state ? state.scalingConfigurationId : undefined;
            resourceInputs["scalingConfigurationName"] = state ? state.scalingConfigurationName : undefined;
            resourceInputs["scalingGroupId"] = state ? state.scalingGroupId : undefined;
            resourceInputs["securityEnhancementStrategy"] = state ? state.securityEnhancementStrategy : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["spotStrategy"] = state ? state.spotStrategy : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["volumes"] = state ? state.volumes : undefined;
        } else {
            const args = argsOrState as ScalingConfigurationArgs | undefined;
            if ((!args || args.imageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageId'");
            }
            if ((!args || args.instanceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceName'");
            }
            if ((!args || args.instanceTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceTypes'");
            }
            if ((!args || args.scalingConfigurationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalingConfigurationName'");
            }
            if ((!args || args.scalingGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalingGroupId'");
            }
            if ((!args || args.securityGroupIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupIds'");
            }
            if ((!args || args.volumes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'volumes'");
            }
            resourceInputs["eipBandwidth"] = args ? args.eipBandwidth : undefined;
            resourceInputs["eipBillingType"] = args ? args.eipBillingType : undefined;
            resourceInputs["eipIsp"] = args ? args.eipIsp : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["hpcClusterId"] = args ? args.hpcClusterId : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["instanceDescription"] = args ? args.instanceDescription : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["instanceTypes"] = args ? args.instanceTypes : undefined;
            resourceInputs["keyPairName"] = args ? args.keyPairName : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["scalingConfigurationName"] = args ? args.scalingConfigurationName : undefined;
            resourceInputs["scalingGroupId"] = args ? args.scalingGroupId : undefined;
            resourceInputs["securityEnhancementStrategy"] = args ? args.securityEnhancementStrategy : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["spotStrategy"] = args ? args.spotStrategy : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["volumes"] = args ? args.volumes : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lifecycleState"] = undefined /*out*/;
            resourceInputs["scalingConfigurationId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ScalingConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScalingConfiguration resources.
 */
export interface ScalingConfigurationState {
    /**
     * The create time of the scaling configuration.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The EIP bandwidth which the scaling configuration set. When the value of Eip.BillingType is PostPaidByBandwidth, the value is 1 to 500. When the value of Eip.BillingType is PostPaidByTraffic, the value is 1 to 200.
     */
    eipBandwidth?: pulumi.Input<number>;
    /**
     * The EIP billing type which the scaling configuration set. Valid values: PostPaidByBandwidth, PostPaidByTraffic.
     */
    eipBillingType?: pulumi.Input<string>;
    /**
     * The EIP ISP which the scaling configuration set. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom.
     */
    eipIsp?: pulumi.Input<string>;
    /**
     * The ECS hostname which the scaling configuration set.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The ID of the HPC cluster to which the instance belongs. Valid only when InstanceTypes.N specifies High Performance Computing GPU Type.
     */
    hpcClusterId?: pulumi.Input<string>;
    /**
     * The ECS image id which the scaling configuration set.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The ECS instance description which the scaling configuration set.
     */
    instanceDescription?: pulumi.Input<string>;
    /**
     * The ECS instance name which the scaling configuration set.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The list of the ECS instance type which the scaling configuration set. The maximum number of instance types is 10.
     */
    instanceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ECS key pair name which the scaling configuration set.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The lifecycle state of the scaling configuration.
     */
    lifecycleState?: pulumi.Input<string>;
    /**
     * The ECS password which the scaling configuration set.
     */
    password?: pulumi.Input<string>;
    /**
     * The project to which the instance created by the scaling configuration belongs.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The id of the scaling configuration.
     */
    scalingConfigurationId?: pulumi.Input<string>;
    /**
     * The name of the scaling configuration.
     */
    scalingConfigurationName?: pulumi.Input<string>;
    /**
     * The id of the scaling group to which the scaling configuration belongs.
     */
    scalingGroupId?: pulumi.Input<string>;
    /**
     * The Ecs security enhancement strategy which the scaling configuration set. Valid values: Active, InActive.
     */
    securityEnhancementStrategy?: pulumi.Input<string>;
    /**
     * The list of the security group id of the networkInterface which the scaling configuration set. A maximum of 5 security groups can be bound at the same time, and the value ranges from 1 to 5.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The preemption policy of the instance. Valid Value: NoSpot (default), SpotAsPriceGo.
     */
    spotStrategy?: pulumi.Input<string>;
    /**
     * The label of the instance created by the scaling configuration. Up to 20 tags are supported.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingConfigurationTag>[]>;
    /**
     * The create time of the scaling configuration.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The ECS user data which the scaling configuration set.
     */
    userData?: pulumi.Input<string>;
    /**
     * The list of volume of the scaling configuration. The number of supported volumes ranges from 1 to 15.
     */
    volumes?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingConfigurationVolume>[]>;
}

/**
 * The set of arguments for constructing a ScalingConfiguration resource.
 */
export interface ScalingConfigurationArgs {
    /**
     * The EIP bandwidth which the scaling configuration set. When the value of Eip.BillingType is PostPaidByBandwidth, the value is 1 to 500. When the value of Eip.BillingType is PostPaidByTraffic, the value is 1 to 200.
     */
    eipBandwidth?: pulumi.Input<number>;
    /**
     * The EIP billing type which the scaling configuration set. Valid values: PostPaidByBandwidth, PostPaidByTraffic.
     */
    eipBillingType?: pulumi.Input<string>;
    /**
     * The EIP ISP which the scaling configuration set. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom.
     */
    eipIsp?: pulumi.Input<string>;
    /**
     * The ECS hostname which the scaling configuration set.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The ID of the HPC cluster to which the instance belongs. Valid only when InstanceTypes.N specifies High Performance Computing GPU Type.
     */
    hpcClusterId?: pulumi.Input<string>;
    /**
     * The ECS image id which the scaling configuration set.
     */
    imageId: pulumi.Input<string>;
    /**
     * The ECS instance description which the scaling configuration set.
     */
    instanceDescription?: pulumi.Input<string>;
    /**
     * The ECS instance name which the scaling configuration set.
     */
    instanceName: pulumi.Input<string>;
    /**
     * The list of the ECS instance type which the scaling configuration set. The maximum number of instance types is 10.
     */
    instanceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ECS key pair name which the scaling configuration set.
     */
    keyPairName?: pulumi.Input<string>;
    /**
     * The ECS password which the scaling configuration set.
     */
    password?: pulumi.Input<string>;
    /**
     * The project to which the instance created by the scaling configuration belongs.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The name of the scaling configuration.
     */
    scalingConfigurationName: pulumi.Input<string>;
    /**
     * The id of the scaling group to which the scaling configuration belongs.
     */
    scalingGroupId: pulumi.Input<string>;
    /**
     * The Ecs security enhancement strategy which the scaling configuration set. Valid values: Active, InActive.
     */
    securityEnhancementStrategy?: pulumi.Input<string>;
    /**
     * The list of the security group id of the networkInterface which the scaling configuration set. A maximum of 5 security groups can be bound at the same time, and the value ranges from 1 to 5.
     */
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The preemption policy of the instance. Valid Value: NoSpot (default), SpotAsPriceGo.
     */
    spotStrategy?: pulumi.Input<string>;
    /**
     * The label of the instance created by the scaling configuration. Up to 20 tags are supported.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingConfigurationTag>[]>;
    /**
     * The ECS user data which the scaling configuration set.
     */
    userData?: pulumi.Input<string>;
    /**
     * The list of volume of the scaling configuration. The number of supported volumes ranges from 1 to 15.
     */
    volumes: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingConfigurationVolume>[]>;
}
