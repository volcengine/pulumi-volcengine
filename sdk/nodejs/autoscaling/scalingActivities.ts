// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of scaling activities
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.autoscaling.ScalingActivities({
 *     scalingGroupId: "scg-ybqm0b6kcigh9zu9ce6t",
 * });
 * ```
 */
export function scalingActivities(args: ScalingActivitiesArgs, opts?: pulumi.InvokeOptions): Promise<ScalingActivitiesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:autoscaling/scalingActivities:ScalingActivities", {
        "endTime": args.endTime,
        "ids": args.ids,
        "outputFile": args.outputFile,
        "scalingGroupId": args.scalingGroupId,
        "startTime": args.startTime,
        "statusCode": args.statusCode,
    }, opts);
}

/**
 * A collection of arguments for invoking ScalingActivities.
 */
export interface ScalingActivitiesArgs {
    /**
     * An end time to start a Scaling Activity.
     */
    endTime?: string;
    /**
     * A list of Scaling Activity IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * A Id of Scaling Group.
     */
    scalingGroupId: string;
    /**
     * A start time to start a Scaling Activity.
     */
    startTime?: string;
    /**
     * A status code of Scaling Activity. Valid values: Init, Running, Success, PartialSuccess, Error, Rejected, Exception.
     */
    statusCode?: string;
}

/**
 * A collection of values returned by ScalingActivities.
 */
export interface ScalingActivitiesResult {
    /**
     * The collection of Scaling Activity query.
     */
    readonly activities: outputs.autoscaling.ScalingActivitiesActivity[];
    readonly endTime?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly outputFile?: string;
    /**
     * The scaling group Id.
     */
    readonly scalingGroupId: string;
    readonly startTime?: string;
    /**
     * The Status Code of Scaling Activity.
     */
    readonly statusCode?: string;
    /**
     * The total count of Scaling Activity query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of scaling activities
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.autoscaling.ScalingActivities({
 *     scalingGroupId: "scg-ybqm0b6kcigh9zu9ce6t",
 * });
 * ```
 */
export function scalingActivitiesOutput(args: ScalingActivitiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ScalingActivitiesResult> {
    return pulumi.output(args).apply((a: any) => scalingActivities(a, opts))
}

/**
 * A collection of arguments for invoking ScalingActivities.
 */
export interface ScalingActivitiesOutputArgs {
    /**
     * An end time to start a Scaling Activity.
     */
    endTime?: pulumi.Input<string>;
    /**
     * A list of Scaling Activity IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A Id of Scaling Group.
     */
    scalingGroupId: pulumi.Input<string>;
    /**
     * A start time to start a Scaling Activity.
     */
    startTime?: pulumi.Input<string>;
    /**
     * A status code of Scaling Activity. Valid values: Init, Running, Success, PartialSuccess, Error, Rejected, Exception.
     */
    statusCode?: pulumi.Input<string>;
}
