// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage scaling group
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.autoscaling.ScalingGroup("foo", {
 *     defaultCooldown: 10,
 *     desireInstanceNumber: 0,
 *     instanceTerminatePolicy: "OldestInstance",
 *     maxInstanceNumber: 1,
 *     minInstanceNumber: 0,
 *     multiAzPolicy: "BALANCE",
 *     projectName: "default",
 *     scalingGroupName: "test-tf",
 *     subnetIds: ["subnet-2fe79j7c8o5c059gp68ksxr93"],
 *     tags: [{
 *         key: "tf-key1",
 *         value: "tf-value1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ScalingGroup can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:autoscaling/scalingGroup:ScalingGroup default scg-mizl7m1kqccg5smt1bdpijuj
 * ```
 */
export class ScalingGroup extends pulumi.CustomResource {
    /**
     * Get an existing ScalingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScalingGroupState, opts?: pulumi.CustomResourceOptions): ScalingGroup {
        return new ScalingGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:autoscaling/scalingGroup:ScalingGroup';

    /**
     * Returns true if the given object is an instance of ScalingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalingGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingGroup.__pulumiType;
    }

    /**
     * The scaling configuration id which used by the scaling group.
     */
    public /*out*/ readonly activeScalingConfigurationId!: pulumi.Output<string>;
    /**
     * The create time of the scaling group.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The list of db instance ids.
     */
    public /*out*/ readonly dbInstanceIds!: pulumi.Output<string[]>;
    /**
     * The default cooldown interval of the scaling group. Value range: 5 ~ 86400, unit: second. Default value: 300.
     */
    public readonly defaultCooldown!: pulumi.Output<number>;
    /**
     * The desire instance number of the scaling group.
     */
    public readonly desireInstanceNumber!: pulumi.Output<number>;
    /**
     * The instance terminate policy of the scaling group. Valid values: OldestInstance, NewestInstance, OldestScalingConfigurationWithOldestInstance, OldestScalingConfigurationWithNewestInstance. Default value: OldestScalingConfigurationWithOldestInstance.
     */
    public readonly instanceTerminatePolicy!: pulumi.Output<string>;
    /**
     * The ID of the launch template bound to the scaling group. The launch template and scaling configuration cannot take effect at the same time.
     */
    public readonly launchTemplateId!: pulumi.Output<string | undefined>;
    /**
     * The version of the launch template bound to the scaling group. Valid values are the version number, Latest, or Default.
     */
    public readonly launchTemplateVersion!: pulumi.Output<string | undefined>;
    /**
     * The lifecycle state of the scaling group.
     */
    public /*out*/ readonly lifecycleState!: pulumi.Output<string>;
    /**
     * The max instance number of the scaling group. Value range: 0 ~ 100.
     */
    public readonly maxInstanceNumber!: pulumi.Output<number>;
    /**
     * The min instance number of the scaling group. Value range: 0 ~ 100.
     */
    public readonly minInstanceNumber!: pulumi.Output<number>;
    /**
     * The multi az policy of the scaling group. Valid values: PRIORITY, BALANCE. Default value: PRIORITY.
     */
    public readonly multiAzPolicy!: pulumi.Output<string>;
    /**
     * The ProjectName of the scaling group.
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * The id of the scaling group.
     */
    public /*out*/ readonly scalingGroupId!: pulumi.Output<string>;
    /**
     * The name of the scaling group.
     */
    public readonly scalingGroupName!: pulumi.Output<string>;
    /**
     * The load balancer server group attributes of the scaling group.
     */
    public readonly serverGroupAttributes!: pulumi.Output<outputs.autoscaling.ScalingGroupServerGroupAttribute[] | undefined>;
    /**
     * The list of the subnet id to which the ENI is connected.
     */
    public readonly subnetIds!: pulumi.Output<string[]>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.autoscaling.ScalingGroupTag[] | undefined>;
    /**
     * The total instance count of the scaling group.
     */
    public /*out*/ readonly totalInstanceCount!: pulumi.Output<number>;
    /**
     * The create time of the scaling group.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The VPC id of the scaling group.
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a ScalingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScalingGroupArgs | ScalingGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScalingGroupState | undefined;
            resourceInputs["activeScalingConfigurationId"] = state ? state.activeScalingConfigurationId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dbInstanceIds"] = state ? state.dbInstanceIds : undefined;
            resourceInputs["defaultCooldown"] = state ? state.defaultCooldown : undefined;
            resourceInputs["desireInstanceNumber"] = state ? state.desireInstanceNumber : undefined;
            resourceInputs["instanceTerminatePolicy"] = state ? state.instanceTerminatePolicy : undefined;
            resourceInputs["launchTemplateId"] = state ? state.launchTemplateId : undefined;
            resourceInputs["launchTemplateVersion"] = state ? state.launchTemplateVersion : undefined;
            resourceInputs["lifecycleState"] = state ? state.lifecycleState : undefined;
            resourceInputs["maxInstanceNumber"] = state ? state.maxInstanceNumber : undefined;
            resourceInputs["minInstanceNumber"] = state ? state.minInstanceNumber : undefined;
            resourceInputs["multiAzPolicy"] = state ? state.multiAzPolicy : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["scalingGroupId"] = state ? state.scalingGroupId : undefined;
            resourceInputs["scalingGroupName"] = state ? state.scalingGroupName : undefined;
            resourceInputs["serverGroupAttributes"] = state ? state.serverGroupAttributes : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["totalInstanceCount"] = state ? state.totalInstanceCount : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as ScalingGroupArgs | undefined;
            if ((!args || args.maxInstanceNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxInstanceNumber'");
            }
            if ((!args || args.minInstanceNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minInstanceNumber'");
            }
            if ((!args || args.scalingGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalingGroupName'");
            }
            if ((!args || args.subnetIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetIds'");
            }
            resourceInputs["defaultCooldown"] = args ? args.defaultCooldown : undefined;
            resourceInputs["desireInstanceNumber"] = args ? args.desireInstanceNumber : undefined;
            resourceInputs["instanceTerminatePolicy"] = args ? args.instanceTerminatePolicy : undefined;
            resourceInputs["launchTemplateId"] = args ? args.launchTemplateId : undefined;
            resourceInputs["launchTemplateVersion"] = args ? args.launchTemplateVersion : undefined;
            resourceInputs["maxInstanceNumber"] = args ? args.maxInstanceNumber : undefined;
            resourceInputs["minInstanceNumber"] = args ? args.minInstanceNumber : undefined;
            resourceInputs["multiAzPolicy"] = args ? args.multiAzPolicy : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["scalingGroupName"] = args ? args.scalingGroupName : undefined;
            resourceInputs["serverGroupAttributes"] = args ? args.serverGroupAttributes : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["activeScalingConfigurationId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dbInstanceIds"] = undefined /*out*/;
            resourceInputs["lifecycleState"] = undefined /*out*/;
            resourceInputs["scalingGroupId"] = undefined /*out*/;
            resourceInputs["totalInstanceCount"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScalingGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScalingGroup resources.
 */
export interface ScalingGroupState {
    /**
     * The scaling configuration id which used by the scaling group.
     */
    activeScalingConfigurationId?: pulumi.Input<string>;
    /**
     * The create time of the scaling group.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The list of db instance ids.
     */
    dbInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default cooldown interval of the scaling group. Value range: 5 ~ 86400, unit: second. Default value: 300.
     */
    defaultCooldown?: pulumi.Input<number>;
    /**
     * The desire instance number of the scaling group.
     */
    desireInstanceNumber?: pulumi.Input<number>;
    /**
     * The instance terminate policy of the scaling group. Valid values: OldestInstance, NewestInstance, OldestScalingConfigurationWithOldestInstance, OldestScalingConfigurationWithNewestInstance. Default value: OldestScalingConfigurationWithOldestInstance.
     */
    instanceTerminatePolicy?: pulumi.Input<string>;
    /**
     * The ID of the launch template bound to the scaling group. The launch template and scaling configuration cannot take effect at the same time.
     */
    launchTemplateId?: pulumi.Input<string>;
    /**
     * The version of the launch template bound to the scaling group. Valid values are the version number, Latest, or Default.
     */
    launchTemplateVersion?: pulumi.Input<string>;
    /**
     * The lifecycle state of the scaling group.
     */
    lifecycleState?: pulumi.Input<string>;
    /**
     * The max instance number of the scaling group. Value range: 0 ~ 100.
     */
    maxInstanceNumber?: pulumi.Input<number>;
    /**
     * The min instance number of the scaling group. Value range: 0 ~ 100.
     */
    minInstanceNumber?: pulumi.Input<number>;
    /**
     * The multi az policy of the scaling group. Valid values: PRIORITY, BALANCE. Default value: PRIORITY.
     */
    multiAzPolicy?: pulumi.Input<string>;
    /**
     * The ProjectName of the scaling group.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The id of the scaling group.
     */
    scalingGroupId?: pulumi.Input<string>;
    /**
     * The name of the scaling group.
     */
    scalingGroupName?: pulumi.Input<string>;
    /**
     * The load balancer server group attributes of the scaling group.
     */
    serverGroupAttributes?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingGroupServerGroupAttribute>[]>;
    /**
     * The list of the subnet id to which the ENI is connected.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingGroupTag>[]>;
    /**
     * The total instance count of the scaling group.
     */
    totalInstanceCount?: pulumi.Input<number>;
    /**
     * The create time of the scaling group.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The VPC id of the scaling group.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ScalingGroup resource.
 */
export interface ScalingGroupArgs {
    /**
     * The default cooldown interval of the scaling group. Value range: 5 ~ 86400, unit: second. Default value: 300.
     */
    defaultCooldown?: pulumi.Input<number>;
    /**
     * The desire instance number of the scaling group.
     */
    desireInstanceNumber?: pulumi.Input<number>;
    /**
     * The instance terminate policy of the scaling group. Valid values: OldestInstance, NewestInstance, OldestScalingConfigurationWithOldestInstance, OldestScalingConfigurationWithNewestInstance. Default value: OldestScalingConfigurationWithOldestInstance.
     */
    instanceTerminatePolicy?: pulumi.Input<string>;
    /**
     * The ID of the launch template bound to the scaling group. The launch template and scaling configuration cannot take effect at the same time.
     */
    launchTemplateId?: pulumi.Input<string>;
    /**
     * The version of the launch template bound to the scaling group. Valid values are the version number, Latest, or Default.
     */
    launchTemplateVersion?: pulumi.Input<string>;
    /**
     * The max instance number of the scaling group. Value range: 0 ~ 100.
     */
    maxInstanceNumber: pulumi.Input<number>;
    /**
     * The min instance number of the scaling group. Value range: 0 ~ 100.
     */
    minInstanceNumber: pulumi.Input<number>;
    /**
     * The multi az policy of the scaling group. Valid values: PRIORITY, BALANCE. Default value: PRIORITY.
     */
    multiAzPolicy?: pulumi.Input<string>;
    /**
     * The ProjectName of the scaling group.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The name of the scaling group.
     */
    scalingGroupName: pulumi.Input<string>;
    /**
     * The load balancer server group attributes of the scaling group.
     */
    serverGroupAttributes?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingGroupServerGroupAttribute>[]>;
    /**
     * The list of the subnet id to which the ENI is connected.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.autoscaling.ScalingGroupTag>[]>;
}
