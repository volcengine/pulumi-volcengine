// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of scaling lifecycle hooks
 */
export function getScalingLifecycleHooks(args: GetScalingLifecycleHooksArgs, opts?: pulumi.InvokeOptions): Promise<GetScalingLifecycleHooksResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:autoscaling/getScalingLifecycleHooks:getScalingLifecycleHooks", {
        "ids": args.ids,
        "lifecycleHookNames": args.lifecycleHookNames,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "scalingGroupId": args.scalingGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getScalingLifecycleHooks.
 */
export interface GetScalingLifecycleHooksArgs {
    /**
     * A list of lifecycle hook ids.
     */
    ids?: string[];
    /**
     * A list of lifecycle hook names.
     */
    lifecycleHookNames?: string[];
    /**
     * A Name Regex of lifecycle hook.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * An id of scaling group id.
     */
    scalingGroupId: string;
}

/**
 * A collection of values returned by getScalingLifecycleHooks.
 */
export interface GetScalingLifecycleHooksResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly lifecycleHookNames?: string[];
    /**
     * The collection of lifecycle hook query.
     */
    readonly lifecycleHooks: outputs.autoscaling.GetScalingLifecycleHooksLifecycleHook[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The id of the scaling group.
     */
    readonly scalingGroupId: string;
    /**
     * The total count of lifecycle hook query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of scaling lifecycle hooks
 */
export function getScalingLifecycleHooksOutput(args: GetScalingLifecycleHooksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScalingLifecycleHooksResult> {
    return pulumi.output(args).apply((a: any) => getScalingLifecycleHooks(a, opts))
}

/**
 * A collection of arguments for invoking getScalingLifecycleHooks.
 */
export interface GetScalingLifecycleHooksOutputArgs {
    /**
     * A list of lifecycle hook ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of lifecycle hook names.
     */
    lifecycleHookNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of lifecycle hook.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * An id of scaling group id.
     */
    scalingGroupId: pulumi.Input<string>;
}
