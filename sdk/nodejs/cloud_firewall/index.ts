// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CfwAddressBookArgs, CfwAddressBookState } from "./cfwAddressBook";
export type CfwAddressBook = import("./cfwAddressBook").CfwAddressBook;
export const CfwAddressBook: typeof import("./cfwAddressBook").CfwAddressBook = null as any;
utilities.lazyLoad(exports, ["CfwAddressBook"], () => require("./cfwAddressBook"));

export { CfwAddressBooksArgs, CfwAddressBooksResult, CfwAddressBooksOutputArgs } from "./cfwAddressBooks";
export const cfwAddressBooks: typeof import("./cfwAddressBooks").cfwAddressBooks = null as any;
export const cfwAddressBooksOutput: typeof import("./cfwAddressBooks").cfwAddressBooksOutput = null as any;
utilities.lazyLoad(exports, ["cfwAddressBooks","cfwAddressBooksOutput"], () => require("./cfwAddressBooks"));

export { CfwControlPoliciesArgs, CfwControlPoliciesResult, CfwControlPoliciesOutputArgs } from "./cfwControlPolicies";
export const cfwControlPolicies: typeof import("./cfwControlPolicies").cfwControlPolicies = null as any;
export const cfwControlPoliciesOutput: typeof import("./cfwControlPolicies").cfwControlPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["cfwControlPolicies","cfwControlPoliciesOutput"], () => require("./cfwControlPolicies"));

export { CfwControlPolicyArgs, CfwControlPolicyState } from "./cfwControlPolicy";
export type CfwControlPolicy = import("./cfwControlPolicy").CfwControlPolicy;
export const CfwControlPolicy: typeof import("./cfwControlPolicy").CfwControlPolicy = null as any;
utilities.lazyLoad(exports, ["CfwControlPolicy"], () => require("./cfwControlPolicy"));

export { CfwControlPolicyPriorityArgs, CfwControlPolicyPriorityState } from "./cfwControlPolicyPriority";
export type CfwControlPolicyPriority = import("./cfwControlPolicyPriority").CfwControlPolicyPriority;
export const CfwControlPolicyPriority: typeof import("./cfwControlPolicyPriority").CfwControlPolicyPriority = null as any;
utilities.lazyLoad(exports, ["CfwControlPolicyPriority"], () => require("./cfwControlPolicyPriority"));

export { CfwDnsControlPoliciesArgs, CfwDnsControlPoliciesResult, CfwDnsControlPoliciesOutputArgs } from "./cfwDnsControlPolicies";
export const cfwDnsControlPolicies: typeof import("./cfwDnsControlPolicies").cfwDnsControlPolicies = null as any;
export const cfwDnsControlPoliciesOutput: typeof import("./cfwDnsControlPolicies").cfwDnsControlPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["cfwDnsControlPolicies","cfwDnsControlPoliciesOutput"], () => require("./cfwDnsControlPolicies"));

export { CfwDnsControlPolicyArgs, CfwDnsControlPolicyState } from "./cfwDnsControlPolicy";
export type CfwDnsControlPolicy = import("./cfwDnsControlPolicy").CfwDnsControlPolicy;
export const CfwDnsControlPolicy: typeof import("./cfwDnsControlPolicy").CfwDnsControlPolicy = null as any;
utilities.lazyLoad(exports, ["CfwDnsControlPolicy"], () => require("./cfwDnsControlPolicy"));

export { CfwNatFirewallControlPoliciesArgs, CfwNatFirewallControlPoliciesResult, CfwNatFirewallControlPoliciesOutputArgs } from "./cfwNatFirewallControlPolicies";
export const cfwNatFirewallControlPolicies: typeof import("./cfwNatFirewallControlPolicies").cfwNatFirewallControlPolicies = null as any;
export const cfwNatFirewallControlPoliciesOutput: typeof import("./cfwNatFirewallControlPolicies").cfwNatFirewallControlPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["cfwNatFirewallControlPolicies","cfwNatFirewallControlPoliciesOutput"], () => require("./cfwNatFirewallControlPolicies"));

export { CfwNatFirewallControlPolicyArgs, CfwNatFirewallControlPolicyState } from "./cfwNatFirewallControlPolicy";
export type CfwNatFirewallControlPolicy = import("./cfwNatFirewallControlPolicy").CfwNatFirewallControlPolicy;
export const CfwNatFirewallControlPolicy: typeof import("./cfwNatFirewallControlPolicy").CfwNatFirewallControlPolicy = null as any;
utilities.lazyLoad(exports, ["CfwNatFirewallControlPolicy"], () => require("./cfwNatFirewallControlPolicy"));

export { CfwNatFirewallControlPolicyPriorityArgs, CfwNatFirewallControlPolicyPriorityState } from "./cfwNatFirewallControlPolicyPriority";
export type CfwNatFirewallControlPolicyPriority = import("./cfwNatFirewallControlPolicyPriority").CfwNatFirewallControlPolicyPriority;
export const CfwNatFirewallControlPolicyPriority: typeof import("./cfwNatFirewallControlPolicyPriority").CfwNatFirewallControlPolicyPriority = null as any;
utilities.lazyLoad(exports, ["CfwNatFirewallControlPolicyPriority"], () => require("./cfwNatFirewallControlPolicyPriority"));

export { CfwVpcFirewallAclRuleArgs, CfwVpcFirewallAclRuleState } from "./cfwVpcFirewallAclRule";
export type CfwVpcFirewallAclRule = import("./cfwVpcFirewallAclRule").CfwVpcFirewallAclRule;
export const CfwVpcFirewallAclRule: typeof import("./cfwVpcFirewallAclRule").CfwVpcFirewallAclRule = null as any;
utilities.lazyLoad(exports, ["CfwVpcFirewallAclRule"], () => require("./cfwVpcFirewallAclRule"));

export { CfwVpcFirewallAclRulePriorityArgs, CfwVpcFirewallAclRulePriorityState } from "./cfwVpcFirewallAclRulePriority";
export type CfwVpcFirewallAclRulePriority = import("./cfwVpcFirewallAclRulePriority").CfwVpcFirewallAclRulePriority;
export const CfwVpcFirewallAclRulePriority: typeof import("./cfwVpcFirewallAclRulePriority").CfwVpcFirewallAclRulePriority = null as any;
utilities.lazyLoad(exports, ["CfwVpcFirewallAclRulePriority"], () => require("./cfwVpcFirewallAclRulePriority"));

export { CfwVpcFirewallAclRulesArgs, CfwVpcFirewallAclRulesResult, CfwVpcFirewallAclRulesOutputArgs } from "./cfwVpcFirewallAclRules";
export const cfwVpcFirewallAclRules: typeof import("./cfwVpcFirewallAclRules").cfwVpcFirewallAclRules = null as any;
export const cfwVpcFirewallAclRulesOutput: typeof import("./cfwVpcFirewallAclRules").cfwVpcFirewallAclRulesOutput = null as any;
utilities.lazyLoad(exports, ["cfwVpcFirewallAclRules","cfwVpcFirewallAclRulesOutput"], () => require("./cfwVpcFirewallAclRules"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:cloud_firewall/cfwAddressBook:CfwAddressBook":
                return new CfwAddressBook(name, <any>undefined, { urn })
            case "volcengine:cloud_firewall/cfwControlPolicy:CfwControlPolicy":
                return new CfwControlPolicy(name, <any>undefined, { urn })
            case "volcengine:cloud_firewall/cfwControlPolicyPriority:CfwControlPolicyPriority":
                return new CfwControlPolicyPriority(name, <any>undefined, { urn })
            case "volcengine:cloud_firewall/cfwDnsControlPolicy:CfwDnsControlPolicy":
                return new CfwDnsControlPolicy(name, <any>undefined, { urn })
            case "volcengine:cloud_firewall/cfwNatFirewallControlPolicy:CfwNatFirewallControlPolicy":
                return new CfwNatFirewallControlPolicy(name, <any>undefined, { urn })
            case "volcengine:cloud_firewall/cfwNatFirewallControlPolicyPriority:CfwNatFirewallControlPolicyPriority":
                return new CfwNatFirewallControlPolicyPriority(name, <any>undefined, { urn })
            case "volcengine:cloud_firewall/cfwVpcFirewallAclRule:CfwVpcFirewallAclRule":
                return new CfwVpcFirewallAclRule(name, <any>undefined, { urn })
            case "volcengine:cloud_firewall/cfwVpcFirewallAclRulePriority:CfwVpcFirewallAclRulePriority":
                return new CfwVpcFirewallAclRulePriority(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "cloud_firewall/cfwAddressBook", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloud_firewall/cfwControlPolicy", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloud_firewall/cfwControlPolicyPriority", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloud_firewall/cfwDnsControlPolicy", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloud_firewall/cfwNatFirewallControlPolicy", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloud_firewall/cfwNatFirewallControlPolicyPriority", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloud_firewall/cfwVpcFirewallAclRule", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloud_firewall/cfwVpcFirewallAclRulePriority", _module)
