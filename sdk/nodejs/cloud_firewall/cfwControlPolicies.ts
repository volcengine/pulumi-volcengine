// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cfw control policies
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cloud_firewall.CfwControlPolicies({
 *     actions: ["deny"],
 *     direction: "in",
 * });
 * ```
 */
export function cfwControlPolicies(args: CfwControlPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<CfwControlPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cloud_firewall/cfwControlPolicies:CfwControlPolicies", {
        "actions": args.actions,
        "description": args.description,
        "destination": args.destination,
        "direction": args.direction,
        "outputFile": args.outputFile,
        "protos": args.protos,
        "repeatTypes": args.repeatTypes,
        "ruleId": args.ruleId,
        "source": args.source,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking CfwControlPolicies.
 */
export interface CfwControlPoliciesArgs {
    /**
     * The action list of the control policy. Valid values: `accept`, `deny`, `monitor`.
     */
    actions?: string[];
    /**
     * The description of the control policy. This field support fuzzy query.
     */
    description?: string;
    /**
     * The destination of the control policy. This field support fuzzy query.
     */
    destination?: string;
    /**
     * The direction of control policy. Valid values: `in`, `out`.
     */
    direction: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The proto list of the control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destinationType is `domain`, The proto must be `TCP`.
     */
    protos?: string[];
    /**
     * The repeat type of the control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
     */
    repeatTypes?: string[];
    /**
     * The rule id of the control policy. This field support fuzzy query.
     */
    ruleId?: string;
    /**
     * The source of the control policy. This field support fuzzy query.
     */
    source?: string;
    /**
     * The enable status list of the control policy.
     */
    statuses?: boolean[];
}

/**
 * A collection of values returned by CfwControlPolicies.
 */
export interface CfwControlPoliciesResult {
    /**
     * The action of the control policy.
     */
    readonly actions?: string[];
    /**
     * The collection of query.
     */
    readonly controlPolicies: outputs.cloud_firewall.CfwControlPoliciesControlPolicy[];
    /**
     * The description of the control policy.
     */
    readonly description?: string;
    /**
     * The destination of the control policy.
     */
    readonly destination?: string;
    /**
     * The direction of the control policy.
     */
    readonly direction: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    /**
     * The proto of the control policy.
     */
    readonly protos?: string[];
    /**
     * The repeat type of the control policy.
     */
    readonly repeatTypes?: string[];
    /**
     * The id of the control policy.
     */
    readonly ruleId?: string;
    /**
     * The source of the control policy.
     */
    readonly source?: string;
    /**
     * Whether to enable the control policy.
     */
    readonly statuses?: boolean[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cfw control policies
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cloud_firewall.CfwControlPolicies({
 *     actions: ["deny"],
 *     direction: "in",
 * });
 * ```
 */
export function cfwControlPoliciesOutput(args: CfwControlPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<CfwControlPoliciesResult> {
    return pulumi.output(args).apply((a: any) => cfwControlPolicies(a, opts))
}

/**
 * A collection of arguments for invoking CfwControlPolicies.
 */
export interface CfwControlPoliciesOutputArgs {
    /**
     * The action list of the control policy. Valid values: `accept`, `deny`, `monitor`.
     */
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the control policy. This field support fuzzy query.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination of the control policy. This field support fuzzy query.
     */
    destination?: pulumi.Input<string>;
    /**
     * The direction of control policy. Valid values: `in`, `out`.
     */
    direction: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The proto list of the control policy. Valid values: `TCP`, `ICMP`, `UDP`, `ANY`. When the destinationType is `domain`, The proto must be `TCP`.
     */
    protos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The repeat type of the control policy. Valid values: `Permanent`, `Once`, `Daily`, `Weekly`, `Monthly`.
     */
    repeatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The rule id of the control policy. This field support fuzzy query.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * The source of the control policy. This field support fuzzy query.
     */
    source?: pulumi.Input<string>;
    /**
     * The enable status list of the control policy.
     */
    statuses?: pulumi.Input<pulumi.Input<boolean>[]>;
}
