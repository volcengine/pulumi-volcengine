// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage cfw dns control policy
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooCfwDnsControlPolicy = new volcengine.cloud_firewall.CfwDnsControlPolicy("fooCfwDnsControlPolicy", {
 *     description: "acc-test-dns-control-policy",
 *     destinationType: "domain",
 *     destination: "www.test.com",
 *     sources: [{
 *         vpcId: fooVpc.id,
 *         region: "cn-beijing",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * DnsControlPolicy can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:cloud_firewall/cfwDnsControlPolicy:CfwDnsControlPolicy default resource_id
 * ```
 */
export class CfwDnsControlPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CfwDnsControlPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CfwDnsControlPolicyState, opts?: pulumi.CustomResourceOptions): CfwDnsControlPolicy {
        return new CfwDnsControlPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:cloud_firewall/cfwDnsControlPolicy:CfwDnsControlPolicy';

    /**
     * Returns true if the given object is an instance of CfwDnsControlPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CfwDnsControlPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CfwDnsControlPolicy.__pulumiType;
    }

    /**
     * The account id of the dns control policy.
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * The description of the dns control policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The destination of the dns control policy.
     */
    public readonly destination!: pulumi.Output<string>;
    /**
     * The destination type of the dns control policy. Valid values: `group`, `domain`.
     */
    public readonly destinationType!: pulumi.Output<string>;
    /**
     * The hit count of the dns control policy.
     */
    public /*out*/ readonly hitCnt!: pulumi.Output<number>;
    /**
     * The internet firewall id of the control policy.
     */
    public readonly internetFirewallId!: pulumi.Output<string>;
    /**
     * The last hit time of the dns control policy. Unix timestamp.
     */
    public /*out*/ readonly lastHitTime!: pulumi.Output<number>;
    /**
     * The source vpc list of the dns control policy.
     */
    public readonly sources!: pulumi.Output<outputs.cloud_firewall.CfwDnsControlPolicySource[]>;
    /**
     * Whether to enable the dns control policy.
     */
    public readonly status!: pulumi.Output<boolean>;
    /**
     * The use count of the dns control policy.
     */
    public /*out*/ readonly useCount!: pulumi.Output<number>;

    /**
     * Create a CfwDnsControlPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CfwDnsControlPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CfwDnsControlPolicyArgs | CfwDnsControlPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CfwDnsControlPolicyState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["destinationType"] = state ? state.destinationType : undefined;
            resourceInputs["hitCnt"] = state ? state.hitCnt : undefined;
            resourceInputs["internetFirewallId"] = state ? state.internetFirewallId : undefined;
            resourceInputs["lastHitTime"] = state ? state.lastHitTime : undefined;
            resourceInputs["sources"] = state ? state.sources : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["useCount"] = state ? state.useCount : undefined;
        } else {
            const args = argsOrState as CfwDnsControlPolicyArgs | undefined;
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if ((!args || args.destinationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationType'");
            }
            if ((!args || args.sources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sources'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["destinationType"] = args ? args.destinationType : undefined;
            resourceInputs["internetFirewallId"] = args ? args.internetFirewallId : undefined;
            resourceInputs["sources"] = args ? args.sources : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["hitCnt"] = undefined /*out*/;
            resourceInputs["lastHitTime"] = undefined /*out*/;
            resourceInputs["useCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CfwDnsControlPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CfwDnsControlPolicy resources.
 */
export interface CfwDnsControlPolicyState {
    /**
     * The account id of the dns control policy.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The description of the dns control policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination of the dns control policy.
     */
    destination?: pulumi.Input<string>;
    /**
     * The destination type of the dns control policy. Valid values: `group`, `domain`.
     */
    destinationType?: pulumi.Input<string>;
    /**
     * The hit count of the dns control policy.
     */
    hitCnt?: pulumi.Input<number>;
    /**
     * The internet firewall id of the control policy.
     */
    internetFirewallId?: pulumi.Input<string>;
    /**
     * The last hit time of the dns control policy. Unix timestamp.
     */
    lastHitTime?: pulumi.Input<number>;
    /**
     * The source vpc list of the dns control policy.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.cloud_firewall.CfwDnsControlPolicySource>[]>;
    /**
     * Whether to enable the dns control policy.
     */
    status?: pulumi.Input<boolean>;
    /**
     * The use count of the dns control policy.
     */
    useCount?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CfwDnsControlPolicy resource.
 */
export interface CfwDnsControlPolicyArgs {
    /**
     * The description of the dns control policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination of the dns control policy.
     */
    destination: pulumi.Input<string>;
    /**
     * The destination type of the dns control policy. Valid values: `group`, `domain`.
     */
    destinationType: pulumi.Input<string>;
    /**
     * The internet firewall id of the control policy.
     */
    internetFirewallId?: pulumi.Input<string>;
    /**
     * The source vpc list of the dns control policy.
     */
    sources: pulumi.Input<pulumi.Input<inputs.cloud_firewall.CfwDnsControlPolicySource>[]>;
    /**
     * Whether to enable the dns control policy.
     */
    status?: pulumi.Input<boolean>;
}
