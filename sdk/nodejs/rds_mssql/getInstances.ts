// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of rds mssql instances
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.rds_mssql.getInstances({
 *     instanceId: "mssql-d2fc5abe****",
 * });
 * ```
 */
export function getInstances(args?: GetInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:rds_mssql/getInstances:getInstances", {
        "chargeType": args.chargeType,
        "createTimeEnd": args.createTimeEnd,
        "createTimeStart": args.createTimeStart,
        "dbEngineVersion": args.dbEngineVersion,
        "instanceId": args.instanceId,
        "instanceName": args.instanceName,
        "instanceStatus": args.instanceStatus,
        "instanceType": args.instanceType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "tags": args.tags,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesArgs {
    /**
     * The charge type. Valid values: `PostPaid`, `PrePaid`.
     */
    chargeType?: string;
    /**
     * The end time of creating the instance, using UTC time format.
     */
    createTimeEnd?: string;
    /**
     * The start time of creating the instance, using UTC time format.
     */
    createTimeStart?: string;
    /**
     * Compatible version. Valid values: `SQLServer_2019_Std`, `SQLServer_2019_Web`, `SQLServer_2019_Ent`.
     */
    dbEngineVersion?: string;
    /**
     * Id of the instance.
     */
    instanceId?: string;
    /**
     * Name of the instance.
     */
    instanceName?: string;
    /**
     * Status of the instance.
     */
    instanceStatus?: string;
    /**
     * Instance type. Valid values: `HA`, `Basic`, `Cluster`.
     */
    instanceType?: string;
    /**
     * A Name Regex of RDS mssql instance.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * Tags.
     */
    tags?: inputs.rds_mssql.GetInstancesTag[];
    /**
     * The id of the zone.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getInstances.
 */
export interface GetInstancesResult {
    /**
     * The charge type.
     */
    readonly chargeType?: string;
    readonly createTimeEnd?: string;
    readonly createTimeStart?: string;
    /**
     * The db engine version.
     */
    readonly dbEngineVersion?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Instance ID.
     */
    readonly instanceId?: string;
    /**
     * The name of the instance.
     */
    readonly instanceName?: string;
    /**
     * The status of the instance.
     */
    readonly instanceStatus?: string;
    /**
     * The type of the instance.
     */
    readonly instanceType?: string;
    /**
     * The collection of query.
     */
    readonly instances: outputs.rds_mssql.GetInstancesInstance[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * Tags.
     */
    readonly tags?: outputs.rds_mssql.GetInstancesTag[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The zone id.
     */
    readonly zoneId?: string;
}
/**
 * Use this data source to query detailed information of rds mssql instances
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.rds_mssql.getInstances({
 *     instanceId: "mssql-d2fc5abe****",
 * });
 * ```
 */
export function getInstancesOutput(args?: GetInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstancesResult> {
    return pulumi.output(args).apply((a: any) => getInstances(a, opts))
}

/**
 * A collection of arguments for invoking getInstances.
 */
export interface GetInstancesOutputArgs {
    /**
     * The charge type. Valid values: `PostPaid`, `PrePaid`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The end time of creating the instance, using UTC time format.
     */
    createTimeEnd?: pulumi.Input<string>;
    /**
     * The start time of creating the instance, using UTC time format.
     */
    createTimeStart?: pulumi.Input<string>;
    /**
     * Compatible version. Valid values: `SQLServer_2019_Std`, `SQLServer_2019_Web`, `SQLServer_2019_Ent`.
     */
    dbEngineVersion?: pulumi.Input<string>;
    /**
     * Id of the instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Name of the instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Status of the instance.
     */
    instanceStatus?: pulumi.Input<string>;
    /**
     * Instance type. Valid values: `HA`, `Basic`, `Cluster`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * A Name Regex of RDS mssql instance.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.rds_mssql.GetInstancesTagArgs>[]>;
    /**
     * The id of the zone.
     */
    zoneId?: pulumi.Input<string>;
}
