// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage ha vip associate
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooZones = volcengine.ecs.Zones({});
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooSubnet = new volcengine.vpc.Subnet("fooSubnet", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[0]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const fooSecurityGroup = new volcengine.vpc.SecurityGroup("fooSecurityGroup", {
 *     securityGroupName: "acc-test-sg",
 *     vpcId: fooVpc.id,
 * });
 * const fooNetworkInterface = new volcengine.vpc.NetworkInterface("fooNetworkInterface", {
 *     networkInterfaceName: "acc-test-eni",
 *     description: "acc-test",
 *     subnetId: fooSubnet.id,
 *     securityGroupIds: [fooSecurityGroup.id],
 *     primaryIpAddress: "172.16.0.253",
 *     portSecurityEnabled: false,
 *     privateIpAddresses: ["172.16.0.2"],
 *     projectName: "default",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * const fooHaVip = new volcengine.vpc.HaVip("fooHaVip", {
 *     haVipName: "acc-test-ha-vip",
 *     description: "acc-test",
 *     subnetId: fooSubnet.id,
 *     ipAddress: "172.16.0.5",
 * });
 * const fooHaVipAssociate = new volcengine.vpc.HaVipAssociate("fooHaVipAssociate", {
 *     haVipId: fooHaVip.id,
 *     instanceType: "NetworkInterface",
 *     instanceId: fooNetworkInterface.id,
 * });
 * ```
 *
 * ## Import
 *
 * HaVipAssociate can be imported using the ha_vip_id:instance_id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:vpc/haVipAssociate:HaVipAssociate default havip-2byzv8icq1b7k2dx0eegb****:eni-2d5wv84h7onpc58ozfeeu****
 * ```
 */
export class HaVipAssociate extends pulumi.CustomResource {
    /**
     * Get an existing HaVipAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HaVipAssociateState, opts?: pulumi.CustomResourceOptions): HaVipAssociate {
        return new HaVipAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vpc/haVipAssociate:HaVipAssociate';

    /**
     * Returns true if the given object is an instance of HaVipAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HaVipAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HaVipAssociate.__pulumiType;
    }

    /**
     * The id of the Ha Vip.
     */
    public readonly haVipId!: pulumi.Output<string>;
    /**
     * The id of the associated instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The type of the associated instance. Valid values: `EcsInstance`, `NetworkInterface`.
     */
    public readonly instanceType!: pulumi.Output<string | undefined>;

    /**
     * Create a HaVipAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HaVipAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HaVipAssociateArgs | HaVipAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HaVipAssociateState | undefined;
            resourceInputs["haVipId"] = state ? state.haVipId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
        } else {
            const args = argsOrState as HaVipAssociateArgs | undefined;
            if ((!args || args.haVipId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'haVipId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["haVipId"] = args ? args.haVipId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HaVipAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HaVipAssociate resources.
 */
export interface HaVipAssociateState {
    /**
     * The id of the Ha Vip.
     */
    haVipId?: pulumi.Input<string>;
    /**
     * The id of the associated instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The type of the associated instance. Valid values: `EcsInstance`, `NetworkInterface`.
     */
    instanceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HaVipAssociate resource.
 */
export interface HaVipAssociateArgs {
    /**
     * The id of the Ha Vip.
     */
    haVipId: pulumi.Input<string>;
    /**
     * The id of the associated instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The type of the associated instance. Valid values: `EcsInstance`, `NetworkInterface`.
     */
    instanceType?: pulumi.Input<string>;
}
