// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage traffic mirror filter
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.vpc.TrafficMirrorFilter("foo", {
 *     description: "acc-test",
 *     projectName: "default",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 *     trafficMirrorFilterName: "acc-test-traffic-mirror-filter",
 * });
 * ```
 *
 * ## Import
 *
 * TrafficMirrorFilter can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:vpc/trafficMirrorFilter:TrafficMirrorFilter default resource_id
 * ```
 */
export class TrafficMirrorFilter extends pulumi.CustomResource {
    /**
     * Get an existing TrafficMirrorFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrafficMirrorFilterState, opts?: pulumi.CustomResourceOptions): TrafficMirrorFilter {
        return new TrafficMirrorFilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vpc/trafficMirrorFilter:TrafficMirrorFilter';

    /**
     * Returns true if the given object is an instance of TrafficMirrorFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrafficMirrorFilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrafficMirrorFilter.__pulumiType;
    }

    /**
     * The create time of traffic mirror filter.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the traffic mirror filter.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The project name of the traffic mirror filter.
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * The status of traffic mirror filter.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.vpc.TrafficMirrorFilterTag[] | undefined>;
    /**
     * The name of the traffic mirror filter.
     */
    public readonly trafficMirrorFilterName!: pulumi.Output<string>;
    /**
     * The last update time of traffic mirror filter.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a TrafficMirrorFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TrafficMirrorFilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrafficMirrorFilterArgs | TrafficMirrorFilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrafficMirrorFilterState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["trafficMirrorFilterName"] = state ? state.trafficMirrorFilterName : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as TrafficMirrorFilterArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trafficMirrorFilterName"] = args ? args.trafficMirrorFilterName : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrafficMirrorFilter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TrafficMirrorFilter resources.
 */
export interface TrafficMirrorFilterState {
    /**
     * The create time of traffic mirror filter.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the traffic mirror filter.
     */
    description?: pulumi.Input<string>;
    /**
     * The project name of the traffic mirror filter.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The status of traffic mirror filter.
     */
    status?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.TrafficMirrorFilterTag>[]>;
    /**
     * The name of the traffic mirror filter.
     */
    trafficMirrorFilterName?: pulumi.Input<string>;
    /**
     * The last update time of traffic mirror filter.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TrafficMirrorFilter resource.
 */
export interface TrafficMirrorFilterArgs {
    /**
     * The description of the traffic mirror filter.
     */
    description?: pulumi.Input<string>;
    /**
     * The project name of the traffic mirror filter.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.TrafficMirrorFilterTag>[]>;
    /**
     * The name of the traffic mirror filter.
     */
    trafficMirrorFilterName?: pulumi.Input<string>;
}
