// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vpc cidr block associate
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "192.168.0.0/20",
 *     projectName: "default",
 * });
 * const fooCidrBlockAssociate = new volcengine.vpc.CidrBlockAssociate("fooCidrBlockAssociate", {
 *     vpcId: fooVpc.id,
 *     secondaryCidrBlock: "192.168.16.0/20",
 * });
 * ```
 *
 * ## Import
 *
 * The VpcCidrBlockAssociate is not support import.
 */
export class CidrBlockAssociate extends pulumi.CustomResource {
    /**
     * Get an existing CidrBlockAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CidrBlockAssociateState, opts?: pulumi.CustomResourceOptions): CidrBlockAssociate {
        return new CidrBlockAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vpc/cidrBlockAssociate:CidrBlockAssociate';

    /**
     * Returns true if the given object is an instance of CidrBlockAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CidrBlockAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CidrBlockAssociate.__pulumiType;
    }

    /**
     * The secondary cidr block of the VPC.
     */
    public readonly secondaryCidrBlock!: pulumi.Output<string>;
    /**
     * The id of the VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a CidrBlockAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CidrBlockAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CidrBlockAssociateArgs | CidrBlockAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CidrBlockAssociateState | undefined;
            resourceInputs["secondaryCidrBlock"] = state ? state.secondaryCidrBlock : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as CidrBlockAssociateArgs | undefined;
            if ((!args || args.secondaryCidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secondaryCidrBlock'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["secondaryCidrBlock"] = args ? args.secondaryCidrBlock : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CidrBlockAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CidrBlockAssociate resources.
 */
export interface CidrBlockAssociateState {
    /**
     * The secondary cidr block of the VPC.
     */
    secondaryCidrBlock?: pulumi.Input<string>;
    /**
     * The id of the VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CidrBlockAssociate resource.
 */
export interface CidrBlockAssociateArgs {
    /**
     * The secondary cidr block of the VPC.
     */
    secondaryCidrBlock: pulumi.Input<string>;
    /**
     * The id of the VPC.
     */
    vpcId: pulumi.Input<string>;
}
