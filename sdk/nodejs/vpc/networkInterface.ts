// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage network interface
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooZones = volcengine.ecs.getZones({});
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooSubnet = new volcengine.vpc.Subnet("fooSubnet", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[0]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const fooSecurityGroup = new volcengine.vpc.SecurityGroup("fooSecurityGroup", {
 *     securityGroupName: "acc-test-sg",
 *     vpcId: fooVpc.id,
 * });
 * const fooNetworkInterface = new volcengine.vpc.NetworkInterface("fooNetworkInterface", {
 *     networkInterfaceName: "acc-test-eni",
 *     description: "acc-test",
 *     subnetId: fooSubnet.id,
 *     securityGroupIds: [fooSecurityGroup.id],
 *     primaryIpAddress: "172.16.0.253",
 *     portSecurityEnabled: false,
 *     privateIpAddresses: ["172.16.0.2"],
 *     projectName: "default",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Network interface can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:vpc/networkInterface:NetworkInterface default eni-bp1fgnh68xyz9****
 * ```
 */
export class NetworkInterface extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkInterfaceState, opts?: pulumi.CustomResourceOptions): NetworkInterface {
        return new NetworkInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vpc/networkInterface:NetworkInterface';

    /**
     * Returns true if the given object is an instance of NetworkInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInterface.__pulumiType;
    }

    /**
     * The description of the ENI.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 0 to 10.
     * You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
     */
    public readonly ipv6AddressCount!: pulumi.Output<number>;
    /**
     * One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
     * You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
     */
    public readonly ipv6Addresses!: pulumi.Output<string[]>;
    /**
     * The name of the ENI.
     */
    public readonly networkInterfaceName!: pulumi.Output<string>;
    /**
     * Set port security enable or disable.
     */
    public readonly portSecurityEnabled!: pulumi.Output<boolean>;
    /**
     * The primary IP address of the ENI.
     */
    public readonly primaryIpAddress!: pulumi.Output<string>;
    /**
     * The list of private ip address. This field conflicts with `secondaryPrivateIpAddressCount`.
     */
    public readonly privateIpAddresses!: pulumi.Output<string[]>;
    /**
     * The ProjectName of the ENI.
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * The count of secondary private ip address. This field conflicts with `privateIpAddress`.
     */
    public readonly secondaryPrivateIpAddressCount!: pulumi.Output<number>;
    /**
     * The list of the security group id to which the secondary ENI belongs.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * The status of the ENI.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The id of the subnet to which the ENI is connected.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.vpc.NetworkInterfaceTag[] | undefined>;

    /**
     * Create a NetworkInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkInterfaceArgs | NetworkInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkInterfaceState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipv6AddressCount"] = state ? state.ipv6AddressCount : undefined;
            resourceInputs["ipv6Addresses"] = state ? state.ipv6Addresses : undefined;
            resourceInputs["networkInterfaceName"] = state ? state.networkInterfaceName : undefined;
            resourceInputs["portSecurityEnabled"] = state ? state.portSecurityEnabled : undefined;
            resourceInputs["primaryIpAddress"] = state ? state.primaryIpAddress : undefined;
            resourceInputs["privateIpAddresses"] = state ? state.privateIpAddresses : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["secondaryPrivateIpAddressCount"] = state ? state.secondaryPrivateIpAddressCount : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as NetworkInterfaceArgs | undefined;
            if ((!args || args.securityGroupIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupIds'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipv6AddressCount"] = args ? args.ipv6AddressCount : undefined;
            resourceInputs["ipv6Addresses"] = args ? args.ipv6Addresses : undefined;
            resourceInputs["networkInterfaceName"] = args ? args.networkInterfaceName : undefined;
            resourceInputs["portSecurityEnabled"] = args ? args.portSecurityEnabled : undefined;
            resourceInputs["primaryIpAddress"] = args ? args.primaryIpAddress : undefined;
            resourceInputs["privateIpAddresses"] = args ? args.privateIpAddresses : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["secondaryPrivateIpAddressCount"] = args ? args.secondaryPrivateIpAddressCount : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkInterface.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkInterface resources.
 */
export interface NetworkInterfaceState {
    /**
     * The description of the ENI.
     */
    description?: pulumi.Input<string>;
    /**
     * The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 0 to 10.
     * You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
     */
    ipv6AddressCount?: pulumi.Input<number>;
    /**
     * One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
     * You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
     */
    ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the ENI.
     */
    networkInterfaceName?: pulumi.Input<string>;
    /**
     * Set port security enable or disable.
     */
    portSecurityEnabled?: pulumi.Input<boolean>;
    /**
     * The primary IP address of the ENI.
     */
    primaryIpAddress?: pulumi.Input<string>;
    /**
     * The list of private ip address. This field conflicts with `secondaryPrivateIpAddressCount`.
     */
    privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ProjectName of the ENI.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The count of secondary private ip address. This field conflicts with `privateIpAddress`.
     */
    secondaryPrivateIpAddressCount?: pulumi.Input<number>;
    /**
     * The list of the security group id to which the secondary ENI belongs.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the ENI.
     */
    status?: pulumi.Input<string>;
    /**
     * The id of the subnet to which the ENI is connected.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.NetworkInterfaceTag>[]>;
}

/**
 * The set of arguments for constructing a NetworkInterface resource.
 */
export interface NetworkInterfaceArgs {
    /**
     * The description of the ENI.
     */
    description?: pulumi.Input<string>;
    /**
     * The number of IPv6 addresses to be automatically assigned from within the CIDR block of the subnet that hosts the ENI. Valid values: 0 to 10.
     * You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
     */
    ipv6AddressCount?: pulumi.Input<number>;
    /**
     * One or more IPv6 addresses selected from within the CIDR block of the subnet that hosts the ENI. Support up to 10.
     * You cannot specify both the ipv6Addresses and ipv6AddressCount parameters.
     */
    ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the ENI.
     */
    networkInterfaceName?: pulumi.Input<string>;
    /**
     * Set port security enable or disable.
     */
    portSecurityEnabled?: pulumi.Input<boolean>;
    /**
     * The primary IP address of the ENI.
     */
    primaryIpAddress?: pulumi.Input<string>;
    /**
     * The list of private ip address. This field conflicts with `secondaryPrivateIpAddressCount`.
     */
    privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ProjectName of the ENI.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The count of secondary private ip address. This field conflicts with `privateIpAddress`.
     */
    secondaryPrivateIpAddressCount?: pulumi.Input<number>;
    /**
     * The list of the security group id to which the secondary ENI belongs.
     */
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the subnet to which the ENI is connected.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.NetworkInterfaceTag>[]>;
}
