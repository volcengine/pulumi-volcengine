// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vpc prefix lists
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPrefixList = new volcengine.vpc.PrefixList("fooPrefixList", {
 *     prefixListName: "acc-test-prefix",
 *     maxEntries: 3,
 *     description: "acc test description",
 *     ipVersion: "IPv4",
 *     prefixListEntries: [
 *         {
 *             cidr: "192.168.4.0/28",
 *             description: "acc-test-1",
 *         },
 *         {
 *             cidr: "192.168.5.0/28",
 *             description: "acc-test-2",
 *         },
 *     ],
 *     tags: [{
 *         key: "tf-key1",
 *         value: "tf-value1",
 *     }],
 * });
 * const fooPrefixLists = volcengine.vpc.getPrefixListsOutput({
 *     ids: [fooPrefixList.id],
 * });
 * ```
 */
/** @deprecated volcengine.vpc.PrefixLists has been deprecated in favor of volcengine.vpc.getPrefixLists */
export function prefixLists(args?: PrefixListsArgs, opts?: pulumi.InvokeOptions): Promise<PrefixListsResult> {
    pulumi.log.warn("prefixLists is deprecated: volcengine.vpc.PrefixLists has been deprecated in favor of volcengine.vpc.getPrefixLists")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vpc/prefixLists:PrefixLists", {
        "ids": args.ids,
        "ipVersion": args.ipVersion,
        "outputFile": args.outputFile,
        "prefixListName": args.prefixListName,
        "tagFilters": args.tagFilters,
    }, opts);
}

/**
 * A collection of arguments for invoking PrefixLists.
 */
export interface PrefixListsArgs {
    /**
     * A list of prefix list ids.
     */
    ids?: string[];
    /**
     * IP version of prefix list.
     */
    ipVersion?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * A Name of prefix list.
     */
    prefixListName?: string;
    /**
     * List of tag filters.
     */
    tagFilters?: inputs.vpc.PrefixListsTagFilter[];
}

/**
 * A collection of values returned by PrefixLists.
 */
export interface PrefixListsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * The ip version of the prefix list.
     */
    readonly ipVersion?: string;
    readonly outputFile?: string;
    /**
     * The prefix list name.
     */
    readonly prefixListName?: string;
    /**
     * The collection of query.
     */
    readonly prefixLists: outputs.vpc.PrefixListsPrefixList[];
    readonly tagFilters?: outputs.vpc.PrefixListsTagFilter[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of vpc prefix lists
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooPrefixList = new volcengine.vpc.PrefixList("fooPrefixList", {
 *     prefixListName: "acc-test-prefix",
 *     maxEntries: 3,
 *     description: "acc test description",
 *     ipVersion: "IPv4",
 *     prefixListEntries: [
 *         {
 *             cidr: "192.168.4.0/28",
 *             description: "acc-test-1",
 *         },
 *         {
 *             cidr: "192.168.5.0/28",
 *             description: "acc-test-2",
 *         },
 *     ],
 *     tags: [{
 *         key: "tf-key1",
 *         value: "tf-value1",
 *     }],
 * });
 * const fooPrefixLists = volcengine.vpc.getPrefixListsOutput({
 *     ids: [fooPrefixList.id],
 * });
 * ```
 */
/** @deprecated volcengine.vpc.PrefixLists has been deprecated in favor of volcengine.vpc.getPrefixLists */
export function prefixListsOutput(args?: PrefixListsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<PrefixListsResult> {
    return pulumi.output(args).apply((a: any) => prefixLists(a, opts))
}

/**
 * A collection of arguments for invoking PrefixLists.
 */
export interface PrefixListsOutputArgs {
    /**
     * A list of prefix list ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IP version of prefix list.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A Name of prefix list.
     */
    prefixListName?: pulumi.Input<string>;
    /**
     * List of tag filters.
     */
    tagFilters?: pulumi.Input<pulumi.Input<inputs.vpc.PrefixListsTagFilterArgs>[]>;
}
