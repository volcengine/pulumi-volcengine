// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const dataEcs = volcengine.ecs.Instances({
 *     ids: ["i-ycal1mtpucl8j0hjiihy"],
 * });
 * const dataIpv6 = dataEcs.then(dataEcs => volcengine.vpc.Ipv6Addresses({
 *     associatedInstanceId: dataEcs.instances?.[0]?.instanceId,
 * }));
 * const foo = new volcengine.vpc.Ipv6AddressBandwidth("foo", {
 *     ipv6Address: dataIpv6.then(dataIpv6 => dataIpv6.ipv6Addresses?.[0]?.ipv6Address),
 *     billingType: "PostPaidByBandwidth",
 *     bandwidth: 5,
 * });
 * ```
 *
 * ## Import
 *
 * Ipv6AddressBandwidth can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:vpc/ipv6AddressBandwidth:Ipv6AddressBandwidth default eip-2fede9fsgnr4059gp674m6ney
 * ```
 */
export class Ipv6AddressBandwidth extends pulumi.CustomResource {
    /**
     * Get an existing Ipv6AddressBandwidth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv6AddressBandwidthState, opts?: pulumi.CustomResourceOptions): Ipv6AddressBandwidth {
        return new Ipv6AddressBandwidth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vpc/ipv6AddressBandwidth:Ipv6AddressBandwidth';

    /**
     * Returns true if the given object is an instance of Ipv6AddressBandwidth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv6AddressBandwidth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv6AddressBandwidth.__pulumiType;
    }

    /**
     * The ID of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly allocationId!: pulumi.Output<string>;
    /**
     * Peek bandwidth of the Ipv6 address. Valid values: 1 to 200. Unit: Mbit/s.
     */
    public readonly bandwidth!: pulumi.Output<number>;
    /**
     * BillingType of the Ipv6 bandwidth. Valid values: `PostPaidByBandwidth`; `PostPaidByTraffic`.
     */
    public readonly billingType!: pulumi.Output<string>;
    /**
     * The BusinessStatus of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly businessStatus!: pulumi.Output<string>;
    /**
     * Creation time of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * Delete time of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly deleteTime!: pulumi.Output<string>;
    /**
     * The ID of the associated instance.
     */
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    /**
     * The type of the associated instance.
     */
    public /*out*/ readonly instanceType!: pulumi.Output<string>;
    /**
     * Ipv6 address.
     */
    public readonly ipv6Address!: pulumi.Output<string>;
    /**
     * The ISP of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly isp!: pulumi.Output<string>;
    /**
     * The BusinessStatus of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly lockReason!: pulumi.Output<string>;
    /**
     * The network type of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly networkType!: pulumi.Output<string>;
    /**
     * Overdue time of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly overdueTime!: pulumi.Output<string>;
    /**
     * The status of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Update time of the Ipv6AddressBandwidth.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Ipv6AddressBandwidth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv6AddressBandwidthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv6AddressBandwidthArgs | Ipv6AddressBandwidthState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv6AddressBandwidthState | undefined;
            resourceInputs["allocationId"] = state ? state.allocationId : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["billingType"] = state ? state.billingType : undefined;
            resourceInputs["businessStatus"] = state ? state.businessStatus : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["deleteTime"] = state ? state.deleteTime : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["isp"] = state ? state.isp : undefined;
            resourceInputs["lockReason"] = state ? state.lockReason : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["overdueTime"] = state ? state.overdueTime : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as Ipv6AddressBandwidthArgs | undefined;
            if ((!args || args.billingType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'billingType'");
            }
            if ((!args || args.ipv6Address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv6Address'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["billingType"] = args ? args.billingType : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["allocationId"] = undefined /*out*/;
            resourceInputs["businessStatus"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["deleteTime"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["instanceType"] = undefined /*out*/;
            resourceInputs["isp"] = undefined /*out*/;
            resourceInputs["lockReason"] = undefined /*out*/;
            resourceInputs["networkType"] = undefined /*out*/;
            resourceInputs["overdueTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv6AddressBandwidth.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ipv6AddressBandwidth resources.
 */
export interface Ipv6AddressBandwidthState {
    /**
     * The ID of the Ipv6AddressBandwidth.
     */
    allocationId?: pulumi.Input<string>;
    /**
     * Peek bandwidth of the Ipv6 address. Valid values: 1 to 200. Unit: Mbit/s.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * BillingType of the Ipv6 bandwidth. Valid values: `PostPaidByBandwidth`; `PostPaidByTraffic`.
     */
    billingType?: pulumi.Input<string>;
    /**
     * The BusinessStatus of the Ipv6AddressBandwidth.
     */
    businessStatus?: pulumi.Input<string>;
    /**
     * Creation time of the Ipv6AddressBandwidth.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * Delete time of the Ipv6AddressBandwidth.
     */
    deleteTime?: pulumi.Input<string>;
    /**
     * The ID of the associated instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The type of the associated instance.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Ipv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * The ISP of the Ipv6AddressBandwidth.
     */
    isp?: pulumi.Input<string>;
    /**
     * The BusinessStatus of the Ipv6AddressBandwidth.
     */
    lockReason?: pulumi.Input<string>;
    /**
     * The network type of the Ipv6AddressBandwidth.
     */
    networkType?: pulumi.Input<string>;
    /**
     * Overdue time of the Ipv6AddressBandwidth.
     */
    overdueTime?: pulumi.Input<string>;
    /**
     * The status of the Ipv6AddressBandwidth.
     */
    status?: pulumi.Input<string>;
    /**
     * Update time of the Ipv6AddressBandwidth.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv6AddressBandwidth resource.
 */
export interface Ipv6AddressBandwidthArgs {
    /**
     * Peek bandwidth of the Ipv6 address. Valid values: 1 to 200. Unit: Mbit/s.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * BillingType of the Ipv6 bandwidth. Valid values: `PostPaidByBandwidth`; `PostPaidByTraffic`.
     */
    billingType: pulumi.Input<string>;
    /**
     * Ipv6 address.
     */
    ipv6Address: pulumi.Input<string>;
}
