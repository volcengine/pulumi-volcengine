// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of route tables
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vpc.getRouteTables({
 *     ids: [
 *         "vtb-274e19skkuhog7fap8u4i8ird",
 *         "vtb-2744hslq5b7r47fap8tjomgnj",
 *     ],
 *     routeTableName: "vpc-fast",
 * });
 * ```
 */
export function getRouteTables(args?: GetRouteTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteTablesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vpc/getRouteTables:getRouteTables", {
        "ids": args.ids,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
        "routeTableName": args.routeTableName,
        "tags": args.tags,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteTables.
 */
export interface GetRouteTablesArgs {
    /**
     * A list of route table ids.
     */
    ids?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The ProjectName of the route table.
     */
    projectName?: string;
    /**
     * A name of route table.
     */
    routeTableName?: string;
    /**
     * Tags.
     */
    tags?: inputs.vpc.GetRouteTablesTag[];
    /**
     * An id of VPC.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getRouteTables.
 */
export interface GetRouteTablesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly outputFile?: string;
    /**
     * The ProjectName of the route table.
     */
    readonly projectName?: string;
    /**
     * The name of the route table.
     */
    readonly routeTableName?: string;
    /**
     * The collection of route tables.
     */
    readonly routeTables: outputs.vpc.GetRouteTablesRouteTable[];
    /**
     * Tags.
     */
    readonly tags?: outputs.vpc.GetRouteTablesTag[];
    /**
     * The total count of route table query.
     */
    readonly totalCount: number;
    /**
     * The id of the virtual private cloud (VPC) to which the route entry belongs.
     */
    readonly vpcId?: string;
}
/**
 * Use this data source to query detailed information of route tables
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vpc.getRouteTables({
 *     ids: [
 *         "vtb-274e19skkuhog7fap8u4i8ird",
 *         "vtb-2744hslq5b7r47fap8tjomgnj",
 *     ],
 *     routeTableName: "vpc-fast",
 * });
 * ```
 */
export function getRouteTablesOutput(args?: GetRouteTablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouteTablesResult> {
    return pulumi.output(args).apply((a: any) => getRouteTables(a, opts))
}

/**
 * A collection of arguments for invoking getRouteTables.
 */
export interface GetRouteTablesOutputArgs {
    /**
     * A list of route table ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ProjectName of the route table.
     */
    projectName?: pulumi.Input<string>;
    /**
     * A name of route table.
     */
    routeTableName?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.GetRouteTablesTagArgs>[]>;
    /**
     * An id of VPC.
     */
    vpcId?: pulumi.Input<string>;
}
