// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage route table associate
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.vpc.RouteTableAssociate("foo", {
 *     routeTableId: "vtb-274e19skkuhog7fap8u4i8ird",
 *     subnetId: "subnet-2744ht7fhjthc7fap8tm10eqg",
 * });
 * ```
 *
 * ## Import
 *
 * Route table associate address can be imported using the route_table_id:subnet_id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:vpc/routeTableAssociate:RouteTableAssociate default vtb-2fdzao4h726f45******:subnet-2fdzaou4liw3k5oxruv******
 * ```
 */
export class RouteTableAssociate extends pulumi.CustomResource {
    /**
     * Get an existing RouteTableAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteTableAssociateState, opts?: pulumi.CustomResourceOptions): RouteTableAssociate {
        return new RouteTableAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vpc/routeTableAssociate:RouteTableAssociate';

    /**
     * Returns true if the given object is an instance of RouteTableAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouteTableAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouteTableAssociate.__pulumiType;
    }

    /**
     * The id of the route table.
     */
    public readonly routeTableId!: pulumi.Output<string>;
    /**
     * The id of the subnet.
     */
    public readonly subnetId!: pulumi.Output<string>;

    /**
     * Create a RouteTableAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteTableAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouteTableAssociateArgs | RouteTableAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouteTableAssociateState | undefined;
            resourceInputs["routeTableId"] = state ? state.routeTableId : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
        } else {
            const args = argsOrState as RouteTableAssociateArgs | undefined;
            if ((!args || args.routeTableId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeTableId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["routeTableId"] = args ? args.routeTableId : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouteTableAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouteTableAssociate resources.
 */
export interface RouteTableAssociateState {
    /**
     * The id of the route table.
     */
    routeTableId?: pulumi.Input<string>;
    /**
     * The id of the subnet.
     */
    subnetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouteTableAssociate resource.
 */
export interface RouteTableAssociateArgs {
    /**
     * The id of the route table.
     */
    routeTableId: pulumi.Input<string>;
    /**
     * The id of the subnet.
     */
    subnetId: pulumi.Input<string>;
}
