// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of route entries
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vpc.RouteEntries({
 *     ids: [],
 *     routeTableId: "vtb-274e19skkuhog7fap8u4i8ird",
 * });
 * ```
 */
export function routeEntries(args: RouteEntriesArgs, opts?: pulumi.InvokeOptions): Promise<RouteEntriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vpc/routeEntries:RouteEntries", {
        "destinationCidrBlock": args.destinationCidrBlock,
        "ids": args.ids,
        "nextHopId": args.nextHopId,
        "nextHopType": args.nextHopType,
        "outputFile": args.outputFile,
        "routeEntryName": args.routeEntryName,
        "routeEntryType": args.routeEntryType,
        "routeTableId": args.routeTableId,
    }, opts);
}

/**
 * A collection of arguments for invoking RouteEntries.
 */
export interface RouteEntriesArgs {
    /**
     * A destination CIDR block of route entry.
     */
    destinationCidrBlock?: string;
    /**
     * A list of route entry ids.
     */
    ids?: string[];
    /**
     * An id of next hop.
     */
    nextHopId?: string;
    /**
     * A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
     */
    nextHopType?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * A name of route entry.
     */
    routeEntryName?: string;
    /**
     * A type of route entry.
     */
    routeEntryType?: string;
    /**
     * An id of route table.
     */
    routeTableId: string;
}

/**
 * A collection of values returned by RouteEntries.
 */
export interface RouteEntriesResult {
    /**
     * The destination CIDR block of the route entry.
     */
    readonly destinationCidrBlock?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * The id of the next hop.
     */
    readonly nextHopId?: string;
    /**
     * The type of the next hop.
     */
    readonly nextHopType?: string;
    readonly outputFile?: string;
    /**
     * The collection of route tables.
     */
    readonly routeEntries: outputs.vpc.RouteEntriesRouteEntry[];
    /**
     * The name of the route entry.
     */
    readonly routeEntryName?: string;
    readonly routeEntryType?: string;
    /**
     * The id of the route table to which the route entry belongs.
     */
    readonly routeTableId: string;
    /**
     * The total count of route entry query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of route entries
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vpc.RouteEntries({
 *     ids: [],
 *     routeTableId: "vtb-274e19skkuhog7fap8u4i8ird",
 * });
 * ```
 */
export function routeEntriesOutput(args: RouteEntriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<RouteEntriesResult> {
    return pulumi.output(args).apply((a: any) => routeEntries(a, opts))
}

/**
 * A collection of arguments for invoking RouteEntries.
 */
export interface RouteEntriesOutputArgs {
    /**
     * A destination CIDR block of route entry.
     */
    destinationCidrBlock?: pulumi.Input<string>;
    /**
     * A list of route entry ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An id of next hop.
     */
    nextHopId?: pulumi.Input<string>;
    /**
     * A type of next hop, Optional choice contains `Instance`, `NetworkInterface`, `NatGW`, `VpnGW`.
     */
    nextHopType?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A name of route entry.
     */
    routeEntryName?: pulumi.Input<string>;
    /**
     * A type of route entry.
     */
    routeEntryType?: pulumi.Input<string>;
    /**
     * An id of route table.
     */
    routeTableId: pulumi.Input<string>;
}
