// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cloudfs accesses
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.cloudfs.Accesses({
 *     fsName: "tftest2",
 * });
 * ```
 */
export function accesses(args: AccessesArgs, opts?: pulumi.InvokeOptions): Promise<AccessesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cloudfs/accesses:Accesses", {
        "fsName": args.fsName,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking Accesses.
 */
export interface AccessesArgs {
    /**
     * The name of file system.
     */
    fsName: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by Accesses.
 */
export interface AccessesResult {
    /**
     * The collection of query.
     */
    readonly accesses: outputs.cloudfs.AccessesAccess[];
    /**
     * The name of cloud fs.
     */
    readonly fsName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cloudfs accesses
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.cloudfs.Accesses({
 *     fsName: "tftest2",
 * });
 * ```
 */
export function accessesOutput(args: AccessesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<AccessesResult> {
    return pulumi.output(args).apply((a: any) => accesses(a, opts))
}

/**
 * A collection of arguments for invoking Accesses.
 */
export interface AccessesOutputArgs {
    /**
     * The name of file system.
     */
    fsName: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
