// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage cloudfs namespace
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.cloudfs.Namespace("foo", {
 *     fsName: "tf-test-fs",
 *     readOnly: true,
 *     tosBucket: "tf-test",
 * });
 * ```
 *
 * ## Import
 *
 * CloudfsNamespace can be imported using the FsName:NsId, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:cloudfs/namespace:Namespace default tfname:1801439850948****
 * ```
 */
export class Namespace extends pulumi.CustomResource {
    /**
     * Get an existing Namespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamespaceState, opts?: pulumi.CustomResourceOptions): Namespace {
        return new Namespace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:cloudfs/namespace:Namespace';

    /**
     * Returns true if the given object is an instance of Namespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Namespace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Namespace.__pulumiType;
    }

    /**
     * The creation time of the namespace.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * The name of file system.
     */
    public readonly fsName!: pulumi.Output<string>;
    /**
     * Whether the tos bucket is your own bucket.
     */
    public /*out*/ readonly isMyBucket!: pulumi.Output<boolean>;
    /**
     * The id of namespace.
     */
    public /*out*/ readonly nsId!: pulumi.Output<string>;
    /**
     * Whether the namespace is read-only.
     */
    public readonly readOnly!: pulumi.Output<boolean | undefined>;
    /**
     * Whether the namespace is the official service for volcengine.
     */
    public /*out*/ readonly serviceManaged!: pulumi.Output<boolean>;
    /**
     * The status of the namespace.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly tosAccountId!: pulumi.Output<number | undefined>;
    /**
     * The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly tosAk!: pulumi.Output<string | undefined>;
    /**
     * The name of tos bucket.
     */
    public readonly tosBucket!: pulumi.Output<string>;
    /**
     * The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path.
     */
    public readonly tosPrefix!: pulumi.Output<string | undefined>;
    /**
     * The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly tosSk!: pulumi.Output<string | undefined>;

    /**
     * Create a Namespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamespaceArgs | NamespaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamespaceState | undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["fsName"] = state ? state.fsName : undefined;
            resourceInputs["isMyBucket"] = state ? state.isMyBucket : undefined;
            resourceInputs["nsId"] = state ? state.nsId : undefined;
            resourceInputs["readOnly"] = state ? state.readOnly : undefined;
            resourceInputs["serviceManaged"] = state ? state.serviceManaged : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tosAccountId"] = state ? state.tosAccountId : undefined;
            resourceInputs["tosAk"] = state ? state.tosAk : undefined;
            resourceInputs["tosBucket"] = state ? state.tosBucket : undefined;
            resourceInputs["tosPrefix"] = state ? state.tosPrefix : undefined;
            resourceInputs["tosSk"] = state ? state.tosSk : undefined;
        } else {
            const args = argsOrState as NamespaceArgs | undefined;
            if ((!args || args.fsName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fsName'");
            }
            if ((!args || args.tosBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tosBucket'");
            }
            resourceInputs["fsName"] = args ? args.fsName : undefined;
            resourceInputs["readOnly"] = args ? args.readOnly : undefined;
            resourceInputs["tosAccountId"] = args ? args.tosAccountId : undefined;
            resourceInputs["tosAk"] = args ? args.tosAk : undefined;
            resourceInputs["tosBucket"] = args ? args.tosBucket : undefined;
            resourceInputs["tosPrefix"] = args ? args.tosPrefix : undefined;
            resourceInputs["tosSk"] = args ? args.tosSk : undefined;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["isMyBucket"] = undefined /*out*/;
            resourceInputs["nsId"] = undefined /*out*/;
            resourceInputs["serviceManaged"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Namespace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Namespace resources.
 */
export interface NamespaceState {
    /**
     * The creation time of the namespace.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * The name of file system.
     */
    fsName?: pulumi.Input<string>;
    /**
     * Whether the tos bucket is your own bucket.
     */
    isMyBucket?: pulumi.Input<boolean>;
    /**
     * The id of namespace.
     */
    nsId?: pulumi.Input<string>;
    /**
     * Whether the namespace is read-only.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * Whether the namespace is the official service for volcengine.
     */
    serviceManaged?: pulumi.Input<boolean>;
    /**
     * The status of the namespace.
     */
    status?: pulumi.Input<string>;
    /**
     * When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    tosAccountId?: pulumi.Input<number>;
    /**
     * The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    tosAk?: pulumi.Input<string>;
    /**
     * The name of tos bucket.
     */
    tosBucket?: pulumi.Input<string>;
    /**
     * The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path.
     */
    tosPrefix?: pulumi.Input<string>;
    /**
     * The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    tosSk?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Namespace resource.
 */
export interface NamespaceArgs {
    /**
     * The name of file system.
     */
    fsName: pulumi.Input<string>;
    /**
     * Whether the namespace is read-only.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * When a data lake scenario instance chooses to associate a bucket under another account, you need to set the ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    tosAccountId?: pulumi.Input<number>;
    /**
     * The tos ak. When the data lake scenario chooses to associate buckets under other accounts, need to set the Access Key ID of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    tosAk?: pulumi.Input<string>;
    /**
     * The name of tos bucket.
     */
    tosBucket: pulumi.Input<string>;
    /**
     * The tos prefix. Must not start with /, but must end with /, such as prefix/. When it is empty, it means the root path.
     */
    tosPrefix?: pulumi.Input<string>;
    /**
     * The tos sk. When the data lake scenario chooses to associate buckets under other accounts, need to set the Secret Access Key of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    tosSk?: pulumi.Input<string>;
}
