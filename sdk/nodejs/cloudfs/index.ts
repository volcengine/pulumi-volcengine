// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccessArgs, AccessState } from "./access";
export type Access = import("./access").Access;
export const Access: typeof import("./access").Access = null as any;
utilities.lazyLoad(exports, ["Access"], () => require("./access"));

export { AccessesArgs, AccessesResult, AccessesOutputArgs } from "./accesses";
export const accesses: typeof import("./accesses").accesses = null as any;
export const accessesOutput: typeof import("./accesses").accessesOutput = null as any;
utilities.lazyLoad(exports, ["accesses","accessesOutput"], () => require("./accesses"));

export { FileSystemArgs, FileSystemState } from "./fileSystem";
export type FileSystem = import("./fileSystem").FileSystem;
export const FileSystem: typeof import("./fileSystem").FileSystem = null as any;
utilities.lazyLoad(exports, ["FileSystem"], () => require("./fileSystem"));

export { FileSystemsArgs, FileSystemsResult, FileSystemsOutputArgs } from "./fileSystems";
export const fileSystems: typeof import("./fileSystems").fileSystems = null as any;
export const fileSystemsOutput: typeof import("./fileSystems").fileSystemsOutput = null as any;
utilities.lazyLoad(exports, ["fileSystems","fileSystemsOutput"], () => require("./fileSystems"));

export { NamespaceArgs, NamespaceState } from "./namespace";
export type Namespace = import("./namespace").Namespace;
export const Namespace: typeof import("./namespace").Namespace = null as any;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));

export { NamespacesArgs, NamespacesResult, NamespacesOutputArgs } from "./namespaces";
export const namespaces: typeof import("./namespaces").namespaces = null as any;
export const namespacesOutput: typeof import("./namespaces").namespacesOutput = null as any;
utilities.lazyLoad(exports, ["namespaces","namespacesOutput"], () => require("./namespaces"));

export { NsQuotasArgs, NsQuotasResult, NsQuotasOutputArgs } from "./nsQuotas";
export const nsQuotas: typeof import("./nsQuotas").nsQuotas = null as any;
export const nsQuotasOutput: typeof import("./nsQuotas").nsQuotasOutput = null as any;
utilities.lazyLoad(exports, ["nsQuotas","nsQuotasOutput"], () => require("./nsQuotas"));

export { QuotasArgs, QuotasResult, QuotasOutputArgs } from "./quotas";
export const quotas: typeof import("./quotas").quotas = null as any;
export const quotasOutput: typeof import("./quotas").quotasOutput = null as any;
utilities.lazyLoad(exports, ["quotas","quotasOutput"], () => require("./quotas"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:cloudfs/access:Access":
                return new Access(name, <any>undefined, { urn })
            case "volcengine:cloudfs/fileSystem:FileSystem":
                return new FileSystem(name, <any>undefined, { urn })
            case "volcengine:cloudfs/namespace:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "cloudfs/access", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloudfs/fileSystem", _module)
pulumi.runtime.registerResourceModule("volcengine", "cloudfs/namespace", _module)
