// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cloudfs namespaces
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.cloudfs.getNamespaces({
 *     fsName: "tf-test-fs",
 *     nsId: "1801439850948****",
 * });
 * ```
 */
export function getNamespaces(args: GetNamespacesArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespacesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cloudfs/getNamespaces:getNamespaces", {
        "fsName": args.fsName,
        "nsId": args.nsId,
        "outputFile": args.outputFile,
        "tosBucket": args.tosBucket,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamespaces.
 */
export interface GetNamespacesArgs {
    /**
     * The name of file system.
     */
    fsName: string;
    /**
     * The id of namespace.
     */
    nsId?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The name of tos bucket.
     */
    tosBucket?: string;
}

/**
 * A collection of values returned by getNamespaces.
 */
export interface GetNamespacesResult {
    readonly fsName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The collection of query.
     */
    readonly namespaces: outputs.cloudfs.GetNamespacesNamespace[];
    readonly nsId?: string;
    readonly outputFile?: string;
    /**
     * The name of the tos bucket.
     */
    readonly tosBucket?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cloudfs namespaces
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.cloudfs.getNamespaces({
 *     fsName: "tf-test-fs",
 *     nsId: "1801439850948****",
 * });
 * ```
 */
export function getNamespacesOutput(args: GetNamespacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamespacesResult> {
    return pulumi.output(args).apply((a: any) => getNamespaces(a, opts))
}

/**
 * A collection of arguments for invoking getNamespaces.
 */
export interface GetNamespacesOutputArgs {
    /**
     * The name of file system.
     */
    fsName: pulumi.Input<string>;
    /**
     * The id of namespace.
     */
    nsId?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of tos bucket.
     */
    tosBucket?: pulumi.Input<string>;
}
