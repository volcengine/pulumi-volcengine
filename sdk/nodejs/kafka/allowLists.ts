// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of kafka allow lists
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.kafka.getAllowLists({
 *     instanceId: "kafka-xxx",
 *     regionId: "cn-beijing",
 * });
 * ```
 */
/** @deprecated volcengine.kafka.AllowLists has been deprecated in favor of volcengine.kafka.getAllowLists */
export function allowLists(args: AllowListsArgs, opts?: pulumi.InvokeOptions): Promise<AllowListsResult> {
    pulumi.log.warn("allowLists is deprecated: volcengine.kafka.AllowLists has been deprecated in favor of volcengine.kafka.getAllowLists")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:kafka/allowLists:AllowLists", {
        "instanceId": args.instanceId,
        "outputFile": args.outputFile,
        "regionId": args.regionId,
    }, opts);
}

/**
 * A collection of arguments for invoking AllowLists.
 */
export interface AllowListsArgs {
    /**
     * The instance ID to query.
     */
    instanceId?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The region ID.
     */
    regionId: string;
}

/**
 * A collection of values returned by AllowLists.
 */
export interface AllowListsResult {
    /**
     * The collection of query.
     */
    readonly allowLists: outputs.kafka.AllowListsAllowList[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The id of the instance.
     */
    readonly instanceId?: string;
    readonly outputFile?: string;
    readonly regionId: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of kafka allow lists
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.kafka.getAllowLists({
 *     instanceId: "kafka-xxx",
 *     regionId: "cn-beijing",
 * });
 * ```
 */
/** @deprecated volcengine.kafka.AllowLists has been deprecated in favor of volcengine.kafka.getAllowLists */
export function allowListsOutput(args: AllowListsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<AllowListsResult> {
    return pulumi.output(args).apply((a: any) => allowLists(a, opts))
}

/**
 * A collection of arguments for invoking AllowLists.
 */
export interface AllowListsOutputArgs {
    /**
     * The instance ID to query.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The region ID.
     */
    regionId: pulumi.Input<string>;
}
