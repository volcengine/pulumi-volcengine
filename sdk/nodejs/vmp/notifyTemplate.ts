// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vmp notify template
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.vmp.NotifyTemplate("foo", {
 *     active: {
 *         content: "acc-test-active-template-content",
 *         title: "acc-test-active-template-title",
 *     },
 *     channel: "WeComBotWebhook",
 *     description: "acc-test-vmp",
 *     resolved: {
 *         content: "acc-test-resolved-template-content",
 *         title: "acc-test-resolved-template-title",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * VmpNotifyTemplate can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:vmp/notifyTemplate:NotifyTemplate default resource_id
 * ```
 */
export class NotifyTemplate extends pulumi.CustomResource {
    /**
     * Get an existing NotifyTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotifyTemplateState, opts?: pulumi.CustomResourceOptions): NotifyTemplate {
        return new NotifyTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vmp/notifyTemplate:NotifyTemplate';

    /**
     * Returns true if the given object is an instance of NotifyTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NotifyTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NotifyTemplate.__pulumiType;
    }

    /**
     * The active notify template info.
     */
    public readonly active!: pulumi.Output<outputs.vmp.NotifyTemplateActive>;
    /**
     * The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
     */
    public readonly channel!: pulumi.Output<string>;
    /**
     * The create time of notify template.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of notify template.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of notify template.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The resolved notify template info.
     */
    public readonly resolved!: pulumi.Output<outputs.vmp.NotifyTemplateResolved>;
    /**
     * The update time of notify template.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a NotifyTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotifyTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NotifyTemplateArgs | NotifyTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NotifyTemplateState | undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["channel"] = state ? state.channel : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resolved"] = state ? state.resolved : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as NotifyTemplateArgs | undefined;
            if ((!args || args.active === undefined) && !opts.urn) {
                throw new Error("Missing required property 'active'");
            }
            if ((!args || args.channel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channel'");
            }
            if ((!args || args.resolved === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resolved'");
            }
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["channel"] = args ? args.channel : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resolved"] = args ? args.resolved : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NotifyTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NotifyTemplate resources.
 */
export interface NotifyTemplateState {
    /**
     * The active notify template info.
     */
    active?: pulumi.Input<inputs.vmp.NotifyTemplateActive>;
    /**
     * The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
     */
    channel?: pulumi.Input<string>;
    /**
     * The create time of notify template.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of notify template.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of notify template.
     */
    name?: pulumi.Input<string>;
    /**
     * The resolved notify template info.
     */
    resolved?: pulumi.Input<inputs.vmp.NotifyTemplateResolved>;
    /**
     * The update time of notify template.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NotifyTemplate resource.
 */
export interface NotifyTemplateArgs {
    /**
     * The active notify template info.
     */
    active: pulumi.Input<inputs.vmp.NotifyTemplateActive>;
    /**
     * The channel of notify template. Valid values: `LarkBotWebhook`, `DingTalkBotWebhook`, `WeComBotWebhook`.
     */
    channel: pulumi.Input<string>;
    /**
     * The description of notify template.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of notify template.
     */
    name?: pulumi.Input<string>;
    /**
     * The resolved notify template info.
     */
    resolved: pulumi.Input<inputs.vmp.NotifyTemplateResolved>;
}
