// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vmp rule file
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooWorkspace = new volcengine.vmp.Workspace("fooWorkspace", {
 *     instanceTypeId: "vmp.standard.15d",
 *     deleteProtectionEnabled: false,
 *     description: "acc-test-1",
 *     username: "admin123",
 *     password: "**********",
 * });
 * const fooRuleFile = new volcengine.vmp.RuleFile("fooRuleFile", {
 *     workspaceId: fooWorkspace.id,
 *     description: "acc-test-1",
 *     content: `groups:
 *     - interval: 10s
 *       name: recording_rules
 *       rules:
 *         - expr: sum(irate(container_cpu_usage_seconds_total{image!=""}[5m])) by (pod) *100
 *           labels:
 *             team: operations
 *           record: pod:cpu:useage
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * VMP Rule File can be imported using the workspace_id:rule_file_id, e.g.
 * (We can only get rule file by WorkspaceId and RuleFileId)
 *
 * ```sh
 * $ pulumi import volcengine:vmp/ruleFile:RuleFile default 60dde3ca-951c-4c05-8777-e5a7caa07ad6:d6f72bd9-674e-4651-b98c-3797657d9614
 * ```
 */
export class RuleFile extends pulumi.CustomResource {
    /**
     * Get an existing RuleFile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleFileState, opts?: pulumi.CustomResourceOptions): RuleFile {
        return new RuleFile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vmp/ruleFile:RuleFile';

    /**
     * Returns true if the given object is an instance of RuleFile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleFile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleFile.__pulumiType;
    }

    /**
     * The content of the rule file.
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * The create time of workspace.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of the rule file.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The last update time of rule file.
     */
    public /*out*/ readonly lastUpdateTime!: pulumi.Output<string>;
    /**
     * The name of the rule file.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The rule count number of rule file.
     */
    public /*out*/ readonly ruleCount!: pulumi.Output<number>;
    /**
     * The id of rule file.
     */
    public /*out*/ readonly ruleFileId!: pulumi.Output<string>;
    /**
     * The status of workspace.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The id of the workspace.
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a RuleFile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleFileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleFileArgs | RuleFileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleFileState | undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastUpdateTime"] = state ? state.lastUpdateTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ruleCount"] = state ? state.ruleCount : undefined;
            resourceInputs["ruleFileId"] = state ? state.ruleFileId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as RuleFileArgs | undefined;
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["lastUpdateTime"] = undefined /*out*/;
            resourceInputs["ruleCount"] = undefined /*out*/;
            resourceInputs["ruleFileId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleFile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RuleFile resources.
 */
export interface RuleFileState {
    /**
     * The content of the rule file.
     */
    content?: pulumi.Input<string>;
    /**
     * The create time of workspace.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the rule file.
     */
    description?: pulumi.Input<string>;
    /**
     * The last update time of rule file.
     */
    lastUpdateTime?: pulumi.Input<string>;
    /**
     * The name of the rule file.
     */
    name?: pulumi.Input<string>;
    /**
     * The rule count number of rule file.
     */
    ruleCount?: pulumi.Input<number>;
    /**
     * The id of rule file.
     */
    ruleFileId?: pulumi.Input<string>;
    /**
     * The status of workspace.
     */
    status?: pulumi.Input<string>;
    /**
     * The id of the workspace.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RuleFile resource.
 */
export interface RuleFileArgs {
    /**
     * The content of the rule file.
     */
    content: pulumi.Input<string>;
    /**
     * The description of the rule file.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the rule file.
     */
    name?: pulumi.Input<string>;
    /**
     * The id of the workspace.
     */
    workspaceId: pulumi.Input<string>;
}
