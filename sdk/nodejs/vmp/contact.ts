// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vmp contact
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.vmp.Contact("foo", {
 *     dingTalkBotWebhook: {
 *         address: "https://www.dingacctest1.com",
 *         atMobiles: ["18046891812"],
 *     },
 *     email: "acctest1@tftest.com",
 *     larkBotWebhook: {
 *         address: "https://www.acctest1.com",
 *     },
 *     phoneNumber: {
 *         countryCode: "+86",
 *         number: "18310101010",
 *     },
 *     webhook: {
 *         address: "https://www.acctest1.com",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * VMP Contact can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:vmp/contact:Contact default 60dde3ca-951c-4c05-8777-e5a7caa07ad6
 * ```
 */
export class Contact extends pulumi.CustomResource {
    /**
     * Get an existing Contact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContactState, opts?: pulumi.CustomResourceOptions): Contact {
        return new Contact(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vmp/contact:Contact';

    /**
     * Returns true if the given object is an instance of Contact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Contact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Contact.__pulumiType;
    }

    /**
     * A list of contact group ids.
     */
    public /*out*/ readonly contactGroupIds!: pulumi.Output<string[]>;
    /**
     * The create time of contact.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The ding talk bot webhook of contact.
     */
    public readonly dingTalkBotWebhook!: pulumi.Output<outputs.vmp.ContactDingTalkBotWebhook | undefined>;
    /**
     * The email of the contact.
     */
    public readonly email!: pulumi.Output<string | undefined>;
    /**
     * Whether the email of contact active.
     */
    public /*out*/ readonly emailActive!: pulumi.Output<boolean>;
    /**
     * The lark bot webhook of contact.
     */
    public readonly larkBotWebhook!: pulumi.Output<outputs.vmp.ContactLarkBotWebhook | undefined>;
    /**
     * The name of the contact.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The phone number of contact.
     */
    public readonly phoneNumber!: pulumi.Output<outputs.vmp.ContactPhoneNumber | undefined>;
    /**
     * The we com bot webhook of contact.
     */
    public readonly weComBotWebhook!: pulumi.Output<outputs.vmp.ContactWeComBotWebhook | undefined>;
    /**
     * The webhook of contact.
     */
    public readonly webhook!: pulumi.Output<outputs.vmp.ContactWebhook | undefined>;

    /**
     * Create a Contact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ContactArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContactArgs | ContactState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContactState | undefined;
            resourceInputs["contactGroupIds"] = state ? state.contactGroupIds : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dingTalkBotWebhook"] = state ? state.dingTalkBotWebhook : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["emailActive"] = state ? state.emailActive : undefined;
            resourceInputs["larkBotWebhook"] = state ? state.larkBotWebhook : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["phoneNumber"] = state ? state.phoneNumber : undefined;
            resourceInputs["weComBotWebhook"] = state ? state.weComBotWebhook : undefined;
            resourceInputs["webhook"] = state ? state.webhook : undefined;
        } else {
            const args = argsOrState as ContactArgs | undefined;
            resourceInputs["dingTalkBotWebhook"] = args ? args.dingTalkBotWebhook : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["larkBotWebhook"] = args ? args.larkBotWebhook : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["phoneNumber"] = args ? args.phoneNumber : undefined;
            resourceInputs["weComBotWebhook"] = args ? args.weComBotWebhook : undefined;
            resourceInputs["webhook"] = args ? args.webhook : undefined;
            resourceInputs["contactGroupIds"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["emailActive"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Contact.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Contact resources.
 */
export interface ContactState {
    /**
     * A list of contact group ids.
     */
    contactGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The create time of contact.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The ding talk bot webhook of contact.
     */
    dingTalkBotWebhook?: pulumi.Input<inputs.vmp.ContactDingTalkBotWebhook>;
    /**
     * The email of the contact.
     */
    email?: pulumi.Input<string>;
    /**
     * Whether the email of contact active.
     */
    emailActive?: pulumi.Input<boolean>;
    /**
     * The lark bot webhook of contact.
     */
    larkBotWebhook?: pulumi.Input<inputs.vmp.ContactLarkBotWebhook>;
    /**
     * The name of the contact.
     */
    name?: pulumi.Input<string>;
    /**
     * The phone number of contact.
     */
    phoneNumber?: pulumi.Input<inputs.vmp.ContactPhoneNumber>;
    /**
     * The we com bot webhook of contact.
     */
    weComBotWebhook?: pulumi.Input<inputs.vmp.ContactWeComBotWebhook>;
    /**
     * The webhook of contact.
     */
    webhook?: pulumi.Input<inputs.vmp.ContactWebhook>;
}

/**
 * The set of arguments for constructing a Contact resource.
 */
export interface ContactArgs {
    /**
     * The ding talk bot webhook of contact.
     */
    dingTalkBotWebhook?: pulumi.Input<inputs.vmp.ContactDingTalkBotWebhook>;
    /**
     * The email of the contact.
     */
    email?: pulumi.Input<string>;
    /**
     * The lark bot webhook of contact.
     */
    larkBotWebhook?: pulumi.Input<inputs.vmp.ContactLarkBotWebhook>;
    /**
     * The name of the contact.
     */
    name?: pulumi.Input<string>;
    /**
     * The phone number of contact.
     */
    phoneNumber?: pulumi.Input<inputs.vmp.ContactPhoneNumber>;
    /**
     * The we com bot webhook of contact.
     */
    weComBotWebhook?: pulumi.Input<inputs.vmp.ContactWeComBotWebhook>;
    /**
     * The webhook of contact.
     */
    webhook?: pulumi.Input<inputs.vmp.ContactWebhook>;
}
