// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vmp contact groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooContact = new volcengine.vmp.Contact("fooContact", {
 *     email: "acctest1@tftest.com",
 *     webhook: {
 *         address: "https://www.acctest1.com",
 *     },
 *     larkBotWebhook: {
 *         address: "https://www.acctest1.com",
 *     },
 *     dingTalkBotWebhook: {
 *         address: "https://www.dingacctest1.com",
 *         atMobiles: ["18046891812"],
 *     },
 *     phoneNumber: {
 *         countryCode: "+86",
 *         number: "18310101010",
 *     },
 * });
 * const foo1 = new volcengine.vmp.Contact("foo1", {
 *     email: "acctest2@tftest.com",
 *     webhook: {
 *         address: "https://www.acctest2.com",
 *     },
 *     larkBotWebhook: {
 *         address: "https://www.acctest2.com",
 *     },
 *     dingTalkBotWebhook: {
 *         address: "https://www.dingacctest2.com",
 *         atMobiles: ["18046891813"],
 *     },
 *     phoneNumber: {
 *         countryCode: "+86",
 *         number: "18310101011",
 *     },
 * });
 * const fooContactGroup = new volcengine.vmp.ContactGroup("fooContactGroup", {contactIds: [
 *     fooContact.id,
 *     foo1.id,
 * ]});
 * const fooContactGroups = volcengine.vmp.getContactGroupsOutput({
 *     ids: [fooContactGroup.id],
 * });
 * ```
 */
export function getContactGroups(args?: GetContactGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetContactGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vmp/getContactGroups:getContactGroups", {
        "ids": args.ids,
        "name": args.name,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getContactGroups.
 */
export interface GetContactGroupsArgs {
    /**
     * A list of contact group ids.
     */
    ids?: string[];
    /**
     * The name of contact group.
     */
    name?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getContactGroups.
 */
export interface GetContactGroupsResult {
    /**
     * The collection of query.
     */
    readonly contactGroups: outputs.vmp.GetContactGroupsContactGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * The name of contact group.
     */
    readonly name?: string;
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of vmp contact groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooContact = new volcengine.vmp.Contact("fooContact", {
 *     email: "acctest1@tftest.com",
 *     webhook: {
 *         address: "https://www.acctest1.com",
 *     },
 *     larkBotWebhook: {
 *         address: "https://www.acctest1.com",
 *     },
 *     dingTalkBotWebhook: {
 *         address: "https://www.dingacctest1.com",
 *         atMobiles: ["18046891812"],
 *     },
 *     phoneNumber: {
 *         countryCode: "+86",
 *         number: "18310101010",
 *     },
 * });
 * const foo1 = new volcengine.vmp.Contact("foo1", {
 *     email: "acctest2@tftest.com",
 *     webhook: {
 *         address: "https://www.acctest2.com",
 *     },
 *     larkBotWebhook: {
 *         address: "https://www.acctest2.com",
 *     },
 *     dingTalkBotWebhook: {
 *         address: "https://www.dingacctest2.com",
 *         atMobiles: ["18046891813"],
 *     },
 *     phoneNumber: {
 *         countryCode: "+86",
 *         number: "18310101011",
 *     },
 * });
 * const fooContactGroup = new volcengine.vmp.ContactGroup("fooContactGroup", {contactIds: [
 *     fooContact.id,
 *     foo1.id,
 * ]});
 * const fooContactGroups = volcengine.vmp.getContactGroupsOutput({
 *     ids: [fooContactGroup.id],
 * });
 * ```
 */
export function getContactGroupsOutput(args?: GetContactGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContactGroupsResult> {
    return pulumi.output(args).apply((a: any) => getContactGroups(a, opts))
}

/**
 * A collection of arguments for invoking getContactGroups.
 */
export interface GetContactGroupsOutputArgs {
    /**
     * A list of contact group ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of contact group.
     */
    name?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
