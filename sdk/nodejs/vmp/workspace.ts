// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vmp workspace
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.vmp.Workspace("foo", {
 *     deleteProtectionEnabled: false,
 *     description: "acc-test",
 *     instanceTypeId: "vmp.standard.15d",
 *     password: "Pass123456",
 *     projectName: "default",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 *     username: "admin123",
 * });
 * ```
 *
 * ## Import
 *
 * Workspace can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:vmp/workspace:Workspace default 60dde3ca-951c-4c05-8777-e5a7caa07ad6
 * ```
 */
export class Workspace extends pulumi.CustomResource {
    /**
     * Get an existing Workspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceState, opts?: pulumi.CustomResourceOptions): Workspace {
        return new Workspace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vmp/workspace:Workspace';

    /**
     * Returns true if the given object is an instance of Workspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workspace.__pulumiType;
    }

    /**
     * The create time of workspace.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Whether enable delete protection.
     */
    public readonly deleteProtectionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The description of the workspace.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The instance type id of the workspace.
     */
    public readonly instanceTypeId!: pulumi.Output<string>;
    /**
     * The name of the workspace.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The overdue reclaim time.
     */
    public /*out*/ readonly overdueReclaimTime!: pulumi.Output<string>;
    /**
     * The password of the workspace.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The project name of the vmp workspace.
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * The prometheus push intranet endpoint.
     */
    public /*out*/ readonly prometheusPushIntranetEndpoint!: pulumi.Output<string>;
    /**
     * The prometheus query intranet endpoint.
     */
    public /*out*/ readonly prometheusQueryIntranetEndpoint!: pulumi.Output<string>;
    /**
     * The prometheus write intranet endpoint.
     */
    public /*out*/ readonly prometheusWriteIntranetEndpoint!: pulumi.Output<string>;
    /**
     * The status of workspace.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.vmp.WorkspaceTag[] | undefined>;
    /**
     * The username of the workspace.
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a Workspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceArgs | WorkspaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deleteProtectionEnabled"] = state ? state.deleteProtectionEnabled : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceTypeId"] = state ? state.instanceTypeId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overdueReclaimTime"] = state ? state.overdueReclaimTime : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["prometheusPushIntranetEndpoint"] = state ? state.prometheusPushIntranetEndpoint : undefined;
            resourceInputs["prometheusQueryIntranetEndpoint"] = state ? state.prometheusQueryIntranetEndpoint : undefined;
            resourceInputs["prometheusWriteIntranetEndpoint"] = state ? state.prometheusWriteIntranetEndpoint : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as WorkspaceArgs | undefined;
            if ((!args || args.instanceTypeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceTypeId'");
            }
            resourceInputs["deleteProtectionEnabled"] = args ? args.deleteProtectionEnabled : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceTypeId"] = args ? args.instanceTypeId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["overdueReclaimTime"] = undefined /*out*/;
            resourceInputs["prometheusPushIntranetEndpoint"] = undefined /*out*/;
            resourceInputs["prometheusQueryIntranetEndpoint"] = undefined /*out*/;
            resourceInputs["prometheusWriteIntranetEndpoint"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Workspace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Workspace resources.
 */
export interface WorkspaceState {
    /**
     * The create time of workspace.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Whether enable delete protection.
     */
    deleteProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * The description of the workspace.
     */
    description?: pulumi.Input<string>;
    /**
     * The instance type id of the workspace.
     */
    instanceTypeId?: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    name?: pulumi.Input<string>;
    /**
     * The overdue reclaim time.
     */
    overdueReclaimTime?: pulumi.Input<string>;
    /**
     * The password of the workspace.
     */
    password?: pulumi.Input<string>;
    /**
     * The project name of the vmp workspace.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The prometheus push intranet endpoint.
     */
    prometheusPushIntranetEndpoint?: pulumi.Input<string>;
    /**
     * The prometheus query intranet endpoint.
     */
    prometheusQueryIntranetEndpoint?: pulumi.Input<string>;
    /**
     * The prometheus write intranet endpoint.
     */
    prometheusWriteIntranetEndpoint?: pulumi.Input<string>;
    /**
     * The status of workspace.
     */
    status?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vmp.WorkspaceTag>[]>;
    /**
     * The username of the workspace.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Workspace resource.
 */
export interface WorkspaceArgs {
    /**
     * Whether enable delete protection.
     */
    deleteProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * The description of the workspace.
     */
    description?: pulumi.Input<string>;
    /**
     * The instance type id of the workspace.
     */
    instanceTypeId: pulumi.Input<string>;
    /**
     * The name of the workspace.
     */
    name?: pulumi.Input<string>;
    /**
     * The password of the workspace.
     */
    password?: pulumi.Input<string>;
    /**
     * The project name of the vmp workspace.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vmp.WorkspaceTag>[]>;
    /**
     * The username of the workspace.
     */
    username?: pulumi.Input<string>;
}
