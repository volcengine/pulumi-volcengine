// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of rocketmq topics
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.rocketmq.getTopics({
 *     instanceId: "rocketmq-cnoeea6b32118fc2",
 * });
 * ```
 */
/** @deprecated volcengine.rocketmq.Topics has been deprecated in favor of volcengine.rocketmq.getTopics */
export function topics(args: TopicsArgs, opts?: pulumi.InvokeOptions): Promise<TopicsResult> {
    pulumi.log.warn("topics is deprecated: volcengine.rocketmq.Topics has been deprecated in favor of volcengine.rocketmq.getTopics")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:rocketmq/topics:Topics", {
        "instanceId": args.instanceId,
        "messageType": args.messageType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "topicName": args.topicName,
    }, opts);
}

/**
 * A collection of arguments for invoking Topics.
 */
export interface TopicsArgs {
    /**
     * The id of rocketmq instance.
     */
    instanceId: string;
    /**
     * The type of the rocketmq message. Setting this parameter means filtering the Topic list based on the specified message type. The value explanation is as follows:
     * 0: Regular message
     * 1: Transaction message
     * 2: Partition order message
     * 3: Global sequential message
     * 4: Delay message.
     */
    messageType?: number;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The name of the rocketmq topic. This field support fuzzy query.
     */
    topicName?: string;
}

/**
 * A collection of values returned by Topics.
 */
export interface TopicsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The id of rocketmq instance.
     */
    readonly instanceId: string;
    /**
     * The type of the rocketmq message.
     */
    readonly messageType?: number;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The collection of query.
     */
    readonly rocketmqTopics: outputs.rocketmq.TopicsRocketmqTopic[];
    /**
     * The name of the rocketmq topic.
     */
    readonly topicName?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of rocketmq topics
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.rocketmq.getTopics({
 *     instanceId: "rocketmq-cnoeea6b32118fc2",
 * });
 * ```
 */
/** @deprecated volcengine.rocketmq.Topics has been deprecated in favor of volcengine.rocketmq.getTopics */
export function topicsOutput(args: TopicsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<TopicsResult> {
    return pulumi.output(args).apply((a: any) => topics(a, opts))
}

/**
 * A collection of arguments for invoking Topics.
 */
export interface TopicsOutputArgs {
    /**
     * The id of rocketmq instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The type of the rocketmq message. Setting this parameter means filtering the Topic list based on the specified message type. The value explanation is as follows:
     * 0: Regular message
     * 1: Transaction message
     * 2: Partition order message
     * 3: Global sequential message
     * 4: Delay message.
     */
    messageType?: pulumi.Input<number>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of the rocketmq topic. This field support fuzzy query.
     */
    topicName?: pulumi.Input<string>;
}
