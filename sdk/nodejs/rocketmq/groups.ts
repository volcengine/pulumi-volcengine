// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of rocketmq groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.rocketmq.Groups({
 *     instanceId: "rocketmq-cnoeea6b32118fc2",
 * });
 * ```
 */
export function groups(args: GroupsArgs, opts?: pulumi.InvokeOptions): Promise<GroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:rocketmq/groups:Groups", {
        "groupId": args.groupId,
        "groupType": args.groupType,
        "instanceId": args.instanceId,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking Groups.
 */
export interface GroupsArgs {
    /**
     * The id of rocketmq group. This field support fuzzy query.
     */
    groupId?: string;
    /**
     * The type of rocketmq group. Valid values: `TCP`.
     */
    groupType?: string;
    /**
     * The id of rocketmq instance.
     */
    instanceId: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by Groups.
 */
export interface GroupsResult {
    /**
     * The id of the rocketmq group.
     */
    readonly groupId?: string;
    /**
     * The type of the rocketmq group.
     */
    readonly groupType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly outputFile?: string;
    /**
     * The collection of query.
     */
    readonly rocketmqGroups: outputs.rocketmq.GroupsRocketmqGroup[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of rocketmq groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.rocketmq.Groups({
 *     instanceId: "rocketmq-cnoeea6b32118fc2",
 * });
 * ```
 */
export function groupsOutput(args: GroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GroupsResult> {
    return pulumi.output(args).apply((a: any) => groups(a, opts))
}

/**
 * A collection of arguments for invoking Groups.
 */
export interface GroupsOutputArgs {
    /**
     * The id of rocketmq group. This field support fuzzy query.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The type of rocketmq group. Valid values: `TCP`.
     */
    groupType?: pulumi.Input<string>;
    /**
     * The id of rocketmq instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
