// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage rocketmq allow list associate
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooZones = volcengine.ecs.Zones({});
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooSubnet = new volcengine.vpc.Subnet("fooSubnet", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[0]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const fooRocketMQInstance = new volcengine.rocketmq.RocketMQInstance("fooRocketMQInstance", {
 *     zoneIds: [fooZones.then(fooZones => fooZones.zones?.[0]?.id)],
 *     subnetId: fooSubnet.id,
 *     version: "4.8",
 *     computeSpec: "rocketmq.n1.x2.micro",
 *     storageSpace: 300,
 *     autoScaleQueue: true,
 *     fileReservedTime: 10,
 *     instanceName: "acc-test-rocketmq",
 *     instanceDescription: "acc-test",
 *     projectName: "default",
 *     chargeInfo: {
 *         chargeType: "PostPaid",
 *     },
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * const fooRocketMQAllowList = new volcengine.rocketmq.RocketMQAllowList("fooRocketMQAllowList", {
 *     allowListName: "acc-test-allow-list",
 *     allowListDesc: "acc-test",
 *     allowLists: [
 *         "192.168.0.0/24",
 *         "192.168.2.0/24",
 *     ],
 * });
 * const fooRocketMQAllowListAssociate = new volcengine.rocketmq.RocketMQAllowListAssociate("fooRocketMQAllowListAssociate", {
 *     instanceId: fooRocketMQInstance.id,
 *     allowListId: fooRocketMQAllowList.id,
 * });
 * ```
 *
 * ## Import
 *
 * RocketmqAllowListAssociate can be imported using the instance_id:allow_list_id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:rocketmq/rocketMQAllowListAssociate:RocketMQAllowListAssociate default resource_id
 * ```
 */
export class RocketMQAllowListAssociate extends pulumi.CustomResource {
    /**
     * Get an existing RocketMQAllowListAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RocketMQAllowListAssociateState, opts?: pulumi.CustomResourceOptions): RocketMQAllowListAssociate {
        return new RocketMQAllowListAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:rocketmq/rocketMQAllowListAssociate:RocketMQAllowListAssociate';

    /**
     * Returns true if the given object is an instance of RocketMQAllowListAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RocketMQAllowListAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RocketMQAllowListAssociate.__pulumiType;
    }

    /**
     * The id of the rocketmq allow list.
     */
    public readonly allowListId!: pulumi.Output<string>;
    /**
     * The id of the rocketmq instance.
     */
    public readonly instanceId!: pulumi.Output<string>;

    /**
     * Create a RocketMQAllowListAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RocketMQAllowListAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RocketMQAllowListAssociateArgs | RocketMQAllowListAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RocketMQAllowListAssociateState | undefined;
            resourceInputs["allowListId"] = state ? state.allowListId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
        } else {
            const args = argsOrState as RocketMQAllowListAssociateArgs | undefined;
            if ((!args || args.allowListId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowListId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["allowListId"] = args ? args.allowListId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RocketMQAllowListAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RocketMQAllowListAssociate resources.
 */
export interface RocketMQAllowListAssociateState {
    /**
     * The id of the rocketmq allow list.
     */
    allowListId?: pulumi.Input<string>;
    /**
     * The id of the rocketmq instance.
     */
    instanceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RocketMQAllowListAssociate resource.
 */
export interface RocketMQAllowListAssociateArgs {
    /**
     * The id of the rocketmq allow list.
     */
    allowListId: pulumi.Input<string>;
    /**
     * The id of the rocketmq instance.
     */
    instanceId: pulumi.Input<string>;
}
