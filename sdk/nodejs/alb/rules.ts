// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of alb rules
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.alb.getRules({
 *     listenerId: "lsn-1iidd19u4oni874adhezjkyj3",
 * });
 * ```
 */
/** @deprecated volcengine.alb.Rules has been deprecated in favor of volcengine.alb.getRules */
export function rules(args: RulesArgs, opts?: pulumi.InvokeOptions): Promise<RulesResult> {
    pulumi.log.warn("rules is deprecated: volcengine.alb.Rules has been deprecated in favor of volcengine.alb.getRules")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:alb/rules:Rules", {
        "listenerId": args.listenerId,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking Rules.
 */
export interface RulesArgs {
    /**
     * The Id of listener.
     */
    listenerId: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by Rules.
 */
export interface RulesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly listenerId: string;
    readonly outputFile?: string;
    /**
     * The collection of Rule query.
     */
    readonly rules: outputs.alb.RulesRule[];
    /**
     * The total count of Rule query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of alb rules
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.alb.getRules({
 *     listenerId: "lsn-1iidd19u4oni874adhezjkyj3",
 * });
 * ```
 */
/** @deprecated volcengine.alb.Rules has been deprecated in favor of volcengine.alb.getRules */
export function rulesOutput(args: RulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<RulesResult> {
    return pulumi.output(args).apply((a: any) => rules(a, opts))
}

/**
 * A collection of arguments for invoking Rules.
 */
export interface RulesOutputArgs {
    /**
     * The Id of listener.
     */
    listenerId: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
