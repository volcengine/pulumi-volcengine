// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of direct connect gateway routes
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.direct_connect.getGatewayRoutes({
 *     ids: [
 *         "dcr-638ry33wmzggn3gd6gv****",
 *         "dcr-20d6tkadi2k8w65sqhgbj****",
 *     ],
 * });
 * ```
 */
export function getGatewayRoutes(args?: GetGatewayRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayRoutesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:direct_connect/getGatewayRoutes:getGatewayRoutes", {
        "destinationCidrBlock": args.destinationCidrBlock,
        "directConnectGatewayId": args.directConnectGatewayId,
        "ids": args.ids,
        "nextHopId": args.nextHopId,
        "nextHopType": args.nextHopType,
        "outputFile": args.outputFile,
        "routeType": args.routeType,
    }, opts);
}

/**
 * A collection of arguments for invoking getGatewayRoutes.
 */
export interface GetGatewayRoutesArgs {
    /**
     * The cidr block.
     */
    destinationCidrBlock?: string;
    /**
     * The id of direct connect gateway.
     */
    directConnectGatewayId?: string;
    /**
     * A list of IDs.
     */
    ids?: string[];
    /**
     * The id of next hop.
     */
    nextHopId?: string;
    /**
     * The type of next hop.
     */
    nextHopType?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The type of route. The value can be BGP or CEN or Static.
     */
    routeType?: string;
}

/**
 * A collection of values returned by getGatewayRoutes.
 */
export interface GetGatewayRoutesResult {
    /**
     * The cidr block.
     */
    readonly destinationCidrBlock?: string;
    /**
     * The id of direct connect gateway.
     */
    readonly directConnectGatewayId?: string;
    /**
     * The collection of query.
     */
    readonly directConnectGatewayRoutes: outputs.direct_connect.GetGatewayRoutesDirectConnectGatewayRoute[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * The id of next hop.
     */
    readonly nextHopId?: string;
    /**
     * The type of next hop.
     */
    readonly nextHopType?: string;
    readonly outputFile?: string;
    /**
     * The type of route.
     */
    readonly routeType?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of direct connect gateway routes
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.direct_connect.getGatewayRoutes({
 *     ids: [
 *         "dcr-638ry33wmzggn3gd6gv****",
 *         "dcr-20d6tkadi2k8w65sqhgbj****",
 *     ],
 * });
 * ```
 */
export function getGatewayRoutesOutput(args?: GetGatewayRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayRoutesResult> {
    return pulumi.output(args).apply((a: any) => getGatewayRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayRoutes.
 */
export interface GetGatewayRoutesOutputArgs {
    /**
     * The cidr block.
     */
    destinationCidrBlock?: pulumi.Input<string>;
    /**
     * The id of direct connect gateway.
     */
    directConnectGatewayId?: pulumi.Input<string>;
    /**
     * A list of IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of next hop.
     */
    nextHopId?: pulumi.Input<string>;
    /**
     * The type of next hop.
     */
    nextHopType?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The type of route. The value can be BGP or CEN or Static.
     */
    routeType?: pulumi.Input<string>;
}
