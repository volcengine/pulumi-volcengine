// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ebs auto snapshot policies
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooAutoSnapshotPolicy: volcengine.ebs.AutoSnapshotPolicy[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     fooAutoSnapshotPolicy.push(new volcengine.ebs.AutoSnapshotPolicy(`fooAutoSnapshotPolicy-${range.value}`, {
 *         autoSnapshotPolicyName: "acc-test-auto-snapshot-policy",
 *         timePoints: [
 *             "1",
 *             "5",
 *             "9",
 *         ],
 *         retentionDays: -1,
 *         repeatWeekdays: [
 *             "2",
 *             "6",
 *         ],
 *         projectName: "default",
 *         tags: [{
 *             key: "k1",
 *             value: "v1",
 *         }],
 *     }));
 * }
 * const fooAutoSnapshotPolicies = volcengine.ebs.getAutoSnapshotPoliciesOutput({
 *     ids: fooAutoSnapshotPolicy.map(__item => __item.id),
 * });
 * ```
 */
/** @deprecated volcengine.ebs.AutoSnapshotPolicies has been deprecated in favor of volcengine.ebs.getAutoSnapshotPolicies */
export function autoSnapshotPolicies(args?: AutoSnapshotPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<AutoSnapshotPoliciesResult> {
    pulumi.log.warn("autoSnapshotPolicies is deprecated: volcengine.ebs.AutoSnapshotPolicies has been deprecated in favor of volcengine.ebs.getAutoSnapshotPolicies")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:ebs/autoSnapshotPolicies:AutoSnapshotPolicies", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking AutoSnapshotPolicies.
 */
export interface AutoSnapshotPoliciesArgs {
    /**
     * A list of auto snapshot policy IDs.
     */
    ids?: string[];
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The project name of auto snapshot policy.
     */
    projectName?: string;
    /**
     * Tags.
     */
    tags?: inputs.ebs.AutoSnapshotPoliciesTag[];
}

/**
 * A collection of values returned by AutoSnapshotPolicies.
 */
export interface AutoSnapshotPoliciesResult {
    /**
     * The collection of query.
     */
    readonly autoSnapshotPolicies: outputs.ebs.AutoSnapshotPoliciesAutoSnapshotPolicy[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The project name of the auto snapshot policy.
     */
    readonly projectName?: string;
    /**
     * Tags.
     */
    readonly tags?: outputs.ebs.AutoSnapshotPoliciesTag[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of ebs auto snapshot policies
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooAutoSnapshotPolicy: volcengine.ebs.AutoSnapshotPolicy[] = [];
 * for (const range = {value: 0}; range.value < 2; range.value++) {
 *     fooAutoSnapshotPolicy.push(new volcengine.ebs.AutoSnapshotPolicy(`fooAutoSnapshotPolicy-${range.value}`, {
 *         autoSnapshotPolicyName: "acc-test-auto-snapshot-policy",
 *         timePoints: [
 *             "1",
 *             "5",
 *             "9",
 *         ],
 *         retentionDays: -1,
 *         repeatWeekdays: [
 *             "2",
 *             "6",
 *         ],
 *         projectName: "default",
 *         tags: [{
 *             key: "k1",
 *             value: "v1",
 *         }],
 *     }));
 * }
 * const fooAutoSnapshotPolicies = volcengine.ebs.getAutoSnapshotPoliciesOutput({
 *     ids: fooAutoSnapshotPolicy.map(__item => __item.id),
 * });
 * ```
 */
/** @deprecated volcengine.ebs.AutoSnapshotPolicies has been deprecated in favor of volcengine.ebs.getAutoSnapshotPolicies */
export function autoSnapshotPoliciesOutput(args?: AutoSnapshotPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<AutoSnapshotPoliciesResult> {
    return pulumi.output(args).apply((a: any) => autoSnapshotPolicies(a, opts))
}

/**
 * A collection of arguments for invoking AutoSnapshotPolicies.
 */
export interface AutoSnapshotPoliciesOutputArgs {
    /**
     * A list of auto snapshot policy IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The project name of auto snapshot policy.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ebs.AutoSnapshotPoliciesTagArgs>[]>;
}
