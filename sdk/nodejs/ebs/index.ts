// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { VolumeArgs, VolumeState } from "./volume";
export type Volume = import("./volume").Volume;
export const Volume: typeof import("./volume").Volume = null as any;
utilities.lazyLoad(exports, ["Volume"], () => require("./volume"));

export { VolumeAttachArgs, VolumeAttachState } from "./volumeAttach";
export type VolumeAttach = import("./volumeAttach").VolumeAttach;
export const VolumeAttach: typeof import("./volumeAttach").VolumeAttach = null as any;
utilities.lazyLoad(exports, ["VolumeAttach"], () => require("./volumeAttach"));

export { VolumesArgs, VolumesResult, VolumesOutputArgs } from "./volumes";
export const volumes: typeof import("./volumes").volumes = null as any;
export const volumesOutput: typeof import("./volumes").volumesOutput = null as any;
utilities.lazyLoad(exports, ["volumes","volumesOutput"], () => require("./volumes"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:ebs/volume:Volume":
                return new Volume(name, <any>undefined, { urn })
            case "volcengine:ebs/volumeAttach:VolumeAttach":
                return new VolumeAttach(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "ebs/volume", _module)
pulumi.runtime.registerResourceModule("volcengine", "ebs/volumeAttach", _module)
