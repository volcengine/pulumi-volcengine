// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AutoSnapshotPoliciesArgs, AutoSnapshotPoliciesResult, AutoSnapshotPoliciesOutputArgs } from "./autoSnapshotPolicies";
export const autoSnapshotPolicies: typeof import("./autoSnapshotPolicies").autoSnapshotPolicies = null as any;
export const autoSnapshotPoliciesOutput: typeof import("./autoSnapshotPolicies").autoSnapshotPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["autoSnapshotPolicies","autoSnapshotPoliciesOutput"], () => require("./autoSnapshotPolicies"));

export { AutoSnapshotPolicyArgs, AutoSnapshotPolicyState } from "./autoSnapshotPolicy";
export type AutoSnapshotPolicy = import("./autoSnapshotPolicy").AutoSnapshotPolicy;
export const AutoSnapshotPolicy: typeof import("./autoSnapshotPolicy").AutoSnapshotPolicy = null as any;
utilities.lazyLoad(exports, ["AutoSnapshotPolicy"], () => require("./autoSnapshotPolicy"));

export { AutoSnapshotPolicyAttachmentArgs, AutoSnapshotPolicyAttachmentState } from "./autoSnapshotPolicyAttachment";
export type AutoSnapshotPolicyAttachment = import("./autoSnapshotPolicyAttachment").AutoSnapshotPolicyAttachment;
export const AutoSnapshotPolicyAttachment: typeof import("./autoSnapshotPolicyAttachment").AutoSnapshotPolicyAttachment = null as any;
utilities.lazyLoad(exports, ["AutoSnapshotPolicyAttachment"], () => require("./autoSnapshotPolicyAttachment"));

export { GetAutoSnapshotPoliciesArgs, GetAutoSnapshotPoliciesResult, GetAutoSnapshotPoliciesOutputArgs } from "./getAutoSnapshotPolicies";
export const getAutoSnapshotPolicies: typeof import("./getAutoSnapshotPolicies").getAutoSnapshotPolicies = null as any;
export const getAutoSnapshotPoliciesOutput: typeof import("./getAutoSnapshotPolicies").getAutoSnapshotPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getAutoSnapshotPolicies","getAutoSnapshotPoliciesOutput"], () => require("./getAutoSnapshotPolicies"));

export { GetMaxExtraPerformancesArgs, GetMaxExtraPerformancesResult, GetMaxExtraPerformancesOutputArgs } from "./getMaxExtraPerformances";
export const getMaxExtraPerformances: typeof import("./getMaxExtraPerformances").getMaxExtraPerformances = null as any;
export const getMaxExtraPerformancesOutput: typeof import("./getMaxExtraPerformances").getMaxExtraPerformancesOutput = null as any;
utilities.lazyLoad(exports, ["getMaxExtraPerformances","getMaxExtraPerformancesOutput"], () => require("./getMaxExtraPerformances"));

export { GetSnapshotGroupsArgs, GetSnapshotGroupsResult, GetSnapshotGroupsOutputArgs } from "./getSnapshotGroups";
export const getSnapshotGroups: typeof import("./getSnapshotGroups").getSnapshotGroups = null as any;
export const getSnapshotGroupsOutput: typeof import("./getSnapshotGroups").getSnapshotGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getSnapshotGroups","getSnapshotGroupsOutput"], () => require("./getSnapshotGroups"));

export { GetSnapshotsArgs, GetSnapshotsResult, GetSnapshotsOutputArgs } from "./getSnapshots";
export const getSnapshots: typeof import("./getSnapshots").getSnapshots = null as any;
export const getSnapshotsOutput: typeof import("./getSnapshots").getSnapshotsOutput = null as any;
utilities.lazyLoad(exports, ["getSnapshots","getSnapshotsOutput"], () => require("./getSnapshots"));

export { GetVolumesArgs, GetVolumesResult, GetVolumesOutputArgs } from "./getVolumes";
export const getVolumes: typeof import("./getVolumes").getVolumes = null as any;
export const getVolumesOutput: typeof import("./getVolumes").getVolumesOutput = null as any;
utilities.lazyLoad(exports, ["getVolumes","getVolumesOutput"], () => require("./getVolumes"));

export { MaxExtraPerformancesArgs, MaxExtraPerformancesResult, MaxExtraPerformancesOutputArgs } from "./maxExtraPerformances";
export const maxExtraPerformances: typeof import("./maxExtraPerformances").maxExtraPerformances = null as any;
export const maxExtraPerformancesOutput: typeof import("./maxExtraPerformances").maxExtraPerformancesOutput = null as any;
utilities.lazyLoad(exports, ["maxExtraPerformances","maxExtraPerformancesOutput"], () => require("./maxExtraPerformances"));

export { SnapshotArgs, SnapshotState } from "./snapshot";
export type Snapshot = import("./snapshot").Snapshot;
export const Snapshot: typeof import("./snapshot").Snapshot = null as any;
utilities.lazyLoad(exports, ["Snapshot"], () => require("./snapshot"));

export { SnapshotGroupArgs, SnapshotGroupState } from "./snapshotGroup";
export type SnapshotGroup = import("./snapshotGroup").SnapshotGroup;
export const SnapshotGroup: typeof import("./snapshotGroup").SnapshotGroup = null as any;
utilities.lazyLoad(exports, ["SnapshotGroup"], () => require("./snapshotGroup"));

export { SnapshotGroupsArgs, SnapshotGroupsResult, SnapshotGroupsOutputArgs } from "./snapshotGroups";
export const snapshotGroups: typeof import("./snapshotGroups").snapshotGroups = null as any;
export const snapshotGroupsOutput: typeof import("./snapshotGroups").snapshotGroupsOutput = null as any;
utilities.lazyLoad(exports, ["snapshotGroups","snapshotGroupsOutput"], () => require("./snapshotGroups"));

export { SnapshotsArgs, SnapshotsResult, SnapshotsOutputArgs } from "./snapshots";
export const snapshots: typeof import("./snapshots").snapshots = null as any;
export const snapshotsOutput: typeof import("./snapshots").snapshotsOutput = null as any;
utilities.lazyLoad(exports, ["snapshots","snapshotsOutput"], () => require("./snapshots"));

export { VolumeArgs, VolumeState } from "./volume";
export type Volume = import("./volume").Volume;
export const Volume: typeof import("./volume").Volume = null as any;
utilities.lazyLoad(exports, ["Volume"], () => require("./volume"));

export { VolumeAttachArgs, VolumeAttachState } from "./volumeAttach";
export type VolumeAttach = import("./volumeAttach").VolumeAttach;
export const VolumeAttach: typeof import("./volumeAttach").VolumeAttach = null as any;
utilities.lazyLoad(exports, ["VolumeAttach"], () => require("./volumeAttach"));

export { VolumesArgs, VolumesResult, VolumesOutputArgs } from "./volumes";
export const volumes: typeof import("./volumes").volumes = null as any;
export const volumesOutput: typeof import("./volumes").volumesOutput = null as any;
utilities.lazyLoad(exports, ["volumes","volumesOutput"], () => require("./volumes"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:ebs/autoSnapshotPolicy:AutoSnapshotPolicy":
                return new AutoSnapshotPolicy(name, <any>undefined, { urn })
            case "volcengine:ebs/autoSnapshotPolicyAttachment:AutoSnapshotPolicyAttachment":
                return new AutoSnapshotPolicyAttachment(name, <any>undefined, { urn })
            case "volcengine:ebs/snapshot:Snapshot":
                return new Snapshot(name, <any>undefined, { urn })
            case "volcengine:ebs/snapshotGroup:SnapshotGroup":
                return new SnapshotGroup(name, <any>undefined, { urn })
            case "volcengine:ebs/volume:Volume":
                return new Volume(name, <any>undefined, { urn })
            case "volcengine:ebs/volumeAttach:VolumeAttach":
                return new VolumeAttach(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "ebs/autoSnapshotPolicy", _module)
pulumi.runtime.registerResourceModule("volcengine", "ebs/autoSnapshotPolicyAttachment", _module)
pulumi.runtime.registerResourceModule("volcengine", "ebs/snapshot", _module)
pulumi.runtime.registerResourceModule("volcengine", "ebs/snapshotGroup", _module)
pulumi.runtime.registerResourceModule("volcengine", "ebs/volume", _module)
pulumi.runtime.registerResourceModule("volcengine", "ebs/volumeAttach", _module)
