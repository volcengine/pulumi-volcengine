// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ebs max extra performances
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.ebs.getMaxExtraPerformances({
 *     size: 60,
 *     volumeType: "TSSD_TL0",
 * });
 * ```
 */
/** @deprecated volcengine.ebs.MaxExtraPerformances has been deprecated in favor of volcengine.ebs.getMaxExtraPerformances */
export function maxExtraPerformances(args?: MaxExtraPerformancesArgs, opts?: pulumi.InvokeOptions): Promise<MaxExtraPerformancesResult> {
    pulumi.log.warn("maxExtraPerformances is deprecated: volcengine.ebs.MaxExtraPerformances has been deprecated in favor of volcengine.ebs.getMaxExtraPerformances")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:ebs/maxExtraPerformances:MaxExtraPerformances", {
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "size": args.size,
        "volumeId": args.volumeId,
        "volumeType": args.volumeType,
    }, opts);
}

/**
 * A collection of arguments for invoking MaxExtraPerformances.
 */
export interface MaxExtraPerformancesArgs {
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The size of the volume. Unit: GiB.
     */
    size?: number;
    /**
     * The id of the volume.
     */
    volumeId?: string;
    /**
     * The type of the volume. Valid values: `TSSD_TL0`.
     */
    volumeType?: string;
}

/**
 * A collection of values returned by MaxExtraPerformances.
 */
export interface MaxExtraPerformancesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The collection of query.
     */
    readonly performances: outputs.ebs.MaxExtraPerformancesPerformance[];
    readonly size?: number;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    readonly volumeId?: string;
    readonly volumeType?: string;
}
/**
 * Use this data source to query detailed information of ebs max extra performances
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.ebs.getMaxExtraPerformances({
 *     size: 60,
 *     volumeType: "TSSD_TL0",
 * });
 * ```
 */
/** @deprecated volcengine.ebs.MaxExtraPerformances has been deprecated in favor of volcengine.ebs.getMaxExtraPerformances */
export function maxExtraPerformancesOutput(args?: MaxExtraPerformancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<MaxExtraPerformancesResult> {
    return pulumi.output(args).apply((a: any) => maxExtraPerformances(a, opts))
}

/**
 * A collection of arguments for invoking MaxExtraPerformances.
 */
export interface MaxExtraPerformancesOutputArgs {
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The size of the volume. Unit: GiB.
     */
    size?: pulumi.Input<number>;
    /**
     * The id of the volume.
     */
    volumeId?: pulumi.Input<string>;
    /**
     * The type of the volume. Valid values: `TSSD_TL0`.
     */
    volumeType?: pulumi.Input<string>;
}
