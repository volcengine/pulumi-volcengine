// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tls consumer groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.tls.getConsumerGroups({});
 * ```
 */
/** @deprecated volcengine.tls.ConsumerGroups has been deprecated in favor of volcengine.tls.getConsumerGroups */
export function consumerGroups(args?: ConsumerGroupsArgs, opts?: pulumi.InvokeOptions): Promise<ConsumerGroupsResult> {
    pulumi.log.warn("consumerGroups is deprecated: volcengine.tls.ConsumerGroups has been deprecated in favor of volcengine.tls.getConsumerGroups")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:tls/consumerGroups:ConsumerGroups", {
        "consumerGroupName": args.consumerGroupName,
        "iamProjectName": args.iamProjectName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectId": args.projectId,
        "projectName": args.projectName,
        "topicId": args.topicId,
        "topicName": args.topicName,
    }, opts);
}

/**
 * A collection of arguments for invoking ConsumerGroups.
 */
export interface ConsumerGroupsArgs {
    /**
     * The name of the consumer group.
     */
    consumerGroupName?: string;
    /**
     * IAM log project name.
     */
    iamProjectName?: string;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The log project ID to which the consumption group belongs.
     */
    projectId?: string;
    /**
     * The name of the log item to which the consumption group belongs.
     */
    projectName?: string;
    /**
     * The log topic ID to which the consumer belongs.
     */
    topicId?: string;
    /**
     * The name of the log topic to which the consumption group belongs.
     */
    topicName?: string;
}

/**
 * A collection of values returned by ConsumerGroups.
 */
export interface ConsumerGroupsResult {
    /**
     * The name of the consumer group.
     */
    readonly consumerGroupName?: string;
    /**
     * List of log service consumption groups.
     */
    readonly consumerGroups: outputs.tls.ConsumerGroupsConsumerGroup[];
    readonly iamProjectName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The log project ID to which the consumption group belongs.
     */
    readonly projectId?: string;
    /**
     * The name of the log item to which the consumption group belongs.
     */
    readonly projectName?: string;
    /**
     * The list of log topic ids to be consumed by the consumer group.
     */
    readonly topicId?: string;
    readonly topicName?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of tls consumer groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.tls.getConsumerGroups({});
 * ```
 */
/** @deprecated volcengine.tls.ConsumerGroups has been deprecated in favor of volcengine.tls.getConsumerGroups */
export function consumerGroupsOutput(args?: ConsumerGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ConsumerGroupsResult> {
    return pulumi.output(args).apply((a: any) => consumerGroups(a, opts))
}

/**
 * A collection of arguments for invoking ConsumerGroups.
 */
export interface ConsumerGroupsOutputArgs {
    /**
     * The name of the consumer group.
     */
    consumerGroupName?: pulumi.Input<string>;
    /**
     * IAM log project name.
     */
    iamProjectName?: pulumi.Input<string>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The log project ID to which the consumption group belongs.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The name of the log item to which the consumption group belongs.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The log topic ID to which the consumer belongs.
     */
    topicId?: pulumi.Input<string>;
    /**
     * The name of the log topic to which the consumption group belongs.
     */
    topicName?: pulumi.Input<string>;
}
