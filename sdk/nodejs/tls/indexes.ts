// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tls indexes
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.tls.Indexes({
 *     ids: ["65d67d34-c5b4-4ec8-b3a9-175d3366****"],
 * });
 * ```
 */
export function indexes(args: IndexesArgs, opts?: pulumi.InvokeOptions): Promise<IndexesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:tls/indexes:Indexes", {
        "ids": args.ids,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking Indexes.
 */
export interface IndexesArgs {
    /**
     * The list of topic id of tls index.
     */
    ids: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by Indexes.
 */
export interface IndexesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly outputFile?: string;
    /**
     * The collection of tls index query.
     */
    readonly tlsIndexes: outputs.tls.IndexesTlsIndex[];
    /**
     * The total count of tls index query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of tls indexes
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.tls.Indexes({
 *     ids: ["65d67d34-c5b4-4ec8-b3a9-175d3366****"],
 * });
 * ```
 */
export function indexesOutput(args: IndexesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<IndexesResult> {
    return pulumi.output(args).apply((a: any) => indexes(a, opts))
}

/**
 * A collection of arguments for invoking Indexes.
 */
export interface IndexesOutputArgs {
    /**
     * The list of topic id of tls index.
     */
    ids: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
