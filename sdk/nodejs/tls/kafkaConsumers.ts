// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tls kafka consumers
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.tls.KafkaConsumers({
 *     ids: [
 *         "65d67d34-c5b4-4ec8-b3a9-175d33668b45",
 *         "cfb5c08b-0c7a-44fa-8971-8afc12f1b123",
 *         "edf051ed-3c46-49ba-9339-bea628fedc15",
 *     ],
 * });
 * ```
 */
export function kafkaConsumers(args?: KafkaConsumersArgs, opts?: pulumi.InvokeOptions): Promise<KafkaConsumersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:tls/kafkaConsumers:KafkaConsumers", {
        "ids": args.ids,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking KafkaConsumers.
 */
export interface KafkaConsumersArgs {
    /**
     * A list of topic IDs.
     */
    ids?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by KafkaConsumers.
 */
export interface KafkaConsumersResult {
    /**
     * The collection of query.
     */
    readonly datas: outputs.tls.KafkaConsumersData[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of tls kafka consumers
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.tls.KafkaConsumers({
 *     ids: [
 *         "65d67d34-c5b4-4ec8-b3a9-175d33668b45",
 *         "cfb5c08b-0c7a-44fa-8971-8afc12f1b123",
 *         "edf051ed-3c46-49ba-9339-bea628fedc15",
 *     ],
 * });
 * ```
 */
export function kafkaConsumersOutput(args?: KafkaConsumersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<KafkaConsumersResult> {
    return pulumi.output(args).apply((a: any) => kafkaConsumers(a, opts))
}

/**
 * A collection of arguments for invoking KafkaConsumers.
 */
export interface KafkaConsumersOutputArgs {
    /**
     * A list of topic IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
