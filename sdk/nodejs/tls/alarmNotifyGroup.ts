// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage tls alarm notify group
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.tls.AlarmNotifyGroup("foo", {
 *     alarmNotifyGroupName: "tf-test",
 *     iamProjectName: "yyy",
 *     notifyTypes: ["Trigger"],
 *     receivers: [{
 *         endTime: "23:59:59",
 *         receiverChannels: [
 *             "Email",
 *             "Sms",
 *         ],
 *         receiverNames: ["vke-qs"],
 *         receiverType: "User",
 *         startTime: "23:00:00",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * tls alarm notify group can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:tls/alarmNotifyGroup:AlarmNotifyGroup default fa************
 * ```
 */
export class AlarmNotifyGroup extends pulumi.CustomResource {
    /**
     * Get an existing AlarmNotifyGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlarmNotifyGroupState, opts?: pulumi.CustomResourceOptions): AlarmNotifyGroup {
        return new AlarmNotifyGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:tls/alarmNotifyGroup:AlarmNotifyGroup';

    /**
     * Returns true if the given object is an instance of AlarmNotifyGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlarmNotifyGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlarmNotifyGroup.__pulumiType;
    }

    /**
     * The alarm notification group id.
     */
    public /*out*/ readonly alarmNotifyGroupId!: pulumi.Output<string>;
    /**
     * The name of the notify group.
     */
    public readonly alarmNotifyGroupName!: pulumi.Output<string>;
    /**
     * The name of the iam project.
     */
    public readonly iamProjectName!: pulumi.Output<string | undefined>;
    /**
     * The notify type.
     */
    public readonly notifyTypes!: pulumi.Output<string[]>;
    /**
     * List of IAM users to receive alerts.
     */
    public readonly receivers!: pulumi.Output<outputs.tls.AlarmNotifyGroupReceiver[]>;

    /**
     * Create a AlarmNotifyGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlarmNotifyGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlarmNotifyGroupArgs | AlarmNotifyGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlarmNotifyGroupState | undefined;
            resourceInputs["alarmNotifyGroupId"] = state ? state.alarmNotifyGroupId : undefined;
            resourceInputs["alarmNotifyGroupName"] = state ? state.alarmNotifyGroupName : undefined;
            resourceInputs["iamProjectName"] = state ? state.iamProjectName : undefined;
            resourceInputs["notifyTypes"] = state ? state.notifyTypes : undefined;
            resourceInputs["receivers"] = state ? state.receivers : undefined;
        } else {
            const args = argsOrState as AlarmNotifyGroupArgs | undefined;
            if ((!args || args.alarmNotifyGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alarmNotifyGroupName'");
            }
            if ((!args || args.notifyTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notifyTypes'");
            }
            if ((!args || args.receivers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'receivers'");
            }
            resourceInputs["alarmNotifyGroupName"] = args ? args.alarmNotifyGroupName : undefined;
            resourceInputs["iamProjectName"] = args ? args.iamProjectName : undefined;
            resourceInputs["notifyTypes"] = args ? args.notifyTypes : undefined;
            resourceInputs["receivers"] = args ? args.receivers : undefined;
            resourceInputs["alarmNotifyGroupId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlarmNotifyGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlarmNotifyGroup resources.
 */
export interface AlarmNotifyGroupState {
    /**
     * The alarm notification group id.
     */
    alarmNotifyGroupId?: pulumi.Input<string>;
    /**
     * The name of the notify group.
     */
    alarmNotifyGroupName?: pulumi.Input<string>;
    /**
     * The name of the iam project.
     */
    iamProjectName?: pulumi.Input<string>;
    /**
     * The notify type.
     */
    notifyTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of IAM users to receive alerts.
     */
    receivers?: pulumi.Input<pulumi.Input<inputs.tls.AlarmNotifyGroupReceiver>[]>;
}

/**
 * The set of arguments for constructing a AlarmNotifyGroup resource.
 */
export interface AlarmNotifyGroupArgs {
    /**
     * The name of the notify group.
     */
    alarmNotifyGroupName: pulumi.Input<string>;
    /**
     * The name of the iam project.
     */
    iamProjectName?: pulumi.Input<string>;
    /**
     * The notify type.
     */
    notifyTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of IAM users to receive alerts.
     */
    receivers: pulumi.Input<pulumi.Input<inputs.tls.AlarmNotifyGroupReceiver>[]>;
}
