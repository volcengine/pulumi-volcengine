// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage tls rule applier
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.tls.RuleApplier("foo", {
 *     hostGroupId: "a2a9e8c5-9835-434f-b866-2c1cfa82887d",
 *     ruleId: "25104b0f-28b7-4a5c-8339-7f9c431d77c8",
 * });
 * ```
 *
 * ## Import
 *
 * tls rule applier can be imported using the rule id and host group id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:tls/ruleApplier:RuleApplier default fa************:bcb*******
 * ```
 */
export class RuleApplier extends pulumi.CustomResource {
    /**
     * Get an existing RuleApplier resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleApplierState, opts?: pulumi.CustomResourceOptions): RuleApplier {
        return new RuleApplier(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:tls/ruleApplier:RuleApplier';

    /**
     * Returns true if the given object is an instance of RuleApplier.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleApplier {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleApplier.__pulumiType;
    }

    /**
     * The id of the host group.
     */
    public readonly hostGroupId!: pulumi.Output<string>;
    /**
     * The id of the rule.
     */
    public readonly ruleId!: pulumi.Output<string>;

    /**
     * Create a RuleApplier resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleApplierArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleApplierArgs | RuleApplierState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleApplierState | undefined;
            resourceInputs["hostGroupId"] = state ? state.hostGroupId : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
        } else {
            const args = argsOrState as RuleApplierArgs | undefined;
            if ((!args || args.hostGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostGroupId'");
            }
            if ((!args || args.ruleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleId'");
            }
            resourceInputs["hostGroupId"] = args ? args.hostGroupId : undefined;
            resourceInputs["ruleId"] = args ? args.ruleId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleApplier.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RuleApplier resources.
 */
export interface RuleApplierState {
    /**
     * The id of the host group.
     */
    hostGroupId?: pulumi.Input<string>;
    /**
     * The id of the rule.
     */
    ruleId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RuleApplier resource.
 */
export interface RuleApplierArgs {
    /**
     * The id of the host group.
     */
    hostGroupId: pulumi.Input<string>;
    /**
     * The id of the rule.
     */
    ruleId: pulumi.Input<string>;
}
