// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tls import tasks
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.tls.getImportTasks({});
 * ```
 */
export function getImportTasks(args?: GetImportTasksArgs, opts?: pulumi.InvokeOptions): Promise<GetImportTasksResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:tls/getImportTasks:getImportTasks", {
        "iamProjectName": args.iamProjectName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectId": args.projectId,
        "projectName": args.projectName,
        "sourceType": args.sourceType,
        "status": args.status,
        "taskId": args.taskId,
        "taskName": args.taskName,
        "topicId": args.topicId,
        "topicName": args.topicName,
    }, opts);
}

/**
 * A collection of arguments for invoking getImportTasks.
 */
export interface GetImportTasksArgs {
    /**
     * Specify the IAM project name to query the data import tasks under the specified IAM project.
     */
    iamProjectName?: string;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * Specify the log item ID for querying the data import tasks under the specified log item.
     */
    projectId?: string;
    /**
     * Specify the name of the log item for querying the data import tasks under the specified log item. Support fuzzy query..
     */
    projectName?: string;
    /**
     * Specify the import type for querying the data import tasks related to this import type.
     */
    sourceType?: string;
    /**
     * Specify the status of the import task.
     */
    status?: string;
    /**
     * Import the task ID of the data to be queried.
     */
    taskId?: string;
    /**
     * Import the task name of the data to be queried.
     */
    taskName?: string;
    /**
     * Specify the log topic ID for querying the data import tasks related to this log topic.
     */
    topicId?: string;
    /**
     * Specify the name of the log topic for querying the data import tasks related to this log topic. Support fuzzy query.
     */
    topicName?: string;
}

/**
 * A collection of values returned by getImportTasks.
 */
export interface GetImportTasksResult {
    readonly iamProjectName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * Specify the log item ID for querying the data import tasks under the specified log item.
     */
    readonly projectId?: string;
    /**
     * Specify the name of the log item for querying the data import tasks under the specified log item. Support fuzzy query..
     */
    readonly projectName?: string;
    /**
     * Specify the import type for querying the data import tasks related to this import type.
     */
    readonly sourceType?: string;
    readonly status?: string;
    /**
     * Import the task ID of the data to be queried.
     */
    readonly taskId?: string;
    /**
     * Data import task list.
     */
    readonly taskInfos: outputs.tls.GetImportTasksTaskInfo[];
    /**
     * Import the task name of the data to be queried.
     */
    readonly taskName?: string;
    /**
     * Specify the log topic ID for querying the data import tasks related to this log topic.
     */
    readonly topicId?: string;
    /**
     * Specify the name of the log topic for querying the data import tasks related to this log topic. Support fuzzy query.
     */
    readonly topicName?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of tls import tasks
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.tls.getImportTasks({});
 * ```
 */
export function getImportTasksOutput(args?: GetImportTasksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImportTasksResult> {
    return pulumi.output(args).apply((a: any) => getImportTasks(a, opts))
}

/**
 * A collection of arguments for invoking getImportTasks.
 */
export interface GetImportTasksOutputArgs {
    /**
     * Specify the IAM project name to query the data import tasks under the specified IAM project.
     */
    iamProjectName?: pulumi.Input<string>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Specify the log item ID for querying the data import tasks under the specified log item.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Specify the name of the log item for querying the data import tasks under the specified log item. Support fuzzy query..
     */
    projectName?: pulumi.Input<string>;
    /**
     * Specify the import type for querying the data import tasks related to this import type.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * Specify the status of the import task.
     */
    status?: pulumi.Input<string>;
    /**
     * Import the task ID of the data to be queried.
     */
    taskId?: pulumi.Input<string>;
    /**
     * Import the task name of the data to be queried.
     */
    taskName?: pulumi.Input<string>;
    /**
     * Specify the log topic ID for querying the data import tasks related to this log topic.
     */
    topicId?: pulumi.Input<string>;
    /**
     * Specify the name of the log topic for querying the data import tasks related to this log topic. Support fuzzy query.
     */
    topicName?: pulumi.Input<string>;
}
