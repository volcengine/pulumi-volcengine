// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage tls index
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.tls.Index("foo", {
 *     fullText: {
 *         caseSensitive: true,
 *         delimiter: "!",
 *         includeChinese: false,
 *     },
 *     keyValues: [
 *         {
 *             caseSensitive: true,
 *             delimiter: "!",
 *             includeChinese: false,
 *             jsonKeys: [
 *                 {
 *                     key: "k2.k4",
 *                     valueType: "text",
 *                 },
 *                 {
 *                     key: "k3.k4",
 *                     valueType: "long",
 *                 },
 *             ],
 *             key: "k1",
 *             sqlFlag: false,
 *             valueType: "json",
 *         },
 *         {
 *             caseSensitive: true,
 *             delimiter: "!",
 *             includeChinese: false,
 *             key: "k5",
 *             sqlFlag: false,
 *             valueType: "text",
 *         },
 *     ],
 *     topicId: "65d67d34-c5b4-4ec8-b3a9-175d3366****",
 * });
 * ```
 *
 * ## Import
 *
 * Tls Index can be imported using the topic id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:tls/index:Index default index:edf051ed-3c46-49ba-9339-bea628fe****
 * ```
 */
export class Index extends pulumi.CustomResource {
    /**
     * Get an existing Index resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IndexState, opts?: pulumi.CustomResourceOptions): Index {
        return new Index(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:tls/index:Index';

    /**
     * Returns true if the given object is an instance of Index.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Index {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Index.__pulumiType;
    }

    /**
     * The create time of the tls index.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The full text info of the tls index.
     */
    public readonly fullText!: pulumi.Output<outputs.tls.IndexFullText | undefined>;
    /**
     * The key value info of the tls index.
     */
    public readonly keyValues!: pulumi.Output<outputs.tls.IndexKeyValue[] | undefined>;
    /**
     * The modify time of the tls index.
     */
    public /*out*/ readonly modifyTime!: pulumi.Output<string>;
    /**
     * The topic id of the tls index.
     */
    public readonly topicId!: pulumi.Output<string>;

    /**
     * Create a Index resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IndexArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IndexArgs | IndexState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IndexState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["fullText"] = state ? state.fullText : undefined;
            resourceInputs["keyValues"] = state ? state.keyValues : undefined;
            resourceInputs["modifyTime"] = state ? state.modifyTime : undefined;
            resourceInputs["topicId"] = state ? state.topicId : undefined;
        } else {
            const args = argsOrState as IndexArgs | undefined;
            if ((!args || args.topicId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'topicId'");
            }
            resourceInputs["fullText"] = args ? args.fullText : undefined;
            resourceInputs["keyValues"] = args ? args.keyValues : undefined;
            resourceInputs["topicId"] = args ? args.topicId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["modifyTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Index.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Index resources.
 */
export interface IndexState {
    /**
     * The create time of the tls index.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The full text info of the tls index.
     */
    fullText?: pulumi.Input<inputs.tls.IndexFullText>;
    /**
     * The key value info of the tls index.
     */
    keyValues?: pulumi.Input<pulumi.Input<inputs.tls.IndexKeyValue>[]>;
    /**
     * The modify time of the tls index.
     */
    modifyTime?: pulumi.Input<string>;
    /**
     * The topic id of the tls index.
     */
    topicId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Index resource.
 */
export interface IndexArgs {
    /**
     * The full text info of the tls index.
     */
    fullText?: pulumi.Input<inputs.tls.IndexFullText>;
    /**
     * The key value info of the tls index.
     */
    keyValues?: pulumi.Input<pulumi.Input<inputs.tls.IndexKeyValue>[]>;
    /**
     * The topic id of the tls index.
     */
    topicId: pulumi.Input<string>;
}
