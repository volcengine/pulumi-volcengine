// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tls alarms
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.tls.Alarms({
 *     projectId: "cc44f8b6-0328-4622-b043-023fca735cd4",
 * });
 * ```
 */
export function alarms(args: AlarmsArgs, opts?: pulumi.InvokeOptions): Promise<AlarmsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:tls/alarms:Alarms", {
        "alarmId": args.alarmId,
        "alarmName": args.alarmName,
        "outputFile": args.outputFile,
        "projectId": args.projectId,
        "status": args.status,
        "topicId": args.topicId,
        "topicName": args.topicName,
    }, opts);
}

/**
 * A collection of arguments for invoking Alarms.
 */
export interface AlarmsArgs {
    /**
     * The alarm id.
     */
    alarmId?: string;
    /**
     * The alarm name.
     */
    alarmName?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The project id.
     */
    projectId: string;
    /**
     * The status.
     */
    status?: boolean;
    /**
     * The topic id.
     */
    topicId?: string;
    /**
     * The topic name.
     */
    topicName?: string;
}

/**
 * A collection of values returned by Alarms.
 */
export interface AlarmsResult {
    /**
     * The alarm id.
     */
    readonly alarmId?: string;
    /**
     * The name of the alarm.
     */
    readonly alarmName?: string;
    /**
     * The list of alarms.
     */
    readonly alarms: outputs.tls.AlarmsAlarm[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    /**
     * The project id.
     */
    readonly projectId: string;
    /**
     * Whether to enable the alert policy. The default value is true, that is, on.
     */
    readonly status?: boolean;
    /**
     * The id of the topic.
     */
    readonly topicId?: string;
    /**
     * The name of the topic.
     */
    readonly topicName?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of tls alarms
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.tls.Alarms({
 *     projectId: "cc44f8b6-0328-4622-b043-023fca735cd4",
 * });
 * ```
 */
export function alarmsOutput(args: AlarmsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<AlarmsResult> {
    return pulumi.output(args).apply((a: any) => alarms(a, opts))
}

/**
 * A collection of arguments for invoking Alarms.
 */
export interface AlarmsOutputArgs {
    /**
     * The alarm id.
     */
    alarmId?: pulumi.Input<string>;
    /**
     * The alarm name.
     */
    alarmName?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The project id.
     */
    projectId: pulumi.Input<string>;
    /**
     * The status.
     */
    status?: pulumi.Input<boolean>;
    /**
     * The topic id.
     */
    topicId?: pulumi.Input<string>;
    /**
     * The topic name.
     */
    topicName?: pulumi.Input<string>;
}
