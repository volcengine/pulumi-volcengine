// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of vpn connections
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vpn.Connections({
 *     ids: ["vgc-2d5wwids8cdts58ozfe63k2uq"],
 * });
 * ```
 */
export function connections(args?: ConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<ConnectionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:vpn/connections:Connections", {
        "customerGatewayId": args.customerGatewayId,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "vpnConnectionNames": args.vpnConnectionNames,
        "vpnGatewayId": args.vpnGatewayId,
    }, opts);
}

/**
 * A collection of arguments for invoking Connections.
 */
export interface ConnectionsArgs {
    /**
     * An ID of customer gateway.
     */
    customerGatewayId?: string;
    /**
     * A list of VPN connection ids.
     */
    ids?: string[];
    /**
     * A Name Regex of VPN connection.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * A list of VPN connection names.
     */
    vpnConnectionNames?: string[];
    /**
     * An ID of VPN gateway.
     */
    vpnGatewayId?: string;
}

/**
 * A collection of values returned by Connections.
 */
export interface ConnectionsResult {
    /**
     * The ID of the customer gateway.
     */
    readonly customerGatewayId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The total count of VPN connection query.
     */
    readonly totalCount: number;
    readonly vpnConnectionNames?: string[];
    /**
     * The collection of VPN connection query.
     */
    readonly vpnConnections: outputs.vpn.ConnectionsVpnConnection[];
    /**
     * The ID of the vpn gateway.
     */
    readonly vpnGatewayId?: string;
}
/**
 * Use this data source to query detailed information of vpn connections
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.vpn.Connections({
 *     ids: ["vgc-2d5wwids8cdts58ozfe63k2uq"],
 * });
 * ```
 */
export function connectionsOutput(args?: ConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ConnectionsResult> {
    return pulumi.output(args).apply((a: any) => connections(a, opts))
}

/**
 * A collection of arguments for invoking Connections.
 */
export interface ConnectionsOutputArgs {
    /**
     * An ID of customer gateway.
     */
    customerGatewayId?: pulumi.Input<string>;
    /**
     * A list of VPN connection ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of VPN connection.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * A list of VPN connection names.
     */
    vpnConnectionNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An ID of VPN gateway.
     */
    vpnGatewayId?: pulumi.Input<string>;
}
