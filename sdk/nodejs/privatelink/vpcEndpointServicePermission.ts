// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage privatelink vpc endpoint service permission
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.privatelink.VpcEndpointServicePermission("foo", {
 *     permitAccountId: "210000000",
 *     serviceId: "epsvc-3rel73uf2ewao5zsk2j2l58ro",
 * });
 * const foo1 = new volcengine.privatelink.VpcEndpointServicePermission("foo1", {
 *     permitAccountId: "210000001",
 *     serviceId: "epsvc-3rel73uf2ewao5zsk2j2l58ro",
 * });
 * ```
 *
 * ## Import
 *
 * VpcEndpointServicePermission can be imported using the serviceId:permitAccountId, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:privatelink/vpcEndpointServicePermission:VpcEndpointServicePermission default epsvc-2fe630gurkl37k5gfuy33****:2100000000
 * ```
 */
export class VpcEndpointServicePermission extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointServicePermission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcEndpointServicePermissionState, opts?: pulumi.CustomResourceOptions): VpcEndpointServicePermission {
        return new VpcEndpointServicePermission(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:privatelink/vpcEndpointServicePermission:VpcEndpointServicePermission';

    /**
     * Returns true if the given object is an instance of VpcEndpointServicePermission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcEndpointServicePermission {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcEndpointServicePermission.__pulumiType;
    }

    /**
     * The id of account.
     */
    public readonly permitAccountId!: pulumi.Output<string>;
    /**
     * The id of service.
     */
    public readonly serviceId!: pulumi.Output<string>;

    /**
     * Create a VpcEndpointServicePermission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcEndpointServicePermissionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcEndpointServicePermissionArgs | VpcEndpointServicePermissionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcEndpointServicePermissionState | undefined;
            resourceInputs["permitAccountId"] = state ? state.permitAccountId : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
        } else {
            const args = argsOrState as VpcEndpointServicePermissionArgs | undefined;
            if ((!args || args.permitAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permitAccountId'");
            }
            if ((!args || args.serviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceId'");
            }
            resourceInputs["permitAccountId"] = args ? args.permitAccountId : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcEndpointServicePermission.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcEndpointServicePermission resources.
 */
export interface VpcEndpointServicePermissionState {
    /**
     * The id of account.
     */
    permitAccountId?: pulumi.Input<string>;
    /**
     * The id of service.
     */
    serviceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcEndpointServicePermission resource.
 */
export interface VpcEndpointServicePermissionArgs {
    /**
     * The id of account.
     */
    permitAccountId: pulumi.Input<string>;
    /**
     * The id of service.
     */
    serviceId: pulumi.Input<string>;
}
