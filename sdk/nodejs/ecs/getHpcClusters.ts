// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ecs hpc clusters
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.ecs.getHpcClusters({
 *     zoneId: "cn-beijing-a",
 * });
 * ```
 */
export function getHpcClusters(args?: GetHpcClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetHpcClustersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:ecs/getHpcClusters:getHpcClusters", {
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getHpcClusters.
 */
export interface GetHpcClustersArgs {
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The zone id of the hpc cluster.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by getHpcClusters.
 */
export interface GetHpcClustersResult {
    /**
     * The collection of query.
     */
    readonly hpcClusters: outputs.ecs.GetHpcClustersHpcCluster[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The zone id of the hpc cluster.
     */
    readonly zoneId?: string;
}
/**
 * Use this data source to query detailed information of ecs hpc clusters
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.ecs.getHpcClusters({
 *     zoneId: "cn-beijing-a",
 * });
 * ```
 */
export function getHpcClustersOutput(args?: GetHpcClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHpcClustersResult> {
    return pulumi.output(args).apply((a: any) => getHpcClusters(a, opts))
}

/**
 * A collection of arguments for invoking getHpcClusters.
 */
export interface GetHpcClustersOutputArgs {
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The zone id of the hpc cluster.
     */
    zoneId?: pulumi.Input<string>;
}
