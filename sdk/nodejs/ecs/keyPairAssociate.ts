// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage ecs key pair associate
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooKeyPair = new volcengine.ecs.KeyPair("fooKeyPair", {
 *     keyPairName: "acc-test-key-name",
 *     description: "acc-test",
 * });
 * const fooZones = volcengine.ecs.Zones({});
 * const fooImages = volcengine.ecs.Images({
 *     osType: "Linux",
 *     visibility: "public",
 *     instanceTypeId: "ecs.g1.large",
 * });
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooSubnet = new volcengine.vpc.Subnet("fooSubnet", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[0]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const fooSecurityGroup = new volcengine.vpc.SecurityGroup("fooSecurityGroup", {
 *     vpcId: fooVpc.id,
 *     securityGroupName: "acc-test-security-group",
 * });
 * const fooInstance = new volcengine.ecs.Instance("fooInstance", {
 *     imageId: fooImages.then(fooImages => fooImages.images?.[0]?.imageId),
 *     instanceType: "ecs.g1.large",
 *     instanceName: "acc-test-ecs-name",
 *     password: "your password",
 *     instanceChargeType: "PostPaid",
 *     systemVolumeType: "ESSD_PL0",
 *     systemVolumeSize: 40,
 *     subnetId: fooSubnet.id,
 *     securityGroupIds: [fooSecurityGroup.id],
 * });
 * const fooKeyPairAssociate = new volcengine.ecs.KeyPairAssociate("fooKeyPairAssociate", {
 *     instanceId: fooInstance.id,
 *     keyPairId: fooKeyPair.id,
 * });
 * ```
 *
 * ## Import
 *
 * ECS key pair associate can be imported using the id, e.g. After binding the key pair, the instance needs to be restarted for the key pair to take effect. After the key pair is bound, the password login method will automatically become invalid. If your instance has been set for password login, after the key pair is bound, you will no longer be able to use the password login method.
 *
 * ```sh
 *  $ pulumi import volcengine:ecs/keyPairAssociate:KeyPairAssociate default kp-ybti5tkpkv2udbfolrft:i-mizl7m1kqccg5smt1bdpijuj
 * ```
 */
export class KeyPairAssociate extends pulumi.CustomResource {
    /**
     * Get an existing KeyPairAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KeyPairAssociateState, opts?: pulumi.CustomResourceOptions): KeyPairAssociate {
        return new KeyPairAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:ecs/keyPairAssociate:KeyPairAssociate';

    /**
     * Returns true if the given object is an instance of KeyPairAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KeyPairAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KeyPairAssociate.__pulumiType;
    }

    /**
     * The ID of ECS Instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The ID of ECS KeyPair Associate.
     */
    public readonly keyPairId!: pulumi.Output<string>;

    /**
     * Create a KeyPairAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeyPairAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KeyPairAssociateArgs | KeyPairAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KeyPairAssociateState | undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["keyPairId"] = state ? state.keyPairId : undefined;
        } else {
            const args = argsOrState as KeyPairAssociateArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.keyPairId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyPairId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["keyPairId"] = args ? args.keyPairId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KeyPairAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KeyPairAssociate resources.
 */
export interface KeyPairAssociateState {
    /**
     * The ID of ECS Instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The ID of ECS KeyPair Associate.
     */
    keyPairId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KeyPairAssociate resource.
 */
export interface KeyPairAssociateArgs {
    /**
     * The ID of ECS Instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The ID of ECS KeyPair Associate.
     */
    keyPairId: pulumi.Input<string>;
}
