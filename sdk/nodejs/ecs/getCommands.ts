// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ecs commands
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.ecs.getCommands({
 *     commandId: "cmd-ychkepkhtim0tr3b****",
 * });
 * ```
 */
export function getCommands(args?: GetCommandsArgs, opts?: pulumi.InvokeOptions): Promise<GetCommandsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:ecs/getCommands:getCommands", {
        "commandId": args.commandId,
        "commandProvider": args.commandProvider,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "order": args.order,
        "outputFile": args.outputFile,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getCommands.
 */
export interface GetCommandsArgs {
    /**
     * The id of ecs command.
     */
    commandId?: string;
    /**
     * The provider of public command. When this field is not specified, query for custom commands.
     */
    commandProvider?: string;
    /**
     * The name of ecs command. This field support fuzzy query.
     */
    name?: string;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * The order of ecs command query result.
     */
    order?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The type of ecs command. Valid values: `Shell`.
     */
    type?: string;
}

/**
 * A collection of values returned by getCommands.
 */
export interface GetCommandsResult {
    /**
     * The id of the ecs command.
     */
    readonly commandId?: string;
    /**
     * The provider of the public command.
     */
    readonly commandProvider?: string;
    /**
     * The collection of query.
     */
    readonly commands: outputs.ecs.GetCommandsCommand[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the ecs command.
     */
    readonly name?: string;
    readonly nameRegex?: string;
    readonly order?: string;
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The type of the ecs command.
     */
    readonly type?: string;
}
/**
 * Use this data source to query detailed information of ecs commands
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.ecs.getCommands({
 *     commandId: "cmd-ychkepkhtim0tr3b****",
 * });
 * ```
 */
export function getCommandsOutput(args?: GetCommandsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCommandsResult> {
    return pulumi.output(args).apply((a: any) => getCommands(a, opts))
}

/**
 * A collection of arguments for invoking getCommands.
 */
export interface GetCommandsOutputArgs {
    /**
     * The id of ecs command.
     */
    commandId?: pulumi.Input<string>;
    /**
     * The provider of public command. When this field is not specified, query for custom commands.
     */
    commandProvider?: pulumi.Input<string>;
    /**
     * The name of ecs command. This field support fuzzy query.
     */
    name?: pulumi.Input<string>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The order of ecs command query result.
     */
    order?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The type of ecs command. Valid values: `Shell`.
     */
    type?: pulumi.Input<string>;
}
