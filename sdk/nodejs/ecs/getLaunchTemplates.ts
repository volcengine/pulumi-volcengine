// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ecs launch templates
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooLaunchTemplate = new volcengine.ecs.LaunchTemplate("fooLaunchTemplate", {
 *     description: "acc-test-desc",
 *     eipBandwidth: 1,
 *     eipBillingType: "PostPaidByBandwidth",
 *     eipIsp: "ChinaMobile",
 *     hostName: "tf-host-name",
 *     hpcClusterId: "hpcCluster-l8u24ovdmoab6opf",
 *     imageId: "image-ycjwwciuzy5pkh54xx8f",
 *     instanceChargeType: "PostPaid",
 *     instanceName: "tf-acc-name",
 *     instanceTypeId: "ecs.g1.large",
 *     keyPairName: "tf-key-pair",
 *     launchTemplateName: "tf-acc-template",
 * });
 * const fooLaunchTemplates = volcengine.ecs.getLaunchTemplatesOutput({
 *     ids: [fooLaunchTemplate.id],
 * });
 * ```
 */
export function getLaunchTemplates(args?: GetLaunchTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetLaunchTemplatesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:ecs/getLaunchTemplates:getLaunchTemplates", {
        "ids": args.ids,
        "launchTemplateNames": args.launchTemplateNames,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getLaunchTemplates.
 */
export interface GetLaunchTemplatesArgs {
    /**
     * A list of launch template ids.
     */
    ids?: string[];
    /**
     * A list of launch template names.
     */
    launchTemplateNames?: string[];
    /**
     * A Name Regex of scaling policy.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getLaunchTemplates.
 */
export interface GetLaunchTemplatesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly launchTemplateNames?: string[];
    /**
     * The collection of launch templates.
     */
    readonly launchTemplates: outputs.ecs.GetLaunchTemplatesLaunchTemplate[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The total count of scaling policy query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of ecs launch templates
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooLaunchTemplate = new volcengine.ecs.LaunchTemplate("fooLaunchTemplate", {
 *     description: "acc-test-desc",
 *     eipBandwidth: 1,
 *     eipBillingType: "PostPaidByBandwidth",
 *     eipIsp: "ChinaMobile",
 *     hostName: "tf-host-name",
 *     hpcClusterId: "hpcCluster-l8u24ovdmoab6opf",
 *     imageId: "image-ycjwwciuzy5pkh54xx8f",
 *     instanceChargeType: "PostPaid",
 *     instanceName: "tf-acc-name",
 *     instanceTypeId: "ecs.g1.large",
 *     keyPairName: "tf-key-pair",
 *     launchTemplateName: "tf-acc-template",
 * });
 * const fooLaunchTemplates = volcengine.ecs.getLaunchTemplatesOutput({
 *     ids: [fooLaunchTemplate.id],
 * });
 * ```
 */
export function getLaunchTemplatesOutput(args?: GetLaunchTemplatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLaunchTemplatesResult> {
    return pulumi.output(args).apply((a: any) => getLaunchTemplates(a, opts))
}

/**
 * A collection of arguments for invoking getLaunchTemplates.
 */
export interface GetLaunchTemplatesOutputArgs {
    /**
     * A list of launch template ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of launch template names.
     */
    launchTemplateNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of scaling policy.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
