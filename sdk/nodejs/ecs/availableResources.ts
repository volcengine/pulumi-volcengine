// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of ecs available resources
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.ecs.AvailableResources({
 *     destinationResource: "InstanceType",
 * });
 * ```
 */
export function availableResources(args: AvailableResourcesArgs, opts?: pulumi.InvokeOptions): Promise<AvailableResourcesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:ecs/availableResources:AvailableResources", {
        "destinationResource": args.destinationResource,
        "instanceChargeType": args.instanceChargeType,
        "instanceTypeId": args.instanceTypeId,
        "outputFile": args.outputFile,
        "spotStrategy": args.spotStrategy,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking AvailableResources.
 */
export interface AvailableResourcesArgs {
    /**
     * The type of resource to query. Valid values: `InstanceType`, `DedicatedHost`.
     */
    destinationResource: string;
    /**
     * The charge type of instance. Valid values: `PostPaid`, `PrePaid`, `ReservedInstance`. Default is `PostPaid`.
     */
    instanceChargeType?: string;
    /**
     * The id of instance type.
     */
    instanceTypeId?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The spot strategy of PostPaid instance. Valid values: `NoSpot`, `SpotAsPriceGo`. Default is `NoSpot`.
     */
    spotStrategy?: string;
    /**
     * The id of available zone.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by AvailableResources.
 */
export interface AvailableResourcesResult {
    /**
     * The collection of query.
     */
    readonly availableZones: outputs.ecs.AvailableResourcesAvailableZone[];
    readonly destinationResource: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceChargeType?: string;
    readonly instanceTypeId?: string;
    readonly outputFile?: string;
    readonly spotStrategy?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The id of the available zone.
     */
    readonly zoneId?: string;
}
/**
 * Use this data source to query detailed information of ecs available resources
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.ecs.AvailableResources({
 *     destinationResource: "InstanceType",
 * });
 * ```
 */
export function availableResourcesOutput(args: AvailableResourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<AvailableResourcesResult> {
    return pulumi.output(args).apply((a: any) => availableResources(a, opts))
}

/**
 * A collection of arguments for invoking AvailableResources.
 */
export interface AvailableResourcesOutputArgs {
    /**
     * The type of resource to query. Valid values: `InstanceType`, `DedicatedHost`.
     */
    destinationResource: pulumi.Input<string>;
    /**
     * The charge type of instance. Valid values: `PostPaid`, `PrePaid`, `ReservedInstance`. Default is `PostPaid`.
     */
    instanceChargeType?: pulumi.Input<string>;
    /**
     * The id of instance type.
     */
    instanceTypeId?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The spot strategy of PostPaid instance. Valid values: `NoSpot`, `SpotAsPriceGo`. Default is `NoSpot`.
     */
    spotStrategy?: pulumi.Input<string>;
    /**
     * The id of available zone.
     */
    zoneId?: pulumi.Input<string>;
}
