// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage apig gateway service
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooZones = volcengine.ecs.getZones({});
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const foo1 = new volcengine.vpc.Subnet("foo1", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[0]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const foo2 = new volcengine.vpc.Subnet("foo2", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.1.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[1]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const fooApigGateway = new volcengine.apig.ApigGateway("fooApigGateway", {
 *     type: "standard",
 *     comments: "acc-test",
 *     projectName: "default",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 *     networkSpec: {
 *         vpcId: fooVpc.id,
 *         subnetIds: [
 *             foo1.id,
 *             foo2.id,
 *         ],
 *     },
 *     resourceSpec: {
 *         replicas: 2,
 *         instanceSpecCode: "1c2g",
 *         clbSpecCode: "small_1",
 *         publicNetworkBillingType: "bandwidth",
 *         publicNetworkBandwidth: 1,
 *         networkType: {
 *             enablePublicNetwork: true,
 *             enablePrivateNetwork: true,
 *         },
 *     },
 *     logSpec: {
 *         enable: true,
 *         projectId: "d3cb87c0-faeb-4074-b1ee-9bd747865a76",
 *         topicId: "d339482e-d86d-4bd8-a9bb-f270417f00a1",
 *     },
 *     monitorSpec: {
 *         enable: true,
 *         workspaceId: "4ed1caf3-279d-4c5f-8301-87ea38e92ffc",
 *     },
 * });
 * const fooApigGatewayService = new volcengine.apig.ApigGatewayService("fooApigGatewayService", {
 *     gatewayId: fooApigGateway.id,
 *     serviceName: "acc-test-apig-service",
 *     comments: "acc-test",
 *     protocols: [
 *         "HTTP",
 *         "HTTPS",
 *     ],
 *     authSpec: {
 *         enable: false,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ApigGatewayService can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:apig/apigGatewayService:ApigGatewayService default resource_id
 * ```
 */
export class ApigGatewayService extends pulumi.CustomResource {
    /**
     * Get an existing ApigGatewayService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigGatewayServiceState, opts?: pulumi.CustomResourceOptions): ApigGatewayService {
        return new ApigGatewayService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:apig/apigGatewayService:ApigGatewayService';

    /**
     * Returns true if the given object is an instance of ApigGatewayService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigGatewayService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigGatewayService.__pulumiType;
    }

    /**
     * The auth spec of the api gateway service.
     */
    public readonly authSpec!: pulumi.Output<outputs.apig.ApigGatewayServiceAuthSpec>;
    /**
     * The comments of api gateway service.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * The create time of the api gateway service.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The gateway id of api gateway service.
     */
    public readonly gatewayId!: pulumi.Output<string>;
    /**
     * The error message of the api gateway service.
     */
    public /*out*/ readonly message!: pulumi.Output<string>;
    /**
     * The protocol of api gateway service.
     */
    public readonly protocols!: pulumi.Output<string[]>;
    /**
     * The name of api gateway service.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * The status of the api gateway service.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ApigGatewayService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigGatewayServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigGatewayServiceArgs | ApigGatewayServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigGatewayServiceState | undefined;
            resourceInputs["authSpec"] = state ? state.authSpec : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ApigGatewayServiceArgs | undefined;
            if ((!args || args.authSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authSpec'");
            }
            if ((!args || args.gatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if ((!args || args.protocols === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocols'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["authSpec"] = args ? args.authSpec : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["gatewayId"] = args ? args.gatewayId : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["message"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigGatewayService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApigGatewayService resources.
 */
export interface ApigGatewayServiceState {
    /**
     * The auth spec of the api gateway service.
     */
    authSpec?: pulumi.Input<inputs.apig.ApigGatewayServiceAuthSpec>;
    /**
     * The comments of api gateway service.
     */
    comments?: pulumi.Input<string>;
    /**
     * The create time of the api gateway service.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The gateway id of api gateway service.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * The error message of the api gateway service.
     */
    message?: pulumi.Input<string>;
    /**
     * The protocol of api gateway service.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of api gateway service.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The status of the api gateway service.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApigGatewayService resource.
 */
export interface ApigGatewayServiceArgs {
    /**
     * The auth spec of the api gateway service.
     */
    authSpec: pulumi.Input<inputs.apig.ApigGatewayServiceAuthSpec>;
    /**
     * The comments of api gateway service.
     */
    comments?: pulumi.Input<string>;
    /**
     * The gateway id of api gateway service.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * The protocol of api gateway service.
     */
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of api gateway service.
     */
    serviceName: pulumi.Input<string>;
}
