// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage apig custom domain
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooZones = volcengine.ecs.getZones({});
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const foo1 = new volcengine.vpc.Subnet("foo1", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[0]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const foo2 = new volcengine.vpc.Subnet("foo2", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.1.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[1]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const fooApigGateway = new volcengine.apig.ApigGateway("fooApigGateway", {
 *     type: "standard",
 *     comments: "acc-test",
 *     projectName: "default",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 *     networkSpec: {
 *         vpcId: fooVpc.id,
 *         subnetIds: [
 *             foo1.id,
 *             foo2.id,
 *         ],
 *     },
 *     resourceSpec: {
 *         replicas: 2,
 *         instanceSpecCode: "1c2g",
 *         clbSpecCode: "small_1",
 *         publicNetworkBillingType: "bandwidth",
 *         publicNetworkBandwidth: 1,
 *         networkType: {
 *             enablePublicNetwork: true,
 *             enablePrivateNetwork: true,
 *         },
 *     },
 *     logSpec: {
 *         enable: true,
 *         projectId: "d3cb87c0-faeb-4074-b1ee-9bd747865a76",
 *         topicId: "d339482e-d86d-4bd8-a9bb-f270417f00a1",
 *     },
 *     monitorSpec: {
 *         enable: true,
 *         workspaceId: "4ed1caf3-279d-4c5f-8301-87ea38e92ffc",
 *     },
 * });
 * const fooApigGatewayService = new volcengine.apig.ApigGatewayService("fooApigGatewayService", {
 *     gatewayId: fooApigGateway.id,
 *     serviceName: "acc-test-apig-service",
 *     comments: "acc-test",
 *     protocols: [
 *         "HTTP",
 *         "HTTPS",
 *     ],
 *     authSpec: {
 *         enable: false,
 *     },
 * });
 * const fooApigCustomDomain = new volcengine.apig.ApigCustomDomain("fooApigCustomDomain", {
 *     serviceId: fooApigGatewayService.id,
 *     domain: "test.com",
 *     protocols: ["HTTP"],
 *     comments: "acc-test-new",
 *     sslRedirect: false,
 *     resourceType: "Console",
 * });
 * ```
 *
 * ## Import
 *
 * ApigCustomDomain can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:apig/apigCustomDomain:ApigCustomDomain default resource_id
 * ```
 */
export class ApigCustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing ApigCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigCustomDomainState, opts?: pulumi.CustomResourceOptions): ApigCustomDomain {
        return new ApigCustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:apig/apigCustomDomain:ApigCustomDomain';

    /**
     * Returns true if the given object is an instance of ApigCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigCustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigCustomDomain.__pulumiType;
    }

    /**
     * The id of the certificate.
     */
    public readonly certificateId!: pulumi.Output<string | undefined>;
    /**
     * The comments of the custom domain.
     */
    public readonly comments!: pulumi.Output<string | undefined>;
    /**
     * The create time of the custom domain.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The custom domain of the api gateway service.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The protocol of the custom domain.
     */
    public readonly protocols!: pulumi.Output<string[] | undefined>;
    /**
     * The resource type of domain. Valid values: `Console`, `Ingress`.
     */
    public readonly resourceType!: pulumi.Output<string | undefined>;
    /**
     * The id of the api gateway service.
     */
    public readonly serviceId!: pulumi.Output<string>;
    /**
     * Whether to redirect https.
     */
    public readonly sslRedirect!: pulumi.Output<boolean | undefined>;
    /**
     * The status of the custom domain.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The type of the domain.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The update time of the custom domain.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a ApigCustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigCustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigCustomDomainArgs | ApigCustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigCustomDomainState | undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["sslRedirect"] = state ? state.sslRedirect : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as ApigCustomDomainArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.serviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceId'");
            }
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
            resourceInputs["sslRedirect"] = args ? args.sslRedirect : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigCustomDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApigCustomDomain resources.
 */
export interface ApigCustomDomainState {
    /**
     * The id of the certificate.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * The comments of the custom domain.
     */
    comments?: pulumi.Input<string>;
    /**
     * The create time of the custom domain.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The custom domain of the api gateway service.
     */
    domain?: pulumi.Input<string>;
    /**
     * The protocol of the custom domain.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource type of domain. Valid values: `Console`, `Ingress`.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The id of the api gateway service.
     */
    serviceId?: pulumi.Input<string>;
    /**
     * Whether to redirect https.
     */
    sslRedirect?: pulumi.Input<boolean>;
    /**
     * The status of the custom domain.
     */
    status?: pulumi.Input<string>;
    /**
     * The type of the domain.
     */
    type?: pulumi.Input<string>;
    /**
     * The update time of the custom domain.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApigCustomDomain resource.
 */
export interface ApigCustomDomainArgs {
    /**
     * The id of the certificate.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * The comments of the custom domain.
     */
    comments?: pulumi.Input<string>;
    /**
     * The custom domain of the api gateway service.
     */
    domain: pulumi.Input<string>;
    /**
     * The protocol of the custom domain.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource type of domain. Valid values: `Console`, `Ingress`.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The id of the api gateway service.
     */
    serviceId: pulumi.Input<string>;
    /**
     * Whether to redirect https.
     */
    sslRedirect?: pulumi.Input<boolean>;
}
