// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AddressArgs, AddressState } from "./address";
export type Address = import("./address").Address;
export const Address: typeof import("./address").Address = null as any;
utilities.lazyLoad(exports, ["Address"], () => require("./address"));

export { AddressesArgs, AddressesResult, AddressesOutputArgs } from "./addresses";
export const addresses: typeof import("./addresses").addresses = null as any;
export const addressesOutput: typeof import("./addresses").addressesOutput = null as any;
utilities.lazyLoad(exports, ["addresses","addressesOutput"], () => require("./addresses"));

export { AssociateArgs, AssociateState } from "./associate";
export type Associate = import("./associate").Associate;
export const Associate: typeof import("./associate").Associate = null as any;
utilities.lazyLoad(exports, ["Associate"], () => require("./associate"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:eip/address:Address":
                return new Address(name, <any>undefined, { urn })
            case "volcengine:eip/associate:Associate":
                return new Associate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "eip/address", _module)
pulumi.runtime.registerResourceModule("volcengine", "eip/associate", _module)
