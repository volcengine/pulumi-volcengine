// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vefaas release
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.vefaas.Release("foo", {
 *     functionId: "9p5emxxxx",
 *     revisionNumber: 0,
 *     targetTrafficWeight: 30,
 * });
 * ```
 *
 * ## Import
 *
 * VefaasRelease can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:vefaas/release:Release default FunctionId:ReleaseRecordId
 * ```
 */
export class Release extends pulumi.CustomResource {
    /**
     * Get an existing Release resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReleaseState, opts?: pulumi.CustomResourceOptions): Release {
        return new Release(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vefaas/release:Release';

    /**
     * Returns true if the given object is an instance of Release.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Release {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Release.__pulumiType;
    }

    /**
     * The current percentage of current published traffic.
     */
    public /*out*/ readonly currentTrafficWeight!: pulumi.Output<number>;
    /**
     * The description of released this time.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Error code when the release fails.
     */
    public /*out*/ readonly errorCode!: pulumi.Output<string>;
    /**
     * Download link for the failed instance log.
     */
    public /*out*/ readonly failedInstanceLogs!: pulumi.Output<string>;
    /**
     * The ID of Function.
     */
    public readonly functionId!: pulumi.Output<string>;
    /**
     * Upper limit of the number of function instances.
     */
    public readonly maxInstance!: pulumi.Output<number | undefined>;
    /**
     * The version number of the newly released version.
     */
    public /*out*/ readonly newRevisionNumber!: pulumi.Output<number>;
    /**
     * The version number of the old version.
     */
    public /*out*/ readonly oldRevisionNumber!: pulumi.Output<number>;
    /**
     * The ID of Release record.
     */
    public /*out*/ readonly releaseRecordId!: pulumi.Output<string>;
    /**
     * When the RevisionNumber to be released is 0, the Latest code (Latest) will be released and a new version will be created. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly revisionNumber!: pulumi.Output<number>;
    /**
     * Percentage of grayscale step size.
     */
    public readonly rollingStep!: pulumi.Output<string | undefined>;
    /**
     * The current version number that is stably running online.
     */
    public /*out*/ readonly stableRevisionNumber!: pulumi.Output<number>;
    /**
     * The current release start time.
     */
    public /*out*/ readonly startTime!: pulumi.Output<string>;
    /**
     * The status of function release.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Detailed information of the function release status.
     */
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;
    /**
     * Target percentage of published traffic.
     */
    public readonly targetTrafficWeight!: pulumi.Output<number>;

    /**
     * Create a Release resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReleaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReleaseArgs | ReleaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReleaseState | undefined;
            resourceInputs["currentTrafficWeight"] = state ? state.currentTrafficWeight : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["errorCode"] = state ? state.errorCode : undefined;
            resourceInputs["failedInstanceLogs"] = state ? state.failedInstanceLogs : undefined;
            resourceInputs["functionId"] = state ? state.functionId : undefined;
            resourceInputs["maxInstance"] = state ? state.maxInstance : undefined;
            resourceInputs["newRevisionNumber"] = state ? state.newRevisionNumber : undefined;
            resourceInputs["oldRevisionNumber"] = state ? state.oldRevisionNumber : undefined;
            resourceInputs["releaseRecordId"] = state ? state.releaseRecordId : undefined;
            resourceInputs["revisionNumber"] = state ? state.revisionNumber : undefined;
            resourceInputs["rollingStep"] = state ? state.rollingStep : undefined;
            resourceInputs["stableRevisionNumber"] = state ? state.stableRevisionNumber : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusMessage"] = state ? state.statusMessage : undefined;
            resourceInputs["targetTrafficWeight"] = state ? state.targetTrafficWeight : undefined;
        } else {
            const args = argsOrState as ReleaseArgs | undefined;
            if ((!args || args.functionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'functionId'");
            }
            if ((!args || args.revisionNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'revisionNumber'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["functionId"] = args ? args.functionId : undefined;
            resourceInputs["maxInstance"] = args ? args.maxInstance : undefined;
            resourceInputs["revisionNumber"] = args ? args.revisionNumber : undefined;
            resourceInputs["rollingStep"] = args ? args.rollingStep : undefined;
            resourceInputs["targetTrafficWeight"] = args ? args.targetTrafficWeight : undefined;
            resourceInputs["currentTrafficWeight"] = undefined /*out*/;
            resourceInputs["errorCode"] = undefined /*out*/;
            resourceInputs["failedInstanceLogs"] = undefined /*out*/;
            resourceInputs["newRevisionNumber"] = undefined /*out*/;
            resourceInputs["oldRevisionNumber"] = undefined /*out*/;
            resourceInputs["releaseRecordId"] = undefined /*out*/;
            resourceInputs["stableRevisionNumber"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Release.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Release resources.
 */
export interface ReleaseState {
    /**
     * The current percentage of current published traffic.
     */
    currentTrafficWeight?: pulumi.Input<number>;
    /**
     * The description of released this time.
     */
    description?: pulumi.Input<string>;
    /**
     * Error code when the release fails.
     */
    errorCode?: pulumi.Input<string>;
    /**
     * Download link for the failed instance log.
     */
    failedInstanceLogs?: pulumi.Input<string>;
    /**
     * The ID of Function.
     */
    functionId?: pulumi.Input<string>;
    /**
     * Upper limit of the number of function instances.
     */
    maxInstance?: pulumi.Input<number>;
    /**
     * The version number of the newly released version.
     */
    newRevisionNumber?: pulumi.Input<number>;
    /**
     * The version number of the old version.
     */
    oldRevisionNumber?: pulumi.Input<number>;
    /**
     * The ID of Release record.
     */
    releaseRecordId?: pulumi.Input<string>;
    /**
     * When the RevisionNumber to be released is 0, the Latest code (Latest) will be released and a new version will be created. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    revisionNumber?: pulumi.Input<number>;
    /**
     * Percentage of grayscale step size.
     */
    rollingStep?: pulumi.Input<string>;
    /**
     * The current version number that is stably running online.
     */
    stableRevisionNumber?: pulumi.Input<number>;
    /**
     * The current release start time.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The status of function release.
     */
    status?: pulumi.Input<string>;
    /**
     * Detailed information of the function release status.
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * Target percentage of published traffic.
     */
    targetTrafficWeight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Release resource.
 */
export interface ReleaseArgs {
    /**
     * The description of released this time.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of Function.
     */
    functionId: pulumi.Input<string>;
    /**
     * Upper limit of the number of function instances.
     */
    maxInstance?: pulumi.Input<number>;
    /**
     * When the RevisionNumber to be released is 0, the Latest code (Latest) will be released and a new version will be created. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    revisionNumber: pulumi.Input<number>;
    /**
     * Percentage of grayscale step size.
     */
    rollingStep?: pulumi.Input<string>;
    /**
     * Target percentage of published traffic.
     */
    targetTrafficWeight?: pulumi.Input<number>;
}
