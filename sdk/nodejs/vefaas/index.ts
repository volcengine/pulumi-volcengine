// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FunctionArgs, FunctionState } from "./function";
export type Function = import("./function").Function;
export const Function: typeof import("./function").Function = null as any;
utilities.lazyLoad(exports, ["Function"], () => require("./function"));

export { FunctionsArgs, FunctionsResult, FunctionsOutputArgs } from "./functions";
export const functions: typeof import("./functions").functions = null as any;
export const functionsOutput: typeof import("./functions").functionsOutput = null as any;
utilities.lazyLoad(exports, ["functions","functionsOutput"], () => require("./functions"));

export { GetFunctionsArgs, GetFunctionsResult, GetFunctionsOutputArgs } from "./getFunctions";
export const getFunctions: typeof import("./getFunctions").getFunctions = null as any;
export const getFunctionsOutput: typeof import("./getFunctions").getFunctionsOutput = null as any;
utilities.lazyLoad(exports, ["getFunctions","getFunctionsOutput"], () => require("./getFunctions"));

export { GetKafkaTriggersArgs, GetKafkaTriggersResult, GetKafkaTriggersOutputArgs } from "./getKafkaTriggers";
export const getKafkaTriggers: typeof import("./getKafkaTriggers").getKafkaTriggers = null as any;
export const getKafkaTriggersOutput: typeof import("./getKafkaTriggers").getKafkaTriggersOutput = null as any;
utilities.lazyLoad(exports, ["getKafkaTriggers","getKafkaTriggersOutput"], () => require("./getKafkaTriggers"));

export { GetReleasesArgs, GetReleasesResult, GetReleasesOutputArgs } from "./getReleases";
export const getReleases: typeof import("./getReleases").getReleases = null as any;
export const getReleasesOutput: typeof import("./getReleases").getReleasesOutput = null as any;
utilities.lazyLoad(exports, ["getReleases","getReleasesOutput"], () => require("./getReleases"));

export { GetTimersArgs, GetTimersResult, GetTimersOutputArgs } from "./getTimers";
export const getTimers: typeof import("./getTimers").getTimers = null as any;
export const getTimersOutput: typeof import("./getTimers").getTimersOutput = null as any;
utilities.lazyLoad(exports, ["getTimers","getTimersOutput"], () => require("./getTimers"));

export { KafkaTriggerArgs, KafkaTriggerState } from "./kafkaTrigger";
export type KafkaTrigger = import("./kafkaTrigger").KafkaTrigger;
export const KafkaTrigger: typeof import("./kafkaTrigger").KafkaTrigger = null as any;
utilities.lazyLoad(exports, ["KafkaTrigger"], () => require("./kafkaTrigger"));

export { KafkaTriggersArgs, KafkaTriggersResult, KafkaTriggersOutputArgs } from "./kafkaTriggers";
export const kafkaTriggers: typeof import("./kafkaTriggers").kafkaTriggers = null as any;
export const kafkaTriggersOutput: typeof import("./kafkaTriggers").kafkaTriggersOutput = null as any;
utilities.lazyLoad(exports, ["kafkaTriggers","kafkaTriggersOutput"], () => require("./kafkaTriggers"));

export { ReleaseArgs, ReleaseState } from "./release";
export type Release = import("./release").Release;
export const Release: typeof import("./release").Release = null as any;
utilities.lazyLoad(exports, ["Release"], () => require("./release"));

export { ReleasesArgs, ReleasesResult, ReleasesOutputArgs } from "./releases";
export const releases: typeof import("./releases").releases = null as any;
export const releasesOutput: typeof import("./releases").releasesOutput = null as any;
utilities.lazyLoad(exports, ["releases","releasesOutput"], () => require("./releases"));

export { TimerArgs, TimerState } from "./timer";
export type Timer = import("./timer").Timer;
export const Timer: typeof import("./timer").Timer = null as any;
utilities.lazyLoad(exports, ["Timer"], () => require("./timer"));

export { TimersArgs, TimersResult, TimersOutputArgs } from "./timers";
export const timers: typeof import("./timers").timers = null as any;
export const timersOutput: typeof import("./timers").timersOutput = null as any;
utilities.lazyLoad(exports, ["timers","timersOutput"], () => require("./timers"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:vefaas/function:Function":
                return new Function(name, <any>undefined, { urn })
            case "volcengine:vefaas/kafkaTrigger:KafkaTrigger":
                return new KafkaTrigger(name, <any>undefined, { urn })
            case "volcengine:vefaas/release:Release":
                return new Release(name, <any>undefined, { urn })
            case "volcengine:vefaas/timer:Timer":
                return new Timer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "vefaas/function", _module)
pulumi.runtime.registerResourceModule("volcengine", "vefaas/kafkaTrigger", _module)
pulumi.runtime.registerResourceModule("volcengine", "vefaas/release", _module)
pulumi.runtime.registerResourceModule("volcengine", "vefaas/timer", _module)
