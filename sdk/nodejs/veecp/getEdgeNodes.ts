// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of veecp edge nodes
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooEdgeNode = new volcengine.veecp.EdgeNode("fooEdgeNode", {
 *     clusterId: "ccvmf49t1ndqeechmj8p0",
 *     nodePoolId: "pcvpkdn7ic26jjcjsa20g",
 *     autoCompleteConfig: {
 *         enable: true,
 *         directAdd: true,
 *         directAddInstances: [{
 *             cloudServerIdentity: "cloudserver-wvvflw9qdns2qrk",
 *             instanceIdentity: "veen91912104432151420041",
 *         }],
 *     },
 * });
 * const fooEdgeNodes = volcengine.veecp.getEdgeNodesOutput({
 *     ids: [fooEdgeNode.id],
 * });
 * ```
 */
export function getEdgeNodes(args?: GetEdgeNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetEdgeNodesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:veecp/getEdgeNodes:getEdgeNodes", {
        "clusterIds": args.clusterIds,
        "createClientToken": args.createClientToken,
        "ids": args.ids,
        "ips": args.ips,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "needBootstrapScript": args.needBootstrapScript,
        "nodePoolIds": args.nodePoolIds,
        "outputFile": args.outputFile,
        "statuses": args.statuses,
        "zoneIds": args.zoneIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getEdgeNodes.
 */
export interface GetEdgeNodesArgs {
    /**
     * A list of Cluster IDs.
     */
    clusterIds?: string[];
    /**
     * The Create Client Token.
     */
    createClientToken?: string;
    /**
     * A list of Node IDs.
     */
    ids?: string[];
    /**
     * The node ips.
     */
    ips?: string[];
    /**
     * The Name of Node.
     */
    name?: string;
    /**
     * A Name Regex of Node.
     */
    nameRegex?: string;
    /**
     * Whether to query the node management script is needed.
     */
    needBootstrapScript?: string;
    /**
     * The Node Pool IDs.
     */
    nodePoolIds?: string[];
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The Status of filter.
     */
    statuses?: inputs.veecp.GetEdgeNodesStatus[];
    /**
     * The Zone IDs.
     */
    zoneIds?: string[];
}

/**
 * A collection of values returned by getEdgeNodes.
 */
export interface GetEdgeNodesResult {
    readonly clusterIds?: string[];
    /**
     * The create client token of node.
     */
    readonly createClientToken?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly ips?: string[];
    /**
     * The name of Node.
     */
    readonly name?: string;
    readonly nameRegex?: string;
    readonly needBootstrapScript?: string;
    readonly nodePoolIds?: string[];
    /**
     * The collection of query.
     */
    readonly nodes: outputs.veecp.GetEdgeNodesNode[];
    readonly outputFile?: string;
    readonly statuses?: outputs.veecp.GetEdgeNodesStatus[];
    /**
     * The total count of Node query.
     */
    readonly totalCount: number;
    readonly zoneIds?: string[];
}
/**
 * Use this data source to query detailed information of veecp edge nodes
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooEdgeNode = new volcengine.veecp.EdgeNode("fooEdgeNode", {
 *     clusterId: "ccvmf49t1ndqeechmj8p0",
 *     nodePoolId: "pcvpkdn7ic26jjcjsa20g",
 *     autoCompleteConfig: {
 *         enable: true,
 *         directAdd: true,
 *         directAddInstances: [{
 *             cloudServerIdentity: "cloudserver-wvvflw9qdns2qrk",
 *             instanceIdentity: "veen91912104432151420041",
 *         }],
 *     },
 * });
 * const fooEdgeNodes = volcengine.veecp.getEdgeNodesOutput({
 *     ids: [fooEdgeNode.id],
 * });
 * ```
 */
export function getEdgeNodesOutput(args?: GetEdgeNodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEdgeNodesResult> {
    return pulumi.output(args).apply((a: any) => getEdgeNodes(a, opts))
}

/**
 * A collection of arguments for invoking getEdgeNodes.
 */
export interface GetEdgeNodesOutputArgs {
    /**
     * A list of Cluster IDs.
     */
    clusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Create Client Token.
     */
    createClientToken?: pulumi.Input<string>;
    /**
     * A list of Node IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The node ips.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name of Node.
     */
    name?: pulumi.Input<string>;
    /**
     * A Name Regex of Node.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * Whether to query the node management script is needed.
     */
    needBootstrapScript?: pulumi.Input<string>;
    /**
     * The Node Pool IDs.
     */
    nodePoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The Status of filter.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.veecp.GetEdgeNodesStatusArgs>[]>;
    /**
     * The Zone IDs.
     */
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}
