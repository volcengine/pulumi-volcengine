// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AddonArgs, AddonState } from "./addon";
export type Addon = import("./addon").Addon;
export const Addon: typeof import("./addon").Addon = null as any;
utilities.lazyLoad(exports, ["Addon"], () => require("./addon"));

export { AddonsArgs, AddonsResult, AddonsOutputArgs } from "./addons";
export const addons: typeof import("./addons").addons = null as any;
export const addonsOutput: typeof import("./addons").addonsOutput = null as any;
utilities.lazyLoad(exports, ["addons","addonsOutput"], () => require("./addons"));

export { BatchEdgeMachineArgs, BatchEdgeMachineState } from "./batchEdgeMachine";
export type BatchEdgeMachine = import("./batchEdgeMachine").BatchEdgeMachine;
export const BatchEdgeMachine: typeof import("./batchEdgeMachine").BatchEdgeMachine = null as any;
utilities.lazyLoad(exports, ["BatchEdgeMachine"], () => require("./batchEdgeMachine"));

export { BatchEdgeMachinesArgs, BatchEdgeMachinesResult, BatchEdgeMachinesOutputArgs } from "./batchEdgeMachines";
export const batchEdgeMachines: typeof import("./batchEdgeMachines").batchEdgeMachines = null as any;
export const batchEdgeMachinesOutput: typeof import("./batchEdgeMachines").batchEdgeMachinesOutput = null as any;
utilities.lazyLoad(exports, ["batchEdgeMachines","batchEdgeMachinesOutput"], () => require("./batchEdgeMachines"));

export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ClustersArgs, ClustersResult, ClustersOutputArgs } from "./clusters";
export const clusters: typeof import("./clusters").clusters = null as any;
export const clustersOutput: typeof import("./clusters").clustersOutput = null as any;
utilities.lazyLoad(exports, ["clusters","clustersOutput"], () => require("./clusters"));

export { EdgeNodeArgs, EdgeNodeState } from "./edgeNode";
export type EdgeNode = import("./edgeNode").EdgeNode;
export const EdgeNode: typeof import("./edgeNode").EdgeNode = null as any;
utilities.lazyLoad(exports, ["EdgeNode"], () => require("./edgeNode"));

export { EdgeNodePoolArgs, EdgeNodePoolState } from "./edgeNodePool";
export type EdgeNodePool = import("./edgeNodePool").EdgeNodePool;
export const EdgeNodePool: typeof import("./edgeNodePool").EdgeNodePool = null as any;
utilities.lazyLoad(exports, ["EdgeNodePool"], () => require("./edgeNodePool"));

export { EdgeNodePoolsArgs, EdgeNodePoolsResult, EdgeNodePoolsOutputArgs } from "./edgeNodePools";
export const edgeNodePools: typeof import("./edgeNodePools").edgeNodePools = null as any;
export const edgeNodePoolsOutput: typeof import("./edgeNodePools").edgeNodePoolsOutput = null as any;
utilities.lazyLoad(exports, ["edgeNodePools","edgeNodePoolsOutput"], () => require("./edgeNodePools"));

export { EdgeNodesArgs, EdgeNodesResult, EdgeNodesOutputArgs } from "./edgeNodes";
export const edgeNodes: typeof import("./edgeNodes").edgeNodes = null as any;
export const edgeNodesOutput: typeof import("./edgeNodes").edgeNodesOutput = null as any;
utilities.lazyLoad(exports, ["edgeNodes","edgeNodesOutput"], () => require("./edgeNodes"));

export { GetAddonsArgs, GetAddonsResult, GetAddonsOutputArgs } from "./getAddons";
export const getAddons: typeof import("./getAddons").getAddons = null as any;
export const getAddonsOutput: typeof import("./getAddons").getAddonsOutput = null as any;
utilities.lazyLoad(exports, ["getAddons","getAddonsOutput"], () => require("./getAddons"));

export { GetBatchEdgeMachinesArgs, GetBatchEdgeMachinesResult, GetBatchEdgeMachinesOutputArgs } from "./getBatchEdgeMachines";
export const getBatchEdgeMachines: typeof import("./getBatchEdgeMachines").getBatchEdgeMachines = null as any;
export const getBatchEdgeMachinesOutput: typeof import("./getBatchEdgeMachines").getBatchEdgeMachinesOutput = null as any;
utilities.lazyLoad(exports, ["getBatchEdgeMachines","getBatchEdgeMachinesOutput"], () => require("./getBatchEdgeMachines"));

export { GetClustersArgs, GetClustersResult, GetClustersOutputArgs } from "./getClusters";
export const getClusters: typeof import("./getClusters").getClusters = null as any;
export const getClustersOutput: typeof import("./getClusters").getClustersOutput = null as any;
utilities.lazyLoad(exports, ["getClusters","getClustersOutput"], () => require("./getClusters"));

export { GetEdgeNodePoolsArgs, GetEdgeNodePoolsResult, GetEdgeNodePoolsOutputArgs } from "./getEdgeNodePools";
export const getEdgeNodePools: typeof import("./getEdgeNodePools").getEdgeNodePools = null as any;
export const getEdgeNodePoolsOutput: typeof import("./getEdgeNodePools").getEdgeNodePoolsOutput = null as any;
utilities.lazyLoad(exports, ["getEdgeNodePools","getEdgeNodePoolsOutput"], () => require("./getEdgeNodePools"));

export { GetEdgeNodesArgs, GetEdgeNodesResult, GetEdgeNodesOutputArgs } from "./getEdgeNodes";
export const getEdgeNodes: typeof import("./getEdgeNodes").getEdgeNodes = null as any;
export const getEdgeNodesOutput: typeof import("./getEdgeNodes").getEdgeNodesOutput = null as any;
utilities.lazyLoad(exports, ["getEdgeNodes","getEdgeNodesOutput"], () => require("./getEdgeNodes"));

export { GetNodePoolsArgs, GetNodePoolsResult, GetNodePoolsOutputArgs } from "./getNodePools";
export const getNodePools: typeof import("./getNodePools").getNodePools = null as any;
export const getNodePoolsOutput: typeof import("./getNodePools").getNodePoolsOutput = null as any;
utilities.lazyLoad(exports, ["getNodePools","getNodePoolsOutput"], () => require("./getNodePools"));

export { GetSupportAddonsArgs, GetSupportAddonsResult, GetSupportAddonsOutputArgs } from "./getSupportAddons";
export const getSupportAddons: typeof import("./getSupportAddons").getSupportAddons = null as any;
export const getSupportAddonsOutput: typeof import("./getSupportAddons").getSupportAddonsOutput = null as any;
utilities.lazyLoad(exports, ["getSupportAddons","getSupportAddonsOutput"], () => require("./getSupportAddons"));

export { GetSupportResourceTypesArgs, GetSupportResourceTypesResult, GetSupportResourceTypesOutputArgs } from "./getSupportResourceTypes";
export const getSupportResourceTypes: typeof import("./getSupportResourceTypes").getSupportResourceTypes = null as any;
export const getSupportResourceTypesOutput: typeof import("./getSupportResourceTypes").getSupportResourceTypesOutput = null as any;
utilities.lazyLoad(exports, ["getSupportResourceTypes","getSupportResourceTypesOutput"], () => require("./getSupportResourceTypes"));

export { NodePoolArgs, NodePoolState } from "./nodePool";
export type NodePool = import("./nodePool").NodePool;
export const NodePool: typeof import("./nodePool").NodePool = null as any;
utilities.lazyLoad(exports, ["NodePool"], () => require("./nodePool"));

export { NodePoolsArgs, NodePoolsResult, NodePoolsOutputArgs } from "./nodePools";
export const nodePools: typeof import("./nodePools").nodePools = null as any;
export const nodePoolsOutput: typeof import("./nodePools").nodePoolsOutput = null as any;
utilities.lazyLoad(exports, ["nodePools","nodePoolsOutput"], () => require("./nodePools"));

export { SupportAddonsArgs, SupportAddonsResult, SupportAddonsOutputArgs } from "./supportAddons";
export const supportAddons: typeof import("./supportAddons").supportAddons = null as any;
export const supportAddonsOutput: typeof import("./supportAddons").supportAddonsOutput = null as any;
utilities.lazyLoad(exports, ["supportAddons","supportAddonsOutput"], () => require("./supportAddons"));

export { SupportResourceTypesArgs, SupportResourceTypesResult, SupportResourceTypesOutputArgs } from "./supportResourceTypes";
export const supportResourceTypes: typeof import("./supportResourceTypes").supportResourceTypes = null as any;
export const supportResourceTypesOutput: typeof import("./supportResourceTypes").supportResourceTypesOutput = null as any;
utilities.lazyLoad(exports, ["supportResourceTypes","supportResourceTypesOutput"], () => require("./supportResourceTypes"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:veecp/addon:Addon":
                return new Addon(name, <any>undefined, { urn })
            case "volcengine:veecp/batchEdgeMachine:BatchEdgeMachine":
                return new BatchEdgeMachine(name, <any>undefined, { urn })
            case "volcengine:veecp/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "volcengine:veecp/edgeNode:EdgeNode":
                return new EdgeNode(name, <any>undefined, { urn })
            case "volcengine:veecp/edgeNodePool:EdgeNodePool":
                return new EdgeNodePool(name, <any>undefined, { urn })
            case "volcengine:veecp/nodePool:NodePool":
                return new NodePool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "veecp/addon", _module)
pulumi.runtime.registerResourceModule("volcengine", "veecp/batchEdgeMachine", _module)
pulumi.runtime.registerResourceModule("volcengine", "veecp/cluster", _module)
pulumi.runtime.registerResourceModule("volcengine", "veecp/edgeNode", _module)
pulumi.runtime.registerResourceModule("volcengine", "veecp/edgeNodePool", _module)
pulumi.runtime.registerResourceModule("volcengine", "veecp/nodePool", _module)
