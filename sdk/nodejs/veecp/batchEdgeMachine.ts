// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage veecp batch edge machine
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.veecp.BatchEdgeMachine("foo", {
 *     clusterId: "ccvmb0c66t101fnob3dhg",
 *     nodePoolId: "pcvn3alfic26jjcjsa1r0",
 *     ttlHours: 1,
 * });
 * ```
 *
 * ## Import
 *
 * VeecpBatchEdgeMachine can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:veecp/batchEdgeMachine:BatchEdgeMachine default resource_id
 * ```
 */
export class BatchEdgeMachine extends pulumi.CustomResource {
    /**
     * Get an existing BatchEdgeMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BatchEdgeMachineState, opts?: pulumi.CustomResourceOptions): BatchEdgeMachine {
        return new BatchEdgeMachine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:veecp/batchEdgeMachine:BatchEdgeMachine';

    /**
     * Returns true if the given object is an instance of BatchEdgeMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BatchEdgeMachine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BatchEdgeMachine.__pulumiType;
    }

    /**
     * The client token.
     */
    public readonly clientToken!: pulumi.Output<string | undefined>;
    /**
     * The cluster id.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Expiration date of the managed script, UTC time point, in seconds. If the expiration time is set, TTLHours will be ignored.
     */
    public readonly expirationDate!: pulumi.Output<number>;
    /**
     * The name of the node.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The node pool id.
     */
    public readonly nodePoolId!: pulumi.Output<string>;
    /**
     * Effective hours of the managed script are counted from the creation time.
     */
    public readonly ttlHours!: pulumi.Output<number>;

    /**
     * Create a BatchEdgeMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BatchEdgeMachineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BatchEdgeMachineArgs | BatchEdgeMachineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BatchEdgeMachineState | undefined;
            resourceInputs["clientToken"] = state ? state.clientToken : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodePoolId"] = state ? state.nodePoolId : undefined;
            resourceInputs["ttlHours"] = state ? state.ttlHours : undefined;
        } else {
            const args = argsOrState as BatchEdgeMachineArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.nodePoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodePoolId'");
            }
            if ((!args || args.ttlHours === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ttlHours'");
            }
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["expirationDate"] = args ? args.expirationDate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodePoolId"] = args ? args.nodePoolId : undefined;
            resourceInputs["ttlHours"] = args ? args.ttlHours : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BatchEdgeMachine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BatchEdgeMachine resources.
 */
export interface BatchEdgeMachineState {
    /**
     * The client token.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The cluster id.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Expiration date of the managed script, UTC time point, in seconds. If the expiration time is set, TTLHours will be ignored.
     */
    expirationDate?: pulumi.Input<number>;
    /**
     * The name of the node.
     */
    name?: pulumi.Input<string>;
    /**
     * The node pool id.
     */
    nodePoolId?: pulumi.Input<string>;
    /**
     * Effective hours of the managed script are counted from the creation time.
     */
    ttlHours?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a BatchEdgeMachine resource.
 */
export interface BatchEdgeMachineArgs {
    /**
     * The client token.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The cluster id.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Expiration date of the managed script, UTC time point, in seconds. If the expiration time is set, TTLHours will be ignored.
     */
    expirationDate?: pulumi.Input<number>;
    /**
     * The name of the node.
     */
    name?: pulumi.Input<string>;
    /**
     * The node pool id.
     */
    nodePoolId: pulumi.Input<string>;
    /**
     * Effective hours of the managed script are counted from the creation time.
     */
    ttlHours: pulumi.Input<number>;
}
