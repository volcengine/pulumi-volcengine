// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage veecp edge node
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.veecp.EdgeNode("foo", {
 *     autoCompleteConfig: {
 *         directAdd: true,
 *         directAddInstances: [{
 *             cloudServerIdentity: "cloudserver-wvvflw9qdns2qrk",
 *             instanceIdentity: "veen91912104432151420041",
 *         }],
 *         enable: true,
 *     },
 *     clusterId: "ccvmf49t1ndqeechmj8p0",
 *     nodePoolId: "pcvpkdn7ic26jjcjsa20g",
 * });
 * ```
 *
 * ## Import
 *
 * VeecpNode can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:veecp/edgeNode:EdgeNode default resource_id
 * ```
 */
export class EdgeNode extends pulumi.CustomResource {
    /**
     * Get an existing EdgeNode resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeNodeState, opts?: pulumi.CustomResourceOptions): EdgeNode {
        return new EdgeNode(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:veecp/edgeNode:EdgeNode';

    /**
     * Returns true if the given object is an instance of EdgeNode.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeNode {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeNode.__pulumiType;
    }

    /**
     * Machine information to be managed.
     */
    public readonly autoCompleteConfig!: pulumi.Output<outputs.veecp.EdgeNodeAutoCompleteConfig>;
    /**
     * The client token.
     */
    public readonly clientToken!: pulumi.Output<string>;
    /**
     * The cluster id.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * The name of node.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The node pool id.
     */
    public readonly nodePoolId!: pulumi.Output<string>;

    /**
     * Create a EdgeNode resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeNodeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeNodeArgs | EdgeNodeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgeNodeState | undefined;
            resourceInputs["autoCompleteConfig"] = state ? state.autoCompleteConfig : undefined;
            resourceInputs["clientToken"] = state ? state.clientToken : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodePoolId"] = state ? state.nodePoolId : undefined;
        } else {
            const args = argsOrState as EdgeNodeArgs | undefined;
            if ((!args || args.autoCompleteConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoCompleteConfig'");
            }
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.nodePoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodePoolId'");
            }
            resourceInputs["autoCompleteConfig"] = args ? args.autoCompleteConfig : undefined;
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodePoolId"] = args ? args.nodePoolId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgeNode.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgeNode resources.
 */
export interface EdgeNodeState {
    /**
     * Machine information to be managed.
     */
    autoCompleteConfig?: pulumi.Input<inputs.veecp.EdgeNodeAutoCompleteConfig>;
    /**
     * The client token.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The cluster id.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The name of node.
     */
    name?: pulumi.Input<string>;
    /**
     * The node pool id.
     */
    nodePoolId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdgeNode resource.
 */
export interface EdgeNodeArgs {
    /**
     * Machine information to be managed.
     */
    autoCompleteConfig: pulumi.Input<inputs.veecp.EdgeNodeAutoCompleteConfig>;
    /**
     * The client token.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The cluster id.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The name of node.
     */
    name?: pulumi.Input<string>;
    /**
     * The node pool id.
     */
    nodePoolId: pulumi.Input<string>;
}
