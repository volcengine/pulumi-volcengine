// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of veecp batch edge machines
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooBatchEdgeMachine = new volcengine.veecp.BatchEdgeMachine("fooBatchEdgeMachine", {
 *     clusterId: "ccvd7mte6t101fno98u60",
 *     nodePoolId: "pcvd90uacnsr73g6bjic0",
 *     ttlHours: 1,
 * });
 * const fooBatchEdgeMachines = volcengine.veecp.getBatchEdgeMachinesOutput({
 *     clusterIds: [fooBatchEdgeMachine.clusterId],
 *     ids: [fooBatchEdgeMachine.id],
 * });
 * ```
 */
export function getBatchEdgeMachines(args?: GetBatchEdgeMachinesArgs, opts?: pulumi.InvokeOptions): Promise<GetBatchEdgeMachinesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:veecp/getBatchEdgeMachines:getBatchEdgeMachines", {
        "clusterIds": args.clusterIds,
        "createClientToken": args.createClientToken,
        "ids": args.ids,
        "ips": args.ips,
        "name": args.name,
        "needBootstrapScript": args.needBootstrapScript,
        "outputFile": args.outputFile,
        "statuses": args.statuses,
        "zoneIds": args.zoneIds,
    }, opts);
}

/**
 * A collection of arguments for invoking getBatchEdgeMachines.
 */
export interface GetBatchEdgeMachinesArgs {
    /**
     * The ClusterIds of NodePool IDs.
     */
    clusterIds?: string[];
    /**
     * The ClientToken when successfully created.
     */
    createClientToken?: string;
    /**
     * A list of IDs.
     */
    ids?: string[];
    /**
     * The IPs.
     */
    ips?: string[];
    /**
     * The Name of NodePool.
     */
    name?: string;
    /**
     * Whether it is necessary to query the node management script.
     */
    needBootstrapScript?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The Status of NodePool.
     */
    statuses?: inputs.veecp.GetBatchEdgeMachinesStatus[];
    /**
     * The Zone Ids.
     */
    zoneIds?: string[];
}

/**
 * A collection of values returned by getBatchEdgeMachines.
 */
export interface GetBatchEdgeMachinesResult {
    readonly clusterIds?: string[];
    /**
     * The ClientToken when successfully created.
     */
    readonly createClientToken?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly ips?: string[];
    /**
     * The collection of query.
     */
    readonly machines: outputs.veecp.GetBatchEdgeMachinesMachine[];
    /**
     * The Name of NodePool.
     */
    readonly name?: string;
    readonly needBootstrapScript?: string;
    readonly outputFile?: string;
    readonly statuses?: outputs.veecp.GetBatchEdgeMachinesStatus[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    readonly zoneIds?: string[];
}
/**
 * Use this data source to query detailed information of veecp batch edge machines
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooBatchEdgeMachine = new volcengine.veecp.BatchEdgeMachine("fooBatchEdgeMachine", {
 *     clusterId: "ccvd7mte6t101fno98u60",
 *     nodePoolId: "pcvd90uacnsr73g6bjic0",
 *     ttlHours: 1,
 * });
 * const fooBatchEdgeMachines = volcengine.veecp.getBatchEdgeMachinesOutput({
 *     clusterIds: [fooBatchEdgeMachine.clusterId],
 *     ids: [fooBatchEdgeMachine.id],
 * });
 * ```
 */
export function getBatchEdgeMachinesOutput(args?: GetBatchEdgeMachinesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBatchEdgeMachinesResult> {
    return pulumi.output(args).apply((a: any) => getBatchEdgeMachines(a, opts))
}

/**
 * A collection of arguments for invoking getBatchEdgeMachines.
 */
export interface GetBatchEdgeMachinesOutputArgs {
    /**
     * The ClusterIds of NodePool IDs.
     */
    clusterIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ClientToken when successfully created.
     */
    createClientToken?: pulumi.Input<string>;
    /**
     * A list of IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPs.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name of NodePool.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether it is necessary to query the node management script.
     */
    needBootstrapScript?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The Status of NodePool.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.veecp.GetBatchEdgeMachinesStatusArgs>[]>;
    /**
     * The Zone Ids.
     */
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}
