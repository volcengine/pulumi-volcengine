// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.redis.Instance("foo", {
 *     applyImmediately: true,
 *     backupActive: true,
 *     backupHour: 4,
 *     backupPeriods: [
 *         1,
 *         2,
 *         3,
 *     ],
 *     chargeType: "PostPaid",
 *     createBackup: false,
 *     deletionProtection: "disabled",
 *     engineVersion: "5.0",
 *     instanceName: "tf-test",
 *     nodeNumber: 2,
 *     paramValues: [
 *         {
 *             name: "active-defrag-cycle-min",
 *             value: "5",
 *         },
 *         {
 *             name: "active-defrag-cycle-max",
 *             value: "28",
 *         },
 *     ],
 *     password: "1qaz!QAZ12",
 *     port: 6381,
 *     projectName: "default",
 *     shardCapacity: 1024,
 *     shardNumber: 2,
 *     shardedCluster: 1,
 *     subnetId: "subnet-13g7c3lot0lc03n6nu4wj****",
 *     tags: [
 *         {
 *             key: "k1",
 *             value: "v1",
 *         },
 *         {
 *             key: "k3",
 *             value: "v3",
 *         },
 *     ],
 *     vpcAuthMode: "close",
 *     zoneIds: [
 *         "cn-beijing-a",
 *         "cn-beijing-b",
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * redis instance can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:redis/instance:Instance default redis-n769ewmjjqyqh5dv
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:redis/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
     */
    public readonly applyImmediately!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false. 
     * When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly autoRenew!: pulumi.Output<boolean | undefined>;
    /**
     * Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    public readonly backupActive!: pulumi.Output<boolean>;
    /**
     * The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on. 
     * This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    public readonly backupHour!: pulumi.Output<number>;
    /**
     * The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on. 
     * This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    public readonly backupPeriods!: pulumi.Output<number[]>;
    /**
     * The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
     */
    public readonly chargeType!: pulumi.Output<string | undefined>;
    /**
     * Whether to create a final backup when modify the instance configuration or destroy the redis instance.
     */
    public readonly createBackup!: pulumi.Output<boolean | undefined>;
    /**
     * Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
     */
    public readonly deletionProtection!: pulumi.Output<string | undefined>;
    /**
     * The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * The name of the redis instance.
     */
    public readonly instanceName!: pulumi.Output<string | undefined>;
    /**
     * The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
     */
    public readonly nodeNumber!: pulumi.Output<number>;
    /**
     * The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
     */
    public readonly paramValues!: pulumi.Output<outputs.redis.InstanceParamValue[] | undefined>;
    /**
     * The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`. 
     * When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly purchaseMonths!: pulumi.Output<number | undefined>;
    /**
     * The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
     */
    public readonly shardCapacity!: pulumi.Output<number>;
    /**
     * The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
     */
    public readonly shardNumber!: pulumi.Output<number>;
    /**
     * Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
     */
    public readonly shardedCluster!: pulumi.Output<number>;
    /**
     * The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.redis.InstanceTag[] | undefined>;
    /**
     * Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
     */
    public readonly vpcAuthMode!: pulumi.Output<string>;
    /**
     * The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
     */
    public readonly zoneIds!: pulumi.Output<string[]>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["applyImmediately"] = state ? state.applyImmediately : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["backupActive"] = state ? state.backupActive : undefined;
            resourceInputs["backupHour"] = state ? state.backupHour : undefined;
            resourceInputs["backupPeriods"] = state ? state.backupPeriods : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["createBackup"] = state ? state.createBackup : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["nodeNumber"] = state ? state.nodeNumber : undefined;
            resourceInputs["paramValues"] = state ? state.paramValues : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["purchaseMonths"] = state ? state.purchaseMonths : undefined;
            resourceInputs["shardCapacity"] = state ? state.shardCapacity : undefined;
            resourceInputs["shardNumber"] = state ? state.shardNumber : undefined;
            resourceInputs["shardedCluster"] = state ? state.shardedCluster : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcAuthMode"] = state ? state.vpcAuthMode : undefined;
            resourceInputs["zoneIds"] = state ? state.zoneIds : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.engineVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            if ((!args || args.nodeNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeNumber'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.shardCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shardCapacity'");
            }
            if ((!args || args.shardedCluster === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shardedCluster'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.zoneIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneIds'");
            }
            resourceInputs["applyImmediately"] = args ? args.applyImmediately : undefined;
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["backupActive"] = args ? args.backupActive : undefined;
            resourceInputs["backupHour"] = args ? args.backupHour : undefined;
            resourceInputs["backupPeriods"] = args ? args.backupPeriods : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["createBackup"] = args ? args.createBackup : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["nodeNumber"] = args ? args.nodeNumber : undefined;
            resourceInputs["paramValues"] = args ? args.paramValues : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["purchaseMonths"] = args ? args.purchaseMonths : undefined;
            resourceInputs["shardCapacity"] = args ? args.shardCapacity : undefined;
            resourceInputs["shardNumber"] = args ? args.shardNumber : undefined;
            resourceInputs["shardedCluster"] = args ? args.shardedCluster : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcAuthMode"] = args ? args.vpcAuthMode : undefined;
            resourceInputs["zoneIds"] = args ? args.zoneIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
     */
    applyImmediately?: pulumi.Input<boolean>;
    /**
     * Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false. 
     * When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    backupActive?: pulumi.Input<boolean>;
    /**
     * The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on. 
     * This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    backupHour?: pulumi.Input<number>;
    /**
     * The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on. 
     * This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    backupPeriods?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Whether to create a final backup when modify the instance configuration or destroy the redis instance.
     */
    createBackup?: pulumi.Input<boolean>;
    /**
     * Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
     */
    deletionProtection?: pulumi.Input<string>;
    /**
     * The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The name of the redis instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
     */
    nodeNumber?: pulumi.Input<number>;
    /**
     * The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
     */
    paramValues?: pulumi.Input<pulumi.Input<inputs.redis.InstanceParamValue>[]>;
    /**
     * The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    password?: pulumi.Input<string>;
    /**
     * The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
     */
    port?: pulumi.Input<number>;
    /**
     * The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`. 
     * When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    purchaseMonths?: pulumi.Input<number>;
    /**
     * The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
     */
    shardCapacity?: pulumi.Input<number>;
    /**
     * The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
     */
    shardNumber?: pulumi.Input<number>;
    /**
     * Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
     */
    shardedCluster?: pulumi.Input<number>;
    /**
     * The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.redis.InstanceTag>[]>;
    /**
     * Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
     */
    vpcAuthMode?: pulumi.Input<string>;
    /**
     * The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
     */
    zoneIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Whether to apply the instance configuration change operation immediately. The value of this field is false, means that the change operation will be applied within maintenance time.
     */
    applyImmediately?: pulumi.Input<boolean>;
    /**
     * Whether to enable automatic renewal. This field is valid only when `ChargeType` is `PrePaid`, the default value is false. 
     * When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * Whether enable auto backup for redis instance. This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    backupActive?: pulumi.Input<boolean>;
    /**
     * The time period to start performing the backup. The valid value range is any integer between 0 and 23, where 0 means that the system will perform the backup in the period of 00:00~01:00, 1 means that the backup will be performed in the period of 01:00~02:00, and so on. 
     * This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    backupHour?: pulumi.Input<number>;
    /**
     * The backup period. The valid value can be any integer between 1 and 7. Among them, 1 means backup every Monday, 2 means backup every Tuesday, and so on. 
     * This field is valid and required when updating the backup plan of primary and secondary instance.
     */
    backupPeriods?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The charge type of redis instance. Valid value: `PostPaid`, `PrePaid`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Whether to create a final backup when modify the instance configuration or destroy the redis instance.
     */
    createBackup?: pulumi.Input<boolean>;
    /**
     * Whether enable deletion protection for redis instance. Valid values: `enabled`, `disabled`(default).
     */
    deletionProtection?: pulumi.Input<string>;
    /**
     * The engine version of redis instance. Valid value: `4.0`, `5.0`, `6.0`.
     */
    engineVersion: pulumi.Input<string>;
    /**
     * The name of the redis instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The number of nodes in each shard, the valid value range is `1-6`. When the value is 1, it means creating a single node instance, and this field can not be modified. When the value is greater than 1, it means creating a primary and secondary instance, and this field can be modified.
     */
    nodeNumber: pulumi.Input<number>;
    /**
     * The configuration item information to be modified. This field can only be added or modified. Deleting this field is invalid.
     */
    paramValues?: pulumi.Input<pulumi.Input<inputs.redis.InstanceParamValue>[]>;
    /**
     * The account password. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    password: pulumi.Input<string>;
    /**
     * The port of custom define private network address. The valid value range is `1024-65535`. The default value is `6379`.
     */
    port?: pulumi.Input<number>;
    /**
     * The project name to which the redis instance belongs, if this parameter is empty, the new redis instance will not be added to any project.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The purchase months of redis instance, the unit is month. the valid value range is as fallows: `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36`. This field is valid and required when `ChargeType` is `Prepaid`. 
     * When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    purchaseMonths?: pulumi.Input<number>;
    /**
     * The memory capacity of each shard, unit is MiB. The valid value range is as fallows: When the value of `ShardedCluster` is 0: 256, 1024, 2048, 4096, 8192, 16384, 32768, 65536. When the value of `ShardedCluster` is 1: 1024, 2048, 4096, 8192, 16384. When the value of `nodeNumber` is 1, the value of this field can not be 256.
     */
    shardCapacity: pulumi.Input<number>;
    /**
     * The number of shards in redis instance, the valid value range is `2-256`. This field is valid and required when the value of `ShardedCluster` is 1.
     */
    shardNumber?: pulumi.Input<number>;
    /**
     * Whether enable sharded cluster for the current redis instance. Valid values: 0, 1. 0 means disable, 1 means enable.
     */
    shardedCluster: pulumi.Input<number>;
    /**
     * The subnet id of the redis instance. The specified subnet id must belong to the zone ids.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.redis.InstanceTag>[]>;
    /**
     * Whether to enable password-free access when connecting to an instance through a private network. Valid values: `open`, `close`. Works only on modified scenes.
     */
    vpcAuthMode?: pulumi.Input<string>;
    /**
     * The list of zone IDs of instance. When creating a single node instance, only one zone id can be specified.
     */
    zoneIds: pulumi.Input<pulumi.Input<string>[]>;
}
