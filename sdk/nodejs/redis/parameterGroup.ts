// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage redis parameter group
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.redis.ParameterGroup("foo", {
 *     description: "tf-test-description",
 *     engineVersion: "5.0",
 *     paramValues: [
 *         {
 *             name: "active-defrag-cycle-max",
 *             value: "30",
 *         },
 *         {
 *             name: "active-defrag-cycle-min",
 *             value: "15",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * ParameterGroup can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:redis/parameterGroup:ParameterGroup default resource_id
 * ```
 */
export class ParameterGroup extends pulumi.CustomResource {
    /**
     * Get an existing ParameterGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ParameterGroupState, opts?: pulumi.CustomResourceOptions): ParameterGroup {
        return new ParameterGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:redis/parameterGroup:ParameterGroup';

    /**
     * Returns true if the given object is an instance of ParameterGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ParameterGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ParameterGroup.__pulumiType;
    }

    /**
     * The remarks information of the parameter template should not exceed 200 characters in length.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly paramValues!: pulumi.Output<outputs.redis.ParameterGroupParamValue[]>;

    /**
     * Create a ParameterGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ParameterGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ParameterGroupArgs | ParameterGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ParameterGroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paramValues"] = state ? state.paramValues : undefined;
        } else {
            const args = argsOrState as ParameterGroupArgs | undefined;
            if ((!args || args.engineVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            if ((!args || args.paramValues === undefined) && !opts.urn) {
                throw new Error("Missing required property 'paramValues'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paramValues"] = args ? args.paramValues : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ParameterGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ParameterGroup resources.
 */
export interface ParameterGroupState {
    /**
     * The remarks information of the parameter template should not exceed 200 characters in length.
     */
    description?: pulumi.Input<string>;
    /**
     * The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    paramValues?: pulumi.Input<pulumi.Input<inputs.redis.ParameterGroupParamValue>[]>;
}

/**
 * The set of arguments for constructing a ParameterGroup resource.
 */
export interface ParameterGroupArgs {
    /**
     * The remarks information of the parameter template should not exceed 200 characters in length.
     */
    description?: pulumi.Input<string>;
    /**
     * The Redis database version adapted to the parameter template. The value range is as follows; 7.0: Redis 7.0. 6.0: Redis 6.0. 5.0: Redis 5.0.
     */
    engineVersion: pulumi.Input<string>;
    /**
     * Parameter template name. The name needs to meet the following requirements simultaneously: It cannot start with a number or a hyphen (-). Only Chinese characters, letters, numbers, underscores (_) and hyphens (-) can be included. The length should be 2 to 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of parameter information that needs to be included in the new parameter template. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    paramValues: pulumi.Input<pulumi.Input<inputs.redis.ParameterGroupParamValue>[]>;
}
