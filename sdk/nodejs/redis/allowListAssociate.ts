// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage redis allow list associate
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const _default = new volcengine.redis.AllowListAssociate("default", {
 *     allowListId: "acl-cnlfc5zsxscu1gg2ajh",
 *     instanceId: "redis-cnlfbzifs7bpvundz",
 * });
 * const default1 = new volcengine.redis.AllowListAssociate("default1", {
 *     allowListId: "acl-cnlff2mb31zo85p5am7",
 *     instanceId: "redis-cnlfbzifs7bpvundz",
 * });
 * ```
 *
 * ## Import
 *
 * Redis AllowList Association can be imported using the instanceId:allowListId, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:redis/allowListAssociate:AllowListAssociate default redis-asdljioeixxxx:acl-cn03wk541s55c376xxxx
 * ```
 */
export class AllowListAssociate extends pulumi.CustomResource {
    /**
     * Get an existing AllowListAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AllowListAssociateState, opts?: pulumi.CustomResourceOptions): AllowListAssociate {
        return new AllowListAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:redis/allowListAssociate:AllowListAssociate';

    /**
     * Returns true if the given object is an instance of AllowListAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AllowListAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AllowListAssociate.__pulumiType;
    }

    /**
     * Id of allow list to associate.
     */
    public readonly allowListId!: pulumi.Output<string>;
    /**
     * Id of instance to associate.
     */
    public readonly instanceId!: pulumi.Output<string>;

    /**
     * Create a AllowListAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AllowListAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AllowListAssociateArgs | AllowListAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AllowListAssociateState | undefined;
            resourceInputs["allowListId"] = state ? state.allowListId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
        } else {
            const args = argsOrState as AllowListAssociateArgs | undefined;
            if ((!args || args.allowListId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowListId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["allowListId"] = args ? args.allowListId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AllowListAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AllowListAssociate resources.
 */
export interface AllowListAssociateState {
    /**
     * Id of allow list to associate.
     */
    allowListId?: pulumi.Input<string>;
    /**
     * Id of instance to associate.
     */
    instanceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AllowListAssociate resource.
 */
export interface AllowListAssociateArgs {
    /**
     * Id of allow list to associate.
     */
    allowListId: pulumi.Input<string>;
    /**
     * Id of instance to associate.
     */
    instanceId: pulumi.Input<string>;
}
