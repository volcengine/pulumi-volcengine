// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage redis backup restore
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const _default = new volcengine.redis.BackupRestore("default", {
 *     instanceId: "redis-cnlfvrv4qye6u4lpa",
 *     timePoint: "2023-04-14T02:51:51Z",
 * });
 * ```
 *
 * ## Import
 *
 * Redis Backup Restore can be imported using the restore:instanceId, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:redis/backupRestore:BackupRestore default restore:redis-asdljioeixxxx
 * ```
 */
export class BackupRestore extends pulumi.CustomResource {
    /**
     * Get an existing BackupRestore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupRestoreState, opts?: pulumi.CustomResourceOptions): BackupRestore {
        return new BackupRestore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:redis/backupRestore:BackupRestore';

    /**
     * Returns true if the given object is an instance of BackupRestore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupRestore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupRestore.__pulumiType;
    }

    /**
     * The type of backup. The value can be Full or Inc.
     */
    public readonly backupType!: pulumi.Output<string | undefined>;
    /**
     * Id of instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Time point of backup, for example: 2021-11-09T06:07:26Z. Use lifecycle and ignoreChanges in import.
     */
    public readonly timePoint!: pulumi.Output<string>;

    /**
     * Create a BackupRestore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupRestoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupRestoreArgs | BackupRestoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupRestoreState | undefined;
            resourceInputs["backupType"] = state ? state.backupType : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["timePoint"] = state ? state.timePoint : undefined;
        } else {
            const args = argsOrState as BackupRestoreArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.timePoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timePoint'");
            }
            resourceInputs["backupType"] = args ? args.backupType : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["timePoint"] = args ? args.timePoint : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupRestore.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BackupRestore resources.
 */
export interface BackupRestoreState {
    /**
     * The type of backup. The value can be Full or Inc.
     */
    backupType?: pulumi.Input<string>;
    /**
     * Id of instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Time point of backup, for example: 2021-11-09T06:07:26Z. Use lifecycle and ignoreChanges in import.
     */
    timePoint?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BackupRestore resource.
 */
export interface BackupRestoreArgs {
    /**
     * The type of backup. The value can be Full or Inc.
     */
    backupType?: pulumi.Input<string>;
    /**
     * Id of instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Time point of backup, for example: 2021-11-09T06:07:26Z. Use lifecycle and ignoreChanges in import.
     */
    timePoint: pulumi.Input<string>;
}
