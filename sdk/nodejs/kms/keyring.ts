// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage kms keyring
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.kms.Keyring("foo", {
 *     description: "tf-test",
 *     keyringName: "tf-test",
 *     projectName: "default",
 * });
 * ```
 *
 * ## Import
 *
 * KmsKeyring can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:kms/keyring:Keyring default resource_id
 * ```
 */
export class Keyring extends pulumi.CustomResource {
    /**
     * Get an existing Keyring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KeyringState, opts?: pulumi.CustomResourceOptions): Keyring {
        return new Keyring(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:kms/keyring:Keyring';

    /**
     * Returns true if the given object is an instance of Keyring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Keyring {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Keyring.__pulumiType;
    }

    /**
     * The date when the keyring was created.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<number>;
    /**
     * The description of the keyring.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the keyring.
     */
    public readonly keyringName!: pulumi.Output<string>;
    /**
     * The type of the keyring.
     */
    public readonly keyringType!: pulumi.Output<string>;
    /**
     * The name of the project.
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * The information about the tenant resource name (TRN).
     */
    public /*out*/ readonly trn!: pulumi.Output<string>;
    /**
     * The tenant ID of the keyring.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The date when the keyring was updated.
     */
    public /*out*/ readonly updateDate!: pulumi.Output<number>;

    /**
     * Create a Keyring resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeyringArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KeyringArgs | KeyringState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KeyringState | undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["keyringName"] = state ? state.keyringName : undefined;
            resourceInputs["keyringType"] = state ? state.keyringType : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["trn"] = state ? state.trn : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateDate"] = state ? state.updateDate : undefined;
        } else {
            const args = argsOrState as KeyringArgs | undefined;
            if ((!args || args.keyringName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyringName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["keyringName"] = args ? args.keyringName : undefined;
            resourceInputs["keyringType"] = args ? args.keyringType : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["trn"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Keyring.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Keyring resources.
 */
export interface KeyringState {
    /**
     * The date when the keyring was created.
     */
    creationDate?: pulumi.Input<number>;
    /**
     * The description of the keyring.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the keyring.
     */
    keyringName?: pulumi.Input<string>;
    /**
     * The type of the keyring.
     */
    keyringType?: pulumi.Input<string>;
    /**
     * The name of the project.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The information about the tenant resource name (TRN).
     */
    trn?: pulumi.Input<string>;
    /**
     * The tenant ID of the keyring.
     */
    uid?: pulumi.Input<string>;
    /**
     * The date when the keyring was updated.
     */
    updateDate?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Keyring resource.
 */
export interface KeyringArgs {
    /**
     * The description of the keyring.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the keyring.
     */
    keyringName: pulumi.Input<string>;
    /**
     * The type of the keyring.
     */
    keyringType?: pulumi.Input<string>;
    /**
     * The name of the project.
     */
    projectName?: pulumi.Input<string>;
}
