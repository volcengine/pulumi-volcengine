// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of kms secrets
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.kms.getSecrets({
 *     descriptions: [
 *         "tf-1",
 *         "tf-2",
 *     ],
 *     secretNames: [
 *         "5r3",
 *         "5r",
 *         "tf",
 *     ],
 * });
 * ```
 */
export function getSecrets(args?: GetSecretsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:kms/getSecrets:getSecrets", {
        "creationDateRanges": args.creationDateRanges,
        "descriptions": args.descriptions,
        "managedStates": args.managedStates,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
        "rotationStates": args.rotationStates,
        "secretNames": args.secretNames,
        "secretStates": args.secretStates,
        "secretTypes": args.secretTypes,
        "trns": args.trns,
        "updateDateRanges": args.updateDateRanges,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsArgs {
    /**
     * The creation date of the secret.
     */
    creationDateRanges?: string[];
    /**
     * The description of the secret.
     */
    descriptions?: string[];
    /**
     * The state of the managed.
     */
    managedStates?: string[];
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The name of the project to which the secret belongs.
     */
    projectName?: string;
    /**
     * The state of the rotation.
     */
    rotationStates?: string[];
    /**
     * The name of the secret.
     */
    secretNames?: string[];
    /**
     * The state of the secret.
     */
    secretStates?: string[];
    /**
     * The type of the secret.
     */
    secretTypes?: string[];
    /**
     * The trn of the secret.
     */
    trns?: string[];
    /**
     * The update date of the secret.
     */
    updateDateRanges?: string[];
}

/**
 * A collection of values returned by getSecrets.
 */
export interface GetSecretsResult {
    readonly creationDateRanges?: string[];
    /**
     * The description of the secret.
     */
    readonly descriptions?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedStates?: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The project name of the secret.
     */
    readonly projectName?: string;
    /**
     * The rotation state of the secret.
     */
    readonly rotationStates?: string[];
    /**
     * The name of the secret.
     */
    readonly secretNames?: string[];
    /**
     * The state of secret.
     */
    readonly secretStates?: string[];
    /**
     * The type of the secret.
     */
    readonly secretTypes?: string[];
    /**
     * The information about the secret.
     */
    readonly secrets: outputs.kms.GetSecretsSecret[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The information about the tenant resource name (TRN).
     */
    readonly trns?: string[];
    readonly updateDateRanges?: string[];
}
/**
 * Use this data source to query detailed information of kms secrets
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.kms.getSecrets({
 *     descriptions: [
 *         "tf-1",
 *         "tf-2",
 *     ],
 *     secretNames: [
 *         "5r3",
 *         "5r",
 *         "tf",
 *     ],
 * });
 * ```
 */
export function getSecretsOutput(args?: GetSecretsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretsResult> {
    return pulumi.output(args).apply((a: any) => getSecrets(a, opts))
}

/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsOutputArgs {
    /**
     * The creation date of the secret.
     */
    creationDateRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the secret.
     */
    descriptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The state of the managed.
     */
    managedStates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of the project to which the secret belongs.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The state of the rotation.
     */
    rotationStates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the secret.
     */
    secretNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The state of the secret.
     */
    secretStates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the secret.
     */
    secretTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The trn of the secret.
     */
    trns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The update date of the secret.
     */
    updateDateRanges?: pulumi.Input<pulumi.Input<string>[]>;
}
