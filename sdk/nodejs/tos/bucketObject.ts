// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage tos object
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const _default = new volcengine.tos.BucketObject("default", {
 *     accountAcls: [
 *         {
 *             accountId: "1",
 *             permission: "READ",
 *         },
 *         {
 *             accountId: "2001",
 *             permission: "WRITE_ACP",
 *         },
 *     ],
 *     bucketName: "test-xym-1",
 *     encryption: "AES256",
 *     filePath: "/Users/bytedance/Work/Go/build/test.txt",
 *     objectName: "demo_xym",
 *     publicAcl: "private",
 * });
 * ```
 *
 * ## Import
 *
 * TOS Object can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:tos/bucketObject:BucketObject default bucketName:objectName
 * ```
 */
export class BucketObject extends pulumi.CustomResource {
    /**
     * Get an existing BucketObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketObjectState, opts?: pulumi.CustomResourceOptions): BucketObject {
        return new BucketObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:tos/bucketObject:BucketObject';

    /**
     * Returns true if the given object is an instance of BucketObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketObject.__pulumiType;
    }

    /**
     * The user set of grant full control.
     */
    public readonly accountAcls!: pulumi.Output<outputs.tos.BucketObjectAccountAcl[] | undefined>;
    /**
     * The name of the bucket.
     */
    public readonly bucketName!: pulumi.Output<string>;
    /**
     * The file md5 sum (32-bit hexadecimal string) for upload.
     */
    public readonly contentMd5!: pulumi.Output<string | undefined>;
    /**
     * The content type of the object.
     */
    public readonly contentType!: pulumi.Output<string>;
    /**
     * The flag of enable tos version.
     */
    public /*out*/ readonly enableVersion!: pulumi.Output<boolean>;
    /**
     * The encryption of the object.Valid value is AES256.
     */
    public readonly encryption!: pulumi.Output<string | undefined>;
    /**
     * The file path for upload.
     */
    public readonly filePath!: pulumi.Output<string>;
    /**
     * The name of the object.
     */
    public readonly objectName!: pulumi.Output<string>;
    /**
     * The public acl control of object.Valid value is private|public-read|public-read-write|authenticated-read|bucket-owner-read.
     */
    public readonly publicAcl!: pulumi.Output<string | undefined>;
    /**
     * The storage type of the object.Valid value is STANDARD|IA.
     */
    public readonly storageClass!: pulumi.Output<string | undefined>;
    /**
     * The version ids of the object if exist.
     */
    public /*out*/ readonly versionIds!: pulumi.Output<string[]>;

    /**
     * Create a BucketObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketObjectArgs | BucketObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketObjectState | undefined;
            resourceInputs["accountAcls"] = state ? state.accountAcls : undefined;
            resourceInputs["bucketName"] = state ? state.bucketName : undefined;
            resourceInputs["contentMd5"] = state ? state.contentMd5 : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["enableVersion"] = state ? state.enableVersion : undefined;
            resourceInputs["encryption"] = state ? state.encryption : undefined;
            resourceInputs["filePath"] = state ? state.filePath : undefined;
            resourceInputs["objectName"] = state ? state.objectName : undefined;
            resourceInputs["publicAcl"] = state ? state.publicAcl : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
            resourceInputs["versionIds"] = state ? state.versionIds : undefined;
        } else {
            const args = argsOrState as BucketObjectArgs | undefined;
            if ((!args || args.bucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketName'");
            }
            if ((!args || args.filePath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filePath'");
            }
            if ((!args || args.objectName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectName'");
            }
            resourceInputs["accountAcls"] = args ? args.accountAcls : undefined;
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["contentMd5"] = args ? args.contentMd5 : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["encryption"] = args ? args.encryption : undefined;
            resourceInputs["filePath"] = args ? args.filePath : undefined;
            resourceInputs["objectName"] = args ? args.objectName : undefined;
            resourceInputs["publicAcl"] = args ? args.publicAcl : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["enableVersion"] = undefined /*out*/;
            resourceInputs["versionIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketObject.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketObject resources.
 */
export interface BucketObjectState {
    /**
     * The user set of grant full control.
     */
    accountAcls?: pulumi.Input<pulumi.Input<inputs.tos.BucketObjectAccountAcl>[]>;
    /**
     * The name of the bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * The file md5 sum (32-bit hexadecimal string) for upload.
     */
    contentMd5?: pulumi.Input<string>;
    /**
     * The content type of the object.
     */
    contentType?: pulumi.Input<string>;
    /**
     * The flag of enable tos version.
     */
    enableVersion?: pulumi.Input<boolean>;
    /**
     * The encryption of the object.Valid value is AES256.
     */
    encryption?: pulumi.Input<string>;
    /**
     * The file path for upload.
     */
    filePath?: pulumi.Input<string>;
    /**
     * The name of the object.
     */
    objectName?: pulumi.Input<string>;
    /**
     * The public acl control of object.Valid value is private|public-read|public-read-write|authenticated-read|bucket-owner-read.
     */
    publicAcl?: pulumi.Input<string>;
    /**
     * The storage type of the object.Valid value is STANDARD|IA.
     */
    storageClass?: pulumi.Input<string>;
    /**
     * The version ids of the object if exist.
     */
    versionIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a BucketObject resource.
 */
export interface BucketObjectArgs {
    /**
     * The user set of grant full control.
     */
    accountAcls?: pulumi.Input<pulumi.Input<inputs.tos.BucketObjectAccountAcl>[]>;
    /**
     * The name of the bucket.
     */
    bucketName: pulumi.Input<string>;
    /**
     * The file md5 sum (32-bit hexadecimal string) for upload.
     */
    contentMd5?: pulumi.Input<string>;
    /**
     * The content type of the object.
     */
    contentType?: pulumi.Input<string>;
    /**
     * The encryption of the object.Valid value is AES256.
     */
    encryption?: pulumi.Input<string>;
    /**
     * The file path for upload.
     */
    filePath: pulumi.Input<string>;
    /**
     * The name of the object.
     */
    objectName: pulumi.Input<string>;
    /**
     * The public acl control of object.Valid value is private|public-read|public-read-write|authenticated-read|bucket-owner-read.
     */
    publicAcl?: pulumi.Input<string>;
    /**
     * The storage type of the object.Valid value is STANDARD|IA.
     */
    storageClass?: pulumi.Input<string>;
}
