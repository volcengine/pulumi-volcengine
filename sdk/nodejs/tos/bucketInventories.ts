// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of tos bucket inventories
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooBucketInventory = new volcengine.tos.BucketInventory("fooBucketInventory", {
 *     bucketName: "terraform-demo",
 *     inventoryId: "acc-test-inventory",
 *     isEnabled: true,
 *     includedObjectVersions: "All",
 *     schedule: {
 *         frequency: "Weekly",
 *     },
 *     filter: {
 *         prefix: "test-tf",
 *     },
 *     optionalFields: {
 *         fields: [
 *             "Size",
 *             "StorageClass",
 *             "CRC64",
 *         ],
 *     },
 *     destination: {
 *         tosBucketDestination: {
 *             format: "CSV",
 *             accountId: "21000*****",
 *             bucket: "terraform-demo",
 *             prefix: "tf-test-prefix",
 *             role: "TosArchiveTOSInventory",
 *         },
 *     },
 * });
 * const fooBucketInventories = volcengine.tos.getBucketInventoriesOutput({
 *     bucketName: "terraform-demo",
 *     inventoryId: fooBucketInventory.inventoryId,
 * });
 * ```
 */
/** @deprecated volcengine.tos.BucketInventories has been deprecated in favor of volcengine.tos.getBucketInventories */
export function bucketInventories(args: BucketInventoriesArgs, opts?: pulumi.InvokeOptions): Promise<BucketInventoriesResult> {
    pulumi.log.warn("bucketInventories is deprecated: volcengine.tos.BucketInventories has been deprecated in favor of volcengine.tos.getBucketInventories")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:tos/bucketInventories:BucketInventories", {
        "bucketName": args.bucketName,
        "inventoryId": args.inventoryId,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking BucketInventories.
 */
export interface BucketInventoriesArgs {
    /**
     * The name the TOS bucket.
     */
    bucketName: string;
    /**
     * The id the TOS bucket inventory.
     */
    inventoryId?: string;
    /**
     * A Name Regex of TOS bucket inventory.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by BucketInventories.
 */
export interface BucketInventoriesResult {
    /**
     * The name of the bucket.
     */
    readonly bucketName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The collection of query.
     */
    readonly inventoryConfigurations: outputs.tos.BucketInventoriesInventoryConfiguration[];
    readonly inventoryId?: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of tos bucket inventories
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooBucketInventory = new volcengine.tos.BucketInventory("fooBucketInventory", {
 *     bucketName: "terraform-demo",
 *     inventoryId: "acc-test-inventory",
 *     isEnabled: true,
 *     includedObjectVersions: "All",
 *     schedule: {
 *         frequency: "Weekly",
 *     },
 *     filter: {
 *         prefix: "test-tf",
 *     },
 *     optionalFields: {
 *         fields: [
 *             "Size",
 *             "StorageClass",
 *             "CRC64",
 *         ],
 *     },
 *     destination: {
 *         tosBucketDestination: {
 *             format: "CSV",
 *             accountId: "21000*****",
 *             bucket: "terraform-demo",
 *             prefix: "tf-test-prefix",
 *             role: "TosArchiveTOSInventory",
 *         },
 *     },
 * });
 * const fooBucketInventories = volcengine.tos.getBucketInventoriesOutput({
 *     bucketName: "terraform-demo",
 *     inventoryId: fooBucketInventory.inventoryId,
 * });
 * ```
 */
/** @deprecated volcengine.tos.BucketInventories has been deprecated in favor of volcengine.tos.getBucketInventories */
export function bucketInventoriesOutput(args: BucketInventoriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<BucketInventoriesResult> {
    return pulumi.output(args).apply((a: any) => bucketInventories(a, opts))
}

/**
 * A collection of arguments for invoking BucketInventories.
 */
export interface BucketInventoriesOutputArgs {
    /**
     * The name the TOS bucket.
     */
    bucketName: pulumi.Input<string>;
    /**
     * The id the TOS bucket inventory.
     */
    inventoryId?: pulumi.Input<string>;
    /**
     * A Name Regex of TOS bucket inventory.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
