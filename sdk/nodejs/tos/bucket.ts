// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage tos bucket
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const _default = new volcengine.tos.Bucket("default", {
 *     accountAcls: [
 *         {
 *             accountId: "1",
 *             permission: "READ",
 *         },
 *         {
 *             accountId: "2001",
 *             permission: "WRITE_ACP",
 *         },
 *     ],
 *     bucketName: "test-xym-1",
 *     enableVersion: true,
 *     publicAcl: "private",
 * });
 * ```
 *
 * ## Import
 *
 * Tos Bucket can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:tos/bucket:Bucket default bucketName
 * ```
 */
export class Bucket extends pulumi.CustomResource {
    /**
     * Get an existing Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketState, opts?: pulumi.CustomResourceOptions): Bucket {
        return new Bucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:tos/bucket:Bucket';

    /**
     * Returns true if the given object is an instance of Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bucket.__pulumiType;
    }

    /**
     * The user set of grant full control.
     */
    public readonly accountAcls!: pulumi.Output<outputs.tos.BucketAccountAcl[] | undefined>;
    /**
     * The name of the bucket.
     */
    public readonly bucketName!: pulumi.Output<string>;
    /**
     * The create date of the TOS bucket.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * The flag of enable tos version.
     */
    public readonly enableVersion!: pulumi.Output<boolean | undefined>;
    /**
     * The extranet endpoint of the TOS bucket.
     */
    public /*out*/ readonly extranetEndpoint!: pulumi.Output<string>;
    /**
     * The intranet endpoint the TOS bucket.
     */
    public /*out*/ readonly intranetEndpoint!: pulumi.Output<string>;
    /**
     * The location of the TOS bucket.
     */
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * The public acl control of object.Valid value is private|public-read|public-read-write|authenticated-read|bucket-owner-read.
     */
    public readonly publicAcl!: pulumi.Output<string | undefined>;
    /**
     * The storage type of the object.Valid value is STANDARD|IA|ARCHIVE_FR.Default is STANDARD.
     */
    public readonly storageClass!: pulumi.Output<string | undefined>;

    /**
     * Create a Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketArgs | BucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketState | undefined;
            resourceInputs["accountAcls"] = state ? state.accountAcls : undefined;
            resourceInputs["bucketName"] = state ? state.bucketName : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["enableVersion"] = state ? state.enableVersion : undefined;
            resourceInputs["extranetEndpoint"] = state ? state.extranetEndpoint : undefined;
            resourceInputs["intranetEndpoint"] = state ? state.intranetEndpoint : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["publicAcl"] = state ? state.publicAcl : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
        } else {
            const args = argsOrState as BucketArgs | undefined;
            if ((!args || args.bucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketName'");
            }
            resourceInputs["accountAcls"] = args ? args.accountAcls : undefined;
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["enableVersion"] = args ? args.enableVersion : undefined;
            resourceInputs["publicAcl"] = args ? args.publicAcl : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["extranetEndpoint"] = undefined /*out*/;
            resourceInputs["intranetEndpoint"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Bucket resources.
 */
export interface BucketState {
    /**
     * The user set of grant full control.
     */
    accountAcls?: pulumi.Input<pulumi.Input<inputs.tos.BucketAccountAcl>[]>;
    /**
     * The name of the bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * The create date of the TOS bucket.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The flag of enable tos version.
     */
    enableVersion?: pulumi.Input<boolean>;
    /**
     * The extranet endpoint of the TOS bucket.
     */
    extranetEndpoint?: pulumi.Input<string>;
    /**
     * The intranet endpoint the TOS bucket.
     */
    intranetEndpoint?: pulumi.Input<string>;
    /**
     * The location of the TOS bucket.
     */
    location?: pulumi.Input<string>;
    /**
     * The public acl control of object.Valid value is private|public-read|public-read-write|authenticated-read|bucket-owner-read.
     */
    publicAcl?: pulumi.Input<string>;
    /**
     * The storage type of the object.Valid value is STANDARD|IA|ARCHIVE_FR.Default is STANDARD.
     */
    storageClass?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Bucket resource.
 */
export interface BucketArgs {
    /**
     * The user set of grant full control.
     */
    accountAcls?: pulumi.Input<pulumi.Input<inputs.tos.BucketAccountAcl>[]>;
    /**
     * The name of the bucket.
     */
    bucketName: pulumi.Input<string>;
    /**
     * The flag of enable tos version.
     */
    enableVersion?: pulumi.Input<boolean>;
    /**
     * The public acl control of object.Valid value is private|public-read|public-read-write|authenticated-read|bucket-owner-read.
     */
    publicAcl?: pulumi.Input<string>;
    /**
     * The storage type of the object.Valid value is STANDARD|IA|ARCHIVE_FR.Default is STANDARD.
     */
    storageClass?: pulumi.Input<string>;
}
