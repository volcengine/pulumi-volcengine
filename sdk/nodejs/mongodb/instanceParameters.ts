// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of mongodb instance parameters
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.mongodb.InstanceParameters({
 *     instanceId: "mongo-replica-f16e9298b121",
 *     parameterNames: "connPoolMaxConnsPerHost",
 *     parameterRole: "Node",
 * });
 * ```
 */
export function instanceParameters(args: InstanceParametersArgs, opts?: pulumi.InvokeOptions): Promise<InstanceParametersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:mongodb/instanceParameters:InstanceParameters", {
        "instanceId": args.instanceId,
        "outputFile": args.outputFile,
        "parameterNames": args.parameterNames,
        "parameterRole": args.parameterRole,
    }, opts);
}

/**
 * A collection of arguments for invoking InstanceParameters.
 */
export interface InstanceParametersArgs {
    /**
     * The instance ID to query.
     */
    instanceId: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The parameter names, support fuzzy query, case insensitive.
     */
    parameterNames?: string;
    /**
     * The node type of instance parameter, valid value contains `Node`, `Shard`, `ConfigServer`, `Mongos`.
     */
    parameterRole?: string;
}

/**
 * A collection of values returned by InstanceParameters.
 */
export interface InstanceParametersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The instance ID.
     */
    readonly instanceId: string;
    readonly outputFile?: string;
    readonly parameterNames?: string;
    /**
     * The node type to which the parameter belongs.
     */
    readonly parameterRole?: string;
    /**
     * The collection of parameter query.
     */
    readonly parameters: outputs.mongodb.InstanceParametersParameters;
    /**
     * The total count of mongodb instance parameter query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of mongodb instance parameters
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.mongodb.InstanceParameters({
 *     instanceId: "mongo-replica-f16e9298b121",
 *     parameterNames: "connPoolMaxConnsPerHost",
 *     parameterRole: "Node",
 * });
 * ```
 */
export function instanceParametersOutput(args: InstanceParametersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<InstanceParametersResult> {
    return pulumi.output(args).apply((a: any) => instanceParameters(a, opts))
}

/**
 * A collection of arguments for invoking InstanceParameters.
 */
export interface InstanceParametersOutputArgs {
    /**
     * The instance ID to query.
     */
    instanceId: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The parameter names, support fuzzy query, case insensitive.
     */
    parameterNames?: pulumi.Input<string>;
    /**
     * The node type of instance parameter, valid value contains `Node`, `Shard`, `ConfigServer`, `Mongos`.
     */
    parameterRole?: pulumi.Input<string>;
}
