// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of mongodb specs
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.mongodb.Specs({});
 * ```
 */
export function specs(args?: SpecsArgs, opts?: pulumi.InvokeOptions): Promise<SpecsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:mongodb/specs:Specs", {
        "outputFile": args.outputFile,
        "regionId": args.regionId,
    }, opts);
}

/**
 * A collection of arguments for invoking Specs.
 */
export interface SpecsArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The region ID to query.
     */
    regionId?: string;
}

/**
 * A collection of values returned by Specs.
 */
export interface SpecsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly outputFile?: string;
    readonly regionId?: string;
    /**
     * A list of supported node specification information for MongoDB instances.
     */
    readonly specs: outputs.mongodb.SpecsSpecs;
    /**
     * The total count of region query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of mongodb specs
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.mongodb.Specs({});
 * ```
 */
export function specsOutput(args?: SpecsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<SpecsResult> {
    return pulumi.output(args).apply((a: any) => specs(a, opts))
}

/**
 * A collection of arguments for invoking Specs.
 */
export interface SpecsOutputArgs {
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The region ID to query.
     */
    regionId?: pulumi.Input<string>;
}
