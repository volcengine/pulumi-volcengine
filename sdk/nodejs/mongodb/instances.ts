// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of mongodb instances
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.mongodb.Instances({
 *     instanceId: "mongo-replica-xxx",
 * });
 * ```
 */
export function instances(args?: InstancesArgs, opts?: pulumi.InvokeOptions): Promise<InstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:mongodb/instances:Instances", {
        "createEndTime": args.createEndTime,
        "createStartTime": args.createStartTime,
        "dbEngine": args.dbEngine,
        "dbEngineVersion": args.dbEngineVersion,
        "instanceId": args.instanceId,
        "instanceName": args.instanceName,
        "instanceStatus": args.instanceStatus,
        "instanceType": args.instanceType,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "tags": args.tags,
        "updateEndTime": args.updateEndTime,
        "updateStartTime": args.updateStartTime,
        "vpcId": args.vpcId,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking Instances.
 */
export interface InstancesArgs {
    /**
     * The end time of creation to query.
     */
    createEndTime?: string;
    /**
     * The start time of creation to query.
     */
    createStartTime?: string;
    /**
     * The db engine to query, valid value contains `MongoDB`.
     */
    dbEngine?: string;
    /**
     * The version of db engine to query, valid value contains `MongoDB_4_0`.
     */
    dbEngineVersion?: string;
    /**
     * The instance ID to query.
     */
    instanceId?: string;
    /**
     * The instance name to query.
     */
    instanceName?: string;
    /**
     * The instance status to query.
     */
    instanceStatus?: string;
    /**
     * The type of instance to query, the valid value contains `ReplicaSet` or `ShardedCluster`.
     */
    instanceType?: string;
    /**
     * A Name Regex of DB instance.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * Tags.
     */
    tags?: inputs.mongodb.InstancesTag[];
    /**
     * The end time of update to query.
     */
    updateEndTime?: string;
    /**
     * The start time of update to query.
     */
    updateStartTime?: string;
    /**
     * The vpc id of instance to query.
     */
    vpcId?: string;
    /**
     * The zone ID to query.
     */
    zoneId?: string;
}

/**
 * A collection of values returned by Instances.
 */
export interface InstancesResult {
    readonly createEndTime?: string;
    readonly createStartTime?: string;
    /**
     * The db engine.
     */
    readonly dbEngine?: string;
    /**
     * The version of database engine.
     */
    readonly dbEngineVersion?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The instance ID.
     */
    readonly instanceId?: string;
    /**
     * The instance name.
     */
    readonly instanceName?: string;
    /**
     * The instance status.
     */
    readonly instanceStatus?: string;
    /**
     * The instance type.
     */
    readonly instanceType?: string;
    /**
     * The collection of mongodb instances query.
     */
    readonly instances: outputs.mongodb.InstancesInstance[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * Tags.
     */
    readonly tags?: outputs.mongodb.InstancesTag[];
    /**
     * The total count of mongodb instances query.
     */
    readonly totalCount: number;
    readonly updateEndTime?: string;
    readonly updateStartTime?: string;
    /**
     * The vpc ID.
     */
    readonly vpcId?: string;
    /**
     * The zone ID of instance.
     */
    readonly zoneId?: string;
}
/**
 * Use this data source to query detailed information of mongodb instances
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.mongodb.Instances({
 *     instanceId: "mongo-replica-xxx",
 * });
 * ```
 */
export function instancesOutput(args?: InstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<InstancesResult> {
    return pulumi.output(args).apply((a: any) => instances(a, opts))
}

/**
 * A collection of arguments for invoking Instances.
 */
export interface InstancesOutputArgs {
    /**
     * The end time of creation to query.
     */
    createEndTime?: pulumi.Input<string>;
    /**
     * The start time of creation to query.
     */
    createStartTime?: pulumi.Input<string>;
    /**
     * The db engine to query, valid value contains `MongoDB`.
     */
    dbEngine?: pulumi.Input<string>;
    /**
     * The version of db engine to query, valid value contains `MongoDB_4_0`.
     */
    dbEngineVersion?: pulumi.Input<string>;
    /**
     * The instance ID to query.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The instance name to query.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The instance status to query.
     */
    instanceStatus?: pulumi.Input<string>;
    /**
     * The type of instance to query, the valid value contains `ReplicaSet` or `ShardedCluster`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * A Name Regex of DB instance.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.mongodb.InstancesTagArgs>[]>;
    /**
     * The end time of update to query.
     */
    updateEndTime?: pulumi.Input<string>;
    /**
     * The start time of update to query.
     */
    updateStartTime?: pulumi.Input<string>;
    /**
     * The vpc id of instance to query.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The zone ID to query.
     */
    zoneId?: pulumi.Input<string>;
}
