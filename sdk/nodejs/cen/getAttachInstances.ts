// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cen attach instances
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooCen = new volcengine.cen.Cen("fooCen", {
 *     cenName: "acc-test-cen",
 *     description: "acc-test",
 *     projectName: "default",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * const fooAttachInstance = new volcengine.cen.AttachInstance("fooAttachInstance", {
 *     cenId: fooCen.id,
 *     instanceId: fooVpc.id,
 *     instanceRegionId: "cn-beijing",
 *     instanceType: "VPC",
 * });
 * const fooAttachInstances = volcengine.cen.getAttachInstancesOutput({
 *     cenId: fooAttachInstance.cenId,
 * });
 * ```
 */
export function getAttachInstances(args?: GetAttachInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetAttachInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cen/getAttachInstances:getAttachInstances", {
        "cenId": args.cenId,
        "instanceId": args.instanceId,
        "instanceRegionId": args.instanceRegionId,
        "instanceType": args.instanceType,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getAttachInstances.
 */
export interface GetAttachInstancesArgs {
    /**
     * A cen ID.
     */
    cenId?: string;
    /**
     * An instance ID.
     */
    instanceId?: string;
    /**
     * A region id of instance.
     */
    instanceRegionId?: string;
    /**
     * An instance type.
     */
    instanceType?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getAttachInstances.
 */
export interface GetAttachInstancesResult {
    /**
     * The collection of cen attach instance query.
     */
    readonly attachInstances: outputs.cen.GetAttachInstancesAttachInstance[];
    /**
     * The ID of the cen.
     */
    readonly cenId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the instance.
     */
    readonly instanceId?: string;
    /**
     * The region id of the instance.
     */
    readonly instanceRegionId?: string;
    /**
     * The type of the instance.
     */
    readonly instanceType?: string;
    readonly outputFile?: string;
    /**
     * The total count of cen attach instance query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cen attach instances
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooCen = new volcengine.cen.Cen("fooCen", {
 *     cenName: "acc-test-cen",
 *     description: "acc-test",
 *     projectName: "default",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * const fooAttachInstance = new volcengine.cen.AttachInstance("fooAttachInstance", {
 *     cenId: fooCen.id,
 *     instanceId: fooVpc.id,
 *     instanceRegionId: "cn-beijing",
 *     instanceType: "VPC",
 * });
 * const fooAttachInstances = volcengine.cen.getAttachInstancesOutput({
 *     cenId: fooAttachInstance.cenId,
 * });
 * ```
 */
export function getAttachInstancesOutput(args?: GetAttachInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAttachInstancesResult> {
    return pulumi.output(args).apply((a: any) => getAttachInstances(a, opts))
}

/**
 * A collection of arguments for invoking getAttachInstances.
 */
export interface GetAttachInstancesOutputArgs {
    /**
     * A cen ID.
     */
    cenId?: pulumi.Input<string>;
    /**
     * An instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * A region id of instance.
     */
    instanceRegionId?: pulumi.Input<string>;
    /**
     * An instance type.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
