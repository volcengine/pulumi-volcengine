// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of cens
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cen.Cens({
 *     ids: ["cen-2bzrl3srxsv0g2dx0efyoojn3"],
 * });
 * ```
 */
export function cens(args?: CensArgs, opts?: pulumi.InvokeOptions): Promise<CensResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:cen/cens:Cens", {
        "cenNames": args.cenNames,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking Cens.
 */
export interface CensArgs {
    /**
     * A list of cen names.
     */
    cenNames?: string[];
    /**
     * A list of cen IDs.
     */
    ids?: string[];
    /**
     * A Name Regex of cen.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * Tags.
     */
    tags?: inputs.cen.CensTag[];
}

/**
 * A collection of values returned by Cens.
 */
export interface CensResult {
    readonly cenNames?: string[];
    /**
     * The collection of cen query.
     */
    readonly cens: outputs.cen.CensCen[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * Tags.
     */
    readonly tags?: outputs.cen.CensTag[];
    /**
     * The total count of cen query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of cens
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.cen.Cens({
 *     ids: ["cen-2bzrl3srxsv0g2dx0efyoojn3"],
 * });
 * ```
 */
export function censOutput(args?: CensOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<CensResult> {
    return pulumi.output(args).apply((a: any) => cens(a, opts))
}

/**
 * A collection of arguments for invoking Cens.
 */
export interface CensOutputArgs {
    /**
     * A list of cen names.
     */
    cenNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of cen IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of cen.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.cen.CensTagArgs>[]>;
}
