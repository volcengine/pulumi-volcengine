// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.cen.BandwidthPackage("foo", {
 *     bandwidth: 32,
 *     billingType: "PrePaid",
 *     cenBandwidthPackageName: "tf-test",
 *     description: "tf-test1",
 *     localGeographicRegionSetId: "China",
 *     peerGeographicRegionSetId: "China",
 *     period: 1,
 *     periodUnit: "Year",
 *     projectName: "default",
 * });
 * ```
 *
 * ## Import
 *
 * CenBandwidthPackage can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:cen/bandwidthPackage:BandwidthPackage default cbp-4c2zaavbvh5f42****
 * ```
 */
export class BandwidthPackage extends pulumi.CustomResource {
    /**
     * Get an existing BandwidthPackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BandwidthPackageState, opts?: pulumi.CustomResourceOptions): BandwidthPackage {
        return new BandwidthPackage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:cen/bandwidthPackage:BandwidthPackage';

    /**
     * Returns true if the given object is an instance of BandwidthPackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BandwidthPackage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BandwidthPackage.__pulumiType;
    }

    /**
     * The account ID of the cen bandwidth package.
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * The bandwidth of the cen bandwidth package. Value: 2~10000.
     */
    public readonly bandwidth!: pulumi.Output<number>;
    /**
     * The billing type of the cen bandwidth package. Only support `PrePaid` and default value is `PrePaid`. Terraform will
     * only remove the PrePaid cen bandwidth package from the state file, not actually remove.
     */
    public readonly billingType!: pulumi.Output<string | undefined>;
    /**
     * The business status of the cen bandwidth package.
     */
    public /*out*/ readonly businessStatus!: pulumi.Output<string>;
    /**
     * The ID of the cen bandwidth package.
     */
    public /*out*/ readonly cenBandwidthPackageId!: pulumi.Output<string>;
    /**
     * The name of the cen bandwidth package.
     */
    public readonly cenBandwidthPackageName!: pulumi.Output<string>;
    /**
     * The cen IDs of the bandwidth package.
     */
    public /*out*/ readonly cenIds!: pulumi.Output<string[]>;
    /**
     * The create time of the cen bandwidth package.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The deleted time of the cen bandwidth package.
     */
    public /*out*/ readonly deletedTime!: pulumi.Output<string>;
    /**
     * The description of the cen bandwidth package.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The expired time of the cen bandwidth package.
     */
    public /*out*/ readonly expiredTime!: pulumi.Output<string>;
    /**
     * The local geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
     */
    public readonly localGeographicRegionSetId!: pulumi.Output<string | undefined>;
    /**
     * The peer geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
     */
    public readonly peerGeographicRegionSetId!: pulumi.Output<string | undefined>;
    /**
     * The period of the cen bandwidth package. Default value is 1.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * The period unit of the cen bandwidth package. Value: `Month`, `Year`. Default value is `Month`.
     */
    public readonly periodUnit!: pulumi.Output<string | undefined>;
    /**
     * The ProjectName of the cen bandwidth package.
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * The remain bandwidth of the cen bandwidth package.
     */
    public /*out*/ readonly remainingBandwidth!: pulumi.Output<number>;
    /**
     * The status of the cen bandwidth package.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.cen.BandwidthPackageTag[] | undefined>;
    /**
     * The update time of the cen bandwidth package.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a BandwidthPackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BandwidthPackageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BandwidthPackageArgs | BandwidthPackageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BandwidthPackageState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["billingType"] = state ? state.billingType : undefined;
            resourceInputs["businessStatus"] = state ? state.businessStatus : undefined;
            resourceInputs["cenBandwidthPackageId"] = state ? state.cenBandwidthPackageId : undefined;
            resourceInputs["cenBandwidthPackageName"] = state ? state.cenBandwidthPackageName : undefined;
            resourceInputs["cenIds"] = state ? state.cenIds : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["deletedTime"] = state ? state.deletedTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expiredTime"] = state ? state.expiredTime : undefined;
            resourceInputs["localGeographicRegionSetId"] = state ? state.localGeographicRegionSetId : undefined;
            resourceInputs["peerGeographicRegionSetId"] = state ? state.peerGeographicRegionSetId : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodUnit"] = state ? state.periodUnit : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["remainingBandwidth"] = state ? state.remainingBandwidth : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as BandwidthPackageArgs | undefined;
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["billingType"] = args ? args.billingType : undefined;
            resourceInputs["cenBandwidthPackageName"] = args ? args.cenBandwidthPackageName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["localGeographicRegionSetId"] = args ? args.localGeographicRegionSetId : undefined;
            resourceInputs["peerGeographicRegionSetId"] = args ? args.peerGeographicRegionSetId : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["periodUnit"] = args ? args.periodUnit : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["businessStatus"] = undefined /*out*/;
            resourceInputs["cenBandwidthPackageId"] = undefined /*out*/;
            resourceInputs["cenIds"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["deletedTime"] = undefined /*out*/;
            resourceInputs["expiredTime"] = undefined /*out*/;
            resourceInputs["remainingBandwidth"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BandwidthPackage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BandwidthPackage resources.
 */
export interface BandwidthPackageState {
    /**
     * The account ID of the cen bandwidth package.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The bandwidth of the cen bandwidth package. Value: 2~10000.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The billing type of the cen bandwidth package. Only support `PrePaid` and default value is `PrePaid`. Terraform will
     * only remove the PrePaid cen bandwidth package from the state file, not actually remove.
     */
    billingType?: pulumi.Input<string>;
    /**
     * The business status of the cen bandwidth package.
     */
    businessStatus?: pulumi.Input<string>;
    /**
     * The ID of the cen bandwidth package.
     */
    cenBandwidthPackageId?: pulumi.Input<string>;
    /**
     * The name of the cen bandwidth package.
     */
    cenBandwidthPackageName?: pulumi.Input<string>;
    /**
     * The cen IDs of the bandwidth package.
     */
    cenIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The create time of the cen bandwidth package.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The deleted time of the cen bandwidth package.
     */
    deletedTime?: pulumi.Input<string>;
    /**
     * The description of the cen bandwidth package.
     */
    description?: pulumi.Input<string>;
    /**
     * The expired time of the cen bandwidth package.
     */
    expiredTime?: pulumi.Input<string>;
    /**
     * The local geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
     */
    localGeographicRegionSetId?: pulumi.Input<string>;
    /**
     * The peer geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
     */
    peerGeographicRegionSetId?: pulumi.Input<string>;
    /**
     * The period of the cen bandwidth package. Default value is 1.
     */
    period?: pulumi.Input<number>;
    /**
     * The period unit of the cen bandwidth package. Value: `Month`, `Year`. Default value is `Month`.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The ProjectName of the cen bandwidth package.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The remain bandwidth of the cen bandwidth package.
     */
    remainingBandwidth?: pulumi.Input<number>;
    /**
     * The status of the cen bandwidth package.
     */
    status?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.cen.BandwidthPackageTag>[]>;
    /**
     * The update time of the cen bandwidth package.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BandwidthPackage resource.
 */
export interface BandwidthPackageArgs {
    /**
     * The bandwidth of the cen bandwidth package. Value: 2~10000.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The billing type of the cen bandwidth package. Only support `PrePaid` and default value is `PrePaid`. Terraform will
     * only remove the PrePaid cen bandwidth package from the state file, not actually remove.
     */
    billingType?: pulumi.Input<string>;
    /**
     * The name of the cen bandwidth package.
     */
    cenBandwidthPackageName?: pulumi.Input<string>;
    /**
     * The description of the cen bandwidth package.
     */
    description?: pulumi.Input<string>;
    /**
     * The local geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
     */
    localGeographicRegionSetId?: pulumi.Input<string>;
    /**
     * The peer geographic region set id of the cen bandwidth package. Valid value: `China`, `Asia`.
     */
    peerGeographicRegionSetId?: pulumi.Input<string>;
    /**
     * The period of the cen bandwidth package. Default value is 1.
     */
    period?: pulumi.Input<number>;
    /**
     * The period unit of the cen bandwidth package. Value: `Month`, `Year`. Default value is `Month`.
     */
    periodUnit?: pulumi.Input<string>;
    /**
     * The ProjectName of the cen bandwidth package.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.cen.BandwidthPackageTag>[]>;
}
