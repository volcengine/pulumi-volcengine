// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage cen service route entry
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.cen.ServiceRouteEntry("foo", {
 *     cenId: "cen-12ar8uclj68sg17q7y20v9gil",
 *     description: "test-tf",
 *     destinationCidrBlock: "100.64.0.0/11",
 *     publishMode: "Custom",
 *     publishToInstances: [
 *         {
 *             instanceId: "vpc-2fepz36a5ra4g59gp67w197xo",
 *             instanceRegionId: "cn-beijing",
 *             instanceType: "VPC",
 *         },
 *         {
 *             instanceId: "vpc-im67wjcikxkw8gbssx8ufpj8",
 *             instanceRegionId: "cn-beijing",
 *             instanceType: "VPC",
 *         },
 *     ],
 *     serviceRegionId: "cn-beijing",
 *     serviceVpcId: "vpc-im67wjcikxkw8gbssx8ufpj8",
 * });
 * const foo1 = new volcengine.cen.ServiceRouteEntry("foo1", {
 *     cenId: "cen-12ar8uclj68sg17q7y20v9gil",
 *     description: "test-tf",
 *     destinationCidrBlock: "100.64.0.0/10",
 *     publishMode: "Custom",
 *     publishToInstances: [
 *         {
 *             instanceId: "vpc-2fepz36a5ra4g59gp67w197xo",
 *             instanceRegionId: "cn-beijing",
 *             instanceType: "VPC",
 *         },
 *         {
 *             instanceId: "vpc-im67wjcikxkw8gbssx8ufpj8",
 *             instanceRegionId: "cn-beijing",
 *             instanceType: "VPC",
 *         },
 *     ],
 *     serviceRegionId: "cn-beijing",
 *     serviceVpcId: "vpc-im67wjcikxkw8gbssx8ufpj8",
 * });
 * const foo2 = new volcengine.cen.ServiceRouteEntry("foo2", {
 *     cenId: "cen-12ar8uclj68sg17q7y20v9gil",
 *     description: "test-tf",
 *     destinationCidrBlock: "100.64.0.0/12",
 *     publishMode: "Custom",
 *     publishToInstances: [
 *         {
 *             instanceId: "vpc-2fepz36a5ra4g59gp67w197xo",
 *             instanceRegionId: "cn-beijing",
 *             instanceType: "VPC",
 *         },
 *         {
 *             instanceId: "vpc-im67wjcikxkw8gbssx8ufpj8",
 *             instanceRegionId: "cn-beijing",
 *             instanceType: "VPC",
 *         },
 *     ],
 *     serviceRegionId: "cn-beijing",
 *     serviceVpcId: "vpc-im67wjcikxkw8gbssx8ufpj8",
 * });
 * ```
 *
 * ## Import
 *
 * CenServiceRouteEntry can be imported using the CenId:DestinationCidrBlock:ServiceRegionId:ServiceVpcId, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:cen/serviceRouteEntry:ServiceRouteEntry default cen-2nim00ybaylts7trquyzt****:100.XX.XX.0/24:cn-beijing:vpc-3rlkeggyn6tc010exd32q****
 * ```
 */
export class ServiceRouteEntry extends pulumi.CustomResource {
    /**
     * Get an existing ServiceRouteEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceRouteEntryState, opts?: pulumi.CustomResourceOptions): ServiceRouteEntry {
        return new ServiceRouteEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:cen/serviceRouteEntry:ServiceRouteEntry';

    /**
     * Returns true if the given object is an instance of ServiceRouteEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceRouteEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceRouteEntry.__pulumiType;
    }

    /**
     * The cen ID of the cen service route entry.
     */
    public readonly cenId!: pulumi.Output<string>;
    /**
     * The create time of the cen service route entry.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The description of the cen service route entry.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The destination cidr block of the cen service route entry.
     */
    public readonly destinationCidrBlock!: pulumi.Output<string>;
    /**
     * Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
     */
    public readonly publishMode!: pulumi.Output<string | undefined>;
    /**
     * The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
     */
    public readonly publishToInstances!: pulumi.Output<outputs.cen.ServiceRouteEntryPublishToInstance[] | undefined>;
    /**
     * The service region id of the cen service route entry.
     */
    public readonly serviceRegionId!: pulumi.Output<string>;
    /**
     * The service VPC id of the cen service route entry.
     */
    public readonly serviceVpcId!: pulumi.Output<string>;
    /**
     * The status of the cen service route entry.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ServiceRouteEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceRouteEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceRouteEntryArgs | ServiceRouteEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceRouteEntryState | undefined;
            resourceInputs["cenId"] = state ? state.cenId : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationCidrBlock"] = state ? state.destinationCidrBlock : undefined;
            resourceInputs["publishMode"] = state ? state.publishMode : undefined;
            resourceInputs["publishToInstances"] = state ? state.publishToInstances : undefined;
            resourceInputs["serviceRegionId"] = state ? state.serviceRegionId : undefined;
            resourceInputs["serviceVpcId"] = state ? state.serviceVpcId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ServiceRouteEntryArgs | undefined;
            if ((!args || args.cenId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cenId'");
            }
            if ((!args || args.destinationCidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationCidrBlock'");
            }
            if ((!args || args.serviceRegionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceRegionId'");
            }
            if ((!args || args.serviceVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceVpcId'");
            }
            resourceInputs["cenId"] = args ? args.cenId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationCidrBlock"] = args ? args.destinationCidrBlock : undefined;
            resourceInputs["publishMode"] = args ? args.publishMode : undefined;
            resourceInputs["publishToInstances"] = args ? args.publishToInstances : undefined;
            resourceInputs["serviceRegionId"] = args ? args.serviceRegionId : undefined;
            resourceInputs["serviceVpcId"] = args ? args.serviceVpcId : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceRouteEntry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceRouteEntry resources.
 */
export interface ServiceRouteEntryState {
    /**
     * The cen ID of the cen service route entry.
     */
    cenId?: pulumi.Input<string>;
    /**
     * The create time of the cen service route entry.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The description of the cen service route entry.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination cidr block of the cen service route entry.
     */
    destinationCidrBlock?: pulumi.Input<string>;
    /**
     * Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
     */
    publishMode?: pulumi.Input<string>;
    /**
     * The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
     */
    publishToInstances?: pulumi.Input<pulumi.Input<inputs.cen.ServiceRouteEntryPublishToInstance>[]>;
    /**
     * The service region id of the cen service route entry.
     */
    serviceRegionId?: pulumi.Input<string>;
    /**
     * The service VPC id of the cen service route entry.
     */
    serviceVpcId?: pulumi.Input<string>;
    /**
     * The status of the cen service route entry.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceRouteEntry resource.
 */
export interface ServiceRouteEntryArgs {
    /**
     * The cen ID of the cen service route entry.
     */
    cenId: pulumi.Input<string>;
    /**
     * The description of the cen service route entry.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination cidr block of the cen service route entry.
     */
    destinationCidrBlock: pulumi.Input<string>;
    /**
     * Publishing scope of cloud service access routes. Valid values are `LocalDCGW`(default), `Custom`.
     */
    publishMode?: pulumi.Input<string>;
    /**
     * The publish instances. A maximum of 100 can be uploaded in one request. This field needs to be filled in when the `publishMode` is `Custom`.
     */
    publishToInstances?: pulumi.Input<pulumi.Input<inputs.cen.ServiceRouteEntryPublishToInstance>[]>;
    /**
     * The service region id of the cen service route entry.
     */
    serviceRegionId: pulumi.Input<string>;
    /**
     * The service VPC id of the cen service route entry.
     */
    serviceVpcId: pulumi.Input<string>;
}
