// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dnat entries
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.nat.DnatEntries({});
 * ```
 */
export function dnatEntries(args?: DnatEntriesArgs, opts?: pulumi.InvokeOptions): Promise<DnatEntriesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:nat/dnatEntries:DnatEntries", {
        "dnatEntryName": args.dnatEntryName,
        "externalIp": args.externalIp,
        "externalPort": args.externalPort,
        "ids": args.ids,
        "internalIp": args.internalIp,
        "internalPort": args.internalPort,
        "natGatewayId": args.natGatewayId,
        "outputFile": args.outputFile,
        "protocol": args.protocol,
    }, opts);
}

/**
 * A collection of arguments for invoking DnatEntries.
 */
export interface DnatEntriesArgs {
    /**
     * The name of the DNAT entry.
     */
    dnatEntryName?: string;
    /**
     * Provides the public IP address for public network access.
     */
    externalIp?: string;
    /**
     * The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
     */
    externalPort?: string;
    /**
     * A list of DNAT entry ids.
     */
    ids?: string[];
    /**
     * Provides the internal IP address.
     */
    internalIp?: string;
    /**
     * The port or port segment on which the cloud server instance provides services to the public network.
     */
    internalPort?: string;
    /**
     * The id of the NAT gateway.
     */
    natGatewayId?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The network protocol.
     */
    protocol?: string;
}

/**
 * A collection of values returned by DnatEntries.
 */
export interface DnatEntriesResult {
    /**
     * List of DNAT entries.
     */
    readonly dnatEntries: outputs.nat.DnatEntriesDnatEntry[];
    /**
     * The name of the DNAT entry.
     */
    readonly dnatEntryName?: string;
    /**
     * Provides the public IP address for public network access.
     */
    readonly externalIp?: string;
    /**
     * The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
     */
    readonly externalPort?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    /**
     * Provides the internal IP address.
     */
    readonly internalIp?: string;
    /**
     * The port or port segment on which the cloud server instance provides services to the public network.
     */
    readonly internalPort?: string;
    /**
     * The ID of the NAT gateway.
     */
    readonly natGatewayId?: string;
    readonly outputFile?: string;
    /**
     * The network protocol.
     */
    readonly protocol?: string;
    /**
     * The total count of snat entries query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of dnat entries
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.nat.DnatEntries({});
 * ```
 */
export function dnatEntriesOutput(args?: DnatEntriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<DnatEntriesResult> {
    return pulumi.output(args).apply((a: any) => dnatEntries(a, opts))
}

/**
 * A collection of arguments for invoking DnatEntries.
 */
export interface DnatEntriesOutputArgs {
    /**
     * The name of the DNAT entry.
     */
    dnatEntryName?: pulumi.Input<string>;
    /**
     * Provides the public IP address for public network access.
     */
    externalIp?: pulumi.Input<string>;
    /**
     * The port or port segment that receives requests from the public network. If InternalPort is passed into the port segment, ExternalPort must also be passed into the port segment.
     */
    externalPort?: pulumi.Input<string>;
    /**
     * A list of DNAT entry ids.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Provides the internal IP address.
     */
    internalIp?: pulumi.Input<string>;
    /**
     * The port or port segment on which the cloud server instance provides services to the public network.
     */
    internalPort?: pulumi.Input<string>;
    /**
     * The id of the NAT gateway.
     */
    natGatewayId?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The network protocol.
     */
    protocol?: pulumi.Input<string>;
}
