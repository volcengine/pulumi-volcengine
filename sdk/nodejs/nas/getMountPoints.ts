// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of nas mount points
 */
export function getMountPoints(args: GetMountPointsArgs, opts?: pulumi.InvokeOptions): Promise<GetMountPointsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:nas/getMountPoints:getMountPoints", {
        "fileSystemId": args.fileSystemId,
        "mountPointId": args.mountPointId,
        "mountPointName": args.mountPointName,
        "outputFile": args.outputFile,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMountPoints.
 */
export interface GetMountPointsArgs {
    /**
     * The id of the file system.
     */
    fileSystemId: string;
    /**
     * The id of the mount point.
     */
    mountPointId?: string;
    /**
     * The name of the mount point.
     */
    mountPointName?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The id of the vpc.
     */
    vpcId?: string;
}

/**
 * A collection of values returned by getMountPoints.
 */
export interface GetMountPointsResult {
    /**
     * The id of the file system.
     */
    readonly fileSystemId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The id of the mount point.
     */
    readonly mountPointId?: string;
    /**
     * The name of the mount point.
     */
    readonly mountPointName?: string;
    /**
     * The list of the mount point.
     */
    readonly mountPoints: outputs.nas.GetMountPointsMountPoint[];
    readonly outputFile?: string;
    /**
     * The total count of nas mount points query.
     */
    readonly totalCount: number;
    /**
     * The id of the vpc.
     */
    readonly vpcId?: string;
}
/**
 * Use this data source to query detailed information of nas mount points
 */
export function getMountPointsOutput(args: GetMountPointsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMountPointsResult> {
    return pulumi.output(args).apply((a: any) => getMountPoints(a, opts))
}

/**
 * A collection of arguments for invoking getMountPoints.
 */
export interface GetMountPointsOutputArgs {
    /**
     * The id of the file system.
     */
    fileSystemId: pulumi.Input<string>;
    /**
     * The id of the mount point.
     */
    mountPointId?: pulumi.Input<string>;
    /**
     * The name of the mount point.
     */
    mountPointName?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The id of the vpc.
     */
    vpcId?: pulumi.Input<string>;
}
