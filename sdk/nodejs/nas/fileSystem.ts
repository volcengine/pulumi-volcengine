// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage nas file system
 * ## Import
 *
 * NasFileSystem can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:nas/fileSystem:FileSystem default enas-cnbjd3879745****
 * ```
 */
export class FileSystem extends pulumi.CustomResource {
    /**
     * Get an existing FileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileSystemState, opts?: pulumi.CustomResourceOptions): FileSystem {
        return new FileSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:nas/fileSystem:FileSystem';

    /**
     * Returns true if the given object is an instance of FileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FileSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FileSystem.__pulumiType;
    }

    /**
     * The capacity of the nas file system. Unit: GiB.
     */
    public readonly capacity!: pulumi.Output<number>;
    /**
     * The charge type of the nas file system.
     */
    public /*out*/ readonly chargeType!: pulumi.Output<string>;
    /**
     * The create time of the nas file system.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of the nas file system.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the nas file system.
     */
    public readonly fileSystemName!: pulumi.Output<string>;
    /**
     * The type of the nas file system.
     */
    public /*out*/ readonly fileSystemType!: pulumi.Output<string>;
    /**
     * The project name of the nas file system.
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * The protocol type of the nas file system.
     */
    public /*out*/ readonly protocolType!: pulumi.Output<string>;
    /**
     * The region id of the nas file system.
     */
    public /*out*/ readonly regionId!: pulumi.Output<string>;
    /**
     * The snapshot count of the nas file system.
     */
    public /*out*/ readonly snapshotCount!: pulumi.Output<number>;
    /**
     * The snapshot id when creating the nas file system. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly snapshotId!: pulumi.Output<string | undefined>;
    /**
     * The status of the nas file system.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The storage type of the nas file system.
     */
    public /*out*/ readonly storageType!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.nas.FileSystemTag[] | undefined>;
    /**
     * The update time of the nas file system.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * The version of the nas file system.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;
    /**
     * The zone id of the nas file system.
     */
    public readonly zoneId!: pulumi.Output<string>;
    /**
     * The zone name of the nas file system.
     */
    public /*out*/ readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a FileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FileSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileSystemArgs | FileSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileSystemState | undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fileSystemName"] = state ? state.fileSystemName : undefined;
            resourceInputs["fileSystemType"] = state ? state.fileSystemType : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["protocolType"] = state ? state.protocolType : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["snapshotCount"] = state ? state.snapshotCount : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["storageType"] = state ? state.storageType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as FileSystemArgs | undefined;
            if ((!args || args.capacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacity'");
            }
            if ((!args || args.fileSystemName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemName'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fileSystemName"] = args ? args.fileSystemName : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["chargeType"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["fileSystemType"] = undefined /*out*/;
            resourceInputs["protocolType"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["snapshotCount"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storageType"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["zoneName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FileSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FileSystem resources.
 */
export interface FileSystemState {
    /**
     * The capacity of the nas file system. Unit: GiB.
     */
    capacity?: pulumi.Input<number>;
    /**
     * The charge type of the nas file system.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The create time of the nas file system.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the nas file system.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the nas file system.
     */
    fileSystemName?: pulumi.Input<string>;
    /**
     * The type of the nas file system.
     */
    fileSystemType?: pulumi.Input<string>;
    /**
     * The project name of the nas file system.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The protocol type of the nas file system.
     */
    protocolType?: pulumi.Input<string>;
    /**
     * The region id of the nas file system.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The snapshot count of the nas file system.
     */
    snapshotCount?: pulumi.Input<number>;
    /**
     * The snapshot id when creating the nas file system. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The status of the nas file system.
     */
    status?: pulumi.Input<string>;
    /**
     * The storage type of the nas file system.
     */
    storageType?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.nas.FileSystemTag>[]>;
    /**
     * The update time of the nas file system.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * The version of the nas file system.
     */
    version?: pulumi.Input<string>;
    /**
     * The zone id of the nas file system.
     */
    zoneId?: pulumi.Input<string>;
    /**
     * The zone name of the nas file system.
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FileSystem resource.
 */
export interface FileSystemArgs {
    /**
     * The capacity of the nas file system. Unit: GiB.
     */
    capacity: pulumi.Input<number>;
    /**
     * The description of the nas file system.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the nas file system.
     */
    fileSystemName: pulumi.Input<string>;
    /**
     * The project name of the nas file system.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The snapshot id when creating the nas file system. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.nas.FileSystemTag>[]>;
    /**
     * The zone id of the nas file system.
     */
    zoneId: pulumi.Input<string>;
}
