// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vepfs file system
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooSubnet = new volcengine.vpc.Subnet("fooSubnet", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: "cn-beijing-a",
 *     vpcId: fooVpc.id,
 * });
 * const fooFileSystem = new volcengine.vepfs.FileSystem("fooFileSystem", {
 *     fileSystemName: "acc-test-file-system",
 *     subnetId: fooSubnet.id,
 *     storeType: "Advance_100",
 *     description: "tf-test",
 *     capacity: 12,
 *     project: "default",
 *     enableRestripe: false,
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * VepfsFileSystem can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:vepfs/fileSystem:FileSystem default resource_id
 * ```
 */
export class FileSystem extends pulumi.CustomResource {
    /**
     * Get an existing FileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileSystemState, opts?: pulumi.CustomResourceOptions): FileSystem {
        return new FileSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vepfs/fileSystem:FileSystem';

    /**
     * Returns true if the given object is an instance of FileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FileSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FileSystem.__pulumiType;
    }

    /**
     * The id of the account.
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * The bandwidth info of the vepfs file system.
     */
    public /*out*/ readonly bandwidth!: pulumi.Output<number>;
    /**
     * The capacity of the vepfs file system.
     */
    public readonly capacity!: pulumi.Output<number>;
    /**
     * The charge status of the vepfs file system.
     */
    public /*out*/ readonly chargeStatus!: pulumi.Output<string>;
    /**
     * The charge type of the vepfs file system.
     */
    public /*out*/ readonly chargeType!: pulumi.Output<string>;
    /**
     * The create time of the vepfs file system.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description info of the vepfs file system.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether to enable data balance after capacity expansion. This filed is valid only when expanding capacity.
     */
    public readonly enableRestripe!: pulumi.Output<boolean | undefined>;
    /**
     * The expire time of the vepfs file system.
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    /**
     * The name of the vepfs file system.
     */
    public readonly fileSystemName!: pulumi.Output<string>;
    /**
     * The type of the vepfs file system.
     */
    public /*out*/ readonly fileSystemType!: pulumi.Output<string>;
    /**
     * The free time of the vepfs file system.
     */
    public /*out*/ readonly freeTime!: pulumi.Output<string>;
    /**
     * The last modify time of the vepfs file system.
     */
    public /*out*/ readonly lastModifyTime!: pulumi.Output<string>;
    /**
     * The project of the vepfs file system.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The protocol type of the vepfs file system.
     */
    public /*out*/ readonly protocolType!: pulumi.Output<string>;
    /**
     * The id of the region.
     */
    public /*out*/ readonly regionId!: pulumi.Output<string>;
    /**
     * The status of the vepfs file system.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The stop service time of the vepfs file system.
     */
    public /*out*/ readonly stopServiceTime!: pulumi.Output<string>;
    /**
     * The store type of the vepfs file system. Valid values: `Advance_100`, `Performance`, `Intelligent_Computing`.
     */
    public readonly storeType!: pulumi.Output<string>;
    /**
     * The store type cn name of the vepfs file system.
     */
    public /*out*/ readonly storeTypeCn!: pulumi.Output<string>;
    /**
     * The subnet id of the vepfs file system.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.vepfs.FileSystemTag[] | undefined>;
    /**
     * The version info of the vepfs file system.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;
    /**
     * The id of the zone.
     */
    public /*out*/ readonly zoneId!: pulumi.Output<string>;
    /**
     * The name of the zone.
     */
    public /*out*/ readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a FileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FileSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileSystemArgs | FileSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileSystemState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["chargeStatus"] = state ? state.chargeStatus : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableRestripe"] = state ? state.enableRestripe : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["fileSystemName"] = state ? state.fileSystemName : undefined;
            resourceInputs["fileSystemType"] = state ? state.fileSystemType : undefined;
            resourceInputs["freeTime"] = state ? state.freeTime : undefined;
            resourceInputs["lastModifyTime"] = state ? state.lastModifyTime : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["protocolType"] = state ? state.protocolType : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["stopServiceTime"] = state ? state.stopServiceTime : undefined;
            resourceInputs["storeType"] = state ? state.storeType : undefined;
            resourceInputs["storeTypeCn"] = state ? state.storeTypeCn : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as FileSystemArgs | undefined;
            if ((!args || args.capacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacity'");
            }
            if ((!args || args.fileSystemName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemName'");
            }
            if ((!args || args.storeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storeType'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableRestripe"] = args ? args.enableRestripe : undefined;
            resourceInputs["fileSystemName"] = args ? args.fileSystemName : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["storeType"] = args ? args.storeType : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["bandwidth"] = undefined /*out*/;
            resourceInputs["chargeStatus"] = undefined /*out*/;
            resourceInputs["chargeType"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["fileSystemType"] = undefined /*out*/;
            resourceInputs["freeTime"] = undefined /*out*/;
            resourceInputs["lastModifyTime"] = undefined /*out*/;
            resourceInputs["protocolType"] = undefined /*out*/;
            resourceInputs["regionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["stopServiceTime"] = undefined /*out*/;
            resourceInputs["storeTypeCn"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["zoneId"] = undefined /*out*/;
            resourceInputs["zoneName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FileSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FileSystem resources.
 */
export interface FileSystemState {
    /**
     * The id of the account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The bandwidth info of the vepfs file system.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The capacity of the vepfs file system.
     */
    capacity?: pulumi.Input<number>;
    /**
     * The charge status of the vepfs file system.
     */
    chargeStatus?: pulumi.Input<string>;
    /**
     * The charge type of the vepfs file system.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The create time of the vepfs file system.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description info of the vepfs file system.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable data balance after capacity expansion. This filed is valid only when expanding capacity.
     */
    enableRestripe?: pulumi.Input<boolean>;
    /**
     * The expire time of the vepfs file system.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * The name of the vepfs file system.
     */
    fileSystemName?: pulumi.Input<string>;
    /**
     * The type of the vepfs file system.
     */
    fileSystemType?: pulumi.Input<string>;
    /**
     * The free time of the vepfs file system.
     */
    freeTime?: pulumi.Input<string>;
    /**
     * The last modify time of the vepfs file system.
     */
    lastModifyTime?: pulumi.Input<string>;
    /**
     * The project of the vepfs file system.
     */
    project?: pulumi.Input<string>;
    /**
     * The protocol type of the vepfs file system.
     */
    protocolType?: pulumi.Input<string>;
    /**
     * The id of the region.
     */
    regionId?: pulumi.Input<string>;
    /**
     * The status of the vepfs file system.
     */
    status?: pulumi.Input<string>;
    /**
     * The stop service time of the vepfs file system.
     */
    stopServiceTime?: pulumi.Input<string>;
    /**
     * The store type of the vepfs file system. Valid values: `Advance_100`, `Performance`, `Intelligent_Computing`.
     */
    storeType?: pulumi.Input<string>;
    /**
     * The store type cn name of the vepfs file system.
     */
    storeTypeCn?: pulumi.Input<string>;
    /**
     * The subnet id of the vepfs file system.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vepfs.FileSystemTag>[]>;
    /**
     * The version info of the vepfs file system.
     */
    version?: pulumi.Input<string>;
    /**
     * The id of the zone.
     */
    zoneId?: pulumi.Input<string>;
    /**
     * The name of the zone.
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FileSystem resource.
 */
export interface FileSystemArgs {
    /**
     * The capacity of the vepfs file system.
     */
    capacity: pulumi.Input<number>;
    /**
     * The description info of the vepfs file system.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable data balance after capacity expansion. This filed is valid only when expanding capacity.
     */
    enableRestripe?: pulumi.Input<boolean>;
    /**
     * The name of the vepfs file system.
     */
    fileSystemName: pulumi.Input<string>;
    /**
     * The project of the vepfs file system.
     */
    project?: pulumi.Input<string>;
    /**
     * The store type of the vepfs file system. Valid values: `Advance_100`, `Performance`, `Intelligent_Computing`.
     */
    storeType: pulumi.Input<string>;
    /**
     * The subnet id of the vepfs file system.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.vepfs.FileSystemTag>[]>;
}
