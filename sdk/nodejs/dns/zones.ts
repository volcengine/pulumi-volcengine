// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dns zones
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.dns.getZones({
 *     tags: [{
 *         key: "xx",
 *         values: ["xx"],
 *     }],
 * });
 * ```
 */
/** @deprecated volcengine.dns.Zones has been deprecated in favor of volcengine.dns.getZones */
export function zones(args?: ZonesArgs, opts?: pulumi.InvokeOptions): Promise<ZonesResult> {
    pulumi.log.warn("zones is deprecated: volcengine.dns.Zones has been deprecated in favor of volcengine.dns.getZones")
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:dns/zones:Zones", {
        "key": args.key,
        "nameRegex": args.nameRegex,
        "orderKey": args.orderKey,
        "outputFile": args.outputFile,
        "projectName": args.projectName,
        "searchMode": args.searchMode,
        "searchOrder": args.searchOrder,
        "stage": args.stage,
        "tags": args.tags,
        "tradeCode": args.tradeCode,
    }, opts);
}

/**
 * A collection of arguments for invoking Zones.
 */
export interface ZonesArgs {
    /**
     * The keyword included in domains.
     */
    key?: string;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * The key for sorting the results.
     */
    orderKey?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The ProjectName of the domain.
     */
    projectName?: string;
    /**
     * The matching mode for the Key parameter.
     */
    searchMode?: string;
    /**
     * The sorting order of the results.
     */
    searchOrder?: string;
    /**
     * The status of the domain.
     */
    stage?: string;
    /**
     * Tags.
     */
    tags?: inputs.dns.ZonesTag[];
    /**
     * The edition of the domain.
     */
    tradeCode?: string;
}

/**
 * A collection of values returned by Zones.
 */
export interface ZonesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Key of Tags.
     */
    readonly key?: string;
    readonly nameRegex?: string;
    readonly orderKey?: string;
    readonly outputFile?: string;
    /**
     * The ProjectName of the domain.
     */
    readonly projectName?: string;
    readonly searchMode?: string;
    readonly searchOrder?: string;
    /**
     * The status of the domain.
     */
    readonly stage?: string;
    /**
     * Tags.
     */
    readonly tags?: outputs.dns.ZonesTag[];
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The edition of the domain.
     */
    readonly tradeCode?: string;
    /**
     * The collection of query.
     */
    readonly zones: outputs.dns.ZonesZone[];
}
/**
 * Use this data source to query detailed information of dns zones
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.dns.getZones({
 *     tags: [{
 *         key: "xx",
 *         values: ["xx"],
 *     }],
 * });
 * ```
 */
/** @deprecated volcengine.dns.Zones has been deprecated in favor of volcengine.dns.getZones */
export function zonesOutput(args?: ZonesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ZonesResult> {
    return pulumi.output(args).apply((a: any) => zones(a, opts))
}

/**
 * A collection of arguments for invoking Zones.
 */
export interface ZonesOutputArgs {
    /**
     * The keyword included in domains.
     */
    key?: pulumi.Input<string>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * The key for sorting the results.
     */
    orderKey?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ProjectName of the domain.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The matching mode for the Key parameter.
     */
    searchMode?: pulumi.Input<string>;
    /**
     * The sorting order of the results.
     */
    searchOrder?: pulumi.Input<string>;
    /**
     * The status of the domain.
     */
    stage?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.dns.ZonesTagArgs>[]>;
    /**
     * The edition of the domain.
     */
    tradeCode?: pulumi.Input<string>;
}
