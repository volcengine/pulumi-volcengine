// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of dns record sets
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const fooZones = volcengine.dns.getZones({
 *     key: "xxx",
 *     searchMode: "xx",
 * });
 * const fooRecordSets = fooZones.then(fooZones => volcengine.dns.getRecordSets({
 *     zid: fooZones.zones?.[0]?.zid,
 * }));
 * ```
 */
export function getRecordSets(args: GetRecordSetsArgs, opts?: pulumi.InvokeOptions): Promise<GetRecordSetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:dns/getRecordSets:getRecordSets", {
        "host": args.host,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "recordSetId": args.recordSetId,
        "searchMode": args.searchMode,
        "zid": args.zid,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecordSets.
 */
export interface GetRecordSetsArgs {
    /**
     * The domain prefix of the record set.
     */
    host?: string;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The record set ID.
     */
    recordSetId?: string;
    /**
     * The matching mode for Host.
     */
    searchMode?: string;
    /**
     * The domain ID.
     */
    zid: number;
}

/**
 * A collection of values returned by getRecordSets.
 */
export interface GetRecordSetsResult {
    /**
     * The host record contained in the DNS record set.
     */
    readonly host?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    readonly recordSetId?: string;
    /**
     * The collection of query.
     */
    readonly recordSets: outputs.dns.GetRecordSetsRecordSet[];
    readonly searchMode?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    readonly zid: number;
}
/**
 * Use this data source to query detailed information of dns record sets
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const fooZones = volcengine.dns.getZones({
 *     key: "xxx",
 *     searchMode: "xx",
 * });
 * const fooRecordSets = fooZones.then(fooZones => volcengine.dns.getRecordSets({
 *     zid: fooZones.zones?.[0]?.zid,
 * }));
 * ```
 */
export function getRecordSetsOutput(args: GetRecordSetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecordSetsResult> {
    return pulumi.output(args).apply((a: any) => getRecordSets(a, opts))
}

/**
 * A collection of arguments for invoking getRecordSets.
 */
export interface GetRecordSetsOutputArgs {
    /**
     * The domain prefix of the record set.
     */
    host?: pulumi.Input<string>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The record set ID.
     */
    recordSetId?: pulumi.Input<string>;
    /**
     * The matching mode for Host.
     */
    searchMode?: pulumi.Input<string>;
    /**
     * The domain ID.
     */
    zid: pulumi.Input<number>;
}
