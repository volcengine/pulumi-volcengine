// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage waf system bot
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.waf.SystemBot("foo", {
 *     action: "observe",
 *     botType: "feed_fetcher",
 *     enable: 0,
 *     host: "www.tf-test.com",
 *     projectName: "default",
 * });
 * ```
 *
 * ## Import
 *
 * WafSystemBot can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:waf/systemBot:SystemBot default BotType:Host
 * ```
 */
export class SystemBot extends pulumi.CustomResource {
    /**
     * Get an existing SystemBot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemBotState, opts?: pulumi.CustomResourceOptions): SystemBot {
        return new SystemBot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:waf/systemBot:SystemBot';

    /**
     * Returns true if the given object is an instance of SystemBot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemBot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemBot.__pulumiType;
    }

    /**
     * The execution action of the Bot.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * The name of bot.
     */
    public readonly botType!: pulumi.Output<string>;
    /**
     * The description of the Bot.
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * Whether to enable bot.
     */
    public readonly enable!: pulumi.Output<number>;
    /**
     * Domain name information.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * The Name of the affiliated project resource.
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Bot rule.
     */
    public /*out*/ readonly ruleTag!: pulumi.Output<string>;

    /**
     * Create a SystemBot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemBotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemBotArgs | SystemBotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemBotState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["botType"] = state ? state.botType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["ruleTag"] = state ? state.ruleTag : undefined;
        } else {
            const args = argsOrState as SystemBotArgs | undefined;
            if ((!args || args.botType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botType'");
            }
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["botType"] = args ? args.botType : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["ruleTag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemBot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemBot resources.
 */
export interface SystemBotState {
    /**
     * The execution action of the Bot.
     */
    action?: pulumi.Input<string>;
    /**
     * The name of bot.
     */
    botType?: pulumi.Input<string>;
    /**
     * The description of the Bot.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable bot.
     */
    enable?: pulumi.Input<number>;
    /**
     * Domain name information.
     */
    host?: pulumi.Input<string>;
    /**
     * The Name of the affiliated project resource.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The ID of the Bot rule.
     */
    ruleTag?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemBot resource.
 */
export interface SystemBotArgs {
    /**
     * The execution action of the Bot.
     */
    action?: pulumi.Input<string>;
    /**
     * The name of bot.
     */
    botType: pulumi.Input<string>;
    /**
     * Whether to enable bot.
     */
    enable?: pulumi.Input<number>;
    /**
     * Domain name information.
     */
    host: pulumi.Input<string>;
    /**
     * The Name of the affiliated project resource.
     */
    projectName?: pulumi.Input<string>;
}
