// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage waf domain
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.waf.WafDomain("foo", {
 *     accessMode: 10,
 *     backendGroups: [{
 *         accessPorts: [80],
 *         backends: [
 *             {
 *                 ip: "192.168.0.0",
 *                 port: 80,
 *                 protocol: "HTTP",
 *                 weight: 40,
 *             },
 *             {
 *                 ip: "192.168.1.0",
 *                 port: 80,
 *                 protocol: "HTTP",
 *                 weight: 60,
 *             },
 *         ],
 *         name: "default",
 *     }],
 *     clientIpLocation: 0,
 *     clientMaxBodySize: 1024,
 *     customHeaders: [
 *         "x-top-1",
 *         "x-top-2",
 *     ],
 *     domain: "www.tf-test.com",
 *     enableIpv6: 0,
 *     keepAliveRequest: 200,
 *     keepAliveTimeOut: 100,
 *     lbAlgorithm: "wlc",
 *     protocolPorts: {
 *         https: [80],
 *     },
 *     protocols: ["HTTP"],
 *     proxyConfig: 1,
 *     proxyConnectTimeOut: 10,
 *     proxyKeepAlive: 101,
 *     proxyKeepAliveTimeOut: 20,
 *     proxyReadTimeOut: 200,
 *     proxyRetry: 10,
 *     proxyWriteTimeOut: 120,
 *     publicRealServer: 0,
 *     vpcId: "vpc-2d6485y7p95og58ozfcvxxxxx",
 * });
 * ```
 *
 * ## Import
 *
 * WafDomain can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:waf/wafDomain:WafDomain default resource_id
 * ```
 */
export class WafDomain extends pulumi.CustomResource {
    /**
     * Get an existing WafDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WafDomainState, opts?: pulumi.CustomResourceOptions): WafDomain {
        return new WafDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:waf/wafDomain:WafDomain';

    /**
     * Returns true if the given object is an instance of WafDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WafDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WafDomain.__pulumiType;
    }

    /**
     * Access mode.
     */
    public readonly accessMode!: pulumi.Output<number>;
    /**
     * High-defense instance IP.
     */
    public /*out*/ readonly advancedDefenseIp!: pulumi.Output<string>;
    /**
     * High-defense instance IPv6.
     */
    public /*out*/ readonly advancedDefenseIpv6!: pulumi.Output<string>;
    /**
     * Whether to enable the API protection policy. Works only on modified scenes.
     */
    public readonly apiEnable!: pulumi.Output<number>;
    /**
     * The status of the attack.
     */
    public /*out*/ readonly attackStatus!: pulumi.Output<number>;
    /**
     * Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
     */
    public readonly autoCcEnable!: pulumi.Output<number>;
    /**
     * The configuration of source station.
     */
    public readonly backendGroups!: pulumi.Output<outputs.waf.WafDomainBackendGroup[]>;
    /**
     * Whether to enable the access ban list policy. Works only on modified scenes.
     */
    public readonly blackIpEnable!: pulumi.Output<number>;
    /**
     * Whether to enable the geographical location access control policy. Works only on modified scenes.
     */
    public readonly blackLctEnable!: pulumi.Output<number>;
    /**
     * Whether to enable the bot dynamic token. Works only on modified scenes.
     */
    public readonly botDytokenEnable!: pulumi.Output<number | undefined>;
    /**
     * Whether to enable the bot frequency limit policy. Works only on modified scenes.
     */
    public readonly botFrequencyEnable!: pulumi.Output<number | undefined>;
    /**
     * Whether to enable the bot frequency limit policy. Works only on modified scenes.
     */
    public readonly botRepeatEnable!: pulumi.Output<number | undefined>;
    /**
     * Set the default actions of the bot behavior map strategy. Works only on modified scenes.
     */
    public readonly botSequenceDefaultAction!: pulumi.Output<number | undefined>;
    /**
     * Whether to enable the bot behavior map. Works only on modified scenes.
     */
    public readonly botSequenceEnable!: pulumi.Output<number | undefined>;
    /**
     * Whether to enable the CC protection policy. Works only on modified scenes.
     */
    public readonly ccEnable!: pulumi.Output<number>;
    /**
     * When the protocol type is HTTPS, the bound certificate ID needs to be entered.
     */
    public readonly certificateId!: pulumi.Output<number>;
    /**
     * The name of the certificate.
     */
    public /*out*/ readonly certificateName!: pulumi.Output<string>;
    /**
     * Certificate custody platform.
     */
    public readonly certificatePlatform!: pulumi.Output<string>;
    /**
     * The method of obtaining the client IP.
     */
    public readonly clientIpLocation!: pulumi.Output<number>;
    /**
     * The client requests the maximum value of body.
     */
    public readonly clientMaxBodySize!: pulumi.Output<number>;
    /**
     * Access port information.If AccessMode is Alb/CLB, this field is required.
     */
    public readonly cloudAccessConfigs!: pulumi.Output<outputs.waf.WafDomainCloudAccessConfig[]>;
    /**
     * The CNAME value generated by the WAF instance.
     */
    public /*out*/ readonly cname!: pulumi.Output<string>;
    /**
     * Whether to enable the custom Bot classification strategy. Works only on modified scenes.
     */
    public readonly customBotEnable!: pulumi.Output<number>;
    /**
     * Custom Header.
     */
    public readonly customHeaders!: pulumi.Output<string[] | undefined>;
    /**
     * Whether to enable the custom response interception policy. Works only on modified scenes.
     */
    public readonly customRspEnable!: pulumi.Output<number>;
    /**
     * Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
     */
    public readonly customSni!: pulumi.Output<string | undefined>;
    /**
     * The protection mode of the instance. Works only on modified scenes.
     */
    public readonly defenceMode!: pulumi.Output<number | undefined>;
    /**
     * The protection mode of the instance.
     */
    public /*out*/ readonly defenceModeComputed!: pulumi.Output<number>;
    /**
     * Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
     */
    public readonly dlpEnable!: pulumi.Output<number>;
    /**
     * List of domain names that need to be protected by WAF.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Whether to enable user-defined redirection. Works only on modified scenes.
     */
    public readonly enableCustomRedirect!: pulumi.Output<number | undefined>;
    /**
     * Whether to enable HTTP 2.0.
     */
    public readonly enableHttp2!: pulumi.Output<number>;
    /**
     * Whether it supports protecting IPv6 requests.
     */
    public readonly enableIpv6!: pulumi.Output<number>;
    /**
     * Whether to enable the SNI configuration. Works only on modified scenes.
     */
    public readonly enableSni!: pulumi.Output<number | undefined>;
    /**
     * The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
     */
    public readonly extraDefenceModeLbInstances!: pulumi.Output<outputs.waf.WafDomainExtraDefenceModeLbInstance[] | undefined>;
    /**
     * The number of long connection multiplexes.
     */
    public readonly keepAliveRequest!: pulumi.Output<number>;
    /**
     * Long connection retention time.
     */
    public readonly keepAliveTimeOut!: pulumi.Output<number>;
    /**
     * The types of load balancing algorithms.
     */
    public readonly lbAlgorithm!: pulumi.Output<string>;
    /**
     * Is LLM available. Works only on modified scenes.
     */
    public readonly llmAvailable!: pulumi.Output<boolean | undefined>;
    /**
     * The name of project. Works only on modified scenes.
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * Whether to enable protocol following.
     */
    public readonly protocolFollow!: pulumi.Output<number>;
    /**
     * Access port information.
     */
    public readonly protocolPorts!: pulumi.Output<outputs.waf.WafDomainProtocolPorts>;
    /**
     * Access protocol types.
     */
    public readonly protocols!: pulumi.Output<string[]>;
    /**
     * Whether to enable proxy configuration.
     */
    public readonly proxyConfig!: pulumi.Output<number>;
    /**
     * The timeout period for establishing a connection between the WAF and the backend server.
     */
    public readonly proxyConnectTimeOut!: pulumi.Output<number>;
    /**
     * The number of reusable WAF origin long connections.
     */
    public readonly proxyKeepAlive!: pulumi.Output<number>;
    /**
     * Idle long connection timeout period.
     */
    public readonly proxyKeepAliveTimeOut!: pulumi.Output<number>;
    /**
     * The timeout period during which WAF reads the response from the backend server.
     */
    public readonly proxyReadTimeOut!: pulumi.Output<number>;
    /**
     * The number of retries for WAF back to source.
     */
    public readonly proxyRetry!: pulumi.Output<number>;
    /**
     * The timeout period during which the WAF transmits the request to the backend server.
     */
    public readonly proxyWriteTimeOut!: pulumi.Output<number>;
    /**
     * Connect to the source return mode.
     */
    public readonly publicRealServer!: pulumi.Output<number>;
    /**
     * When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
     */
    public readonly redirectHttps!: pulumi.Output<boolean | undefined>;
    /**
     * The IP of the WAF protection instance.
     */
    public /*out*/ readonly serverIps!: pulumi.Output<string>;
    /**
     * WAF source IP.
     */
    public /*out*/ readonly srcIps!: pulumi.Output<string>;
    /**
     * Encryption kit.
     */
    public readonly sslCiphers!: pulumi.Output<string[]>;
    /**
     * TLS protocol version.
     */
    public readonly sslProtocols!: pulumi.Output<string[]>;
    /**
     * The status of access.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * Whether to enable the managed Bot classification strategy. Works only on modified scenes.
     */
    public readonly systemBotEnable!: pulumi.Output<number>;
    /**
     * Whether to enable the page tamper-proof policy. Works only on modified scenes.
     */
    public readonly tamperProofEnable!: pulumi.Output<number>;
    /**
     * Whether to enable the log service.
     */
    public readonly tlsEnable!: pulumi.Output<number>;
    /**
     * Details of log field configuration. Works only on modified scenes.
     */
    public readonly tlsFieldsConfig!: pulumi.Output<outputs.waf.WafDomainTlsFieldsConfig | undefined>;
    /**
     * The update time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * When the protocol type is HTTPS, the bound certificate ID needs to be entered.
     */
    public readonly volcCertificateId!: pulumi.Output<string>;
    /**
     * The ID of vpc.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Whether to enable the vulnerability protection strategy. Works only on modified scenes.
     */
    public readonly wafEnable!: pulumi.Output<number>;
    /**
     * Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
     */
    public readonly wafWhiteReqEnable!: pulumi.Output<number>;
    /**
     * Whether to enable the access list policy. Works only on modified scenes.
     */
    public readonly whiteEnable!: pulumi.Output<number>;
    /**
     * Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
     */
    public readonly whiteFieldEnable!: pulumi.Output<number>;

    /**
     * Create a WafDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WafDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WafDomainArgs | WafDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WafDomainState | undefined;
            resourceInputs["accessMode"] = state ? state.accessMode : undefined;
            resourceInputs["advancedDefenseIp"] = state ? state.advancedDefenseIp : undefined;
            resourceInputs["advancedDefenseIpv6"] = state ? state.advancedDefenseIpv6 : undefined;
            resourceInputs["apiEnable"] = state ? state.apiEnable : undefined;
            resourceInputs["attackStatus"] = state ? state.attackStatus : undefined;
            resourceInputs["autoCcEnable"] = state ? state.autoCcEnable : undefined;
            resourceInputs["backendGroups"] = state ? state.backendGroups : undefined;
            resourceInputs["blackIpEnable"] = state ? state.blackIpEnable : undefined;
            resourceInputs["blackLctEnable"] = state ? state.blackLctEnable : undefined;
            resourceInputs["botDytokenEnable"] = state ? state.botDytokenEnable : undefined;
            resourceInputs["botFrequencyEnable"] = state ? state.botFrequencyEnable : undefined;
            resourceInputs["botRepeatEnable"] = state ? state.botRepeatEnable : undefined;
            resourceInputs["botSequenceDefaultAction"] = state ? state.botSequenceDefaultAction : undefined;
            resourceInputs["botSequenceEnable"] = state ? state.botSequenceEnable : undefined;
            resourceInputs["ccEnable"] = state ? state.ccEnable : undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["certificateName"] = state ? state.certificateName : undefined;
            resourceInputs["certificatePlatform"] = state ? state.certificatePlatform : undefined;
            resourceInputs["clientIpLocation"] = state ? state.clientIpLocation : undefined;
            resourceInputs["clientMaxBodySize"] = state ? state.clientMaxBodySize : undefined;
            resourceInputs["cloudAccessConfigs"] = state ? state.cloudAccessConfigs : undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["customBotEnable"] = state ? state.customBotEnable : undefined;
            resourceInputs["customHeaders"] = state ? state.customHeaders : undefined;
            resourceInputs["customRspEnable"] = state ? state.customRspEnable : undefined;
            resourceInputs["customSni"] = state ? state.customSni : undefined;
            resourceInputs["defenceMode"] = state ? state.defenceMode : undefined;
            resourceInputs["defenceModeComputed"] = state ? state.defenceModeComputed : undefined;
            resourceInputs["dlpEnable"] = state ? state.dlpEnable : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["enableCustomRedirect"] = state ? state.enableCustomRedirect : undefined;
            resourceInputs["enableHttp2"] = state ? state.enableHttp2 : undefined;
            resourceInputs["enableIpv6"] = state ? state.enableIpv6 : undefined;
            resourceInputs["enableSni"] = state ? state.enableSni : undefined;
            resourceInputs["extraDefenceModeLbInstances"] = state ? state.extraDefenceModeLbInstances : undefined;
            resourceInputs["keepAliveRequest"] = state ? state.keepAliveRequest : undefined;
            resourceInputs["keepAliveTimeOut"] = state ? state.keepAliveTimeOut : undefined;
            resourceInputs["lbAlgorithm"] = state ? state.lbAlgorithm : undefined;
            resourceInputs["llmAvailable"] = state ? state.llmAvailable : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["protocolFollow"] = state ? state.protocolFollow : undefined;
            resourceInputs["protocolPorts"] = state ? state.protocolPorts : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["proxyConfig"] = state ? state.proxyConfig : undefined;
            resourceInputs["proxyConnectTimeOut"] = state ? state.proxyConnectTimeOut : undefined;
            resourceInputs["proxyKeepAlive"] = state ? state.proxyKeepAlive : undefined;
            resourceInputs["proxyKeepAliveTimeOut"] = state ? state.proxyKeepAliveTimeOut : undefined;
            resourceInputs["proxyReadTimeOut"] = state ? state.proxyReadTimeOut : undefined;
            resourceInputs["proxyRetry"] = state ? state.proxyRetry : undefined;
            resourceInputs["proxyWriteTimeOut"] = state ? state.proxyWriteTimeOut : undefined;
            resourceInputs["publicRealServer"] = state ? state.publicRealServer : undefined;
            resourceInputs["redirectHttps"] = state ? state.redirectHttps : undefined;
            resourceInputs["serverIps"] = state ? state.serverIps : undefined;
            resourceInputs["srcIps"] = state ? state.srcIps : undefined;
            resourceInputs["sslCiphers"] = state ? state.sslCiphers : undefined;
            resourceInputs["sslProtocols"] = state ? state.sslProtocols : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemBotEnable"] = state ? state.systemBotEnable : undefined;
            resourceInputs["tamperProofEnable"] = state ? state.tamperProofEnable : undefined;
            resourceInputs["tlsEnable"] = state ? state.tlsEnable : undefined;
            resourceInputs["tlsFieldsConfig"] = state ? state.tlsFieldsConfig : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["volcCertificateId"] = state ? state.volcCertificateId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["wafEnable"] = state ? state.wafEnable : undefined;
            resourceInputs["wafWhiteReqEnable"] = state ? state.wafWhiteReqEnable : undefined;
            resourceInputs["whiteEnable"] = state ? state.whiteEnable : undefined;
            resourceInputs["whiteFieldEnable"] = state ? state.whiteFieldEnable : undefined;
        } else {
            const args = argsOrState as WafDomainArgs | undefined;
            if ((!args || args.accessMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessMode'");
            }
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["accessMode"] = args ? args.accessMode : undefined;
            resourceInputs["apiEnable"] = args ? args.apiEnable : undefined;
            resourceInputs["autoCcEnable"] = args ? args.autoCcEnable : undefined;
            resourceInputs["backendGroups"] = args ? args.backendGroups : undefined;
            resourceInputs["blackIpEnable"] = args ? args.blackIpEnable : undefined;
            resourceInputs["blackLctEnable"] = args ? args.blackLctEnable : undefined;
            resourceInputs["botDytokenEnable"] = args ? args.botDytokenEnable : undefined;
            resourceInputs["botFrequencyEnable"] = args ? args.botFrequencyEnable : undefined;
            resourceInputs["botRepeatEnable"] = args ? args.botRepeatEnable : undefined;
            resourceInputs["botSequenceDefaultAction"] = args ? args.botSequenceDefaultAction : undefined;
            resourceInputs["botSequenceEnable"] = args ? args.botSequenceEnable : undefined;
            resourceInputs["ccEnable"] = args ? args.ccEnable : undefined;
            resourceInputs["certificateId"] = args ? args.certificateId : undefined;
            resourceInputs["certificatePlatform"] = args ? args.certificatePlatform : undefined;
            resourceInputs["clientIpLocation"] = args ? args.clientIpLocation : undefined;
            resourceInputs["clientMaxBodySize"] = args ? args.clientMaxBodySize : undefined;
            resourceInputs["cloudAccessConfigs"] = args ? args.cloudAccessConfigs : undefined;
            resourceInputs["customBotEnable"] = args ? args.customBotEnable : undefined;
            resourceInputs["customHeaders"] = args ? args.customHeaders : undefined;
            resourceInputs["customRspEnable"] = args ? args.customRspEnable : undefined;
            resourceInputs["customSni"] = args ? args.customSni : undefined;
            resourceInputs["defenceMode"] = args ? args.defenceMode : undefined;
            resourceInputs["dlpEnable"] = args ? args.dlpEnable : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["enableCustomRedirect"] = args ? args.enableCustomRedirect : undefined;
            resourceInputs["enableHttp2"] = args ? args.enableHttp2 : undefined;
            resourceInputs["enableIpv6"] = args ? args.enableIpv6 : undefined;
            resourceInputs["enableSni"] = args ? args.enableSni : undefined;
            resourceInputs["extraDefenceModeLbInstances"] = args ? args.extraDefenceModeLbInstances : undefined;
            resourceInputs["keepAliveRequest"] = args ? args.keepAliveRequest : undefined;
            resourceInputs["keepAliveTimeOut"] = args ? args.keepAliveTimeOut : undefined;
            resourceInputs["lbAlgorithm"] = args ? args.lbAlgorithm : undefined;
            resourceInputs["llmAvailable"] = args ? args.llmAvailable : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["protocolFollow"] = args ? args.protocolFollow : undefined;
            resourceInputs["protocolPorts"] = args ? args.protocolPorts : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["proxyConfig"] = args ? args.proxyConfig : undefined;
            resourceInputs["proxyConnectTimeOut"] = args ? args.proxyConnectTimeOut : undefined;
            resourceInputs["proxyKeepAlive"] = args ? args.proxyKeepAlive : undefined;
            resourceInputs["proxyKeepAliveTimeOut"] = args ? args.proxyKeepAliveTimeOut : undefined;
            resourceInputs["proxyReadTimeOut"] = args ? args.proxyReadTimeOut : undefined;
            resourceInputs["proxyRetry"] = args ? args.proxyRetry : undefined;
            resourceInputs["proxyWriteTimeOut"] = args ? args.proxyWriteTimeOut : undefined;
            resourceInputs["publicRealServer"] = args ? args.publicRealServer : undefined;
            resourceInputs["redirectHttps"] = args ? args.redirectHttps : undefined;
            resourceInputs["sslCiphers"] = args ? args.sslCiphers : undefined;
            resourceInputs["sslProtocols"] = args ? args.sslProtocols : undefined;
            resourceInputs["systemBotEnable"] = args ? args.systemBotEnable : undefined;
            resourceInputs["tamperProofEnable"] = args ? args.tamperProofEnable : undefined;
            resourceInputs["tlsEnable"] = args ? args.tlsEnable : undefined;
            resourceInputs["tlsFieldsConfig"] = args ? args.tlsFieldsConfig : undefined;
            resourceInputs["volcCertificateId"] = args ? args.volcCertificateId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["wafEnable"] = args ? args.wafEnable : undefined;
            resourceInputs["wafWhiteReqEnable"] = args ? args.wafWhiteReqEnable : undefined;
            resourceInputs["whiteEnable"] = args ? args.whiteEnable : undefined;
            resourceInputs["whiteFieldEnable"] = args ? args.whiteFieldEnable : undefined;
            resourceInputs["advancedDefenseIp"] = undefined /*out*/;
            resourceInputs["advancedDefenseIpv6"] = undefined /*out*/;
            resourceInputs["attackStatus"] = undefined /*out*/;
            resourceInputs["certificateName"] = undefined /*out*/;
            resourceInputs["cname"] = undefined /*out*/;
            resourceInputs["defenceModeComputed"] = undefined /*out*/;
            resourceInputs["serverIps"] = undefined /*out*/;
            resourceInputs["srcIps"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WafDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WafDomain resources.
 */
export interface WafDomainState {
    /**
     * Access mode.
     */
    accessMode?: pulumi.Input<number>;
    /**
     * High-defense instance IP.
     */
    advancedDefenseIp?: pulumi.Input<string>;
    /**
     * High-defense instance IPv6.
     */
    advancedDefenseIpv6?: pulumi.Input<string>;
    /**
     * Whether to enable the API protection policy. Works only on modified scenes.
     */
    apiEnable?: pulumi.Input<number>;
    /**
     * The status of the attack.
     */
    attackStatus?: pulumi.Input<number>;
    /**
     * Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
     */
    autoCcEnable?: pulumi.Input<number>;
    /**
     * The configuration of source station.
     */
    backendGroups?: pulumi.Input<pulumi.Input<inputs.waf.WafDomainBackendGroup>[]>;
    /**
     * Whether to enable the access ban list policy. Works only on modified scenes.
     */
    blackIpEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the geographical location access control policy. Works only on modified scenes.
     */
    blackLctEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the bot dynamic token. Works only on modified scenes.
     */
    botDytokenEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the bot frequency limit policy. Works only on modified scenes.
     */
    botFrequencyEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the bot frequency limit policy. Works only on modified scenes.
     */
    botRepeatEnable?: pulumi.Input<number>;
    /**
     * Set the default actions of the bot behavior map strategy. Works only on modified scenes.
     */
    botSequenceDefaultAction?: pulumi.Input<number>;
    /**
     * Whether to enable the bot behavior map. Works only on modified scenes.
     */
    botSequenceEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the CC protection policy. Works only on modified scenes.
     */
    ccEnable?: pulumi.Input<number>;
    /**
     * When the protocol type is HTTPS, the bound certificate ID needs to be entered.
     */
    certificateId?: pulumi.Input<number>;
    /**
     * The name of the certificate.
     */
    certificateName?: pulumi.Input<string>;
    /**
     * Certificate custody platform.
     */
    certificatePlatform?: pulumi.Input<string>;
    /**
     * The method of obtaining the client IP.
     */
    clientIpLocation?: pulumi.Input<number>;
    /**
     * The client requests the maximum value of body.
     */
    clientMaxBodySize?: pulumi.Input<number>;
    /**
     * Access port information.If AccessMode is Alb/CLB, this field is required.
     */
    cloudAccessConfigs?: pulumi.Input<pulumi.Input<inputs.waf.WafDomainCloudAccessConfig>[]>;
    /**
     * The CNAME value generated by the WAF instance.
     */
    cname?: pulumi.Input<string>;
    /**
     * Whether to enable the custom Bot classification strategy. Works only on modified scenes.
     */
    customBotEnable?: pulumi.Input<number>;
    /**
     * Custom Header.
     */
    customHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to enable the custom response interception policy. Works only on modified scenes.
     */
    customRspEnable?: pulumi.Input<number>;
    /**
     * Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
     */
    customSni?: pulumi.Input<string>;
    /**
     * The protection mode of the instance. Works only on modified scenes.
     */
    defenceMode?: pulumi.Input<number>;
    /**
     * The protection mode of the instance.
     */
    defenceModeComputed?: pulumi.Input<number>;
    /**
     * Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
     */
    dlpEnable?: pulumi.Input<number>;
    /**
     * List of domain names that need to be protected by WAF.
     */
    domain?: pulumi.Input<string>;
    /**
     * Whether to enable user-defined redirection. Works only on modified scenes.
     */
    enableCustomRedirect?: pulumi.Input<number>;
    /**
     * Whether to enable HTTP 2.0.
     */
    enableHttp2?: pulumi.Input<number>;
    /**
     * Whether it supports protecting IPv6 requests.
     */
    enableIpv6?: pulumi.Input<number>;
    /**
     * Whether to enable the SNI configuration. Works only on modified scenes.
     */
    enableSni?: pulumi.Input<number>;
    /**
     * The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
     */
    extraDefenceModeLbInstances?: pulumi.Input<pulumi.Input<inputs.waf.WafDomainExtraDefenceModeLbInstance>[]>;
    /**
     * The number of long connection multiplexes.
     */
    keepAliveRequest?: pulumi.Input<number>;
    /**
     * Long connection retention time.
     */
    keepAliveTimeOut?: pulumi.Input<number>;
    /**
     * The types of load balancing algorithms.
     */
    lbAlgorithm?: pulumi.Input<string>;
    /**
     * Is LLM available. Works only on modified scenes.
     */
    llmAvailable?: pulumi.Input<boolean>;
    /**
     * The name of project. Works only on modified scenes.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Whether to enable protocol following.
     */
    protocolFollow?: pulumi.Input<number>;
    /**
     * Access port information.
     */
    protocolPorts?: pulumi.Input<inputs.waf.WafDomainProtocolPorts>;
    /**
     * Access protocol types.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to enable proxy configuration.
     */
    proxyConfig?: pulumi.Input<number>;
    /**
     * The timeout period for establishing a connection between the WAF and the backend server.
     */
    proxyConnectTimeOut?: pulumi.Input<number>;
    /**
     * The number of reusable WAF origin long connections.
     */
    proxyKeepAlive?: pulumi.Input<number>;
    /**
     * Idle long connection timeout period.
     */
    proxyKeepAliveTimeOut?: pulumi.Input<number>;
    /**
     * The timeout period during which WAF reads the response from the backend server.
     */
    proxyReadTimeOut?: pulumi.Input<number>;
    /**
     * The number of retries for WAF back to source.
     */
    proxyRetry?: pulumi.Input<number>;
    /**
     * The timeout period during which the WAF transmits the request to the backend server.
     */
    proxyWriteTimeOut?: pulumi.Input<number>;
    /**
     * Connect to the source return mode.
     */
    publicRealServer?: pulumi.Input<number>;
    /**
     * When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
     */
    redirectHttps?: pulumi.Input<boolean>;
    /**
     * The IP of the WAF protection instance.
     */
    serverIps?: pulumi.Input<string>;
    /**
     * WAF source IP.
     */
    srcIps?: pulumi.Input<string>;
    /**
     * Encryption kit.
     */
    sslCiphers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TLS protocol version.
     */
    sslProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of access.
     */
    status?: pulumi.Input<number>;
    /**
     * Whether to enable the managed Bot classification strategy. Works only on modified scenes.
     */
    systemBotEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the page tamper-proof policy. Works only on modified scenes.
     */
    tamperProofEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the log service.
     */
    tlsEnable?: pulumi.Input<number>;
    /**
     * Details of log field configuration. Works only on modified scenes.
     */
    tlsFieldsConfig?: pulumi.Input<inputs.waf.WafDomainTlsFieldsConfig>;
    /**
     * The update time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * When the protocol type is HTTPS, the bound certificate ID needs to be entered.
     */
    volcCertificateId?: pulumi.Input<string>;
    /**
     * The ID of vpc.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Whether to enable the vulnerability protection strategy. Works only on modified scenes.
     */
    wafEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
     */
    wafWhiteReqEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the access list policy. Works only on modified scenes.
     */
    whiteEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
     */
    whiteFieldEnable?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a WafDomain resource.
 */
export interface WafDomainArgs {
    /**
     * Access mode.
     */
    accessMode: pulumi.Input<number>;
    /**
     * Whether to enable the API protection policy. Works only on modified scenes.
     */
    apiEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the intelligent CC protection strategy. Works only on modified scenes.
     */
    autoCcEnable?: pulumi.Input<number>;
    /**
     * The configuration of source station.
     */
    backendGroups?: pulumi.Input<pulumi.Input<inputs.waf.WafDomainBackendGroup>[]>;
    /**
     * Whether to enable the access ban list policy. Works only on modified scenes.
     */
    blackIpEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the geographical location access control policy. Works only on modified scenes.
     */
    blackLctEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the bot dynamic token. Works only on modified scenes.
     */
    botDytokenEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the bot frequency limit policy. Works only on modified scenes.
     */
    botFrequencyEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the bot frequency limit policy. Works only on modified scenes.
     */
    botRepeatEnable?: pulumi.Input<number>;
    /**
     * Set the default actions of the bot behavior map strategy. Works only on modified scenes.
     */
    botSequenceDefaultAction?: pulumi.Input<number>;
    /**
     * Whether to enable the bot behavior map. Works only on modified scenes.
     */
    botSequenceEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the CC protection policy. Works only on modified scenes.
     */
    ccEnable?: pulumi.Input<number>;
    /**
     * When the protocol type is HTTPS, the bound certificate ID needs to be entered.
     */
    certificateId?: pulumi.Input<number>;
    /**
     * Certificate custody platform.
     */
    certificatePlatform?: pulumi.Input<string>;
    /**
     * The method of obtaining the client IP.
     */
    clientIpLocation?: pulumi.Input<number>;
    /**
     * The client requests the maximum value of body.
     */
    clientMaxBodySize?: pulumi.Input<number>;
    /**
     * Access port information.If AccessMode is Alb/CLB, this field is required.
     */
    cloudAccessConfigs?: pulumi.Input<pulumi.Input<inputs.waf.WafDomainCloudAccessConfig>[]>;
    /**
     * Whether to enable the custom Bot classification strategy. Works only on modified scenes.
     */
    customBotEnable?: pulumi.Input<number>;
    /**
     * Custom Header.
     */
    customHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to enable the custom response interception policy. Works only on modified scenes.
     */
    customRspEnable?: pulumi.Input<number>;
    /**
     * Custom SNI needs to be configured when EnableSNI=1. Works only on modified scenes.
     */
    customSni?: pulumi.Input<string>;
    /**
     * The protection mode of the instance. Works only on modified scenes.
     */
    defenceMode?: pulumi.Input<number>;
    /**
     * Whether to activate the strategy for preventing the leakage of sensitive information. Works only on modified scenes.
     */
    dlpEnable?: pulumi.Input<number>;
    /**
     * List of domain names that need to be protected by WAF.
     */
    domain: pulumi.Input<string>;
    /**
     * Whether to enable user-defined redirection. Works only on modified scenes.
     */
    enableCustomRedirect?: pulumi.Input<number>;
    /**
     * Whether to enable HTTP 2.0.
     */
    enableHttp2?: pulumi.Input<number>;
    /**
     * Whether it supports protecting IPv6 requests.
     */
    enableIpv6?: pulumi.Input<number>;
    /**
     * Whether to enable the SNI configuration. Works only on modified scenes.
     */
    enableSni?: pulumi.Input<number>;
    /**
     * The protection mode of the exception instance. It takes effect when the access mode is accessed through an application load balancing (ALB) instance (AccessMode=20). Works only on modified scenes.
     */
    extraDefenceModeLbInstances?: pulumi.Input<pulumi.Input<inputs.waf.WafDomainExtraDefenceModeLbInstance>[]>;
    /**
     * The number of long connection multiplexes.
     */
    keepAliveRequest?: pulumi.Input<number>;
    /**
     * Long connection retention time.
     */
    keepAliveTimeOut?: pulumi.Input<number>;
    /**
     * The types of load balancing algorithms.
     */
    lbAlgorithm?: pulumi.Input<string>;
    /**
     * Is LLM available. Works only on modified scenes.
     */
    llmAvailable?: pulumi.Input<boolean>;
    /**
     * The name of project. Works only on modified scenes.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Whether to enable protocol following.
     */
    protocolFollow?: pulumi.Input<number>;
    /**
     * Access port information.
     */
    protocolPorts?: pulumi.Input<inputs.waf.WafDomainProtocolPorts>;
    /**
     * Access protocol types.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to enable proxy configuration.
     */
    proxyConfig?: pulumi.Input<number>;
    /**
     * The timeout period for establishing a connection between the WAF and the backend server.
     */
    proxyConnectTimeOut?: pulumi.Input<number>;
    /**
     * The number of reusable WAF origin long connections.
     */
    proxyKeepAlive?: pulumi.Input<number>;
    /**
     * Idle long connection timeout period.
     */
    proxyKeepAliveTimeOut?: pulumi.Input<number>;
    /**
     * The timeout period during which WAF reads the response from the backend server.
     */
    proxyReadTimeOut?: pulumi.Input<number>;
    /**
     * The number of retries for WAF back to source.
     */
    proxyRetry?: pulumi.Input<number>;
    /**
     * The timeout period during which the WAF transmits the request to the backend server.
     */
    proxyWriteTimeOut?: pulumi.Input<number>;
    /**
     * Connect to the source return mode.
     */
    publicRealServer?: pulumi.Input<number>;
    /**
     * When only the HTTPS protocol is enabled, whether to redirect HTTP requests to HTTPS. Works only on modified scenes.
     */
    redirectHttps?: pulumi.Input<boolean>;
    /**
     * Encryption kit.
     */
    sslCiphers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TLS protocol version.
     */
    sslProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to enable the managed Bot classification strategy. Works only on modified scenes.
     */
    systemBotEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the page tamper-proof policy. Works only on modified scenes.
     */
    tamperProofEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the log service.
     */
    tlsEnable?: pulumi.Input<number>;
    /**
     * Details of log field configuration. Works only on modified scenes.
     */
    tlsFieldsConfig?: pulumi.Input<inputs.waf.WafDomainTlsFieldsConfig>;
    /**
     * When the protocol type is HTTPS, the bound certificate ID needs to be entered.
     */
    volcCertificateId?: pulumi.Input<string>;
    /**
     * The ID of vpc.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Whether to enable the vulnerability protection strategy. Works only on modified scenes.
     */
    wafEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the whitening strategy for vulnerability protection requests. Works only on modified scenes.
     */
    wafWhiteReqEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the access list policy. Works only on modified scenes.
     */
    whiteEnable?: pulumi.Input<number>;
    /**
     * Whether to enable the whitening strategy for vulnerability protection fields. Works only on modified scenes.
     */
    whiteFieldEnable?: pulumi.Input<number>;
}
