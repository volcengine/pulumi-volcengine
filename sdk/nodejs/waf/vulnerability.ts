// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage waf vulnerability
 * ## Import
 *
 * WafVulnerability can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:waf/vulnerability:Vulnerability default resource_id
 * ```
 */
export class Vulnerability extends pulumi.CustomResource {
    /**
     * Get an existing Vulnerability resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VulnerabilityState, opts?: pulumi.CustomResourceOptions): Vulnerability {
        return new Vulnerability(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:waf/vulnerability:Vulnerability';

    /**
     * Returns true if the given object is an instance of Vulnerability.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vulnerability {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vulnerability.__pulumiType;
    }

    /**
     * Protection mode.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * The advanced configuration of vulnerability protection currently supports automatic blocking of directory traversal attacks and high-frequency scanning attacks.
     */
    public readonly advanceConfig!: pulumi.Output<outputs.waf.VulnerabilityAdvanceConfig>;
    /**
     * Protect website domain names.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * Detailed information of the vulnerability rules. By default, only the vulnerability protection rules of the custom mode are displayed.
     */
    public /*out*/ readonly ruleDetails!: pulumi.Output<outputs.waf.VulnerabilityRuleDetail[]>;
    /**
     * The enabled vulnerability rule categories, WAF has classified the managed rules according to their strictness.
     */
    public readonly ruleMode!: pulumi.Output<string>;
    /**
     * Custom rule switch.
     */
    public readonly systemRuleSwitches!: pulumi.Output<outputs.waf.VulnerabilitySystemRuleSwitch[] | undefined>;

    /**
     * Create a Vulnerability resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VulnerabilityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VulnerabilityArgs | VulnerabilityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VulnerabilityState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["advanceConfig"] = state ? state.advanceConfig : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["ruleDetails"] = state ? state.ruleDetails : undefined;
            resourceInputs["ruleMode"] = state ? state.ruleMode : undefined;
            resourceInputs["systemRuleSwitches"] = state ? state.systemRuleSwitches : undefined;
        } else {
            const args = argsOrState as VulnerabilityArgs | undefined;
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["advanceConfig"] = args ? args.advanceConfig : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["ruleMode"] = args ? args.ruleMode : undefined;
            resourceInputs["systemRuleSwitches"] = args ? args.systemRuleSwitches : undefined;
            resourceInputs["ruleDetails"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vulnerability.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Vulnerability resources.
 */
export interface VulnerabilityState {
    /**
     * Protection mode.
     */
    action?: pulumi.Input<string>;
    /**
     * The advanced configuration of vulnerability protection currently supports automatic blocking of directory traversal attacks and high-frequency scanning attacks.
     */
    advanceConfig?: pulumi.Input<inputs.waf.VulnerabilityAdvanceConfig>;
    /**
     * Protect website domain names.
     */
    host?: pulumi.Input<string>;
    /**
     * Detailed information of the vulnerability rules. By default, only the vulnerability protection rules of the custom mode are displayed.
     */
    ruleDetails?: pulumi.Input<pulumi.Input<inputs.waf.VulnerabilityRuleDetail>[]>;
    /**
     * The enabled vulnerability rule categories, WAF has classified the managed rules according to their strictness.
     */
    ruleMode?: pulumi.Input<string>;
    /**
     * Custom rule switch.
     */
    systemRuleSwitches?: pulumi.Input<pulumi.Input<inputs.waf.VulnerabilitySystemRuleSwitch>[]>;
}

/**
 * The set of arguments for constructing a Vulnerability resource.
 */
export interface VulnerabilityArgs {
    /**
     * Protection mode.
     */
    action?: pulumi.Input<string>;
    /**
     * The advanced configuration of vulnerability protection currently supports automatic blocking of directory traversal attacks and high-frequency scanning attacks.
     */
    advanceConfig?: pulumi.Input<inputs.waf.VulnerabilityAdvanceConfig>;
    /**
     * Protect website domain names.
     */
    host: pulumi.Input<string>;
    /**
     * The enabled vulnerability rule categories, WAF has classified the managed rules according to their strictness.
     */
    ruleMode?: pulumi.Input<string>;
    /**
     * Custom rule switch.
     */
    systemRuleSwitches?: pulumi.Input<pulumi.Input<inputs.waf.VulnerabilitySystemRuleSwitch>[]>;
}
