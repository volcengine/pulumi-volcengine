// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage waf custom bot
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.waf.CustomBot("foo", {
 *     accurate: {
 *         accurateRules: [
 *             {
 *                 httpObj: "request.uri",
 *                 objType: 1,
 *                 opretar: 2,
 *                 property: 0,
 *                 valueString: "tf",
 *             },
 *             {
 *                 httpObj: "request.schema",
 *                 objType: 0,
 *                 opretar: 2,
 *                 property: 0,
 *                 valueString: "tf-2",
 *             },
 *         ],
 *         logic: 2,
 *     },
 *     action: "observe",
 *     botType: "tf-test",
 *     description: "tf-test",
 *     enable: 1,
 *     host: "www.tf-test.com",
 *     projectName: "default",
 * });
 * ```
 *
 * ## Import
 *
 * WafCustomBot can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:waf/customBot:CustomBot default resource_id
 * ```
 */
export class CustomBot extends pulumi.CustomResource {
    /**
     * Get an existing CustomBot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomBotState, opts?: pulumi.CustomResourceOptions): CustomBot {
        return new CustomBot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:waf/customBot:CustomBot';

    /**
     * Returns true if the given object is an instance of CustomBot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomBot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomBot.__pulumiType;
    }

    /**
     * Advanced conditions.
     */
    public readonly accurate!: pulumi.Output<outputs.waf.CustomBotAccurate>;
    /**
     * The execution action of the Bot.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * Whether to set advanced conditions.
     */
    public /*out*/ readonly advanced!: pulumi.Output<number>;
    /**
     * bot name.
     */
    public readonly botType!: pulumi.Output<string>;
    /**
     * The description of bot.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Whether to enable bot.
     */
    public readonly enable!: pulumi.Output<number>;
    /**
     * Domain name information.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * The Name of the affiliated project resource.
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * Rule unique identifier.
     */
    public /*out*/ readonly ruleTag!: pulumi.Output<string>;
    /**
     * The update time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a CustomBot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomBotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomBotArgs | CustomBotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomBotState | undefined;
            resourceInputs["accurate"] = state ? state.accurate : undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["advanced"] = state ? state.advanced : undefined;
            resourceInputs["botType"] = state ? state.botType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["ruleTag"] = state ? state.ruleTag : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as CustomBotArgs | undefined;
            if ((!args || args.accurate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accurate'");
            }
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.botType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botType'");
            }
            if ((!args || args.enable === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enable'");
            }
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            resourceInputs["accurate"] = args ? args.accurate : undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["botType"] = args ? args.botType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["advanced"] = undefined /*out*/;
            resourceInputs["ruleTag"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomBot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomBot resources.
 */
export interface CustomBotState {
    /**
     * Advanced conditions.
     */
    accurate?: pulumi.Input<inputs.waf.CustomBotAccurate>;
    /**
     * The execution action of the Bot.
     */
    action?: pulumi.Input<string>;
    /**
     * Whether to set advanced conditions.
     */
    advanced?: pulumi.Input<number>;
    /**
     * bot name.
     */
    botType?: pulumi.Input<string>;
    /**
     * The description of bot.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable bot.
     */
    enable?: pulumi.Input<number>;
    /**
     * Domain name information.
     */
    host?: pulumi.Input<string>;
    /**
     * The Name of the affiliated project resource.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Rule unique identifier.
     */
    ruleTag?: pulumi.Input<string>;
    /**
     * The update time.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomBot resource.
 */
export interface CustomBotArgs {
    /**
     * Advanced conditions.
     */
    accurate: pulumi.Input<inputs.waf.CustomBotAccurate>;
    /**
     * The execution action of the Bot.
     */
    action: pulumi.Input<string>;
    /**
     * bot name.
     */
    botType: pulumi.Input<string>;
    /**
     * The description of bot.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable bot.
     */
    enable: pulumi.Input<number>;
    /**
     * Domain name information.
     */
    host: pulumi.Input<string>;
    /**
     * The Name of the affiliated project resource.
     */
    projectName?: pulumi.Input<string>;
}
