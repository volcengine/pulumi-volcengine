// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of waf cc rules
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.waf.getCcRules({
 *     ccTypes: [1],
 *     host: "www.tf-test.com",
 *     pathOrderBy: "ASC",
 *     ruleName: "tf",
 * });
 * ```
 */
/** @deprecated volcengine.waf.CcRules has been deprecated in favor of volcengine.waf.getCcRules */
export function ccRules(args: CcRulesArgs, opts?: pulumi.InvokeOptions): Promise<CcRulesResult> {
    pulumi.log.warn("ccRules is deprecated: volcengine.waf.CcRules has been deprecated in favor of volcengine.waf.getCcRules")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:waf/ccRules:CcRules", {
        "ccTypes": args.ccTypes,
        "host": args.host,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "pathOrderBy": args.pathOrderBy,
        "ruleName": args.ruleName,
        "ruleTag": args.ruleTag,
        "url": args.url,
    }, opts);
}

/**
 * A collection of arguments for invoking CcRules.
 */
export interface CcRulesArgs {
    /**
     * The actions performed on subsequent requests after meeting the statistical conditions.
     */
    ccTypes?: number[];
    /**
     * Website domain names that require the setting of protection rules.
     */
    host: string;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The list shows the order.
     */
    pathOrderBy: string;
    /**
     * Search by rule name in a fuzzy manner.
     */
    ruleName?: string;
    /**
     * Search precisely according to the rule ID.
     */
    ruleTag?: string;
    /**
     * Fuzzy search by the requested path.
     */
    url?: string;
}

/**
 * A collection of values returned by CcRules.
 */
export interface CcRulesResult {
    /**
     * The actions performed on subsequent requests after meeting the statistical conditions.
     */
    readonly ccTypes?: number[];
    /**
     * The collection of query.
     */
    readonly datas: outputs.waf.CcRulesData[];
    /**
     * Protected website domain names.
     */
    readonly host: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    readonly pathOrderBy: string;
    readonly ruleName?: string;
    /**
     * Rule label, that is, the complete rule ID.
     */
    readonly ruleTag?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
    /**
     * The requested path.
     */
    readonly url?: string;
}
/**
 * Use this data source to query detailed information of waf cc rules
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.waf.getCcRules({
 *     ccTypes: [1],
 *     host: "www.tf-test.com",
 *     pathOrderBy: "ASC",
 *     ruleName: "tf",
 * });
 * ```
 */
/** @deprecated volcengine.waf.CcRules has been deprecated in favor of volcengine.waf.getCcRules */
export function ccRulesOutput(args: CcRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<CcRulesResult> {
    return pulumi.output(args).apply((a: any) => ccRules(a, opts))
}

/**
 * A collection of arguments for invoking CcRules.
 */
export interface CcRulesOutputArgs {
    /**
     * The actions performed on subsequent requests after meeting the statistical conditions.
     */
    ccTypes?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Website domain names that require the setting of protection rules.
     */
    host: pulumi.Input<string>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The list shows the order.
     */
    pathOrderBy: pulumi.Input<string>;
    /**
     * Search by rule name in a fuzzy manner.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * Search precisely according to the rule ID.
     */
    ruleTag?: pulumi.Input<string>;
    /**
     * Fuzzy search by the requested path.
     */
    url?: pulumi.Input<string>;
}
