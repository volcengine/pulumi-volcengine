// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of waf prohibitions
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.waf.getProhibitions({
 *     endTime: 1749808824,
 *     host: "www.tf-test.com",
 *     startTime: 1749805224,
 * });
 * ```
 */
/** @deprecated volcengine.waf.Prohibitions has been deprecated in favor of volcengine.waf.getProhibitions */
export function prohibitions(args: ProhibitionsArgs, opts?: pulumi.InvokeOptions): Promise<ProhibitionsResult> {
    pulumi.log.warn("prohibitions is deprecated: volcengine.waf.Prohibitions has been deprecated in favor of volcengine.waf.getProhibitions")

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:waf/prohibitions:Prohibitions", {
        "endTime": args.endTime,
        "host": args.host,
        "letterOrderBy": args.letterOrderBy,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "reasons": args.reasons,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking Prohibitions.
 */
export interface ProhibitionsArgs {
    /**
     * end time.
     */
    endTime: number;
    /**
     * The domain name of the website that needs to be queried.
     */
    host: string;
    /**
     * The list shows the order.
     */
    letterOrderBy?: string;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * Attack type filtering.
     */
    reasons?: string[];
    /**
     * starting time.
     */
    startTime: number;
}

/**
 * A collection of values returned by Prohibitions.
 */
export interface ProhibitionsResult {
    readonly endTime: number;
    readonly host: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Details of the attack IP.
     */
    readonly ipAggGroups: outputs.waf.ProhibitionsIpAggGroup[];
    readonly letterOrderBy?: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * Reason for the ban.
     */
    readonly reasons?: string[];
    readonly startTime: number;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of waf prohibitions
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.waf.getProhibitions({
 *     endTime: 1749808824,
 *     host: "www.tf-test.com",
 *     startTime: 1749805224,
 * });
 * ```
 */
/** @deprecated volcengine.waf.Prohibitions has been deprecated in favor of volcengine.waf.getProhibitions */
export function prohibitionsOutput(args: ProhibitionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ProhibitionsResult> {
    return pulumi.output(args).apply((a: any) => prohibitions(a, opts))
}

/**
 * A collection of arguments for invoking Prohibitions.
 */
export interface ProhibitionsOutputArgs {
    /**
     * end time.
     */
    endTime: pulumi.Input<number>;
    /**
     * The domain name of the website that needs to be queried.
     */
    host: pulumi.Input<string>;
    /**
     * The list shows the order.
     */
    letterOrderBy?: pulumi.Input<string>;
    /**
     * A Name Regex of Resource.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * Attack type filtering.
     */
    reasons?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * starting time.
     */
    startTime: pulumi.Input<number>;
}
