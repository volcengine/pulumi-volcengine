// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage waf custom page
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.waf.CustomPage("foo", {
 *     accurate: {
 *         accurateRules: [
 *             {
 *                 httpObj: "request.uri",
 *                 objType: 1,
 *                 opretar: 2,
 *                 property: 0,
 *                 valueString: "tf",
 *             },
 *             {
 *                 httpObj: "request.schema",
 *                 objType: 0,
 *                 opretar: 2,
 *                 property: 0,
 *                 valueString: "tf-2",
 *             },
 *         ],
 *         logic: 2,
 *     },
 *     advanced: 1,
 *     body: "tf-test-body",
 *     clientIp: "ALL",
 *     code: 403,
 *     contentType: "text/html",
 *     description: "tf-test",
 *     enable: 1,
 *     host: "www.123.com",
 *     pageMode: 1,
 *     policy: 1,
 *     projectName: "default",
 *     redirectUrl: "/test/tf/path",
 *     url: "/tf-test",
 * });
 * ```
 *
 * ## Import
 *
 * WafCustomPage can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:waf/customPage:CustomPage default resource_id:Host
 * ```
 */
export class CustomPage extends pulumi.CustomResource {
    /**
     * Get an existing CustomPage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomPageState, opts?: pulumi.CustomResourceOptions): CustomPage {
        return new CustomPage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:waf/customPage:CustomPage';

    /**
     * Returns true if the given object is an instance of CustomPage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomPage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomPage.__pulumiType;
    }

    /**
     * Advanced conditions.
     */
    public readonly accurate!: pulumi.Output<outputs.waf.CustomPageAccurate>;
    /**
     * Whether to configure advanced conditions.
     */
    public readonly advanced!: pulumi.Output<number>;
    /**
     * The layout content of the response page.
     */
    public readonly body!: pulumi.Output<string>;
    /**
     * Fill in ALL, which means this rule will take effect on all IP addresses.
     */
    public readonly clientIp!: pulumi.Output<string>;
    /**
     * Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
     */
    public readonly code!: pulumi.Output<number>;
    /**
     * The layout template of the response page. Required if PageMode=0 or 1.
     */
    public readonly contentType!: pulumi.Output<string>;
    /**
     * Rule description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Whether to enable the rule.
     */
    public readonly enable!: pulumi.Output<number>;
    /**
     * The ID of the advanced conditional rule group.
     */
    public /*out*/ readonly groupId!: pulumi.Output<number>;
    /**
     * Request header information.
     */
    public /*out*/ readonly header!: pulumi.Output<string>;
    /**
     * Domain name to be protected.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * The ID of Region.
     */
    public /*out*/ readonly isolationId!: pulumi.Output<string>;
    /**
     * Rule name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The layout template of the response page.
     */
    public readonly pageMode!: pulumi.Output<number>;
    /**
     * Action to be taken on requests that match the rule.
     */
    public readonly policy!: pulumi.Output<number>;
    /**
     * The name of the project to which your domain names belong.
     */
    public readonly projectName!: pulumi.Output<string | undefined>;
    /**
     * The path where users should be redirected.
     */
    public readonly redirectUrl!: pulumi.Output<string>;
    /**
     * Unique identification of the rules.
     */
    public /*out*/ readonly ruleTag!: pulumi.Output<string>;
    /**
     * Rule update time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Match the path.
     */
    public readonly url!: pulumi.Output<string>;

    /**
     * Create a CustomPage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomPageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomPageArgs | CustomPageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomPageState | undefined;
            resourceInputs["accurate"] = state ? state.accurate : undefined;
            resourceInputs["advanced"] = state ? state.advanced : undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["clientIp"] = state ? state.clientIp : undefined;
            resourceInputs["code"] = state ? state.code : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["header"] = state ? state.header : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["isolationId"] = state ? state.isolationId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pageMode"] = state ? state.pageMode : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["redirectUrl"] = state ? state.redirectUrl : undefined;
            resourceInputs["ruleTag"] = state ? state.ruleTag : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as CustomPageArgs | undefined;
            if ((!args || args.clientIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientIp'");
            }
            if ((!args || args.code === undefined) && !opts.urn) {
                throw new Error("Missing required property 'code'");
            }
            if ((!args || args.enable === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enable'");
            }
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.pageMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pageMode'");
            }
            if ((!args || args.policy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["accurate"] = args ? args.accurate : undefined;
            resourceInputs["advanced"] = args ? args.advanced : undefined;
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["clientIp"] = args ? args.clientIp : undefined;
            resourceInputs["code"] = args ? args.code : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pageMode"] = args ? args.pageMode : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["redirectUrl"] = args ? args.redirectUrl : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["groupId"] = undefined /*out*/;
            resourceInputs["header"] = undefined /*out*/;
            resourceInputs["isolationId"] = undefined /*out*/;
            resourceInputs["ruleTag"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomPage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomPage resources.
 */
export interface CustomPageState {
    /**
     * Advanced conditions.
     */
    accurate?: pulumi.Input<inputs.waf.CustomPageAccurate>;
    /**
     * Whether to configure advanced conditions.
     */
    advanced?: pulumi.Input<number>;
    /**
     * The layout content of the response page.
     */
    body?: pulumi.Input<string>;
    /**
     * Fill in ALL, which means this rule will take effect on all IP addresses.
     */
    clientIp?: pulumi.Input<string>;
    /**
     * Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
     */
    code?: pulumi.Input<number>;
    /**
     * The layout template of the response page. Required if PageMode=0 or 1.
     */
    contentType?: pulumi.Input<string>;
    /**
     * Rule description.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable the rule.
     */
    enable?: pulumi.Input<number>;
    /**
     * The ID of the advanced conditional rule group.
     */
    groupId?: pulumi.Input<number>;
    /**
     * Request header information.
     */
    header?: pulumi.Input<string>;
    /**
     * Domain name to be protected.
     */
    host?: pulumi.Input<string>;
    /**
     * The ID of Region.
     */
    isolationId?: pulumi.Input<string>;
    /**
     * Rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * The layout template of the response page.
     */
    pageMode?: pulumi.Input<number>;
    /**
     * Action to be taken on requests that match the rule.
     */
    policy?: pulumi.Input<number>;
    /**
     * The name of the project to which your domain names belong.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The path where users should be redirected.
     */
    redirectUrl?: pulumi.Input<string>;
    /**
     * Unique identification of the rules.
     */
    ruleTag?: pulumi.Input<string>;
    /**
     * Rule update time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Match the path.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomPage resource.
 */
export interface CustomPageArgs {
    /**
     * Advanced conditions.
     */
    accurate?: pulumi.Input<inputs.waf.CustomPageAccurate>;
    /**
     * Whether to configure advanced conditions.
     */
    advanced?: pulumi.Input<number>;
    /**
     * The layout content of the response page.
     */
    body?: pulumi.Input<string>;
    /**
     * Fill in ALL, which means this rule will take effect on all IP addresses.
     */
    clientIp: pulumi.Input<string>;
    /**
     * Custom HTTP code returned when the request is blocked. Required if PageMode=0 or 1.
     */
    code: pulumi.Input<number>;
    /**
     * The layout template of the response page. Required if PageMode=0 or 1.
     */
    contentType?: pulumi.Input<string>;
    /**
     * Rule description.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable the rule.
     */
    enable: pulumi.Input<number>;
    /**
     * Domain name to be protected.
     */
    host: pulumi.Input<string>;
    /**
     * Rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * The layout template of the response page.
     */
    pageMode: pulumi.Input<number>;
    /**
     * Action to be taken on requests that match the rule.
     */
    policy: pulumi.Input<number>;
    /**
     * The name of the project to which your domain names belong.
     */
    projectName?: pulumi.Input<string>;
    /**
     * The path where users should be redirected.
     */
    redirectUrl?: pulumi.Input<string>;
    /**
     * Match the path.
     */
    url: pulumi.Input<string>;
}
