// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of veenedge available resources
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.veenedge.AvailableResources({
 *     bandwithLimit: 20,
 *     cloudDiskType: "CloudSSD",
 *     instanceType: "ve******rge",
 * });
 * ```
 */
export function availableResources(args: AvailableResourcesArgs, opts?: pulumi.InvokeOptions): Promise<AvailableResourcesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:veenedge/availableResources:AvailableResources", {
        "bandwithLimit": args.bandwithLimit,
        "cloudDiskType": args.cloudDiskType,
        "instanceType": args.instanceType,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking AvailableResources.
 */
export interface AvailableResourcesArgs {
    /**
     * The limit of bandwidth.
     */
    bandwithLimit: number;
    /**
     * The type of storage. The value can be `CloudHDD` or `CloudSSD`.
     */
    cloudDiskType: string;
    /**
     * The type of instance.
     */
    instanceType: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by AvailableResources.
 */
export interface AvailableResourcesResult {
    readonly bandwithLimit: number;
    readonly cloudDiskType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceType: string;
    readonly outputFile?: string;
    /**
     * The collection of resource query.
     */
    readonly regions: outputs.veenedge.AvailableResourcesRegion[];
    /**
     * The total count of resource query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of veenedge available resources
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const default = volcengine.veenedge.AvailableResources({
 *     bandwithLimit: 20,
 *     cloudDiskType: "CloudSSD",
 *     instanceType: "ve******rge",
 * });
 * ```
 */
export function availableResourcesOutput(args: AvailableResourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<AvailableResourcesResult> {
    return pulumi.output(args).apply((a: any) => availableResources(a, opts))
}

/**
 * A collection of arguments for invoking AvailableResources.
 */
export interface AvailableResourcesOutputArgs {
    /**
     * The limit of bandwidth.
     */
    bandwithLimit: pulumi.Input<number>;
    /**
     * The type of storage. The value can be `CloudHDD` or `CloudSSD`.
     */
    cloudDiskType: pulumi.Input<string>;
    /**
     * The type of instance.
     */
    instanceType: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
