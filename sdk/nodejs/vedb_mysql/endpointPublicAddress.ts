// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage vedb mysql endpoint public address
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooZones = volcengine.ecs.Zones({});
 * const fooVpc = new volcengine.vpc.Vpc("fooVpc", {
 *     vpcName: "acc-test-vpc",
 *     cidrBlock: "172.16.0.0/16",
 * });
 * const fooSubnet = new volcengine.vpc.Subnet("fooSubnet", {
 *     subnetName: "acc-test-subnet",
 *     cidrBlock: "172.16.0.0/24",
 *     zoneId: fooZones.then(fooZones => fooZones.zones?.[2]?.id),
 *     vpcId: fooVpc.id,
 * });
 * const fooInstance = new volcengine.vedb_mysql.Instance("fooInstance", {
 *     chargeType: "PostPaid",
 *     storageChargeType: "PostPaid",
 *     dbEngineVersion: "MySQL_8_0",
 *     dbMinorVersion: "3.0",
 *     nodeNumber: 2,
 *     nodeSpec: "vedb.mysql.x4.large",
 *     subnetId: fooSubnet.id,
 *     instanceName: "tf-test",
 *     projectName: "default",
 *     tags: [
 *         {
 *             key: "tftest",
 *             value: "tftest",
 *         },
 *         {
 *             key: "tftest2",
 *             value: "tftest2",
 *         },
 *     ],
 * });
 * const fooInstances = volcengine.vedb_mysql.InstancesOutput({
 *     instanceId: fooInstance.id,
 * });
 * const fooEndpoint = new volcengine.vedb_mysql.Endpoint("fooEndpoint", {
 *     endpointType: "Custom",
 *     instanceId: fooInstance.id,
 *     nodeIds: [
 *         fooInstances.apply(fooInstances => fooInstances.instances?.[0]?.nodes?.[0]?.nodeId),
 *         fooInstances.apply(fooInstances => fooInstances.instances?.[0]?.nodes?.[1]?.nodeId),
 *     ],
 *     readWriteMode: "ReadWrite",
 *     endpointName: "tf-test",
 *     description: "tf test",
 *     masterAcceptReadRequests: true,
 *     distributedTransaction: true,
 *     consistLevel: "Session",
 *     consistTimeout: 100000,
 *     consistTimeoutAction: "ReadMaster",
 * });
 * const fooAddress = new volcengine.eip.Address("fooAddress", {
 *     billingType: "PostPaidByBandwidth",
 *     bandwidth: 1,
 *     isp: "ChinaUnicom",
 *     description: "acc-test",
 *     projectName: "default",
 * });
 * const fooEndpointPublicAddress = new volcengine.vedb_mysql.EndpointPublicAddress("fooEndpointPublicAddress", {
 *     eipId: fooAddress.id,
 *     endpointId: fooEndpoint.endpointId,
 *     instanceId: fooInstance.id,
 * });
 * ```
 *
 * ## Import
 *
 * VedbMysqlEndpointPublicAddress can be imported using the instance id, endpoint id and the eip id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:vedb_mysql/endpointPublicAddress:EndpointPublicAddress default vedbm-iqnh3a7z****:vedbm-2pf2xk5v****-Custom-50yv:eip-xxxx
 * ```
 */
export class EndpointPublicAddress extends pulumi.CustomResource {
    /**
     * Get an existing EndpointPublicAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointPublicAddressState, opts?: pulumi.CustomResourceOptions): EndpointPublicAddress {
        return new EndpointPublicAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:vedb_mysql/endpointPublicAddress:EndpointPublicAddress';

    /**
     * Returns true if the given object is an instance of EndpointPublicAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EndpointPublicAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EndpointPublicAddress.__pulumiType;
    }

    /**
     * EIP ID that needs to be bound to the instance.
     */
    public readonly eipId!: pulumi.Output<string>;
    /**
     * The endpoint id.
     */
    public readonly endpointId!: pulumi.Output<string>;
    /**
     * The instance id.
     */
    public readonly instanceId!: pulumi.Output<string>;

    /**
     * Create a EndpointPublicAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointPublicAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EndpointPublicAddressArgs | EndpointPublicAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EndpointPublicAddressState | undefined;
            resourceInputs["eipId"] = state ? state.eipId : undefined;
            resourceInputs["endpointId"] = state ? state.endpointId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
        } else {
            const args = argsOrState as EndpointPublicAddressArgs | undefined;
            if ((!args || args.eipId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eipId'");
            }
            if ((!args || args.endpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["eipId"] = args ? args.eipId : undefined;
            resourceInputs["endpointId"] = args ? args.endpointId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EndpointPublicAddress.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EndpointPublicAddress resources.
 */
export interface EndpointPublicAddressState {
    /**
     * EIP ID that needs to be bound to the instance.
     */
    eipId?: pulumi.Input<string>;
    /**
     * The endpoint id.
     */
    endpointId?: pulumi.Input<string>;
    /**
     * The instance id.
     */
    instanceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EndpointPublicAddress resource.
 */
export interface EndpointPublicAddressArgs {
    /**
     * EIP ID that needs to be bound to the instance.
     */
    eipId: pulumi.Input<string>;
    /**
     * The endpoint id.
     */
    endpointId: pulumi.Input<string>;
    /**
     * The instance id.
     */
    instanceId: pulumi.Input<string>;
}
