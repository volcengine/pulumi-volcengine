// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage private zone resolver endpoint
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.private_zone.ResolverEndpoint("foo", {
 *     ipConfigs: [
 *         {
 *             azId: "cn-beijing-a",
 *             ip: "172.16.0.2",
 *             subnetId: "subnet-mj2o4co2m2v45smt1bx1****",
 *         },
 *         {
 *             azId: "cn-beijing-a",
 *             ip: "172.16.0.3",
 *             subnetId: "subnet-mj2o4co2m2v45smt1bx1****",
 *         },
 *         {
 *             azId: "cn-beijing-a",
 *             ip: "172.16.0.4",
 *             subnetId: "subnet-mj2o4co2m2v45smt1bx1****",
 *         },
 *         {
 *             azId: "cn-beijing-a",
 *             ip: "172.16.0.5",
 *             subnetId: "subnet-mj2o4co2m2v45smt1bx1****",
 *         },
 *     ],
 *     securityGroupId: "sg-mj2nsckay29s5smt1b0d****",
 *     vpcId: "vpc-13f9uuuqfdjb43n6nu5p1****",
 *     vpcRegion: "cn-beijing",
 * });
 * ```
 *
 * ## Import
 *
 * PrivateZoneResolverEndpoint can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:private_zone/resolverEndpoint:ResolverEndpoint default resource_id
 * ```
 */
export class ResolverEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ResolverEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResolverEndpointState, opts?: pulumi.CustomResourceOptions): ResolverEndpoint {
        return new ResolverEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:private_zone/resolverEndpoint:ResolverEndpoint';

    /**
     * Returns true if the given object is an instance of ResolverEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResolverEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResolverEndpoint.__pulumiType;
    }

    /**
     * DNS request forwarding direction for terminal nodes. OUTBOUND: (default) Outbound terminal nodes forward DNS query requests from within the VPC to external DNS servers. INBOUND: Inbound terminal nodes forward DNS query requests from external sources to resolvers.
     */
    public readonly direction!: pulumi.Output<string | undefined>;
    /**
     * Availability zones, subnets, and IP configurations of terminal nodes.
     */
    public readonly ipConfigs!: pulumi.Output<outputs.private_zone.ResolverEndpointIpConfig[]>;
    /**
     * The name of the private zone resolver endpoint.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The security group ID of the endpoint.
     */
    public readonly securityGroupId!: pulumi.Output<string>;
    /**
     * The VPC ID of the endpoint.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The VPC region of the endpoint.
     */
    public readonly vpcRegion!: pulumi.Output<string>;

    /**
     * Create a ResolverEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResolverEndpointArgs | ResolverEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResolverEndpointState | undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["ipConfigs"] = state ? state.ipConfigs : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcRegion"] = state ? state.vpcRegion : undefined;
        } else {
            const args = argsOrState as ResolverEndpointArgs | undefined;
            if ((!args || args.ipConfigs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipConfigs'");
            }
            if ((!args || args.securityGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vpcRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcRegion'");
            }
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["ipConfigs"] = args ? args.ipConfigs : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcRegion"] = args ? args.vpcRegion : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResolverEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResolverEndpoint resources.
 */
export interface ResolverEndpointState {
    /**
     * DNS request forwarding direction for terminal nodes. OUTBOUND: (default) Outbound terminal nodes forward DNS query requests from within the VPC to external DNS servers. INBOUND: Inbound terminal nodes forward DNS query requests from external sources to resolvers.
     */
    direction?: pulumi.Input<string>;
    /**
     * Availability zones, subnets, and IP configurations of terminal nodes.
     */
    ipConfigs?: pulumi.Input<pulumi.Input<inputs.private_zone.ResolverEndpointIpConfig>[]>;
    /**
     * The name of the private zone resolver endpoint.
     */
    name?: pulumi.Input<string>;
    /**
     * The security group ID of the endpoint.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * The VPC ID of the endpoint.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The VPC region of the endpoint.
     */
    vpcRegion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResolverEndpoint resource.
 */
export interface ResolverEndpointArgs {
    /**
     * DNS request forwarding direction for terminal nodes. OUTBOUND: (default) Outbound terminal nodes forward DNS query requests from within the VPC to external DNS servers. INBOUND: Inbound terminal nodes forward DNS query requests from external sources to resolvers.
     */
    direction?: pulumi.Input<string>;
    /**
     * Availability zones, subnets, and IP configurations of terminal nodes.
     */
    ipConfigs: pulumi.Input<pulumi.Input<inputs.private_zone.ResolverEndpointIpConfig>[]>;
    /**
     * The name of the private zone resolver endpoint.
     */
    name?: pulumi.Input<string>;
    /**
     * The security group ID of the endpoint.
     */
    securityGroupId: pulumi.Input<string>;
    /**
     * The VPC ID of the endpoint.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The VPC region of the endpoint.
     */
    vpcRegion: pulumi.Input<string>;
}
