// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage private zone
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.private_zone.PrivateZone("foo", {
 *     intelligentMode: true,
 *     loadBalanceMode: true,
 *     recursionMode: true,
 *     remark: "acc-test-new",
 *     vpcs: [
 *         {
 *             vpcId: "vpc-rs4mi0jedipsv0x57pf****",
 *         },
 *         {
 *             region: "cn-shanghai",
 *             vpcId: "vpc-3qdzk9xju6o747prml0jk****",
 *         },
 *     ],
 *     zoneName: "acc-test-pz.com",
 * });
 * ```
 *
 * ## Import
 *
 * PrivateZone can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:private_zone/privateZone:PrivateZone default resource_id
 * ```
 */
export class PrivateZone extends pulumi.CustomResource {
    /**
     * Get an existing PrivateZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateZoneState, opts?: pulumi.CustomResourceOptions): PrivateZone {
        return new PrivateZone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:private_zone/privateZone:PrivateZone';

    /**
     * Returns true if the given object is an instance of PrivateZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateZone.__pulumiType;
    }

    /**
     * Whether to enable the intelligent mode of the private zone.
     */
    public readonly intelligentMode!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable the load balance mode of the private zone.
     */
    public readonly loadBalanceMode!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable the recursion mode of the private zone.
     */
    public readonly recursionMode!: pulumi.Output<boolean | undefined>;
    /**
     * The remark of the private zone.
     */
    public readonly remark!: pulumi.Output<string | undefined>;
    /**
     * The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource volcengine.private_zone.UserVpcAuthorization to complete the authorization.
     */
    public readonly vpcs!: pulumi.Output<outputs.private_zone.PrivateZoneVpc[]>;
    /**
     * The name of the private zone.
     */
    public readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a PrivateZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateZoneArgs | PrivateZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateZoneState | undefined;
            resourceInputs["intelligentMode"] = state ? state.intelligentMode : undefined;
            resourceInputs["loadBalanceMode"] = state ? state.loadBalanceMode : undefined;
            resourceInputs["recursionMode"] = state ? state.recursionMode : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
            resourceInputs["vpcs"] = state ? state.vpcs : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as PrivateZoneArgs | undefined;
            if ((!args || args.vpcs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcs'");
            }
            if ((!args || args.zoneName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneName'");
            }
            resourceInputs["intelligentMode"] = args ? args.intelligentMode : undefined;
            resourceInputs["loadBalanceMode"] = args ? args.loadBalanceMode : undefined;
            resourceInputs["recursionMode"] = args ? args.recursionMode : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
            resourceInputs["vpcs"] = args ? args.vpcs : undefined;
            resourceInputs["zoneName"] = args ? args.zoneName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateZone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrivateZone resources.
 */
export interface PrivateZoneState {
    /**
     * Whether to enable the intelligent mode of the private zone.
     */
    intelligentMode?: pulumi.Input<boolean>;
    /**
     * Whether to enable the load balance mode of the private zone.
     */
    loadBalanceMode?: pulumi.Input<boolean>;
    /**
     * Whether to enable the recursion mode of the private zone.
     */
    recursionMode?: pulumi.Input<boolean>;
    /**
     * The remark of the private zone.
     */
    remark?: pulumi.Input<string>;
    /**
     * The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource volcengine.private_zone.UserVpcAuthorization to complete the authorization.
     */
    vpcs?: pulumi.Input<pulumi.Input<inputs.private_zone.PrivateZoneVpc>[]>;
    /**
     * The name of the private zone.
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivateZone resource.
 */
export interface PrivateZoneArgs {
    /**
     * Whether to enable the intelligent mode of the private zone.
     */
    intelligentMode?: pulumi.Input<boolean>;
    /**
     * Whether to enable the load balance mode of the private zone.
     */
    loadBalanceMode?: pulumi.Input<boolean>;
    /**
     * Whether to enable the recursion mode of the private zone.
     */
    recursionMode?: pulumi.Input<boolean>;
    /**
     * The remark of the private zone.
     */
    remark?: pulumi.Input<string>;
    /**
     * The bind vpc object of the private zone. If you want to bind another account's VPC, you need to first use resource volcengine.private_zone.UserVpcAuthorization to complete the authorization.
     */
    vpcs: pulumi.Input<pulumi.Input<inputs.private_zone.PrivateZoneVpc>[]>;
    /**
     * The name of the private zone.
     */
    zoneName: pulumi.Input<string>;
}
