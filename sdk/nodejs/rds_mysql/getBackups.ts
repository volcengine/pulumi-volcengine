// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of rds mysql backups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.rds_mysql.getBackups({
 *     backupEndTime: "",
 *     backupId: "",
 *     backupMethod: "",
 *     backupStartTime: "",
 *     backupStatus: "",
 *     backupType: "",
 *     createType: "",
 *     instanceId: "",
 * });
 * ```
 */
export function getBackups(args?: GetBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcengine:rds_mysql/getBackups:getBackups", {
        "backupEndTime": args.backupEndTime,
        "backupId": args.backupId,
        "backupMethod": args.backupMethod,
        "backupStartTime": args.backupStartTime,
        "backupStatus": args.backupStatus,
        "backupType": args.backupType,
        "createType": args.createType,
        "instanceId": args.instanceId,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackups.
 */
export interface GetBackupsArgs {
    /**
     * The end time of the backup.
     */
    backupEndTime?: string;
    /**
     * The id of the backup.
     */
    backupId?: string;
    /**
     * Backup type, value: Physical: Physical backup. Default value. Logical: Logical backup. Description: There is no default value. When this field is not passed, backups of all states under the query conditions limited by other fields are returned.
     */
    backupMethod?: string;
    /**
     * The start time of the backup.
     */
    backupStartTime?: string;
    /**
     * Backup status, values: Success: Success. Failed: Failed. Running: In progress. Description: There is no default value. When this field is not passed, all backups in all states under the query conditions limited by other fields are returned.
     */
    backupStatus?: string;
    /**
     * Backup method, value: Full: Full backup under physical backup type or library table backup under logical backup type. Increment: Incremental backup under physical backup type. DumpAll: Full database backup under logical backup type. Description: There is no default value. When this field is not passed, all backups of all methods under the query conditions limited by other fields are returned.
     */
    backupType?: string;
    /**
     * Creator of backup. Values: System: System. User: User. Description: There is no default value. When this field is not passed, all types of backups under the query conditions limited by other fields are returned.
     */
    createType?: string;
    /**
     * The id of the instance.
     */
    instanceId?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
}

/**
 * A collection of values returned by getBackups.
 */
export interface GetBackupsResult {
    /**
     * The end time of backup, in the format of yyyy-MM-ddTHH:mm:ss.sssZ (UTC time).
     */
    readonly backupEndTime?: string;
    /**
     * The id of the backup.
     */
    readonly backupId?: string;
    /**
     * Backup type, value: Physical: Physical backup. Logical: Logical backup.
     */
    readonly backupMethod?: string;
    /**
     * The start time of backup, in the format of yyyy-MM-ddTHH:mm:ss.sssZ (UTC time).
     */
    readonly backupStartTime?: string;
    /**
     * Backup status, values: Success. Failed. Running.
     */
    readonly backupStatus?: string;
    /**
     * Backup method, values:
     * Full: Full backup under physical backup type or library table backup under logical backup type.
     * Increment: Incremental backup under physical backup type (created by the system).
     * DumpAll: Full database backup under logical backup type.
     * Description:
     * There is no default value. When this field is not passed, all types of backups under the query conditions limited by other fields are returned.
     */
    readonly backupType?: string;
    /**
     * The collection of query.
     */
    readonly backups: outputs.rds_mysql.GetBackupsBackup[];
    /**
     * Creator of backup. Values: System. User.
     */
    readonly createType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId?: string;
    readonly outputFile?: string;
    /**
     * The total count of query.
     */
    readonly totalCount: number;
}
/**
 * Use this data source to query detailed information of rds mysql backups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = volcengine.rds_mysql.getBackups({
 *     backupEndTime: "",
 *     backupId: "",
 *     backupMethod: "",
 *     backupStartTime: "",
 *     backupStatus: "",
 *     backupType: "",
 *     createType: "",
 *     instanceId: "",
 * });
 * ```
 */
export function getBackupsOutput(args?: GetBackupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupsResult> {
    return pulumi.output(args).apply((a: any) => getBackups(a, opts))
}

/**
 * A collection of arguments for invoking getBackups.
 */
export interface GetBackupsOutputArgs {
    /**
     * The end time of the backup.
     */
    backupEndTime?: pulumi.Input<string>;
    /**
     * The id of the backup.
     */
    backupId?: pulumi.Input<string>;
    /**
     * Backup type, value: Physical: Physical backup. Default value. Logical: Logical backup. Description: There is no default value. When this field is not passed, backups of all states under the query conditions limited by other fields are returned.
     */
    backupMethod?: pulumi.Input<string>;
    /**
     * The start time of the backup.
     */
    backupStartTime?: pulumi.Input<string>;
    /**
     * Backup status, values: Success: Success. Failed: Failed. Running: In progress. Description: There is no default value. When this field is not passed, all backups in all states under the query conditions limited by other fields are returned.
     */
    backupStatus?: pulumi.Input<string>;
    /**
     * Backup method, value: Full: Full backup under physical backup type or library table backup under logical backup type. Increment: Incremental backup under physical backup type. DumpAll: Full database backup under logical backup type. Description: There is no default value. When this field is not passed, all backups of all methods under the query conditions limited by other fields are returned.
     */
    backupType?: pulumi.Input<string>;
    /**
     * Creator of backup. Values: System: System. User: User. Description: There is no default value. When this field is not passed, all types of backups under the query conditions limited by other fields are returned.
     */
    createType?: pulumi.Input<string>;
    /**
     * The id of the instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
}
