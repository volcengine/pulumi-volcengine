// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage rds mysql allowlist associate
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.rds_mysql.AllowlistAssociate("foo", {
 *     allowListId: "acl-15451212dcfa473baeda24be4baa02fe",
 *     instanceId: "mysql-1b2c7b2d7583",
 * });
 * ```
 *
 * ## Import
 *
 * RDS AllowList Associate can be imported using the instance id and allow list id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:rds_mysql/allowlistAssociate:AllowlistAssociate default rds-mysql-h441603c68aaa:acl-d1fd76693bd54e658912e7337d5b****
 * ```
 */
export class AllowlistAssociate extends pulumi.CustomResource {
    /**
     * Get an existing AllowlistAssociate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AllowlistAssociateState, opts?: pulumi.CustomResourceOptions): AllowlistAssociate {
        return new AllowlistAssociate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:rds_mysql/allowlistAssociate:AllowlistAssociate';

    /**
     * Returns true if the given object is an instance of AllowlistAssociate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AllowlistAssociate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AllowlistAssociate.__pulumiType;
    }

    /**
     * The id of the allow list.
     */
    public readonly allowListId!: pulumi.Output<string>;
    /**
     * The id of the mysql instance.
     */
    public readonly instanceId!: pulumi.Output<string>;

    /**
     * Create a AllowlistAssociate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AllowlistAssociateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AllowlistAssociateArgs | AllowlistAssociateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AllowlistAssociateState | undefined;
            resourceInputs["allowListId"] = state ? state.allowListId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
        } else {
            const args = argsOrState as AllowlistAssociateArgs | undefined;
            if ((!args || args.allowListId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowListId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["allowListId"] = args ? args.allowListId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AllowlistAssociate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AllowlistAssociate resources.
 */
export interface AllowlistAssociateState {
    /**
     * The id of the allow list.
     */
    allowListId?: pulumi.Input<string>;
    /**
     * The id of the mysql instance.
     */
    instanceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AllowlistAssociate resource.
 */
export interface AllowlistAssociateArgs {
    /**
     * The id of the allow list.
     */
    allowListId: pulumi.Input<string>;
    /**
     * The id of the mysql instance.
     */
    instanceId: pulumi.Input<string>;
}
