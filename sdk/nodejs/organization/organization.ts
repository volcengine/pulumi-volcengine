// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage organization
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const foo = new volcengine.organization.Organization("foo", {});
 * ```
 *
 * ## Import
 *
 * Organization can be imported using the id, e.g.
 *
 * ```sh
 * $ pulumi import volcengine:organization/organization:Organization default resource_id
 * ```
 */
export class Organization extends pulumi.CustomResource {
    /**
     * Get an existing Organization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationState, opts?: pulumi.CustomResourceOptions): Organization {
        return new Organization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:organization/organization:Organization';

    /**
     * Returns true if the given object is an instance of Organization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Organization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Organization.__pulumiType;
    }

    /**
     * The account id of the organization owner.
     */
    public /*out*/ readonly accountId!: pulumi.Output<number>;
    /**
     * The account name of the organization owner.
     */
    public /*out*/ readonly accountName!: pulumi.Output<string>;
    /**
     * The created time of the organization.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * The delete uk of the organization.
     */
    public /*out*/ readonly deleteUk!: pulumi.Output<string>;
    /**
     * The deleted time of the organization.
     */
    public /*out*/ readonly deletedTime!: pulumi.Output<string>;
    /**
     * The description of the organization.
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * The main name of the organization owner.
     */
    public /*out*/ readonly mainName!: pulumi.Output<string>;
    /**
     * The name of the organization.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The owner id of the organization.
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * The status of the organization.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * The type of the organization.
     */
    public /*out*/ readonly type!: pulumi.Output<number>;
    /**
     * The updated time of the organization.
     */
    public /*out*/ readonly updatedTime!: pulumi.Output<string>;

    /**
     * Create a Organization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrganizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationArgs | OrganizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["deleteUk"] = state ? state.deleteUk : undefined;
            resourceInputs["deletedTime"] = state ? state.deletedTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["mainName"] = state ? state.mainName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedTime"] = state ? state.updatedTime : undefined;
        } else {
            const args = argsOrState as OrganizationArgs | undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["accountName"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["deleteUk"] = undefined /*out*/;
            resourceInputs["deletedTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["mainName"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Organization.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Organization resources.
 */
export interface OrganizationState {
    /**
     * The account id of the organization owner.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The account name of the organization owner.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The created time of the organization.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * The delete uk of the organization.
     */
    deleteUk?: pulumi.Input<string>;
    /**
     * The deleted time of the organization.
     */
    deletedTime?: pulumi.Input<string>;
    /**
     * The description of the organization.
     */
    description?: pulumi.Input<string>;
    /**
     * The main name of the organization owner.
     */
    mainName?: pulumi.Input<string>;
    /**
     * The name of the organization.
     */
    name?: pulumi.Input<string>;
    /**
     * The owner id of the organization.
     */
    owner?: pulumi.Input<string>;
    /**
     * The status of the organization.
     */
    status?: pulumi.Input<number>;
    /**
     * The type of the organization.
     */
    type?: pulumi.Input<number>;
    /**
     * The updated time of the organization.
     */
    updatedTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Organization resource.
 */
export interface OrganizationArgs {
}
