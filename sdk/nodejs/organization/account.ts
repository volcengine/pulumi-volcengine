// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage organization account
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@volcengine/pulumi";
 *
 * const fooUnit = new volcengine.organization.Unit("fooUnit", {
 *     parentId: "730671013833632****",
 *     description: "acc-test",
 * });
 * const fooAccount = new volcengine.organization.Account("fooAccount", {
 *     accountName: "acc-test-account",
 *     showName: "acc-test-account",
 *     description: "acc-test",
 *     orgUnitId: fooUnit.id,
 *     verificationRelationId: "210026****",
 *     tags: [{
 *         key: "k1",
 *         value: "v1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * OrganizationAccount can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:organization/account:Account default resource_id
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:organization/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * The name of the account.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * The description of the account.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the iam role.
     */
    public /*out*/ readonly iamRole!: pulumi.Output<string>;
    /**
     * The id of the organization.
     */
    public /*out*/ readonly orgId!: pulumi.Output<string>;
    /**
     * The id of the organization unit. Default is root organization.
     */
    public readonly orgUnitId!: pulumi.Output<string>;
    /**
     * The name of the organization unit.
     */
    public /*out*/ readonly orgUnitName!: pulumi.Output<string>;
    /**
     * The id of the organization verification.
     */
    public /*out*/ readonly orgVerificationId!: pulumi.Output<string>;
    /**
     * The owner id of the account.
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * The show name of the account.
     */
    public readonly showName!: pulumi.Output<string>;
    /**
     * Tags.
     */
    public readonly tags!: pulumi.Output<outputs.organization.AccountTag[] | undefined>;
    /**
     * The verification relation id of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    public readonly verificationRelationId!: pulumi.Output<string | undefined>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["iamRole"] = state ? state.iamRole : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["orgUnitId"] = state ? state.orgUnitId : undefined;
            resourceInputs["orgUnitName"] = state ? state.orgUnitName : undefined;
            resourceInputs["orgVerificationId"] = state ? state.orgVerificationId : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["showName"] = state ? state.showName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["verificationRelationId"] = state ? state.verificationRelationId : undefined;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.showName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'showName'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["orgUnitId"] = args ? args.orgUnitId : undefined;
            resourceInputs["showName"] = args ? args.showName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["verificationRelationId"] = args ? args.verificationRelationId : undefined;
            resourceInputs["iamRole"] = undefined /*out*/;
            resourceInputs["orgId"] = undefined /*out*/;
            resourceInputs["orgUnitName"] = undefined /*out*/;
            resourceInputs["orgVerificationId"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * The name of the account.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The description of the account.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the iam role.
     */
    iamRole?: pulumi.Input<string>;
    /**
     * The id of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * The id of the organization unit. Default is root organization.
     */
    orgUnitId?: pulumi.Input<string>;
    /**
     * The name of the organization unit.
     */
    orgUnitName?: pulumi.Input<string>;
    /**
     * The id of the organization verification.
     */
    orgVerificationId?: pulumi.Input<string>;
    /**
     * The owner id of the account.
     */
    owner?: pulumi.Input<string>;
    /**
     * The show name of the account.
     */
    showName?: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.organization.AccountTag>[]>;
    /**
     * The verification relation id of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    verificationRelationId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The name of the account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The description of the account.
     */
    description?: pulumi.Input<string>;
    /**
     * The id of the organization unit. Default is root organization.
     */
    orgUnitId?: pulumi.Input<string>;
    /**
     * The show name of the account.
     */
    showName: pulumi.Input<string>;
    /**
     * Tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.organization.AccountTag>[]>;
    /**
     * The verification relation id of the account. When importing resources, this attribute will not be imported. If this attribute is set, please use lifecycle and ignoreChanges ignore changes in fields.
     */
    verificationRelationId?: pulumi.Input<string>;
}
